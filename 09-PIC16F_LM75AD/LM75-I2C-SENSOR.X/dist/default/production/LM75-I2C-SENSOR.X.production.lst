

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Nov 14 19:45:43 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2,group=2
    55                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2,group=2
    58                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2,group=2
    59                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text6_split_1,local,class=CODE,space=0,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Generated 12/10/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F877A Definitions
   102                           ; 
   103                           ; SFR Addresses
   104     0004                     fsr             equ	4
   105     0004                     fsr0            equ	4
   106     0000                     indf            equ	0
   107     0000                     indf0           equ	0
   108     0002                     pc              equ	2
   109     0002                     pcl             equ	2
   110     000A                     pclath          equ	10
   111     0003                     status          equ	3
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0000                     INDF            equ	0	;# 
   173     0001                     TMR0            equ	1	;# 
   174     0002                     PCL             equ	2	;# 
   175     0003                     STATUS          equ	3	;# 
   176     0004                     FSR             equ	4	;# 
   177     0005                     PORTA           equ	5	;# 
   178     0006                     PORTB           equ	6	;# 
   179     0007                     PORTC           equ	7	;# 
   180     0008                     PORTD           equ	8	;# 
   181     0009                     PORTE           equ	9	;# 
   182     000A                     PCLATH          equ	10	;# 
   183     000B                     INTCON          equ	11	;# 
   184     000C                     PIR1            equ	12	;# 
   185     000D                     PIR2            equ	13	;# 
   186     000E                     TMR1            equ	14	;# 
   187     000E                     TMR1L           equ	14	;# 
   188     000F                     TMR1H           equ	15	;# 
   189     0010                     T1CON           equ	16	;# 
   190     0011                     TMR2            equ	17	;# 
   191     0012                     T2CON           equ	18	;# 
   192     0013                     SSPBUF          equ	19	;# 
   193     0014                     SSPCON          equ	20	;# 
   194     0015                     CCPR1           equ	21	;# 
   195     0015                     CCPR1L          equ	21	;# 
   196     0016                     CCPR1H          equ	22	;# 
   197     0017                     CCP1CON         equ	23	;# 
   198     0018                     RCSTA           equ	24	;# 
   199     0019                     TXREG           equ	25	;# 
   200     001A                     RCREG           equ	26	;# 
   201     001B                     CCPR2           equ	27	;# 
   202     001B                     CCPR2L          equ	27	;# 
   203     001C                     CCPR2H          equ	28	;# 
   204     001D                     CCP2CON         equ	29	;# 
   205     001E                     ADRESH          equ	30	;# 
   206     001F                     ADCON0          equ	31	;# 
   207     0081                     OPTION_REG      equ	129	;# 
   208     0085                     TRISA           equ	133	;# 
   209     0086                     TRISB           equ	134	;# 
   210     0087                     TRISC           equ	135	;# 
   211     0088                     TRISD           equ	136	;# 
   212     0089                     TRISE           equ	137	;# 
   213     008C                     PIE1            equ	140	;# 
   214     008D                     PIE2            equ	141	;# 
   215     008E                     PCON            equ	142	;# 
   216     0091                     SSPCON2         equ	145	;# 
   217     0092                     PR2             equ	146	;# 
   218     0093                     SSPADD          equ	147	;# 
   219     0094                     SSPSTAT         equ	148	;# 
   220     0098                     TXSTA           equ	152	;# 
   221     0099                     SPBRG           equ	153	;# 
   222     009C                     CMCON           equ	156	;# 
   223     009D                     CVRCON          equ	157	;# 
   224     009E                     ADRESL          equ	158	;# 
   225     009F                     ADCON1          equ	159	;# 
   226     010C                     EEDATA          equ	268	;# 
   227     010D                     EEADR           equ	269	;# 
   228     010E                     EEDATH          equ	270	;# 
   229     010F                     EEADRH          equ	271	;# 
   230     018C                     EECON1          equ	396	;# 
   231     018D                     EECON2          equ	397	;# 
   232     0000                     INDF            equ	0	;# 
   233     0001                     TMR0            equ	1	;# 
   234     0002                     PCL             equ	2	;# 
   235     0003                     STATUS          equ	3	;# 
   236     0004                     FSR             equ	4	;# 
   237     0005                     PORTA           equ	5	;# 
   238     0006                     PORTB           equ	6	;# 
   239     0007                     PORTC           equ	7	;# 
   240     0008                     PORTD           equ	8	;# 
   241     0009                     PORTE           equ	9	;# 
   242     000A                     PCLATH          equ	10	;# 
   243     000B                     INTCON          equ	11	;# 
   244     000C                     PIR1            equ	12	;# 
   245     000D                     PIR2            equ	13	;# 
   246     000E                     TMR1            equ	14	;# 
   247     000E                     TMR1L           equ	14	;# 
   248     000F                     TMR1H           equ	15	;# 
   249     0010                     T1CON           equ	16	;# 
   250     0011                     TMR2            equ	17	;# 
   251     0012                     T2CON           equ	18	;# 
   252     0013                     SSPBUF          equ	19	;# 
   253     0014                     SSPCON          equ	20	;# 
   254     0015                     CCPR1           equ	21	;# 
   255     0015                     CCPR1L          equ	21	;# 
   256     0016                     CCPR1H          equ	22	;# 
   257     0017                     CCP1CON         equ	23	;# 
   258     0018                     RCSTA           equ	24	;# 
   259     0019                     TXREG           equ	25	;# 
   260     001A                     RCREG           equ	26	;# 
   261     001B                     CCPR2           equ	27	;# 
   262     001B                     CCPR2L          equ	27	;# 
   263     001C                     CCPR2H          equ	28	;# 
   264     001D                     CCP2CON         equ	29	;# 
   265     001E                     ADRESH          equ	30	;# 
   266     001F                     ADCON0          equ	31	;# 
   267     0081                     OPTION_REG      equ	129	;# 
   268     0085                     TRISA           equ	133	;# 
   269     0086                     TRISB           equ	134	;# 
   270     0087                     TRISC           equ	135	;# 
   271     0088                     TRISD           equ	136	;# 
   272     0089                     TRISE           equ	137	;# 
   273     008C                     PIE1            equ	140	;# 
   274     008D                     PIE2            equ	141	;# 
   275     008E                     PCON            equ	142	;# 
   276     0091                     SSPCON2         equ	145	;# 
   277     0092                     PR2             equ	146	;# 
   278     0093                     SSPADD          equ	147	;# 
   279     0094                     SSPSTAT         equ	148	;# 
   280     0098                     TXSTA           equ	152	;# 
   281     0099                     SPBRG           equ	153	;# 
   282     009C                     CMCON           equ	156	;# 
   283     009D                     CVRCON          equ	157	;# 
   284     009E                     ADRESL          equ	158	;# 
   285     009F                     ADCON1          equ	159	;# 
   286     010C                     EEDATA          equ	268	;# 
   287     010D                     EEADR           equ	269	;# 
   288     010E                     EEDATH          equ	270	;# 
   289     010F                     EEADRH          equ	271	;# 
   290     018C                     EECON1          equ	396	;# 
   291     018D                     EECON2          equ	397	;# 
   292     0000                     INDF            equ	0	;# 
   293     0001                     TMR0            equ	1	;# 
   294     0002                     PCL             equ	2	;# 
   295     0003                     STATUS          equ	3	;# 
   296     0004                     FSR             equ	4	;# 
   297     0005                     PORTA           equ	5	;# 
   298     0006                     PORTB           equ	6	;# 
   299     0007                     PORTC           equ	7	;# 
   300     0008                     PORTD           equ	8	;# 
   301     0009                     PORTE           equ	9	;# 
   302     000A                     PCLATH          equ	10	;# 
   303     000B                     INTCON          equ	11	;# 
   304     000C                     PIR1            equ	12	;# 
   305     000D                     PIR2            equ	13	;# 
   306     000E                     TMR1            equ	14	;# 
   307     000E                     TMR1L           equ	14	;# 
   308     000F                     TMR1H           equ	15	;# 
   309     0010                     T1CON           equ	16	;# 
   310     0011                     TMR2            equ	17	;# 
   311     0012                     T2CON           equ	18	;# 
   312     0013                     SSPBUF          equ	19	;# 
   313     0014                     SSPCON          equ	20	;# 
   314     0015                     CCPR1           equ	21	;# 
   315     0015                     CCPR1L          equ	21	;# 
   316     0016                     CCPR1H          equ	22	;# 
   317     0017                     CCP1CON         equ	23	;# 
   318     0018                     RCSTA           equ	24	;# 
   319     0019                     TXREG           equ	25	;# 
   320     001A                     RCREG           equ	26	;# 
   321     001B                     CCPR2           equ	27	;# 
   322     001B                     CCPR2L          equ	27	;# 
   323     001C                     CCPR2H          equ	28	;# 
   324     001D                     CCP2CON         equ	29	;# 
   325     001E                     ADRESH          equ	30	;# 
   326     001F                     ADCON0          equ	31	;# 
   327     0081                     OPTION_REG      equ	129	;# 
   328     0085                     TRISA           equ	133	;# 
   329     0086                     TRISB           equ	134	;# 
   330     0087                     TRISC           equ	135	;# 
   331     0088                     TRISD           equ	136	;# 
   332     0089                     TRISE           equ	137	;# 
   333     008C                     PIE1            equ	140	;# 
   334     008D                     PIE2            equ	141	;# 
   335     008E                     PCON            equ	142	;# 
   336     0091                     SSPCON2         equ	145	;# 
   337     0092                     PR2             equ	146	;# 
   338     0093                     SSPADD          equ	147	;# 
   339     0094                     SSPSTAT         equ	148	;# 
   340     0098                     TXSTA           equ	152	;# 
   341     0099                     SPBRG           equ	153	;# 
   342     009C                     CMCON           equ	156	;# 
   343     009D                     CVRCON          equ	157	;# 
   344     009E                     ADRESL          equ	158	;# 
   345     009F                     ADCON1          equ	159	;# 
   346     010C                     EEDATA          equ	268	;# 
   347     010D                     EEADR           equ	269	;# 
   348     010E                     EEDATH          equ	270	;# 
   349     010F                     EEADRH          equ	271	;# 
   350     018C                     EECON1          equ	396	;# 
   351     018D                     EECON2          equ	397	;# 
   352     0000                     INDF            equ	0	;# 
   353     0001                     TMR0            equ	1	;# 
   354     0002                     PCL             equ	2	;# 
   355     0003                     STATUS          equ	3	;# 
   356     0004                     FSR             equ	4	;# 
   357     0005                     PORTA           equ	5	;# 
   358     0006                     PORTB           equ	6	;# 
   359     0007                     PORTC           equ	7	;# 
   360     0008                     PORTD           equ	8	;# 
   361     0009                     PORTE           equ	9	;# 
   362     000A                     PCLATH          equ	10	;# 
   363     000B                     INTCON          equ	11	;# 
   364     000C                     PIR1            equ	12	;# 
   365     000D                     PIR2            equ	13	;# 
   366     000E                     TMR1            equ	14	;# 
   367     000E                     TMR1L           equ	14	;# 
   368     000F                     TMR1H           equ	15	;# 
   369     0010                     T1CON           equ	16	;# 
   370     0011                     TMR2            equ	17	;# 
   371     0012                     T2CON           equ	18	;# 
   372     0013                     SSPBUF          equ	19	;# 
   373     0014                     SSPCON          equ	20	;# 
   374     0015                     CCPR1           equ	21	;# 
   375     0015                     CCPR1L          equ	21	;# 
   376     0016                     CCPR1H          equ	22	;# 
   377     0017                     CCP1CON         equ	23	;# 
   378     0018                     RCSTA           equ	24	;# 
   379     0019                     TXREG           equ	25	;# 
   380     001A                     RCREG           equ	26	;# 
   381     001B                     CCPR2           equ	27	;# 
   382     001B                     CCPR2L          equ	27	;# 
   383     001C                     CCPR2H          equ	28	;# 
   384     001D                     CCP2CON         equ	29	;# 
   385     001E                     ADRESH          equ	30	;# 
   386     001F                     ADCON0          equ	31	;# 
   387     0081                     OPTION_REG      equ	129	;# 
   388     0085                     TRISA           equ	133	;# 
   389     0086                     TRISB           equ	134	;# 
   390     0087                     TRISC           equ	135	;# 
   391     0088                     TRISD           equ	136	;# 
   392     0089                     TRISE           equ	137	;# 
   393     008C                     PIE1            equ	140	;# 
   394     008D                     PIE2            equ	141	;# 
   395     008E                     PCON            equ	142	;# 
   396     0091                     SSPCON2         equ	145	;# 
   397     0092                     PR2             equ	146	;# 
   398     0093                     SSPADD          equ	147	;# 
   399     0094                     SSPSTAT         equ	148	;# 
   400     0098                     TXSTA           equ	152	;# 
   401     0099                     SPBRG           equ	153	;# 
   402     009C                     CMCON           equ	156	;# 
   403     009D                     CVRCON          equ	157	;# 
   404     009E                     ADRESL          equ	158	;# 
   405     009F                     ADCON1          equ	159	;# 
   406     010C                     EEDATA          equ	268	;# 
   407     010D                     EEADR           equ	269	;# 
   408     010E                     EEDATH          equ	270	;# 
   409     010F                     EEADRH          equ	271	;# 
   410     018C                     EECON1          equ	396	;# 
   411     018D                     EECON2          equ	397	;# 
   412     001A                     _RCREG          set	26
   413     0019                     _TXREG          set	25
   414     0013                     _SSPBUF         set	19
   415     0014                     _SSPCON         set	20
   416     0065                     _RCIF           set	101
   417     00C4                     _CREN           set	196
   418     00C7                     _SPEN           set	199
   419     0063                     _SSPIF          set	99
   420     0032                     _RB2            set	50
   421     0031                     _RB1            set	49
   422     0030                     _RB0            set	48
   423     0099                     _SPBRG          set	153
   424     0093                     _SSPADD         set	147
   425     0094                     _SSPSTAT        set	148
   426     0091                     _SSPCON2        set	145
   427     04C1                     _TRMT           set	1217
   428     04C5                     _TXEN           set	1221
   429     043F                     _TRISC7         set	1087
   430     043E                     _TRISC6         set	1086
   431     04C4                     _SYNC           set	1220
   432     04C2                     _BRGH           set	1218
   433     048B                     _RCEN           set	1163
   434     048E                     _ACKSTAT        set	1166
   435     048C                     _ACKEN          set	1164
   436     048D                     _ACKDT          set	1165
   437     048A                     _PEN            set	1162
   438     0489                     _RSEN           set	1161
   439     0488                     _SEN            set	1160
   440     043C                     _TRISC4         set	1084
   441     043B                     _TRISC3         set	1083
   442                           
   443                           	psect	strings
   444     19A0                     __pstrings:
   445     19A0                     stringtab:
   446     19A0                     __stringtab:
   447                           
   448                           ;	String table - string pointers are 2 bytes each
   449     19A0  1BFF               	btfsc	btemp+1,7
   450     19A1  29AA               	ljmp	stringcode
   451     19A2  1383               	bcf	3,7
   452     19A3  187F               	btfsc	btemp+1,0
   453     19A4  1783               	bsf	3,7
   454     19A5  0800               	movf	0,w
   455     19A6  0A84               	incf	4,f
   456     19A7  1903               	skipnz
   457     19A8  0AFF               	incf	btemp+1,f
   458     19A9  0008               	return
   459     19AA                     stringcode:
   460     19AA  087F               	movf	btemp+1,w
   461     19AB  397F               	andlw	127
   462     19AC  008A               	movwf	10
   463     19AD  0804               	movf	4,w
   464     19AE  0A84               	incf	4,f
   465     19AF  1903               	skipnz
   466     19B0  0AFF               	incf	btemp+1,f
   467     19B1  0082               	movwf	2
   468     19B2                     __stringbase:
   469     19B2                     __end_of__stringtab:
   470                           
   471                           	psect	stringtext
   472     1800                     __pstringtext:
   473     1800                     STR_10:
   474     1800  3453               	retlw	83	;'S'
   475     1801  3461               	retlw	97	;'a'
   476     1802  3466               	retlw	102	;'f'
   477     1803  3465               	retlw	101	;'e'
   478     1804  3474               	retlw	116	;'t'
   479     1805  3479               	retlw	121	;'y'
   480     1806  3420               	retlw	32	;' '
   481     1807  344D               	retlw	77	;'M'
   482     1808  346F               	retlw	111	;'o'
   483     1809  3464               	retlw	100	;'d'
   484     180A  3465               	retlw	101	;'e'
   485     180B  3420               	retlw	32	;' '
   486     180C  3454               	retlw	84	;'T'
   487     180D  3468               	retlw	104	;'h'
   488     180E  3472               	retlw	114	;'r'
   489     180F  3465               	retlw	101	;'e'
   490     1810  3473               	retlw	115	;'s'
   491     1811  3468               	retlw	104	;'h'
   492     1812  346F               	retlw	111	;'o'
   493     1813  346C               	retlw	108	;'l'
   494     1814  3464               	retlw	100	;'d'
   495     1815  3473               	retlw	115	;'s'
   496     1816  343A               	retlw	58	;':'
   497     1817  340A               	retlw	10
   498     1818  3420               	retlw	32	;' '
   499     1819  344F               	retlw	79	;'O'
   500     181A  3453               	retlw	83	;'S'
   501     181B  3420               	retlw	32	;' '
   502     181C  3454               	retlw	84	;'T'
   503     181D  3472               	retlw	114	;'r'
   504     181E  3469               	retlw	105	;'i'
   505     181F  3470               	retlw	112	;'p'
   506     1820  343A               	retlw	58	;':'
   507     1821  3420               	retlw	32	;' '
   508     1822  3425               	retlw	37	;'%'
   509     1823  342E               	retlw	46	;'.'
   510     1824  3431               	retlw	49	;'1'
   511     1825  3466               	retlw	102	;'f'
   512     1826  3443               	retlw	67	;'C'
   513     1827  3420               	retlw	32	;' '
   514     1828  340A               	retlw	10
   515     1829  3448               	retlw	72	;'H'
   516     182A  3479               	retlw	121	;'y'
   517     182B  3473               	retlw	115	;'s'
   518     182C  3474               	retlw	116	;'t'
   519     182D  3465               	retlw	101	;'e'
   520     182E  3472               	retlw	114	;'r'
   521     182F  3465               	retlw	101	;'e'
   522     1830  3473               	retlw	115	;'s'
   523     1831  3469               	retlw	105	;'i'
   524     1832  3473               	retlw	115	;'s'
   525     1833  343A               	retlw	58	;':'
   526     1834  3420               	retlw	32	;' '
   527     1835  3425               	retlw	37	;'%'
   528     1836  342E               	retlw	46	;'.'
   529     1837  3431               	retlw	49	;'1'
   530     1838  3466               	retlw	102	;'f'
   531     1839  3443               	retlw	67	;'C'
   532     183A  340A               	retlw	10
   533     183B  340D               	retlw	13
   534     183C  3400               	retlw	0
   535     183D                     STR_7:
   536     183D  344E               	retlw	78	;'N'
   537     183E  346F               	retlw	111	;'o'
   538     183F  3472               	retlw	114	;'r'
   539     1840  346D               	retlw	109	;'m'
   540     1841  3461               	retlw	97	;'a'
   541     1842  346C               	retlw	108	;'l'
   542     1843  3420               	retlw	32	;' '
   543     1844  344D               	retlw	77	;'M'
   544     1845  346F               	retlw	111	;'o'
   545     1846  3464               	retlw	100	;'d'
   546     1847  3465               	retlw	101	;'e'
   547     1848  3420               	retlw	32	;' '
   548     1849  3454               	retlw	84	;'T'
   549     184A  3468               	retlw	104	;'h'
   550     184B  3472               	retlw	114	;'r'
   551     184C  3465               	retlw	101	;'e'
   552     184D  3473               	retlw	115	;'s'
   553     184E  3468               	retlw	104	;'h'
   554     184F  346F               	retlw	111	;'o'
   555     1850  346C               	retlw	108	;'l'
   556     1851  3464               	retlw	100	;'d'
   557     1852  3473               	retlw	115	;'s'
   558     1853  343A               	retlw	58	;':'
   559     1854  340A               	retlw	10
   560     1855  344F               	retlw	79	;'O'
   561     1856  3453               	retlw	83	;'S'
   562     1857  3420               	retlw	32	;' '
   563     1858  3454               	retlw	84	;'T'
   564     1859  3472               	retlw	114	;'r'
   565     185A  3469               	retlw	105	;'i'
   566     185B  3470               	retlw	112	;'p'
   567     185C  343A               	retlw	58	;':'
   568     185D  3420               	retlw	32	;' '
   569     185E  3425               	retlw	37	;'%'
   570     185F  342E               	retlw	46	;'.'
   571     1860  3431               	retlw	49	;'1'
   572     1861  3466               	retlw	102	;'f'
   573     1862  3443               	retlw	67	;'C'
   574     1863  340A               	retlw	10
   575     1864  3448               	retlw	72	;'H'
   576     1865  3479               	retlw	121	;'y'
   577     1866  3473               	retlw	115	;'s'
   578     1867  3474               	retlw	116	;'t'
   579     1868  3465               	retlw	101	;'e'
   580     1869  3472               	retlw	114	;'r'
   581     186A  3465               	retlw	101	;'e'
   582     186B  3473               	retlw	115	;'s'
   583     186C  3469               	retlw	105	;'i'
   584     186D  3473               	retlw	115	;'s'
   585     186E  343A               	retlw	58	;':'
   586     186F  3420               	retlw	32	;' '
   587     1870  3425               	retlw	37	;'%'
   588     1871  342E               	retlw	46	;'.'
   589     1872  3431               	retlw	49	;'1'
   590     1873  3466               	retlw	102	;'f'
   591     1874  3443               	retlw	67	;'C'
   592     1875  340A               	retlw	10
   593     1876  340D               	retlw	13
   594     1877  3400               	retlw	0
   595     1878                     STR_4:
   596     1878  3444               	retlw	68	;'D'
   597     1879  3465               	retlw	101	;'e'
   598     187A  3466               	retlw	102	;'f'
   599     187B  3461               	retlw	97	;'a'
   600     187C  3475               	retlw	117	;'u'
   601     187D  346C               	retlw	108	;'l'
   602     187E  3474               	retlw	116	;'t'
   603     187F  3420               	retlw	32	;' '
   604     1880  3454               	retlw	84	;'T'
   605     1881  3468               	retlw	104	;'h'
   606     1882  3472               	retlw	114	;'r'
   607     1883  3465               	retlw	101	;'e'
   608     1884  3473               	retlw	115	;'s'
   609     1885  3468               	retlw	104	;'h'
   610     1886  346F               	retlw	111	;'o'
   611     1887  346C               	retlw	108	;'l'
   612     1888  3464               	retlw	100	;'d'
   613     1889  3473               	retlw	115	;'s'
   614     188A  343A               	retlw	58	;':'
   615     188B  340A               	retlw	10
   616     188C  344F               	retlw	79	;'O'
   617     188D  3453               	retlw	83	;'S'
   618     188E  3420               	retlw	32	;' '
   619     188F  3454               	retlw	84	;'T'
   620     1890  3472               	retlw	114	;'r'
   621     1891  3469               	retlw	105	;'i'
   622     1892  3470               	retlw	112	;'p'
   623     1893  343A               	retlw	58	;':'
   624     1894  3420               	retlw	32	;' '
   625     1895  3425               	retlw	37	;'%'
   626     1896  342E               	retlw	46	;'.'
   627     1897  3431               	retlw	49	;'1'
   628     1898  3466               	retlw	102	;'f'
   629     1899  3443               	retlw	67	;'C'
   630     189A  340A               	retlw	10
   631     189B  3448               	retlw	72	;'H'
   632     189C  3479               	retlw	121	;'y'
   633     189D  3473               	retlw	115	;'s'
   634     189E  3474               	retlw	116	;'t'
   635     189F  3465               	retlw	101	;'e'
   636     18A0  3472               	retlw	114	;'r'
   637     18A1  3465               	retlw	101	;'e'
   638     18A2  3473               	retlw	115	;'s'
   639     18A3  3469               	retlw	105	;'i'
   640     18A4  3473               	retlw	115	;'s'
   641     18A5  343A               	retlw	58	;':'
   642     18A6  3420               	retlw	32	;' '
   643     18A7  3425               	retlw	37	;'%'
   644     18A8  342E               	retlw	46	;'.'
   645     18A9  3431               	retlw	49	;'1'
   646     18AA  3466               	retlw	102	;'f'
   647     18AB  3443               	retlw	67	;'C'
   648     18AC  340A               	retlw	10
   649     18AD  340D               	retlw	13
   650     18AE  3400               	retlw	0
   651     18AF                     STR_8:
   652     18AF  3457               	retlw	87	;'W'
   653     18B0  3461               	retlw	97	;'a'
   654     18B1  3472               	retlw	114	;'r'
   655     18B2  346E               	retlw	110	;'n'
   656     18B3  3469               	retlw	105	;'i'
   657     18B4  346E               	retlw	110	;'n'
   658     18B5  3467               	retlw	103	;'g'
   659     18B6  343A               	retlw	58	;':'
   660     18B7  3420               	retlw	32	;' '
   661     18B8  3454               	retlw	84	;'T'
   662     18B9  3465               	retlw	101	;'e'
   663     18BA  346D               	retlw	109	;'m'
   664     18BB  3470               	retlw	112	;'p'
   665     18BC  3465               	retlw	101	;'e'
   666     18BD  3472               	retlw	114	;'r'
   667     18BE  3461               	retlw	97	;'a'
   668     18BF  3474               	retlw	116	;'t'
   669     18C0  3475               	retlw	117	;'u'
   670     18C1  3472               	retlw	114	;'r'
   671     18C2  3465               	retlw	101	;'e'
   672     18C3  3420               	retlw	32	;' '
   673     18C4  3465               	retlw	101	;'e'
   674     18C5  3478               	retlw	120	;'x'
   675     18C6  3463               	retlw	99	;'c'
   676     18C7  3465               	retlw	101	;'e'
   677     18C8  3465               	retlw	101	;'e'
   678     18C9  3464               	retlw	100	;'d'
   679     18CA  3465               	retlw	101	;'e'
   680     18CB  3464               	retlw	100	;'d'
   681     18CC  3420               	retlw	32	;' '
   682     18CD  344E               	retlw	78	;'N'
   683     18CE  346F               	retlw	111	;'o'
   684     18CF  3472               	retlw	114	;'r'
   685     18D0  346D               	retlw	109	;'m'
   686     18D1  3461               	retlw	97	;'a'
   687     18D2  346C               	retlw	108	;'l'
   688     18D3  3420               	retlw	32	;' '
   689     18D4  346D               	retlw	109	;'m'
   690     18D5  346F               	retlw	111	;'o'
   691     18D6  3464               	retlw	100	;'d'
   692     18D7  3465               	retlw	101	;'e'
   693     18D8  3420               	retlw	32	;' '
   694     18D9  3474               	retlw	116	;'t'
   695     18DA  3468               	retlw	104	;'h'
   696     18DB  3472               	retlw	114	;'r'
   697     18DC  3465               	retlw	101	;'e'
   698     18DD  3473               	retlw	115	;'s'
   699     18DE  3468               	retlw	104	;'h'
   700     18DF  346F               	retlw	111	;'o'
   701     18E0  346C               	retlw	108	;'l'
   702     18E1  3464               	retlw	100	;'d'
   703     18E2  340A               	retlw	10
   704     18E3  340D               	retlw	13
   705     18E4  3400               	retlw	0
   706     18E5                     STR_11:
   707     18E5  3457               	retlw	87	;'W'
   708     18E6  3461               	retlw	97	;'a'
   709     18E7  3472               	retlw	114	;'r'
   710     18E8  346E               	retlw	110	;'n'
   711     18E9  3469               	retlw	105	;'i'
   712     18EA  346E               	retlw	110	;'n'
   713     18EB  3467               	retlw	103	;'g'
   714     18EC  343A               	retlw	58	;':'
   715     18ED  3420               	retlw	32	;' '
   716     18EE  3454               	retlw	84	;'T'
   717     18EF  3465               	retlw	101	;'e'
   718     18F0  346D               	retlw	109	;'m'
   719     18F1  3470               	retlw	112	;'p'
   720     18F2  3465               	retlw	101	;'e'
   721     18F3  3472               	retlw	114	;'r'
   722     18F4  3461               	retlw	97	;'a'
   723     18F5  3474               	retlw	116	;'t'
   724     18F6  3475               	retlw	117	;'u'
   725     18F7  3472               	retlw	114	;'r'
   726     18F8  3465               	retlw	101	;'e'
   727     18F9  3420               	retlw	32	;' '
   728     18FA  3465               	retlw	101	;'e'
   729     18FB  3478               	retlw	120	;'x'
   730     18FC  3463               	retlw	99	;'c'
   731     18FD  3465               	retlw	101	;'e'
   732     18FE  3465               	retlw	101	;'e'
   733     18FF  3464               	retlw	100	;'d'
   734     1900  3465               	retlw	101	;'e'
   735     1901  3464               	retlw	100	;'d'
   736     1902  3420               	retlw	32	;' '
   737     1903  3453               	retlw	83	;'S'
   738     1904  3461               	retlw	97	;'a'
   739     1905  3466               	retlw	102	;'f'
   740     1906  3465               	retlw	101	;'e'
   741     1907  3474               	retlw	116	;'t'
   742     1908  3479               	retlw	121	;'y'
   743     1909  3420               	retlw	32	;' '
   744     190A  346D               	retlw	109	;'m'
   745     190B  346F               	retlw	111	;'o'
   746     190C  3464               	retlw	100	;'d'
   747     190D  3465               	retlw	101	;'e'
   748     190E  3420               	retlw	32	;' '
   749     190F  3474               	retlw	116	;'t'
   750     1910  3468               	retlw	104	;'h'
   751     1911  3472               	retlw	114	;'r'
   752     1912  3465               	retlw	101	;'e'
   753     1913  3473               	retlw	115	;'s'
   754     1914  3468               	retlw	104	;'h'
   755     1915  346F               	retlw	111	;'o'
   756     1916  346C               	retlw	108	;'l'
   757     1917  3464               	retlw	100	;'d'
   758     1918  340A               	retlw	10
   759     1919  340D               	retlw	13
   760     191A  3400               	retlw	0
   761     191B                     STR_5:
   762     191B  3457               	retlw	87	;'W'
   763     191C  3461               	retlw	97	;'a'
   764     191D  3472               	retlw	114	;'r'
   765     191E  346E               	retlw	110	;'n'
   766     191F  3469               	retlw	105	;'i'
   767     1920  346E               	retlw	110	;'n'
   768     1921  3467               	retlw	103	;'g'
   769     1922  343A               	retlw	58	;':'
   770     1923  3420               	retlw	32	;' '
   771     1924  3454               	retlw	84	;'T'
   772     1925  3465               	retlw	101	;'e'
   773     1926  346D               	retlw	109	;'m'
   774     1927  3470               	retlw	112	;'p'
   775     1928  3465               	retlw	101	;'e'
   776     1929  3472               	retlw	114	;'r'
   777     192A  3461               	retlw	97	;'a'
   778     192B  3474               	retlw	116	;'t'
   779     192C  3475               	retlw	117	;'u'
   780     192D  3472               	retlw	114	;'r'
   781     192E  3465               	retlw	101	;'e'
   782     192F  3420               	retlw	32	;' '
   783     1930  3465               	retlw	101	;'e'
   784     1931  3478               	retlw	120	;'x'
   785     1932  3463               	retlw	99	;'c'
   786     1933  3465               	retlw	101	;'e'
   787     1934  3465               	retlw	101	;'e'
   788     1935  3464               	retlw	100	;'d'
   789     1936  3465               	retlw	101	;'e'
   790     1937  3464               	retlw	100	;'d'
   791     1938  3420               	retlw	32	;' '
   792     1939  3464               	retlw	100	;'d'
   793     193A  3465               	retlw	101	;'e'
   794     193B  3466               	retlw	102	;'f'
   795     193C  3461               	retlw	97	;'a'
   796     193D  3475               	retlw	117	;'u'
   797     193E  346C               	retlw	108	;'l'
   798     193F  3474               	retlw	116	;'t'
   799     1940  3420               	retlw	32	;' '
   800     1941  3474               	retlw	116	;'t'
   801     1942  3468               	retlw	104	;'h'
   802     1943  3472               	retlw	114	;'r'
   803     1944  3465               	retlw	101	;'e'
   804     1945  3473               	retlw	115	;'s'
   805     1946  3468               	retlw	104	;'h'
   806     1947  346F               	retlw	111	;'o'
   807     1948  346C               	retlw	108	;'l'
   808     1949  3464               	retlw	100	;'d'
   809     194A  340A               	retlw	10
   810     194B  340D               	retlw	13
   811     194C  3400               	retlw	0
   812     194D                     STR_1:
   813     194D  344C               	retlw	76	;'L'
   814     194E  344D               	retlw	77	;'M'
   815     194F  3437               	retlw	55	;'7'
   816     1950  3435               	retlw	53	;'5'
   817     1951  3420               	retlw	32	;' '
   818     1952  3449               	retlw	73	;'I'
   819     1953  346E               	retlw	110	;'n'
   820     1954  3469               	retlw	105	;'i'
   821     1955  3474               	retlw	116	;'t'
   822     1956  3469               	retlw	105	;'i'
   823     1957  3461               	retlw	97	;'a'
   824     1958  346C               	retlw	108	;'l'
   825     1959  3469               	retlw	105	;'i'
   826     195A  347A               	retlw	122	;'z'
   827     195B  3465               	retlw	101	;'e'
   828     195C  3464               	retlw	100	;'d'
   829     195D  340A               	retlw	10
   830     195E  340D               	retlw	13
   831     195F  3400               	retlw	0
   832     1960                     STR_2:
   833     1960  3454               	retlw	84	;'T'
   834     1961  3465               	retlw	101	;'e'
   835     1962  346D               	retlw	109	;'m'
   836     1963  3470               	retlw	112	;'p'
   837     1964  343A               	retlw	58	;':'
   838     1965  3420               	retlw	32	;' '
   839     1966  3425               	retlw	37	;'%'
   840     1967  342E               	retlw	46	;'.'
   841     1968  3431               	retlw	49	;'1'
   842     1969  3466               	retlw	102	;'f'
   843     196A  3420               	retlw	32	;' '
   844     196B  3443               	retlw	67	;'C'
   845     196C  340A               	retlw	10
   846     196D  340D               	retlw	13
   847     196E  3400               	retlw	0
   848     196F                     STR_3:
   849     196F  3444               	retlw	68	;'D'
   850     1970  3465               	retlw	101	;'e'
   851     1971  3466               	retlw	102	;'f'
   852     1972  3461               	retlw	97	;'a'
   853     1973  3475               	retlw	117	;'u'
   854     1974  346C               	retlw	108	;'l'
   855     1975  3474               	retlw	116	;'t'
   856     1976  3420               	retlw	32	;' '
   857     1977  344D               	retlw	77	;'M'
   858     1978  346F               	retlw	111	;'o'
   859     1979  3464               	retlw	100	;'d'
   860     197A  3465               	retlw	101	;'e'
   861     197B  340A               	retlw	10
   862     197C  340D               	retlw	13
   863     197D  3400               	retlw	0
   864     197E                     STR_6:
   865     197E  344E               	retlw	78	;'N'
   866     197F  346F               	retlw	111	;'o'
   867     1980  3472               	retlw	114	;'r'
   868     1981  346D               	retlw	109	;'m'
   869     1982  3461               	retlw	97	;'a'
   870     1983  346C               	retlw	108	;'l'
   871     1984  3420               	retlw	32	;' '
   872     1985  344D               	retlw	77	;'M'
   873     1986  346F               	retlw	111	;'o'
   874     1987  3464               	retlw	100	;'d'
   875     1988  3465               	retlw	101	;'e'
   876     1989  340A               	retlw	10
   877     198A  340D               	retlw	13
   878     198B  3400               	retlw	0
   879     198C                     STR_9:
   880     198C  3453               	retlw	83	;'S'
   881     198D  3461               	retlw	97	;'a'
   882     198E  3466               	retlw	102	;'f'
   883     198F  3465               	retlw	101	;'e'
   884     1990  3474               	retlw	116	;'t'
   885     1991  3479               	retlw	121	;'y'
   886     1992  3420               	retlw	32	;' '
   887     1993  344D               	retlw	77	;'M'
   888     1994  346F               	retlw	111	;'o'
   889     1995  3464               	retlw	100	;'d'
   890     1996  3465               	retlw	101	;'e'
   891     1997  3400               	retlw	0
   892     1998                     STR_12:
   893     1998  3469               	retlw	105	;'i'
   894     1999  346E               	retlw	110	;'n'
   895     199A  3466               	retlw	102	;'f'
   896     199B  3400               	retlw	0
   897     199C                     STR_15:
   898     199C  346E               	retlw	110	;'n'
   899     199D  3461               	retlw	97	;'a'
   900     199E  346E               	retlw	110	;'n'
   901     199F  3400               	retlw	0
   902     199C                     STR_16          equ	STR_15
   903     199C                     STR_17          equ	STR_15
   904     1998                     STR_13          equ	STR_12
   905     1998                     STR_14          equ	STR_12
   906                           
   907                           	psect	cinit
   908     07E7                     start_initialization:	
   909                           ; #config settings
   910                           
   911     07E7                     __initialization:
   912                           
   913                           ; Clear objects allocated to BANK0
   914     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   915     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   916     07E9  01EE               	clrf	__pbssBANK0& (0+127)
   917                           
   918                           ; Clear objects allocated to BANK1
   919     07EA  1383               	bcf	3,7	;select IRP bank0
   920     07EB  30E3               	movlw	low __pbssBANK1
   921     07EC  0084               	movwf	4
   922     07ED  30EF               	movlw	low (__pbssBANK1+12)
   923     07EE  160A  158A  2205  120A  118A  	fcall	clear_ram0
   924                           
   925                           ; Clear objects allocated to BANK2
   926     07F3  1783               	bsf	3,7	;select IRP bank2
   927     07F4  3010               	movlw	low __pbssBANK2
   928     07F5  0084               	movwf	4
   929     07F6  3060               	movlw	low (__pbssBANK2+80)
   930     07F7  160A  158A  2205  120A  118A  	fcall	clear_ram0
   931     07FC                     end_of_initialization:	
   932                           ;End of C runtime variable initialization code
   933                           
   934     07FC                     __end_of__initialization:
   935     07FC  0183               	clrf	3
   936     07FD  120A  158A  2CBD   	ljmp	_main	;jump to C main() function
   937                           
   938                           	psect	bssBANK0
   939     006E                     __pbssBANK0:
   940     006E                     _flags:
   941     006E                     	ds	1
   942                           
   943                           	psect	bssBANK1
   944     00E3                     __pbssBANK1:
   945     00E3                     floorf@F521:
   946     00E3                     	ds	4
   947     00E7                     ___fpclassifyf@F465:
   948     00E7                     	ds	4
   949     00EB                     _width:
   950     00EB                     	ds	2
   951     00ED                     _prec:
   952     00ED                     	ds	2
   953                           
   954                           	psect	bssBANK2
   955     0110                     __pbssBANK2:
   956     0110                     _dbuf:
   957     0110                     	ds	80
   958                           
   959                           	psect	clrtext
   960     1A05                     clear_ram0:	
   961                           ;	Called with FSR containing the base address, and
   962                           ;	W with the last address+1
   963                           
   964     1A05  0064               	clrwdt	;clear the watchdog before getting into this loop
   965     1A06                     clrloop0:
   966     1A06  0180               	clrf	0	;clear RAM location pointed to by FSR
   967     1A07  0A84               	incf	4,f	;increment pointer
   968     1A08  0604               	xorwf	4,w	;XOR with final address
   969     1A09  1903               	btfsc	3,2	;have we reached the end yet?
   970     1A0A  3400               	retlw	0	;all done for this memory range, return
   971     1A0B  0604               	xorwf	4,w	;XOR again to restore value
   972     1A0C  2A06               	goto	clrloop0	;do the next byte
   973                           
   974                           	psect	cstackBANK3
   975     0190                     __pcstackBANK3:
   976     0190                     main@buffer:
   977                           
   978                           ; 64 bytes @ 0x0
   979     0190                     	ds	64
   980     01D0                     main@hysteresisTemp:
   981                           
   982                           ; 4 bytes @ 0x40
   983     01D0                     	ds	4
   984     01D4                     main@currentTemp:
   985                           
   986                           ; 4 bytes @ 0x44
   987     01D4                     	ds	4
   988     01D8                     main@osTripTemp:
   989                           
   990                           ; 4 bytes @ 0x48
   991     01D8                     	ds	4
   992                           
   993                           	psect	cstackBANK1
   994     00A0                     __pcstackBANK1:
   995     00A0                     efgtoa@ne:
   996                           
   997                           ; 2 bytes @ 0x0
   998     00A0                     	ds	2
   999     00A2                     efgtoa@p:
  1000                           
  1001                           ; 2 bytes @ 0x2
  1002     00A2                     	ds	2
  1003     00A4                     efgtoa@t:
  1004                           
  1005                           ; 2 bytes @ 0x4
  1006     00A4                     	ds	2
  1007     00A6                     _efgtoa$807:
  1008                           
  1009                           ; 2 bytes @ 0x6
  1010     00A6                     	ds	2
  1011     00A8                     efgtoa@pp:
  1012                           
  1013                           ; 1 bytes @ 0x8
  1014     00A8                     	ds	1
  1015     00A9                     efgtoa@mode:
  1016                           
  1017                           ; 1 bytes @ 0x9
  1018     00A9                     	ds	1
  1019     00AA                     efgtoa@nmode:
  1020                           
  1021                           ; 1 bytes @ 0xA
  1022     00AA                     	ds	1
  1023     00AB                     efgtoa@d:
  1024                           
  1025                           ; 2 bytes @ 0xB
  1026     00AB                     	ds	2
  1027     00AD                     efgtoa@m:
  1028                           
  1029                           ; 2 bytes @ 0xD
  1030     00AD                     	ds	2
  1031     00AF                     efgtoa@e:
  1032                           
  1033                           ; 2 bytes @ 0xF
  1034     00AF                     	ds	2
  1035     00B1                     efgtoa@w:
  1036                           
  1037                           ; 2 bytes @ 0x11
  1038     00B1                     	ds	2
  1039     00B3                     efgtoa@ou:
  1040                           
  1041                           ; 4 bytes @ 0x13
  1042     00B3                     	ds	4
  1043     00B7                     efgtoa@i:
  1044                           
  1045                           ; 2 bytes @ 0x17
  1046     00B7                     	ds	2
  1047     00B9                     efgtoa@h:
  1048                           
  1049                           ; 4 bytes @ 0x19
  1050     00B9                     	ds	4
  1051     00BD                     efgtoa@l:
  1052                           
  1053                           ; 4 bytes @ 0x1D
  1054     00BD                     	ds	4
  1055     00C1                     efgtoa@sign:
  1056                           
  1057                           ; 1 bytes @ 0x21
  1058     00C1                     	ds	1
  1059     00C2                     efgtoa@n:
  1060                           
  1061                           ; 2 bytes @ 0x22
  1062     00C2                     	ds	2
  1063     00C4                     efgtoa@g:
  1064                           
  1065                           ; 4 bytes @ 0x24
  1066     00C4                     	ds	4
  1067     00C8                     efgtoa@u:
  1068                           
  1069                           ; 4 bytes @ 0x28
  1070     00C8                     	ds	4
  1071     00CC                     ?_vfpfcnvrt:
  1072     00CC                     vfpfcnvrt@fp:	
  1073                           ; 1 bytes @ 0x2C
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x2C
  1077     00CC                     	ds	2
  1078     00CE                     vfpfcnvrt@fmt:
  1079                           
  1080                           ; 1 bytes @ 0x2E
  1081     00CE                     	ds	1
  1082     00CF                     vfpfcnvrt@ap:
  1083                           
  1084                           ; 1 bytes @ 0x2F
  1085     00CF                     	ds	1
  1086     00D0                     ?_vfprintf:
  1087     00D0                     vfprintf@fp:	
  1088                           ; 2 bytes @ 0x30
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x30
  1092     00D0                     	ds	2
  1093     00D2                     vfprintf@fmt:
  1094                           
  1095                           ; 2 bytes @ 0x32
  1096     00D2                     	ds	2
  1097     00D4                     vfprintf@ap:
  1098                           
  1099                           ; 1 bytes @ 0x34
  1100     00D4                     	ds	1
  1101     00D5                     ?_sprintf:
  1102     00D5                     sprintf@s:	
  1103                           ; 2 bytes @ 0x35
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0x35
  1107     00D5                     	ds	1
  1108     00D6                     sprintf@fmt:
  1109                           
  1110                           ; 2 bytes @ 0x36
  1111     00D6                     	ds	10
  1112     00E0                     ??_main:
  1113                           
  1114                           ; 1 bytes @ 0x40
  1115     00E0                     	ds	3
  1116                           
  1117                           	psect	cstackCOMMON
  1118     0070                     __pcstackCOMMON:
  1119     0070                     ?_LM75_init:
  1120     0070                     ?_UART_TX_Init:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123     0070                     ?_LM75_setDeviceMode:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126     0070                     ?_LM75_setOSPolarity:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129     0070                     ?_LM75_setFaultQueue:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132     0070                     ?_strcpy:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135     0070                     ?_memcpy:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0070                     ?_putch:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141     0070                     ?_I2C_Master_Init:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144     0070                     ?_I2C_Master_Wait:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147     0070                     ?_I2C_Master_Start:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150     0070                     ?_I2C_Master_RepeatedStart:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153     0070                     ?_I2C_Master_Stop:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156     0070                     ?_I2C_ACK:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159     0070                     ?_I2C_NACK:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162     0070                     ?_I2C_Master_Write:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165     0070                     ?_I2C_Read_Byte:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168     0070                     ?_UART_TX_Empty:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171     0070                     ?_UART_Write:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174     0070                     ?_LM75_setConfig:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177     0070                     ?_LM75_readConfig:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180     0070                     ?___fleq:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0070                     ?__Umul8_16:	
  1184                           ; 1 bit 
  1185                           
  1186     0070                     ?_fputc:	
  1187                           ; 2 bytes @ 0x0
  1188                           
  1189     0070                     ?___fpclassifyf:	
  1190                           ; 2 bytes @ 0x0
  1191                           
  1192     0070                     ?_main:	
  1193                           ; 2 bytes @ 0x0
  1194                           
  1195     0070                     ?___wmul:	
  1196                           ; 2 bytes @ 0x0
  1197                           
  1198     0070                     ?_labs:	
  1199                           ; 2 bytes @ 0x0
  1200                           
  1201     0070                     ?___flneg:	
  1202                           ; 4 bytes @ 0x0
  1203                           
  1204     0070                     ?___fladd:	
  1205                           ; 4 bytes @ 0x0
  1206                           
  1207     0070                     ?___fldiv:	
  1208                           ; 4 bytes @ 0x0
  1209                           
  1210     0070                     ?___xxtofl:	
  1211                           ; 4 bytes @ 0x0
  1212                           
  1213     0070                     I2C_Master_Write@data:	
  1214                           ; 4 bytes @ 0x0
  1215                           
  1216     0070                     UART_Write@data:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0070                     __Umul8_16@multiplicand:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222     0070                     memcpy@d1:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0070                     putch@c:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228     0070                     strcpy@dest:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231     0070                     ___wmul@multiplier:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234     0070                     fputc@c:	
  1235                           ; 2 bytes @ 0x0
  1236                           
  1237     0070                     ___fleq@ff1:	
  1238                           ; 2 bytes @ 0x0
  1239                           
  1240     0070                     ___flneg@f1:	
  1241                           ; 4 bytes @ 0x0
  1242                           
  1243     0070                     ___fladd@b:	
  1244                           ; 4 bytes @ 0x0
  1245                           
  1246     0070                     ___fldiv@a:	
  1247                           ; 4 bytes @ 0x0
  1248                           
  1249     0070                     ___xxtofl@val:	
  1250                           ; 4 bytes @ 0x0
  1251                           
  1252     0070                     ___fpclassifyf@x:	
  1253                           ; 4 bytes @ 0x0
  1254                           
  1255     0070                     labs@a:	
  1256                           ; 4 bytes @ 0x0
  1257                           
  1258     0070                     ??_LM75_init:	
  1259                           ; 4 bytes @ 0x0
  1260                           
  1261     0070                     ??_UART_TX_Init:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264     0070                     ??_putch:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0070                     ??_I2C_Master_Init:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0070                     ??_I2C_Master_Wait:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0070                     ??_I2C_Master_Start:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0070                     ??_I2C_Master_RepeatedStart:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0070                     ??_I2C_Master_Stop:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282     0070                     ??_I2C_ACK:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285     0070                     ??_I2C_NACK:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288     0070                     ??_I2C_Master_Write:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     ??_I2C_Read_Byte:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294     0070                     ??_UART_TX_Empty:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297     0070                     ??_UART_Write:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0x0
  1302     0070                     	ds	1
  1303     0071                     ?_UART_Write_Text:
  1304     0071                     ?_LM75_set:	
  1305                           ; 1 bytes @ 0x1
  1306                           
  1307     0071                     LM75_setConfig@data:	
  1308                           ; 1 bytes @ 0x1
  1309                           
  1310     0071                     LM75_readConfig@config:	
  1311                           ; 1 bytes @ 0x1
  1312                           
  1313     0071                     memcpy@s1:	
  1314                           ; 1 bytes @ 0x1
  1315                           
  1316     0071                     UART_Write_Text@text:	
  1317                           ; 1 bytes @ 0x1
  1318                           
  1319     0071                     LM75_set@data:	
  1320                           ; 2 bytes @ 0x1
  1321                           
  1322     0071                     strcpy@src:	
  1323                           ; 2 bytes @ 0x1
  1324                           
  1325     0071                     ??_LM75_setConfig:	
  1326                           ; 2 bytes @ 0x1
  1327                           
  1328     0071                     ??_LM75_readConfig:	
  1329                           ; 1 bytes @ 0x1
  1330                           
  1331                           
  1332                           ; 1 bytes @ 0x1
  1333     0071                     	ds	1
  1334     0072                     LM75_setDeviceMode@interruptMode:
  1335     0072                     LM75_setOSPolarity@activeHigh:	
  1336                           ; 1 bytes @ 0x2
  1337                           
  1338     0072                     LM75_setFaultQueue@faultCount:	
  1339                           ; 1 bytes @ 0x2
  1340                           
  1341     0072                     ___wmul@multiplicand:	
  1342                           ; 1 bytes @ 0x2
  1343                           
  1344     0072                     memcpy@n:	
  1345                           ; 2 bytes @ 0x2
  1346                           
  1347     0072                     fputc@fp:	
  1348                           ; 2 bytes @ 0x2
  1349                           
  1350     0072                     ??_LM75_setDeviceMode:	
  1351                           ; 2 bytes @ 0x2
  1352                           
  1353     0072                     ??_LM75_setOSPolarity:	
  1354                           ; 1 bytes @ 0x2
  1355                           
  1356     0072                     ??_LM75_setFaultQueue:	
  1357                           ; 1 bytes @ 0x2
  1358                           
  1359     0072                     ??__Umul8_16:	
  1360                           ; 1 bytes @ 0x2
  1361                           
  1362                           
  1363                           ; 1 bytes @ 0x2
  1364     0072                     	ds	1
  1365     0073                     LM75_set@regAddress:
  1366     0073                     LM75_setDeviceMode@config:	
  1367                           ; 1 bytes @ 0x3
  1368                           
  1369     0073                     LM75_setOSPolarity@config:	
  1370                           ; 1 bytes @ 0x3
  1371                           
  1372     0073                     LM75_setFaultQueue@config:	
  1373                           ; 1 bytes @ 0x3
  1374                           
  1375     0073                     ??_UART_Write_Text:	
  1376                           ; 1 bytes @ 0x3
  1377                           
  1378     0073                     ??_strcpy:	
  1379                           ; 1 bytes @ 0x3
  1380                           
  1381     0073                     ??_LM75_set:	
  1382                           ; 1 bytes @ 0x3
  1383                           
  1384                           
  1385                           ; 1 bytes @ 0x3
  1386     0073                     	ds	1
  1387     0074                     memcpy@tmp:
  1388     0074                     ___wmul@product:	
  1389                           ; 1 bytes @ 0x4
  1390                           
  1391     0074                     __Umul8_16@product:	
  1392                           ; 2 bytes @ 0x4
  1393                           
  1394     0074                     ___fleq@ff2:	
  1395                           ; 2 bytes @ 0x4
  1396                           
  1397     0074                     ___fladd@a:	
  1398                           ; 4 bytes @ 0x4
  1399                           
  1400     0074                     ___fldiv@b:	
  1401                           ; 4 bytes @ 0x4
  1402                           
  1403     0074                     ??_fputc:	
  1404                           ; 4 bytes @ 0x4
  1405                           
  1406     0074                     ??___fpclassifyf:	
  1407                           ; 1 bytes @ 0x4
  1408                           
  1409     0074                     ??_labs:	
  1410                           ; 1 bytes @ 0x4
  1411                           
  1412     0074                     ??_memcpy:	
  1413                           ; 1 bytes @ 0x4
  1414                           
  1415     0074                     ??___wmul:	
  1416                           ; 1 bytes @ 0x4
  1417                           
  1418     0074                     ??___flneg:	
  1419                           ; 1 bytes @ 0x4
  1420                           
  1421     0074                     ??___xxtofl:	
  1422                           ; 1 bytes @ 0x4
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0x4
  1426     0074                     	ds	1
  1427     0075                     memcpy@d:
  1428     0075                     strcpy@d:	
  1429                           ; 1 bytes @ 0x5
  1430                           
  1431                           
  1432                           ; 1 bytes @ 0x5
  1433     0075                     	ds	1
  1434     0076                     ?_read_prec_or_width:
  1435     0076                     read_prec_or_width@fmt:	
  1436                           ; 2 bytes @ 0x6
  1437                           
  1438     0076                     memcpy@s:	
  1439                           ; 1 bytes @ 0x6
  1440                           
  1441     0076                     __Umul8_16@word_mpld:	
  1442                           ; 1 bytes @ 0x6
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x6
  1446     0076                     	ds	1
  1447     0077                     read_prec_or_width@ap:
  1448                           
  1449                           ; 1 bytes @ 0x7
  1450     0077                     	ds	1
  1451     0078                     ___fladd@signs:
  1452     0078                     __Umul8_16@multiplier:	
  1453                           ; 1 bytes @ 0x8
  1454                           
  1455     0078                     ___xxtofl@sign:	
  1456                           ; 1 bytes @ 0x8
  1457                           
  1458     0078                     ??___fleq:	
  1459                           ; 1 bytes @ 0x8
  1460                           
  1461     0078                     ??___fldiv:	
  1462                           ; 1 bytes @ 0x8
  1463                           
  1464     0078                     ??_read_prec_or_width:	
  1465                           ; 1 bytes @ 0x8
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x8
  1469     0078                     	ds	1
  1470     0079                     ___fladd@aexp:
  1471     0079                     ___xxtofl@exp:	
  1472                           ; 1 bytes @ 0x9
  1473                           
  1474     0079                     ??___flmul:	
  1475                           ; 1 bytes @ 0x9
  1476                           
  1477                           
  1478                           ; 1 bytes @ 0x9
  1479     0079                     	ds	1
  1480     007A                     ___fladd@bexp:
  1481     007A                     read_prec_or_width@c:	
  1482                           ; 1 bytes @ 0xA
  1483                           
  1484     007A                     ___xxtofl@arg:	
  1485                           ; 1 bytes @ 0xA
  1486                           
  1487                           
  1488                           ; 4 bytes @ 0xA
  1489     007A                     	ds	1
  1490     007B                     ___fladd@grs:
  1491     007B                     read_prec_or_width@n:	
  1492                           ; 1 bytes @ 0xB
  1493                           
  1494                           
  1495                           ; 2 bytes @ 0xB
  1496     007B                     	ds	2
  1497     007D                     ??_pad:
  1498                           
  1499                           ; 1 bytes @ 0xD
  1500     007D                     	ds	1
  1501     007E                     ??_LM75_setOSTripTemperature:
  1502     007E                     ??_LM75_setHysteresisTemperature:	
  1503                           ; 1 bytes @ 0xE
  1504                           
  1505     007E                     ??_vfprintf:	
  1506                           ; 1 bytes @ 0xE
  1507                           
  1508     007E                     ??___flsub:	
  1509                           ; 1 bytes @ 0xE
  1510                           
  1511                           
  1512                           	psect	cstackBANK0
  1513     0020                     __pcstackBANK0:	
  1514                           ; 1 bytes @ 0xE
  1515                           
  1516     0020                     ?_fputs:
  1517     0020                     ?___flmul:	
  1518                           ; 2 bytes @ 0x0
  1519                           
  1520     0020                     fputs@s:	
  1521                           ; 4 bytes @ 0x0
  1522                           
  1523     0020                     ___fpclassifyf@e:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526     0020                     ___fldiv@rem:	
  1527                           ; 2 bytes @ 0x0
  1528                           
  1529     0020                     ___flmul@b:	
  1530                           ; 4 bytes @ 0x0
  1531                           
  1532     0020                     ??___fladd:	
  1533                           ; 4 bytes @ 0x0
  1534                           
  1535                           
  1536                           ; 1 bytes @ 0x0
  1537     0020                     	ds	1
  1538     0021                     fputs@fp:
  1539                           
  1540                           ; 2 bytes @ 0x1
  1541     0021                     	ds	1
  1542     0022                     ___fpclassifyf@u:
  1543                           
  1544                           ; 4 bytes @ 0x2
  1545     0022                     	ds	1
  1546     0023                     ??_fputs:
  1547                           
  1548                           ; 1 bytes @ 0x3
  1549     0023                     	ds	1
  1550     0024                     ___fldiv@sign:
  1551     0024                     ___flmul@a:	
  1552                           ; 1 bytes @ 0x4
  1553                           
  1554                           
  1555                           ; 4 bytes @ 0x4
  1556     0024                     	ds	1
  1557     0025                     fputs@c:
  1558     0025                     ___fldiv@new_exp:	
  1559                           ; 1 bytes @ 0x5
  1560                           
  1561                           
  1562                           ; 2 bytes @ 0x5
  1563     0025                     	ds	1
  1564     0026                     fputs@i:
  1565                           
  1566                           ; 2 bytes @ 0x6
  1567     0026                     	ds	1
  1568     0027                     ___fldiv@grs:
  1569                           
  1570                           ; 4 bytes @ 0x7
  1571     0027                     	ds	1
  1572     0028                     ?_pad:
  1573     0028                     ?_toFloat:	
  1574                           ; 1 bytes @ 0x8
  1575                           
  1576     0028                     ___flmul@sign:	
  1577                           ; 4 bytes @ 0x8
  1578                           
  1579     0028                     toFloat@tempr:	
  1580                           ; 1 bytes @ 0x8
  1581                           
  1582     0028                     pad@fp:	
  1583                           ; 2 bytes @ 0x8
  1584                           
  1585                           
  1586                           ; 2 bytes @ 0x8
  1587     0028                     	ds	1
  1588     0029                     ___flmul@grs:
  1589                           
  1590                           ; 4 bytes @ 0x9
  1591     0029                     	ds	1
  1592     002A                     pad@buf:
  1593                           
  1594                           ; 1 bytes @ 0xA
  1595     002A                     	ds	1
  1596     002B                     ___fldiv@bexp:
  1597     002B                     pad@p:	
  1598                           ; 1 bytes @ 0xB
  1599                           
  1600                           
  1601                           ; 2 bytes @ 0xB
  1602     002B                     	ds	1
  1603     002C                     ___fldiv@aexp:
  1604     002C                     ??_toFloat:	
  1605                           ; 1 bytes @ 0xC
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0xC
  1609     002C                     	ds	1
  1610     002D                     ?_floorf:
  1611     002D                     ___flmul@aexp:	
  1612                           ; 4 bytes @ 0xD
  1613                           
  1614     002D                     pad@i:	
  1615                           ; 1 bytes @ 0xD
  1616                           
  1617     002D                     floorf@x:	
  1618                           ; 2 bytes @ 0xD
  1619                           
  1620                           
  1621                           ; 4 bytes @ 0xD
  1622     002D                     	ds	1
  1623     002E                     ___flmul@bexp:
  1624                           
  1625                           ; 1 bytes @ 0xE
  1626     002E                     	ds	1
  1627     002F                     toFloat@isfraction:
  1628     002F                     ___flmul@prod:	
  1629                           ; 1 bytes @ 0xF
  1630                           
  1631                           
  1632                           ; 4 bytes @ 0xF
  1633     002F                     	ds	1
  1634     0030                     toFloat@result:
  1635                           
  1636                           ; 4 bytes @ 0x10
  1637     0030                     	ds	1
  1638     0031                     ??_floorf:
  1639                           
  1640                           ; 1 bytes @ 0x11
  1641     0031                     	ds	2
  1642     0033                     ___flmul@temp:
  1643                           
  1644                           ; 2 bytes @ 0x13
  1645     0033                     	ds	1
  1646     0034                     ?_LM75_read:
  1647                           
  1648                           ; 4 bytes @ 0x14
  1649     0034                     	ds	1
  1650     0035                     ?___flge:
  1651     0035                     ?___flsub:	
  1652                           ; 1 bit 
  1653                           
  1654     0035                     ___flge@ff1:	
  1655                           ; 4 bytes @ 0x15
  1656                           
  1657     0035                     ___flsub@a:	
  1658                           ; 4 bytes @ 0x15
  1659                           
  1660                           
  1661                           ; 4 bytes @ 0x15
  1662     0035                     	ds	2
  1663     0037                     floorf@m:
  1664                           
  1665                           ; 4 bytes @ 0x17
  1666     0037                     	ds	1
  1667     0038                     ??_LM75_read:
  1668                           
  1669                           ; 1 bytes @ 0x18
  1670     0038                     	ds	1
  1671     0039                     ___flge@ff2:
  1672     0039                     ___flsub@b:	
  1673                           ; 4 bytes @ 0x19
  1674                           
  1675                           
  1676                           ; 4 bytes @ 0x19
  1677     0039                     	ds	1
  1678     003A                     LM75_read@MSB:
  1679                           
  1680                           ; 2 bytes @ 0x1A
  1681     003A                     	ds	1
  1682     003B                     floorf@e:
  1683                           
  1684                           ; 2 bytes @ 0x1B
  1685     003B                     	ds	1
  1686     003C                     LM75_read@LSB:
  1687                           
  1688                           ; 2 bytes @ 0x1C
  1689     003C                     	ds	1
  1690     003D                     floorf@u:
  1691     003D                     ??___flge:	
  1692                           ; 4 bytes @ 0x1D
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0x1D
  1696     003D                     	ds	1
  1697     003E                     LM75_read@regAddress:
  1698                           
  1699                           ; 1 bytes @ 0x1E
  1700     003E                     	ds	1
  1701     003F                     ?___fltol:
  1702     003F                     ___fltol@f1:	
  1703                           ; 4 bytes @ 0x1F
  1704                           
  1705                           
  1706                           ; 4 bytes @ 0x1F
  1707     003F                     	ds	4
  1708     0043                     ??___fltol:
  1709                           
  1710                           ; 1 bytes @ 0x23
  1711     0043                     	ds	4
  1712     0047                     ___fltol@sign1:
  1713                           
  1714                           ; 1 bytes @ 0x27
  1715     0047                     	ds	1
  1716     0048                     ___fltol@exp1:
  1717                           
  1718                           ; 1 bytes @ 0x28
  1719     0048                     	ds	1
  1720     0049                     ?_LM75_setOSTripTemperature:
  1721     0049                     ?_LM75_setHysteresisTemperature:	
  1722                           ; 1 bytes @ 0x29
  1723                           
  1724     0049                     ?_efgtoa:	
  1725                           ; 1 bytes @ 0x29
  1726                           
  1727     0049                     ?_LM75_getHysteresisTemperature:	
  1728                           ; 1 bytes @ 0x29
  1729                           
  1730     0049                     ?_LM75_getOSTripTemperature:	
  1731                           ; 4 bytes @ 0x29
  1732                           
  1733     0049                     efgtoa@fp:	
  1734                           ; 4 bytes @ 0x29
  1735                           
  1736     0049                     LM75_setHysteresisTemperature@temperature:	
  1737                           ; 2 bytes @ 0x29
  1738                           
  1739     0049                     LM75_setOSTripTemperature@temperature:	
  1740                           ; 4 bytes @ 0x29
  1741                           
  1742                           
  1743                           ; 4 bytes @ 0x29
  1744     0049                     	ds	2
  1745     004B                     efgtoa@f:
  1746                           
  1747                           ; 4 bytes @ 0x2B
  1748     004B                     	ds	2
  1749     004D                     LM75_setHysteresisTemperature@data:
  1750     004D                     LM75_setOSTripTemperature@data:	
  1751                           ; 2 bytes @ 0x2D
  1752                           
  1753     004D                     ??_LM75_getHysteresisTemperature:	
  1754                           ; 2 bytes @ 0x2D
  1755                           
  1756     004D                     ??_LM75_getOSTripTemperature:	
  1757                           ; 1 bytes @ 0x2D
  1758                           
  1759                           
  1760                           ; 1 bytes @ 0x2D
  1761     004D                     	ds	2
  1762     004F                     efgtoa@c:
  1763                           
  1764                           ; 1 bytes @ 0x2F
  1765     004F                     	ds	1
  1766     0050                     ??_efgtoa:
  1767                           
  1768                           ; 1 bytes @ 0x30
  1769     0050                     	ds	1
  1770     0051                     LM75_getHysteresisTemperature@rawTemp:
  1771     0051                     LM75_getOSTripTemperature@rawTemp:	
  1772                           ; 1 bytes @ 0x31
  1773                           
  1774                           
  1775                           ; 1 bytes @ 0x31
  1776     0051                     	ds	3
  1777     0054                     ??_vfpfcnvrt:
  1778                           
  1779                           ; 1 bytes @ 0x34
  1780     0054                     	ds	4
  1781     0058                     vfpfcnvrt@convarg:
  1782                           
  1783                           ; 4 bytes @ 0x38
  1784     0058                     	ds	4
  1785     005C                     vfpfcnvrt@c:
  1786                           
  1787                           ; 1 bytes @ 0x3C
  1788     005C                     	ds	1
  1789     005D                     vfpfcnvrt@cp:
  1790                           
  1791                           ; 2 bytes @ 0x3D
  1792     005D                     	ds	2
  1793     005F                     vfprintf@cfmt:
  1794                           
  1795                           ; 2 bytes @ 0x3F
  1796     005F                     	ds	2
  1797     0061                     ??_sprintf:
  1798                           
  1799                           ; 1 bytes @ 0x41
  1800     0061                     	ds	1
  1801     0062                     sprintf@ap:
  1802                           
  1803                           ; 1 bytes @ 0x42
  1804     0062                     	ds	1
  1805     0063                     sprintf@f:
  1806                           
  1807                           ; 11 bytes @ 0x43
  1808     0063                     	ds	11
  1809                           
  1810                           	psect	maintext
  1811     0CBD                     __pmaintext:	
  1812 ;;
  1813 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1814 ;;
  1815 ;; *************** function _main *****************
  1816 ;; Defined at:
  1817 ;;		line 6 in file "main.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  buffer         64    0[BANK3 ] unsigned char [64]
  1822 ;;  osTripTemp      4   72[BANK3 ] float 
  1823 ;;  currentTemp     4   68[BANK3 ] float 
  1824 ;;  hysteresisTe    4   64[BANK3 ] float 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2   36[None  ] int 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : B00/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       0       0      76       0
  1836 ;;      Temps:          0       0       3       0       0
  1837 ;;      Totals:         0       0       3      76       0
  1838 ;;Total ram usage:       79 bytes
  1839 ;; Hardware stack levels required when called: 8
  1840 ;; This function calls:
  1841 ;;		_LM75_getHysteresisTemperature
  1842 ;;		_LM75_getOSTripTemperature
  1843 ;;		_LM75_init
  1844 ;;		_LM75_read
  1845 ;;		_LM75_setDeviceMode
  1846 ;;		_LM75_setFaultQueue
  1847 ;;		_LM75_setHysteresisTemperature
  1848 ;;		_LM75_setOSPolarity
  1849 ;;		_LM75_setOSTripTemperature
  1850 ;;		_UART_TX_Init
  1851 ;;		_UART_Write_Text
  1852 ;;		___flge
  1853 ;;		_sprintf
  1854 ;; This function is called by:
  1855 ;;		Startup code after reset
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859     0CBD                     _main:	
  1860                           ;psect for function _main
  1861                           
  1862     0CBD                     l3582:	
  1863                           ;incstack = 0
  1864                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1865                           
  1866                           
  1867                           ;main.c: 7:     char buffer[64];;main.c: 9:     LM75_init();
  1868     0CBD  160A  158A  21FF  120A  158A  	fcall	_LM75_init
  1869                           
  1870                           ;main.c: 10:     UART_TX_Init();
  1871     0CC2  160A  158A  227C  120A  158A  	fcall	_UART_TX_Init
  1872     0CC7                     l3584:
  1873                           
  1874                           ;main.c: 12:     float currentTemp,hysteresisTemp,osTripTemp;;main.c: 15:     UART_Write
      +                          _Text("LM75 Initialized\n\r");
  1875     0CC7  304D               	movlw	low (STR_1| (0+32768))
  1876     0CC8  00F1               	movwf	UART_Write_Text@text
  1877     0CC9  3099               	movlw	high (STR_1| (0+32768))
  1878     0CCA  00F2               	movwf	UART_Write_Text@text+1
  1879     0CCB  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  1880     0CD0                     l3586:
  1881                           
  1882                           ;main.c: 19:         currentTemp = LM75_read(0x00);
  1883     0CD0  3000               	movlw	0
  1884     0CD1  160A  158A  2625  120A  158A  	fcall	_LM75_read
  1885     0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  1886     0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  1887     0CD8  0837               	movf	?_LM75_read+3,w
  1888     0CD9  1683               	bsf	3,5	;RP0=1, select bank3
  1889     0CDA  1703               	bsf	3,6	;RP1=1, select bank3
  1890     0CDB  00D7               	movwf	(main@currentTemp+3)^(0+384)
  1891     0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  1892     0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  1893     0CDE  0836               	movf	?_LM75_read+2,w
  1894     0CDF  1683               	bsf	3,5	;RP0=1, select bank3
  1895     0CE0  1703               	bsf	3,6	;RP1=1, select bank3
  1896     0CE1  00D6               	movwf	(main@currentTemp+2)^(0+384)
  1897     0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  1898     0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  1899     0CE4  0835               	movf	?_LM75_read+1,w
  1900     0CE5  1683               	bsf	3,5	;RP0=1, select bank3
  1901     0CE6  1703               	bsf	3,6	;RP1=1, select bank3
  1902     0CE7  00D5               	movwf	(main@currentTemp+1)^(0+384)
  1903     0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  1904     0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  1905     0CEA  0834               	movf	?_LM75_read,w
  1906     0CEB  1683               	bsf	3,5	;RP0=1, select bank3
  1907     0CEC  1703               	bsf	3,6	;RP1=1, select bank3
  1908     0CED  00D4               	movwf	main@currentTemp^(0+384)
  1909     0CEE                     l3588:
  1910                           
  1911                           ;main.c: 20:         sprintf(buffer, "Temp: %.1f C\n\r", currentTemp);
  1912     0CEE  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  1913     0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  1914     0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  1915     0CF1  00D5               	movwf	sprintf@s^(0+128)
  1916     0CF2  3060               	movlw	low (STR_2| (0+32768))
  1917     0CF3  00D6               	movwf	sprintf@fmt^(0+128)
  1918     0CF4  3099               	movlw	high (STR_2| (0+32768))
  1919     0CF5  00D7               	movwf	(sprintf@fmt^(0+128)+1)
  1920     0CF6  1683               	bsf	3,5	;RP0=1, select bank3
  1921     0CF7  1703               	bsf	3,6	;RP1=1, select bank3
  1922     0CF8  0857               	movf	(main@currentTemp+3)^(0+384),w
  1923     0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  1924     0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  1925     0CFB  00DB               	movwf	((?_sprintf+3)^(0+128)+3)
  1926     0CFC  1683               	bsf	3,5	;RP0=1, select bank3
  1927     0CFD  1703               	bsf	3,6	;RP1=1, select bank3
  1928     0CFE  0856               	movf	(main@currentTemp+2)^(0+384),w
  1929     0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  1930     0D00  1303               	bcf	3,6	;RP1=0, select bank1
  1931     0D01  00DA               	movwf	((?_sprintf+2)^(0+128)+3)
  1932     0D02  1683               	bsf	3,5	;RP0=1, select bank3
  1933     0D03  1703               	bsf	3,6	;RP1=1, select bank3
  1934     0D04  0855               	movf	(main@currentTemp+1)^(0+384),w
  1935     0D05  1683               	bsf	3,5	;RP0=1, select bank1
  1936     0D06  1303               	bcf	3,6	;RP1=0, select bank1
  1937     0D07  00D9               	movwf	((?_sprintf+1)^(0+128)+3)
  1938     0D08  1683               	bsf	3,5	;RP0=1, select bank3
  1939     0D09  1703               	bsf	3,6	;RP1=1, select bank3
  1940     0D0A  0854               	movf	main@currentTemp^(0+384),w
  1941     0D0B  1683               	bsf	3,5	;RP0=1, select bank1
  1942     0D0C  1303               	bcf	3,6	;RP1=0, select bank1
  1943     0D0D  00D8               	movwf	(?_sprintf^(0+128)+3)
  1944     0D0E  160A  158A  245D  120A  158A  	fcall	_sprintf
  1945     0D13                     l3590:
  1946                           
  1947                           ;main.c: 21:         UART_Write_Text(buffer);
  1948     0D13  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  1949     0D14  00F1               	movwf	UART_Write_Text@text
  1950     0D15  3001               	movlw	1
  1951     0D16  00F2               	movwf	UART_Write_Text@text+1
  1952     0D17  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  1953     0D1C                     l3592:
  1954                           
  1955                           ;main.c: 22:         if (RB0 == 1) {
  1956     0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  1957     0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  1958     0D1E  1C06               	btfss	6,0	;volatile
  1959     0D1F  2D21               	goto	u4881
  1960     0D20  2D22               	goto	u4880
  1961     0D21                     u4881:
  1962     0D21  2DEE               	goto	l38
  1963     0D22                     u4880:
  1964     0D22                     l3594:
  1965                           
  1966                           ;main.c: 23:             UART_Write_Text("Default Mode\n\r");
  1967     0D22  306F               	movlw	low (STR_3| (0+32768))
  1968     0D23  00F1               	movwf	UART_Write_Text@text
  1969     0D24  3099               	movlw	high (STR_3| (0+32768))
  1970     0D25  00F2               	movwf	UART_Write_Text@text+1
  1971     0D26  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  1972     0D2B                     l3596:
  1973                           
  1974                           ;main.c: 24:             hysteresisTemp = LM75_getHysteresisTemperature();
  1975     0D2B  160A  158A  24BD  120A  158A  	fcall	_LM75_getHysteresisTemperature
  1976     0D30  1283               	bcf	3,5	;RP0=0, select bank0
  1977     0D31  1303               	bcf	3,6	;RP1=0, select bank0
  1978     0D32  084C               	movf	?_LM75_getHysteresisTemperature+3,w
  1979     0D33  1683               	bsf	3,5	;RP0=1, select bank3
  1980     0D34  1703               	bsf	3,6	;RP1=1, select bank3
  1981     0D35  00D3               	movwf	(main@hysteresisTemp+3)^(0+384)
  1982     0D36  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0D37  1303               	bcf	3,6	;RP1=0, select bank0
  1984     0D38  084B               	movf	?_LM75_getHysteresisTemperature+2,w
  1985     0D39  1683               	bsf	3,5	;RP0=1, select bank3
  1986     0D3A  1703               	bsf	3,6	;RP1=1, select bank3
  1987     0D3B  00D2               	movwf	(main@hysteresisTemp+2)^(0+384)
  1988     0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  1989     0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  1990     0D3E  084A               	movf	?_LM75_getHysteresisTemperature+1,w
  1991     0D3F  1683               	bsf	3,5	;RP0=1, select bank3
  1992     0D40  1703               	bsf	3,6	;RP1=1, select bank3
  1993     0D41  00D1               	movwf	(main@hysteresisTemp+1)^(0+384)
  1994     0D42  1283               	bcf	3,5	;RP0=0, select bank0
  1995     0D43  1303               	bcf	3,6	;RP1=0, select bank0
  1996     0D44  0849               	movf	?_LM75_getHysteresisTemperature,w
  1997     0D45  1683               	bsf	3,5	;RP0=1, select bank3
  1998     0D46  1703               	bsf	3,6	;RP1=1, select bank3
  1999     0D47  00D0               	movwf	main@hysteresisTemp^(0+384)
  2000     0D48                     l3598:
  2001                           
  2002                           ;main.c: 25:             osTripTemp = LM75_getOSTripTemperature();
  2003     0D48  160A  158A  24F4  120A  158A  	fcall	_LM75_getOSTripTemperature
  2004     0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  2005     0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  2006     0D4F  084C               	movf	?_LM75_getOSTripTemperature+3,w
  2007     0D50  1683               	bsf	3,5	;RP0=1, select bank3
  2008     0D51  1703               	bsf	3,6	;RP1=1, select bank3
  2009     0D52  00DB               	movwf	(main@osTripTemp+3)^(0+384)
  2010     0D53  1283               	bcf	3,5	;RP0=0, select bank0
  2011     0D54  1303               	bcf	3,6	;RP1=0, select bank0
  2012     0D55  084B               	movf	?_LM75_getOSTripTemperature+2,w
  2013     0D56  1683               	bsf	3,5	;RP0=1, select bank3
  2014     0D57  1703               	bsf	3,6	;RP1=1, select bank3
  2015     0D58  00DA               	movwf	(main@osTripTemp+2)^(0+384)
  2016     0D59  1283               	bcf	3,5	;RP0=0, select bank0
  2017     0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  2018     0D5B  084A               	movf	?_LM75_getOSTripTemperature+1,w
  2019     0D5C  1683               	bsf	3,5	;RP0=1, select bank3
  2020     0D5D  1703               	bsf	3,6	;RP1=1, select bank3
  2021     0D5E  00D9               	movwf	(main@osTripTemp+1)^(0+384)
  2022     0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  2023     0D60  1303               	bcf	3,6	;RP1=0, select bank0
  2024     0D61  0849               	movf	?_LM75_getOSTripTemperature,w
  2025     0D62  1683               	bsf	3,5	;RP0=1, select bank3
  2026     0D63  1703               	bsf	3,6	;RP1=1, select bank3
  2027     0D64  00D8               	movwf	main@osTripTemp^(0+384)
  2028                           
  2029                           ;main.c: 26:             sprintf(buffer, "Default Thresholds:\nOS Trip: %.1fC\nHysteresi
      +                          s: %.1fC\n\r", osTripTemp, hysteresisTemp);
  2030     0D65  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  2031     0D66  1683               	bsf	3,5	;RP0=1, select bank1
  2032     0D67  1303               	bcf	3,6	;RP1=0, select bank1
  2033     0D68  00D5               	movwf	sprintf@s^(0+128)
  2034     0D69  3078               	movlw	low (STR_4| (0+32768))
  2035     0D6A  00D6               	movwf	sprintf@fmt^(0+128)
  2036     0D6B  3098               	movlw	high (STR_4| (0+32768))
  2037     0D6C  00D7               	movwf	(sprintf@fmt^(0+128)+1)
  2038     0D6D  1683               	bsf	3,5	;RP0=1, select bank3
  2039     0D6E  1703               	bsf	3,6	;RP1=1, select bank3
  2040     0D6F  085B               	movf	(main@osTripTemp+3)^(0+384),w
  2041     0D70  1683               	bsf	3,5	;RP0=1, select bank1
  2042     0D71  1303               	bcf	3,6	;RP1=0, select bank1
  2043     0D72  00DB               	movwf	((?_sprintf+3)^(0+128)+3)
  2044     0D73  1683               	bsf	3,5	;RP0=1, select bank3
  2045     0D74  1703               	bsf	3,6	;RP1=1, select bank3
  2046     0D75  085A               	movf	(main@osTripTemp+2)^(0+384),w
  2047     0D76  1683               	bsf	3,5	;RP0=1, select bank1
  2048     0D77  1303               	bcf	3,6	;RP1=0, select bank1
  2049     0D78  00DA               	movwf	((?_sprintf+2)^(0+128)+3)
  2050     0D79  1683               	bsf	3,5	;RP0=1, select bank3
  2051     0D7A  1703               	bsf	3,6	;RP1=1, select bank3
  2052     0D7B  0859               	movf	(main@osTripTemp+1)^(0+384),w
  2053     0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  2054     0D7D  1303               	bcf	3,6	;RP1=0, select bank1
  2055     0D7E  00D9               	movwf	((?_sprintf+1)^(0+128)+3)
  2056     0D7F  1683               	bsf	3,5	;RP0=1, select bank3
  2057     0D80  1703               	bsf	3,6	;RP1=1, select bank3
  2058     0D81  0858               	movf	main@osTripTemp^(0+384),w
  2059     0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2060     0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2061     0D84  00D8               	movwf	(?_sprintf^(0+128)+3)
  2062     0D85  1683               	bsf	3,5	;RP0=1, select bank3
  2063     0D86  1703               	bsf	3,6	;RP1=1, select bank3
  2064     0D87  0853               	movf	(main@hysteresisTemp+3)^(0+384),w
  2065     0D88  1683               	bsf	3,5	;RP0=1, select bank1
  2066     0D89  1303               	bcf	3,6	;RP1=0, select bank1
  2067     0D8A  00DF               	movwf	((?_sprintf+3)^(0+128)+7)
  2068     0D8B  1683               	bsf	3,5	;RP0=1, select bank3
  2069     0D8C  1703               	bsf	3,6	;RP1=1, select bank3
  2070     0D8D  0852               	movf	(main@hysteresisTemp+2)^(0+384),w
  2071     0D8E  1683               	bsf	3,5	;RP0=1, select bank1
  2072     0D8F  1303               	bcf	3,6	;RP1=0, select bank1
  2073     0D90  00DE               	movwf	((?_sprintf+2)^(0+128)+7)
  2074     0D91  1683               	bsf	3,5	;RP0=1, select bank3
  2075     0D92  1703               	bsf	3,6	;RP1=1, select bank3
  2076     0D93  0851               	movf	(main@hysteresisTemp+1)^(0+384),w
  2077     0D94  1683               	bsf	3,5	;RP0=1, select bank1
  2078     0D95  1303               	bcf	3,6	;RP1=0, select bank1
  2079     0D96  00DD               	movwf	((?_sprintf+1)^(0+128)+7)
  2080     0D97  1683               	bsf	3,5	;RP0=1, select bank3
  2081     0D98  1703               	bsf	3,6	;RP1=1, select bank3
  2082     0D99  0850               	movf	main@hysteresisTemp^(0+384),w
  2083     0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  2084     0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  2085     0D9C  00DC               	movwf	(?_sprintf^(0+128)+7)
  2086     0D9D  160A  158A  245D  120A  158A  	fcall	_sprintf
  2087                           
  2088                           ;main.c: 27:             UART_Write_Text(buffer);
  2089     0DA2  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  2090     0DA3  00F1               	movwf	UART_Write_Text@text
  2091     0DA4  3001               	movlw	1
  2092     0DA5  00F2               	movwf	UART_Write_Text@text+1
  2093     0DA6  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2094     0DAB                     l3600:
  2095                           
  2096                           ;main.c: 29:             if (currentTemp > osTripTemp) {
  2097     0DAB  1683               	bsf	3,5	;RP0=1, select bank3
  2098     0DAC  1703               	bsf	3,6	;RP1=1, select bank3
  2099     0DAD  085B               	movf	(main@osTripTemp+3)^(0+384),w
  2100     0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  2101     0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  2102     0DB0  00B8               	movwf	___flge@ff1+3
  2103     0DB1  1683               	bsf	3,5	;RP0=1, select bank3
  2104     0DB2  1703               	bsf	3,6	;RP1=1, select bank3
  2105     0DB3  085A               	movf	(main@osTripTemp+2)^(0+384),w
  2106     0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  2107     0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  2108     0DB6  00B7               	movwf	___flge@ff1+2
  2109     0DB7  1683               	bsf	3,5	;RP0=1, select bank3
  2110     0DB8  1703               	bsf	3,6	;RP1=1, select bank3
  2111     0DB9  0859               	movf	(main@osTripTemp+1)^(0+384),w
  2112     0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  2113     0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  2114     0DBC  00B6               	movwf	___flge@ff1+1
  2115     0DBD  1683               	bsf	3,5	;RP0=1, select bank3
  2116     0DBE  1703               	bsf	3,6	;RP1=1, select bank3
  2117     0DBF  0858               	movf	main@osTripTemp^(0+384),w
  2118     0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  2120     0DC2  00B5               	movwf	___flge@ff1
  2121     0DC3  1683               	bsf	3,5	;RP0=1, select bank3
  2122     0DC4  1703               	bsf	3,6	;RP1=1, select bank3
  2123     0DC5  0857               	movf	(main@currentTemp+3)^(0+384),w
  2124     0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  2125     0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  2126     0DC8  00BC               	movwf	___flge@ff2+3
  2127     0DC9  1683               	bsf	3,5	;RP0=1, select bank3
  2128     0DCA  1703               	bsf	3,6	;RP1=1, select bank3
  2129     0DCB  0856               	movf	(main@currentTemp+2)^(0+384),w
  2130     0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  2131     0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  2132     0DCE  00BB               	movwf	___flge@ff2+2
  2133     0DCF  1683               	bsf	3,5	;RP0=1, select bank3
  2134     0DD0  1703               	bsf	3,6	;RP1=1, select bank3
  2135     0DD1  0855               	movf	(main@currentTemp+1)^(0+384),w
  2136     0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  2137     0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  2138     0DD4  00BA               	movwf	___flge@ff2+1
  2139     0DD5  1683               	bsf	3,5	;RP0=1, select bank3
  2140     0DD6  1703               	bsf	3,6	;RP1=1, select bank3
  2141     0DD7  0854               	movf	main@currentTemp^(0+384),w
  2142     0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  2143     0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  2144     0DDA  00B9               	movwf	___flge@ff2
  2145     0DDB  160A  118A  205E  120A  158A  	fcall	___flge
  2146     0DE0  1803               	btfsc	3,0
  2147     0DE1  2DE3               	goto	u4891
  2148     0DE2  2DE4               	goto	u4890
  2149     0DE3                     u4891:
  2150     0DE3  2FED               	goto	l3652
  2151     0DE4                     u4890:
  2152     0DE4                     l3602:
  2153                           
  2154                           ;main.c: 30:                 UART_Write_Text("Warning: Temperature exceeded default thre
      +                          shold\n\r");
  2155     0DE4  301B               	movlw	low (STR_5| (0+32768))
  2156     0DE5  00F1               	movwf	UART_Write_Text@text
  2157     0DE6  3099               	movlw	high (STR_5| (0+32768))
  2158     0DE7  00F2               	movwf	UART_Write_Text@text+1
  2159     0DE8  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2160     0DED  2FED               	goto	l3652
  2161     0DEE                     l38:	
  2162                           ;main.c: 33:         else if (RB1 == 1) {
  2163                           
  2164     0DEE  1C86               	btfss	6,1	;volatile
  2165     0DEF  2DF1               	goto	u4901
  2166     0DF0  2DF2               	goto	u4900
  2167     0DF1                     u4901:
  2168     0DF1  2EEE               	goto	l41
  2169     0DF2                     u4900:
  2170     0DF2                     l3604:
  2171                           
  2172                           ;main.c: 34:             UART_Write_Text("Normal Mode\n\r");
  2173     0DF2  307E               	movlw	low (STR_6| (0+32768))
  2174     0DF3  00F1               	movwf	UART_Write_Text@text
  2175     0DF4  3099               	movlw	high (STR_6| (0+32768))
  2176     0DF5  00F2               	movwf	UART_Write_Text@text+1
  2177     0DF6  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2178     0DFB                     l3606:
  2179                           
  2180                           ;main.c: 36:             LM75_setDeviceMode(0);
  2181     0DFB  3000               	movlw	0
  2182     0DFC  160A  158A  22BA  120A  158A  	fcall	_LM75_setDeviceMode
  2183     0E01                     l3608:
  2184                           
  2185                           ;main.c: 37:             LM75_setOSPolarity(0);
  2186     0E01  3000               	movlw	0
  2187     0E02  160A  158A  22D1  120A  158A  	fcall	_LM75_setOSPolarity
  2188     0E07                     l3610:
  2189                           
  2190                           ;main.c: 38:             LM75_setOSTripTemperature(60.0);
  2191     0E07  3042               	movlw	66
  2192     0E08  1283               	bcf	3,5	;RP0=0, select bank0
  2193     0E09  1303               	bcf	3,6	;RP1=0, select bank0
  2194     0E0A  00CC               	movwf	LM75_setOSTripTemperature@temperature+3
  2195     0E0B  3070               	movlw	112
  2196     0E0C  00CB               	movwf	LM75_setOSTripTemperature@temperature+2
  2197     0E0D  3000               	movlw	0
  2198     0E0E  00CA               	movwf	LM75_setOSTripTemperature@temperature+1
  2199     0E0F  3000               	movlw	0
  2200     0E10  00C9               	movwf	LM75_setOSTripTemperature@temperature
  2201     0E11  160A  158A  2562  120A  158A  	fcall	_LM75_setOSTripTemperature
  2202     0E16                     l3612:
  2203                           
  2204                           ;main.c: 39:             LM75_setHysteresisTemperature(55.0);
  2205     0E16  3042               	movlw	66
  2206     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  2207     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  2208     0E19  00CC               	movwf	LM75_setHysteresisTemperature@temperature+3
  2209     0E1A  305C               	movlw	92
  2210     0E1B  00CB               	movwf	LM75_setHysteresisTemperature@temperature+2
  2211     0E1C  3000               	movlw	0
  2212     0E1D  00CA               	movwf	LM75_setHysteresisTemperature@temperature+1
  2213     0E1E  3000               	movlw	0
  2214     0E1F  00C9               	movwf	LM75_setHysteresisTemperature@temperature
  2215     0E20  160A  158A  252B  120A  158A  	fcall	_LM75_setHysteresisTemperature
  2216     0E25                     l3614:
  2217                           
  2218                           ;main.c: 40:             LM75_setFaultQueue(1);
  2219     0E25  3001               	movlw	1
  2220     0E26  160A  158A  2391  120A  158A  	fcall	_LM75_setFaultQueue
  2221     0E2B                     l3616:
  2222                           
  2223                           ;main.c: 41:             hysteresisTemp = LM75_getHysteresisTemperature();
  2224     0E2B  160A  158A  24BD  120A  158A  	fcall	_LM75_getHysteresisTemperature
  2225     0E30  1283               	bcf	3,5	;RP0=0, select bank0
  2226     0E31  1303               	bcf	3,6	;RP1=0, select bank0
  2227     0E32  084C               	movf	?_LM75_getHysteresisTemperature+3,w
  2228     0E33  1683               	bsf	3,5	;RP0=1, select bank3
  2229     0E34  1703               	bsf	3,6	;RP1=1, select bank3
  2230     0E35  00D3               	movwf	(main@hysteresisTemp+3)^(0+384)
  2231     0E36  1283               	bcf	3,5	;RP0=0, select bank0
  2232     0E37  1303               	bcf	3,6	;RP1=0, select bank0
  2233     0E38  084B               	movf	?_LM75_getHysteresisTemperature+2,w
  2234     0E39  1683               	bsf	3,5	;RP0=1, select bank3
  2235     0E3A  1703               	bsf	3,6	;RP1=1, select bank3
  2236     0E3B  00D2               	movwf	(main@hysteresisTemp+2)^(0+384)
  2237     0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  2238     0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  2239     0E3E  084A               	movf	?_LM75_getHysteresisTemperature+1,w
  2240     0E3F  1683               	bsf	3,5	;RP0=1, select bank3
  2241     0E40  1703               	bsf	3,6	;RP1=1, select bank3
  2242     0E41  00D1               	movwf	(main@hysteresisTemp+1)^(0+384)
  2243     0E42  1283               	bcf	3,5	;RP0=0, select bank0
  2244     0E43  1303               	bcf	3,6	;RP1=0, select bank0
  2245     0E44  0849               	movf	?_LM75_getHysteresisTemperature,w
  2246     0E45  1683               	bsf	3,5	;RP0=1, select bank3
  2247     0E46  1703               	bsf	3,6	;RP1=1, select bank3
  2248     0E47  00D0               	movwf	main@hysteresisTemp^(0+384)
  2249     0E48                     l3618:
  2250                           
  2251                           ;main.c: 42:             osTripTemp = LM75_getOSTripTemperature();
  2252     0E48  160A  158A  24F4  120A  158A  	fcall	_LM75_getOSTripTemperature
  2253     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  2254     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  2255     0E4F  084C               	movf	?_LM75_getOSTripTemperature+3,w
  2256     0E50  1683               	bsf	3,5	;RP0=1, select bank3
  2257     0E51  1703               	bsf	3,6	;RP1=1, select bank3
  2258     0E52  00DB               	movwf	(main@osTripTemp+3)^(0+384)
  2259     0E53  1283               	bcf	3,5	;RP0=0, select bank0
  2260     0E54  1303               	bcf	3,6	;RP1=0, select bank0
  2261     0E55  084B               	movf	?_LM75_getOSTripTemperature+2,w
  2262     0E56  1683               	bsf	3,5	;RP0=1, select bank3
  2263     0E57  1703               	bsf	3,6	;RP1=1, select bank3
  2264     0E58  00DA               	movwf	(main@osTripTemp+2)^(0+384)
  2265     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  2266     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  2267     0E5B  084A               	movf	?_LM75_getOSTripTemperature+1,w
  2268     0E5C  1683               	bsf	3,5	;RP0=1, select bank3
  2269     0E5D  1703               	bsf	3,6	;RP1=1, select bank3
  2270     0E5E  00D9               	movwf	(main@osTripTemp+1)^(0+384)
  2271     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  2272     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  2273     0E61  0849               	movf	?_LM75_getOSTripTemperature,w
  2274     0E62  1683               	bsf	3,5	;RP0=1, select bank3
  2275     0E63  1703               	bsf	3,6	;RP1=1, select bank3
  2276     0E64  00D8               	movwf	main@osTripTemp^(0+384)
  2277     0E65                     l3620:
  2278                           
  2279                           ;main.c: 43:             sprintf(buffer, "Normal Mode Thresholds:\nOS Trip: %.1fC\nHyste
      +                          resis: %.1fC\n\r", osTripTemp, hysteresisTemp);
  2280     0E65  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  2281     0E66  1683               	bsf	3,5	;RP0=1, select bank1
  2282     0E67  1303               	bcf	3,6	;RP1=0, select bank1
  2283     0E68  00D5               	movwf	sprintf@s^(0+128)
  2284     0E69  303D               	movlw	low (STR_7| (0+32768))
  2285     0E6A  00D6               	movwf	sprintf@fmt^(0+128)
  2286     0E6B  3098               	movlw	high (STR_7| (0+32768))
  2287     0E6C  00D7               	movwf	(sprintf@fmt^(0+128)+1)
  2288     0E6D  1683               	bsf	3,5	;RP0=1, select bank3
  2289     0E6E  1703               	bsf	3,6	;RP1=1, select bank3
  2290     0E6F  085B               	movf	(main@osTripTemp+3)^(0+384),w
  2291     0E70  1683               	bsf	3,5	;RP0=1, select bank1
  2292     0E71  1303               	bcf	3,6	;RP1=0, select bank1
  2293     0E72  00DB               	movwf	((?_sprintf+3)^(0+128)+3)
  2294     0E73  1683               	bsf	3,5	;RP0=1, select bank3
  2295     0E74  1703               	bsf	3,6	;RP1=1, select bank3
  2296     0E75  085A               	movf	(main@osTripTemp+2)^(0+384),w
  2297     0E76  1683               	bsf	3,5	;RP0=1, select bank1
  2298     0E77  1303               	bcf	3,6	;RP1=0, select bank1
  2299     0E78  00DA               	movwf	((?_sprintf+2)^(0+128)+3)
  2300     0E79  1683               	bsf	3,5	;RP0=1, select bank3
  2301     0E7A  1703               	bsf	3,6	;RP1=1, select bank3
  2302     0E7B  0859               	movf	(main@osTripTemp+1)^(0+384),w
  2303     0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  2304     0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  2305     0E7E  00D9               	movwf	((?_sprintf+1)^(0+128)+3)
  2306     0E7F  1683               	bsf	3,5	;RP0=1, select bank3
  2307     0E80  1703               	bsf	3,6	;RP1=1, select bank3
  2308     0E81  0858               	movf	main@osTripTemp^(0+384),w
  2309     0E82  1683               	bsf	3,5	;RP0=1, select bank1
  2310     0E83  1303               	bcf	3,6	;RP1=0, select bank1
  2311     0E84  00D8               	movwf	(?_sprintf^(0+128)+3)
  2312     0E85  1683               	bsf	3,5	;RP0=1, select bank3
  2313     0E86  1703               	bsf	3,6	;RP1=1, select bank3
  2314     0E87  0853               	movf	(main@hysteresisTemp+3)^(0+384),w
  2315     0E88  1683               	bsf	3,5	;RP0=1, select bank1
  2316     0E89  1303               	bcf	3,6	;RP1=0, select bank1
  2317     0E8A  00DF               	movwf	((?_sprintf+3)^(0+128)+7)
  2318     0E8B  1683               	bsf	3,5	;RP0=1, select bank3
  2319     0E8C  1703               	bsf	3,6	;RP1=1, select bank3
  2320     0E8D  0852               	movf	(main@hysteresisTemp+2)^(0+384),w
  2321     0E8E  1683               	bsf	3,5	;RP0=1, select bank1
  2322     0E8F  1303               	bcf	3,6	;RP1=0, select bank1
  2323     0E90  00DE               	movwf	((?_sprintf+2)^(0+128)+7)
  2324     0E91  1683               	bsf	3,5	;RP0=1, select bank3
  2325     0E92  1703               	bsf	3,6	;RP1=1, select bank3
  2326     0E93  0851               	movf	(main@hysteresisTemp+1)^(0+384),w
  2327     0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2328     0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2329     0E96  00DD               	movwf	((?_sprintf+1)^(0+128)+7)
  2330     0E97  1683               	bsf	3,5	;RP0=1, select bank3
  2331     0E98  1703               	bsf	3,6	;RP1=1, select bank3
  2332     0E99  0850               	movf	main@hysteresisTemp^(0+384),w
  2333     0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  2334     0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  2335     0E9C  00DC               	movwf	(?_sprintf^(0+128)+7)
  2336     0E9D  160A  158A  245D  120A  158A  	fcall	_sprintf
  2337     0EA2                     l3622:
  2338                           
  2339                           ;main.c: 44:             UART_Write_Text(buffer);
  2340     0EA2  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  2341     0EA3  00F1               	movwf	UART_Write_Text@text
  2342     0EA4  3001               	movlw	1
  2343     0EA5  00F2               	movwf	UART_Write_Text@text+1
  2344     0EA6  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2345     0EAB                     l3624:
  2346                           
  2347                           ;main.c: 45:             if (currentTemp > osTripTemp) {
  2348     0EAB  1683               	bsf	3,5	;RP0=1, select bank3
  2349     0EAC  1703               	bsf	3,6	;RP1=1, select bank3
  2350     0EAD  085B               	movf	(main@osTripTemp+3)^(0+384),w
  2351     0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  2352     0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  2353     0EB0  00B8               	movwf	___flge@ff1+3
  2354     0EB1  1683               	bsf	3,5	;RP0=1, select bank3
  2355     0EB2  1703               	bsf	3,6	;RP1=1, select bank3
  2356     0EB3  085A               	movf	(main@osTripTemp+2)^(0+384),w
  2357     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2358     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2359     0EB6  00B7               	movwf	___flge@ff1+2
  2360     0EB7  1683               	bsf	3,5	;RP0=1, select bank3
  2361     0EB8  1703               	bsf	3,6	;RP1=1, select bank3
  2362     0EB9  0859               	movf	(main@osTripTemp+1)^(0+384),w
  2363     0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  2364     0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  2365     0EBC  00B6               	movwf	___flge@ff1+1
  2366     0EBD  1683               	bsf	3,5	;RP0=1, select bank3
  2367     0EBE  1703               	bsf	3,6	;RP1=1, select bank3
  2368     0EBF  0858               	movf	main@osTripTemp^(0+384),w
  2369     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  2370     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  2371     0EC2  00B5               	movwf	___flge@ff1
  2372     0EC3  1683               	bsf	3,5	;RP0=1, select bank3
  2373     0EC4  1703               	bsf	3,6	;RP1=1, select bank3
  2374     0EC5  0857               	movf	(main@currentTemp+3)^(0+384),w
  2375     0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  2376     0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  2377     0EC8  00BC               	movwf	___flge@ff2+3
  2378     0EC9  1683               	bsf	3,5	;RP0=1, select bank3
  2379     0ECA  1703               	bsf	3,6	;RP1=1, select bank3
  2380     0ECB  0856               	movf	(main@currentTemp+2)^(0+384),w
  2381     0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  2382     0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  2383     0ECE  00BB               	movwf	___flge@ff2+2
  2384     0ECF  1683               	bsf	3,5	;RP0=1, select bank3
  2385     0ED0  1703               	bsf	3,6	;RP1=1, select bank3
  2386     0ED1  0855               	movf	(main@currentTemp+1)^(0+384),w
  2387     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  2388     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  2389     0ED4  00BA               	movwf	___flge@ff2+1
  2390     0ED5  1683               	bsf	3,5	;RP0=1, select bank3
  2391     0ED6  1703               	bsf	3,6	;RP1=1, select bank3
  2392     0ED7  0854               	movf	main@currentTemp^(0+384),w
  2393     0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  2394     0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  2395     0EDA  00B9               	movwf	___flge@ff2
  2396     0EDB  160A  118A  205E  120A  158A  	fcall	___flge
  2397     0EE0  1803               	btfsc	3,0
  2398     0EE1  2EE3               	goto	u4911
  2399     0EE2  2EE4               	goto	u4910
  2400     0EE3                     u4911:
  2401     0EE3  2FED               	goto	l3652
  2402     0EE4                     u4910:
  2403     0EE4                     l3626:
  2404                           
  2405                           ;main.c: 46:                 UART_Write_Text("Warning: Temperature exceeded Normal mode 
      +                          threshold\n\r");
  2406     0EE4  30AF               	movlw	low (STR_8| (0+32768))
  2407     0EE5  00F1               	movwf	UART_Write_Text@text
  2408     0EE6  3098               	movlw	high (STR_8| (0+32768))
  2409     0EE7  00F2               	movwf	UART_Write_Text@text+1
  2410     0EE8  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2411     0EED  2FED               	goto	l3652
  2412     0EEE                     l41:	
  2413                           ;main.c: 49:         else if (RB2 == 1) {
  2414                           
  2415     0EEE  1D06               	btfss	6,2	;volatile
  2416     0EEF  2EF1               	goto	u4921
  2417     0EF0  2EF2               	goto	u4920
  2418     0EF1                     u4921:
  2419     0EF1  2FED               	goto	l3652
  2420     0EF2                     u4920:
  2421     0EF2                     l3628:
  2422                           
  2423                           ;main.c: 50:             UART_Write_Text("Safety Mode"
  2424     0EF2  308C               	movlw	low (STR_9| (0+32768))
  2425     0EF3  00F1               	movwf	UART_Write_Text@text
  2426     0EF4  3099               	movlw	high (STR_9| (0+32768))
  2427     0EF5  00F2               	movwf	UART_Write_Text@text+1
  2428     0EF6  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2429     0EFB                     l3630:
  2430                           
  2431                           ;main.c: 53:             LM75_setDeviceMode(1);
  2432     0EFB  3001               	movlw	1
  2433     0EFC  160A  158A  22BA  120A  158A  	fcall	_LM75_setDeviceMode
  2434     0F01                     l3632:
  2435                           
  2436                           ;main.c: 54:             LM75_setOSPolarity(1);
  2437     0F01  3001               	movlw	1
  2438     0F02  160A  158A  22D1  120A  158A  	fcall	_LM75_setOSPolarity
  2439     0F07                     l3634:
  2440                           
  2441                           ;main.c: 55:             LM75_setOSTripTemperature(70.0);
  2442     0F07  3042               	movlw	66
  2443     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  2444     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  2445     0F0A  00CC               	movwf	LM75_setOSTripTemperature@temperature+3
  2446     0F0B  308C               	movlw	140
  2447     0F0C  00CB               	movwf	LM75_setOSTripTemperature@temperature+2
  2448     0F0D  3000               	movlw	0
  2449     0F0E  00CA               	movwf	LM75_setOSTripTemperature@temperature+1
  2450     0F0F  3000               	movlw	0
  2451     0F10  00C9               	movwf	LM75_setOSTripTemperature@temperature
  2452     0F11  160A  158A  2562  120A  158A  	fcall	_LM75_setOSTripTemperature
  2453     0F16                     l3636:
  2454                           
  2455                           ;main.c: 56:             LM75_setHysteresisTemperature(65.0);
  2456     0F16  3042               	movlw	66
  2457     0F17  1283               	bcf	3,5	;RP0=0, select bank0
  2458     0F18  1303               	bcf	3,6	;RP1=0, select bank0
  2459     0F19  00CC               	movwf	LM75_setHysteresisTemperature@temperature+3
  2460     0F1A  3082               	movlw	130
  2461     0F1B  00CB               	movwf	LM75_setHysteresisTemperature@temperature+2
  2462     0F1C  3000               	movlw	0
  2463     0F1D  00CA               	movwf	LM75_setHysteresisTemperature@temperature+1
  2464     0F1E  3000               	movlw	0
  2465     0F1F  00C9               	movwf	LM75_setHysteresisTemperature@temperature
  2466     0F20  160A  158A  252B  120A  158A  	fcall	_LM75_setHysteresisTemperature
  2467     0F25                     l3638:
  2468                           
  2469                           ;main.c: 57:             LM75_setFaultQueue(2);
  2470     0F25  3002               	movlw	2
  2471     0F26  160A  158A  2391  120A  158A  	fcall	_LM75_setFaultQueue
  2472     0F2B                     l3640:
  2473                           
  2474                           ;main.c: 58:             hysteresisTemp = LM75_getHysteresisTemperature();
  2475     0F2B  160A  158A  24BD  120A  158A  	fcall	_LM75_getHysteresisTemperature
  2476     0F30  1283               	bcf	3,5	;RP0=0, select bank0
  2477     0F31  1303               	bcf	3,6	;RP1=0, select bank0
  2478     0F32  084C               	movf	?_LM75_getHysteresisTemperature+3,w
  2479     0F33  1683               	bsf	3,5	;RP0=1, select bank3
  2480     0F34  1703               	bsf	3,6	;RP1=1, select bank3
  2481     0F35  00D3               	movwf	(main@hysteresisTemp+3)^(0+384)
  2482     0F36  1283               	bcf	3,5	;RP0=0, select bank0
  2483     0F37  1303               	bcf	3,6	;RP1=0, select bank0
  2484     0F38  084B               	movf	?_LM75_getHysteresisTemperature+2,w
  2485     0F39  1683               	bsf	3,5	;RP0=1, select bank3
  2486     0F3A  1703               	bsf	3,6	;RP1=1, select bank3
  2487     0F3B  00D2               	movwf	(main@hysteresisTemp+2)^(0+384)
  2488     0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2489     0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2490     0F3E  084A               	movf	?_LM75_getHysteresisTemperature+1,w
  2491     0F3F  1683               	bsf	3,5	;RP0=1, select bank3
  2492     0F40  1703               	bsf	3,6	;RP1=1, select bank3
  2493     0F41  00D1               	movwf	(main@hysteresisTemp+1)^(0+384)
  2494     0F42  1283               	bcf	3,5	;RP0=0, select bank0
  2495     0F43  1303               	bcf	3,6	;RP1=0, select bank0
  2496     0F44  0849               	movf	?_LM75_getHysteresisTemperature,w
  2497     0F45  1683               	bsf	3,5	;RP0=1, select bank3
  2498     0F46  1703               	bsf	3,6	;RP1=1, select bank3
  2499     0F47  00D0               	movwf	main@hysteresisTemp^(0+384)
  2500     0F48                     l3642:
  2501                           
  2502                           ;main.c: 59:             osTripTemp = LM75_getOSTripTemperature();
  2503     0F48  160A  158A  24F4  120A  158A  	fcall	_LM75_getOSTripTemperature
  2504     0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  2505     0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  2506     0F4F  084C               	movf	?_LM75_getOSTripTemperature+3,w
  2507     0F50  1683               	bsf	3,5	;RP0=1, select bank3
  2508     0F51  1703               	bsf	3,6	;RP1=1, select bank3
  2509     0F52  00DB               	movwf	(main@osTripTemp+3)^(0+384)
  2510     0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2511     0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2512     0F55  084B               	movf	?_LM75_getOSTripTemperature+2,w
  2513     0F56  1683               	bsf	3,5	;RP0=1, select bank3
  2514     0F57  1703               	bsf	3,6	;RP1=1, select bank3
  2515     0F58  00DA               	movwf	(main@osTripTemp+2)^(0+384)
  2516     0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2517     0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2518     0F5B  084A               	movf	?_LM75_getOSTripTemperature+1,w
  2519     0F5C  1683               	bsf	3,5	;RP0=1, select bank3
  2520     0F5D  1703               	bsf	3,6	;RP1=1, select bank3
  2521     0F5E  00D9               	movwf	(main@osTripTemp+1)^(0+384)
  2522     0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2523     0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2524     0F61  0849               	movf	?_LM75_getOSTripTemperature,w
  2525     0F62  1683               	bsf	3,5	;RP0=1, select bank3
  2526     0F63  1703               	bsf	3,6	;RP1=1, select bank3
  2527     0F64  00D8               	movwf	main@osTripTemp^(0+384)
  2528     0F65                     l3644:
  2529                           
  2530                           ;main.c: 60:             sprintf(buffer, "Safety Mode Thresholds:\n OS Trip: %.1fC \nHys
      +                          teresis: %.1fC\n\r", osTripTemp, hysteresisTemp);
  2531     0F65  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  2532     0F66  1683               	bsf	3,5	;RP0=1, select bank1
  2533     0F67  1303               	bcf	3,6	;RP1=0, select bank1
  2534     0F68  00D5               	movwf	sprintf@s^(0+128)
  2535     0F69  3000               	movlw	low (STR_10| (0+32768))
  2536     0F6A  00D6               	movwf	sprintf@fmt^(0+128)
  2537     0F6B  3098               	movlw	high (STR_10| (0+32768))
  2538     0F6C  00D7               	movwf	(sprintf@fmt^(0+128)+1)
  2539     0F6D  1683               	bsf	3,5	;RP0=1, select bank3
  2540     0F6E  1703               	bsf	3,6	;RP1=1, select bank3
  2541     0F6F  085B               	movf	(main@osTripTemp+3)^(0+384),w
  2542     0F70  1683               	bsf	3,5	;RP0=1, select bank1
  2543     0F71  1303               	bcf	3,6	;RP1=0, select bank1
  2544     0F72  00DB               	movwf	((?_sprintf+3)^(0+128)+3)
  2545     0F73  1683               	bsf	3,5	;RP0=1, select bank3
  2546     0F74  1703               	bsf	3,6	;RP1=1, select bank3
  2547     0F75  085A               	movf	(main@osTripTemp+2)^(0+384),w
  2548     0F76  1683               	bsf	3,5	;RP0=1, select bank1
  2549     0F77  1303               	bcf	3,6	;RP1=0, select bank1
  2550     0F78  00DA               	movwf	((?_sprintf+2)^(0+128)+3)
  2551     0F79  1683               	bsf	3,5	;RP0=1, select bank3
  2552     0F7A  1703               	bsf	3,6	;RP1=1, select bank3
  2553     0F7B  0859               	movf	(main@osTripTemp+1)^(0+384),w
  2554     0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  2555     0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  2556     0F7E  00D9               	movwf	((?_sprintf+1)^(0+128)+3)
  2557     0F7F  1683               	bsf	3,5	;RP0=1, select bank3
  2558     0F80  1703               	bsf	3,6	;RP1=1, select bank3
  2559     0F81  0858               	movf	main@osTripTemp^(0+384),w
  2560     0F82  1683               	bsf	3,5	;RP0=1, select bank1
  2561     0F83  1303               	bcf	3,6	;RP1=0, select bank1
  2562     0F84  00D8               	movwf	(?_sprintf^(0+128)+3)
  2563     0F85  1683               	bsf	3,5	;RP0=1, select bank3
  2564     0F86  1703               	bsf	3,6	;RP1=1, select bank3
  2565     0F87  0853               	movf	(main@hysteresisTemp+3)^(0+384),w
  2566     0F88  1683               	bsf	3,5	;RP0=1, select bank1
  2567     0F89  1303               	bcf	3,6	;RP1=0, select bank1
  2568     0F8A  00DF               	movwf	((?_sprintf+3)^(0+128)+7)
  2569     0F8B  1683               	bsf	3,5	;RP0=1, select bank3
  2570     0F8C  1703               	bsf	3,6	;RP1=1, select bank3
  2571     0F8D  0852               	movf	(main@hysteresisTemp+2)^(0+384),w
  2572     0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  2573     0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  2574     0F90  00DE               	movwf	((?_sprintf+2)^(0+128)+7)
  2575     0F91  1683               	bsf	3,5	;RP0=1, select bank3
  2576     0F92  1703               	bsf	3,6	;RP1=1, select bank3
  2577     0F93  0851               	movf	(main@hysteresisTemp+1)^(0+384),w
  2578     0F94  1683               	bsf	3,5	;RP0=1, select bank1
  2579     0F95  1303               	bcf	3,6	;RP1=0, select bank1
  2580     0F96  00DD               	movwf	((?_sprintf+1)^(0+128)+7)
  2581     0F97  1683               	bsf	3,5	;RP0=1, select bank3
  2582     0F98  1703               	bsf	3,6	;RP1=1, select bank3
  2583     0F99  0850               	movf	main@hysteresisTemp^(0+384),w
  2584     0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  2585     0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  2586     0F9C  00DC               	movwf	(?_sprintf^(0+128)+7)
  2587     0F9D  160A  158A  245D  120A  158A  	fcall	_sprintf
  2588     0FA2                     l3646:
  2589                           
  2590                           ;main.c: 61:             UART_Write_Text(buffer);
  2591     0FA2  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  2592     0FA3  00F1               	movwf	UART_Write_Text@text
  2593     0FA4  3001               	movlw	1
  2594     0FA5  00F2               	movwf	UART_Write_Text@text+1
  2595     0FA6  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2596     0FAB                     l3648:
  2597                           
  2598                           ;main.c: 62:             if (currentTemp > osTripTemp) {
  2599     0FAB  1683               	bsf	3,5	;RP0=1, select bank3
  2600     0FAC  1703               	bsf	3,6	;RP1=1, select bank3
  2601     0FAD  085B               	movf	(main@osTripTemp+3)^(0+384),w
  2602     0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  2603     0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  2604     0FB0  00B8               	movwf	___flge@ff1+3
  2605     0FB1  1683               	bsf	3,5	;RP0=1, select bank3
  2606     0FB2  1703               	bsf	3,6	;RP1=1, select bank3
  2607     0FB3  085A               	movf	(main@osTripTemp+2)^(0+384),w
  2608     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  2609     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  2610     0FB6  00B7               	movwf	___flge@ff1+2
  2611     0FB7  1683               	bsf	3,5	;RP0=1, select bank3
  2612     0FB8  1703               	bsf	3,6	;RP1=1, select bank3
  2613     0FB9  0859               	movf	(main@osTripTemp+1)^(0+384),w
  2614     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2615     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2616     0FBC  00B6               	movwf	___flge@ff1+1
  2617     0FBD  1683               	bsf	3,5	;RP0=1, select bank3
  2618     0FBE  1703               	bsf	3,6	;RP1=1, select bank3
  2619     0FBF  0858               	movf	main@osTripTemp^(0+384),w
  2620     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0FC2  00B5               	movwf	___flge@ff1
  2623     0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  2624     0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  2625     0FC5  0857               	movf	(main@currentTemp+3)^(0+384),w
  2626     0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  2627     0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  2628     0FC8  00BC               	movwf	___flge@ff2+3
  2629     0FC9  1683               	bsf	3,5	;RP0=1, select bank3
  2630     0FCA  1703               	bsf	3,6	;RP1=1, select bank3
  2631     0FCB  0856               	movf	(main@currentTemp+2)^(0+384),w
  2632     0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  2633     0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  2634     0FCE  00BB               	movwf	___flge@ff2+2
  2635     0FCF  1683               	bsf	3,5	;RP0=1, select bank3
  2636     0FD0  1703               	bsf	3,6	;RP1=1, select bank3
  2637     0FD1  0855               	movf	(main@currentTemp+1)^(0+384),w
  2638     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  2639     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  2640     0FD4  00BA               	movwf	___flge@ff2+1
  2641     0FD5  1683               	bsf	3,5	;RP0=1, select bank3
  2642     0FD6  1703               	bsf	3,6	;RP1=1, select bank3
  2643     0FD7  0854               	movf	main@currentTemp^(0+384),w
  2644     0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2645     0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2646     0FDA  00B9               	movwf	___flge@ff2
  2647     0FDB  160A  118A  205E  120A  158A  	fcall	___flge
  2648     0FE0  1803               	btfsc	3,0
  2649     0FE1  2FE3               	goto	u4931
  2650     0FE2  2FE4               	goto	u4930
  2651     0FE3                     u4931:
  2652     0FE3  2FED               	goto	l3652
  2653     0FE4                     u4930:
  2654     0FE4                     l3650:
  2655                           
  2656                           ;main.c: 63:                 UART_Write_Text("Warning: Temperature exceeded Safety mode 
      +                          threshold\n\r");
  2657     0FE4  30E5               	movlw	low (STR_11| (0+32768))
  2658     0FE5  00F1               	movwf	UART_Write_Text@text
  2659     0FE6  3098               	movlw	high (STR_11| (0+32768))
  2660     0FE7  00F2               	movwf	UART_Write_Text@text+1
  2661     0FE8  160A  158A  23B7  120A  158A  	fcall	_UART_Write_Text
  2662     0FED                     l3652:
  2663                           
  2664                           ;main.c: 66:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  2665     0FED  3015               	movlw	21
  2666     0FEE  1683               	bsf	3,5	;RP0=1, select bank1
  2667     0FEF  1303               	bcf	3,6	;RP1=0, select bank1
  2668     0FF0  00E2               	movwf	(??_main^(0+128)+2)
  2669     0FF1  304B               	movlw	75
  2670     0FF2  00E1               	movwf	(??_main^(0+128)+1)
  2671     0FF3  30BD               	movlw	189
  2672     0FF4  00E0               	movwf	??_main^(0+128)
  2673     0FF5                     u4957:
  2674     0FF5  0BE0               	decfsz	??_main^(0+128),f
  2675     0FF6  2FF5               	goto	u4957
  2676     0FF7  0BE1               	decfsz	(??_main^(0+128)+1),f
  2677     0FF8  2FF5               	goto	u4957
  2678     0FF9  0BE2               	decfsz	(??_main^(0+128)+2),f
  2679     0FFA  2FF5               	goto	u4957
  2680     0FFB  2FFC               	nop2
  2681     0FFC  2CD0               	goto	l3586
  2682     0FFD  120A  118A  2800   	ljmp	start
  2683     1000                     __end_of_main:
  2684                           
  2685                           	psect	text1
  2686     1C5D                     __ptext1:	
  2687 ;; *************** function _sprintf *****************
  2688 ;; Defined at:
  2689 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  s               1   53[BANK1 ] PTR unsigned char 
  2692 ;;		 -> main@buffer(64), 
  2693 ;;  fmt             2   54[BANK1 ] PTR const unsigned char 
  2694 ;;		 -> STR_10(61), STR_7(59), STR_4(55), STR_2(15), 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  f              11   67[BANK0 ] struct _IO_FILE
  2697 ;;  ret             2    0        int 
  2698 ;;  ap              1   66[BANK0 ] PTR void [1]
  2699 ;;		 -> ?_sprintf(2), 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2   53[BANK1 ] int 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0      11       0       0
  2710 ;;      Locals:         0      12       0       0       0
  2711 ;;      Temps:          0       1       0       0       0
  2712 ;;      Totals:         0      13      11       0       0
  2713 ;;Total ram usage:       24 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 7
  2716 ;; This function calls:
  2717 ;;		_vfprintf
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723     1C5D                     _sprintf:	
  2724                           ;psect for function _sprintf
  2725                           
  2726     1C5D                     l3510:	
  2727                           ;incstack = 0
  2728                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2729                           
  2730     1C5D  30D8               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2731     1C5E  1283               	bcf	3,5	;RP0=0, select bank0
  2732     1C5F  1303               	bcf	3,6	;RP1=0, select bank0
  2733     1C60  00E2               	movwf	sprintf@ap
  2734     1C61                     l3512:
  2735     1C61  1683               	bsf	3,5	;RP0=1, select bank1
  2736     1C62  1303               	bcf	3,6	;RP1=0, select bank1
  2737     1C63  0855               	movf	sprintf@s^(0+128),w
  2738     1C64  1283               	bcf	3,5	;RP0=0, select bank0
  2739     1C65  1303               	bcf	3,6	;RP1=0, select bank0
  2740     1C66  00E3               	movwf	sprintf@f
  2741     1C67  3001               	movlw	1
  2742     1C68  00E4               	movwf	sprintf@f+1
  2743     1C69                     l3514:
  2744     1C69  01E5               	clrf	sprintf@f+2
  2745     1C6A  01E6               	clrf	sprintf@f+3
  2746     1C6B                     l3516:
  2747     1C6B  01EC               	clrf	sprintf@f+9
  2748     1C6C  01ED               	clrf	sprintf@f+10
  2749     1C6D                     l3518:
  2750     1C6D  3063               	movlw	low sprintf@f
  2751     1C6E  1683               	bsf	3,5	;RP0=1, select bank1
  2752     1C6F  1303               	bcf	3,6	;RP1=0, select bank1
  2753     1C70  00D0               	movwf	vfprintf@fp^(0+128)
  2754     1C71  3000               	movlw	high sprintf@f
  2755     1C72  00D1               	movwf	(vfprintf@fp^(0+128)+1)
  2756     1C73  0856               	movf	sprintf@fmt^(0+128),w
  2757     1C74  00D2               	movwf	vfprintf@fmt^(0+128)
  2758     1C75  0857               	movf	(sprintf@fmt+1)^(0+128),w
  2759     1C76  00D3               	movwf	(vfprintf@fmt+1)^(0+128)
  2760     1C77  3062               	movlw	(low (sprintf@ap| 0))& (0+255)
  2761     1C78  00D4               	movwf	vfprintf@ap^(0+128)
  2762     1C79  160A  158A  248C  160A  158A  	fcall	_vfprintf
  2763     1C7E                     l3520:
  2764     1C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2765     1C7F  1303               	bcf	3,6	;RP1=0, select bank0
  2766     1C80  0865               	movf	sprintf@f+2,w
  2767     1C81  1683               	bsf	3,5	;RP0=1, select bank1
  2768     1C82  1303               	bcf	3,6	;RP1=0, select bank1
  2769     1C83  0755               	addwf	sprintf@s^(0+128),w
  2770     1C84  1283               	bcf	3,5	;RP0=0, select bank0
  2771     1C85  1303               	bcf	3,6	;RP1=0, select bank0
  2772     1C86  00E1               	movwf	??_sprintf
  2773     1C87  0861               	movf	??_sprintf,w
  2774     1C88  0084               	movwf	4
  2775     1C89  1783               	bsf	3,7	;select IRP bank2
  2776     1C8A  0180               	clrf	0
  2777     1C8B                     l828:
  2778     1C8B  0008               	return
  2779     1C8C                     __end_of_sprintf:
  2780                           
  2781                           	psect	text2
  2782     1C8C                     __ptext2:	
  2783 ;; *************** function _vfprintf *****************
  2784 ;; Defined at:
  2785 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  fp              2   48[BANK1 ] PTR struct _IO_FILE
  2788 ;;		 -> sprintf@f(11), 
  2789 ;;  fmt             2   50[BANK1 ] PTR const unsigned char 
  2790 ;;		 -> STR_10(61), STR_7(59), STR_4(55), STR_2(15), 
  2791 ;;  ap              1   52[BANK1 ] PTR PTR void 
  2792 ;;		 -> sprintf@ap(1), 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  cfmt            2   63[BANK0 ] PTR unsigned char 
  2795 ;;		 -> STR_10(61), STR_7(59), STR_4(55), STR_2(15), 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2   48[BANK1 ] int 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         0       0       5       0       0
  2806 ;;      Locals:         0       2       0       0       0
  2807 ;;      Temps:          0       0       0       0       0
  2808 ;;      Totals:         0       2       5       0       0
  2809 ;;Total ram usage:        7 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 6
  2812 ;; This function calls:
  2813 ;;		_vfpfcnvrt
  2814 ;; This function is called by:
  2815 ;;		_sprintf
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819     1C8C                     _vfprintf:	
  2820                           ;psect for function _vfprintf
  2821                           
  2822     1C8C                     l3488:	
  2823                           ;incstack = 0
  2824 ;; using string table level
  2825                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2826                           
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2829     1C8C  1683               	bsf	3,5	;RP0=1, select bank1
  2830     1C8D  1303               	bcf	3,6	;RP1=0, select bank1
  2831     1C8E  0852               	movf	vfprintf@fmt^(0+128),w
  2832     1C8F  1283               	bcf	3,5	;RP0=0, select bank0
  2833     1C90  1303               	bcf	3,6	;RP1=0, select bank0
  2834     1C91  00DF               	movwf	vfprintf@cfmt
  2835     1C92  1683               	bsf	3,5	;RP0=1, select bank1
  2836     1C93  1303               	bcf	3,6	;RP1=0, select bank1
  2837     1C94  0853               	movf	(vfprintf@fmt+1)^(0+128),w
  2838     1C95  1283               	bcf	3,5	;RP0=0, select bank0
  2839     1C96  1303               	bcf	3,6	;RP1=0, select bank0
  2840     1C97  00E0               	movwf	vfprintf@cfmt+1
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2843     1C98  2CA8               	goto	l3492
  2844     1C99                     l3490:
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2847     1C99  1683               	bsf	3,5	;RP0=1, select bank1
  2848     1C9A  1303               	bcf	3,6	;RP1=0, select bank1
  2849     1C9B  0850               	movf	vfprintf@fp^(0+128),w
  2850     1C9C  00CC               	movwf	vfpfcnvrt@fp^(0+128)
  2851     1C9D  0851               	movf	(vfprintf@fp+1)^(0+128),w
  2852     1C9E  00CD               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  2853     1C9F  305F               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2854     1CA0  00CE               	movwf	vfpfcnvrt@fmt^(0+128)
  2855     1CA1  0854               	movf	vfprintf@ap^(0+128),w
  2856     1CA2  00CF               	movwf	vfpfcnvrt@ap^(0+128)
  2857     1CA3  120A  158A  2024  160A  158A  	fcall	_vfpfcnvrt
  2858     1CA8                     l3492:
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2861     1CA8  1283               	bcf	3,5	;RP0=0, select bank0
  2862     1CA9  1303               	bcf	3,6	;RP1=0, select bank0
  2863     1CAA  0860               	movf	vfprintf@cfmt+1,w
  2864     1CAB  00FF               	movwf	btemp+1
  2865     1CAC  085F               	movf	vfprintf@cfmt,w
  2866     1CAD  0084               	movwf	4
  2867     1CAE  160A  158A  21A0  160A  158A  	fcall	stringtab
  2868     1CB3  3A00               	xorlw	0
  2869     1CB4  1D03               	skipz
  2870     1CB5  2CB7               	goto	u4841
  2871     1CB6  2CB8               	goto	u4840
  2872     1CB7                     u4841:
  2873     1CB7  2C99               	goto	l3490
  2874     1CB8                     u4840:
  2875     1CB8                     l3494:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2878     1CB8  1683               	bsf	3,5	;RP0=1, select bank1
  2879     1CB9  1303               	bcf	3,6	;RP1=0, select bank1
  2880     1CBA  01D0               	clrf	?_vfprintf^(0+128)
  2881     1CBB  01D1               	clrf	(?_vfprintf+1)^(0+128)
  2882     1CBC                     l946:
  2883     1CBC  0008               	return
  2884     1CBD                     __end_of_vfprintf:
  2885                           
  2886                           	psect	text3
  2887     0824                     __ptext3:	
  2888 ;; *************** function _vfpfcnvrt *****************
  2889 ;; Defined at:
  2890 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  2893 ;;		 -> sprintf@f(11), 
  2894 ;;  fmt             1   46[BANK1 ] PTR PTR unsigned char 
  2895 ;;		 -> vfprintf@cfmt(2), 
  2896 ;;  ap              1   47[BANK1 ] PTR PTR void 
  2897 ;;		 -> sprintf@ap(1), 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  convarg         4   56[BANK0 ] struct .
  2900 ;;  cp              2   61[BANK0 ] PTR unsigned char 
  2901 ;;		 -> STR_10(61), STR_7(59), STR_4(55), STR_2(15), 
  2902 ;;  c               1   60[BANK0 ] unsigned char 
  2903 ;;  done            1    0        _Bool 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         0       0       4       0       0
  2914 ;;      Locals:         0       7       0       0       0
  2915 ;;      Temps:          0       4       0       0       0
  2916 ;;      Totals:         0      11       4       0       0
  2917 ;;Total ram usage:       15 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 5
  2920 ;; This function calls:
  2921 ;;		_efgtoa
  2922 ;;		_fputc
  2923 ;;		_read_prec_or_width
  2924 ;; This function is called by:
  2925 ;;		_vfprintf
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     0824                     _vfpfcnvrt:	
  2930                           ;psect for function _vfpfcnvrt
  2931                           
  2932     0824                     l3400:	
  2933                           ;incstack = 0
  2934 ;; using string table level
  2935                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2936                           
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2939     0824  1683               	bsf	3,5	;RP0=1, select bank1
  2940     0825  1303               	bcf	3,6	;RP1=0, select bank1
  2941     0826  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2942     0827  0084               	movwf	4
  2943     0828  1383               	bcf	3,7	;select IRP bank0
  2944     0829  0800               	movf	0,w
  2945     082A  1283               	bcf	3,5	;RP0=0, select bank0
  2946     082B  1303               	bcf	3,6	;RP1=0, select bank0
  2947     082C  00D4               	movwf	??_vfpfcnvrt
  2948     082D  0A84               	incf	4,f
  2949     082E  0800               	movf	0,w
  2950     082F  00D5               	movwf	??_vfpfcnvrt+1
  2951     0830  0855               	movf	??_vfpfcnvrt+1,w
  2952     0831  00FF               	movwf	btemp+1
  2953     0832  0854               	movf	??_vfpfcnvrt,w
  2954     0833  0084               	movwf	4
  2955     0834  160A  158A  21A0  120A  158A  	fcall	stringtab
  2956     0839  3A25               	xorlw	37
  2957     083A  1D03               	skipz
  2958     083B  283D               	goto	u4801
  2959     083C  283E               	goto	u4800
  2960     083D                     u4801:
  2961     083D  2953               	goto	l3450
  2962     083E                     u4800:
  2963     083E                     l3402:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2966     083E  1683               	bsf	3,5	;RP0=1, select bank1
  2967     083F  1303               	bcf	3,6	;RP1=0, select bank1
  2968     0840  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2969     0841  0084               	movwf	4
  2970     0842  3001               	movlw	1
  2971     0843  1383               	bcf	3,7	;select IRP bank0
  2972     0844  0780               	addwf	0,f
  2973     0845  0A84               	incf	4,f
  2974     0846  1803               	skipnc
  2975     0847  0A80               	incf	0,f
  2976     0848                     l3404:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2979     0848  01EB               	clrf	_width^(0+128)
  2980     0849  01EC               	clrf	(_width+1)^(0+128)
  2981     084A  3000               	movlw	0
  2982     084B  1283               	bcf	3,5	;RP0=0, select bank0
  2983     084C  1303               	bcf	3,6	;RP1=0, select bank0
  2984     084D  00EE               	movwf	_flags
  2985     084E                     l3406:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2988     084E  30FF               	movlw	255
  2989     084F  1683               	bsf	3,5	;RP0=1, select bank1
  2990     0850  1303               	bcf	3,6	;RP1=0, select bank1
  2991     0851  00ED               	movwf	_prec^(0+128)
  2992     0852  30FF               	movlw	255
  2993     0853  00EE               	movwf	(_prec^(0+128)+1)
  2994     0854                     l3408:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2997     0854  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2998     0855  0084               	movwf	4
  2999     0856  0800               	movf	0,w
  3000     0857  1283               	bcf	3,5	;RP0=0, select bank0
  3001     0858  1303               	bcf	3,6	;RP1=0, select bank0
  3002     0859  00D4               	movwf	??_vfpfcnvrt
  3003     085A  0A84               	incf	4,f
  3004     085B  0800               	movf	0,w
  3005     085C  00D5               	movwf	??_vfpfcnvrt+1
  3006     085D  0855               	movf	??_vfpfcnvrt+1,w
  3007     085E  00FF               	movwf	btemp+1
  3008     085F  0854               	movf	??_vfpfcnvrt,w
  3009     0860  0084               	movwf	4
  3010     0861  160A  158A  21A0  120A  158A  	fcall	stringtab
  3011     0866  3A2E               	xorlw	46
  3012     0867  1D03               	skipz
  3013     0868  286A               	goto	u4811
  3014     0869  286B               	goto	u4810
  3015     086A                     u4811:
  3016     086A  2884               	goto	l3414
  3017     086B                     u4810:
  3018     086B                     l3410:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3021     086B  1683               	bsf	3,5	;RP0=1, select bank1
  3022     086C  1303               	bcf	3,6	;RP1=0, select bank1
  3023     086D  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3024     086E  0084               	movwf	4
  3025     086F  3001               	movlw	1
  3026     0870  1383               	bcf	3,7	;select IRP bank0
  3027     0871  0780               	addwf	0,f
  3028     0872  0A84               	incf	4,f
  3029     0873  1803               	skipnc
  3030     0874  0A80               	incf	0,f
  3031     0875                     l3412:
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3034     0875  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3035     0876  00F6               	movwf	read_prec_or_width@fmt
  3036     0877  084F               	movf	vfpfcnvrt@ap^(0+128),w
  3037     0878  00F7               	movwf	read_prec_or_width@ap
  3038     0879  160A  158A  2690  120A  158A  	fcall	_read_prec_or_width
  3039     087E  0877               	movf	?_read_prec_or_width+1,w
  3040     087F  1683               	bsf	3,5	;RP0=1, select bank1
  3041     0880  1303               	bcf	3,6	;RP1=0, select bank1
  3042     0881  00EE               	movwf	(_prec+1)^(0+128)
  3043     0882  0876               	movf	?_read_prec_or_width,w
  3044     0883  00ED               	movwf	_prec^(0+128)
  3045     0884                     l3414:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3048     0884  1683               	bsf	3,5	;RP0=1, select bank1
  3049     0885  1303               	bcf	3,6	;RP1=0, select bank1
  3050     0886  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3051     0887  0084               	movwf	4
  3052     0888  1383               	bcf	3,7	;select IRP bank0
  3053     0889  0800               	movf	0,w
  3054     088A  1283               	bcf	3,5	;RP0=0, select bank0
  3055     088B  1303               	bcf	3,6	;RP1=0, select bank0
  3056     088C  00DD               	movwf	vfpfcnvrt@cp
  3057     088D  0A84               	incf	4,f
  3058     088E  0800               	movf	0,w
  3059     088F  0384               	decf	4,f
  3060     0890  00DE               	movwf	vfpfcnvrt@cp+1
  3061     0891                     l3416:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3064     0891  085E               	movf	vfpfcnvrt@cp+1,w
  3065     0892  00FF               	movwf	btemp+1
  3066     0893  085D               	movf	vfpfcnvrt@cp,w
  3067     0894  0084               	movwf	4
  3068     0895  160A  158A  21A0  120A  158A  	fcall	stringtab
  3069     089A  00DC               	movwf	vfpfcnvrt@c
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3072     089B  28A8               	goto	l3424
  3073     089C                     l3418:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3076     089C  3001               	movlw	1
  3077     089D  07DD               	addwf	vfpfcnvrt@cp,f
  3078     089E  1803               	skipnc
  3079     089F  0ADE               	incf	vfpfcnvrt@cp+1,f
  3080     08A0  3000               	movlw	0
  3081     08A1  07DE               	addwf	vfpfcnvrt@cp+1,f
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
  3084     08A2  28B3               	goto	l3426
  3085     08A3                     l928:	
  3086                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  3087                           
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3090     08A3  306C               	movlw	108
  3091     08A4  00DC               	movwf	vfpfcnvrt@c
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
  3094     08A5  28B3               	goto	l3426
  3095     08A6                     l3420:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3098     08A6  01DC               	clrf	vfpfcnvrt@c
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
  3101     08A7  28B3               	goto	l3426
  3102     08A8                     l3424:
  3103     08A8  085C               	movf	vfpfcnvrt@c,w
  3104                           
  3105                           ; Switch size 1, requested type "simple"
  3106                           ; Number of cases is 3, Range of values is 76 to 108
  3107                           ; switch strategies available:
  3108                           ; Name         Instructions Cycles
  3109                           ; simple_byte           10     6 (average)
  3110                           ; direct_byte          110    11 (fixed)
  3111                           ; jumptable            263     9 (fixed)
  3112                           ;	Chosen strategy is simple_byte
  3113     08A9  3A4C               	xorlw	76	; case 76
  3114     08AA  1903               	skipnz
  3115     08AB  289C               	goto	l3418
  3116     08AC  3A2A               	xorlw	42	; case 102
  3117     08AD  1903               	skipnz
  3118     08AE  28A3               	goto	l928
  3119     08AF  3A0A               	xorlw	10	; case 108
  3120     08B0  1903               	skipnz
  3121     08B1  289C               	goto	l3418
  3122     08B2  28A6               	goto	l3420
  3123     08B3                     l3426:
  3124     08B3  085E               	movf	vfpfcnvrt@cp+1,w
  3125     08B4  00FF               	movwf	btemp+1
  3126     08B5  085D               	movf	vfpfcnvrt@cp,w
  3127     08B6  0084               	movwf	4
  3128     08B7  160A  158A  21A0  120A  158A  	fcall	stringtab
  3129     08BC  3A66               	xorlw	102
  3130     08BD  1D03               	skipz
  3131     08BE  28C0               	goto	u4821
  3132     08BF  28C1               	goto	u4820
  3133     08C0                     u4821:
  3134     08C0  2948               	goto	l3446
  3135     08C1                     u4820:
  3136     08C1  28F4               	goto	l3434
  3137     08C2                     l3428:
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3140     08C2  1683               	bsf	3,5	;RP0=1, select bank1
  3141     08C3  1303               	bcf	3,6	;RP1=0, select bank1
  3142     08C4  084F               	movf	vfpfcnvrt@ap^(0+128),w
  3143     08C5  0084               	movwf	4
  3144     08C6  1383               	bcf	3,7	;select IRP bank0
  3145     08C7  0800               	movf	0,w
  3146     08C8  00FF               	movwf	btemp+1
  3147     08C9  3004               	movlw	4
  3148     08CA  0780               	addwf	0,f
  3149     08CB  087F               	movf	btemp+1,w
  3150     08CC  0084               	movwf	4
  3151     08CD  0800               	movf	0,w
  3152     08CE  1283               	bcf	3,5	;RP0=0, select bank0
  3153     08CF  1303               	bcf	3,6	;RP1=0, select bank0
  3154     08D0  00D8               	movwf	vfpfcnvrt@convarg
  3155     08D1  0A84               	incf	4,f
  3156     08D2  0800               	movf	0,w
  3157     08D3  00D9               	movwf	vfpfcnvrt@convarg+1
  3158     08D4  0A84               	incf	4,f
  3159     08D5  0800               	movf	0,w
  3160     08D6  00DA               	movwf	vfpfcnvrt@convarg+2
  3161     08D7  0A84               	incf	4,f
  3162     08D8  0800               	movf	0,w
  3163     08D9  00DB               	movwf	vfpfcnvrt@convarg+3
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
  3166     08DA  28FC               	goto	l3436
  3167     08DB                     l3430:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3170     08DB  1683               	bsf	3,5	;RP0=1, select bank1
  3171     08DC  1303               	bcf	3,6	;RP1=0, select bank1
  3172     08DD  084F               	movf	vfpfcnvrt@ap^(0+128),w
  3173     08DE  0084               	movwf	4
  3174     08DF  1383               	bcf	3,7	;select IRP bank0
  3175     08E0  0800               	movf	0,w
  3176     08E1  00FF               	movwf	btemp+1
  3177     08E2  3004               	movlw	4
  3178     08E3  0780               	addwf	0,f
  3179     08E4  087F               	movf	btemp+1,w
  3180     08E5  0084               	movwf	4
  3181     08E6  0800               	movf	0,w
  3182     08E7  1283               	bcf	3,5	;RP0=0, select bank0
  3183     08E8  1303               	bcf	3,6	;RP1=0, select bank0
  3184     08E9  00D8               	movwf	vfpfcnvrt@convarg
  3185     08EA  0A84               	incf	4,f
  3186     08EB  0800               	movf	0,w
  3187     08EC  00D9               	movwf	vfpfcnvrt@convarg+1
  3188     08ED  0A84               	incf	4,f
  3189     08EE  0800               	movf	0,w
  3190     08EF  00DA               	movwf	vfpfcnvrt@convarg+2
  3191     08F0  0A84               	incf	4,f
  3192     08F1  0800               	movf	0,w
  3193     08F2  00DB               	movwf	vfpfcnvrt@convarg+3
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
  3196     08F3  28FC               	goto	l3436
  3197     08F4                     l3434:
  3198     08F4  085C               	movf	vfpfcnvrt@c,w
  3199                           
  3200                           ; Switch size 1, requested type "simple"
  3201                           ; Number of cases is 2, Range of values is 76 to 108
  3202                           ; switch strategies available:
  3203                           ; Name         Instructions Cycles
  3204                           ; simple_byte            7     4 (average)
  3205                           ; direct_byte          110    11 (fixed)
  3206                           ; jumptable            263     9 (fixed)
  3207                           ;	Chosen strategy is simple_byte
  3208     08F5  3A4C               	xorlw	76	; case 76
  3209     08F6  1903               	skipnz
  3210     08F7  28DB               	goto	l3430
  3211     08F8  3A20               	xorlw	32	; case 108
  3212     08F9  1903               	skipnz
  3213     08FA  28C2               	goto	l3428
  3214     08FB  28FC               	goto	l3436
  3215     08FC                     l3436:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3218     08FC  3001               	movlw	1
  3219     08FD  00D4               	movwf	??_vfpfcnvrt
  3220     08FE  0854               	movf	??_vfpfcnvrt,w
  3221     08FF  075D               	addwf	vfpfcnvrt@cp,w
  3222     0900  00D6               	movwf	??_vfpfcnvrt+2
  3223     0901  085E               	movf	vfpfcnvrt@cp+1,w
  3224     0902  00D5               	movwf	??_vfpfcnvrt+1
  3225     0903  1803               	skipnc
  3226     0904  0AD5               	incf	??_vfpfcnvrt+1,f
  3227     0905  1BD4               	btfsc	??_vfpfcnvrt,7
  3228     0906  03D5               	decf	??_vfpfcnvrt+1,f
  3229     0907  0855               	movf	??_vfpfcnvrt+1,w
  3230     0908  00D7               	movwf	??_vfpfcnvrt+3
  3231     0909  1683               	bsf	3,5	;RP0=1, select bank1
  3232     090A  1303               	bcf	3,6	;RP1=0, select bank1
  3233     090B  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3234     090C  0084               	movwf	4
  3235     090D  1283               	bcf	3,5	;RP0=0, select bank0
  3236     090E  1303               	bcf	3,6	;RP1=0, select bank0
  3237     090F  0856               	movf	??_vfpfcnvrt+2,w
  3238     0910  1383               	bcf	3,7	;select IRP bank0
  3239     0911  0080               	movwf	0
  3240     0912  0857               	movf	??_vfpfcnvrt+3,w
  3241     0913  0A84               	incf	4,f
  3242     0914  0080               	movwf	0
  3243     0915  0384               	decf	4,f
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3246     0916  293B               	goto	l3444
  3247     0917                     l3438:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3250     0917  1683               	bsf	3,5	;RP0=1, select bank1
  3251     0918  1303               	bcf	3,6	;RP1=0, select bank1
  3252     0919  084C               	movf	vfpfcnvrt@fp^(0+128),w
  3253     091A  1283               	bcf	3,5	;RP0=0, select bank0
  3254     091B  1303               	bcf	3,6	;RP1=0, select bank0
  3255     091C  00C9               	movwf	efgtoa@fp
  3256     091D  1683               	bsf	3,5	;RP0=1, select bank1
  3257     091E  1303               	bcf	3,6	;RP1=0, select bank1
  3258     091F  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  3259     0920  1283               	bcf	3,5	;RP0=0, select bank0
  3260     0921  1303               	bcf	3,6	;RP1=0, select bank0
  3261     0922  00CA               	movwf	efgtoa@fp+1
  3262     0923  085B               	movf	vfpfcnvrt@convarg+3,w
  3263     0924  00CE               	movwf	efgtoa@f+3
  3264     0925  085A               	movf	vfpfcnvrt@convarg+2,w
  3265     0926  00CD               	movwf	efgtoa@f+2
  3266     0927  0859               	movf	vfpfcnvrt@convarg+1,w
  3267     0928  00CC               	movwf	efgtoa@f+1
  3268     0929  0858               	movf	vfpfcnvrt@convarg,w
  3269     092A  00CB               	movwf	efgtoa@f
  3270     092B  085E               	movf	vfpfcnvrt@cp+1,w
  3271     092C  00FF               	movwf	btemp+1
  3272     092D  085D               	movf	vfpfcnvrt@cp,w
  3273     092E  0084               	movwf	4
  3274     092F  160A  158A  21A0  120A  158A  	fcall	stringtab
  3275     0934  00CF               	movwf	efgtoa@c
  3276     0935  160A  118A  22C5  120A  158A  	fcall	_efgtoa
  3277     093A  297A               	goto	l939
  3278     093B                     l3444:
  3279     093B  085E               	movf	vfpfcnvrt@cp+1,w
  3280     093C  00FF               	movwf	btemp+1
  3281     093D  085D               	movf	vfpfcnvrt@cp,w
  3282     093E  0084               	movwf	4
  3283     093F  160A  158A  21A0  120A  158A  	fcall	stringtab
  3284                           
  3285                           ; Switch size 1, requested type "simple"
  3286                           ; Number of cases is 1, Range of values is 102 to 102
  3287                           ; switch strategies available:
  3288                           ; Name         Instructions Cycles
  3289                           ; simple_byte            4     3 (average)
  3290                           ; direct_byte           14    11 (fixed)
  3291                           ; jumptable            263     9 (fixed)
  3292                           ;	Chosen strategy is simple_byte
  3293     0944  3A66               	xorlw	102	; case 102
  3294     0945  1903               	skipnz
  3295     0946  2917               	goto	l3438
  3296     0947  2948               	goto	l3446
  3297     0948                     l3446:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3300     0948  1683               	bsf	3,5	;RP0=1, select bank1
  3301     0949  1303               	bcf	3,6	;RP1=0, select bank1
  3302     094A  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3303     094B  0084               	movwf	4
  3304     094C  3001               	movlw	1
  3305     094D  1383               	bcf	3,7	;select IRP bank0
  3306     094E  0780               	addwf	0,f
  3307     094F  0A84               	incf	4,f
  3308     0950  1803               	skipnc
  3309     0951  0A80               	incf	0,f
  3310     0952  297A               	goto	l939
  3311     0953                     l3450:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3314     0953  1683               	bsf	3,5	;RP0=1, select bank1
  3315     0954  1303               	bcf	3,6	;RP1=0, select bank1
  3316     0955  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3317     0956  0084               	movwf	4
  3318     0957  1383               	bcf	3,7	;select IRP bank0
  3319     0958  0800               	movf	0,w
  3320     0959  1283               	bcf	3,5	;RP0=0, select bank0
  3321     095A  1303               	bcf	3,6	;RP1=0, select bank0
  3322     095B  00D4               	movwf	??_vfpfcnvrt
  3323     095C  0A84               	incf	4,f
  3324     095D  0800               	movf	0,w
  3325     095E  00D5               	movwf	??_vfpfcnvrt+1
  3326     095F  0855               	movf	??_vfpfcnvrt+1,w
  3327     0960  00FF               	movwf	btemp+1
  3328     0961  0854               	movf	??_vfpfcnvrt,w
  3329     0962  0084               	movwf	4
  3330     0963  160A  158A  21A0  120A  158A  	fcall	stringtab
  3331     0968  00D6               	movwf	??_vfpfcnvrt+2
  3332     0969  01D7               	clrf	??_vfpfcnvrt+3
  3333     096A  0856               	movf	??_vfpfcnvrt+2,w
  3334     096B  00F0               	movwf	fputc@c
  3335     096C  0857               	movf	??_vfpfcnvrt+3,w
  3336     096D  00F1               	movwf	fputc@c+1
  3337     096E  1683               	bsf	3,5	;RP0=1, select bank1
  3338     096F  1303               	bcf	3,6	;RP1=0, select bank1
  3339     0970  084C               	movf	vfpfcnvrt@fp^(0+128),w
  3340     0971  00F2               	movwf	fputc@fp
  3341     0972  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  3342     0973  00F3               	movwf	fputc@fp+1
  3343     0974  120A  118A  200C  120A  158A  	fcall	_fputc
  3344     0979  2948               	goto	l3446
  3345     097A                     l939:
  3346     097A  0008               	return
  3347     097B                     __end_of_vfpfcnvrt:
  3348                           
  3349                           	psect	text4
  3350     1E90                     __ptext4:	
  3351 ;; *************** function _read_prec_or_width *****************
  3352 ;; Defined at:
  3353 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  3356 ;;		 -> vfprintf@cfmt(2), 
  3357 ;;  ap              1    7[COMMON] PTR PTR void [1]
  3358 ;;		 -> sprintf@ap(1), 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  c               1   10[COMMON] unsigned char 
  3361 ;;  n               2   11[COMMON] int 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2    6[COMMON] int 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         2       0       0       0       0
  3372 ;;      Locals:         3       0       0       0       0
  3373 ;;      Temps:          2       0       0       0       0
  3374 ;;      Totals:         7       0       0       0       0
  3375 ;;Total ram usage:        7 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 1
  3378 ;; This function calls:
  3379 ;;		___wmul
  3380 ;; This function is called by:
  3381 ;;		_vfpfcnvrt
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385     1E90                     _read_prec_or_width:	
  3386                           ;psect for function _read_prec_or_width
  3387                           
  3388     1E90                     l3326:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3391                           
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3394     1E90  01FB               	clrf	read_prec_or_width@n
  3395     1E91  01FC               	clrf	read_prec_or_width@n+1
  3396     1E92                     l3328:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3399     1E92  0876               	movf	read_prec_or_width@fmt,w
  3400     1E93  0084               	movwf	4
  3401     1E94  1383               	bcf	3,7	;select IRP bank0
  3402     1E95  0800               	movf	0,w
  3403     1E96  00F8               	movwf	??_read_prec_or_width
  3404     1E97  0A84               	incf	4,f
  3405     1E98  0800               	movf	0,w
  3406     1E99  00F9               	movwf	??_read_prec_or_width+1
  3407     1E9A  0879               	movf	??_read_prec_or_width+1,w
  3408     1E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3409     1E9C  1303               	bcf	3,6	;RP1=0, select bank0
  3410     1E9D  00FF               	movwf	btemp+1
  3411     1E9E  0878               	movf	??_read_prec_or_width,w
  3412     1E9F  0084               	movwf	4
  3413     1EA0  160A  158A  21A0  160A  158A  	fcall	stringtab
  3414     1EA5  3A2A               	xorlw	42
  3415     1EA6  1D03               	skipz
  3416     1EA7  2EA9               	goto	u4741
  3417     1EA8  2EAA               	goto	u4740
  3418     1EA9                     u4741:
  3419     1EA9  2EDD               	goto	l3338
  3420     1EAA                     u4740:
  3421     1EAA                     l3330:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3424     1EAA  0876               	movf	read_prec_or_width@fmt,w
  3425     1EAB  0084               	movwf	4
  3426     1EAC  3001               	movlw	1
  3427     1EAD  1383               	bcf	3,7	;select IRP bank0
  3428     1EAE  0780               	addwf	0,f
  3429     1EAF  0A84               	incf	4,f
  3430     1EB0  1803               	skipnc
  3431     1EB1  0A80               	incf	0,f
  3432     1EB2                     l3332:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3435     1EB2  0877               	movf	read_prec_or_width@ap,w
  3436     1EB3  0084               	movwf	4
  3437     1EB4  0800               	movf	0,w
  3438     1EB5  00FF               	movwf	btemp+1
  3439     1EB6  3002               	movlw	2
  3440     1EB7  0780               	addwf	0,f
  3441     1EB8  087F               	movf	btemp+1,w
  3442     1EB9  0084               	movwf	4
  3443     1EBA  0800               	movf	0,w
  3444     1EBB  00FB               	movwf	read_prec_or_width@n
  3445     1EBC  0A84               	incf	4,f
  3446     1EBD  0800               	movf	0,w
  3447     1EBE  00FC               	movwf	read_prec_or_width@n+1
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3450     1EBF  2EF8               	goto	l3340
  3451     1EC0                     l3334:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3454     1EC0  087C               	movf	read_prec_or_width@n+1,w
  3455     1EC1  00F1               	movwf	___wmul@multiplier+1
  3456     1EC2  087B               	movf	read_prec_or_width@n,w
  3457     1EC3  00F0               	movwf	___wmul@multiplier
  3458     1EC4  300A               	movlw	10
  3459     1EC5  00F2               	movwf	___wmul@multiplicand
  3460     1EC6  3000               	movlw	0
  3461     1EC7  00F3               	movwf	___wmul@multiplicand+1
  3462     1EC8  160A  158A  236C  160A  158A  	fcall	___wmul
  3463     1ECD  087A               	movf	read_prec_or_width@c,w
  3464     1ECE  0770               	addwf	?___wmul,w
  3465     1ECF  00FB               	movwf	read_prec_or_width@n
  3466     1ED0  3000               	movlw	0
  3467     1ED1  1803               	skipnc
  3468     1ED2  3001               	movlw	1
  3469     1ED3  0771               	addwf	?___wmul+1,w
  3470     1ED4  00FC               	movwf	read_prec_or_width@n+1
  3471     1ED5                     l3336:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3474     1ED5  0876               	movf	read_prec_or_width@fmt,w
  3475     1ED6  0084               	movwf	4
  3476     1ED7  3001               	movlw	1
  3477     1ED8  1383               	bcf	3,7	;select IRP bank0
  3478     1ED9  0780               	addwf	0,f
  3479     1EDA  0A84               	incf	4,f
  3480     1EDB  1803               	skipnc
  3481     1EDC  0A80               	incf	0,f
  3482     1EDD                     l3338:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3485     1EDD  0876               	movf	read_prec_or_width@fmt,w
  3486     1EDE  0084               	movwf	4
  3487     1EDF  1383               	bcf	3,7	;select IRP bank0
  3488     1EE0  0800               	movf	0,w
  3489     1EE1  00F8               	movwf	??_read_prec_or_width
  3490     1EE2  0A84               	incf	4,f
  3491     1EE3  0800               	movf	0,w
  3492     1EE4  00F9               	movwf	??_read_prec_or_width+1
  3493     1EE5  0879               	movf	??_read_prec_or_width+1,w
  3494     1EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3495     1EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3496     1EE8  00FF               	movwf	btemp+1
  3497     1EE9  0878               	movf	??_read_prec_or_width,w
  3498     1EEA  0084               	movwf	4
  3499     1EEB  160A  158A  21A0  160A  158A  	fcall	stringtab
  3500     1EF0  3ED0               	addlw	208
  3501     1EF1  00FA               	movwf	read_prec_or_width@c
  3502     1EF2  300A               	movlw	10
  3503     1EF3  027A               	subwf	read_prec_or_width@c,w
  3504     1EF4  1C03               	skipc
  3505     1EF5  2EF7               	goto	u4751
  3506     1EF6  2EF8               	goto	u4750
  3507     1EF7                     u4751:
  3508     1EF7  2EC0               	goto	l3334
  3509     1EF8                     u4750:
  3510     1EF8                     l3340:
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3513     1EF8  087C               	movf	read_prec_or_width@n+1,w
  3514     1EF9  00F7               	movwf	?_read_prec_or_width+1
  3515     1EFA  087B               	movf	read_prec_or_width@n,w
  3516     1EFB  00F6               	movwf	?_read_prec_or_width
  3517     1EFC                     l919:
  3518     1EFC  0008               	return
  3519     1EFD                     __end_of_read_prec_or_width:
  3520                           
  3521                           	psect	text5
  3522     1B6C                     __ptext5:	
  3523 ;; *************** function ___wmul *****************
  3524 ;; Defined at:
  3525 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  multiplier      2    0[COMMON] unsigned int 
  3528 ;;  multiplicand    2    2[COMMON] unsigned int 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  product         2    4[COMMON] unsigned int 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  2    0[COMMON] unsigned int 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3540 ;;      Params:         4       0       0       0       0
  3541 ;;      Locals:         2       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0
  3543 ;;      Totals:         6       0       0       0       0
  3544 ;;Total ram usage:        6 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_read_prec_or_width
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553     1B6C                     ___wmul:	
  3554                           ;psect for function ___wmul
  3555                           
  3556     1B6C                     l2598:	
  3557                           ;incstack = 0
  3558                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3559                           
  3560     1B6C  01F4               	clrf	___wmul@product
  3561     1B6D  01F5               	clrf	___wmul@product+1
  3562     1B6E                     l2600:
  3563     1B6E  1C70               	btfss	___wmul@multiplier,0
  3564     1B6F  2B71               	goto	u3061
  3565     1B70  2B72               	goto	u3060
  3566     1B71                     u3061:
  3567     1B71  2B78               	goto	l349
  3568     1B72                     u3060:
  3569     1B72                     l2602:
  3570     1B72  0872               	movf	___wmul@multiplicand,w
  3571     1B73  07F4               	addwf	___wmul@product,f
  3572     1B74  1803               	skipnc
  3573     1B75  0AF5               	incf	___wmul@product+1,f
  3574     1B76  0873               	movf	___wmul@multiplicand+1,w
  3575     1B77  07F5               	addwf	___wmul@product+1,f
  3576     1B78                     l349:
  3577     1B78  3001               	movlw	1
  3578     1B79                     u3075:
  3579     1B79  1003               	clrc
  3580     1B7A  0DF2               	rlf	___wmul@multiplicand,f
  3581     1B7B  0DF3               	rlf	___wmul@multiplicand+1,f
  3582     1B7C  3EFF               	addlw	-1
  3583     1B7D  1D03               	skipz
  3584     1B7E  2B79               	goto	u3075
  3585     1B7F                     l2604:
  3586     1B7F  3001               	movlw	1
  3587     1B80                     u3085:
  3588     1B80  1003               	clrc
  3589     1B81  0CF1               	rrf	___wmul@multiplier+1,f
  3590     1B82  0CF0               	rrf	___wmul@multiplier,f
  3591     1B83  3EFF               	addlw	-1
  3592     1B84  1D03               	skipz
  3593     1B85  2B80               	goto	u3085
  3594     1B86                     l2606:
  3595     1B86  0870               	movf	___wmul@multiplier,w
  3596     1B87  0471               	iorwf	___wmul@multiplier+1,w
  3597     1B88  1D03               	btfss	3,2
  3598     1B89  2B8B               	goto	u3091
  3599     1B8A  2B8C               	goto	u3090
  3600     1B8B                     u3091:
  3601     1B8B  2B6E               	goto	l2600
  3602     1B8C                     u3090:
  3603     1B8C                     l2608:
  3604     1B8C  0875               	movf	___wmul@product+1,w
  3605     1B8D  00F1               	movwf	?___wmul+1
  3606     1B8E  0874               	movf	___wmul@product,w
  3607     1B8F  00F0               	movwf	?___wmul
  3608     1B90                     l351:
  3609     1B90  0008               	return
  3610     1B91                     __end_of___wmul:
  3611                           
  3612                           	psect	text6
  3613     12C5                     __ptext6:	
  3614 ;; *************** function _efgtoa *****************
  3615 ;; Defined at:
  3616 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  fp              2   41[BANK0 ] PTR struct _IO_FILE
  3619 ;;		 -> sprintf@f(11), 
  3620 ;;  f               4   43[BANK0 ] PTR struct _IO_FILE
  3621 ;;  c               1   47[BANK0 ] unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  u               4   40[BANK1 ] struct flui
  3624 ;;  g               4   36[BANK1 ] struct flui
  3625 ;;  l               4   29[BANK1 ] struct flui
  3626 ;;  h               4   25[BANK1 ] struct flui
  3627 ;;  ou              4   19[BANK1 ] struct flui
  3628 ;;  n               2   34[BANK1 ] int 
  3629 ;;  i               2   23[BANK1 ] int 
  3630 ;;  w               2   17[BANK1 ] int 
  3631 ;;  e               2   15[BANK1 ] int 
  3632 ;;  m               2   13[BANK1 ] int 
  3633 ;;  d               2   11[BANK1 ] int 
  3634 ;;  t               2    4[BANK1 ] int 
  3635 ;;  p               2    2[BANK1 ] int 
  3636 ;;  ne              2    0[BANK1 ] int 
  3637 ;;  sign            1   33[BANK1 ] unsigned char 
  3638 ;;  nmode           1   10[BANK1 ] unsigned char 
  3639 ;;  mode            1    9[BANK1 ] unsigned char 
  3640 ;;  pp              1    8[BANK1 ] unsigned char 
  3641 ;;  esign           1    0        unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       7       0       0       0
  3652 ;;      Locals:         0       0      44       0       0
  3653 ;;      Temps:          0       4       0       0       0
  3654 ;;      Totals:         0      11      44       0       0
  3655 ;;Total ram usage:       55 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 4
  3658 ;; This function calls:
  3659 ;;		___fladd
  3660 ;;		___fldiv
  3661 ;;		___fleq
  3662 ;;		___flge
  3663 ;;		___flmul
  3664 ;;		___flneg
  3665 ;;		___flsub
  3666 ;;		___fltol
  3667 ;;		___fpclassifyf
  3668 ;;		_floorf
  3669 ;;		_labs
  3670 ;;		_memcpy
  3671 ;;		_pad
  3672 ;;		_strcpy
  3673 ;; This function is called by:
  3674 ;;		_vfpfcnvrt
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678     12C5                     _efgtoa:	
  3679                           ;psect for function _efgtoa
  3680                           
  3681     12C5                     l3112:	
  3682                           ;incstack = 0
  3683                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3684                           
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3687     12C5  1683               	bsf	3,5	;RP0=1, select bank1
  3688     12C6  1303               	bcf	3,6	;RP1=0, select bank1
  3689     12C7  01C1               	clrf	efgtoa@sign^(0+128)
  3690     12C8                     l3114:
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3693     12C8  1283               	bcf	3,5	;RP0=0, select bank0
  3694     12C9  1303               	bcf	3,6	;RP1=0, select bank0
  3695     12CA  084E               	movf	efgtoa@f+3,w
  3696     12CB  1683               	bsf	3,5	;RP0=1, select bank1
  3697     12CC  1303               	bcf	3,6	;RP1=0, select bank1
  3698     12CD  00C7               	movwf	(efgtoa@g+3)^(0+128)
  3699     12CE  1283               	bcf	3,5	;RP0=0, select bank0
  3700     12CF  1303               	bcf	3,6	;RP1=0, select bank0
  3701     12D0  084D               	movf	efgtoa@f+2,w
  3702     12D1  1683               	bsf	3,5	;RP0=1, select bank1
  3703     12D2  1303               	bcf	3,6	;RP1=0, select bank1
  3704     12D3  00C6               	movwf	(efgtoa@g+2)^(0+128)
  3705     12D4  1283               	bcf	3,5	;RP0=0, select bank0
  3706     12D5  1303               	bcf	3,6	;RP1=0, select bank0
  3707     12D6  084C               	movf	efgtoa@f+1,w
  3708     12D7  1683               	bsf	3,5	;RP0=1, select bank1
  3709     12D8  1303               	bcf	3,6	;RP1=0, select bank1
  3710     12D9  00C5               	movwf	(efgtoa@g+1)^(0+128)
  3711     12DA  1283               	bcf	3,5	;RP0=0, select bank0
  3712     12DB  1303               	bcf	3,6	;RP1=0, select bank0
  3713     12DC  084B               	movf	efgtoa@f,w
  3714     12DD  1683               	bsf	3,5	;RP0=1, select bank1
  3715     12DE  1303               	bcf	3,6	;RP1=0, select bank1
  3716     12DF  00C4               	movwf	efgtoa@g^(0+128)
  3717     12E0                     l3116:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3720     12E0  0847               	movf	(efgtoa@g+3)^(0+128),w
  3721     12E1  1283               	bcf	3,5	;RP0=0, select bank0
  3722     12E2  1303               	bcf	3,6	;RP1=0, select bank0
  3723     12E3  00B8               	movwf	___flge@ff1+3
  3724     12E4  1683               	bsf	3,5	;RP0=1, select bank1
  3725     12E5  1303               	bcf	3,6	;RP1=0, select bank1
  3726     12E6  0846               	movf	(efgtoa@g+2)^(0+128),w
  3727     12E7  1283               	bcf	3,5	;RP0=0, select bank0
  3728     12E8  1303               	bcf	3,6	;RP1=0, select bank0
  3729     12E9  00B7               	movwf	___flge@ff1+2
  3730     12EA  1683               	bsf	3,5	;RP0=1, select bank1
  3731     12EB  1303               	bcf	3,6	;RP1=0, select bank1
  3732     12EC  0845               	movf	(efgtoa@g+1)^(0+128),w
  3733     12ED  1283               	bcf	3,5	;RP0=0, select bank0
  3734     12EE  1303               	bcf	3,6	;RP1=0, select bank0
  3735     12EF  00B6               	movwf	___flge@ff1+1
  3736     12F0  1683               	bsf	3,5	;RP0=1, select bank1
  3737     12F1  1303               	bcf	3,6	;RP1=0, select bank1
  3738     12F2  0844               	movf	efgtoa@g^(0+128),w
  3739     12F3  1283               	bcf	3,5	;RP0=0, select bank0
  3740     12F4  1303               	bcf	3,6	;RP1=0, select bank0
  3741     12F5  00B5               	movwf	___flge@ff1
  3742     12F6  3000               	movlw	0
  3743     12F7  00BC               	movwf	___flge@ff2+3
  3744     12F8  3000               	movlw	0
  3745     12F9  00BB               	movwf	___flge@ff2+2
  3746     12FA  3000               	movlw	0
  3747     12FB  00BA               	movwf	___flge@ff2+1
  3748     12FC  3000               	movlw	0
  3749     12FD  00B9               	movwf	___flge@ff2
  3750     12FE  160A  118A  205E  160A  118A  	fcall	___flge
  3751     1303  1803               	btfsc	3,0
  3752     1304  2B06               	goto	u4391
  3753     1305  2B07               	goto	u4390
  3754     1306                     u4391:
  3755     1306  2B22               	goto	l3122
  3756     1307                     u4390:
  3757     1307                     l3118:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3760     1307  3001               	movlw	1
  3761     1308  1683               	bsf	3,5	;RP0=1, select bank1
  3762     1309  1303               	bcf	3,6	;RP1=0, select bank1
  3763     130A  00C1               	movwf	efgtoa@sign^(0+128)
  3764     130B                     l3120:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3767     130B  0847               	movf	(efgtoa@g+3)^(0+128),w
  3768     130C  00F3               	movwf	___flneg@f1+3
  3769     130D  0846               	movf	(efgtoa@g+2)^(0+128),w
  3770     130E  00F2               	movwf	___flneg@f1+2
  3771     130F  0845               	movf	(efgtoa@g+1)^(0+128),w
  3772     1310  00F1               	movwf	___flneg@f1+1
  3773     1311  0844               	movf	efgtoa@g^(0+128),w
  3774     1312  00F0               	movwf	___flneg@f1
  3775     1313  160A  158A  221F  160A  118A  	fcall	___flneg
  3776     1318  0873               	movf	?___flneg+3,w
  3777     1319  1683               	bsf	3,5	;RP0=1, select bank1
  3778     131A  1303               	bcf	3,6	;RP1=0, select bank1
  3779     131B  00C7               	movwf	(efgtoa@g+3)^(0+128)
  3780     131C  0872               	movf	?___flneg+2,w
  3781     131D  00C6               	movwf	(efgtoa@g+2)^(0+128)
  3782     131E  0871               	movf	?___flneg+1,w
  3783     131F  00C5               	movwf	(efgtoa@g+1)^(0+128)
  3784     1320  0870               	movf	?___flneg,w
  3785     1321  00C4               	movwf	efgtoa@g^(0+128)
  3786     1322                     l3122:
  3787                           
  3788                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3789     1322  1683               	bsf	3,5	;RP0=1, select bank1
  3790     1323  1303               	bcf	3,6	;RP1=0, select bank1
  3791     1324  01C2               	clrf	efgtoa@n^(0+128)
  3792     1325  01C3               	clrf	(efgtoa@n+1)^(0+128)
  3793     1326                     l3124:
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3796     1326  086C               	movf	(_width+1)^(0+128),w
  3797     1327  00B2               	movwf	(efgtoa@w+1)^(0+128)
  3798     1328  086B               	movf	_width^(0+128),w
  3799     1329  00B1               	movwf	efgtoa@w^(0+128)
  3800     132A                     l3126:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3803     132A  0841               	movf	efgtoa@sign^(0+128),w
  3804     132B  1903               	btfsc	3,2
  3805     132C  2B2E               	goto	u4401
  3806     132D  2B2F               	goto	u4400
  3807     132E                     u4401:
  3808     132E  2B3F               	goto	l3134
  3809     132F                     u4400:
  3810     132F                     l3128:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3813     132F  0841               	movf	efgtoa@sign^(0+128),w
  3814     1330  1D03               	btfss	3,2
  3815     1331  2B33               	goto	u4411
  3816     1332  2B34               	goto	u4410
  3817     1333                     u4411:
  3818     1333  2B39               	goto	l3132
  3819     1334                     u4410:
  3820     1334                     l3130:
  3821     1334  302B               	movlw	43
  3822     1335  00A6               	movwf	_efgtoa$807^(0+128)
  3823     1336  3000               	movlw	0
  3824     1337  00A7               	movwf	(_efgtoa$807^(0+128)+1)
  3825     1338  2B3D               	goto	l867
  3826     1339                     l3132:
  3827     1339  302D               	movlw	45
  3828     133A  00A6               	movwf	_efgtoa$807^(0+128)
  3829     133B  3000               	movlw	0
  3830     133C  00A7               	movwf	(_efgtoa$807^(0+128)+1)
  3831     133D                     l867:
  3832     133D  0826               	movf	_efgtoa$807^(0+128),w
  3833     133E  00C1               	movwf	efgtoa@sign^(0+128)
  3834     133F                     l3134:
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3837     133F  0847               	movf	(efgtoa@g+3)^(0+128),w
  3838     1340  00F3               	movwf	___fpclassifyf@x+3
  3839     1341  0846               	movf	(efgtoa@g+2)^(0+128),w
  3840     1342  00F2               	movwf	___fpclassifyf@x+2
  3841     1343  0845               	movf	(efgtoa@g+1)^(0+128),w
  3842     1344  00F1               	movwf	___fpclassifyf@x+1
  3843     1345  0844               	movf	efgtoa@g^(0+128),w
  3844     1346  00F0               	movwf	___fpclassifyf@x
  3845     1347  160A  158A  2773  160A  118A  	fcall	___fpclassifyf
  3846     134C  0370               	decf	?___fpclassifyf,w
  3847     134D  0471               	iorwf	?___fpclassifyf+1,w
  3848     134E  1D03               	btfss	3,2
  3849     134F  2B51               	goto	u4421
  3850     1350  2B52               	goto	u4420
  3851     1351                     u4421:
  3852     1351  2B99               	goto	l3148
  3853     1352                     u4420:
  3854     1352                     l3136:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3857     1352  1683               	bsf	3,5	;RP0=1, select bank1
  3858     1353  1303               	bcf	3,6	;RP1=0, select bank1
  3859     1354  0841               	movf	efgtoa@sign^(0+128),w
  3860     1355  1903               	btfsc	3,2
  3861     1356  2B58               	goto	u4431
  3862     1357  2B59               	goto	u4430
  3863     1358                     u4431:
  3864     1358  2B69               	goto	l3140
  3865     1359                     u4430:
  3866     1359                     l3138:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3869     1359  0841               	movf	efgtoa@sign^(0+128),w
  3870     135A  1283               	bcf	3,5	;RP0=0, select bank2
  3871     135B  1703               	bsf	3,6	;RP1=1, select bank2
  3872     135C  0090               	movwf	_dbuf^(0+256)
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
  3875     135D  30FF               	movlw	255
  3876     135E  1683               	bsf	3,5	;RP0=1, select bank1
  3877     135F  1303               	bcf	3,6	;RP1=0, select bank1
  3878     1360  07B1               	addwf	efgtoa@w^(0+128),f
  3879     1361  1803               	skipnc
  3880     1362  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3881     1363  30FF               	movlw	255
  3882     1364  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3885     1365  3001               	movlw	1
  3886     1366  00C2               	movwf	efgtoa@n^(0+128)
  3887     1367  3000               	movlw	0
  3888     1368  00C3               	movwf	(efgtoa@n^(0+128)+1)
  3889     1369                     l3140:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3892     1369  0842               	movf	efgtoa@n^(0+128),w
  3893     136A  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3894     136B  00F0               	movwf	strcpy@dest
  3895     136C  3098               	movlw	low (STR_12| (0+32768))
  3896     136D  00F1               	movwf	strcpy@src
  3897     136E  3099               	movlw	high (STR_12| (0+32768))
  3898     136F  00F2               	movwf	strcpy@src+1
  3899     1370  160A  158A  2327  160A  118A  	fcall	_strcpy
  3900     1375                     l3142:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3903     1375  30FD               	movlw	253
  3904     1376  1683               	bsf	3,5	;RP0=1, select bank1
  3905     1377  1303               	bcf	3,6	;RP1=0, select bank1
  3906     1378  07B1               	addwf	efgtoa@w^(0+128),f
  3907     1379  1803               	skipnc
  3908     137A  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3909     137B  30FF               	movlw	255
  3910     137C  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3911     137D                     l3144:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3914     137D  1283               	bcf	3,5	;RP0=0, select bank0
  3915     137E  1303               	bcf	3,6	;RP1=0, select bank0
  3916     137F  0849               	movf	efgtoa@fp,w
  3917     1380  00A8               	movwf	pad@fp
  3918     1381  084A               	movf	efgtoa@fp+1,w
  3919     1382  00A9               	movwf	pad@fp+1
  3920     1383  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3921     1384  00AA               	movwf	pad@buf
  3922     1385  1683               	bsf	3,5	;RP0=1, select bank1
  3923     1386  1303               	bcf	3,6	;RP1=0, select bank1
  3924     1387  0832               	movf	(efgtoa@w+1)^(0+128),w
  3925     1388  1283               	bcf	3,5	;RP0=0, select bank0
  3926     1389  1303               	bcf	3,6	;RP1=0, select bank0
  3927     138A  00AC               	movwf	pad@p+1
  3928     138B  1683               	bsf	3,5	;RP0=1, select bank1
  3929     138C  1303               	bcf	3,6	;RP1=0, select bank1
  3930     138D  0831               	movf	efgtoa@w^(0+128),w
  3931     138E  1283               	bcf	3,5	;RP0=0, select bank0
  3932     138F  1303               	bcf	3,6	;RP1=0, select bank0
  3933     1390  00AB               	movwf	pad@p
  3934     1391  160A  158A  2599  160A  118A  	fcall	_pad
  3935     1396  120A  118A  2FE6   	goto	l870
  3936     1399                     l3148:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3939     1399  1683               	bsf	3,5	;RP0=1, select bank1
  3940     139A  1303               	bcf	3,6	;RP1=0, select bank1
  3941     139B  0847               	movf	(efgtoa@g+3)^(0+128),w
  3942     139C  00F3               	movwf	___fpclassifyf@x+3
  3943     139D  0846               	movf	(efgtoa@g+2)^(0+128),w
  3944     139E  00F2               	movwf	___fpclassifyf@x+2
  3945     139F  0845               	movf	(efgtoa@g+1)^(0+128),w
  3946     13A0  00F1               	movwf	___fpclassifyf@x+1
  3947     13A1  0844               	movf	efgtoa@g^(0+128),w
  3948     13A2  00F0               	movwf	___fpclassifyf@x
  3949     13A3  160A  158A  2773  160A  118A  	fcall	___fpclassifyf
  3950     13A8  0870               	movf	?___fpclassifyf,w
  3951     13A9  0471               	iorwf	?___fpclassifyf+1,w
  3952     13AA  1D03               	btfss	3,2
  3953     13AB  2BAD               	goto	u4441
  3954     13AC  2BB0               	goto	u4440
  3955     13AD                     u4441:
  3956     13AD  120A  118A  28A6   	goto	l3162
  3957     13B0                     u4440:
  3958     13B0                     l3150:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3961     13B0  1683               	bsf	3,5	;RP0=1, select bank1
  3962     13B1  1303               	bcf	3,6	;RP1=0, select bank1
  3963     13B2  0841               	movf	efgtoa@sign^(0+128),w
  3964     13B3  1903               	btfsc	3,2
  3965     13B4  2BB6               	goto	u4451
  3966     13B5  2BB7               	goto	u4450
  3967     13B6                     u4451:
  3968     13B6  2BC7               	goto	l3154
  3969     13B7                     u4450:
  3970     13B7                     l3152:
  3971                           
  3972                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3973     13B7  0841               	movf	efgtoa@sign^(0+128),w
  3974     13B8  1283               	bcf	3,5	;RP0=0, select bank2
  3975     13B9  1703               	bsf	3,6	;RP1=1, select bank2
  3976     13BA  0090               	movwf	_dbuf^(0+256)
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
  3979     13BB  30FF               	movlw	255
  3980     13BC  1683               	bsf	3,5	;RP0=1, select bank1
  3981     13BD  1303               	bcf	3,6	;RP1=0, select bank1
  3982     13BE  07B1               	addwf	efgtoa@w^(0+128),f
  3983     13BF  1803               	skipnc
  3984     13C0  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3985     13C1  30FF               	movlw	255
  3986     13C2  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3989     13C3  3001               	movlw	1
  3990     13C4  00C2               	movwf	efgtoa@n^(0+128)
  3991     13C5  3000               	movlw	0
  3992     13C6  00C3               	movwf	(efgtoa@n^(0+128)+1)
  3993     13C7                     l3154:
  3994                           
  3995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3996     13C7  0842               	movf	efgtoa@n^(0+128),w
  3997     13C8  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3998     13C9  00F0               	movwf	strcpy@dest
  3999     13CA  309C               	movlw	low (STR_15| (0+32768))
  4000     13CB  00F1               	movwf	strcpy@src
  4001     13CC  3099               	movlw	high (STR_15| (0+32768))
  4002     13CD  00F2               	movwf	strcpy@src+1
  4003     13CE  160A  158A  2327  160A  118A  	fcall	_strcpy
  4004     13D3  2B75               	goto	l3142
  4005                           
  4006                           	psect	text7
  4007     1B27                     __ptext7:	
  4008 ;; *************** function _strcpy *****************
  4009 ;; Defined at:
  4010 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  dest            1    0[COMMON] PTR unsigned char 
  4013 ;;		 -> dbuf(80), 
  4014 ;;  src             2    1[COMMON] PTR const unsigned char 
  4015 ;;		 -> STR_15(4), STR_12(4), 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  d               1    5[COMMON] PTR unsigned char 
  4018 ;;		 -> dbuf(80), 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    0[COMMON] PTR unsigned char 
  4021 ;; Registers used:
  4022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         3       0       0       0       0
  4029 ;;      Locals:         1       0       0       0       0
  4030 ;;      Temps:          2       0       0       0       0
  4031 ;;      Totals:         6       0       0       0       0
  4032 ;;Total ram usage:        6 bytes
  4033 ;; Hardware stack levels used: 2
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_efgtoa
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041     1B27                     _strcpy:	
  4042                           ;psect for function _strcpy
  4043                           
  4044     1B27                     l3016:	
  4045                           ;incstack = 0
  4046                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4047                           
  4048     1B27  0870               	movf	strcpy@dest,w
  4049     1B28  00F5               	movwf	strcpy@d
  4050     1B29                     l3018:
  4051     1B29  0872               	movf	strcpy@src+1,w
  4052     1B2A  00F4               	movwf	??_strcpy+1
  4053     1B2B  0871               	movf	strcpy@src,w
  4054     1B2C  00F3               	movwf	??_strcpy
  4055     1B2D  0AF1               	incf	strcpy@src,f
  4056     1B2E  1903               	skipnz
  4057     1B2F  0AF2               	incf	strcpy@src+1,f
  4058     1B30  0874               	movf	??_strcpy+1,w
  4059     1B31  1283               	bcf	3,5	;RP0=0, select bank0
  4060     1B32  1303               	bcf	3,6	;RP1=0, select bank0
  4061     1B33  00FF               	movwf	btemp+1
  4062     1B34  0873               	movf	??_strcpy,w
  4063     1B35  0084               	movwf	4
  4064     1B36  160A  158A  21A0  160A  158A  	fcall	stringtab
  4065     1B3B  00FF               	movwf	btemp+1
  4066     1B3C  0875               	movf	strcpy@d,w
  4067     1B3D  0AF5               	incf	strcpy@d,f
  4068     1B3E  0084               	movwf	4
  4069     1B3F  087F               	movf	btemp+1,w
  4070     1B40  1783               	bsf	3,7	;select IRP bank2
  4071     1B41  0080               	movwf	0
  4072     1B42  0800               	movf	0,w
  4073     1B43  1D03               	btfss	3,2
  4074     1B44  2B46               	goto	u4081
  4075     1B45  2B47               	goto	u4080
  4076     1B46                     u4081:
  4077     1B46  2B29               	goto	l3018
  4078     1B47                     u4080:
  4079     1B47                     l1012:
  4080     1B47  0008               	return
  4081     1B48                     __end_of_strcpy:
  4082                           
  4083                           	psect	text8
  4084     1D99                     __ptext8:	
  4085 ;; *************** function _pad *****************
  4086 ;; Defined at:
  4087 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  4090 ;;		 -> sprintf@f(11), 
  4091 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  4092 ;;		 -> dbuf(80), 
  4093 ;;  p               2   11[BANK0 ] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  i               2   13[BANK0 ] int 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       5       0       0       0
  4106 ;;      Locals:         0       2       0       0       0
  4107 ;;      Temps:          1       0       0       0       0
  4108 ;;      Totals:         1       7       0       0       0
  4109 ;;Total ram usage:        8 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; Hardware stack levels required when called: 3
  4112 ;; This function calls:
  4113 ;;		_fputc
  4114 ;;		_fputs
  4115 ;; This function is called by:
  4116 ;;		_efgtoa
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120     1D99                     _pad:	
  4121                           ;psect for function _pad
  4122                           
  4123     1D99                     l2980:	
  4124                           ;incstack = 0
  4125                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4126                           
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4129     1D99  1283               	bcf	3,5	;RP0=0, select bank0
  4130     1D9A  1303               	bcf	3,6	;RP1=0, select bank0
  4131     1D9B  1FAC               	btfss	pad@p+1,7
  4132     1D9C  2D9E               	goto	u3981
  4133     1D9D  2D9F               	goto	u3980
  4134     1D9E                     u3981:
  4135     1D9E  2DA1               	goto	l855
  4136     1D9F                     u3980:
  4137     1D9F                     l2982:
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4140     1D9F  01AB               	clrf	pad@p
  4141     1DA0  01AC               	clrf	pad@p+1
  4142     1DA1                     l855:	
  4143                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  4144                           
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4147     1DA1  01AD               	clrf	pad@i
  4148     1DA2  01AE               	clrf	pad@i+1
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4151     1DA3  2DBB               	goto	l2988
  4152     1DA4                     l2984:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4155     1DA4  3020               	movlw	32
  4156     1DA5  00F0               	movwf	fputc@c
  4157     1DA6  3000               	movlw	0
  4158     1DA7  00F1               	movwf	fputc@c+1
  4159     1DA8  1283               	bcf	3,5	;RP0=0, select bank0
  4160     1DA9  1303               	bcf	3,6	;RP1=0, select bank0
  4161     1DAA  0828               	movf	pad@fp,w
  4162     1DAB  00F2               	movwf	fputc@fp
  4163     1DAC  0829               	movf	pad@fp+1,w
  4164     1DAD  00F3               	movwf	fputc@fp+1
  4165     1DAE  120A  118A  200C  160A  158A  	fcall	_fputc
  4166     1DB3                     l2986:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4169     1DB3  3001               	movlw	1
  4170     1DB4  1283               	bcf	3,5	;RP0=0, select bank0
  4171     1DB5  1303               	bcf	3,6	;RP1=0, select bank0
  4172     1DB6  07AD               	addwf	pad@i,f
  4173     1DB7  1803               	skipnc
  4174     1DB8  0AAE               	incf	pad@i+1,f
  4175     1DB9  3000               	movlw	0
  4176     1DBA  07AE               	addwf	pad@i+1,f
  4177     1DBB                     l2988:
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4180     1DBB  082E               	movf	pad@i+1,w
  4181     1DBC  3A80               	xorlw	128
  4182     1DBD  00FD               	movwf	??_pad
  4183     1DBE  082C               	movf	pad@p+1,w
  4184     1DBF  3A80               	xorlw	128
  4185     1DC0  027D               	subwf	??_pad,w
  4186     1DC1  1D03               	skipz
  4187     1DC2  2DC5               	goto	u3995
  4188     1DC3  082B               	movf	pad@p,w
  4189     1DC4  022D               	subwf	pad@i,w
  4190     1DC5                     u3995:
  4191     1DC5  1C03               	skipc
  4192     1DC6  2DC8               	goto	u3991
  4193     1DC7  2DC9               	goto	u3990
  4194     1DC8                     u3991:
  4195     1DC8  2DA4               	goto	l2984
  4196     1DC9                     u3990:
  4197     1DC9                     l2990:
  4198                           
  4199                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4200     1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  4201     1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  4202     1DCB  082A               	movf	pad@buf,w
  4203     1DCC  00A0               	movwf	fputs@s
  4204     1DCD  0828               	movf	pad@fp,w
  4205     1DCE  00A1               	movwf	fputs@fp
  4206     1DCF  0829               	movf	pad@fp+1,w
  4207     1DD0  00A2               	movwf	fputs@fp+1
  4208     1DD1  160A  158A  2404  160A  158A  	fcall	_fputs
  4209     1DD6                     l859:
  4210     1DD6  0008               	return
  4211     1DD7                     __end_of_pad:
  4212                           
  4213                           	psect	text9
  4214     1C04                     __ptext9:	
  4215 ;; *************** function _fputs *****************
  4216 ;; Defined at:
  4217 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  4220 ;;		 -> dbuf(80), 
  4221 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  4222 ;;		 -> sprintf@f(11), 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  i               2    6[BANK0 ] int 
  4225 ;;  c               1    5[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    0[BANK0 ] int 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         0       3       0       0       0
  4236 ;;      Locals:         0       3       0       0       0
  4237 ;;      Temps:          0       2       0       0       0
  4238 ;;      Totals:         0       8       0       0       0
  4239 ;;Total ram usage:        8 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 2
  4242 ;; This function calls:
  4243 ;;		_fputc
  4244 ;; This function is called by:
  4245 ;;		_pad
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249     1C04                     _fputs:	
  4250                           ;psect for function _fputs
  4251                           
  4252     1C04                     l2590:	
  4253                           ;incstack = 0
  4254                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4255                           
  4256     1C04  1283               	bcf	3,5	;RP0=0, select bank0
  4257     1C05  1303               	bcf	3,6	;RP1=0, select bank0
  4258     1C06  01A6               	clrf	fputs@i
  4259     1C07  01A7               	clrf	fputs@i+1
  4260     1C08  2C21               	goto	l2596
  4261     1C09                     l2592:
  4262     1C09  0825               	movf	fputs@c,w
  4263     1C0A  00A3               	movwf	??_fputs
  4264     1C0B  01A4               	clrf	??_fputs+1
  4265     1C0C  0823               	movf	??_fputs,w
  4266     1C0D  00F0               	movwf	fputc@c
  4267     1C0E  0824               	movf	??_fputs+1,w
  4268     1C0F  00F1               	movwf	fputc@c+1
  4269     1C10  0821               	movf	fputs@fp,w
  4270     1C11  00F2               	movwf	fputc@fp
  4271     1C12  0822               	movf	fputs@fp+1,w
  4272     1C13  00F3               	movwf	fputc@fp+1
  4273     1C14  120A  118A  200C  160A  158A  	fcall	_fputc
  4274     1C19                     l2594:
  4275     1C19  3001               	movlw	1
  4276     1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  4277     1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  4278     1C1C  07A6               	addwf	fputs@i,f
  4279     1C1D  1803               	skipnc
  4280     1C1E  0AA7               	incf	fputs@i+1,f
  4281     1C1F  3000               	movlw	0
  4282     1C20  07A7               	addwf	fputs@i+1,f
  4283     1C21                     l2596:
  4284     1C21  0826               	movf	fputs@i,w
  4285     1C22  0720               	addwf	fputs@s,w
  4286     1C23  00A3               	movwf	??_fputs
  4287     1C24  0823               	movf	??_fputs,w
  4288     1C25  0084               	movwf	4
  4289     1C26  1783               	bsf	3,7	;select IRP bank2
  4290     1C27  0800               	movf	0,w
  4291     1C28  00A5               	movwf	fputs@c
  4292     1C29  0825               	movf	fputs@c,w
  4293     1C2A  1D03               	btfss	3,2
  4294     1C2B  2C2D               	goto	u3051
  4295     1C2C  2C2E               	goto	u3050
  4296     1C2D                     u3051:
  4297     1C2D  2C09               	goto	l2592
  4298     1C2E                     u3050:
  4299     1C2E                     l1003:
  4300     1C2E  0008               	return
  4301     1C2F                     __end_of_fputs:
  4302                           
  4303                           	psect	text10
  4304     000C                     __ptext10:	
  4305 ;; *************** function _fputc *****************
  4306 ;; Defined at:
  4307 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  c               2    0[COMMON] int 
  4310 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  4311 ;;		 -> sprintf@f(11), 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  2    0[COMMON] int 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         4       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0
  4325 ;;      Temps:          9       0       0       0       0
  4326 ;;      Totals:        13       0       0       0       0
  4327 ;;Total ram usage:       13 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 1
  4330 ;; This function calls:
  4331 ;;		_putch
  4332 ;; This function is called by:
  4333 ;;		_pad
  4334 ;;		_vfpfcnvrt
  4335 ;;		_fputs
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339     000C                     _fputc:	
  4340                           ;psect for function _fputc
  4341                           
  4342     000C                     l2364:	
  4343                           ;incstack = 0
  4344                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4345                           
  4346     000C  0872               	movf	fputc@fp,w
  4347     000D  0473               	iorwf	fputc@fp+1,w
  4348     000E  1903               	btfsc	3,2
  4349     000F  2811               	goto	u2511
  4350     0010  2812               	goto	u2510
  4351     0011                     u2511:
  4352     0011  2818               	goto	l2368
  4353     0012                     u2510:
  4354     0012                     l2366:
  4355     0012  0872               	movf	fputc@fp,w
  4356     0013  0473               	iorwf	fputc@fp+1,w
  4357     0014  1D03               	btfss	3,2
  4358     0015  2817               	goto	u2521
  4359     0016  2818               	goto	u2520
  4360     0017                     u2521:
  4361     0017  281F               	goto	l2370
  4362     0018                     u2520:
  4363     0018                     l2368:
  4364     0018  0870               	movf	fputc@c,w
  4365     0019  160A  118A  2000  120A  118A  	fcall	_putch
  4366     001E  28A5               	goto	l995
  4367     001F                     l2370:
  4368     001F  0872               	movf	fputc@fp,w
  4369     0020  3E09               	addlw	9
  4370     0021  00F4               	movwf	??_fputc
  4371     0022  0873               	movf	fputc@fp+1,w
  4372     0023  1803               	skipnc
  4373     0024  3E01               	addlw	1
  4374     0025  3E00               	addlw	0
  4375     0026  00F5               	movwf	??_fputc+1
  4376     0027  0874               	movf	??_fputc,w
  4377     0028  0084               	movwf	4
  4378     0029  1783               	bsf	3,7
  4379     002A  1C75               	btfss	??_fputc+1,0
  4380     002B  1383               	bcf	3,7
  4381     002C  0800               	movf	0,w
  4382     002D  00F6               	movwf	??_fputc+2
  4383     002E  0A84               	incf	4,f
  4384     002F  0800               	movf	0,w
  4385     0030  00F7               	movwf	??_fputc+3
  4386     0031  0876               	movf	??_fputc+2,w
  4387     0032  0477               	iorwf	??_fputc+3,w
  4388     0033  1903               	btfsc	3,2
  4389     0034  2836               	goto	u2531
  4390     0035  2837               	goto	u2530
  4391     0036                     u2531:
  4392     0036  2869               	goto	l2374
  4393     0037                     u2530:
  4394     0037                     l2372:
  4395     0037  0872               	movf	fputc@fp,w
  4396     0038  3E09               	addlw	9
  4397     0039  00F4               	movwf	??_fputc
  4398     003A  0873               	movf	fputc@fp+1,w
  4399     003B  1803               	skipnc
  4400     003C  3E01               	addlw	1
  4401     003D  3E00               	addlw	0
  4402     003E  00F5               	movwf	??_fputc+1
  4403     003F  0874               	movf	??_fputc,w
  4404     0040  0084               	movwf	4
  4405     0041  1783               	bsf	3,7
  4406     0042  1C75               	btfss	??_fputc+1,0
  4407     0043  1383               	bcf	3,7
  4408     0044  0800               	movf	0,w
  4409     0045  00F6               	movwf	??_fputc+2
  4410     0046  0A84               	incf	4,f
  4411     0047  0800               	movf	0,w
  4412     0048  00F7               	movwf	??_fputc+3
  4413     0049  0872               	movf	fputc@fp,w
  4414     004A  3E02               	addlw	2
  4415     004B  00F8               	movwf	??_fputc+4
  4416     004C  0873               	movf	fputc@fp+1,w
  4417     004D  1803               	skipnc
  4418     004E  3E01               	addlw	1
  4419     004F  3E00               	addlw	0
  4420     0050  00F9               	movwf	??_fputc+5
  4421     0051  0878               	movf	??_fputc+4,w
  4422     0052  0084               	movwf	4
  4423     0053  1783               	bsf	3,7
  4424     0054  1C79               	btfss	??_fputc+5,0
  4425     0055  1383               	bcf	3,7
  4426     0056  0800               	movf	0,w
  4427     0057  00FA               	movwf	??_fputc+6
  4428     0058  0A84               	incf	4,f
  4429     0059  0800               	movf	0,w
  4430     005A  00FB               	movwf	??_fputc+7
  4431     005B  087B               	movf	??_fputc+7,w
  4432     005C  3A80               	xorlw	128
  4433     005D  00FC               	movwf	??_fputc+8
  4434     005E  0877               	movf	??_fputc+3,w
  4435     005F  3A80               	xorlw	128
  4436     0060  027C               	subwf	??_fputc+8,w
  4437     0061  1D03               	skipz
  4438     0062  2865               	goto	u2545
  4439     0063  0876               	movf	??_fputc+2,w
  4440     0064  027A               	subwf	??_fputc+6,w
  4441     0065                     u2545:
  4442     0065  1803               	skipnc
  4443     0066  2868               	goto	u2541
  4444     0067  2869               	goto	u2540
  4445     0068                     u2541:
  4446     0068  28A5               	goto	l995
  4447     0069                     u2540:
  4448     0069                     l2374:
  4449     0069  0872               	movf	fputc@fp,w
  4450     006A  0084               	movwf	4
  4451     006B  1783               	bsf	3,7
  4452     006C  1C73               	btfss	fputc@fp+1,0
  4453     006D  1383               	bcf	3,7
  4454     006E  0800               	movf	0,w
  4455     006F  00F4               	movwf	??_fputc
  4456     0070  0A84               	incf	4,f
  4457     0071  0800               	movf	0,w
  4458     0072  00F5               	movwf	??_fputc+1
  4459     0073  0872               	movf	fputc@fp,w
  4460     0074  3E02               	addlw	2
  4461     0075  00F6               	movwf	??_fputc+2
  4462     0076  0873               	movf	fputc@fp+1,w
  4463     0077  1803               	skipnc
  4464     0078  3E01               	addlw	1
  4465     0079  3E00               	addlw	0
  4466     007A  00F7               	movwf	??_fputc+3
  4467     007B  0876               	movf	??_fputc+2,w
  4468     007C  0084               	movwf	4
  4469     007D  1783               	bsf	3,7
  4470     007E  1C77               	btfss	??_fputc+3,0
  4471     007F  1383               	bcf	3,7
  4472     0080  0800               	movf	0,w
  4473     0081  0774               	addwf	??_fputc,w
  4474     0082  00F9               	movwf	??_fputc+5
  4475     0083  0875               	movf	??_fputc+1,w
  4476     0084  00F8               	movwf	??_fputc+4
  4477     0085  1803               	skipnc
  4478     0086  0AF8               	incf	??_fputc+4,f
  4479     0087  1F80               	btfss	0,7
  4480     0088  288A               	goto	u2550
  4481     0089  03F8               	decf	??_fputc+4,f
  4482     008A                     u2550:
  4483     008A  0878               	movf	??_fputc+4,w
  4484     008B  00FA               	movwf	??_fputc+6
  4485     008C  0879               	movf	??_fputc+5,w
  4486     008D  0084               	movwf	4
  4487     008E  1783               	bsf	3,7
  4488     008F  1C7A               	btfss	??_fputc+6,0
  4489     0090  1383               	bcf	3,7
  4490     0091  0870               	movf	fputc@c,w
  4491     0092  0080               	movwf	0
  4492     0093  0872               	movf	fputc@fp,w
  4493     0094  3E02               	addlw	2
  4494     0095  00F4               	movwf	??_fputc
  4495     0096  0873               	movf	fputc@fp+1,w
  4496     0097  1803               	skipnc
  4497     0098  3E01               	addlw	1
  4498     0099  3E00               	addlw	0
  4499     009A  00F5               	movwf	??_fputc+1
  4500     009B  0874               	movf	??_fputc,w
  4501     009C  0084               	movwf	4
  4502     009D  1783               	bsf	3,7
  4503     009E  1C75               	btfss	??_fputc+1,0
  4504     009F  1383               	bcf	3,7
  4505     00A0  3001               	movlw	1
  4506     00A1  0780               	addwf	0,f
  4507     00A2  0A84               	incf	4,f
  4508     00A3  1803               	skipnc
  4509     00A4  0A80               	incf	0,f
  4510     00A5                     l995:
  4511     00A5  0008               	return
  4512     00A6                     __end_of_fputc:
  4513                           
  4514                           	psect	text11
  4515     1000                     __ptext11:	
  4516 ;; *************** function _putch *****************
  4517 ;; Defined at:
  4518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  c               1    wreg     unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  c               1    0[COMMON] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		wreg
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4532 ;;      Params:         0       0       0       0       0
  4533 ;;      Locals:         0       0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0
  4535 ;;      Totals:         0       0       0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_fputc
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545     1000                     _putch:	
  4546                           ;psect for function _putch
  4547                           
  4548     1000                     l1006:	
  4549                           ;incstack = 0
  4550                           ; Regs used in _putch: [wreg]
  4551                           
  4552     1000  0008               	return
  4553     1001                     __end_of_putch:
  4554                           
  4555                           	psect	text12
  4556     1B06                     __ptext12:	
  4557 ;; *************** function _memcpy *****************
  4558 ;; Defined at:
  4559 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  d1              1    0[COMMON] PTR void 
  4562 ;;		 -> dbuf(80), 
  4563 ;;  s1              1    1[COMMON] PTR const void 
  4564 ;;		 -> dbuf(80), 
  4565 ;;  n               2    2[COMMON] unsigned int 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  s               1    6[COMMON] PTR const unsigned char 
  4568 ;;		 -> dbuf(80), 
  4569 ;;  d               1    5[COMMON] PTR unsigned char 
  4570 ;;		 -> dbuf(80), 
  4571 ;;  tmp             1    4[COMMON] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    0[COMMON] PTR void 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4581 ;;      Params:         4       0       0       0       0
  4582 ;;      Locals:         3       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0
  4584 ;;      Totals:         7       0       0       0       0
  4585 ;;Total ram usage:        7 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_efgtoa
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594     1B06                     _memcpy:	
  4595                           ;psect for function _memcpy
  4596                           
  4597     1B06                     l3058:	
  4598                           ;incstack = 0
  4599                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  4600                           
  4601     1B06  0871               	movf	memcpy@s1,w
  4602     1B07  00F6               	movwf	memcpy@s
  4603     1B08  0870               	movf	memcpy@d1,w
  4604     1B09  00F5               	movwf	memcpy@d
  4605     1B0A  2B18               	goto	l980
  4606     1B0B                     l3060:
  4607     1B0B  0876               	movf	memcpy@s,w
  4608     1B0C  0084               	movwf	4
  4609     1B0D  1783               	bsf	3,7	;select IRP bank2
  4610     1B0E  0800               	movf	0,w
  4611     1B0F  00F4               	movwf	memcpy@tmp
  4612     1B10                     l3062:
  4613     1B10  3001               	movlw	1
  4614     1B11  07F6               	addwf	memcpy@s,f
  4615     1B12                     l3064:
  4616     1B12  0875               	movf	memcpy@d,w
  4617     1B13  0084               	movwf	4
  4618     1B14  0874               	movf	memcpy@tmp,w
  4619     1B15  0080               	movwf	0
  4620     1B16  3001               	movlw	1
  4621     1B17  07F5               	addwf	memcpy@d,f
  4622     1B18                     l980:
  4623     1B18  3001               	movlw	1
  4624     1B19  02F2               	subwf	memcpy@n,f
  4625     1B1A  3000               	movlw	0
  4626     1B1B  1C03               	skipc
  4627     1B1C  03F3               	decf	memcpy@n+1,f
  4628     1B1D  02F3               	subwf	memcpy@n+1,f
  4629     1B1E  0A72               	incf	memcpy@n,w
  4630     1B1F  1D03               	skipz
  4631     1B20  2B25               	goto	u4221
  4632     1B21  0A73               	incf	memcpy@n+1,w
  4633     1B22  1D03               	btfss	3,2
  4634     1B23  2B25               	goto	u4221
  4635     1B24  2B26               	goto	u4220
  4636     1B25                     u4221:
  4637     1B25  2B0B               	goto	l3060
  4638     1B26                     u4220:
  4639     1B26                     l983:
  4640     1B26  0008               	return
  4641     1B27                     __end_of_memcpy:
  4642                           
  4643                           	psect	text13
  4644     1A8E                     __ptext13:	
  4645 ;; *************** function _labs *****************
  4646 ;; Defined at:
  4647 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  a               4    0[COMMON] long 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  4    0[COMMON] long 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         4       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0
  4664 ;;      Totals:         4       0       0       0       0
  4665 ;;Total ram usage:        4 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_efgtoa
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674     1A8E                     _labs:	
  4675                           ;psect for function _labs
  4676                           
  4677     1A8E                     l3020:	
  4678                           ;incstack = 0
  4679                           ; Regs used in _labs: [wreg+status,2+status,0]
  4680                           
  4681     1A8E  1BF3               	btfsc	labs@a+3,7
  4682     1A8F  2A91               	goto	u4091
  4683     1A90  2A92               	goto	u4090
  4684     1A91                     u4091:
  4685     1A91  2A93               	goto	l3024
  4686     1A92                     u4090:
  4687     1A92                     l3022:
  4688     1A92  2AA2               	goto	l977
  4689     1A93                     l3024:
  4690     1A93  0970               	comf	labs@a,w
  4691     1A94  00F0               	movwf	?_labs
  4692     1A95  0971               	comf	labs@a+1,w
  4693     1A96  00F1               	movwf	?_labs+1
  4694     1A97  0972               	comf	labs@a+2,w
  4695     1A98  00F2               	movwf	?_labs+2
  4696     1A99  0973               	comf	labs@a+3,w
  4697     1A9A  00F3               	movwf	?_labs+3
  4698     1A9B  0AF0               	incf	?_labs,f
  4699     1A9C  1903               	skipnz
  4700     1A9D  0AF1               	incf	?_labs+1,f
  4701     1A9E  1903               	skipnz
  4702     1A9F  0AF2               	incf	?_labs+2,f
  4703     1AA0  1903               	skipnz
  4704     1AA1  0AF3               	incf	?_labs+3,f
  4705     1AA2                     l977:
  4706     1AA2  0008               	return
  4707     1AA3                     __end_of_labs:
  4708                           
  4709                           	psect	text14
  4710     11B6                     __ptext14:	
  4711 ;; *************** function _floorf *****************
  4712 ;; Defined at:
  4713 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  x               4   13[BANK0 ] float 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  u               4   29[BANK0 ] struct .
  4718 ;;  m               4   23[BANK0 ] unsigned long 
  4719 ;;  e               2   27[BANK0 ] int 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  4   13[BANK0 ] float 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, btemp+1
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4729 ;;      Params:         0       4       0       0       0
  4730 ;;      Locals:         0      10       0       0       0
  4731 ;;      Temps:          0       6       0       0       0
  4732 ;;      Totals:         0      20       0       0       0
  4733 ;;Total ram usage:       20 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_efgtoa
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742     11B6                     _floorf:	
  4743                           ;psect for function _floorf
  4744                           
  4745     11B6                     l3028:	
  4746                           ;incstack = 0
  4747                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  4748                           
  4749     11B6  1683               	bsf	3,5	;RP0=1, select bank1
  4750     11B7  1303               	bcf	3,6	;RP1=0, select bank1
  4751     11B8  0866               	movf	(floorf@F521+3)^(0+128),w
  4752     11B9  1283               	bcf	3,5	;RP0=0, select bank0
  4753     11BA  1303               	bcf	3,6	;RP1=0, select bank0
  4754     11BB  00C0               	movwf	floorf@u+3
  4755     11BC  1683               	bsf	3,5	;RP0=1, select bank1
  4756     11BD  1303               	bcf	3,6	;RP1=0, select bank1
  4757     11BE  0865               	movf	(floorf@F521+2)^(0+128),w
  4758     11BF  1283               	bcf	3,5	;RP0=0, select bank0
  4759     11C0  1303               	bcf	3,6	;RP1=0, select bank0
  4760     11C1  00BF               	movwf	floorf@u+2
  4761     11C2  1683               	bsf	3,5	;RP0=1, select bank1
  4762     11C3  1303               	bcf	3,6	;RP1=0, select bank1
  4763     11C4  0864               	movf	(floorf@F521+1)^(0+128),w
  4764     11C5  1283               	bcf	3,5	;RP0=0, select bank0
  4765     11C6  1303               	bcf	3,6	;RP1=0, select bank0
  4766     11C7  00BE               	movwf	floorf@u+1
  4767     11C8  1683               	bsf	3,5	;RP0=1, select bank1
  4768     11C9  1303               	bcf	3,6	;RP1=0, select bank1
  4769     11CA  0863               	movf	floorf@F521^(0+128),w
  4770     11CB  1283               	bcf	3,5	;RP0=0, select bank0
  4771     11CC  1303               	bcf	3,6	;RP1=0, select bank0
  4772     11CD  00BD               	movwf	floorf@u
  4773     11CE  0830               	movf	floorf@x+3,w
  4774     11CF  00C0               	movwf	floorf@u+3
  4775     11D0  082F               	movf	floorf@x+2,w
  4776     11D1  00BF               	movwf	floorf@u+2
  4777     11D2  082E               	movf	floorf@x+1,w
  4778     11D3  00BE               	movwf	floorf@u+1
  4779     11D4  082D               	movf	floorf@x,w
  4780     11D5  00BD               	movwf	floorf@u
  4781     11D6                     l3030:
  4782     11D6  083D               	movf	floorf@u,w
  4783     11D7  00B1               	movwf	??_floorf
  4784     11D8  083E               	movf	floorf@u+1,w
  4785     11D9  00B2               	movwf	??_floorf+1
  4786     11DA  083F               	movf	floorf@u+2,w
  4787     11DB  00B3               	movwf	??_floorf+2
  4788     11DC  0840               	movf	floorf@u+3,w
  4789     11DD  00B4               	movwf	??_floorf+3
  4790     11DE  3017               	movlw	23
  4791     11DF                     u4105:
  4792     11DF  1003               	clrc
  4793     11E0  0CB4               	rrf	??_floorf+3,f
  4794     11E1  0CB3               	rrf	??_floorf+2,f
  4795     11E2  0CB2               	rrf	??_floorf+1,f
  4796     11E3  0CB1               	rrf	??_floorf,f
  4797     11E4                     u4100:
  4798     11E4  3EFF               	addlw	-1
  4799     11E5  1D03               	skipz
  4800     11E6  29DF               	goto	u4105
  4801     11E7  30FF               	movlw	255
  4802     11E8  0531               	andwf	??_floorf,w
  4803     11E9  00B5               	movwf	??_floorf+4
  4804     11EA  3000               	movlw	0
  4805     11EB  0532               	andwf	??_floorf+1,w
  4806     11EC  00B6               	movwf	??_floorf+5
  4807     11ED  0835               	movf	??_floorf+4,w
  4808     11EE  3E81               	addlw	129
  4809     11EF  00BB               	movwf	floorf@e
  4810     11F0  0836               	movf	??_floorf+5,w
  4811     11F1  1803               	skipnc
  4812     11F2  3E01               	addlw	1
  4813     11F3  3EFF               	addlw	255
  4814     11F4  00BC               	movwf	floorf@e+1
  4815     11F5                     l3032:
  4816     11F5  083C               	movf	floorf@e+1,w
  4817     11F6  3A80               	xorlw	128
  4818     11F7  00FF               	movwf	btemp+1
  4819     11F8  3080               	movlw	128
  4820     11F9  027F               	subwf	btemp+1,w
  4821     11FA  1D03               	skipz
  4822     11FB  29FE               	goto	u4115
  4823     11FC  3017               	movlw	23
  4824     11FD  023B               	subwf	floorf@e,w
  4825     11FE                     u4115:
  4826     11FE  1C03               	skipc
  4827     11FF  2A01               	goto	u4111
  4828     1200  2A02               	goto	u4110
  4829     1201                     u4111:
  4830     1201  2A03               	goto	l962
  4831     1202                     u4110:
  4832     1202                     l3034:
  4833     1202  2AC4               	goto	l963
  4834     1203                     l962:
  4835     1203  1283               	bcf	3,5	;RP0=0, select bank0
  4836     1204  1303               	bcf	3,6	;RP1=0, select bank0
  4837     1205  1BBC               	btfsc	floorf@e+1,7
  4838     1206  2A08               	goto	u4121
  4839     1207  2A09               	goto	u4120
  4840     1208                     u4121:
  4841     1208  2A79               	goto	l3048
  4842     1209                     u4120:
  4843     1209                     l3036:
  4844     1209  0A3B               	incf	floorf@e,w
  4845     120A  00FF               	movwf	btemp+1
  4846     120B  30FF               	movlw	255
  4847     120C  00B1               	movwf	??_floorf
  4848     120D  30FF               	movlw	255
  4849     120E  00B2               	movwf	??_floorf+1
  4850     120F  307F               	movlw	127
  4851     1210  00B3               	movwf	??_floorf+2
  4852     1211  3000               	movlw	0
  4853     1212  00B4               	movwf	??_floorf+3
  4854     1213  2A19               	goto	u4130
  4855     1214                     u4135:
  4856     1214  0D34               	rlf	??_floorf+3,w
  4857     1215  0CB4               	rrf	??_floorf+3,f
  4858     1216  0CB3               	rrf	??_floorf+2,f
  4859     1217  0CB2               	rrf	??_floorf+1,f
  4860     1218  0CB1               	rrf	??_floorf,f
  4861     1219                     u4130:
  4862     1219  0BFF               	decfsz	btemp+1,f
  4863     121A  2A14               	goto	u4135
  4864     121B  0834               	movf	??_floorf+3,w
  4865     121C  00BA               	movwf	floorf@m+3
  4866     121D  0833               	movf	??_floorf+2,w
  4867     121E  00B9               	movwf	floorf@m+2
  4868     121F  0832               	movf	??_floorf+1,w
  4869     1220  00B8               	movwf	floorf@m+1
  4870     1221  0831               	movf	??_floorf,w
  4871     1222  00B7               	movwf	floorf@m
  4872     1223                     l3038:
  4873     1223  0837               	movf	floorf@m,w
  4874     1224  053D               	andwf	floorf@u,w
  4875     1225  00B1               	movwf	??_floorf
  4876     1226  0838               	movf	floorf@m+1,w
  4877     1227  053E               	andwf	floorf@u+1,w
  4878     1228  00B2               	movwf	??_floorf+1
  4879     1229  0839               	movf	floorf@m+2,w
  4880     122A  053F               	andwf	floorf@u+2,w
  4881     122B  00B3               	movwf	??_floorf+2
  4882     122C  083A               	movf	floorf@m+3,w
  4883     122D  0540               	andwf	floorf@u+3,w
  4884     122E  00B4               	movwf	??_floorf+3
  4885     122F  0834               	movf	??_floorf+3,w
  4886     1230  0433               	iorwf	??_floorf+2,w
  4887     1231  0432               	iorwf	??_floorf+1,w
  4888     1232  0431               	iorwf	??_floorf,w
  4889     1233  1D03               	skipz
  4890     1234  2A36               	goto	u4141
  4891     1235  2A37               	goto	u4140
  4892     1236                     u4141:
  4893     1236  2A38               	goto	l3042
  4894     1237                     u4140:
  4895     1237  2A02               	goto	l3034
  4896     1238                     l3042:
  4897     1238  083D               	movf	floorf@u,w
  4898     1239  00B1               	movwf	??_floorf
  4899     123A  083E               	movf	floorf@u+1,w
  4900     123B  00B2               	movwf	??_floorf+1
  4901     123C  083F               	movf	floorf@u+2,w
  4902     123D  00B3               	movwf	??_floorf+2
  4903     123E  0840               	movf	floorf@u+3,w
  4904     123F  00B4               	movwf	??_floorf+3
  4905     1240  301F               	movlw	31
  4906     1241                     u4155:
  4907     1241  1003               	clrc
  4908     1242  0CB4               	rrf	??_floorf+3,f
  4909     1243  0CB3               	rrf	??_floorf+2,f
  4910     1244  0CB2               	rrf	??_floorf+1,f
  4911     1245  0CB1               	rrf	??_floorf,f
  4912     1246                     u4150:
  4913     1246  3EFF               	addlw	-1
  4914     1247  1D03               	skipz
  4915     1248  2A41               	goto	u4155
  4916     1249  0834               	movf	??_floorf+3,w
  4917     124A  0433               	iorwf	??_floorf+2,w
  4918     124B  0432               	iorwf	??_floorf+1,w
  4919     124C  0431               	iorwf	??_floorf,w
  4920     124D  1903               	skipnz
  4921     124E  2A50               	goto	u4161
  4922     124F  2A51               	goto	u4160
  4923     1250                     u4161:
  4924     1250  2A68               	goto	l3046
  4925     1251                     u4160:
  4926     1251                     l3044:
  4927     1251  0837               	movf	floorf@m,w
  4928     1252  07BD               	addwf	floorf@u,f
  4929     1253  0838               	movf	floorf@m+1,w
  4930     1254  1103               	clrz
  4931     1255  1803               	skipnc
  4932     1256  3E01               	addlw	1
  4933     1257  1903               	skipnz
  4934     1258  2A5A               	goto	u4171
  4935     1259  07BE               	addwf	floorf@u+1,f
  4936     125A                     u4171:
  4937     125A  0839               	movf	floorf@m+2,w
  4938     125B  1103               	clrz
  4939     125C  1803               	skipnc
  4940     125D  3E01               	addlw	1
  4941     125E  1903               	skipnz
  4942     125F  2A61               	goto	u4172
  4943     1260  07BF               	addwf	floorf@u+2,f
  4944     1261                     u4172:
  4945     1261  083A               	movf	floorf@m+3,w
  4946     1262  1103               	clrz
  4947     1263  1803               	skipnc
  4948     1264  3E01               	addlw	1
  4949     1265  1903               	skipnz
  4950     1266  2A68               	goto	u4173
  4951     1267  07C0               	addwf	floorf@u+3,f
  4952     1268                     u4173:
  4953     1268                     l3046:
  4954     1268  0937               	comf	floorf@m,w
  4955     1269  00B1               	movwf	??_floorf
  4956     126A  0938               	comf	floorf@m+1,w
  4957     126B  00B2               	movwf	??_floorf+1
  4958     126C  0939               	comf	floorf@m+2,w
  4959     126D  00B3               	movwf	??_floorf+2
  4960     126E  093A               	comf	floorf@m+3,w
  4961     126F  00B4               	movwf	??_floorf+3
  4962     1270  0831               	movf	??_floorf,w
  4963     1271  05BD               	andwf	floorf@u,f
  4964     1272  0832               	movf	??_floorf+1,w
  4965     1273  05BE               	andwf	floorf@u+1,f
  4966     1274  0833               	movf	??_floorf+2,w
  4967     1275  05BF               	andwf	floorf@u+2,f
  4968     1276  0834               	movf	??_floorf+3,w
  4969     1277  05C0               	andwf	floorf@u+3,f
  4970     1278  2ABC               	goto	l967
  4971     1279                     l3048:
  4972     1279  083D               	movf	floorf@u,w
  4973     127A  00B1               	movwf	??_floorf
  4974     127B  083E               	movf	floorf@u+1,w
  4975     127C  00B2               	movwf	??_floorf+1
  4976     127D  083F               	movf	floorf@u+2,w
  4977     127E  00B3               	movwf	??_floorf+2
  4978     127F  0840               	movf	floorf@u+3,w
  4979     1280  00B4               	movwf	??_floorf+3
  4980     1281  301F               	movlw	31
  4981     1282                     u4185:
  4982     1282  1003               	clrc
  4983     1283  0CB4               	rrf	??_floorf+3,f
  4984     1284  0CB3               	rrf	??_floorf+2,f
  4985     1285  0CB2               	rrf	??_floorf+1,f
  4986     1286  0CB1               	rrf	??_floorf,f
  4987     1287                     u4180:
  4988     1287  3EFF               	addlw	-1
  4989     1288  1D03               	skipz
  4990     1289  2A82               	goto	u4185
  4991     128A  0834               	movf	??_floorf+3,w
  4992     128B  0433               	iorwf	??_floorf+2,w
  4993     128C  0432               	iorwf	??_floorf+1,w
  4994     128D  0431               	iorwf	??_floorf,w
  4995     128E  1D03               	skipz
  4996     128F  2A91               	goto	u4191
  4997     1290  2A92               	goto	u4190
  4998     1291                     u4191:
  4999     1291  2A9B               	goto	l3052
  5000     1292                     u4190:
  5001     1292                     l3050:
  5002     1292  3000               	movlw	0
  5003     1293  00C0               	movwf	floorf@u+3
  5004     1294  3000               	movlw	0
  5005     1295  00BF               	movwf	floorf@u+2
  5006     1296  3000               	movlw	0
  5007     1297  00BE               	movwf	floorf@u+1
  5008     1298  3000               	movlw	0
  5009     1299  00BD               	movwf	floorf@u
  5010     129A  2ABC               	goto	l967
  5011     129B                     l3052:
  5012     129B  083D               	movf	floorf@u,w
  5013     129C  00B1               	movwf	??_floorf
  5014     129D  083E               	movf	floorf@u+1,w
  5015     129E  00B2               	movwf	??_floorf+1
  5016     129F  083F               	movf	floorf@u+2,w
  5017     12A0  00B3               	movwf	??_floorf+2
  5018     12A1  0840               	movf	floorf@u+3,w
  5019     12A2  00B4               	movwf	??_floorf+3
  5020     12A3  3001               	movlw	1
  5021     12A4                     u4205:
  5022     12A4  1003               	clrc
  5023     12A5  0DB1               	rlf	??_floorf,f
  5024     12A6  0DB2               	rlf	??_floorf+1,f
  5025     12A7  0DB3               	rlf	??_floorf+2,f
  5026     12A8  0DB4               	rlf	??_floorf+3,f
  5027     12A9                     u4200:
  5028     12A9  3EFF               	addlw	-1
  5029     12AA  1D03               	skipz
  5030     12AB  2AA4               	goto	u4205
  5031     12AC  0834               	movf	??_floorf+3,w
  5032     12AD  0433               	iorwf	??_floorf+2,w
  5033     12AE  0432               	iorwf	??_floorf+1,w
  5034     12AF  0431               	iorwf	??_floorf,w
  5035     12B0  1903               	skipnz
  5036     12B1  2AB3               	goto	u4211
  5037     12B2  2AB4               	goto	u4210
  5038     12B3                     u4211:
  5039     12B3  2ABC               	goto	l967
  5040     12B4                     u4210:
  5041     12B4                     l3054:
  5042     12B4  30BF               	movlw	191
  5043     12B5  00C0               	movwf	floorf@u+3
  5044     12B6  3080               	movlw	128
  5045     12B7  00BF               	movwf	floorf@u+2
  5046     12B8  3000               	movlw	0
  5047     12B9  00BE               	movwf	floorf@u+1
  5048     12BA  3000               	movlw	0
  5049     12BB  00BD               	movwf	floorf@u
  5050     12BC                     l967:
  5051     12BC  0840               	movf	floorf@u+3,w
  5052     12BD  00B0               	movwf	?_floorf+3
  5053     12BE  083F               	movf	floorf@u+2,w
  5054     12BF  00AF               	movwf	?_floorf+2
  5055     12C0  083E               	movf	floorf@u+1,w
  5056     12C1  00AE               	movwf	?_floorf+1
  5057     12C2  083D               	movf	floorf@u,w
  5058     12C3  00AD               	movwf	?_floorf
  5059     12C4                     l963:
  5060     12C4  0008               	return
  5061     12C5                     __end_of_floorf:
  5062                           
  5063                           	psect	text15
  5064     1F73                     __ptext15:	
  5065 ;; *************** function ___fpclassifyf *****************
  5066 ;; Defined at:
  5067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  x               4    0[COMMON] float 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  u               4    2[BANK0 ] struct .
  5072 ;;  e               2    0[BANK0 ] int 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  2    0[COMMON] int 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5082 ;;      Params:         4       0       0       0       0
  5083 ;;      Locals:         0       6       0       0       0
  5084 ;;      Temps:          6       0       0       0       0
  5085 ;;      Totals:        10       6       0       0       0
  5086 ;;Total ram usage:       16 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_efgtoa
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095     1F73                     ___fpclassifyf:	
  5096                           ;psect for function ___fpclassifyf
  5097                           
  5098     1F73                     l2992:	
  5099                           ;incstack = 0
  5100                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  5101                           
  5102     1F73  1683               	bsf	3,5	;RP0=1, select bank1
  5103     1F74  1303               	bcf	3,6	;RP1=0, select bank1
  5104     1F75  086A               	movf	(___fpclassifyf@F465+3)^(0+128),w
  5105     1F76  1283               	bcf	3,5	;RP0=0, select bank0
  5106     1F77  1303               	bcf	3,6	;RP1=0, select bank0
  5107     1F78  00A5               	movwf	___fpclassifyf@u+3
  5108     1F79  1683               	bsf	3,5	;RP0=1, select bank1
  5109     1F7A  1303               	bcf	3,6	;RP1=0, select bank1
  5110     1F7B  0869               	movf	(___fpclassifyf@F465+2)^(0+128),w
  5111     1F7C  1283               	bcf	3,5	;RP0=0, select bank0
  5112     1F7D  1303               	bcf	3,6	;RP1=0, select bank0
  5113     1F7E  00A4               	movwf	___fpclassifyf@u+2
  5114     1F7F  1683               	bsf	3,5	;RP0=1, select bank1
  5115     1F80  1303               	bcf	3,6	;RP1=0, select bank1
  5116     1F81  0868               	movf	(___fpclassifyf@F465+1)^(0+128),w
  5117     1F82  1283               	bcf	3,5	;RP0=0, select bank0
  5118     1F83  1303               	bcf	3,6	;RP1=0, select bank0
  5119     1F84  00A3               	movwf	___fpclassifyf@u+1
  5120     1F85  1683               	bsf	3,5	;RP0=1, select bank1
  5121     1F86  1303               	bcf	3,6	;RP1=0, select bank1
  5122     1F87  0867               	movf	___fpclassifyf@F465^(0+128),w
  5123     1F88  1283               	bcf	3,5	;RP0=0, select bank0
  5124     1F89  1303               	bcf	3,6	;RP1=0, select bank0
  5125     1F8A  00A2               	movwf	___fpclassifyf@u
  5126     1F8B  0873               	movf	___fpclassifyf@x+3,w
  5127     1F8C  00A5               	movwf	___fpclassifyf@u+3
  5128     1F8D  0872               	movf	___fpclassifyf@x+2,w
  5129     1F8E  00A4               	movwf	___fpclassifyf@u+2
  5130     1F8F  0871               	movf	___fpclassifyf@x+1,w
  5131     1F90  00A3               	movwf	___fpclassifyf@u+1
  5132     1F91  0870               	movf	___fpclassifyf@x,w
  5133     1F92  00A2               	movwf	___fpclassifyf@u
  5134     1F93                     l2994:
  5135     1F93  0822               	movf	___fpclassifyf@u,w
  5136     1F94  00F4               	movwf	??___fpclassifyf
  5137     1F95  0823               	movf	___fpclassifyf@u+1,w
  5138     1F96  00F5               	movwf	??___fpclassifyf+1
  5139     1F97  0824               	movf	___fpclassifyf@u+2,w
  5140     1F98  00F6               	movwf	??___fpclassifyf+2
  5141     1F99  0825               	movf	___fpclassifyf@u+3,w
  5142     1F9A  00F7               	movwf	??___fpclassifyf+3
  5143     1F9B  3017               	movlw	23
  5144     1F9C                     u4005:
  5145     1F9C  1003               	clrc
  5146     1F9D  0CF7               	rrf	??___fpclassifyf+3,f
  5147     1F9E  0CF6               	rrf	??___fpclassifyf+2,f
  5148     1F9F  0CF5               	rrf	??___fpclassifyf+1,f
  5149     1FA0  0CF4               	rrf	??___fpclassifyf,f
  5150     1FA1                     u4000:
  5151     1FA1  3EFF               	addlw	-1
  5152     1FA2  1D03               	skipz
  5153     1FA3  2F9C               	goto	u4005
  5154     1FA4  30FF               	movlw	255
  5155     1FA5  0574               	andwf	??___fpclassifyf,w
  5156     1FA6  00A0               	movwf	___fpclassifyf@e
  5157     1FA7  3000               	movlw	0
  5158     1FA8  0575               	andwf	??___fpclassifyf+1,w
  5159     1FA9  00A1               	movwf	___fpclassifyf@e+1
  5160     1FAA                     l2996:
  5161     1FAA  0820               	movf	___fpclassifyf@e,w
  5162     1FAB  0421               	iorwf	___fpclassifyf@e+1,w
  5163     1FAC  1D03               	btfss	3,2
  5164     1FAD  2FAF               	goto	u4011
  5165     1FAE  2FB0               	goto	u4010
  5166     1FAF                     u4011:
  5167     1FAF  2FD3               	goto	l3006
  5168     1FB0                     u4010:
  5169     1FB0                     l2998:
  5170     1FB0  0822               	movf	___fpclassifyf@u,w
  5171     1FB1  00F4               	movwf	??___fpclassifyf
  5172     1FB2  0823               	movf	___fpclassifyf@u+1,w
  5173     1FB3  00F5               	movwf	??___fpclassifyf+1
  5174     1FB4  0824               	movf	___fpclassifyf@u+2,w
  5175     1FB5  00F6               	movwf	??___fpclassifyf+2
  5176     1FB6  0825               	movf	___fpclassifyf@u+3,w
  5177     1FB7  00F7               	movwf	??___fpclassifyf+3
  5178     1FB8  3001               	movlw	1
  5179     1FB9                     u4025:
  5180     1FB9  1003               	clrc
  5181     1FBA  0DF4               	rlf	??___fpclassifyf,f
  5182     1FBB  0DF5               	rlf	??___fpclassifyf+1,f
  5183     1FBC  0DF6               	rlf	??___fpclassifyf+2,f
  5184     1FBD  0DF7               	rlf	??___fpclassifyf+3,f
  5185     1FBE                     u4020:
  5186     1FBE  3EFF               	addlw	-1
  5187     1FBF  1D03               	skipz
  5188     1FC0  2FB9               	goto	u4025
  5189     1FC1  0877               	movf	??___fpclassifyf+3,w
  5190     1FC2  0476               	iorwf	??___fpclassifyf+2,w
  5191     1FC3  0475               	iorwf	??___fpclassifyf+1,w
  5192     1FC4  0474               	iorwf	??___fpclassifyf,w
  5193     1FC5  1D03               	skipz
  5194     1FC6  2FC8               	goto	u4031
  5195     1FC7  2FC9               	goto	u4030
  5196     1FC8                     u4031:
  5197     1FC8  2FCE               	goto	l3002
  5198     1FC9                     u4030:
  5199     1FC9                     l3000:
  5200     1FC9  3002               	movlw	2
  5201     1FCA  00F0               	movwf	?___fpclassifyf
  5202     1FCB  3000               	movlw	0
  5203     1FCC  00F1               	movwf	?___fpclassifyf+1
  5204     1FCD  2FFF               	goto	l956
  5205     1FCE                     l3002:
  5206     1FCE  3003               	movlw	3
  5207     1FCF  00F0               	movwf	?___fpclassifyf
  5208     1FD0  3000               	movlw	0
  5209     1FD1  00F1               	movwf	?___fpclassifyf+1
  5210     1FD2  2FFF               	goto	l956
  5211     1FD3                     l3006:
  5212     1FD3  0A20               	incf	___fpclassifyf@e,w
  5213     1FD4  0421               	iorwf	___fpclassifyf@e+1,w
  5214     1FD5  1D03               	btfss	3,2
  5215     1FD6  2FD8               	goto	u4041
  5216     1FD7  2FD9               	goto	u4040
  5217     1FD8                     u4041:
  5218     1FD8  2FFB               	goto	l3012
  5219     1FD9                     u4040:
  5220     1FD9                     l3008:
  5221     1FD9  0822               	movf	___fpclassifyf@u,w
  5222     1FDA  00F4               	movwf	??___fpclassifyf
  5223     1FDB  0823               	movf	___fpclassifyf@u+1,w
  5224     1FDC  00F5               	movwf	??___fpclassifyf+1
  5225     1FDD  0824               	movf	___fpclassifyf@u+2,w
  5226     1FDE  00F6               	movwf	??___fpclassifyf+2
  5227     1FDF  0825               	movf	___fpclassifyf@u+3,w
  5228     1FE0  00F7               	movwf	??___fpclassifyf+3
  5229     1FE1  3009               	movlw	9
  5230     1FE2                     u4055:
  5231     1FE2  1003               	clrc
  5232     1FE3  0DF4               	rlf	??___fpclassifyf,f
  5233     1FE4  0DF5               	rlf	??___fpclassifyf+1,f
  5234     1FE5  0DF6               	rlf	??___fpclassifyf+2,f
  5235     1FE6  0DF7               	rlf	??___fpclassifyf+3,f
  5236     1FE7                     u4050:
  5237     1FE7  3EFF               	addlw	-1
  5238     1FE8  1D03               	skipz
  5239     1FE9  2FE2               	goto	u4055
  5240     1FEA  0877               	movf	??___fpclassifyf+3,w
  5241     1FEB  0476               	iorwf	??___fpclassifyf+2,w
  5242     1FEC  0475               	iorwf	??___fpclassifyf+1,w
  5243     1FED  0474               	iorwf	??___fpclassifyf,w
  5244     1FEE  1903               	skipnz
  5245     1FEF  2FF1               	goto	u4061
  5246     1FF0  2FF3               	goto	u4060
  5247     1FF1                     u4061:
  5248     1FF1  3001               	movlw	1
  5249     1FF2  2FF4               	goto	u4070
  5250     1FF3                     u4060:
  5251     1FF3  3000               	movlw	0
  5252     1FF4                     u4070:
  5253     1FF4  00F8               	movwf	??___fpclassifyf+4
  5254     1FF5  01F9               	clrf	??___fpclassifyf+5
  5255     1FF6  0878               	movf	??___fpclassifyf+4,w
  5256     1FF7  00F0               	movwf	?___fpclassifyf
  5257     1FF8  0879               	movf	??___fpclassifyf+5,w
  5258     1FF9  00F1               	movwf	?___fpclassifyf+1
  5259     1FFA  2FFF               	goto	l956
  5260     1FFB                     l3012:
  5261     1FFB  3004               	movlw	4
  5262     1FFC  00F0               	movwf	?___fpclassifyf
  5263     1FFD  3000               	movlw	0
  5264     1FFE  00F1               	movwf	?___fpclassifyf+1
  5265     1FFF                     l956:
  5266     1FFF  0008               	return
  5267     2000                     __end_of___fpclassifyf:
  5268                           
  5269                           	psect	text16
  5270     0800                     __ptext16:	
  5271 ;; *************** function ___flsub *****************
  5272 ;; Defined at:
  5273 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  a               4   21[BANK0 ] int 
  5276 ;;  b               4   25[BANK0 ] int 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  4   21[BANK0 ] int 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5288 ;;      Params:         0       8       0       0       0
  5289 ;;      Locals:         0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0
  5291 ;;      Totals:         0       8       0       0       0
  5292 ;;Total ram usage:        8 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 1
  5295 ;; This function calls:
  5296 ;;		___fladd
  5297 ;; This function is called by:
  5298 ;;		_efgtoa
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302     0800                     ___flsub:	
  5303                           ;psect for function ___flsub
  5304                           
  5305     0800                     l2688:	
  5306                           ;incstack = 0
  5307                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5308                           
  5309     0800  3080               	movlw	128
  5310     0801  1283               	bcf	3,5	;RP0=0, select bank0
  5311     0802  1303               	bcf	3,6	;RP1=0, select bank0
  5312     0803  06B8               	xorwf	___flsub@a+3,f
  5313     0804                     l2690:
  5314     0804  083C               	movf	___flsub@b+3,w
  5315     0805  00F3               	movwf	___fladd@b+3
  5316     0806  083B               	movf	___flsub@b+2,w
  5317     0807  00F2               	movwf	___fladd@b+2
  5318     0808  083A               	movf	___flsub@b+1,w
  5319     0809  00F1               	movwf	___fladd@b+1
  5320     080A  0839               	movf	___flsub@b,w
  5321     080B  00F0               	movwf	___fladd@b
  5322     080C  0838               	movf	___flsub@a+3,w
  5323     080D  00F7               	movwf	___fladd@a+3
  5324     080E  0837               	movf	___flsub@a+2,w
  5325     080F  00F6               	movwf	___fladd@a+2
  5326     0810  0836               	movf	___flsub@a+1,w
  5327     0811  00F5               	movwf	___fladd@a+1
  5328     0812  0835               	movf	___flsub@a,w
  5329     0813  00F4               	movwf	___fladd@a
  5330     0814  160A  118A  25A4  120A  158A  	fcall	___fladd
  5331     0819  0873               	movf	?___fladd+3,w
  5332     081A  1283               	bcf	3,5	;RP0=0, select bank0
  5333     081B  1303               	bcf	3,6	;RP1=0, select bank0
  5334     081C  00B8               	movwf	?___flsub+3
  5335     081D  0872               	movf	?___fladd+2,w
  5336     081E  00B7               	movwf	?___flsub+2
  5337     081F  0871               	movf	?___fladd+1,w
  5338     0820  00B6               	movwf	?___flsub+1
  5339     0821  0870               	movf	?___fladd,w
  5340     0822  00B5               	movwf	?___flsub
  5341     0823                     l696:
  5342     0823  0008               	return
  5343     0824                     __end_of___flsub:
  5344                           
  5345                           	psect	text17
  5346     1A1F                     __ptext17:	
  5347 ;; *************** function ___flneg *****************
  5348 ;; Defined at:
  5349 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  f1              4    0[COMMON] int 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  4    0[COMMON] int 
  5356 ;; Registers used:
  5357 ;;		wreg
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5363 ;;      Params:         4       0       0       0       0
  5364 ;;      Locals:         0       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0
  5366 ;;      Totals:         4       0       0       0       0
  5367 ;;Total ram usage:        4 bytes
  5368 ;; Hardware stack levels used: 1
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_efgtoa
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376     1A1F                     ___flneg:	
  5377                           ;psect for function ___flneg
  5378                           
  5379     1A1F                     l2644:	
  5380                           ;incstack = 0
  5381                           ; Regs used in ___flneg: [wreg]
  5382                           
  5383     1A1F  0873               	movf	___flneg@f1+3,w
  5384     1A20  0472               	iorwf	___flneg@f1+2,w
  5385     1A21  0471               	iorwf	___flneg@f1+1,w
  5386     1A22  0470               	iorwf	___flneg@f1,w
  5387     1A23  1903               	skipnz
  5388     1A24  2A26               	goto	u3201
  5389     1A25  2A27               	goto	u3200
  5390     1A26                     u3201:
  5391     1A26  2A29               	goto	l2648
  5392     1A27                     u3200:
  5393     1A27                     l2646:
  5394     1A27  3080               	movlw	128
  5395     1A28  06F3               	xorwf	___flneg@f1+3,f
  5396     1A29                     l2648:
  5397     1A29                     l539:
  5398     1A29  0008               	return
  5399     1A2A                     __end_of___flneg:
  5400                           
  5401                           	psect	text18
  5402     105E                     __ptext18:	
  5403 ;; *************** function ___flge *****************
  5404 ;; Defined at:
  5405 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  ff1             4   21[BANK0 ] int 
  5408 ;;  ff2             4   25[BANK0 ] int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;		None               void
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5420 ;;      Params:         0       8       0       0       0
  5421 ;;      Locals:         0       0       0       0       0
  5422 ;;      Temps:          0       4       0       0       0
  5423 ;;      Totals:         0      12       0       0       0
  5424 ;;Total ram usage:       12 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;;		_efgtoa
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434     105E                     ___flge:	
  5435                           ;psect for function ___flge
  5436                           
  5437     105E                     l2624:	
  5438                           ;incstack = 0
  5439                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5440                           
  5441     105E  3000               	movlw	0
  5442     105F  1283               	bcf	3,5	;RP0=0, select bank0
  5443     1060  1303               	bcf	3,6	;RP1=0, select bank0
  5444     1061  0535               	andwf	___flge@ff1,w
  5445     1062  00BD               	movwf	??___flge
  5446     1063  3000               	movlw	0
  5447     1064  0536               	andwf	___flge@ff1+1,w
  5448     1065  00BE               	movwf	??___flge+1
  5449     1066  3080               	movlw	128
  5450     1067  0537               	andwf	___flge@ff1+2,w
  5451     1068  00BF               	movwf	??___flge+2
  5452     1069  307F               	movlw	127
  5453     106A  0538               	andwf	___flge@ff1+3,w
  5454     106B  00C0               	movwf	??___flge+3
  5455     106C  0840               	movf	??___flge+3,w
  5456     106D  043F               	iorwf	??___flge+2,w
  5457     106E  043E               	iorwf	??___flge+1,w
  5458     106F  043D               	iorwf	??___flge,w
  5459     1070  1D03               	skipz
  5460     1071  2873               	goto	u3131
  5461     1072  2874               	goto	u3130
  5462     1073                     u3131:
  5463     1073  287C               	goto	l527
  5464     1074                     u3130:
  5465     1074                     l2626:
  5466     1074  3000               	movlw	0
  5467     1075  00B8               	movwf	___flge@ff1+3
  5468     1076  3000               	movlw	0
  5469     1077  00B7               	movwf	___flge@ff1+2
  5470     1078  3000               	movlw	0
  5471     1079  00B6               	movwf	___flge@ff1+1
  5472     107A  3000               	movlw	0
  5473     107B  00B5               	movwf	___flge@ff1
  5474     107C                     l527:
  5475     107C  3000               	movlw	0
  5476     107D  0539               	andwf	___flge@ff2,w
  5477     107E  00BD               	movwf	??___flge
  5478     107F  3000               	movlw	0
  5479     1080  053A               	andwf	___flge@ff2+1,w
  5480     1081  00BE               	movwf	??___flge+1
  5481     1082  3080               	movlw	128
  5482     1083  053B               	andwf	___flge@ff2+2,w
  5483     1084  00BF               	movwf	??___flge+2
  5484     1085  307F               	movlw	127
  5485     1086  053C               	andwf	___flge@ff2+3,w
  5486     1087  00C0               	movwf	??___flge+3
  5487     1088  0840               	movf	??___flge+3,w
  5488     1089  043F               	iorwf	??___flge+2,w
  5489     108A  043E               	iorwf	??___flge+1,w
  5490     108B  043D               	iorwf	??___flge,w
  5491     108C  1D03               	skipz
  5492     108D  288F               	goto	u3141
  5493     108E  2890               	goto	u3140
  5494     108F                     u3141:
  5495     108F  2898               	goto	l2630
  5496     1090                     u3140:
  5497     1090                     l2628:
  5498     1090  3000               	movlw	0
  5499     1091  00BC               	movwf	___flge@ff2+3
  5500     1092  3000               	movlw	0
  5501     1093  00BB               	movwf	___flge@ff2+2
  5502     1094  3000               	movlw	0
  5503     1095  00BA               	movwf	___flge@ff2+1
  5504     1096  3000               	movlw	0
  5505     1097  00B9               	movwf	___flge@ff2
  5506     1098                     l2630:
  5507     1098  1FB8               	btfss	___flge@ff1+3,7
  5508     1099  289B               	goto	u3151
  5509     109A  289C               	goto	u3150
  5510     109B                     u3151:
  5511     109B  28C0               	goto	l2634
  5512     109C                     u3150:
  5513     109C                     l2632:
  5514     109C  3000               	movlw	0
  5515     109D  00BD               	movwf	??___flge
  5516     109E  3000               	movlw	0
  5517     109F  00BE               	movwf	??___flge+1
  5518     10A0  3000               	movlw	0
  5519     10A1  00BF               	movwf	??___flge+2
  5520     10A2  3080               	movlw	128
  5521     10A3  00C0               	movwf	??___flge+3
  5522     10A4  0835               	movf	___flge@ff1,w
  5523     10A5  02BD               	subwf	??___flge,f
  5524     10A6  0836               	movf	___flge@ff1+1,w
  5525     10A7  1C03               	skipc
  5526     10A8  0F36               	incfsz	___flge@ff1+1,w
  5527     10A9  28AB               	goto	u3161
  5528     10AA  28AC               	goto	u3162
  5529     10AB                     u3161:
  5530     10AB  02BE               	subwf	??___flge+1,f
  5531     10AC                     u3162:
  5532     10AC  0837               	movf	___flge@ff1+2,w
  5533     10AD  1C03               	skipc
  5534     10AE  0F37               	incfsz	___flge@ff1+2,w
  5535     10AF  28B1               	goto	u3163
  5536     10B0  28B2               	goto	u3164
  5537     10B1                     u3163:
  5538     10B1  02BF               	subwf	??___flge+2,f
  5539     10B2                     u3164:
  5540     10B2  0838               	movf	___flge@ff1+3,w
  5541     10B3  1C03               	skipc
  5542     10B4  0F38               	incfsz	___flge@ff1+3,w
  5543     10B5  28B7               	goto	u3165
  5544     10B6  28B8               	goto	u3166
  5545     10B7                     u3165:
  5546     10B7  02C0               	subwf	??___flge+3,f
  5547     10B8                     u3166:
  5548     10B8  0840               	movf	??___flge+3,w
  5549     10B9  00B8               	movwf	___flge@ff1+3
  5550     10BA  083F               	movf	??___flge+2,w
  5551     10BB  00B7               	movwf	___flge@ff1+2
  5552     10BC  083E               	movf	??___flge+1,w
  5553     10BD  00B6               	movwf	___flge@ff1+1
  5554     10BE  083D               	movf	??___flge,w
  5555     10BF  00B5               	movwf	___flge@ff1
  5556     10C0                     l2634:
  5557     10C0  1FBC               	btfss	___flge@ff2+3,7
  5558     10C1  28C3               	goto	u3171
  5559     10C2  28C4               	goto	u3170
  5560     10C3                     u3171:
  5561     10C3  28E8               	goto	l530
  5562     10C4                     u3170:
  5563     10C4                     l2636:
  5564     10C4  3000               	movlw	0
  5565     10C5  00BD               	movwf	??___flge
  5566     10C6  3000               	movlw	0
  5567     10C7  00BE               	movwf	??___flge+1
  5568     10C8  3000               	movlw	0
  5569     10C9  00BF               	movwf	??___flge+2
  5570     10CA  3080               	movlw	128
  5571     10CB  00C0               	movwf	??___flge+3
  5572     10CC  0839               	movf	___flge@ff2,w
  5573     10CD  02BD               	subwf	??___flge,f
  5574     10CE  083A               	movf	___flge@ff2+1,w
  5575     10CF  1C03               	skipc
  5576     10D0  0F3A               	incfsz	___flge@ff2+1,w
  5577     10D1  28D3               	goto	u3181
  5578     10D2  28D4               	goto	u3182
  5579     10D3                     u3181:
  5580     10D3  02BE               	subwf	??___flge+1,f
  5581     10D4                     u3182:
  5582     10D4  083B               	movf	___flge@ff2+2,w
  5583     10D5  1C03               	skipc
  5584     10D6  0F3B               	incfsz	___flge@ff2+2,w
  5585     10D7  28D9               	goto	u3183
  5586     10D8  28DA               	goto	u3184
  5587     10D9                     u3183:
  5588     10D9  02BF               	subwf	??___flge+2,f
  5589     10DA                     u3184:
  5590     10DA  083C               	movf	___flge@ff2+3,w
  5591     10DB  1C03               	skipc
  5592     10DC  0F3C               	incfsz	___flge@ff2+3,w
  5593     10DD  28DF               	goto	u3185
  5594     10DE  28E0               	goto	u3186
  5595     10DF                     u3185:
  5596     10DF  02C0               	subwf	??___flge+3,f
  5597     10E0                     u3186:
  5598     10E0  0840               	movf	??___flge+3,w
  5599     10E1  00BC               	movwf	___flge@ff2+3
  5600     10E2  083F               	movf	??___flge+2,w
  5601     10E3  00BB               	movwf	___flge@ff2+2
  5602     10E4  083E               	movf	??___flge+1,w
  5603     10E5  00BA               	movwf	___flge@ff2+1
  5604     10E6  083D               	movf	??___flge,w
  5605     10E7  00B9               	movwf	___flge@ff2
  5606     10E8                     l530:
  5607     10E8  3080               	movlw	128
  5608     10E9  06B8               	xorwf	___flge@ff1+3,f
  5609     10EA  3080               	movlw	128
  5610     10EB  06BC               	xorwf	___flge@ff2+3,f
  5611     10EC  083C               	movf	___flge@ff2+3,w
  5612     10ED  0238               	subwf	___flge@ff1+3,w
  5613     10EE  1D03               	skipz
  5614     10EF  28FA               	goto	u3195
  5615     10F0  083B               	movf	___flge@ff2+2,w
  5616     10F1  0237               	subwf	___flge@ff1+2,w
  5617     10F2  1D03               	skipz
  5618     10F3  28FA               	goto	u3195
  5619     10F4  083A               	movf	___flge@ff2+1,w
  5620     10F5  0236               	subwf	___flge@ff1+1,w
  5621     10F6  1D03               	skipz
  5622     10F7  28FA               	goto	u3195
  5623     10F8  0839               	movf	___flge@ff2,w
  5624     10F9  0235               	subwf	___flge@ff1,w
  5625     10FA                     u3195:
  5626     10FA  1803               	skipnc
  5627     10FB  28FD               	goto	u3191
  5628     10FC  28FE               	goto	u3190
  5629     10FD                     u3191:
  5630     10FD  2900               	goto	l2640
  5631     10FE                     u3190:
  5632     10FE                     l2638:
  5633     10FE  1003               	clrc
  5634     10FF  2901               	goto	l535
  5635     1100                     l2640:
  5636     1100  1403               	setc
  5637     1101                     l535:
  5638     1101  0008               	return
  5639     1102                     __end_of___flge:
  5640                           
  5641                           	psect	text19
  5642     1DD7                     __ptext19:	
  5643 ;; *************** function ___fleq *****************
  5644 ;; Defined at:
  5645 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  ff1             4    0[COMMON] int 
  5648 ;;  ff2             4    4[COMMON] int 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;		None               void
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5660 ;;      Params:         8       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0
  5662 ;;      Temps:          4       0       0       0       0
  5663 ;;      Totals:        12       0       0       0       0
  5664 ;;Total ram usage:       12 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_efgtoa
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673     1DD7                     ___fleq:	
  5674                           ;psect for function ___fleq
  5675                           
  5676     1DD7                     l2612:	
  5677                           ;incstack = 0
  5678                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5679                           
  5680     1DD7  3000               	movlw	0
  5681     1DD8  0570               	andwf	___fleq@ff1,w
  5682     1DD9  00F8               	movwf	??___fleq
  5683     1DDA  3000               	movlw	0
  5684     1DDB  0571               	andwf	___fleq@ff1+1,w
  5685     1DDC  00F9               	movwf	??___fleq+1
  5686     1DDD  3080               	movlw	128
  5687     1DDE  0572               	andwf	___fleq@ff1+2,w
  5688     1DDF  00FA               	movwf	??___fleq+2
  5689     1DE0  307F               	movlw	127
  5690     1DE1  0573               	andwf	___fleq@ff1+3,w
  5691     1DE2  00FB               	movwf	??___fleq+3
  5692     1DE3  087B               	movf	??___fleq+3,w
  5693     1DE4  047A               	iorwf	??___fleq+2,w
  5694     1DE5  0479               	iorwf	??___fleq+1,w
  5695     1DE6  0478               	iorwf	??___fleq,w
  5696     1DE7  1D03               	skipz
  5697     1DE8  2DEA               	goto	u3101
  5698     1DE9  2DEB               	goto	u3100
  5699     1DEA                     u3101:
  5700     1DEA  2DF3               	goto	l518
  5701     1DEB                     u3100:
  5702     1DEB                     l2614:
  5703     1DEB  3000               	movlw	0
  5704     1DEC  00F3               	movwf	___fleq@ff1+3
  5705     1DED  3000               	movlw	0
  5706     1DEE  00F2               	movwf	___fleq@ff1+2
  5707     1DEF  3000               	movlw	0
  5708     1DF0  00F1               	movwf	___fleq@ff1+1
  5709     1DF1  3000               	movlw	0
  5710     1DF2  00F0               	movwf	___fleq@ff1
  5711     1DF3                     l518:
  5712     1DF3  3000               	movlw	0
  5713     1DF4  0574               	andwf	___fleq@ff2,w
  5714     1DF5  00F8               	movwf	??___fleq
  5715     1DF6  3000               	movlw	0
  5716     1DF7  0575               	andwf	___fleq@ff2+1,w
  5717     1DF8  00F9               	movwf	??___fleq+1
  5718     1DF9  3080               	movlw	128
  5719     1DFA  0576               	andwf	___fleq@ff2+2,w
  5720     1DFB  00FA               	movwf	??___fleq+2
  5721     1DFC  307F               	movlw	127
  5722     1DFD  0577               	andwf	___fleq@ff2+3,w
  5723     1DFE  00FB               	movwf	??___fleq+3
  5724     1DFF  087B               	movf	??___fleq+3,w
  5725     1E00  047A               	iorwf	??___fleq+2,w
  5726     1E01  0479               	iorwf	??___fleq+1,w
  5727     1E02  0478               	iorwf	??___fleq,w
  5728     1E03  1D03               	skipz
  5729     1E04  2E06               	goto	u3111
  5730     1E05  2E07               	goto	u3110
  5731     1E06                     u3111:
  5732     1E06  2E0F               	goto	l519
  5733     1E07                     u3110:
  5734     1E07                     l2616:
  5735     1E07  3000               	movlw	0
  5736     1E08  00F7               	movwf	___fleq@ff2+3
  5737     1E09  3000               	movlw	0
  5738     1E0A  00F6               	movwf	___fleq@ff2+2
  5739     1E0B  3000               	movlw	0
  5740     1E0C  00F5               	movwf	___fleq@ff2+1
  5741     1E0D  3000               	movlw	0
  5742     1E0E  00F4               	movwf	___fleq@ff2
  5743     1E0F                     l519:
  5744     1E0F  0877               	movf	___fleq@ff2+3,w
  5745     1E10  0673               	xorwf	___fleq@ff1+3,w
  5746     1E11  1D03               	skipz
  5747     1E12  2E1D               	goto	u3125
  5748     1E13  0876               	movf	___fleq@ff2+2,w
  5749     1E14  0672               	xorwf	___fleq@ff1+2,w
  5750     1E15  1D03               	skipz
  5751     1E16  2E1D               	goto	u3125
  5752     1E17  0875               	movf	___fleq@ff2+1,w
  5753     1E18  0671               	xorwf	___fleq@ff1+1,w
  5754     1E19  1D03               	skipz
  5755     1E1A  2E1D               	goto	u3125
  5756     1E1B  0874               	movf	___fleq@ff2,w
  5757     1E1C  0670               	xorwf	___fleq@ff1,w
  5758     1E1D                     u3125:
  5759     1E1D  1903               	skipnz
  5760     1E1E  2E20               	goto	u3121
  5761     1E1F  2E21               	goto	u3120
  5762     1E20                     u3121:
  5763     1E20  2E23               	goto	l2620
  5764     1E21                     u3120:
  5765     1E21                     l2618:
  5766     1E21  1003               	clrc
  5767     1E22  2E24               	goto	l524
  5768     1E23                     l2620:
  5769     1E23  1403               	setc
  5770     1E24                     l524:
  5771     1E24  0008               	return
  5772     1E25                     __end_of___fleq:
  5773                           
  5774                           	psect	text20
  5775     13D4                     __ptext20:	
  5776 ;; *************** function ___fldiv *****************
  5777 ;; Defined at:
  5778 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  a               4    0[COMMON] int 
  5781 ;;  b               4    4[COMMON] int 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  grs             4    7[BANK0 ] unsigned long 
  5784 ;;  rem             4    0[BANK0 ] unsigned long 
  5785 ;;  new_exp         2    5[BANK0 ] short 
  5786 ;;  aexp            1   12[BANK0 ] unsigned char 
  5787 ;;  bexp            1   11[BANK0 ] unsigned char 
  5788 ;;  sign            1    4[BANK0 ] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4    0[COMMON] unsigned char 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0, btemp+1
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5798 ;;      Params:         8       0       0       0       0
  5799 ;;      Locals:         0      13       0       0       0
  5800 ;;      Temps:          5       0       0       0       0
  5801 ;;      Totals:        13      13       0       0       0
  5802 ;;Total ram usage:       26 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_efgtoa
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811     13D4                     ___fldiv:	
  5812                           ;psect for function ___fldiv
  5813                           
  5814     13D4                     l2694:	
  5815                           ;incstack = 0
  5816                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5817                           
  5818     13D4  0877               	movf	___fldiv@b+3,w
  5819     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  5820     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  5821     13D7  00A4               	movwf	___fldiv@sign
  5822     13D8                     l2696:
  5823     13D8  3080               	movlw	128
  5824     13D9  05A4               	andwf	___fldiv@sign,f
  5825     13DA                     l2698:
  5826     13DA  0877               	movf	___fldiv@b+3,w
  5827     13DB  00F8               	movwf	??___fldiv
  5828     13DC  0778               	addwf	??___fldiv,w
  5829     13DD  00AB               	movwf	___fldiv@bexp
  5830     13DE                     l2700:
  5831     13DE  1FF6               	btfss	___fldiv@b+2,7
  5832     13DF  2BE1               	goto	u3311
  5833     13E0  2BE2               	goto	u3310
  5834     13E1                     u3311:
  5835     13E1  2BE3               	goto	l2704
  5836     13E2                     u3310:
  5837     13E2                     l2702:
  5838     13E2  142B               	bsf	___fldiv@bexp,0
  5839     13E3                     l2704:
  5840     13E3  082B               	movf	___fldiv@bexp,w
  5841     13E4  1903               	btfsc	3,2
  5842     13E5  2BE7               	goto	u3321
  5843     13E6  2BE8               	goto	u3320
  5844     13E7                     u3321:
  5845     13E7  2BF8               	goto	l2714
  5846     13E8                     u3320:
  5847     13E8                     l2706:
  5848     13E8  0A2B               	incf	___fldiv@bexp,w
  5849     13E9  1D03               	btfss	3,2
  5850     13EA  2BEC               	goto	u3331
  5851     13EB  2BED               	goto	u3330
  5852     13EC                     u3331:
  5853     13EC  2BF5               	goto	l2710
  5854     13ED                     u3330:
  5855     13ED                     l2708:
  5856     13ED  3000               	movlw	0
  5857     13EE  00F7               	movwf	___fldiv@b+3
  5858     13EF  3000               	movlw	0
  5859     13F0  00F6               	movwf	___fldiv@b+2
  5860     13F1  3000               	movlw	0
  5861     13F2  00F5               	movwf	___fldiv@b+1
  5862     13F3  3000               	movlw	0
  5863     13F4  00F4               	movwf	___fldiv@b
  5864     13F5                     l2710:
  5865     13F5  17F6               	bsf	___fldiv@b+2,7
  5866     13F6                     l2712:
  5867     13F6  01F7               	clrf	___fldiv@b+3
  5868     13F7  2C00               	goto	l2716
  5869     13F8                     l2714:
  5870     13F8  3000               	movlw	0
  5871     13F9  00F7               	movwf	___fldiv@b+3
  5872     13FA  3000               	movlw	0
  5873     13FB  00F6               	movwf	___fldiv@b+2
  5874     13FC  3000               	movlw	0
  5875     13FD  00F5               	movwf	___fldiv@b+1
  5876     13FE  3000               	movlw	0
  5877     13FF  00F4               	movwf	___fldiv@b
  5878     1400                     l2716:
  5879     1400  0873               	movf	___fldiv@a+3,w
  5880     1401  3980               	andlw	128
  5881     1402  06A4               	xorwf	___fldiv@sign,f
  5882     1403                     l2718:
  5883     1403  0873               	movf	___fldiv@a+3,w
  5884     1404  00F8               	movwf	??___fldiv
  5885     1405  0778               	addwf	??___fldiv,w
  5886     1406  00AC               	movwf	___fldiv@aexp
  5887     1407                     l2720:
  5888     1407  1FF2               	btfss	___fldiv@a+2,7
  5889     1408  2C0A               	goto	u3341
  5890     1409  2C0B               	goto	u3340
  5891     140A                     u3341:
  5892     140A  2C0C               	goto	l2724
  5893     140B                     u3340:
  5894     140B                     l2722:
  5895     140B  142C               	bsf	___fldiv@aexp,0
  5896     140C                     l2724:
  5897     140C  082C               	movf	___fldiv@aexp,w
  5898     140D  1903               	btfsc	3,2
  5899     140E  2C10               	goto	u3351
  5900     140F  2C11               	goto	u3350
  5901     1410                     u3351:
  5902     1410  2C21               	goto	l2734
  5903     1411                     u3350:
  5904     1411                     l2726:
  5905     1411  0A2C               	incf	___fldiv@aexp,w
  5906     1412  1D03               	btfss	3,2
  5907     1413  2C15               	goto	u3361
  5908     1414  2C16               	goto	u3360
  5909     1415                     u3361:
  5910     1415  2C1E               	goto	l2730
  5911     1416                     u3360:
  5912     1416                     l2728:
  5913     1416  3000               	movlw	0
  5914     1417  00F3               	movwf	___fldiv@a+3
  5915     1418  3000               	movlw	0
  5916     1419  00F2               	movwf	___fldiv@a+2
  5917     141A  3000               	movlw	0
  5918     141B  00F1               	movwf	___fldiv@a+1
  5919     141C  3000               	movlw	0
  5920     141D  00F0               	movwf	___fldiv@a
  5921     141E                     l2730:
  5922     141E  17F2               	bsf	___fldiv@a+2,7
  5923     141F                     l2732:
  5924     141F  01F3               	clrf	___fldiv@a+3
  5925     1420  2C29               	goto	l706
  5926     1421                     l2734:
  5927     1421  3000               	movlw	0
  5928     1422  00F3               	movwf	___fldiv@a+3
  5929     1423  3000               	movlw	0
  5930     1424  00F2               	movwf	___fldiv@a+2
  5931     1425  3000               	movlw	0
  5932     1426  00F1               	movwf	___fldiv@a+1
  5933     1427  3000               	movlw	0
  5934     1428  00F0               	movwf	___fldiv@a
  5935     1429                     l706:
  5936     1429  0873               	movf	___fldiv@a+3,w
  5937     142A  0472               	iorwf	___fldiv@a+2,w
  5938     142B  0471               	iorwf	___fldiv@a+1,w
  5939     142C  0470               	iorwf	___fldiv@a,w
  5940     142D  1D03               	skipz
  5941     142E  2C30               	goto	u3371
  5942     142F  2C31               	goto	u3370
  5943     1430                     u3371:
  5944     1430  2C48               	goto	l2744
  5945     1431                     u3370:
  5946     1431                     l2736:
  5947     1431  3000               	movlw	0
  5948     1432  00F7               	movwf	___fldiv@b+3
  5949     1433  3000               	movlw	0
  5950     1434  00F6               	movwf	___fldiv@b+2
  5951     1435  3000               	movlw	0
  5952     1436  00F5               	movwf	___fldiv@b+1
  5953     1437  3000               	movlw	0
  5954     1438  00F4               	movwf	___fldiv@b
  5955     1439  3080               	movlw	128
  5956     143A  04F6               	iorwf	___fldiv@b+2,f
  5957     143B  307F               	movlw	127
  5958     143C  04F7               	iorwf	___fldiv@b+3,f
  5959     143D                     l2738:
  5960     143D  0824               	movf	___fldiv@sign,w
  5961     143E  04F7               	iorwf	___fldiv@b+3,f
  5962     143F                     l2740:
  5963     143F  0877               	movf	___fldiv@b+3,w
  5964     1440  00F3               	movwf	?___fldiv+3
  5965     1441  0876               	movf	___fldiv@b+2,w
  5966     1442  00F2               	movwf	?___fldiv+2
  5967     1443  0875               	movf	___fldiv@b+1,w
  5968     1444  00F1               	movwf	?___fldiv+1
  5969     1445  0874               	movf	___fldiv@b,w
  5970     1446  00F0               	movwf	?___fldiv
  5971     1447  2DA3               	goto	l708
  5972     1448                     l2744:
  5973     1448  082B               	movf	___fldiv@bexp,w
  5974     1449  1D03               	btfss	3,2
  5975     144A  2C4C               	goto	u3381
  5976     144B  2C4D               	goto	u3380
  5977     144C                     u3381:
  5978     144C  2C56               	goto	l2750
  5979     144D                     u3380:
  5980     144D                     l2746:
  5981     144D  3000               	movlw	0
  5982     144E  00F3               	movwf	?___fldiv+3
  5983     144F  3000               	movlw	0
  5984     1450  00F2               	movwf	?___fldiv+2
  5985     1451  3000               	movlw	0
  5986     1452  00F1               	movwf	?___fldiv+1
  5987     1453  3000               	movlw	0
  5988     1454  00F0               	movwf	?___fldiv
  5989     1455  2DA3               	goto	l708
  5990     1456                     l2750:
  5991     1456  082B               	movf	___fldiv@bexp,w
  5992     1457  00F8               	movwf	??___fldiv
  5993     1458  01F9               	clrf	??___fldiv+1
  5994     1459  0879               	movf	??___fldiv+1,w
  5995     145A  00FB               	movwf	??___fldiv+3
  5996     145B  082C               	movf	___fldiv@aexp,w
  5997     145C  0278               	subwf	??___fldiv,w
  5998     145D  00FA               	movwf	??___fldiv+2
  5999     145E  1C03               	skipc
  6000     145F  03FB               	decf	??___fldiv+3,f
  6001     1460  087A               	movf	??___fldiv+2,w
  6002     1461  3E7F               	addlw	127
  6003     1462  00A5               	movwf	___fldiv@new_exp
  6004     1463  087B               	movf	??___fldiv+3,w
  6005     1464  1803               	skipnc
  6006     1465  3E01               	addlw	1
  6007     1466  3E00               	addlw	0
  6008     1467  00A6               	movwf	___fldiv@new_exp+1
  6009     1468                     l2752:
  6010     1468  0877               	movf	___fldiv@b+3,w
  6011     1469  00A3               	movwf	___fldiv@rem+3
  6012     146A  0876               	movf	___fldiv@b+2,w
  6013     146B  00A2               	movwf	___fldiv@rem+2
  6014     146C  0875               	movf	___fldiv@b+1,w
  6015     146D  00A1               	movwf	___fldiv@rem+1
  6016     146E  0874               	movf	___fldiv@b,w
  6017     146F  00A0               	movwf	___fldiv@rem
  6018     1470                     l2754:
  6019     1470  3000               	movlw	0
  6020     1471  00F7               	movwf	___fldiv@b+3
  6021     1472  3000               	movlw	0
  6022     1473  00F6               	movwf	___fldiv@b+2
  6023     1474  3000               	movlw	0
  6024     1475  00F5               	movwf	___fldiv@b+1
  6025     1476  3000               	movlw	0
  6026     1477  00F4               	movwf	___fldiv@b
  6027     1478                     l2756:
  6028     1478  3000               	movlw	0
  6029     1479  00AA               	movwf	___fldiv@grs+3
  6030     147A  3000               	movlw	0
  6031     147B  00A9               	movwf	___fldiv@grs+2
  6032     147C  3000               	movlw	0
  6033     147D  00A8               	movwf	___fldiv@grs+1
  6034     147E  3000               	movlw	0
  6035     147F  00A7               	movwf	___fldiv@grs
  6036     1480                     l2758:
  6037     1480  01AC               	clrf	___fldiv@aexp
  6038     1481  2CD0               	goto	l2778
  6039     1482                     l2760:
  6040     1482  082C               	movf	___fldiv@aexp,w
  6041     1483  1903               	btfsc	3,2
  6042     1484  2C86               	goto	u3391
  6043     1485  2C87               	goto	u3390
  6044     1486                     u3391:
  6045     1486  2CA7               	goto	l2770
  6046     1487                     u3390:
  6047     1487                     l2762:
  6048     1487  3001               	movlw	1
  6049     1488  00F8               	movwf	??___fldiv
  6050     1489                     u3405:
  6051     1489  1003               	clrc
  6052     148A  0DA0               	rlf	___fldiv@rem,f
  6053     148B  0DA1               	rlf	___fldiv@rem+1,f
  6054     148C  0DA2               	rlf	___fldiv@rem+2,f
  6055     148D  0DA3               	rlf	___fldiv@rem+3,f
  6056     148E  0BF8               	decfsz	??___fldiv,f
  6057     148F  2C89               	goto	u3405
  6058     1490  3001               	movlw	1
  6059     1491  00F8               	movwf	??___fldiv
  6060     1492                     u3415:
  6061     1492  1003               	clrc
  6062     1493  0DF4               	rlf	___fldiv@b,f
  6063     1494  0DF5               	rlf	___fldiv@b+1,f
  6064     1495  0DF6               	rlf	___fldiv@b+2,f
  6065     1496  0DF7               	rlf	___fldiv@b+3,f
  6066     1497  0BF8               	decfsz	??___fldiv,f
  6067     1498  2C92               	goto	u3415
  6068     1499                     l2764:
  6069     1499  1FAA               	btfss	___fldiv@grs+3,7
  6070     149A  2C9C               	goto	u3421
  6071     149B  2C9D               	goto	u3420
  6072     149C                     u3421:
  6073     149C  2C9E               	goto	l2768
  6074     149D                     u3420:
  6075     149D                     l2766:
  6076     149D  1474               	bsf	___fldiv@b,0
  6077     149E                     l2768:
  6078     149E  3001               	movlw	1
  6079     149F  00F8               	movwf	??___fldiv
  6080     14A0                     u3435:
  6081     14A0  1003               	clrc
  6082     14A1  0DA7               	rlf	___fldiv@grs,f
  6083     14A2  0DA8               	rlf	___fldiv@grs+1,f
  6084     14A3  0DA9               	rlf	___fldiv@grs+2,f
  6085     14A4  0DAA               	rlf	___fldiv@grs+3,f
  6086     14A5  0BF8               	decfsz	??___fldiv,f
  6087     14A6  2CA0               	goto	u3435
  6088     14A7                     l2770:
  6089     14A7  0873               	movf	___fldiv@a+3,w
  6090     14A8  0223               	subwf	___fldiv@rem+3,w
  6091     14A9  1D03               	skipz
  6092     14AA  2CB5               	goto	u3445
  6093     14AB  0872               	movf	___fldiv@a+2,w
  6094     14AC  0222               	subwf	___fldiv@rem+2,w
  6095     14AD  1D03               	skipz
  6096     14AE  2CB5               	goto	u3445
  6097     14AF  0871               	movf	___fldiv@a+1,w
  6098     14B0  0221               	subwf	___fldiv@rem+1,w
  6099     14B1  1D03               	skipz
  6100     14B2  2CB5               	goto	u3445
  6101     14B3  0870               	movf	___fldiv@a,w
  6102     14B4  0220               	subwf	___fldiv@rem,w
  6103     14B5                     u3445:
  6104     14B5  1C03               	skipc
  6105     14B6  2CB8               	goto	u3441
  6106     14B7  2CB9               	goto	u3440
  6107     14B8                     u3441:
  6108     14B8  2CCE               	goto	l2776
  6109     14B9                     u3440:
  6110     14B9                     l2772:
  6111     14B9  172A               	bsf	___fldiv@grs+3,6
  6112     14BA                     l2774:
  6113     14BA  0870               	movf	___fldiv@a,w
  6114     14BB  02A0               	subwf	___fldiv@rem,f
  6115     14BC  0871               	movf	___fldiv@a+1,w
  6116     14BD  1C03               	skipc
  6117     14BE  0F71               	incfsz	___fldiv@a+1,w
  6118     14BF  2CC1               	goto	u3455
  6119     14C0  2CC2               	goto	u3456
  6120     14C1                     u3455:
  6121     14C1  02A1               	subwf	___fldiv@rem+1,f
  6122     14C2                     u3456:
  6123     14C2  0872               	movf	___fldiv@a+2,w
  6124     14C3  1C03               	skipc
  6125     14C4  0F72               	incfsz	___fldiv@a+2,w
  6126     14C5  2CC7               	goto	u3457
  6127     14C6  2CC8               	goto	u3458
  6128     14C7                     u3457:
  6129     14C7  02A2               	subwf	___fldiv@rem+2,f
  6130     14C8                     u3458:
  6131     14C8  0873               	movf	___fldiv@a+3,w
  6132     14C9  1C03               	skipc
  6133     14CA  0F73               	incfsz	___fldiv@a+3,w
  6134     14CB  2CCD               	goto	u3459
  6135     14CC  2CCE               	goto	u3450
  6136     14CD                     u3459:
  6137     14CD  02A3               	subwf	___fldiv@rem+3,f
  6138     14CE                     u3450:
  6139     14CE                     l2776:
  6140     14CE  3001               	movlw	1
  6141     14CF  07AC               	addwf	___fldiv@aexp,f
  6142     14D0                     l2778:
  6143     14D0  301A               	movlw	26
  6144     14D1  022C               	subwf	___fldiv@aexp,w
  6145     14D2  1C03               	skipc
  6146     14D3  2CD5               	goto	u3461
  6147     14D4  2CD6               	goto	u3460
  6148     14D5                     u3461:
  6149     14D5  2C82               	goto	l2760
  6150     14D6                     u3460:
  6151     14D6                     l2780:
  6152     14D6  0823               	movf	___fldiv@rem+3,w
  6153     14D7  0422               	iorwf	___fldiv@rem+2,w
  6154     14D8  0421               	iorwf	___fldiv@rem+1,w
  6155     14D9  0420               	iorwf	___fldiv@rem,w
  6156     14DA  1903               	skipnz
  6157     14DB  2CDD               	goto	u3471
  6158     14DC  2CDE               	goto	u3470
  6159     14DD                     u3471:
  6160     14DD  2CFD               	goto	l2794
  6161     14DE                     u3470:
  6162     14DE                     l2782:
  6163     14DE  1427               	bsf	___fldiv@grs,0
  6164     14DF  2CFD               	goto	l2794
  6165     14E0                     l2784:
  6166     14E0  3001               	movlw	1
  6167     14E1  00F8               	movwf	??___fldiv
  6168     14E2                     u3485:
  6169     14E2  1003               	clrc
  6170     14E3  0DF4               	rlf	___fldiv@b,f
  6171     14E4  0DF5               	rlf	___fldiv@b+1,f
  6172     14E5  0DF6               	rlf	___fldiv@b+2,f
  6173     14E6  0DF7               	rlf	___fldiv@b+3,f
  6174     14E7  0BF8               	decfsz	??___fldiv,f
  6175     14E8  2CE2               	goto	u3485
  6176     14E9                     l2786:
  6177     14E9  1FAA               	btfss	___fldiv@grs+3,7
  6178     14EA  2CEC               	goto	u3491
  6179     14EB  2CED               	goto	u3490
  6180     14EC                     u3491:
  6181     14EC  2CEE               	goto	l2790
  6182     14ED                     u3490:
  6183     14ED                     l2788:
  6184     14ED  1474               	bsf	___fldiv@b,0
  6185     14EE                     l2790:
  6186     14EE  3001               	movlw	1
  6187     14EF  00F8               	movwf	??___fldiv
  6188     14F0                     u3505:
  6189     14F0  1003               	clrc
  6190     14F1  0DA7               	rlf	___fldiv@grs,f
  6191     14F2  0DA8               	rlf	___fldiv@grs+1,f
  6192     14F3  0DA9               	rlf	___fldiv@grs+2,f
  6193     14F4  0DAA               	rlf	___fldiv@grs+3,f
  6194     14F5  0BF8               	decfsz	??___fldiv,f
  6195     14F6  2CF0               	goto	u3505
  6196     14F7                     l2792:
  6197     14F7  30FF               	movlw	255
  6198     14F8  07A5               	addwf	___fldiv@new_exp,f
  6199     14F9  1803               	skipnc
  6200     14FA  0AA6               	incf	___fldiv@new_exp+1,f
  6201     14FB  30FF               	movlw	255
  6202     14FC  07A6               	addwf	___fldiv@new_exp+1,f
  6203     14FD                     l2794:
  6204     14FD  1FF6               	btfss	___fldiv@b+2,7
  6205     14FE  2D00               	goto	u3511
  6206     14FF  2D01               	goto	u3510
  6207     1500                     u3511:
  6208     1500  2CE0               	goto	l2784
  6209     1501                     u3510:
  6210     1501                     l2796:
  6211     1501  01AC               	clrf	___fldiv@aexp
  6212     1502                     l2798:
  6213     1502  1FAA               	btfss	___fldiv@grs+3,7
  6214     1503  2D05               	goto	u3521
  6215     1504  2D06               	goto	u3520
  6216     1505                     u3521:
  6217     1505  2D22               	goto	l2806
  6218     1506                     u3520:
  6219     1506                     l2800:
  6220     1506  30FF               	movlw	255
  6221     1507  0527               	andwf	___fldiv@grs,w
  6222     1508  00F8               	movwf	??___fldiv
  6223     1509  30FF               	movlw	255
  6224     150A  0528               	andwf	___fldiv@grs+1,w
  6225     150B  00F9               	movwf	??___fldiv+1
  6226     150C  30FF               	movlw	255
  6227     150D  0529               	andwf	___fldiv@grs+2,w
  6228     150E  00FA               	movwf	??___fldiv+2
  6229     150F  307F               	movlw	127
  6230     1510  052A               	andwf	___fldiv@grs+3,w
  6231     1511  00FB               	movwf	??___fldiv+3
  6232     1512  087B               	movf	??___fldiv+3,w
  6233     1513  047A               	iorwf	??___fldiv+2,w
  6234     1514  0479               	iorwf	??___fldiv+1,w
  6235     1515  0478               	iorwf	??___fldiv,w
  6236     1516  1903               	skipnz
  6237     1517  2D19               	goto	u3531
  6238     1518  2D1A               	goto	u3530
  6239     1519                     u3531:
  6240     1519  2D1D               	goto	l722
  6241     151A                     u3530:
  6242     151A                     l2802:
  6243     151A  3001               	movlw	1
  6244     151B  00AC               	movwf	___fldiv@aexp
  6245     151C  2D22               	goto	l2806
  6246     151D                     l722:
  6247     151D  1C74               	btfss	___fldiv@b,0
  6248     151E  2D20               	goto	u3541
  6249     151F  2D21               	goto	u3540
  6250     1520                     u3541:
  6251     1520  2D22               	goto	l2806
  6252     1521                     u3540:
  6253     1521  2D1A               	goto	l2802
  6254     1522                     l2806:
  6255     1522  082C               	movf	___fldiv@aexp,w
  6256     1523  1903               	btfsc	3,2
  6257     1524  2D26               	goto	u3551
  6258     1525  2D27               	goto	u3550
  6259     1526                     u3551:
  6260     1526  2D58               	goto	l2816
  6261     1527                     u3550:
  6262     1527                     l2808:
  6263     1527  3001               	movlw	1
  6264     1528  07F4               	addwf	___fldiv@b,f
  6265     1529  3000               	movlw	0
  6266     152A  1803               	skipnc
  6267     152B  3001               	movlw	1
  6268     152C  07F5               	addwf	___fldiv@b+1,f
  6269     152D  3000               	movlw	0
  6270     152E  1803               	skipnc
  6271     152F  3001               	movlw	1
  6272     1530  07F6               	addwf	___fldiv@b+2,f
  6273     1531  3000               	movlw	0
  6274     1532  1803               	skipnc
  6275     1533  3001               	movlw	1
  6276     1534  07F7               	addwf	___fldiv@b+3,f
  6277     1535                     l2810:
  6278     1535  1C77               	btfss	___fldiv@b+3,0
  6279     1536  2D38               	goto	u3561
  6280     1537  2D39               	goto	u3560
  6281     1538                     u3561:
  6282     1538  2D58               	goto	l2816
  6283     1539                     u3560:
  6284     1539                     l2812:
  6285     1539  0874               	movf	___fldiv@b,w
  6286     153A  00F8               	movwf	??___fldiv
  6287     153B  0875               	movf	___fldiv@b+1,w
  6288     153C  00F9               	movwf	??___fldiv+1
  6289     153D  0876               	movf	___fldiv@b+2,w
  6290     153E  00FA               	movwf	??___fldiv+2
  6291     153F  0877               	movf	___fldiv@b+3,w
  6292     1540  00FB               	movwf	??___fldiv+3
  6293     1541  3001               	movlw	1
  6294     1542  00FC               	movwf	??___fldiv+4
  6295     1543                     u3575:
  6296     1543  0D7B               	rlf	??___fldiv+3,w
  6297     1544  0CFB               	rrf	??___fldiv+3,f
  6298     1545  0CFA               	rrf	??___fldiv+2,f
  6299     1546  0CF9               	rrf	??___fldiv+1,f
  6300     1547  0CF8               	rrf	??___fldiv,f
  6301     1548                     u3570:
  6302     1548  0BFC               	decfsz	??___fldiv+4,f
  6303     1549  2D43               	goto	u3575
  6304     154A  087B               	movf	??___fldiv+3,w
  6305     154B  00F7               	movwf	___fldiv@b+3
  6306     154C  087A               	movf	??___fldiv+2,w
  6307     154D  00F6               	movwf	___fldiv@b+2
  6308     154E  0879               	movf	??___fldiv+1,w
  6309     154F  00F5               	movwf	___fldiv@b+1
  6310     1550  0878               	movf	??___fldiv,w
  6311     1551  00F4               	movwf	___fldiv@b
  6312     1552                     l2814:
  6313     1552  3001               	movlw	1
  6314     1553  07A5               	addwf	___fldiv@new_exp,f
  6315     1554  1803               	skipnc
  6316     1555  0AA6               	incf	___fldiv@new_exp+1,f
  6317     1556  3000               	movlw	0
  6318     1557  07A6               	addwf	___fldiv@new_exp+1,f
  6319     1558                     l2816:
  6320     1558  0826               	movf	___fldiv@new_exp+1,w
  6321     1559  3A80               	xorlw	128
  6322     155A  00FF               	movwf	btemp+1
  6323     155B  3080               	movlw	128
  6324     155C  027F               	subwf	btemp+1,w
  6325     155D  1D03               	skipz
  6326     155E  2D61               	goto	u3585
  6327     155F  30FF               	movlw	255
  6328     1560  0225               	subwf	___fldiv@new_exp,w
  6329     1561                     u3585:
  6330     1561  1C03               	skipc
  6331     1562  2D64               	goto	u3581
  6332     1563  2D65               	goto	u3580
  6333     1564                     u3581:
  6334     1564  2D73               	goto	l2820
  6335     1565                     u3580:
  6336     1565                     l2818:
  6337     1565  30FF               	movlw	255
  6338     1566  1283               	bcf	3,5	;RP0=0, select bank0
  6339     1567  1303               	bcf	3,6	;RP1=0, select bank0
  6340     1568  00A5               	movwf	___fldiv@new_exp
  6341     1569  3000               	movlw	0
  6342     156A  00A6               	movwf	___fldiv@new_exp+1
  6343     156B  3000               	movlw	0
  6344     156C  00F7               	movwf	___fldiv@b+3
  6345     156D  3000               	movlw	0
  6346     156E  00F6               	movwf	___fldiv@b+2
  6347     156F  3000               	movlw	0
  6348     1570  00F5               	movwf	___fldiv@b+1
  6349     1571  3000               	movlw	0
  6350     1572  00F4               	movwf	___fldiv@b
  6351     1573                     l2820:
  6352     1573  1283               	bcf	3,5	;RP0=0, select bank0
  6353     1574  1303               	bcf	3,6	;RP1=0, select bank0
  6354     1575  0826               	movf	___fldiv@new_exp+1,w
  6355     1576  3A80               	xorlw	128
  6356     1577  00FF               	movwf	btemp+1
  6357     1578  3080               	movlw	128
  6358     1579  027F               	subwf	btemp+1,w
  6359     157A  1D03               	skipz
  6360     157B  2D7E               	goto	u3595
  6361     157C  3001               	movlw	1
  6362     157D  0225               	subwf	___fldiv@new_exp,w
  6363     157E                     u3595:
  6364     157E  1803               	skipnc
  6365     157F  2D81               	goto	u3591
  6366     1580  2D82               	goto	u3590
  6367     1581                     u3591:
  6368     1581  2D8F               	goto	l728
  6369     1582                     u3590:
  6370     1582                     l2822:
  6371     1582  1283               	bcf	3,5	;RP0=0, select bank0
  6372     1583  1303               	bcf	3,6	;RP1=0, select bank0
  6373     1584  01A5               	clrf	___fldiv@new_exp
  6374     1585  01A6               	clrf	___fldiv@new_exp+1
  6375     1586                     l2824:
  6376     1586  3000               	movlw	0
  6377     1587  00F7               	movwf	___fldiv@b+3
  6378     1588  3000               	movlw	0
  6379     1589  00F6               	movwf	___fldiv@b+2
  6380     158A  3000               	movlw	0
  6381     158B  00F5               	movwf	___fldiv@b+1
  6382     158C  3000               	movlw	0
  6383     158D  00F4               	movwf	___fldiv@b
  6384     158E                     l2826:
  6385     158E  01A4               	clrf	___fldiv@sign
  6386     158F                     l728:
  6387     158F  1283               	bcf	3,5	;RP0=0, select bank0
  6388     1590  1303               	bcf	3,6	;RP1=0, select bank0
  6389     1591  0825               	movf	___fldiv@new_exp,w
  6390     1592  00AB               	movwf	___fldiv@bexp
  6391     1593                     l2828:
  6392     1593  1C2B               	btfss	___fldiv@bexp,0
  6393     1594  2D96               	goto	u3601
  6394     1595  2D97               	goto	u3600
  6395     1596                     u3601:
  6396     1596  2D99               	goto	l2832
  6397     1597                     u3600:
  6398     1597                     l2830:
  6399     1597  17F6               	bsf	___fldiv@b+2,7
  6400     1598  2D9B               	goto	l730
  6401     1599                     l2832:
  6402     1599  307F               	movlw	127
  6403     159A  05F6               	andwf	___fldiv@b+2,f
  6404     159B                     l730:
  6405     159B  082B               	movf	___fldiv@bexp,w
  6406     159C  00F8               	movwf	??___fldiv
  6407     159D  1003               	clrc
  6408     159E  0C78               	rrf	??___fldiv,w
  6409     159F  00F7               	movwf	___fldiv@b+3
  6410     15A0  0824               	movf	___fldiv@sign,w
  6411     15A1  04F7               	iorwf	___fldiv@b+3,f
  6412     15A2  2C3F               	goto	l2740
  6413     15A3                     l708:
  6414     15A3  0008               	return
  6415     15A4                     __end_of___fldiv:
  6416                           
  6417                           	psect	text21
  6418     1BB7                     __ptext21:	
  6419 ;; *************** function _UART_Write_Text *****************
  6420 ;; Defined at:
  6421 ;;		line 26 in file "uart.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  text            2    1[COMMON] PTR const unsigned char 
  6424 ;;		 -> STR_11(54), STR_9(12), STR_8(54), STR_6(14), 
  6425 ;;		 -> STR_5(50), STR_3(15), main@buffer(64), STR_1(19), 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6437 ;;      Params:         2       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0
  6440 ;;      Totals:         2       0       0       0       0
  6441 ;;Total ram usage:        2 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; Hardware stack levels required when called: 2
  6444 ;; This function calls:
  6445 ;;		_UART_Write
  6446 ;; This function is called by:
  6447 ;;		_main
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451     1BB7                     _UART_Write_Text:	
  6452                           ;psect for function _UART_Write_Text
  6453                           
  6454     1BB7                     l3502:	
  6455                           ;incstack = 0
  6456                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6457                           
  6458                           
  6459                           ;uart.c: 27:     while (*text != '\0') {
  6460     1BB7  2BCC               	goto	l3508
  6461     1BB8                     l3504:
  6462                           
  6463                           ;uart.c: 28:         UART_Write(*text++);
  6464     1BB8  0872               	movf	UART_Write_Text@text+1,w
  6465     1BB9  00FF               	movwf	btemp+1
  6466     1BBA  0871               	movf	UART_Write_Text@text,w
  6467     1BBB  0084               	movwf	4
  6468     1BBC  160A  158A  21A0  160A  158A  	fcall	stringtab
  6469     1BC1  160A  158A  226C  160A  158A  	fcall	_UART_Write
  6470     1BC6                     l3506:
  6471     1BC6  3001               	movlw	1
  6472     1BC7  07F1               	addwf	UART_Write_Text@text,f
  6473     1BC8  1803               	skipnc
  6474     1BC9  0AF2               	incf	UART_Write_Text@text+1,f
  6475     1BCA  3000               	movlw	0
  6476     1BCB  07F2               	addwf	UART_Write_Text@text+1,f
  6477     1BCC                     l3508:
  6478                           
  6479                           ;uart.c: 27:     while (*text != '\0') {
  6480     1BCC  0872               	movf	UART_Write_Text@text+1,w
  6481     1BCD  1283               	bcf	3,5	;RP0=0, select bank0
  6482     1BCE  1303               	bcf	3,6	;RP1=0, select bank0
  6483     1BCF  00FF               	movwf	btemp+1
  6484     1BD0  0871               	movf	UART_Write_Text@text,w
  6485     1BD1  0084               	movwf	4
  6486     1BD2  160A  158A  21A0  160A  158A  	fcall	stringtab
  6487     1BD7  3A00               	xorlw	0
  6488     1BD8  1D03               	skipz
  6489     1BD9  2BDB               	goto	u4851
  6490     1BDA  2BDC               	goto	u4850
  6491     1BDB                     u4851:
  6492     1BDB  2BB8               	goto	l3504
  6493     1BDC                     u4850:
  6494     1BDC                     l158:
  6495     1BDC  0008               	return
  6496     1BDD                     __end_of_UART_Write_Text:
  6497                           
  6498                           	psect	text22
  6499     1A6C                     __ptext22:	
  6500 ;; *************** function _UART_Write *****************
  6501 ;; Defined at:
  6502 ;;		line 21 in file "uart.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  data            1    wreg     unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  data            1    0[COMMON] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6516 ;;      Params:         0       0       0       0       0
  6517 ;;      Locals:         1       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0
  6519 ;;      Totals:         1       0       0       0       0
  6520 ;;Total ram usage:        1 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 1
  6523 ;; This function calls:
  6524 ;;		_UART_TX_Empty
  6525 ;; This function is called by:
  6526 ;;		_UART_Write_Text
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530     1A6C                     _UART_Write:	
  6531                           ;psect for function _UART_Write
  6532                           
  6533                           
  6534                           ;incstack = 0
  6535                           ; Regs used in _UART_Write: [wreg+pclath+cstack]
  6536                           ;UART_Write@data stored from wreg
  6537     1A6C  00F0               	movwf	UART_Write@data
  6538     1A6D                     l3472:
  6539     1A6D                     l3474:	
  6540                           ;uart.c: 22:     while (!UART_TX_Empty());
  6541                           
  6542     1A6D  160A  118A  2001  160A  158A  	fcall	_UART_TX_Empty
  6543     1A72  3A00               	xorlw	0
  6544     1A73  1903               	skipnz
  6545     1A74  2A76               	goto	u4831
  6546     1A75  2A77               	goto	u4830
  6547     1A76                     u4831:
  6548     1A76  2A6D               	goto	l3474
  6549     1A77                     u4830:
  6550     1A77                     l3476:
  6551                           
  6552                           ;uart.c: 23:     TXREG = data;
  6553     1A77  0870               	movf	UART_Write@data,w
  6554     1A78  1283               	bcf	3,5	;RP0=0, select bank0
  6555     1A79  1303               	bcf	3,6	;RP1=0, select bank0
  6556     1A7A  0099               	movwf	25	;volatile
  6557     1A7B                     l152:
  6558     1A7B  0008               	return
  6559     1A7C                     __end_of_UART_Write:
  6560                           
  6561                           	psect	text23
  6562     1001                     __ptext23:	
  6563 ;; *************** function _UART_TX_Empty *****************
  6564 ;; Defined at:
  6565 ;;		line 17 in file "uart.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      unsigned char 
  6572 ;; Registers used:
  6573 ;;		wreg
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6579 ;;      Params:         0       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0
  6582 ;;      Totals:         0       0       0       0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_UART_Write
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592     1001                     _UART_TX_Empty:	
  6593                           ;psect for function _UART_TX_Empty
  6594                           
  6595     1001                     l3382:	
  6596                           ;incstack = 0
  6597                           ; Regs used in _UART_TX_Empty: [wreg]
  6598                           
  6599                           
  6600                           ;uart.c: 18:     return TRMT;
  6601     1001  3000               	movlw	0
  6602     1002  1683               	bsf	3,5	;RP0=1, select bank1
  6603     1003  1303               	bcf	3,6	;RP1=0, select bank1
  6604     1004  1898               	btfsc	24,1	;volatile
  6605     1005  3001               	movlw	1
  6606     1006                     l146:
  6607     1006  0008               	return
  6608     1007                     __end_of_UART_TX_Empty:
  6609                           
  6610                           	psect	text24
  6611     1A7C                     __ptext24:	
  6612 ;; *************** function _UART_TX_Init *****************
  6613 ;; Defined at:
  6614 ;;		line 6 in file "uart.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      void 
  6621 ;; Registers used:
  6622 ;;		None
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         0       0       0       0       0
  6629 ;;      Locals:         0       0       0       0       0
  6630 ;;      Temps:          0       0       0       0       0
  6631 ;;      Totals:         0       0       0       0       0
  6632 ;;Total ram usage:        0 bytes
  6633 ;; Hardware stack levels used: 1
  6634 ;; This function calls:
  6635 ;;		Nothing
  6636 ;; This function is called by:
  6637 ;;		_main
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641     1A7C                     _UART_TX_Init:	
  6642                           ;psect for function _UART_TX_Init
  6643                           
  6644     1A7C                     l3500:	
  6645                           ;incstack = 0
  6646                           ; Regs used in _UART_TX_Init: []
  6647                           
  6648                           
  6649                           ;uart.c: 7:     BRGH = 1;
  6650     1A7C  1683               	bsf	3,5	;RP0=1, select bank1
  6651     1A7D  1303               	bcf	3,6	;RP1=0, select bank1
  6652     1A7E  1518               	bsf	24,2	;volatile
  6653                           
  6654                           ;uart.c: 8:     SPBRG = 51;
  6655     1A7F  3033               	movlw	51
  6656     1A80  0099               	movwf	25	;volatile
  6657                           
  6658                           ;uart.c: 9:     SYNC = 0;
  6659     1A81  1218               	bcf	24,4	;volatile
  6660                           
  6661                           ;uart.c: 10:     SPEN = 1;
  6662     1A82  1283               	bcf	3,5	;RP0=0, select bank0
  6663     1A83  1303               	bcf	3,6	;RP1=0, select bank0
  6664     1A84  1798               	bsf	24,7	;volatile
  6665                           
  6666                           ;uart.c: 11:     TRISC6 = 0;
  6667     1A85  1683               	bsf	3,5	;RP0=1, select bank1
  6668     1A86  1303               	bcf	3,6	;RP1=0, select bank1
  6669     1A87  1307               	bcf	7,6	;volatile
  6670                           
  6671                           ;uart.c: 12:     TRISC7 = 1;
  6672     1A88  1787               	bsf	7,7	;volatile
  6673                           
  6674                           ;uart.c: 13:     TXEN = 1;
  6675     1A89  1698               	bsf	24,5	;volatile
  6676                           
  6677                           ;uart.c: 14:     CREN = 1;
  6678     1A8A  1283               	bcf	3,5	;RP0=0, select bank0
  6679     1A8B  1303               	bcf	3,6	;RP1=0, select bank0
  6680     1A8C  1618               	bsf	24,4	;volatile
  6681     1A8D                     l143:
  6682     1A8D  0008               	return
  6683     1A8E                     __end_of_UART_TX_Init:
  6684                           
  6685                           	psect	text25
  6686     1D62                     __ptext25:	
  6687 ;; *************** function _LM75_setOSTripTemperature *****************
  6688 ;; Defined at:
  6689 ;;		line 196 in file "LM75.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  temperature     4   41[BANK0 ] float 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  data            2   45[BANK0 ] int 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6703 ;;      Params:         0       4       0       0       0
  6704 ;;      Locals:         0       2       0       0       0
  6705 ;;      Temps:          0       0       0       0       0
  6706 ;;      Totals:         0       6       0       0       0
  6707 ;;Total ram usage:        6 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; Hardware stack levels required when called: 3
  6710 ;; This function calls:
  6711 ;;		_LM75_set
  6712 ;;		___flmul
  6713 ;;		___fltol
  6714 ;; This function is called by:
  6715 ;;		_main
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719     1D62                     _LM75_setOSTripTemperature:	
  6720                           ;psect for function _LM75_setOSTripTemperature
  6721                           
  6722     1D62                     l3564:	
  6723                           ;incstack = 0
  6724                           ; Regs used in _LM75_setOSTripTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  6725                           
  6726                           
  6727                           ;LM75.c: 196: void LM75_setOSTripTemperature(float temperature);LM75.c: 197: {;LM75.c: 1
      +                          98:     signed int data = (signed int)(temperature * 256);
  6728     1D62  1283               	bcf	3,5	;RP0=0, select bank0
  6729     1D63  1303               	bcf	3,6	;RP1=0, select bank0
  6730     1D64  084C               	movf	LM75_setOSTripTemperature@temperature+3,w
  6731     1D65  00A7               	movwf	___flmul@a+3
  6732     1D66  084B               	movf	LM75_setOSTripTemperature@temperature+2,w
  6733     1D67  00A6               	movwf	___flmul@a+2
  6734     1D68  084A               	movf	LM75_setOSTripTemperature@temperature+1,w
  6735     1D69  00A5               	movwf	___flmul@a+1
  6736     1D6A  0849               	movf	LM75_setOSTripTemperature@temperature,w
  6737     1D6B  00A4               	movwf	___flmul@a
  6738     1D6C  3043               	movlw	67
  6739     1D6D  00A3               	movwf	___flmul@b+3
  6740     1D6E  3080               	movlw	128
  6741     1D6F  00A2               	movwf	___flmul@b+2
  6742     1D70  3000               	movlw	0
  6743     1D71  00A1               	movwf	___flmul@b+1
  6744     1D72  3000               	movlw	0
  6745     1D73  00A0               	movwf	___flmul@b
  6746     1D74  120A  158A  217B  160A  158A  	fcall	___flmul
  6747     1D79  1283               	bcf	3,5	;RP0=0, select bank0
  6748     1D7A  1303               	bcf	3,6	;RP1=0, select bank0
  6749     1D7B  0823               	movf	?___flmul+3,w
  6750     1D7C  00C2               	movwf	___fltol@f1+3
  6751     1D7D  0822               	movf	?___flmul+2,w
  6752     1D7E  00C1               	movwf	___fltol@f1+2
  6753     1D7F  0821               	movf	?___flmul+1,w
  6754     1D80  00C0               	movwf	___fltol@f1+1
  6755     1D81  0820               	movf	?___flmul,w
  6756     1D82  00BF               	movwf	___fltol@f1
  6757     1D83  160A  158A  26FD  160A  158A  	fcall	___fltol
  6758     1D88  1283               	bcf	3,5	;RP0=0, select bank0
  6759     1D89  1303               	bcf	3,6	;RP1=0, select bank0
  6760     1D8A  0840               	movf	?___fltol+1,w
  6761     1D8B  00CE               	movwf	LM75_setOSTripTemperature@data+1
  6762     1D8C  083F               	movf	?___fltol,w
  6763     1D8D  00CD               	movwf	LM75_setOSTripTemperature@data
  6764     1D8E                     l3566:
  6765                           
  6766                           ;LM75.c: 199:     LM75_set(0x03, data);
  6767     1D8E  084E               	movf	LM75_setOSTripTemperature@data+1,w
  6768     1D8F  00F2               	movwf	LM75_set@data+1
  6769     1D90  084D               	movf	LM75_setOSTripTemperature@data,w
  6770     1D91  00F1               	movwf	LM75_set@data
  6771     1D92  3003               	movlw	3
  6772     1D93  160A  158A  2348  160A  158A  	fcall	_LM75_set
  6773     1D98                     l263:
  6774     1D98  0008               	return
  6775     1D99                     __end_of_LM75_setOSTripTemperature:
  6776                           
  6777                           	psect	text26
  6778     1AD1                     __ptext26:	
  6779 ;; *************** function _LM75_setOSPolarity *****************
  6780 ;; Defined at:
  6781 ;;		line 109 in file "LM75.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  activeHigh      1    wreg     unsigned char 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  activeHigh      1    2[COMMON] unsigned char 
  6786 ;;  config          1    3[COMMON] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0, pclath, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6796 ;;      Params:         0       0       0       0       0
  6797 ;;      Locals:         2       0       0       0       0
  6798 ;;      Temps:          0       0       0       0       0
  6799 ;;      Totals:         2       0       0       0       0
  6800 ;;Total ram usage:        2 bytes
  6801 ;; Hardware stack levels used: 1
  6802 ;; Hardware stack levels required when called: 3
  6803 ;; This function calls:
  6804 ;;		_LM75_readConfig
  6805 ;;		_LM75_setConfig
  6806 ;; This function is called by:
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811     1AD1                     _LM75_setOSPolarity:	
  6812                           ;psect for function _LM75_setOSPolarity
  6813                           
  6814                           
  6815                           ;incstack = 0
  6816                           ; Regs used in _LM75_setOSPolarity: [wreg+status,2+status,0+pclath+cstack]
  6817                           ;LM75_setOSPolarity@activeHigh stored from wreg
  6818     1AD1  00F2               	movwf	LM75_setOSPolarity@activeHigh
  6819     1AD2                     l3554:
  6820                           
  6821                           ;LM75.c: 109: void LM75_setOSPolarity(char activeHigh);LM75.c: 110: {;LM75.c: 111:     c
      +                          har config = LM75_readConfig();
  6822     1AD2  160A  158A  242F  160A  158A  	fcall	_LM75_readConfig
  6823     1AD7  00F3               	movwf	LM75_setOSPolarity@config
  6824     1AD8                     l3556:
  6825                           
  6826                           ;LM75.c: 112:     if(activeHigh)
  6827     1AD8  0872               	movf	LM75_setOSPolarity@activeHigh,w
  6828     1AD9  1903               	btfsc	3,2
  6829     1ADA  2ADC               	goto	u4871
  6830     1ADB  2ADD               	goto	u4870
  6831     1ADC                     u4871:
  6832     1ADC  2ADF               	goto	l3560
  6833     1ADD                     u4870:
  6834     1ADD                     l3558:
  6835                           
  6836                           ;LM75.c: 113:         config |= 0x04;
  6837     1ADD  1573               	bsf	LM75_setOSPolarity@config,2
  6838     1ADE  2AE1               	goto	l3562
  6839     1ADF                     l3560:
  6840                           
  6841                           ;LM75.c: 115:         config &= ~0x04;
  6842     1ADF  30FB               	movlw	251
  6843     1AE0  05F3               	andwf	LM75_setOSPolarity@config,f
  6844     1AE1                     l3562:
  6845                           
  6846                           ;LM75.c: 116:     LM75_setConfig(config);
  6847     1AE1  0873               	movf	LM75_setOSPolarity@config,w
  6848     1AE2  160A  158A  22E8  160A  158A  	fcall	_LM75_setConfig
  6849     1AE7                     l227:
  6850     1AE7  0008               	return
  6851     1AE8                     __end_of_LM75_setOSPolarity:
  6852                           
  6853                           	psect	text27
  6854     1D2B                     __ptext27:	
  6855 ;; *************** function _LM75_setHysteresisTemperature *****************
  6856 ;; Defined at:
  6857 ;;		line 189 in file "LM75.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  temperature     4   41[BANK0 ] float 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  data            2   45[BANK0 ] int 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6871 ;;      Params:         0       4       0       0       0
  6872 ;;      Locals:         0       2       0       0       0
  6873 ;;      Temps:          0       0       0       0       0
  6874 ;;      Totals:         0       6       0       0       0
  6875 ;;Total ram usage:        6 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; Hardware stack levels required when called: 3
  6878 ;; This function calls:
  6879 ;;		_LM75_set
  6880 ;;		___flmul
  6881 ;;		___fltol
  6882 ;; This function is called by:
  6883 ;;		_main
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887     1D2B                     _LM75_setHysteresisTemperature:	
  6888                           ;psect for function _LM75_setHysteresisTemperature
  6889                           
  6890     1D2B                     l3568:	
  6891                           ;incstack = 0
  6892                           ; Regs used in _LM75_setHysteresisTemperature: [wreg+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  6893                           
  6894                           
  6895                           ;LM75.c: 189: void LM75_setHysteresisTemperature(float temperature);LM75.c: 190: {;LM75.
      +                          c: 191:     signed int data = (signed int)(temperature * 256);
  6896     1D2B  1283               	bcf	3,5	;RP0=0, select bank0
  6897     1D2C  1303               	bcf	3,6	;RP1=0, select bank0
  6898     1D2D  084C               	movf	LM75_setHysteresisTemperature@temperature+3,w
  6899     1D2E  00A7               	movwf	___flmul@a+3
  6900     1D2F  084B               	movf	LM75_setHysteresisTemperature@temperature+2,w
  6901     1D30  00A6               	movwf	___flmul@a+2
  6902     1D31  084A               	movf	LM75_setHysteresisTemperature@temperature+1,w
  6903     1D32  00A5               	movwf	___flmul@a+1
  6904     1D33  0849               	movf	LM75_setHysteresisTemperature@temperature,w
  6905     1D34  00A4               	movwf	___flmul@a
  6906     1D35  3043               	movlw	67
  6907     1D36  00A3               	movwf	___flmul@b+3
  6908     1D37  3080               	movlw	128
  6909     1D38  00A2               	movwf	___flmul@b+2
  6910     1D39  3000               	movlw	0
  6911     1D3A  00A1               	movwf	___flmul@b+1
  6912     1D3B  3000               	movlw	0
  6913     1D3C  00A0               	movwf	___flmul@b
  6914     1D3D  120A  158A  217B  160A  158A  	fcall	___flmul
  6915     1D42  1283               	bcf	3,5	;RP0=0, select bank0
  6916     1D43  1303               	bcf	3,6	;RP1=0, select bank0
  6917     1D44  0823               	movf	?___flmul+3,w
  6918     1D45  00C2               	movwf	___fltol@f1+3
  6919     1D46  0822               	movf	?___flmul+2,w
  6920     1D47  00C1               	movwf	___fltol@f1+2
  6921     1D48  0821               	movf	?___flmul+1,w
  6922     1D49  00C0               	movwf	___fltol@f1+1
  6923     1D4A  0820               	movf	?___flmul,w
  6924     1D4B  00BF               	movwf	___fltol@f1
  6925     1D4C  160A  158A  26FD  160A  158A  	fcall	___fltol
  6926     1D51  1283               	bcf	3,5	;RP0=0, select bank0
  6927     1D52  1303               	bcf	3,6	;RP1=0, select bank0
  6928     1D53  0840               	movf	?___fltol+1,w
  6929     1D54  00CE               	movwf	LM75_setHysteresisTemperature@data+1
  6930     1D55  083F               	movf	?___fltol,w
  6931     1D56  00CD               	movwf	LM75_setHysteresisTemperature@data
  6932     1D57                     l3570:
  6933                           
  6934                           ;LM75.c: 192:     LM75_set(0x02, data);
  6935     1D57  084E               	movf	LM75_setHysteresisTemperature@data+1,w
  6936     1D58  00F2               	movwf	LM75_set@data+1
  6937     1D59  084D               	movf	LM75_setHysteresisTemperature@data,w
  6938     1D5A  00F1               	movwf	LM75_set@data
  6939     1D5B  3002               	movlw	2
  6940     1D5C  160A  158A  2348  160A  158A  	fcall	_LM75_set
  6941     1D61                     l260:
  6942     1D61  0008               	return
  6943     1D62                     __end_of_LM75_setHysteresisTemperature:
  6944                           
  6945                           	psect	text28
  6946     097B                     __ptext28:	
  6947 ;; *************** function ___flmul *****************
  6948 ;; Defined at:
  6949 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  b               4    0[BANK0 ] void 
  6952 ;;  a               4    4[BANK0 ] void 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  prod            4   15[BANK0 ] struct .
  6955 ;;  grs             4    9[BANK0 ] unsigned long 
  6956 ;;  temp            2   19[BANK0 ] struct .
  6957 ;;  bexp            1   14[BANK0 ] unsigned char 
  6958 ;;  aexp            1   13[BANK0 ] unsigned char 
  6959 ;;  sign            1    8[BANK0 ] unsigned char 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  4    0[BANK0 ] unsigned char 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6969 ;;      Params:         0       8       0       0       0
  6970 ;;      Locals:         0      13       0       0       0
  6971 ;;      Temps:          5       0       0       0       0
  6972 ;;      Totals:         5      21       0       0       0
  6973 ;;Total ram usage:       26 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 1
  6976 ;; This function calls:
  6977 ;;		__Umul8_16
  6978 ;; This function is called by:
  6979 ;;		_LM75_setHysteresisTemperature
  6980 ;;		_LM75_setOSTripTemperature
  6981 ;;		_efgtoa
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985     097B                     ___flmul:	
  6986                           ;psect for function ___flmul
  6987                           
  6988     097B                     l2838:	
  6989                           ;incstack = 0
  6990                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6991                           
  6992     097B  1283               	bcf	3,5	;RP0=0, select bank0
  6993     097C  1303               	bcf	3,6	;RP1=0, select bank0
  6994     097D  0823               	movf	___flmul@b+3,w
  6995     097E  00A8               	movwf	___flmul@sign
  6996     097F                     l2840:
  6997     097F  3080               	movlw	128
  6998     0980  05A8               	andwf	___flmul@sign,f
  6999     0981                     l2842:
  7000     0981  0823               	movf	___flmul@b+3,w
  7001     0982  00F9               	movwf	??___flmul
  7002     0983  0779               	addwf	??___flmul,w
  7003     0984  00AE               	movwf	___flmul@bexp
  7004     0985                     l2844:
  7005     0985  1FA2               	btfss	___flmul@b+2,7
  7006     0986  2988               	goto	u3611
  7007     0987  2989               	goto	u3610
  7008     0988                     u3611:
  7009     0988  298A               	goto	l2848
  7010     0989                     u3610:
  7011     0989                     l2846:
  7012     0989  142E               	bsf	___flmul@bexp,0
  7013     098A                     l2848:
  7014     098A  082E               	movf	___flmul@bexp,w
  7015     098B  1903               	btfsc	3,2
  7016     098C  298E               	goto	u3621
  7017     098D  298F               	goto	u3620
  7018     098E                     u3621:
  7019     098E  299E               	goto	l2856
  7020     098F                     u3620:
  7021     098F                     l2850:
  7022     098F  0A2E               	incf	___flmul@bexp,w
  7023     0990  1D03               	btfss	3,2
  7024     0991  2993               	goto	u3631
  7025     0992  2994               	goto	u3630
  7026     0993                     u3631:
  7027     0993  299C               	goto	l2854
  7028     0994                     u3630:
  7029     0994                     l2852:
  7030     0994  3000               	movlw	0
  7031     0995  00A3               	movwf	___flmul@b+3
  7032     0996  3000               	movlw	0
  7033     0997  00A2               	movwf	___flmul@b+2
  7034     0998  3000               	movlw	0
  7035     0999  00A1               	movwf	___flmul@b+1
  7036     099A  3000               	movlw	0
  7037     099B  00A0               	movwf	___flmul@b
  7038     099C                     l2854:
  7039     099C  17A2               	bsf	___flmul@b+2,7
  7040     099D  29A6               	goto	l2858
  7041     099E                     l2856:
  7042     099E  3000               	movlw	0
  7043     099F  00A3               	movwf	___flmul@b+3
  7044     09A0  3000               	movlw	0
  7045     09A1  00A2               	movwf	___flmul@b+2
  7046     09A2  3000               	movlw	0
  7047     09A3  00A1               	movwf	___flmul@b+1
  7048     09A4  3000               	movlw	0
  7049     09A5  00A0               	movwf	___flmul@b
  7050     09A6                     l2858:
  7051     09A6  0827               	movf	___flmul@a+3,w
  7052     09A7  3980               	andlw	128
  7053     09A8  06A8               	xorwf	___flmul@sign,f
  7054     09A9                     l2860:
  7055     09A9  0827               	movf	___flmul@a+3,w
  7056     09AA  00F9               	movwf	??___flmul
  7057     09AB  0779               	addwf	??___flmul,w
  7058     09AC  00AD               	movwf	___flmul@aexp
  7059     09AD                     l2862:
  7060     09AD  1FA6               	btfss	___flmul@a+2,7
  7061     09AE  29B0               	goto	u3641
  7062     09AF  29B1               	goto	u3640
  7063     09B0                     u3641:
  7064     09B0  29B2               	goto	l2866
  7065     09B1                     u3640:
  7066     09B1                     l2864:
  7067     09B1  142D               	bsf	___flmul@aexp,0
  7068     09B2                     l2866:
  7069     09B2  082D               	movf	___flmul@aexp,w
  7070     09B3  1903               	btfsc	3,2
  7071     09B4  29B6               	goto	u3651
  7072     09B5  29B7               	goto	u3650
  7073     09B6                     u3651:
  7074     09B6  29C6               	goto	l2874
  7075     09B7                     u3650:
  7076     09B7                     l2868:
  7077     09B7  0A2D               	incf	___flmul@aexp,w
  7078     09B8  1D03               	btfss	3,2
  7079     09B9  29BB               	goto	u3661
  7080     09BA  29BC               	goto	u3660
  7081     09BB                     u3661:
  7082     09BB  29C4               	goto	l2872
  7083     09BC                     u3660:
  7084     09BC                     l2870:
  7085     09BC  3000               	movlw	0
  7086     09BD  00A7               	movwf	___flmul@a+3
  7087     09BE  3000               	movlw	0
  7088     09BF  00A6               	movwf	___flmul@a+2
  7089     09C0  3000               	movlw	0
  7090     09C1  00A5               	movwf	___flmul@a+1
  7091     09C2  3000               	movlw	0
  7092     09C3  00A4               	movwf	___flmul@a
  7093     09C4                     l2872:
  7094     09C4  17A6               	bsf	___flmul@a+2,7
  7095     09C5  29CE               	goto	l2876
  7096     09C6                     l2874:
  7097     09C6  3000               	movlw	0
  7098     09C7  00A7               	movwf	___flmul@a+3
  7099     09C8  3000               	movlw	0
  7100     09C9  00A6               	movwf	___flmul@a+2
  7101     09CA  3000               	movlw	0
  7102     09CB  00A5               	movwf	___flmul@a+1
  7103     09CC  3000               	movlw	0
  7104     09CD  00A4               	movwf	___flmul@a
  7105     09CE                     l2876:
  7106     09CE  082D               	movf	___flmul@aexp,w
  7107     09CF  1903               	btfsc	3,2
  7108     09D0  29D2               	goto	u3671
  7109     09D1  29D3               	goto	u3670
  7110     09D2                     u3671:
  7111     09D2  29D8               	goto	l2880
  7112     09D3                     u3670:
  7113     09D3                     l2878:
  7114     09D3  082E               	movf	___flmul@bexp,w
  7115     09D4  1D03               	btfss	3,2
  7116     09D5  29D7               	goto	u3681
  7117     09D6  29D8               	goto	u3680
  7118     09D7                     u3681:
  7119     09D7  29E1               	goto	l2884
  7120     09D8                     u3680:
  7121     09D8                     l2880:
  7122     09D8  3000               	movlw	0
  7123     09D9  00A3               	movwf	?___flmul+3
  7124     09DA  3000               	movlw	0
  7125     09DB  00A2               	movwf	?___flmul+2
  7126     09DC  3000               	movlw	0
  7127     09DD  00A1               	movwf	?___flmul+1
  7128     09DE  3000               	movlw	0
  7129     09DF  00A0               	movwf	?___flmul
  7130     09E0  2CBC               	goto	l746
  7131     09E1                     l2884:
  7132     09E1  0820               	movf	___flmul@b,w
  7133     09E2  00F0               	movwf	__Umul8_16@multiplicand
  7134     09E3  0826               	movf	___flmul@a+2,w
  7135     09E4  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7136     09E9  0871               	movf	?__Umul8_16+1,w
  7137     09EA  1283               	bcf	3,5	;RP0=0, select bank0
  7138     09EB  1303               	bcf	3,6	;RP1=0, select bank0
  7139     09EC  00B4               	movwf	___flmul@temp+1
  7140     09ED  0870               	movf	?__Umul8_16,w
  7141     09EE  00B3               	movwf	___flmul@temp
  7142     09EF                     l2886:
  7143     09EF  0833               	movf	___flmul@temp,w
  7144     09F0  00F9               	movwf	??___flmul
  7145     09F1  01FA               	clrf	??___flmul+1
  7146     09F2  01FB               	clrf	??___flmul+2
  7147     09F3  01FC               	clrf	??___flmul+3
  7148     09F4  087C               	movf	??___flmul+3,w
  7149     09F5  00AC               	movwf	___flmul@grs+3
  7150     09F6  087B               	movf	??___flmul+2,w
  7151     09F7  00AB               	movwf	___flmul@grs+2
  7152     09F8  087A               	movf	??___flmul+1,w
  7153     09F9  00AA               	movwf	___flmul@grs+1
  7154     09FA  0879               	movf	??___flmul,w
  7155     09FB  00A9               	movwf	___flmul@grs
  7156     09FC                     l2888:
  7157     09FC  0834               	movf	___flmul@temp+1,w
  7158     09FD  00F9               	movwf	??___flmul
  7159     09FE  01FA               	clrf	??___flmul+1
  7160     09FF  01FB               	clrf	??___flmul+2
  7161     0A00  01FC               	clrf	??___flmul+3
  7162     0A01  087C               	movf	??___flmul+3,w
  7163     0A02  00B2               	movwf	___flmul@prod+3
  7164     0A03  087B               	movf	??___flmul+2,w
  7165     0A04  00B1               	movwf	___flmul@prod+2
  7166     0A05  087A               	movf	??___flmul+1,w
  7167     0A06  00B0               	movwf	___flmul@prod+1
  7168     0A07  0879               	movf	??___flmul,w
  7169     0A08  00AF               	movwf	___flmul@prod
  7170     0A09  0821               	movf	___flmul@b+1,w
  7171     0A0A  00F0               	movwf	__Umul8_16@multiplicand
  7172     0A0B  0825               	movf	___flmul@a+1,w
  7173     0A0C  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7174     0A11  0871               	movf	?__Umul8_16+1,w
  7175     0A12  1283               	bcf	3,5	;RP0=0, select bank0
  7176     0A13  1303               	bcf	3,6	;RP1=0, select bank0
  7177     0A14  00B4               	movwf	___flmul@temp+1
  7178     0A15  0870               	movf	?__Umul8_16,w
  7179     0A16  00B3               	movwf	___flmul@temp
  7180     0A17                     l2890:
  7181     0A17  0833               	movf	___flmul@temp,w
  7182     0A18  00F9               	movwf	??___flmul
  7183     0A19  01FA               	clrf	??___flmul+1
  7184     0A1A  01FB               	clrf	??___flmul+2
  7185     0A1B  01FC               	clrf	??___flmul+3
  7186     0A1C  0879               	movf	??___flmul,w
  7187     0A1D  07A9               	addwf	___flmul@grs,f
  7188     0A1E  087A               	movf	??___flmul+1,w
  7189     0A1F  1103               	clrz
  7190     0A20  1803               	skipnc
  7191     0A21  3E01               	addlw	1
  7192     0A22  1903               	skipnz
  7193     0A23  2A25               	goto	u3691
  7194     0A24  07AA               	addwf	___flmul@grs+1,f
  7195     0A25                     u3691:
  7196     0A25  087B               	movf	??___flmul+2,w
  7197     0A26  1103               	clrz
  7198     0A27  1803               	skipnc
  7199     0A28  3E01               	addlw	1
  7200     0A29  1903               	skipnz
  7201     0A2A  2A2C               	goto	u3692
  7202     0A2B  07AB               	addwf	___flmul@grs+2,f
  7203     0A2C                     u3692:
  7204     0A2C  087C               	movf	??___flmul+3,w
  7205     0A2D  1103               	clrz
  7206     0A2E  1803               	skipnc
  7207     0A2F  3E01               	addlw	1
  7208     0A30  1903               	skipnz
  7209     0A31  2A33               	goto	u3693
  7210     0A32  07AC               	addwf	___flmul@grs+3,f
  7211     0A33                     u3693:
  7212     0A33                     l2892:
  7213     0A33  0834               	movf	___flmul@temp+1,w
  7214     0A34  00F9               	movwf	??___flmul
  7215     0A35  01FA               	clrf	??___flmul+1
  7216     0A36  01FB               	clrf	??___flmul+2
  7217     0A37  01FC               	clrf	??___flmul+3
  7218     0A38  0879               	movf	??___flmul,w
  7219     0A39  07AF               	addwf	___flmul@prod,f
  7220     0A3A  087A               	movf	??___flmul+1,w
  7221     0A3B  1103               	clrz
  7222     0A3C  1803               	skipnc
  7223     0A3D  3E01               	addlw	1
  7224     0A3E  1903               	skipnz
  7225     0A3F  2A41               	goto	u3701
  7226     0A40  07B0               	addwf	___flmul@prod+1,f
  7227     0A41                     u3701:
  7228     0A41  087B               	movf	??___flmul+2,w
  7229     0A42  1103               	clrz
  7230     0A43  1803               	skipnc
  7231     0A44  3E01               	addlw	1
  7232     0A45  1903               	skipnz
  7233     0A46  2A48               	goto	u3702
  7234     0A47  07B1               	addwf	___flmul@prod+2,f
  7235     0A48                     u3702:
  7236     0A48  087C               	movf	??___flmul+3,w
  7237     0A49  1103               	clrz
  7238     0A4A  1803               	skipnc
  7239     0A4B  3E01               	addlw	1
  7240     0A4C  1903               	skipnz
  7241     0A4D  2A4F               	goto	u3703
  7242     0A4E  07B2               	addwf	___flmul@prod+3,f
  7243     0A4F                     u3703:
  7244     0A4F  0822               	movf	___flmul@b+2,w
  7245     0A50  00F0               	movwf	__Umul8_16@multiplicand
  7246     0A51  0824               	movf	___flmul@a,w
  7247     0A52  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7248     0A57  0871               	movf	?__Umul8_16+1,w
  7249     0A58  1283               	bcf	3,5	;RP0=0, select bank0
  7250     0A59  1303               	bcf	3,6	;RP1=0, select bank0
  7251     0A5A  00B4               	movwf	___flmul@temp+1
  7252     0A5B  0870               	movf	?__Umul8_16,w
  7253     0A5C  00B3               	movwf	___flmul@temp
  7254     0A5D                     l2894:
  7255     0A5D  0833               	movf	___flmul@temp,w
  7256     0A5E  00F9               	movwf	??___flmul
  7257     0A5F  01FA               	clrf	??___flmul+1
  7258     0A60  01FB               	clrf	??___flmul+2
  7259     0A61  01FC               	clrf	??___flmul+3
  7260     0A62  0879               	movf	??___flmul,w
  7261     0A63  07A9               	addwf	___flmul@grs,f
  7262     0A64  087A               	movf	??___flmul+1,w
  7263     0A65  1103               	clrz
  7264     0A66  1803               	skipnc
  7265     0A67  3E01               	addlw	1
  7266     0A68  1903               	skipnz
  7267     0A69  2A6B               	goto	u3711
  7268     0A6A  07AA               	addwf	___flmul@grs+1,f
  7269     0A6B                     u3711:
  7270     0A6B  087B               	movf	??___flmul+2,w
  7271     0A6C  1103               	clrz
  7272     0A6D  1803               	skipnc
  7273     0A6E  3E01               	addlw	1
  7274     0A6F  1903               	skipnz
  7275     0A70  2A72               	goto	u3712
  7276     0A71  07AB               	addwf	___flmul@grs+2,f
  7277     0A72                     u3712:
  7278     0A72  087C               	movf	??___flmul+3,w
  7279     0A73  1103               	clrz
  7280     0A74  1803               	skipnc
  7281     0A75  3E01               	addlw	1
  7282     0A76  1903               	skipnz
  7283     0A77  2A79               	goto	u3713
  7284     0A78  07AC               	addwf	___flmul@grs+3,f
  7285     0A79                     u3713:
  7286     0A79                     l2896:
  7287     0A79  0834               	movf	___flmul@temp+1,w
  7288     0A7A  00F9               	movwf	??___flmul
  7289     0A7B  01FA               	clrf	??___flmul+1
  7290     0A7C  01FB               	clrf	??___flmul+2
  7291     0A7D  01FC               	clrf	??___flmul+3
  7292     0A7E  0879               	movf	??___flmul,w
  7293     0A7F  07AF               	addwf	___flmul@prod,f
  7294     0A80  087A               	movf	??___flmul+1,w
  7295     0A81  1103               	clrz
  7296     0A82  1803               	skipnc
  7297     0A83  3E01               	addlw	1
  7298     0A84  1903               	skipnz
  7299     0A85  2A87               	goto	u3721
  7300     0A86  07B0               	addwf	___flmul@prod+1,f
  7301     0A87                     u3721:
  7302     0A87  087B               	movf	??___flmul+2,w
  7303     0A88  1103               	clrz
  7304     0A89  1803               	skipnc
  7305     0A8A  3E01               	addlw	1
  7306     0A8B  1903               	skipnz
  7307     0A8C  2A8E               	goto	u3722
  7308     0A8D  07B1               	addwf	___flmul@prod+2,f
  7309     0A8E                     u3722:
  7310     0A8E  087C               	movf	??___flmul+3,w
  7311     0A8F  1103               	clrz
  7312     0A90  1803               	skipnc
  7313     0A91  3E01               	addlw	1
  7314     0A92  1903               	skipnz
  7315     0A93  2A95               	goto	u3723
  7316     0A94  07B2               	addwf	___flmul@prod+3,f
  7317     0A95                     u3723:
  7318     0A95                     l2898:
  7319     0A95  3008               	movlw	8
  7320     0A96  00F9               	movwf	??___flmul
  7321     0A97                     u3735:
  7322     0A97  1003               	clrc
  7323     0A98  0DA9               	rlf	___flmul@grs,f
  7324     0A99  0DAA               	rlf	___flmul@grs+1,f
  7325     0A9A  0DAB               	rlf	___flmul@grs+2,f
  7326     0A9B  0DAC               	rlf	___flmul@grs+3,f
  7327     0A9C  0BF9               	decfsz	??___flmul,f
  7328     0A9D  2A97               	goto	u3735
  7329     0A9E                     l2900:
  7330     0A9E  0821               	movf	___flmul@b+1,w
  7331     0A9F  00F0               	movwf	__Umul8_16@multiplicand
  7332     0AA0  0824               	movf	___flmul@a,w
  7333     0AA1  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7334     0AA6  0871               	movf	?__Umul8_16+1,w
  7335     0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  7336     0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  7337     0AA9  00B4               	movwf	___flmul@temp+1
  7338     0AAA  0870               	movf	?__Umul8_16,w
  7339     0AAB  00B3               	movwf	___flmul@temp
  7340     0AAC                     l2902:
  7341     0AAC  0833               	movf	___flmul@temp,w
  7342     0AAD  00F9               	movwf	??___flmul
  7343     0AAE  0834               	movf	___flmul@temp+1,w
  7344     0AAF  00FA               	movwf	??___flmul+1
  7345     0AB0  01FB               	clrf	??___flmul+2
  7346     0AB1  01FC               	clrf	??___flmul+3
  7347     0AB2  0879               	movf	??___flmul,w
  7348     0AB3  07A9               	addwf	___flmul@grs,f
  7349     0AB4  087A               	movf	??___flmul+1,w
  7350     0AB5  1103               	clrz
  7351     0AB6  1803               	skipnc
  7352     0AB7  3E01               	addlw	1
  7353     0AB8  1903               	skipnz
  7354     0AB9  2ABB               	goto	u3741
  7355     0ABA  07AA               	addwf	___flmul@grs+1,f
  7356     0ABB                     u3741:
  7357     0ABB  087B               	movf	??___flmul+2,w
  7358     0ABC  1103               	clrz
  7359     0ABD  1803               	skipnc
  7360     0ABE  3E01               	addlw	1
  7361     0ABF  1903               	skipnz
  7362     0AC0  2AC2               	goto	u3742
  7363     0AC1  07AB               	addwf	___flmul@grs+2,f
  7364     0AC2                     u3742:
  7365     0AC2  087C               	movf	??___flmul+3,w
  7366     0AC3  1103               	clrz
  7367     0AC4  1803               	skipnc
  7368     0AC5  3E01               	addlw	1
  7369     0AC6  1903               	skipnz
  7370     0AC7  2AC9               	goto	u3743
  7371     0AC8  07AC               	addwf	___flmul@grs+3,f
  7372     0AC9                     u3743:
  7373     0AC9                     l2904:
  7374     0AC9  0820               	movf	___flmul@b,w
  7375     0ACA  00F0               	movwf	__Umul8_16@multiplicand
  7376     0ACB  0825               	movf	___flmul@a+1,w
  7377     0ACC  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7378     0AD1  0871               	movf	?__Umul8_16+1,w
  7379     0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  7380     0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  7381     0AD4  00B4               	movwf	___flmul@temp+1
  7382     0AD5  0870               	movf	?__Umul8_16,w
  7383     0AD6  00B3               	movwf	___flmul@temp
  7384     0AD7                     l2906:
  7385     0AD7  0833               	movf	___flmul@temp,w
  7386     0AD8  00F9               	movwf	??___flmul
  7387     0AD9  0834               	movf	___flmul@temp+1,w
  7388     0ADA  00FA               	movwf	??___flmul+1
  7389     0ADB  01FB               	clrf	??___flmul+2
  7390     0ADC  01FC               	clrf	??___flmul+3
  7391     0ADD  0879               	movf	??___flmul,w
  7392     0ADE  07A9               	addwf	___flmul@grs,f
  7393     0ADF  087A               	movf	??___flmul+1,w
  7394     0AE0  1103               	clrz
  7395     0AE1  1803               	skipnc
  7396     0AE2  3E01               	addlw	1
  7397     0AE3  1903               	skipnz
  7398     0AE4  2AE6               	goto	u3751
  7399     0AE5  07AA               	addwf	___flmul@grs+1,f
  7400     0AE6                     u3751:
  7401     0AE6  087B               	movf	??___flmul+2,w
  7402     0AE7  1103               	clrz
  7403     0AE8  1803               	skipnc
  7404     0AE9  3E01               	addlw	1
  7405     0AEA  1903               	skipnz
  7406     0AEB  2AED               	goto	u3752
  7407     0AEC  07AB               	addwf	___flmul@grs+2,f
  7408     0AED                     u3752:
  7409     0AED  087C               	movf	??___flmul+3,w
  7410     0AEE  1103               	clrz
  7411     0AEF  1803               	skipnc
  7412     0AF0  3E01               	addlw	1
  7413     0AF1  1903               	skipnz
  7414     0AF2  2AF4               	goto	u3753
  7415     0AF3  07AC               	addwf	___flmul@grs+3,f
  7416     0AF4                     u3753:
  7417     0AF4                     l2908:
  7418     0AF4  3008               	movlw	8
  7419     0AF5  00F9               	movwf	??___flmul
  7420     0AF6                     u3765:
  7421     0AF6  1003               	clrc
  7422     0AF7  0DA9               	rlf	___flmul@grs,f
  7423     0AF8  0DAA               	rlf	___flmul@grs+1,f
  7424     0AF9  0DAB               	rlf	___flmul@grs+2,f
  7425     0AFA  0DAC               	rlf	___flmul@grs+3,f
  7426     0AFB  0BF9               	decfsz	??___flmul,f
  7427     0AFC  2AF6               	goto	u3765
  7428     0AFD  0820               	movf	___flmul@b,w
  7429     0AFE  00F0               	movwf	__Umul8_16@multiplicand
  7430     0AFF  0824               	movf	___flmul@a,w
  7431     0B00  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7432     0B05  0871               	movf	?__Umul8_16+1,w
  7433     0B06  1283               	bcf	3,5	;RP0=0, select bank0
  7434     0B07  1303               	bcf	3,6	;RP1=0, select bank0
  7435     0B08  00B4               	movwf	___flmul@temp+1
  7436     0B09  0870               	movf	?__Umul8_16,w
  7437     0B0A  00B3               	movwf	___flmul@temp
  7438     0B0B                     l2910:
  7439     0B0B  0833               	movf	___flmul@temp,w
  7440     0B0C  00F9               	movwf	??___flmul
  7441     0B0D  0834               	movf	___flmul@temp+1,w
  7442     0B0E  00FA               	movwf	??___flmul+1
  7443     0B0F  01FB               	clrf	??___flmul+2
  7444     0B10  01FC               	clrf	??___flmul+3
  7445     0B11  0879               	movf	??___flmul,w
  7446     0B12  07A9               	addwf	___flmul@grs,f
  7447     0B13  087A               	movf	??___flmul+1,w
  7448     0B14  1103               	clrz
  7449     0B15  1803               	skipnc
  7450     0B16  3E01               	addlw	1
  7451     0B17  1903               	skipnz
  7452     0B18  2B1A               	goto	u3771
  7453     0B19  07AA               	addwf	___flmul@grs+1,f
  7454     0B1A                     u3771:
  7455     0B1A  087B               	movf	??___flmul+2,w
  7456     0B1B  1103               	clrz
  7457     0B1C  1803               	skipnc
  7458     0B1D  3E01               	addlw	1
  7459     0B1E  1903               	skipnz
  7460     0B1F  2B21               	goto	u3772
  7461     0B20  07AB               	addwf	___flmul@grs+2,f
  7462     0B21                     u3772:
  7463     0B21  087C               	movf	??___flmul+3,w
  7464     0B22  1103               	clrz
  7465     0B23  1803               	skipnc
  7466     0B24  3E01               	addlw	1
  7467     0B25  1903               	skipnz
  7468     0B26  2B28               	goto	u3773
  7469     0B27  07AC               	addwf	___flmul@grs+3,f
  7470     0B28                     u3773:
  7471     0B28                     l2912:
  7472     0B28  0821               	movf	___flmul@b+1,w
  7473     0B29  00F0               	movwf	__Umul8_16@multiplicand
  7474     0B2A  0826               	movf	___flmul@a+2,w
  7475     0B2B  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7476     0B30  0871               	movf	?__Umul8_16+1,w
  7477     0B31  1283               	bcf	3,5	;RP0=0, select bank0
  7478     0B32  1303               	bcf	3,6	;RP1=0, select bank0
  7479     0B33  00B4               	movwf	___flmul@temp+1
  7480     0B34  0870               	movf	?__Umul8_16,w
  7481     0B35  00B3               	movwf	___flmul@temp
  7482     0B36  0833               	movf	___flmul@temp,w
  7483     0B37  00F9               	movwf	??___flmul
  7484     0B38  0834               	movf	___flmul@temp+1,w
  7485     0B39  00FA               	movwf	??___flmul+1
  7486     0B3A  01FB               	clrf	??___flmul+2
  7487     0B3B  01FC               	clrf	??___flmul+3
  7488     0B3C  0879               	movf	??___flmul,w
  7489     0B3D  07AF               	addwf	___flmul@prod,f
  7490     0B3E  087A               	movf	??___flmul+1,w
  7491     0B3F  1103               	clrz
  7492     0B40  1803               	skipnc
  7493     0B41  3E01               	addlw	1
  7494     0B42  1903               	skipnz
  7495     0B43  2B45               	goto	u3781
  7496     0B44  07B0               	addwf	___flmul@prod+1,f
  7497     0B45                     u3781:
  7498     0B45  087B               	movf	??___flmul+2,w
  7499     0B46  1103               	clrz
  7500     0B47  1803               	skipnc
  7501     0B48  3E01               	addlw	1
  7502     0B49  1903               	skipnz
  7503     0B4A  2B4C               	goto	u3782
  7504     0B4B  07B1               	addwf	___flmul@prod+2,f
  7505     0B4C                     u3782:
  7506     0B4C  087C               	movf	??___flmul+3,w
  7507     0B4D  1103               	clrz
  7508     0B4E  1803               	skipnc
  7509     0B4F  3E01               	addlw	1
  7510     0B50  1903               	skipnz
  7511     0B51  2B53               	goto	u3783
  7512     0B52  07B2               	addwf	___flmul@prod+3,f
  7513     0B53                     u3783:
  7514     0B53                     l2914:
  7515     0B53  0822               	movf	___flmul@b+2,w
  7516     0B54  00F0               	movwf	__Umul8_16@multiplicand
  7517     0B55  0825               	movf	___flmul@a+1,w
  7518     0B56  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7519     0B5B  0871               	movf	?__Umul8_16+1,w
  7520     0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  7521     0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  7522     0B5E  00B4               	movwf	___flmul@temp+1
  7523     0B5F  0870               	movf	?__Umul8_16,w
  7524     0B60  00B3               	movwf	___flmul@temp
  7525     0B61                     l2916:
  7526     0B61  0833               	movf	___flmul@temp,w
  7527     0B62  00F9               	movwf	??___flmul
  7528     0B63  0834               	movf	___flmul@temp+1,w
  7529     0B64  00FA               	movwf	??___flmul+1
  7530     0B65  01FB               	clrf	??___flmul+2
  7531     0B66  01FC               	clrf	??___flmul+3
  7532     0B67  0879               	movf	??___flmul,w
  7533     0B68  07AF               	addwf	___flmul@prod,f
  7534     0B69  087A               	movf	??___flmul+1,w
  7535     0B6A  1103               	clrz
  7536     0B6B  1803               	skipnc
  7537     0B6C  3E01               	addlw	1
  7538     0B6D  1903               	skipnz
  7539     0B6E  2B70               	goto	u3791
  7540     0B6F  07B0               	addwf	___flmul@prod+1,f
  7541     0B70                     u3791:
  7542     0B70  087B               	movf	??___flmul+2,w
  7543     0B71  1103               	clrz
  7544     0B72  1803               	skipnc
  7545     0B73  3E01               	addlw	1
  7546     0B74  1903               	skipnz
  7547     0B75  2B77               	goto	u3792
  7548     0B76  07B1               	addwf	___flmul@prod+2,f
  7549     0B77                     u3792:
  7550     0B77  087C               	movf	??___flmul+3,w
  7551     0B78  1103               	clrz
  7552     0B79  1803               	skipnc
  7553     0B7A  3E01               	addlw	1
  7554     0B7B  1903               	skipnz
  7555     0B7C  2B7E               	goto	u3793
  7556     0B7D  07B2               	addwf	___flmul@prod+3,f
  7557     0B7E                     u3793:
  7558     0B7E  0822               	movf	___flmul@b+2,w
  7559     0B7F  00F0               	movwf	__Umul8_16@multiplicand
  7560     0B80  0826               	movf	___flmul@a+2,w
  7561     0B81  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7562     0B86  0871               	movf	?__Umul8_16+1,w
  7563     0B87  1283               	bcf	3,5	;RP0=0, select bank0
  7564     0B88  1303               	bcf	3,6	;RP1=0, select bank0
  7565     0B89  00B4               	movwf	___flmul@temp+1
  7566     0B8A  0870               	movf	?__Umul8_16,w
  7567     0B8B  00B3               	movwf	___flmul@temp
  7568     0B8C                     l2918:
  7569     0B8C  0833               	movf	___flmul@temp,w
  7570     0B8D  00F9               	movwf	??___flmul
  7571     0B8E  0834               	movf	___flmul@temp+1,w
  7572     0B8F  00FA               	movwf	??___flmul+1
  7573     0B90  01FB               	clrf	??___flmul+2
  7574     0B91  01FC               	clrf	??___flmul+3
  7575     0B92  3008               	movlw	8
  7576     0B93                     u3805:
  7577     0B93  1003               	clrc
  7578     0B94  0DF9               	rlf	??___flmul,f
  7579     0B95  0DFA               	rlf	??___flmul+1,f
  7580     0B96  0DFB               	rlf	??___flmul+2,f
  7581     0B97  0DFC               	rlf	??___flmul+3,f
  7582     0B98                     u3800:
  7583     0B98  3EFF               	addlw	-1
  7584     0B99  1D03               	skipz
  7585     0B9A  2B93               	goto	u3805
  7586     0B9B  0879               	movf	??___flmul,w
  7587     0B9C  07AF               	addwf	___flmul@prod,f
  7588     0B9D  087A               	movf	??___flmul+1,w
  7589     0B9E  1103               	clrz
  7590     0B9F  1803               	skipnc
  7591     0BA0  3E01               	addlw	1
  7592     0BA1  1903               	skipnz
  7593     0BA2  2BA4               	goto	u3811
  7594     0BA3  07B0               	addwf	___flmul@prod+1,f
  7595     0BA4                     u3811:
  7596     0BA4  087B               	movf	??___flmul+2,w
  7597     0BA5  1103               	clrz
  7598     0BA6  1803               	skipnc
  7599     0BA7  3E01               	addlw	1
  7600     0BA8  1903               	skipnz
  7601     0BA9  2BAB               	goto	u3812
  7602     0BAA  07B1               	addwf	___flmul@prod+2,f
  7603     0BAB                     u3812:
  7604     0BAB  087C               	movf	??___flmul+3,w
  7605     0BAC  1103               	clrz
  7606     0BAD  1803               	skipnc
  7607     0BAE  3E01               	addlw	1
  7608     0BAF  1903               	skipnz
  7609     0BB0  2BB2               	goto	u3813
  7610     0BB1  07B2               	addwf	___flmul@prod+3,f
  7611     0BB2                     u3813:
  7612     0BB2                     l2920:
  7613     0BB2  0829               	movf	___flmul@grs,w
  7614     0BB3  00F9               	movwf	??___flmul
  7615     0BB4  082A               	movf	___flmul@grs+1,w
  7616     0BB5  00FA               	movwf	??___flmul+1
  7617     0BB6  082B               	movf	___flmul@grs+2,w
  7618     0BB7  00FB               	movwf	??___flmul+2
  7619     0BB8  082C               	movf	___flmul@grs+3,w
  7620     0BB9  00FC               	movwf	??___flmul+3
  7621     0BBA  3018               	movlw	24
  7622     0BBB                     u3825:
  7623     0BBB  1003               	clrc
  7624     0BBC  0CFC               	rrf	??___flmul+3,f
  7625     0BBD  0CFB               	rrf	??___flmul+2,f
  7626     0BBE  0CFA               	rrf	??___flmul+1,f
  7627     0BBF  0CF9               	rrf	??___flmul,f
  7628     0BC0                     u3820:
  7629     0BC0  3EFF               	addlw	-1
  7630     0BC1  1D03               	skipz
  7631     0BC2  2BBB               	goto	u3825
  7632     0BC3  0879               	movf	??___flmul,w
  7633     0BC4  07AF               	addwf	___flmul@prod,f
  7634     0BC5  087A               	movf	??___flmul+1,w
  7635     0BC6  1103               	clrz
  7636     0BC7  1803               	skipnc
  7637     0BC8  3E01               	addlw	1
  7638     0BC9  1903               	skipnz
  7639     0BCA  2BCC               	goto	u3831
  7640     0BCB  07B0               	addwf	___flmul@prod+1,f
  7641     0BCC                     u3831:
  7642     0BCC  087B               	movf	??___flmul+2,w
  7643     0BCD  1103               	clrz
  7644     0BCE  1803               	skipnc
  7645     0BCF  3E01               	addlw	1
  7646     0BD0  1903               	skipnz
  7647     0BD1  2BD3               	goto	u3832
  7648     0BD2  07B1               	addwf	___flmul@prod+2,f
  7649     0BD3                     u3832:
  7650     0BD3  087C               	movf	??___flmul+3,w
  7651     0BD4  1103               	clrz
  7652     0BD5  1803               	skipnc
  7653     0BD6  3E01               	addlw	1
  7654     0BD7  1903               	skipnz
  7655     0BD8  2BDA               	goto	u3833
  7656     0BD9  07B2               	addwf	___flmul@prod+3,f
  7657     0BDA                     u3833:
  7658     0BDA                     l2922:
  7659     0BDA  3008               	movlw	8
  7660     0BDB  00F9               	movwf	??___flmul
  7661     0BDC                     u3845:
  7662     0BDC  1003               	clrc
  7663     0BDD  0DA9               	rlf	___flmul@grs,f
  7664     0BDE  0DAA               	rlf	___flmul@grs+1,f
  7665     0BDF  0DAB               	rlf	___flmul@grs+2,f
  7666     0BE0  0DAC               	rlf	___flmul@grs+3,f
  7667     0BE1  0BF9               	decfsz	??___flmul,f
  7668     0BE2  2BDC               	goto	u3845
  7669     0BE3                     l2924:
  7670     0BE3  082E               	movf	___flmul@bexp,w
  7671     0BE4  072D               	addwf	___flmul@aexp,w
  7672     0BE5  00F9               	movwf	??___flmul
  7673     0BE6  01FA               	clrf	??___flmul+1
  7674     0BE7  0DFA               	rlf	??___flmul+1,f
  7675     0BE8  0879               	movf	??___flmul,w
  7676     0BE9  3E82               	addlw	130
  7677     0BEA  00B3               	movwf	___flmul@temp
  7678     0BEB  087A               	movf	??___flmul+1,w
  7679     0BEC  1803               	skipnc
  7680     0BED  3E01               	addlw	1
  7681     0BEE  3EFF               	addlw	255
  7682     0BEF  00B4               	movwf	___flmul@temp+1
  7683     0BF0  2C0E               	goto	l2936
  7684     0BF1                     l2926:
  7685     0BF1  3001               	movlw	1
  7686     0BF2  00F9               	movwf	??___flmul
  7687     0BF3                     u3855:
  7688     0BF3  1003               	clrc
  7689     0BF4  0DAF               	rlf	___flmul@prod,f
  7690     0BF5  0DB0               	rlf	___flmul@prod+1,f
  7691     0BF6  0DB1               	rlf	___flmul@prod+2,f
  7692     0BF7  0DB2               	rlf	___flmul@prod+3,f
  7693     0BF8  0BF9               	decfsz	??___flmul,f
  7694     0BF9  2BF3               	goto	u3855
  7695     0BFA                     l2928:
  7696     0BFA  1FAC               	btfss	___flmul@grs+3,7
  7697     0BFB  2BFD               	goto	u3861
  7698     0BFC  2BFE               	goto	u3860
  7699     0BFD                     u3861:
  7700     0BFD  2BFF               	goto	l2932
  7701     0BFE                     u3860:
  7702     0BFE                     l2930:
  7703     0BFE  142F               	bsf	___flmul@prod,0
  7704     0BFF                     l2932:
  7705     0BFF  3001               	movlw	1
  7706     0C00  00F9               	movwf	??___flmul
  7707     0C01                     u3875:
  7708     0C01  1003               	clrc
  7709     0C02  0DA9               	rlf	___flmul@grs,f
  7710     0C03  0DAA               	rlf	___flmul@grs+1,f
  7711     0C04  0DAB               	rlf	___flmul@grs+2,f
  7712     0C05  0DAC               	rlf	___flmul@grs+3,f
  7713     0C06  0BF9               	decfsz	??___flmul,f
  7714     0C07  2C01               	goto	u3875
  7715     0C08                     l2934:
  7716     0C08  30FF               	movlw	255
  7717     0C09  07B3               	addwf	___flmul@temp,f
  7718     0C0A  1803               	skipnc
  7719     0C0B  0AB4               	incf	___flmul@temp+1,f
  7720     0C0C  30FF               	movlw	255
  7721     0C0D  07B4               	addwf	___flmul@temp+1,f
  7722     0C0E                     l2936:
  7723     0C0E  1FB1               	btfss	___flmul@prod+2,7
  7724     0C0F  2C11               	goto	u3881
  7725     0C10  2C12               	goto	u3880
  7726     0C11                     u3881:
  7727     0C11  2BF1               	goto	l2926
  7728     0C12                     u3880:
  7729     0C12                     l2938:
  7730     0C12  01AD               	clrf	___flmul@aexp
  7731     0C13                     l2940:
  7732     0C13  1FAC               	btfss	___flmul@grs+3,7
  7733     0C14  2C16               	goto	u3891
  7734     0C15  2C17               	goto	u3890
  7735     0C16                     u3891:
  7736     0C16  2C33               	goto	l2948
  7737     0C17                     u3890:
  7738     0C17                     l2942:
  7739     0C17  30FF               	movlw	255
  7740     0C18  0529               	andwf	___flmul@grs,w
  7741     0C19  00F9               	movwf	??___flmul
  7742     0C1A  30FF               	movlw	255
  7743     0C1B  052A               	andwf	___flmul@grs+1,w
  7744     0C1C  00FA               	movwf	??___flmul+1
  7745     0C1D  30FF               	movlw	255
  7746     0C1E  052B               	andwf	___flmul@grs+2,w
  7747     0C1F  00FB               	movwf	??___flmul+2
  7748     0C20  307F               	movlw	127
  7749     0C21  052C               	andwf	___flmul@grs+3,w
  7750     0C22  00FC               	movwf	??___flmul+3
  7751     0C23  087C               	movf	??___flmul+3,w
  7752     0C24  047B               	iorwf	??___flmul+2,w
  7753     0C25  047A               	iorwf	??___flmul+1,w
  7754     0C26  0479               	iorwf	??___flmul,w
  7755     0C27  1903               	skipnz
  7756     0C28  2C2A               	goto	u3901
  7757     0C29  2C2B               	goto	u3900
  7758     0C2A                     u3901:
  7759     0C2A  2C2E               	goto	l752
  7760     0C2B                     u3900:
  7761     0C2B                     l2944:
  7762     0C2B  3001               	movlw	1
  7763     0C2C  00AD               	movwf	___flmul@aexp
  7764     0C2D  2C33               	goto	l2948
  7765     0C2E                     l752:
  7766     0C2E  1C2F               	btfss	___flmul@prod,0
  7767     0C2F  2C31               	goto	u3911
  7768     0C30  2C32               	goto	u3910
  7769     0C31                     u3911:
  7770     0C31  2C33               	goto	l2948
  7771     0C32                     u3910:
  7772     0C32  2C2B               	goto	l2944
  7773     0C33                     l2948:
  7774     0C33  082D               	movf	___flmul@aexp,w
  7775     0C34  1903               	btfsc	3,2
  7776     0C35  2C37               	goto	u3921
  7777     0C36  2C38               	goto	u3920
  7778     0C37                     u3921:
  7779     0C37  2C69               	goto	l2958
  7780     0C38                     u3920:
  7781     0C38                     l2950:
  7782     0C38  3001               	movlw	1
  7783     0C39  07AF               	addwf	___flmul@prod,f
  7784     0C3A  3000               	movlw	0
  7785     0C3B  1803               	skipnc
  7786     0C3C  3001               	movlw	1
  7787     0C3D  07B0               	addwf	___flmul@prod+1,f
  7788     0C3E  3000               	movlw	0
  7789     0C3F  1803               	skipnc
  7790     0C40  3001               	movlw	1
  7791     0C41  07B1               	addwf	___flmul@prod+2,f
  7792     0C42  3000               	movlw	0
  7793     0C43  1803               	skipnc
  7794     0C44  3001               	movlw	1
  7795     0C45  07B2               	addwf	___flmul@prod+3,f
  7796     0C46                     l2952:
  7797     0C46  1C32               	btfss	___flmul@prod+3,0
  7798     0C47  2C49               	goto	u3931
  7799     0C48  2C4A               	goto	u3930
  7800     0C49                     u3931:
  7801     0C49  2C69               	goto	l2958
  7802     0C4A                     u3930:
  7803     0C4A                     l2954:
  7804     0C4A  082F               	movf	___flmul@prod,w
  7805     0C4B  00F9               	movwf	??___flmul
  7806     0C4C  0830               	movf	___flmul@prod+1,w
  7807     0C4D  00FA               	movwf	??___flmul+1
  7808     0C4E  0831               	movf	___flmul@prod+2,w
  7809     0C4F  00FB               	movwf	??___flmul+2
  7810     0C50  0832               	movf	___flmul@prod+3,w
  7811     0C51  00FC               	movwf	??___flmul+3
  7812     0C52  3001               	movlw	1
  7813     0C53  00FD               	movwf	??___flmul+4
  7814     0C54                     u3945:
  7815     0C54  0D7C               	rlf	??___flmul+3,w
  7816     0C55  0CFC               	rrf	??___flmul+3,f
  7817     0C56  0CFB               	rrf	??___flmul+2,f
  7818     0C57  0CFA               	rrf	??___flmul+1,f
  7819     0C58  0CF9               	rrf	??___flmul,f
  7820     0C59                     u3940:
  7821     0C59  0BFD               	decfsz	??___flmul+4,f
  7822     0C5A  2C54               	goto	u3945
  7823     0C5B  087C               	movf	??___flmul+3,w
  7824     0C5C  00B2               	movwf	___flmul@prod+3
  7825     0C5D  087B               	movf	??___flmul+2,w
  7826     0C5E  00B1               	movwf	___flmul@prod+2
  7827     0C5F  087A               	movf	??___flmul+1,w
  7828     0C60  00B0               	movwf	___flmul@prod+1
  7829     0C61  0879               	movf	??___flmul,w
  7830     0C62  00AF               	movwf	___flmul@prod
  7831     0C63                     l2956:
  7832     0C63  3001               	movlw	1
  7833     0C64  07B3               	addwf	___flmul@temp,f
  7834     0C65  1803               	skipnc
  7835     0C66  0AB4               	incf	___flmul@temp+1,f
  7836     0C67  3000               	movlw	0
  7837     0C68  07B4               	addwf	___flmul@temp+1,f
  7838     0C69                     l2958:
  7839     0C69  0834               	movf	___flmul@temp+1,w
  7840     0C6A  3A80               	xorlw	128
  7841     0C6B  00FF               	movwf	btemp+1
  7842     0C6C  3080               	movlw	128
  7843     0C6D  027F               	subwf	btemp+1,w
  7844     0C6E  1D03               	skipz
  7845     0C6F  2C72               	goto	u3955
  7846     0C70  30FF               	movlw	255
  7847     0C71  0233               	subwf	___flmul@temp,w
  7848     0C72                     u3955:
  7849     0C72  1C03               	skipc
  7850     0C73  2C75               	goto	u3951
  7851     0C74  2C76               	goto	u3950
  7852     0C75                     u3951:
  7853     0C75  2C81               	goto	l2962
  7854     0C76                     u3950:
  7855     0C76                     l2960:
  7856     0C76  307F               	movlw	127
  7857     0C77  1283               	bcf	3,5	;RP0=0, select bank0
  7858     0C78  1303               	bcf	3,6	;RP1=0, select bank0
  7859     0C79  00B2               	movwf	___flmul@prod+3
  7860     0C7A  3080               	movlw	128
  7861     0C7B  00B1               	movwf	___flmul@prod+2
  7862     0C7C  3000               	movlw	0
  7863     0C7D  00B0               	movwf	___flmul@prod+1
  7864     0C7E  3000               	movlw	0
  7865     0C7F  00AF               	movwf	___flmul@prod
  7866     0C80  2CB2               	goto	l758
  7867     0C81                     l2962:
  7868     0C81  1283               	bcf	3,5	;RP0=0, select bank0
  7869     0C82  1303               	bcf	3,6	;RP1=0, select bank0
  7870     0C83  0834               	movf	___flmul@temp+1,w
  7871     0C84  3A80               	xorlw	128
  7872     0C85  00FF               	movwf	btemp+1
  7873     0C86  3080               	movlw	128
  7874     0C87  027F               	subwf	btemp+1,w
  7875     0C88  1D03               	skipz
  7876     0C89  2C8C               	goto	u3965
  7877     0C8A  3001               	movlw	1
  7878     0C8B  0233               	subwf	___flmul@temp,w
  7879     0C8C                     u3965:
  7880     0C8C  1803               	skipnc
  7881     0C8D  2C8F               	goto	u3961
  7882     0C8E  2C90               	goto	u3960
  7883     0C8F                     u3961:
  7884     0C8F  2C9C               	goto	l2968
  7885     0C90                     u3960:
  7886     0C90                     l2964:
  7887     0C90  3000               	movlw	0
  7888     0C91  1283               	bcf	3,5	;RP0=0, select bank0
  7889     0C92  1303               	bcf	3,6	;RP1=0, select bank0
  7890     0C93  00B2               	movwf	___flmul@prod+3
  7891     0C94  3000               	movlw	0
  7892     0C95  00B1               	movwf	___flmul@prod+2
  7893     0C96  3000               	movlw	0
  7894     0C97  00B0               	movwf	___flmul@prod+1
  7895     0C98  3000               	movlw	0
  7896     0C99  00AF               	movwf	___flmul@prod
  7897     0C9A                     l2966:
  7898     0C9A  01A8               	clrf	___flmul@sign
  7899     0C9B  2CB2               	goto	l758
  7900     0C9C                     l2968:
  7901     0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  7902     0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  7903     0C9E  0833               	movf	___flmul@temp,w
  7904     0C9F  00AE               	movwf	___flmul@bexp
  7905     0CA0  30FF               	movlw	255
  7906     0CA1  05AF               	andwf	___flmul@prod,f
  7907     0CA2  30FF               	movlw	255
  7908     0CA3  05B0               	andwf	___flmul@prod+1,f
  7909     0CA4  307F               	movlw	127
  7910     0CA5  05B1               	andwf	___flmul@prod+2,f
  7911     0CA6  3000               	movlw	0
  7912     0CA7  05B2               	andwf	___flmul@prod+3,f
  7913     0CA8                     l2970:
  7914     0CA8  1C2E               	btfss	___flmul@bexp,0
  7915     0CA9  2CAB               	goto	u3971
  7916     0CAA  2CAC               	goto	u3970
  7917     0CAB                     u3971:
  7918     0CAB  2CAD               	goto	l2974
  7919     0CAC                     u3970:
  7920     0CAC                     l2972:
  7921     0CAC  17B1               	bsf	___flmul@prod+2,7
  7922     0CAD                     l2974:
  7923     0CAD  082E               	movf	___flmul@bexp,w
  7924     0CAE  00F9               	movwf	??___flmul
  7925     0CAF  1003               	clrc
  7926     0CB0  0C79               	rrf	??___flmul,w
  7927     0CB1  00B2               	movwf	___flmul@prod+3
  7928     0CB2                     l758:
  7929     0CB2  0828               	movf	___flmul@sign,w
  7930     0CB3  04B2               	iorwf	___flmul@prod+3,f
  7931     0CB4                     l2976:
  7932     0CB4  0832               	movf	___flmul@prod+3,w
  7933     0CB5  00A3               	movwf	?___flmul+3
  7934     0CB6  0831               	movf	___flmul@prod+2,w
  7935     0CB7  00A2               	movwf	?___flmul+2
  7936     0CB8  0830               	movf	___flmul@prod+1,w
  7937     0CB9  00A1               	movwf	?___flmul+1
  7938     0CBA  082F               	movf	___flmul@prod,w
  7939     0CBB  00A0               	movwf	?___flmul
  7940     0CBC                     l746:
  7941     0CBC  0008               	return
  7942     0CBD                     __end_of___flmul:
  7943                           
  7944                           	psect	text29
  7945     1BDD                     __ptext29:	
  7946 ;; *************** function __Umul8_16 *****************
  7947 ;; Defined at:
  7948 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  multiplier      1    wreg     unsigned char 
  7951 ;;  multiplicand    1    0[COMMON] unsigned char 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  multiplier      1    8[COMMON] unsigned char 
  7954 ;;  word_mpld       2    6[COMMON] unsigned short 
  7955 ;;  product         2    4[COMMON] unsigned short 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2    0[COMMON] unsigned int 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7965 ;;      Params:         2       0       0       0       0
  7966 ;;      Locals:         5       0       0       0       0
  7967 ;;      Temps:          2       0       0       0       0
  7968 ;;      Totals:         9       0       0       0       0
  7969 ;;Total ram usage:        9 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		___flmul
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978     1BDD                     __Umul8_16:	
  7979                           ;psect for function __Umul8_16
  7980                           
  7981                           
  7982                           ;incstack = 0
  7983                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7984                           ;__Umul8_16@multiplier stored from wreg
  7985     1BDD  00F8               	movwf	__Umul8_16@multiplier
  7986     1BDE                     l2576:
  7987     1BDE  01F4               	clrf	__Umul8_16@product
  7988     1BDF  01F5               	clrf	__Umul8_16@product+1
  7989     1BE0                     l2578:
  7990     1BE0  0870               	movf	__Umul8_16@multiplicand,w
  7991     1BE1  00F2               	movwf	??__Umul8_16
  7992     1BE2  01F3               	clrf	??__Umul8_16+1
  7993     1BE3  0872               	movf	??__Umul8_16,w
  7994     1BE4  00F6               	movwf	__Umul8_16@word_mpld
  7995     1BE5  0873               	movf	??__Umul8_16+1,w
  7996     1BE6  00F7               	movwf	__Umul8_16@word_mpld+1
  7997     1BE7                     l2580:
  7998     1BE7  1C78               	btfss	__Umul8_16@multiplier,0
  7999     1BE8  2BEA               	goto	u3021
  8000     1BE9  2BEB               	goto	u3020
  8001     1BEA                     u3021:
  8002     1BEA  2BF1               	goto	l765
  8003     1BEB                     u3020:
  8004     1BEB                     l2582:
  8005     1BEB  0876               	movf	__Umul8_16@word_mpld,w
  8006     1BEC  07F4               	addwf	__Umul8_16@product,f
  8007     1BED  1803               	skipnc
  8008     1BEE  0AF5               	incf	__Umul8_16@product+1,f
  8009     1BEF  0877               	movf	__Umul8_16@word_mpld+1,w
  8010     1BF0  07F5               	addwf	__Umul8_16@product+1,f
  8011     1BF1                     l765:
  8012     1BF1  3001               	movlw	1
  8013     1BF2                     u3035:
  8014     1BF2  1003               	clrc
  8015     1BF3  0DF6               	rlf	__Umul8_16@word_mpld,f
  8016     1BF4  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8017     1BF5  3EFF               	addlw	-1
  8018     1BF6  1D03               	skipz
  8019     1BF7  2BF2               	goto	u3035
  8020     1BF8  1003               	clrc
  8021     1BF9  0CF8               	rrf	__Umul8_16@multiplier,f
  8022     1BFA                     l2584:
  8023     1BFA  0878               	movf	__Umul8_16@multiplier,w
  8024     1BFB  1D03               	btfss	3,2
  8025     1BFC  2BFE               	goto	u3041
  8026     1BFD  2BFF               	goto	u3040
  8027     1BFE                     u3041:
  8028     1BFE  2BE7               	goto	l2580
  8029     1BFF                     u3040:
  8030     1BFF                     l2586:
  8031     1BFF  0875               	movf	__Umul8_16@product+1,w
  8032     1C00  00F1               	movwf	?__Umul8_16+1
  8033     1C01  0874               	movf	__Umul8_16@product,w
  8034     1C02  00F0               	movwf	?__Umul8_16
  8035     1C03                     l767:
  8036     1C03  0008               	return
  8037     1C04                     __end_of__Umul8_16:
  8038                           
  8039                           	psect	text30
  8040     1B48                     __ptext30:	
  8041 ;; *************** function _LM75_set *****************
  8042 ;; Defined at:
  8043 ;;		line 60 in file "LM75.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  regAddress      1    wreg     unsigned char 
  8046 ;;  data            2    1[COMMON] int 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  regAddress      1    3[COMMON] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      void 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0, pclath, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8058 ;;      Params:         2       0       0       0       0
  8059 ;;      Locals:         1       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0
  8061 ;;      Totals:         3       0       0       0       0
  8062 ;;Total ram usage:        3 bytes
  8063 ;; Hardware stack levels used: 1
  8064 ;; Hardware stack levels required when called: 2
  8065 ;; This function calls:
  8066 ;;		_I2C_Master_Start
  8067 ;;		_I2C_Master_Stop
  8068 ;;		_I2C_Master_Write
  8069 ;; This function is called by:
  8070 ;;		_LM75_setHysteresisTemperature
  8071 ;;		_LM75_setOSTripTemperature
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075     1B48                     _LM75_set:	
  8076                           ;psect for function _LM75_set
  8077                           
  8078                           
  8079                           ;incstack = 0
  8080                           ; Regs used in _LM75_set: [wreg+status,2+status,0+pclath+cstack]
  8081                           ;LM75_set@regAddress stored from wreg
  8082     1B48  00F3               	movwf	LM75_set@regAddress
  8083     1B49                     l3486:
  8084                           
  8085                           ;LM75.c: 60: void LM75_set(char regAddress, signed int data);LM75.c: 61: {;LM75.c: 62:  
      +                             I2C_Master_Start();
  8086     1B49  160A  158A  2216  160A  158A  	fcall	_I2C_Master_Start
  8087                           
  8088                           ;LM75.c: 63:     I2C_Master_Write(0x90);
  8089     1B4E  3090               	movlw	144
  8090     1B4F  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8091                           
  8092                           ;LM75.c: 64:     I2C_Master_Write(regAddress);
  8093     1B54  0873               	movf	LM75_set@regAddress,w
  8094     1B55  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8095                           
  8096                           ;LM75.c: 65:     I2C_Master_Write(data >> 8);
  8097     1B5A  0872               	movf	LM75_set@data+1,w
  8098     1B5B  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8099                           
  8100                           ;LM75.c: 66:     I2C_Master_Write(data & 0xFF);
  8101     1B60  0871               	movf	LM75_set@data,w
  8102     1B61  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8103                           
  8104                           ;LM75.c: 67:     I2C_Master_Stop();
  8105     1B66  120A  118A  2003  160A  158A  	fcall	_I2C_Master_Stop
  8106     1B6B                     l208:
  8107     1B6B  0008               	return
  8108     1B6C                     __end_of_LM75_set:
  8109                           
  8110                           	psect	text31
  8111     1B91                     __ptext31:	
  8112 ;; *************** function _LM75_setFaultQueue *****************
  8113 ;; Defined at:
  8114 ;;		line 120 in file "LM75.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  faultCount      1    wreg     unsigned char 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  faultCount      1    2[COMMON] unsigned char 
  8119 ;;  config          1    3[COMMON] unsigned char 
  8120 ;; Return value:  Size  Location     Type
  8121 ;;                  1    wreg      void 
  8122 ;; Registers used:
  8123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8129 ;;      Params:         0       0       0       0       0
  8130 ;;      Locals:         2       0       0       0       0
  8131 ;;      Temps:          0       0       0       0       0
  8132 ;;      Totals:         2       0       0       0       0
  8133 ;;Total ram usage:        2 bytes
  8134 ;; Hardware stack levels used: 1
  8135 ;; Hardware stack levels required when called: 3
  8136 ;; This function calls:
  8137 ;;		_LM75_readConfig
  8138 ;;		_LM75_setConfig
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144     1B91                     _LM75_setFaultQueue:	
  8145                           ;psect for function _LM75_setFaultQueue
  8146                           
  8147                           
  8148                           ;incstack = 0
  8149                           ; Regs used in _LM75_setFaultQueue: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8150                           ;LM75_setFaultQueue@faultCount stored from wreg
  8151     1B91  00F2               	movwf	LM75_setFaultQueue@faultCount
  8152     1B92                     l3572:
  8153                           
  8154                           ;LM75.c: 120: void LM75_setFaultQueue(char faultCount);LM75.c: 121: {;LM75.c: 122:     c
      +                          har config = LM75_readConfig();
  8155     1B92  160A  158A  242F  160A  158A  	fcall	_LM75_readConfig
  8156     1B97  00F3               	movwf	LM75_setFaultQueue@config
  8157     1B98                     l3574:
  8158                           
  8159                           ;LM75.c: 123:     config &= ~0x18;
  8160     1B98  30E7               	movlw	231
  8161     1B99  05F3               	andwf	LM75_setFaultQueue@config,f
  8162                           
  8163                           ;LM75.c: 125:     switch(faultCount) {
  8164     1B9A  2BA2               	goto	l3578
  8165     1B9B                     l233:	
  8166                           ;LM75.c: 129:         case 2:
  8167                           
  8168                           
  8169                           ;LM75.c: 130:         config |= 0x08;
  8170     1B9B  15F3               	bsf	LM75_setFaultQueue@config,3
  8171                           
  8172                           ;LM75.c: 131:         break;
  8173     1B9C  2BB0               	goto	l3580
  8174     1B9D                     l234:	
  8175                           ;LM75.c: 132:         case 4:
  8176                           
  8177                           
  8178                           ;LM75.c: 133:         config |= 0x10;
  8179     1B9D  1673               	bsf	LM75_setFaultQueue@config,4
  8180                           
  8181                           ;LM75.c: 134:         break;
  8182     1B9E  2BB0               	goto	l3580
  8183     1B9F                     l3576:
  8184                           
  8185                           ;LM75.c: 136:         config |= 0x18;
  8186     1B9F  3018               	movlw	24
  8187     1BA0  04F3               	iorwf	LM75_setFaultQueue@config,f
  8188                           
  8189                           ;LM75.c: 137:         break;
  8190     1BA1  2BB0               	goto	l3580
  8191     1BA2                     l3578:
  8192     1BA2  0872               	movf	LM75_setFaultQueue@faultCount,w
  8193                           
  8194                           ; Switch size 1, requested type "simple"
  8195                           ; Number of cases is 4, Range of values is 1 to 6
  8196                           ; switch strategies available:
  8197                           ; Name         Instructions Cycles
  8198                           ; simple_byte           13     7 (average)
  8199                           ; direct_byte           29    11 (fixed)
  8200                           ; jumptable            263     9 (fixed)
  8201                           ;	Chosen strategy is simple_byte
  8202     1BA3  3A01               	xorlw	1	; case 1
  8203     1BA4  1903               	skipnz
  8204     1BA5  2BB0               	goto	l3580
  8205     1BA6  3A03               	xorlw	3	; case 2
  8206     1BA7  1903               	skipnz
  8207     1BA8  2B9B               	goto	l233
  8208     1BA9  3A06               	xorlw	6	; case 4
  8209     1BAA  1903               	skipnz
  8210     1BAB  2B9D               	goto	l234
  8211     1BAC  3A02               	xorlw	2	; case 6
  8212     1BAD  1903               	skipnz
  8213     1BAE  2B9F               	goto	l3576
  8214     1BAF  2BB0               	goto	l3580
  8215     1BB0                     l3580:
  8216                           
  8217                           ;LM75.c: 141: LM75_setConfig(config);
  8218     1BB0  0873               	movf	LM75_setFaultQueue@config,w
  8219     1BB1  160A  158A  22E8  160A  158A  	fcall	_LM75_setConfig
  8220     1BB6                     l237:
  8221     1BB6  0008               	return
  8222     1BB7                     __end_of_LM75_setFaultQueue:
  8223                           
  8224                           	psect	text32
  8225     1ABA                     __ptext32:	
  8226 ;; *************** function _LM75_setDeviceMode *****************
  8227 ;; Defined at:
  8228 ;;		line 98 in file "LM75.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  interruptMod    1    wreg     unsigned char 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  interruptMod    1    2[COMMON] unsigned char 
  8233 ;;  config          1    3[COMMON] unsigned char 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, pclath, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8243 ;;      Params:         0       0       0       0       0
  8244 ;;      Locals:         2       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0
  8246 ;;      Totals:         2       0       0       0       0
  8247 ;;Total ram usage:        2 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 3
  8250 ;; This function calls:
  8251 ;;		_LM75_readConfig
  8252 ;;		_LM75_setConfig
  8253 ;; This function is called by:
  8254 ;;		_main
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258     1ABA                     _LM75_setDeviceMode:	
  8259                           ;psect for function _LM75_setDeviceMode
  8260                           
  8261                           
  8262                           ;incstack = 0
  8263                           ; Regs used in _LM75_setDeviceMode: [wreg+status,2+status,0+pclath+cstack]
  8264                           ;LM75_setDeviceMode@interruptMode stored from wreg
  8265     1ABA  00F2               	movwf	LM75_setDeviceMode@interruptMode
  8266     1ABB                     l3544:
  8267                           
  8268                           ;LM75.c: 98: void LM75_setDeviceMode(char interruptMode);LM75.c: 99: {;LM75.c: 100:     
      +                          char config = LM75_readConfig();
  8269     1ABB  160A  158A  242F  160A  158A  	fcall	_LM75_readConfig
  8270     1AC0  00F3               	movwf	LM75_setDeviceMode@config
  8271     1AC1                     l3546:
  8272                           
  8273                           ;LM75.c: 101:     if(interruptMode)
  8274     1AC1  0872               	movf	LM75_setDeviceMode@interruptMode,w
  8275     1AC2  1903               	btfsc	3,2
  8276     1AC3  2AC5               	goto	u4861
  8277     1AC4  2AC6               	goto	u4860
  8278     1AC5                     u4861:
  8279     1AC5  2AC8               	goto	l3550
  8280     1AC6                     u4860:
  8281     1AC6                     l3548:
  8282                           
  8283                           ;LM75.c: 102:         config |= 0x02;
  8284     1AC6  14F3               	bsf	LM75_setDeviceMode@config,1
  8285     1AC7  2ACA               	goto	l3552
  8286     1AC8                     l3550:
  8287                           
  8288                           ;LM75.c: 104:         config &= ~0x02;
  8289     1AC8  30FD               	movlw	253
  8290     1AC9  05F3               	andwf	LM75_setDeviceMode@config,f
  8291     1ACA                     l3552:
  8292                           
  8293                           ;LM75.c: 105:     LM75_setConfig(config);
  8294     1ACA  0873               	movf	LM75_setDeviceMode@config,w
  8295     1ACB  160A  158A  22E8  160A  158A  	fcall	_LM75_setConfig
  8296     1AD0                     l222:
  8297     1AD0  0008               	return
  8298     1AD1                     __end_of_LM75_setDeviceMode:
  8299                           
  8300                           	psect	text33
  8301     1AE8                     __ptext33:	
  8302 ;; *************** function _LM75_setConfig *****************
  8303 ;; Defined at:
  8304 ;;		line 33 in file "LM75.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  data            1    wreg     unsigned char 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  data            1    1[COMMON] unsigned char 
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		wreg, status,2, status,0, pclath, cstack
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8318 ;;      Params:         0       0       0       0       0
  8319 ;;      Locals:         1       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0
  8321 ;;      Totals:         1       0       0       0       0
  8322 ;;Total ram usage:        1 bytes
  8323 ;; Hardware stack levels used: 1
  8324 ;; Hardware stack levels required when called: 2
  8325 ;; This function calls:
  8326 ;;		_I2C_Master_Start
  8327 ;;		_I2C_Master_Stop
  8328 ;;		_I2C_Master_Write
  8329 ;; This function is called by:
  8330 ;;		_LM75_setDeviceMode
  8331 ;;		_LM75_setOSPolarity
  8332 ;;		_LM75_setFaultQueue
  8333 ;;		_LM75_setShutdownMode
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337     1AE8                     _LM75_setConfig:	
  8338                           ;psect for function _LM75_setConfig
  8339                           
  8340                           
  8341                           ;incstack = 0
  8342                           ; Regs used in _LM75_setConfig: [wreg+status,2+status,0+pclath+cstack]
  8343                           ;LM75_setConfig@data stored from wreg
  8344     1AE8  00F1               	movwf	LM75_setConfig@data
  8345     1AE9                     l3478:
  8346                           
  8347                           ;LM75.c: 33: void LM75_setConfig(char data);LM75.c: 34: {;LM75.c: 35:     I2C_Master_Sta
      +                          rt();
  8348     1AE9  160A  158A  2216  160A  158A  	fcall	_I2C_Master_Start
  8349                           
  8350                           ;LM75.c: 36:     I2C_Master_Write(0x90);
  8351     1AEE  3090               	movlw	144
  8352     1AEF  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8353                           
  8354                           ;LM75.c: 37:     I2C_Master_Write(0x01);
  8355     1AF4  3001               	movlw	1
  8356     1AF5  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8357                           
  8358                           ;LM75.c: 38:     I2C_Master_Write(data);
  8359     1AFA  0871               	movf	LM75_setConfig@data,w
  8360     1AFB  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8361                           
  8362                           ;LM75.c: 39:     I2C_Master_Stop();
  8363     1B00  120A  118A  2003  160A  158A  	fcall	_I2C_Master_Stop
  8364     1B05                     l202:
  8365     1B05  0008               	return
  8366     1B06                     __end_of_LM75_setConfig:
  8367                           
  8368                           	psect	text34
  8369     1C2F                     __ptext34:	
  8370 ;; *************** function _LM75_readConfig *****************
  8371 ;; Defined at:
  8372 ;;		line 44 in file "LM75.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;		None
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  config          1    1[COMMON] unsigned char 
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  1    wreg      unsigned char 
  8379 ;; Registers used:
  8380 ;;		wreg, status,2, status,0, pclath, cstack
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8386 ;;      Params:         0       0       0       0       0
  8387 ;;      Locals:         1       0       0       0       0
  8388 ;;      Temps:          0       0       0       0       0
  8389 ;;      Totals:         1       0       0       0       0
  8390 ;;Total ram usage:        1 bytes
  8391 ;; Hardware stack levels used: 1
  8392 ;; Hardware stack levels required when called: 2
  8393 ;; This function calls:
  8394 ;;		_I2C_Master_RepeatedStart
  8395 ;;		_I2C_Master_Start
  8396 ;;		_I2C_Master_Stop
  8397 ;;		_I2C_Master_Write
  8398 ;;		_I2C_NACK
  8399 ;;		_I2C_Read_Byte
  8400 ;; This function is called by:
  8401 ;;		_LM75_setDeviceMode
  8402 ;;		_LM75_setOSPolarity
  8403 ;;		_LM75_setFaultQueue
  8404 ;;		_LM75_setShutdownMode
  8405 ;;		_LM75_isShutdown
  8406 ;;		_LM75_getDeviceMode
  8407 ;;		_LM75_getOSPolarity
  8408 ;;		_LM75_getFaultQueue
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412     1C2F                     _LM75_readConfig:	
  8413                           ;psect for function _LM75_readConfig
  8414                           
  8415     1C2F                     l3480:	
  8416                           ;incstack = 0
  8417                           ; Regs used in _LM75_readConfig: [wreg+status,2+status,0+pclath+cstack]
  8418                           
  8419                           
  8420                           ;LM75.c: 46:     I2C_Master_Start();
  8421     1C2F  160A  158A  2216  160A  158A  	fcall	_I2C_Master_Start
  8422                           
  8423                           ;LM75.c: 47:     I2C_Master_Write(0x90);
  8424     1C34  3090               	movlw	144
  8425     1C35  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8426                           
  8427                           ;LM75.c: 48:     I2C_Master_Write(0x01);
  8428     1C3A  3001               	movlw	1
  8429     1C3B  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8430                           
  8431                           ;LM75.c: 49:     I2C_Master_RepeatedStart();
  8432     1C40  160A  158A  220D  160A  158A  	fcall	_I2C_Master_RepeatedStart
  8433                           
  8434                           ;LM75.c: 50:     I2C_Master_Write(0x90 + 1);
  8435     1C45  3091               	movlw	145
  8436     1C46  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  8437                           
  8438                           ;LM75.c: 51:     char config = I2C_Read_Byte();
  8439     1C4B  160A  158A  22A3  160A  158A  	fcall	_I2C_Read_Byte
  8440     1C50  00F1               	movwf	LM75_readConfig@config
  8441                           
  8442                           ;LM75.c: 52:     I2C_NACK();
  8443     1C51  160A  158A  2236  160A  158A  	fcall	_I2C_NACK
  8444                           
  8445                           ;LM75.c: 53:     I2C_Master_Stop();
  8446     1C56  120A  118A  2003  160A  158A  	fcall	_I2C_Master_Stop
  8447     1C5B                     l3482:
  8448                           
  8449                           ;LM75.c: 55:     return config;
  8450     1C5B  0871               	movf	LM75_readConfig@config,w
  8451     1C5C                     l205:
  8452     1C5C  0008               	return
  8453     1C5D                     __end_of_LM75_readConfig:
  8454                           
  8455                           	psect	text35
  8456     19FF                     __ptext35:	
  8457 ;; *************** function _LM75_init *****************
  8458 ;; Defined at:
  8459 ;;		line 6 in file "LM75.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;		None
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		status,2, status,0, pclath, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8473 ;;      Params:         0       0       0       0       0
  8474 ;;      Locals:         0       0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0
  8476 ;;      Totals:         0       0       0       0       0
  8477 ;;Total ram usage:        0 bytes
  8478 ;; Hardware stack levels used: 1
  8479 ;; Hardware stack levels required when called: 1
  8480 ;; This function calls:
  8481 ;;		_I2C_Master_Init
  8482 ;; This function is called by:
  8483 ;;		_main
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487     19FF                     _LM75_init:	
  8488                           ;psect for function _LM75_init
  8489                           
  8490     19FF                     l3498:	
  8491                           ;incstack = 0
  8492                           ; Regs used in _LM75_init: [status,2+status,0+pclath+cstack]
  8493                           
  8494                           
  8495                           ;LM75.c: 8:     I2C_Master_Init();
  8496     19FF  160A  158A  224F  160A  158A  	fcall	_I2C_Master_Init
  8497     1A04                     l196:
  8498     1A04  0008               	return
  8499     1A05                     __end_of_LM75_init:
  8500                           
  8501                           	psect	text36
  8502     1A4F                     __ptext36:	
  8503 ;; *************** function _I2C_Master_Init *****************
  8504 ;; Defined at:
  8505 ;;		line 5 in file "i2c.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		status,2
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8519 ;;      Params:         0       0       0       0       0
  8520 ;;      Locals:         0       0       0       0       0
  8521 ;;      Temps:          0       0       0       0       0
  8522 ;;      Totals:         0       0       0       0       0
  8523 ;;Total ram usage:        0 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_LM75_init
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532     1A4F                     _I2C_Master_Init:	
  8533                           ;psect for function _I2C_Master_Init
  8534                           
  8535     1A4F                     l3462:	
  8536                           ;incstack = 0
  8537                           ; Regs used in _I2C_Master_Init: [status,2]
  8538                           
  8539                           
  8540                           ;i2c.c: 6:     SSPCON = 0x28;
  8541     1A4F  3028               	movlw	40
  8542     1A50  1283               	bcf	3,5	;RP0=0, select bank0
  8543     1A51  1303               	bcf	3,6	;RP1=0, select bank0
  8544     1A52  0094               	movwf	20	;volatile
  8545     1A53                     l3464:
  8546                           
  8547                           ;i2c.c: 7:     SSPCON2 = 0x00;
  8548     1A53  1683               	bsf	3,5	;RP0=1, select bank1
  8549     1A54  1303               	bcf	3,6	;RP1=0, select bank1
  8550     1A55  0191               	clrf	17	;volatile
  8551                           
  8552                           ;i2c.c: 8:     SSPSTAT = 0x00;
  8553     1A56  0194               	clrf	20	;volatile
  8554     1A57                     l3466:
  8555                           
  8556                           ;i2c.c: 9:     SSPADD = ((16000000/4)/100000) - 1;
  8557     1A57  3027               	movlw	39
  8558     1A58  0093               	movwf	19	;volatile
  8559     1A59                     l3468:
  8560                           
  8561                           ;i2c.c: 10:     TRISC3 = 1;
  8562     1A59  1587               	bsf	7,3	;volatile
  8563     1A5A                     l3470:
  8564                           
  8565                           ;i2c.c: 11:     TRISC4 = 1;
  8566     1A5A  1607               	bsf	7,4	;volatile
  8567     1A5B                     l81:
  8568     1A5B  0008               	return
  8569     1A5C                     __end_of_I2C_Master_Init:
  8570                           
  8571                           	psect	text37
  8572     1CF4                     __ptext37:	
  8573 ;; *************** function _LM75_getOSTripTemperature *****************
  8574 ;; Defined at:
  8575 ;;		line 178 in file "LM75.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  rawTemp         1   49[BANK0 ] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  4   41[BANK0 ] float 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8589 ;;      Params:         0       4       0       0       0
  8590 ;;      Locals:         0       1       0       0       0
  8591 ;;      Temps:          0       4       0       0       0
  8592 ;;      Totals:         0       9       0       0       0
  8593 ;;Total ram usage:        9 bytes
  8594 ;; Hardware stack levels used: 1
  8595 ;; Hardware stack levels required when called: 3
  8596 ;; This function calls:
  8597 ;;		_LM75_read
  8598 ;;		___fltol
  8599 ;;		___xxtofl
  8600 ;; This function is called by:
  8601 ;;		_main
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605     1CF4                     _LM75_getOSTripTemperature:	
  8606                           ;psect for function _LM75_getOSTripTemperature
  8607                           
  8608     1CF4                     l3534:	
  8609                           ;incstack = 0
  8610                           ; Regs used in _LM75_getOSTripTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  8611                           
  8612                           
  8613                           ;LM75.c: 180:     unsigned char rawTemp = LM75_read(0x03);
  8614     1CF4  3003               	movlw	3
  8615     1CF5  160A  158A  2625  160A  158A  	fcall	_LM75_read
  8616     1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  8617     1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  8618     1CFC  0837               	movf	?_LM75_read+3,w
  8619     1CFD  00C2               	movwf	___fltol@f1+3
  8620     1CFE  0836               	movf	?_LM75_read+2,w
  8621     1CFF  00C1               	movwf	___fltol@f1+2
  8622     1D00  0835               	movf	?_LM75_read+1,w
  8623     1D01  00C0               	movwf	___fltol@f1+1
  8624     1D02  0834               	movf	?_LM75_read,w
  8625     1D03  00BF               	movwf	___fltol@f1
  8626     1D04  160A  158A  26FD  160A  158A  	fcall	___fltol
  8627     1D09  1283               	bcf	3,5	;RP0=0, select bank0
  8628     1D0A  1303               	bcf	3,6	;RP1=0, select bank0
  8629     1D0B  083F               	movf	?___fltol,w
  8630     1D0C  00D1               	movwf	LM75_getOSTripTemperature@rawTemp
  8631     1D0D                     l3540:	
  8632                           ;LM75.c: 181:     if (rawTemp == -1) return -1000.0f;
  8633                           
  8634                           
  8635                           ;LM75.c: 184:     return (float)rawTemp;
  8636     1D0D  0851               	movf	LM75_getOSTripTemperature@rawTemp,w
  8637     1D0E  00CD               	movwf	??_LM75_getOSTripTemperature
  8638     1D0F  01CE               	clrf	??_LM75_getOSTripTemperature+1
  8639     1D10  01CF               	clrf	??_LM75_getOSTripTemperature+2
  8640     1D11  01D0               	clrf	??_LM75_getOSTripTemperature+3
  8641     1D12  0850               	movf	??_LM75_getOSTripTemperature+3,w
  8642     1D13  00F3               	movwf	___xxtofl@val+3
  8643     1D14  084F               	movf	??_LM75_getOSTripTemperature+2,w
  8644     1D15  00F2               	movwf	___xxtofl@val+2
  8645     1D16  084E               	movf	??_LM75_getOSTripTemperature+1,w
  8646     1D17  00F1               	movwf	___xxtofl@val+1
  8647     1D18  084D               	movf	??_LM75_getOSTripTemperature,w
  8648     1D19  00F0               	movwf	___xxtofl@val
  8649     1D1A  3000               	movlw	0
  8650     1D1B  160A  118A  2102  160A  158A  	fcall	___xxtofl
  8651     1D20  0873               	movf	?___xxtofl+3,w
  8652     1D21  1283               	bcf	3,5	;RP0=0, select bank0
  8653     1D22  1303               	bcf	3,6	;RP1=0, select bank0
  8654     1D23  00CC               	movwf	?_LM75_getOSTripTemperature+3
  8655     1D24  0872               	movf	?___xxtofl+2,w
  8656     1D25  00CB               	movwf	?_LM75_getOSTripTemperature+2
  8657     1D26  0871               	movf	?___xxtofl+1,w
  8658     1D27  00CA               	movwf	?_LM75_getOSTripTemperature+1
  8659     1D28  0870               	movf	?___xxtofl,w
  8660     1D29  00C9               	movwf	?_LM75_getOSTripTemperature
  8661     1D2A                     l257:
  8662     1D2A  0008               	return
  8663     1D2B                     __end_of_LM75_getOSTripTemperature:
  8664                           
  8665                           	psect	text38
  8666     1CBD                     __ptext38:	
  8667 ;; *************** function _LM75_getHysteresisTemperature *****************
  8668 ;; Defined at:
  8669 ;;		line 168 in file "LM75.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;		None
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  rawTemp         1   49[BANK0 ] unsigned char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  4   41[BANK0 ] float 
  8676 ;; Registers used:
  8677 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8683 ;;      Params:         0       4       0       0       0
  8684 ;;      Locals:         0       1       0       0       0
  8685 ;;      Temps:          0       4       0       0       0
  8686 ;;      Totals:         0       9       0       0       0
  8687 ;;Total ram usage:        9 bytes
  8688 ;; Hardware stack levels used: 1
  8689 ;; Hardware stack levels required when called: 3
  8690 ;; This function calls:
  8691 ;;		_LM75_read
  8692 ;;		___fltol
  8693 ;;		___xxtofl
  8694 ;; This function is called by:
  8695 ;;		_main
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699     1CBD                     _LM75_getHysteresisTemperature:	
  8700                           ;psect for function _LM75_getHysteresisTemperature
  8701                           
  8702     1CBD                     l3524:	
  8703                           ;incstack = 0
  8704                           ; Regs used in _LM75_getHysteresisTemperature: [wreg+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  8705                           
  8706                           
  8707                           ;LM75.c: 170:     unsigned char rawTemp = LM75_read(0x02);
  8708     1CBD  3002               	movlw	2
  8709     1CBE  160A  158A  2625  160A  158A  	fcall	_LM75_read
  8710     1CC3  1283               	bcf	3,5	;RP0=0, select bank0
  8711     1CC4  1303               	bcf	3,6	;RP1=0, select bank0
  8712     1CC5  0837               	movf	?_LM75_read+3,w
  8713     1CC6  00C2               	movwf	___fltol@f1+3
  8714     1CC7  0836               	movf	?_LM75_read+2,w
  8715     1CC8  00C1               	movwf	___fltol@f1+2
  8716     1CC9  0835               	movf	?_LM75_read+1,w
  8717     1CCA  00C0               	movwf	___fltol@f1+1
  8718     1CCB  0834               	movf	?_LM75_read,w
  8719     1CCC  00BF               	movwf	___fltol@f1
  8720     1CCD  160A  158A  26FD  160A  158A  	fcall	___fltol
  8721     1CD2  1283               	bcf	3,5	;RP0=0, select bank0
  8722     1CD3  1303               	bcf	3,6	;RP1=0, select bank0
  8723     1CD4  083F               	movf	?___fltol,w
  8724     1CD5  00D1               	movwf	LM75_getHysteresisTemperature@rawTemp
  8725     1CD6                     l3530:	
  8726                           ;LM75.c: 171:     if (rawTemp == -1) return -1000.0f;
  8727                           
  8728                           
  8729                           ;LM75.c: 174:     return (float)rawTemp;
  8730     1CD6  0851               	movf	LM75_getHysteresisTemperature@rawTemp,w
  8731     1CD7  00CD               	movwf	??_LM75_getHysteresisTemperature
  8732     1CD8  01CE               	clrf	??_LM75_getHysteresisTemperature+1
  8733     1CD9  01CF               	clrf	??_LM75_getHysteresisTemperature+2
  8734     1CDA  01D0               	clrf	??_LM75_getHysteresisTemperature+3
  8735     1CDB  0850               	movf	??_LM75_getHysteresisTemperature+3,w
  8736     1CDC  00F3               	movwf	___xxtofl@val+3
  8737     1CDD  084F               	movf	??_LM75_getHysteresisTemperature+2,w
  8738     1CDE  00F2               	movwf	___xxtofl@val+2
  8739     1CDF  084E               	movf	??_LM75_getHysteresisTemperature+1,w
  8740     1CE0  00F1               	movwf	___xxtofl@val+1
  8741     1CE1  084D               	movf	??_LM75_getHysteresisTemperature,w
  8742     1CE2  00F0               	movwf	___xxtofl@val
  8743     1CE3  3000               	movlw	0
  8744     1CE4  160A  118A  2102  160A  158A  	fcall	___xxtofl
  8745     1CE9  0873               	movf	?___xxtofl+3,w
  8746     1CEA  1283               	bcf	3,5	;RP0=0, select bank0
  8747     1CEB  1303               	bcf	3,6	;RP1=0, select bank0
  8748     1CEC  00CC               	movwf	?_LM75_getHysteresisTemperature+3
  8749     1CED  0872               	movf	?___xxtofl+2,w
  8750     1CEE  00CB               	movwf	?_LM75_getHysteresisTemperature+2
  8751     1CEF  0871               	movf	?___xxtofl+1,w
  8752     1CF0  00CA               	movwf	?_LM75_getHysteresisTemperature+1
  8753     1CF1  0870               	movf	?___xxtofl,w
  8754     1CF2  00C9               	movwf	?_LM75_getHysteresisTemperature
  8755     1CF3                     l253:
  8756     1CF3  0008               	return
  8757     1CF4                     __end_of_LM75_getHysteresisTemperature:
  8758                           
  8759                           	psect	text39
  8760     1EFD                     __ptext39:	
  8761 ;; *************** function ___fltol *****************
  8762 ;; Defined at:
  8763 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  f1              4   31[BANK0 ] float 
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;  exp1            1   40[BANK0 ] unsigned char 
  8768 ;;  sign1           1   39[BANK0 ] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  4   31[BANK0 ] long 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8778 ;;      Params:         0       4       0       0       0
  8779 ;;      Locals:         0       2       0       0       0
  8780 ;;      Temps:          0       4       0       0       0
  8781 ;;      Totals:         0      10       0       0       0
  8782 ;;Total ram usage:       10 bytes
  8783 ;; Hardware stack levels used: 1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_LM75_getHysteresisTemperature
  8788 ;;		_LM75_getOSTripTemperature
  8789 ;;		_LM75_setHysteresisTemperature
  8790 ;;		_LM75_setOSTripTemperature
  8791 ;;		_efgtoa
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795     1EFD                     ___fltol:	
  8796                           ;psect for function ___fltol
  8797                           
  8798     1EFD                     l2652:	
  8799                           ;incstack = 0
  8800                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8801                           
  8802     1EFD  1003               	clrc
  8803     1EFE  1283               	bcf	3,5	;RP0=0, select bank0
  8804     1EFF  1303               	bcf	3,6	;RP1=0, select bank0
  8805     1F00  0D41               	rlf	___fltol@f1+2,w
  8806     1F01  0D42               	rlf	___fltol@f1+3,w
  8807     1F02  00C8               	movwf	___fltol@exp1
  8808     1F03  0848               	movf	___fltol@exp1,w
  8809     1F04  1D03               	btfss	3,2
  8810     1F05  2F07               	goto	u3211
  8811     1F06  2F08               	goto	u3210
  8812     1F07                     u3211:
  8813     1F07  2F11               	goto	l2658
  8814     1F08                     u3210:
  8815     1F08                     l2654:
  8816     1F08  3000               	movlw	0
  8817     1F09  00C2               	movwf	?___fltol+3
  8818     1F0A  3000               	movlw	0
  8819     1F0B  00C1               	movwf	?___fltol+2
  8820     1F0C  3000               	movlw	0
  8821     1F0D  00C0               	movwf	?___fltol+1
  8822     1F0E  3000               	movlw	0
  8823     1F0F  00BF               	movwf	?___fltol
  8824     1F10  2F72               	goto	l543
  8825     1F11                     l2658:
  8826     1F11  083F               	movf	___fltol@f1,w
  8827     1F12  00C3               	movwf	??___fltol
  8828     1F13  0840               	movf	___fltol@f1+1,w
  8829     1F14  00C4               	movwf	??___fltol+1
  8830     1F15  0841               	movf	___fltol@f1+2,w
  8831     1F16  00C5               	movwf	??___fltol+2
  8832     1F17  0842               	movf	___fltol@f1+3,w
  8833     1F18  00C6               	movwf	??___fltol+3
  8834     1F19  301F               	movlw	31
  8835     1F1A                     u3225:
  8836     1F1A  1003               	clrc
  8837     1F1B  0CC6               	rrf	??___fltol+3,f
  8838     1F1C  0CC5               	rrf	??___fltol+2,f
  8839     1F1D  0CC4               	rrf	??___fltol+1,f
  8840     1F1E  0CC3               	rrf	??___fltol,f
  8841     1F1F                     u3220:
  8842     1F1F  3EFF               	addlw	-1
  8843     1F20  1D03               	skipz
  8844     1F21  2F1A               	goto	u3225
  8845     1F22  0843               	movf	??___fltol,w
  8846     1F23  00C7               	movwf	___fltol@sign1
  8847     1F24                     l2660:
  8848     1F24  17C1               	bsf	___fltol@f1+2,7
  8849     1F25                     l2662:
  8850     1F25  30FF               	movlw	255
  8851     1F26  05BF               	andwf	___fltol@f1,f
  8852     1F27  30FF               	movlw	255
  8853     1F28  05C0               	andwf	___fltol@f1+1,f
  8854     1F29  30FF               	movlw	255
  8855     1F2A  05C1               	andwf	___fltol@f1+2,f
  8856     1F2B  3000               	movlw	0
  8857     1F2C  05C2               	andwf	___fltol@f1+3,f
  8858     1F2D                     l2664:
  8859     1F2D  3096               	movlw	150
  8860     1F2E  02C8               	subwf	___fltol@exp1,f
  8861     1F2F                     l2666:
  8862     1F2F  1FC8               	btfss	___fltol@exp1,7
  8863     1F30  2F32               	goto	u3231
  8864     1F31  2F33               	goto	u3230
  8865     1F32                     u3231:
  8866     1F32  2F4B               	goto	l2676
  8867     1F33                     u3230:
  8868     1F33                     l2668:
  8869     1F33  0848               	movf	___fltol@exp1,w
  8870     1F34  3A80               	xorlw	128
  8871     1F35  3E97               	addlw	151
  8872     1F36  1803               	skipnc
  8873     1F37  2F39               	goto	u3241
  8874     1F38  2F3A               	goto	u3240
  8875     1F39                     u3241:
  8876     1F39  2F3B               	goto	l2674
  8877     1F3A                     u3240:
  8878     1F3A  2F08               	goto	l2654
  8879     1F3B                     l2674:
  8880     1F3B  3001               	movlw	1
  8881     1F3C                     u3255:
  8882     1F3C  1003               	clrc
  8883     1F3D  0CC2               	rrf	___fltol@f1+3,f
  8884     1F3E  0CC1               	rrf	___fltol@f1+2,f
  8885     1F3F  0CC0               	rrf	___fltol@f1+1,f
  8886     1F40  0CBF               	rrf	___fltol@f1,f
  8887     1F41  3EFF               	addlw	-1
  8888     1F42  1D03               	skipz
  8889     1F43  2F3C               	goto	u3255
  8890     1F44  3001               	movlw	1
  8891     1F45  07C8               	addwf	___fltol@exp1,f
  8892     1F46  1D03               	btfss	3,2
  8893     1F47  2F49               	goto	u3261
  8894     1F48  2F4A               	goto	u3260
  8895     1F49                     u3261:
  8896     1F49  2F3B               	goto	l2674
  8897     1F4A                     u3260:
  8898     1F4A  2F62               	goto	l2684
  8899     1F4B                     l2676:
  8900     1F4B  3020               	movlw	32
  8901     1F4C  0248               	subwf	___fltol@exp1,w
  8902     1F4D  1C03               	skipc
  8903     1F4E  2F50               	goto	u3271
  8904     1F4F  2F51               	goto	u3270
  8905     1F50                     u3271:
  8906     1F50  2F5D               	goto	l550
  8907     1F51                     u3270:
  8908     1F51  2F08               	goto	l2654
  8909     1F52                     l2682:
  8910     1F52  3001               	movlw	1
  8911     1F53  00C3               	movwf	??___fltol
  8912     1F54                     u3285:
  8913     1F54  1003               	clrc
  8914     1F55  0DBF               	rlf	___fltol@f1,f
  8915     1F56  0DC0               	rlf	___fltol@f1+1,f
  8916     1F57  0DC1               	rlf	___fltol@f1+2,f
  8917     1F58  0DC2               	rlf	___fltol@f1+3,f
  8918     1F59  0BC3               	decfsz	??___fltol,f
  8919     1F5A  2F54               	goto	u3285
  8920     1F5B  3001               	movlw	1
  8921     1F5C  02C8               	subwf	___fltol@exp1,f
  8922     1F5D                     l550:
  8923     1F5D  0848               	movf	___fltol@exp1,w
  8924     1F5E  1D03               	btfss	3,2
  8925     1F5F  2F61               	goto	u3291
  8926     1F60  2F62               	goto	u3290
  8927     1F61                     u3291:
  8928     1F61  2F52               	goto	l2682
  8929     1F62                     u3290:
  8930     1F62                     l2684:
  8931     1F62  0847               	movf	___fltol@sign1,w
  8932     1F63  1903               	btfsc	3,2
  8933     1F64  2F66               	goto	u3301
  8934     1F65  2F67               	goto	u3300
  8935     1F66                     u3301:
  8936     1F66  2F72               	goto	l553
  8937     1F67                     u3300:
  8938     1F67                     l2686:
  8939     1F67  09BF               	comf	___fltol@f1,f
  8940     1F68  09C0               	comf	___fltol@f1+1,f
  8941     1F69  09C1               	comf	___fltol@f1+2,f
  8942     1F6A  09C2               	comf	___fltol@f1+3,f
  8943     1F6B  0ABF               	incf	___fltol@f1,f
  8944     1F6C  1903               	skipnz
  8945     1F6D  0AC0               	incf	___fltol@f1+1,f
  8946     1F6E  1903               	skipnz
  8947     1F6F  0AC1               	incf	___fltol@f1+2,f
  8948     1F70  1903               	skipnz
  8949     1F71  0AC2               	incf	___fltol@f1+3,f
  8950     1F72                     l553:
  8951     1F72                     l543:
  8952     1F72  0008               	return
  8953     1F73                     __end_of___fltol:
  8954                           
  8955                           	psect	text40
  8956     1E25                     __ptext40:	
  8957 ;; *************** function _LM75_read *****************
  8958 ;; Defined at:
  8959 ;;		line 13 in file "LM75.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  regAddress      1    wreg     unsigned char 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  regAddress      1   30[BANK0 ] unsigned char 
  8964 ;;  LSB             2   28[BANK0 ] int 
  8965 ;;  MSB             2   26[BANK0 ] int 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  4   20[BANK0 ] float 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8975 ;;      Params:         0       4       0       0       0
  8976 ;;      Locals:         0       5       0       0       0
  8977 ;;      Temps:          0       2       0       0       0
  8978 ;;      Totals:         0      11       0       0       0
  8979 ;;Total ram usage:       11 bytes
  8980 ;; Hardware stack levels used: 1
  8981 ;; Hardware stack levels required when called: 2
  8982 ;; This function calls:
  8983 ;;		_I2C_ACK
  8984 ;;		_I2C_Master_RepeatedStart
  8985 ;;		_I2C_Master_Start
  8986 ;;		_I2C_Master_Stop
  8987 ;;		_I2C_Master_Write
  8988 ;;		_I2C_NACK
  8989 ;;		_I2C_Read_Byte
  8990 ;;		_toFloat
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;;		_LM75_getHysteresisTemperature
  8994 ;;		_LM75_getOSTripTemperature
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998     1E25                     _LM75_read:	
  8999                           ;psect for function _LM75_read
  9000                           
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in _LM75_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9004                           ;LM75_read@regAddress stored from wreg
  9005     1E25  1283               	bcf	3,5	;RP0=0, select bank0
  9006     1E26  1303               	bcf	3,6	;RP1=0, select bank0
  9007     1E27  00BE               	movwf	LM75_read@regAddress
  9008     1E28                     l3456:
  9009                           
  9010                           ;LM75.c: 13: float LM75_read(char regAddress);LM75.c: 14: {;LM75.c: 15:     signed int M
      +                          SB, LSB;;LM75.c: 17:     I2C_Master_Start();
  9011     1E28  160A  158A  2216  160A  158A  	fcall	_I2C_Master_Start
  9012                           
  9013                           ;LM75.c: 18:     I2C_Master_Write(0x90);
  9014     1E2D  3090               	movlw	144
  9015     1E2E  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  9016                           
  9017                           ;LM75.c: 19:     I2C_Master_Write(regAddress);
  9018     1E33  1283               	bcf	3,5	;RP0=0, select bank0
  9019     1E34  1303               	bcf	3,6	;RP1=0, select bank0
  9020     1E35  083E               	movf	LM75_read@regAddress,w
  9021     1E36  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  9022                           
  9023                           ;LM75.c: 20:     I2C_Master_RepeatedStart();
  9024     1E3B  160A  158A  220D  160A  158A  	fcall	_I2C_Master_RepeatedStart
  9025                           
  9026                           ;LM75.c: 21:     I2C_Master_Write(0x90 + 1);
  9027     1E40  3091               	movlw	145
  9028     1E41  160A  158A  225C  160A  158A  	fcall	_I2C_Master_Write
  9029                           
  9030                           ;LM75.c: 22:     MSB = I2C_Read_Byte();
  9031     1E46  160A  158A  22A3  160A  158A  	fcall	_I2C_Read_Byte
  9032     1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  9033     1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  9034     1E4D  00B8               	movwf	??_LM75_read
  9035     1E4E  01B9               	clrf	??_LM75_read+1
  9036     1E4F  0838               	movf	??_LM75_read,w
  9037     1E50  00BA               	movwf	LM75_read@MSB
  9038     1E51  0839               	movf	??_LM75_read+1,w
  9039     1E52  00BB               	movwf	LM75_read@MSB+1
  9040                           
  9041                           ;LM75.c: 23:     I2C_ACK();
  9042     1E53  160A  158A  222A  160A  158A  	fcall	_I2C_ACK
  9043                           
  9044                           ;LM75.c: 24:     LSB = I2C_Read_Byte();
  9045     1E58  160A  158A  22A3  160A  158A  	fcall	_I2C_Read_Byte
  9046     1E5D  1283               	bcf	3,5	;RP0=0, select bank0
  9047     1E5E  1303               	bcf	3,6	;RP1=0, select bank0
  9048     1E5F  00B8               	movwf	??_LM75_read
  9049     1E60  01B9               	clrf	??_LM75_read+1
  9050     1E61  0838               	movf	??_LM75_read,w
  9051     1E62  00BC               	movwf	LM75_read@LSB
  9052     1E63  0839               	movf	??_LM75_read+1,w
  9053     1E64  00BD               	movwf	LM75_read@LSB+1
  9054                           
  9055                           ;LM75.c: 25:     I2C_NACK();
  9056     1E65  160A  158A  2236  160A  158A  	fcall	_I2C_NACK
  9057                           
  9058                           ;LM75.c: 26:     I2C_Master_Stop();
  9059     1E6A  120A  118A  2003  160A  158A  	fcall	_I2C_Master_Stop
  9060     1E6F                     l3458:
  9061                           
  9062                           ;LM75.c: 28:     return toFloat((MSB << 8) + LSB);
  9063     1E6F  1283               	bcf	3,5	;RP0=0, select bank0
  9064     1E70  1303               	bcf	3,6	;RP1=0, select bank0
  9065     1E71  083B               	movf	LM75_read@MSB+1,w
  9066     1E72  00B9               	movwf	??_LM75_read+1
  9067     1E73  083A               	movf	LM75_read@MSB,w
  9068     1E74  00B8               	movwf	??_LM75_read
  9069     1E75  0838               	movf	??_LM75_read,w
  9070     1E76  00B9               	movwf	??_LM75_read+1
  9071     1E77  01B8               	clrf	??_LM75_read
  9072     1E78  083C               	movf	LM75_read@LSB,w
  9073     1E79  0738               	addwf	??_LM75_read,w
  9074     1E7A  00A8               	movwf	toFloat@tempr
  9075     1E7B  083D               	movf	LM75_read@LSB+1,w
  9076     1E7C  1803               	skipnc
  9077     1E7D  0A3D               	incf	LM75_read@LSB+1,w
  9078     1E7E  0739               	addwf	??_LM75_read+1,w
  9079     1E7F  00A9               	movwf	toFloat@tempr+1
  9080     1E80  160A  118A  2007  160A  158A  	fcall	_toFloat
  9081     1E85  1283               	bcf	3,5	;RP0=0, select bank0
  9082     1E86  1303               	bcf	3,6	;RP1=0, select bank0
  9083     1E87  082B               	movf	?_toFloat+3,w
  9084     1E88  00B7               	movwf	?_LM75_read+3
  9085     1E89  082A               	movf	?_toFloat+2,w
  9086     1E8A  00B6               	movwf	?_LM75_read+2
  9087     1E8B  0829               	movf	?_toFloat+1,w
  9088     1E8C  00B5               	movwf	?_LM75_read+1
  9089     1E8D  0828               	movf	?_toFloat,w
  9090     1E8E  00B4               	movwf	?_LM75_read
  9091     1E8F                     l199:
  9092     1E8F  0008               	return
  9093     1E90                     __end_of_LM75_read:
  9094                           
  9095                           	psect	text41
  9096     1007                     __ptext41:	
  9097 ;; *************** function _toFloat *****************
  9098 ;; Defined at:
  9099 ;;		line 72 in file "LM75.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  tempr           2    8[BANK0 ] int 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  result          4   16[BANK0 ] float 
  9104 ;;  isfraction      1   15[BANK0 ] unsigned char 
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  4    8[BANK0 ] float 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9114 ;;      Params:         0       4       0       0       0
  9115 ;;      Locals:         0       5       0       0       0
  9116 ;;      Temps:          0       3       0       0       0
  9117 ;;      Totals:         0      12       0       0       0
  9118 ;;Total ram usage:       12 bytes
  9119 ;; Hardware stack levels used: 1
  9120 ;; Hardware stack levels required when called: 1
  9121 ;; This function calls:
  9122 ;;		___fladd
  9123 ;;		___xxtofl
  9124 ;; This function is called by:
  9125 ;;		_LM75_read
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129     1007                     _toFloat:	
  9130                           ;psect for function _toFloat
  9131                           
  9132     1007                     l3386:	
  9133                           ;incstack = 0
  9134                           ; Regs used in _toFloat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9135                           
  9136                           
  9137                           ;LM75.c: 72: float toFloat(signed int tempr);LM75.c: 73: {;LM75.c: 74:     float result 
      +                          = (float)(tempr >> 8);
  9138     1007  1283               	bcf	3,5	;RP0=0, select bank0
  9139     1008  1303               	bcf	3,6	;RP1=0, select bank0
  9140     1009  0829               	movf	toFloat@tempr+1,w
  9141     100A  00AD               	movwf	??_toFloat+1
  9142     100B  0828               	movf	toFloat@tempr,w
  9143     100C  00AC               	movwf	??_toFloat
  9144     100D  3008               	movlw	8
  9145     100E  00AE               	movwf	??_toFloat+2
  9146     100F                     u4785:
  9147     100F  0D2D               	rlf	??_toFloat+1,w
  9148     1010  0CAD               	rrf	??_toFloat+1,f
  9149     1011  0CAC               	rrf	??_toFloat,f
  9150     1012  0BAE               	decfsz	??_toFloat+2,f
  9151     1013  280F               	goto	u4785
  9152     1014  082C               	movf	??_toFloat,w
  9153     1015  00F0               	movwf	___xxtofl@val
  9154     1016  082D               	movf	??_toFloat+1,w
  9155     1017  00F1               	movwf	___xxtofl@val+1
  9156     1018  3000               	movlw	0
  9157     1019  1BF1               	btfsc	___xxtofl@val+1,7
  9158     101A  30FF               	movlw	255
  9159     101B  00F2               	movwf	___xxtofl@val+2
  9160     101C  00F3               	movwf	___xxtofl@val+3
  9161     101D  3001               	movlw	1
  9162     101E  160A  118A  2102  160A  118A  	fcall	___xxtofl
  9163     1023  0873               	movf	?___xxtofl+3,w
  9164     1024  1283               	bcf	3,5	;RP0=0, select bank0
  9165     1025  1303               	bcf	3,6	;RP1=0, select bank0
  9166     1026  00B3               	movwf	toFloat@result+3
  9167     1027  0872               	movf	?___xxtofl+2,w
  9168     1028  00B2               	movwf	toFloat@result+2
  9169     1029  0871               	movf	?___xxtofl+1,w
  9170     102A  00B1               	movwf	toFloat@result+1
  9171     102B  0870               	movf	?___xxtofl,w
  9172     102C  00B0               	movwf	toFloat@result
  9173     102D                     l3388:
  9174                           
  9175                           ;LM75.c: 75:     char isfraction = tempr & 0x0080;
  9176     102D  0828               	movf	toFloat@tempr,w
  9177     102E  00AF               	movwf	toFloat@isfraction
  9178     102F                     l3390:
  9179     102F  3080               	movlw	128
  9180     1030  05AF               	andwf	toFloat@isfraction,f
  9181     1031                     l3392:
  9182                           
  9183                           ;LM75.c: 77:     if (isfraction)
  9184     1031  082F               	movf	toFloat@isfraction,w
  9185     1032  1903               	btfsc	3,2
  9186     1033  2835               	goto	u4791
  9187     1034  2836               	goto	u4790
  9188     1035                     u4791:
  9189     1035  2855               	goto	l3396
  9190     1036                     u4790:
  9191     1036                     l3394:
  9192                           
  9193                           ;LM75.c: 78:         {;LM75.c: 79:         result += 0.5;
  9194     1036  303F               	movlw	63
  9195     1037  00F3               	movwf	___fladd@b+3
  9196     1038  3000               	movlw	0
  9197     1039  00F2               	movwf	___fladd@b+2
  9198     103A  3000               	movlw	0
  9199     103B  00F1               	movwf	___fladd@b+1
  9200     103C  3000               	movlw	0
  9201     103D  00F0               	movwf	___fladd@b
  9202     103E  0833               	movf	toFloat@result+3,w
  9203     103F  00F7               	movwf	___fladd@a+3
  9204     1040  0832               	movf	toFloat@result+2,w
  9205     1041  00F6               	movwf	___fladd@a+2
  9206     1042  0831               	movf	toFloat@result+1,w
  9207     1043  00F5               	movwf	___fladd@a+1
  9208     1044  0830               	movf	toFloat@result,w
  9209     1045  00F4               	movwf	___fladd@a
  9210     1046  160A  118A  25A4  160A  118A  	fcall	___fladd
  9211     104B  0873               	movf	?___fladd+3,w
  9212     104C  1283               	bcf	3,5	;RP0=0, select bank0
  9213     104D  1303               	bcf	3,6	;RP1=0, select bank0
  9214     104E  00B3               	movwf	toFloat@result+3
  9215     104F  0872               	movf	?___fladd+2,w
  9216     1050  00B2               	movwf	toFloat@result+2
  9217     1051  0871               	movf	?___fladd+1,w
  9218     1052  00B1               	movwf	toFloat@result+1
  9219     1053  0870               	movf	?___fladd,w
  9220     1054  00B0               	movwf	toFloat@result
  9221     1055                     l3396:
  9222                           
  9223                           ;LM75.c: 82:     return result;
  9224     1055  0833               	movf	toFloat@result+3,w
  9225     1056  00AB               	movwf	?_toFloat+3
  9226     1057  0832               	movf	toFloat@result+2,w
  9227     1058  00AA               	movwf	?_toFloat+2
  9228     1059  0831               	movf	toFloat@result+1,w
  9229     105A  00A9               	movwf	?_toFloat+1
  9230     105B  0830               	movf	toFloat@result,w
  9231     105C  00A8               	movwf	?_toFloat
  9232     105D                     l212:
  9233     105D  0008               	return
  9234     105E                     __end_of_toFloat:
  9235                           
  9236                           	psect	text42
  9237     1102                     __ptext42:	
  9238 ;; *************** function ___xxtofl *****************
  9239 ;; Defined at:
  9240 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  sign            1    wreg     unsigned char 
  9243 ;;  val             4    0[COMMON] long 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  sign            1    8[COMMON] unsigned char 
  9246 ;;  arg             4   10[COMMON] unsigned long 
  9247 ;;  exp             1    9[COMMON] unsigned char 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  4    0[COMMON] unsigned char 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2, status,0
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9257 ;;      Params:         4       0       0       0       0
  9258 ;;      Locals:         6       0       0       0       0
  9259 ;;      Temps:          4       0       0       0       0
  9260 ;;      Totals:        14       0       0       0       0
  9261 ;;Total ram usage:       14 bytes
  9262 ;; Hardware stack levels used: 1
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_toFloat
  9267 ;;		_LM75_getHysteresisTemperature
  9268 ;;		_LM75_getOSTripTemperature
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272     1102                     ___xxtofl:	
  9273                           ;psect for function ___xxtofl
  9274                           
  9275                           
  9276                           ;incstack = 0
  9277                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9278                           ;___xxtofl@sign stored from wreg
  9279     1102  00F8               	movwf	___xxtofl@sign
  9280     1103                     l3070:
  9281     1103  0878               	movf	___xxtofl@sign,w
  9282     1104  1903               	btfsc	3,2
  9283     1105  2907               	goto	u4251
  9284     1106  2908               	goto	u4250
  9285     1107                     u4251:
  9286     1107  291C               	goto	l3076
  9287     1108                     u4250:
  9288     1108                     l3072:
  9289     1108  1FF3               	btfss	___xxtofl@val+3,7
  9290     1109  290B               	goto	u4261
  9291     110A  290C               	goto	u4260
  9292     110B                     u4261:
  9293     110B  291C               	goto	l3076
  9294     110C                     u4260:
  9295     110C                     l3074:
  9296     110C  0970               	comf	___xxtofl@val,w
  9297     110D  00FA               	movwf	___xxtofl@arg
  9298     110E  0971               	comf	___xxtofl@val+1,w
  9299     110F  00FB               	movwf	___xxtofl@arg+1
  9300     1110  0972               	comf	___xxtofl@val+2,w
  9301     1111  00FC               	movwf	___xxtofl@arg+2
  9302     1112  0973               	comf	___xxtofl@val+3,w
  9303     1113  00FD               	movwf	___xxtofl@arg+3
  9304     1114  0AFA               	incf	___xxtofl@arg,f
  9305     1115  1903               	skipnz
  9306     1116  0AFB               	incf	___xxtofl@arg+1,f
  9307     1117  1903               	skipnz
  9308     1118  0AFC               	incf	___xxtofl@arg+2,f
  9309     1119  1903               	skipnz
  9310     111A  0AFD               	incf	___xxtofl@arg+3,f
  9311     111B  2924               	goto	l790
  9312     111C                     l3076:
  9313     111C  0873               	movf	___xxtofl@val+3,w
  9314     111D  00FD               	movwf	___xxtofl@arg+3
  9315     111E  0872               	movf	___xxtofl@val+2,w
  9316     111F  00FC               	movwf	___xxtofl@arg+2
  9317     1120  0871               	movf	___xxtofl@val+1,w
  9318     1121  00FB               	movwf	___xxtofl@arg+1
  9319     1122  0870               	movf	___xxtofl@val,w
  9320     1123  00FA               	movwf	___xxtofl@arg
  9321     1124                     l790:
  9322     1124  0873               	movf	___xxtofl@val+3,w
  9323     1125  0472               	iorwf	___xxtofl@val+2,w
  9324     1126  0471               	iorwf	___xxtofl@val+1,w
  9325     1127  0470               	iorwf	___xxtofl@val,w
  9326     1128  1D03               	skipz
  9327     1129  292B               	goto	u4271
  9328     112A  292C               	goto	u4270
  9329     112B                     u4271:
  9330     112B  2935               	goto	l791
  9331     112C                     u4270:
  9332     112C                     l3078:
  9333     112C  3000               	movlw	0
  9334     112D  00F3               	movwf	?___xxtofl+3
  9335     112E  3000               	movlw	0
  9336     112F  00F2               	movwf	?___xxtofl+2
  9337     1130  3000               	movlw	0
  9338     1131  00F1               	movwf	?___xxtofl+1
  9339     1132  3000               	movlw	0
  9340     1133  00F0               	movwf	?___xxtofl
  9341     1134  29B5               	goto	l792
  9342     1135                     l791:
  9343     1135  3096               	movlw	150
  9344     1136  00F9               	movwf	___xxtofl@exp
  9345     1137  2943               	goto	l3084
  9346     1138                     l3082:
  9347     1138  3001               	movlw	1
  9348     1139  07F9               	addwf	___xxtofl@exp,f
  9349     113A  3001               	movlw	1
  9350     113B                     u4285:
  9351     113B  1003               	clrc
  9352     113C  0CFD               	rrf	___xxtofl@arg+3,f
  9353     113D  0CFC               	rrf	___xxtofl@arg+2,f
  9354     113E  0CFB               	rrf	___xxtofl@arg+1,f
  9355     113F  0CFA               	rrf	___xxtofl@arg,f
  9356     1140  3EFF               	addlw	-1
  9357     1141  1D03               	skipz
  9358     1142  293B               	goto	u4285
  9359     1143                     l3084:
  9360     1143  30FE               	movlw	254
  9361     1144  057D               	andwf	___xxtofl@arg+3,w
  9362     1145  1D03               	btfss	3,2
  9363     1146  2948               	goto	u4291
  9364     1147  2949               	goto	u4290
  9365     1148                     u4291:
  9366     1148  2938               	goto	l3082
  9367     1149                     u4290:
  9368     1149  2963               	goto	l796
  9369     114A                     l3086:
  9370     114A  3001               	movlw	1
  9371     114B  07F9               	addwf	___xxtofl@exp,f
  9372     114C                     l3088:
  9373     114C  3001               	movlw	1
  9374     114D  07FA               	addwf	___xxtofl@arg,f
  9375     114E  3000               	movlw	0
  9376     114F  1803               	skipnc
  9377     1150  3001               	movlw	1
  9378     1151  07FB               	addwf	___xxtofl@arg+1,f
  9379     1152  3000               	movlw	0
  9380     1153  1803               	skipnc
  9381     1154  3001               	movlw	1
  9382     1155  07FC               	addwf	___xxtofl@arg+2,f
  9383     1156  3000               	movlw	0
  9384     1157  1803               	skipnc
  9385     1158  3001               	movlw	1
  9386     1159  07FD               	addwf	___xxtofl@arg+3,f
  9387     115A                     l3090:
  9388     115A  3001               	movlw	1
  9389     115B                     u4305:
  9390     115B  1003               	clrc
  9391     115C  0CFD               	rrf	___xxtofl@arg+3,f
  9392     115D  0CFC               	rrf	___xxtofl@arg+2,f
  9393     115E  0CFB               	rrf	___xxtofl@arg+1,f
  9394     115F  0CFA               	rrf	___xxtofl@arg,f
  9395     1160  3EFF               	addlw	-1
  9396     1161  1D03               	skipz
  9397     1162  295B               	goto	u4305
  9398     1163                     l796:
  9399     1163  30FF               	movlw	255
  9400     1164  057D               	andwf	___xxtofl@arg+3,w
  9401     1165  1D03               	btfss	3,2
  9402     1166  2968               	goto	u4311
  9403     1167  2969               	goto	u4310
  9404     1168                     u4311:
  9405     1168  294A               	goto	l3086
  9406     1169                     u4310:
  9407     1169  2975               	goto	l3094
  9408     116A                     l3092:
  9409     116A  3001               	movlw	1
  9410     116B  02F9               	subwf	___xxtofl@exp,f
  9411     116C  3001               	movlw	1
  9412     116D  00F4               	movwf	??___xxtofl
  9413     116E                     u4325:
  9414     116E  1003               	clrc
  9415     116F  0DFA               	rlf	___xxtofl@arg,f
  9416     1170  0DFB               	rlf	___xxtofl@arg+1,f
  9417     1171  0DFC               	rlf	___xxtofl@arg+2,f
  9418     1172  0DFD               	rlf	___xxtofl@arg+3,f
  9419     1173  0BF4               	decfsz	??___xxtofl,f
  9420     1174  296E               	goto	u4325
  9421     1175                     l3094:
  9422     1175  1BFC               	btfsc	___xxtofl@arg+2,7
  9423     1176  2978               	goto	u4331
  9424     1177  2979               	goto	u4330
  9425     1178                     u4331:
  9426     1178  297F               	goto	l803
  9427     1179                     u4330:
  9428     1179                     l3096:
  9429     1179  3002               	movlw	2
  9430     117A  0279               	subwf	___xxtofl@exp,w
  9431     117B  1803               	skipnc
  9432     117C  297E               	goto	u4341
  9433     117D  297F               	goto	u4340
  9434     117E                     u4341:
  9435     117E  296A               	goto	l3092
  9436     117F                     u4340:
  9437     117F                     l803:
  9438     117F  1879               	btfsc	___xxtofl@exp,0
  9439     1180  2982               	goto	u4351
  9440     1181  2983               	goto	u4350
  9441     1182                     u4351:
  9442     1182  298B               	goto	l804
  9443     1183                     u4350:
  9444     1183                     l3098:
  9445     1183  30FF               	movlw	255
  9446     1184  05FA               	andwf	___xxtofl@arg,f
  9447     1185  30FF               	movlw	255
  9448     1186  05FB               	andwf	___xxtofl@arg+1,f
  9449     1187  307F               	movlw	127
  9450     1188  05FC               	andwf	___xxtofl@arg+2,f
  9451     1189  30FF               	movlw	255
  9452     118A  05FD               	andwf	___xxtofl@arg+3,f
  9453     118B                     l804:
  9454     118B  1003               	clrc
  9455     118C  0CF9               	rrf	___xxtofl@exp,f
  9456     118D                     l3100:
  9457     118D  0879               	movf	___xxtofl@exp,w
  9458     118E  00F4               	movwf	??___xxtofl
  9459     118F  01F5               	clrf	??___xxtofl+1
  9460     1190  01F6               	clrf	??___xxtofl+2
  9461     1191  01F7               	clrf	??___xxtofl+3
  9462     1192  3018               	movlw	24
  9463     1193                     u4365:
  9464     1193  1003               	clrc
  9465     1194  0DF4               	rlf	??___xxtofl,f
  9466     1195  0DF5               	rlf	??___xxtofl+1,f
  9467     1196  0DF6               	rlf	??___xxtofl+2,f
  9468     1197  0DF7               	rlf	??___xxtofl+3,f
  9469     1198                     u4360:
  9470     1198  3EFF               	addlw	-1
  9471     1199  1D03               	skipz
  9472     119A  2993               	goto	u4365
  9473     119B  0874               	movf	??___xxtofl,w
  9474     119C  04FA               	iorwf	___xxtofl@arg,f
  9475     119D  0875               	movf	??___xxtofl+1,w
  9476     119E  04FB               	iorwf	___xxtofl@arg+1,f
  9477     119F  0876               	movf	??___xxtofl+2,w
  9478     11A0  04FC               	iorwf	___xxtofl@arg+2,f
  9479     11A1  0877               	movf	??___xxtofl+3,w
  9480     11A2  04FD               	iorwf	___xxtofl@arg+3,f
  9481     11A3                     l3102:
  9482     11A3  0878               	movf	___xxtofl@sign,w
  9483     11A4  1903               	btfsc	3,2
  9484     11A5  29A7               	goto	u4371
  9485     11A6  29A8               	goto	u4370
  9486     11A7                     u4371:
  9487     11A7  29AD               	goto	l3108
  9488     11A8                     u4370:
  9489     11A8                     l3104:
  9490     11A8  1FF3               	btfss	___xxtofl@val+3,7
  9491     11A9  29AB               	goto	u4381
  9492     11AA  29AC               	goto	u4380
  9493     11AB                     u4381:
  9494     11AB  29AD               	goto	l3108
  9495     11AC                     u4380:
  9496     11AC                     l3106:
  9497     11AC  17FD               	bsf	___xxtofl@arg+3,7
  9498     11AD                     l3108:
  9499     11AD  087D               	movf	___xxtofl@arg+3,w
  9500     11AE  00F3               	movwf	?___xxtofl+3
  9501     11AF  087C               	movf	___xxtofl@arg+2,w
  9502     11B0  00F2               	movwf	?___xxtofl+2
  9503     11B1  087B               	movf	___xxtofl@arg+1,w
  9504     11B2  00F1               	movwf	?___xxtofl+1
  9505     11B3  087A               	movf	___xxtofl@arg,w
  9506     11B4  00F0               	movwf	?___xxtofl
  9507     11B5                     l792:
  9508     11B5  0008               	return
  9509     11B6                     __end_of___xxtofl:
  9510                           
  9511                           	psect	text43
  9512     15A4                     __ptext43:	
  9513 ;; *************** function ___fladd *****************
  9514 ;; Defined at:
  9515 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  b               4    0[COMMON] unsigned char 
  9518 ;;  a               4    4[COMMON] unsigned char 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  grs             1   11[COMMON] unsigned char 
  9521 ;;  bexp            1   10[COMMON] unsigned char 
  9522 ;;  aexp            1    9[COMMON] unsigned char 
  9523 ;;  signs           1    8[COMMON] unsigned char 
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  4    0[COMMON] unsigned char 
  9526 ;; Registers used:
  9527 ;;		wreg, status,2, status,0, btemp+1
  9528 ;; Tracked objects:
  9529 ;;		On entry : 0/0
  9530 ;;		On exit  : 0/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9533 ;;      Params:         8       0       0       0       0
  9534 ;;      Locals:         4       0       0       0       0
  9535 ;;      Temps:          0       8       0       0       0
  9536 ;;      Totals:        12       8       0       0       0
  9537 ;;Total ram usage:       20 bytes
  9538 ;; Hardware stack levels used: 1
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_toFloat
  9543 ;;		___flsub
  9544 ;;		_efgtoa
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548     15A4                     ___fladd:	
  9549                           ;psect for function ___fladd
  9550                           
  9551     15A4                     l2378:	
  9552                           ;incstack = 0
  9553                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9554                           
  9555     15A4  0873               	movf	___fladd@b+3,w
  9556     15A5  00F8               	movwf	___fladd@signs
  9557     15A6                     l2380:
  9558     15A6  3080               	movlw	128
  9559     15A7  05F8               	andwf	___fladd@signs,f
  9560     15A8                     l2382:
  9561     15A8  0873               	movf	___fladd@b+3,w
  9562     15A9  1283               	bcf	3,5	;RP0=0, select bank0
  9563     15AA  1303               	bcf	3,6	;RP1=0, select bank0
  9564     15AB  00A0               	movwf	??___fladd
  9565     15AC  0720               	addwf	??___fladd,w
  9566     15AD  00FA               	movwf	___fladd@bexp
  9567     15AE                     l2384:
  9568     15AE  1FF2               	btfss	___fladd@b+2,7
  9569     15AF  2DB1               	goto	u2561
  9570     15B0  2DB2               	goto	u2560
  9571     15B1                     u2561:
  9572     15B1  2DB3               	goto	l2388
  9573     15B2                     u2560:
  9574     15B2                     l2386:
  9575     15B2  147A               	bsf	___fladd@bexp,0
  9576     15B3                     l2388:
  9577     15B3  087A               	movf	___fladd@bexp,w
  9578     15B4  1903               	btfsc	3,2
  9579     15B5  2DB7               	goto	u2571
  9580     15B6  2DB8               	goto	u2570
  9581     15B7                     u2571:
  9582     15B7  2DC8               	goto	l2398
  9583     15B8                     u2570:
  9584     15B8                     l2390:
  9585     15B8  0A7A               	incf	___fladd@bexp,w
  9586     15B9  1D03               	btfss	3,2
  9587     15BA  2DBC               	goto	u2581
  9588     15BB  2DBD               	goto	u2580
  9589     15BC                     u2581:
  9590     15BC  2DC5               	goto	l2394
  9591     15BD                     u2580:
  9592     15BD                     l2392:
  9593     15BD  3000               	movlw	0
  9594     15BE  00F3               	movwf	___fladd@b+3
  9595     15BF  3000               	movlw	0
  9596     15C0  00F2               	movwf	___fladd@b+2
  9597     15C1  3000               	movlw	0
  9598     15C2  00F1               	movwf	___fladd@b+1
  9599     15C3  3000               	movlw	0
  9600     15C4  00F0               	movwf	___fladd@b
  9601     15C5                     l2394:
  9602     15C5  17F2               	bsf	___fladd@b+2,7
  9603     15C6                     l2396:
  9604     15C6  01F3               	clrf	___fladd@b+3
  9605     15C7  2DD0               	goto	l645
  9606     15C8                     l2398:
  9607     15C8  3000               	movlw	0
  9608     15C9  00F3               	movwf	___fladd@b+3
  9609     15CA  3000               	movlw	0
  9610     15CB  00F2               	movwf	___fladd@b+2
  9611     15CC  3000               	movlw	0
  9612     15CD  00F1               	movwf	___fladd@b+1
  9613     15CE  3000               	movlw	0
  9614     15CF  00F0               	movwf	___fladd@b
  9615     15D0                     l645:
  9616     15D0  0877               	movf	___fladd@a+3,w
  9617     15D1  00F9               	movwf	___fladd@aexp
  9618     15D2                     l2400:
  9619     15D2  3080               	movlw	128
  9620     15D3  05F9               	andwf	___fladd@aexp,f
  9621     15D4                     l2402:
  9622     15D4  0879               	movf	___fladd@aexp,w
  9623     15D5  0678               	xorwf	___fladd@signs,w
  9624     15D6  1903               	skipnz
  9625     15D7  2DD9               	goto	u2591
  9626     15D8  2DDA               	goto	u2590
  9627     15D9                     u2591:
  9628     15D9  2DDB               	goto	l2406
  9629     15DA                     u2590:
  9630     15DA                     l2404:
  9631     15DA  1778               	bsf	___fladd@signs,6
  9632     15DB                     l2406:
  9633     15DB  0877               	movf	___fladd@a+3,w
  9634     15DC  00A0               	movwf	??___fladd
  9635     15DD  0720               	addwf	??___fladd,w
  9636     15DE  00F9               	movwf	___fladd@aexp
  9637     15DF                     l2408:
  9638     15DF  1FF6               	btfss	___fladd@a+2,7
  9639     15E0  2DE2               	goto	u2601
  9640     15E1  2DE3               	goto	u2600
  9641     15E2                     u2601:
  9642     15E2  2DE4               	goto	l2412
  9643     15E3                     u2600:
  9644     15E3                     l2410:
  9645     15E3  1479               	bsf	___fladd@aexp,0
  9646     15E4                     l2412:
  9647     15E4  0879               	movf	___fladd@aexp,w
  9648     15E5  1903               	btfsc	3,2
  9649     15E6  2DE8               	goto	u2611
  9650     15E7  2DE9               	goto	u2610
  9651     15E8                     u2611:
  9652     15E8  2DF9               	goto	l2422
  9653     15E9                     u2610:
  9654     15E9                     l2414:
  9655     15E9  0A79               	incf	___fladd@aexp,w
  9656     15EA  1D03               	btfss	3,2
  9657     15EB  2DED               	goto	u2621
  9658     15EC  2DEE               	goto	u2620
  9659     15ED                     u2621:
  9660     15ED  2DF6               	goto	l2418
  9661     15EE                     u2620:
  9662     15EE                     l2416:
  9663     15EE  3000               	movlw	0
  9664     15EF  00F7               	movwf	___fladd@a+3
  9665     15F0  3000               	movlw	0
  9666     15F1  00F6               	movwf	___fladd@a+2
  9667     15F2  3000               	movlw	0
  9668     15F3  00F5               	movwf	___fladd@a+1
  9669     15F4  3000               	movlw	0
  9670     15F5  00F4               	movwf	___fladd@a
  9671     15F6                     l2418:
  9672     15F6  17F6               	bsf	___fladd@a+2,7
  9673     15F7                     l2420:
  9674     15F7  01F7               	clrf	___fladd@a+3
  9675     15F8  2E01               	goto	l650
  9676     15F9                     l2422:
  9677     15F9  3000               	movlw	0
  9678     15FA  00F7               	movwf	___fladd@a+3
  9679     15FB  3000               	movlw	0
  9680     15FC  00F6               	movwf	___fladd@a+2
  9681     15FD  3000               	movlw	0
  9682     15FE  00F5               	movwf	___fladd@a+1
  9683     15FF  3000               	movlw	0
  9684     1600  00F4               	movwf	___fladd@a
  9685     1601                     l650:
  9686     1601  087A               	movf	___fladd@bexp,w
  9687     1602  0279               	subwf	___fladd@aexp,w
  9688     1603  1803               	skipnc
  9689     1604  2E06               	goto	u2631
  9690     1605  2E07               	goto	u2630
  9691     1606                     u2631:
  9692     1606  2E2B               	goto	l2458
  9693     1607                     u2630:
  9694     1607                     l2424:
  9695     1607  1F78               	btfss	___fladd@signs,6
  9696     1608  2E0A               	goto	u2641
  9697     1609  2E0B               	goto	u2640
  9698     160A                     u2641:
  9699     160A  2E0D               	goto	l2428
  9700     160B                     u2640:
  9701     160B                     l2426:
  9702     160B  3080               	movlw	128
  9703     160C  06F8               	xorwf	___fladd@signs,f
  9704     160D                     l2428:
  9705     160D  087A               	movf	___fladd@bexp,w
  9706     160E  00FB               	movwf	___fladd@grs
  9707     160F                     l2430:
  9708     160F  0879               	movf	___fladd@aexp,w
  9709     1610  00FA               	movwf	___fladd@bexp
  9710     1611                     l2432:
  9711     1611  087B               	movf	___fladd@grs,w
  9712     1612  00F9               	movwf	___fladd@aexp
  9713     1613                     l2434:
  9714     1613  0870               	movf	___fladd@b,w
  9715     1614  00FB               	movwf	___fladd@grs
  9716     1615                     l2436:
  9717     1615  0874               	movf	___fladd@a,w
  9718     1616  00F0               	movwf	___fladd@b
  9719     1617                     l2438:
  9720     1617  087B               	movf	___fladd@grs,w
  9721     1618  00F4               	movwf	___fladd@a
  9722     1619                     l2440:
  9723     1619  0871               	movf	___fladd@b+1,w
  9724     161A  00FB               	movwf	___fladd@grs
  9725     161B                     l2442:
  9726     161B  0875               	movf	___fladd@a+1,w
  9727     161C  00F1               	movwf	___fladd@b+1
  9728     161D                     l2444:
  9729     161D  087B               	movf	___fladd@grs,w
  9730     161E  00F5               	movwf	___fladd@a+1
  9731     161F                     l2446:
  9732     161F  0872               	movf	___fladd@b+2,w
  9733     1620  00FB               	movwf	___fladd@grs
  9734     1621                     l2448:
  9735     1621  0876               	movf	___fladd@a+2,w
  9736     1622  00F2               	movwf	___fladd@b+2
  9737     1623                     l2450:
  9738     1623  087B               	movf	___fladd@grs,w
  9739     1624  00F6               	movwf	___fladd@a+2
  9740     1625                     l2452:
  9741     1625  0873               	movf	___fladd@b+3,w
  9742     1626  00FB               	movwf	___fladd@grs
  9743     1627                     l2454:
  9744     1627  0877               	movf	___fladd@a+3,w
  9745     1628  00F3               	movwf	___fladd@b+3
  9746     1629                     l2456:
  9747     1629  087B               	movf	___fladd@grs,w
  9748     162A  00F7               	movwf	___fladd@a+3
  9749     162B                     l2458:
  9750     162B  01FB               	clrf	___fladd@grs
  9751     162C                     l2460:
  9752     162C  0879               	movf	___fladd@aexp,w
  9753     162D  00A0               	movwf	??___fladd
  9754     162E  01A1               	clrf	??___fladd+1
  9755     162F  0821               	movf	??___fladd+1,w
  9756     1630  00A3               	movwf	??___fladd+3
  9757     1631  087A               	movf	___fladd@bexp,w
  9758     1632  0220               	subwf	??___fladd,w
  9759     1633  00A2               	movwf	??___fladd+2
  9760     1634  1C03               	skipc
  9761     1635  03A3               	decf	??___fladd+3,f
  9762     1636  0823               	movf	??___fladd+3,w
  9763     1637  3A80               	xorlw	128
  9764     1638  00FF               	movwf	btemp+1
  9765     1639  3080               	movlw	128
  9766     163A  027F               	subwf	btemp+1,w
  9767     163B  1D03               	skipz
  9768     163C  2E3F               	goto	u2655
  9769     163D  301A               	movlw	26
  9770     163E  0222               	subwf	??___fladd+2,w
  9771     163F                     u2655:
  9772     163F  1C03               	skipc
  9773     1640  2E42               	goto	u2651
  9774     1641  2E43               	goto	u2650
  9775     1642                     u2651:
  9776     1642  2E7A               	goto	l2476
  9777     1643                     u2650:
  9778     1643                     l2462:
  9779     1643  0873               	movf	___fladd@b+3,w
  9780     1644  0472               	iorwf	___fladd@b+2,w
  9781     1645  0471               	iorwf	___fladd@b+1,w
  9782     1646  0470               	iorwf	___fladd@b,w
  9783     1647  1D03               	skipz
  9784     1648  2E4A               	goto	u2661
  9785     1649  2E4C               	goto	u2660
  9786     164A                     u2661:
  9787     164A  3001               	movlw	1
  9788     164B  2E4D               	goto	u2670
  9789     164C                     u2660:
  9790     164C  3000               	movlw	0
  9791     164D                     u2670:
  9792     164D  00FB               	movwf	___fladd@grs
  9793     164E  3000               	movlw	0
  9794     164F  00F3               	movwf	___fladd@b+3
  9795     1650  3000               	movlw	0
  9796     1651  00F2               	movwf	___fladd@b+2
  9797     1652  3000               	movlw	0
  9798     1653  00F1               	movwf	___fladd@b+1
  9799     1654  3000               	movlw	0
  9800     1655  00F0               	movwf	___fladd@b
  9801     1656  0879               	movf	___fladd@aexp,w
  9802     1657  00FA               	movwf	___fladd@bexp
  9803     1658  2E80               	goto	l654
  9804     1659                     l656:
  9805     1659  1C7B               	btfss	___fladd@grs,0
  9806     165A  2E5C               	goto	u2681
  9807     165B  2E5D               	goto	u2680
  9808     165C                     u2681:
  9809     165C  2E66               	goto	l2466
  9810     165D                     u2680:
  9811     165D                     l2464:
  9812     165D  087B               	movf	___fladd@grs,w
  9813     165E  1283               	bcf	3,5	;RP0=0, select bank0
  9814     165F  1303               	bcf	3,6	;RP1=0, select bank0
  9815     1660  00A0               	movwf	??___fladd
  9816     1661  1003               	clrc
  9817     1662  0C20               	rrf	??___fladd,w
  9818     1663  3801               	iorlw	1
  9819     1664  00FB               	movwf	___fladd@grs
  9820     1665  2E68               	goto	l2468
  9821     1666                     l2466:
  9822     1666  1003               	clrc
  9823     1667  0CFB               	rrf	___fladd@grs,f
  9824     1668                     l2468:
  9825     1668  1C70               	btfss	___fladd@b,0
  9826     1669  2E6B               	goto	u2691
  9827     166A  2E6C               	goto	u2690
  9828     166B                     u2691:
  9829     166B  2E6D               	goto	l2472
  9830     166C                     u2690:
  9831     166C                     l2470:
  9832     166C  17FB               	bsf	___fladd@grs,7
  9833     166D                     l2472:
  9834     166D  3001               	movlw	1
  9835     166E  1283               	bcf	3,5	;RP0=0, select bank0
  9836     166F  1303               	bcf	3,6	;RP1=0, select bank0
  9837     1670  00A0               	movwf	??___fladd
  9838     1671                     u2705:
  9839     1671  0D73               	rlf	___fladd@b+3,w
  9840     1672  0CF3               	rrf	___fladd@b+3,f
  9841     1673  0CF2               	rrf	___fladd@b+2,f
  9842     1674  0CF1               	rrf	___fladd@b+1,f
  9843     1675  0CF0               	rrf	___fladd@b,f
  9844     1676  0BA0               	decfsz	??___fladd& (0+127),f
  9845     1677  2E71               	goto	u2705
  9846     1678                     l2474:
  9847     1678  3001               	movlw	1
  9848     1679  07FA               	addwf	___fladd@bexp,f
  9849     167A                     l2476:
  9850     167A  0879               	movf	___fladd@aexp,w
  9851     167B  027A               	subwf	___fladd@bexp,w
  9852     167C  1C03               	skipc
  9853     167D  2E7F               	goto	u2711
  9854     167E  2E80               	goto	u2710
  9855     167F                     u2711:
  9856     167F  2E59               	goto	l656
  9857     1680                     u2710:
  9858     1680                     l654:
  9859     1680  1B78               	btfsc	___fladd@signs,6
  9860     1681  2E83               	goto	u2721
  9861     1682  2E84               	goto	u2720
  9862     1683                     u2721:
  9863     1683  2ECF               	goto	l2502
  9864     1684                     u2720:
  9865     1684                     l2478:
  9866     1684  087A               	movf	___fladd@bexp,w
  9867     1685  1D03               	btfss	3,2
  9868     1686  2E88               	goto	u2731
  9869     1687  2E89               	goto	u2730
  9870     1688                     u2731:
  9871     1688  2E92               	goto	l2484
  9872     1689                     u2730:
  9873     1689                     l2480:
  9874     1689  3000               	movlw	0
  9875     168A  00F3               	movwf	?___fladd+3
  9876     168B  3000               	movlw	0
  9877     168C  00F2               	movwf	?___fladd+2
  9878     168D  3000               	movlw	0
  9879     168E  00F1               	movwf	?___fladd+1
  9880     168F  3000               	movlw	0
  9881     1690  00F0               	movwf	?___fladd
  9882     1691  2FFF               	goto	l663
  9883     1692                     l2484:
  9884     1692  0874               	movf	___fladd@a,w
  9885     1693  07F0               	addwf	___fladd@b,f
  9886     1694  0875               	movf	___fladd@a+1,w
  9887     1695  1103               	clrz
  9888     1696  1803               	skipnc
  9889     1697  3E01               	addlw	1
  9890     1698  1903               	skipnz
  9891     1699  2E9B               	goto	u2741
  9892     169A  07F1               	addwf	___fladd@b+1,f
  9893     169B                     u2741:
  9894     169B  0876               	movf	___fladd@a+2,w
  9895     169C  1103               	clrz
  9896     169D  1803               	skipnc
  9897     169E  3E01               	addlw	1
  9898     169F  1903               	skipnz
  9899     16A0  2EA2               	goto	u2742
  9900     16A1  07F2               	addwf	___fladd@b+2,f
  9901     16A2                     u2742:
  9902     16A2  0877               	movf	___fladd@a+3,w
  9903     16A3  1103               	clrz
  9904     16A4  1803               	skipnc
  9905     16A5  3E01               	addlw	1
  9906     16A6  1903               	skipnz
  9907     16A7  2EA9               	goto	u2743
  9908     16A8  07F3               	addwf	___fladd@b+3,f
  9909     16A9                     u2743:
  9910     16A9                     l2486:
  9911     16A9  1C73               	btfss	___fladd@b+3,0
  9912     16AA  2EAC               	goto	u2751
  9913     16AB  2EAD               	goto	u2750
  9914     16AC                     u2751:
  9915     16AC  2F87               	goto	l2538
  9916     16AD                     u2750:
  9917     16AD                     l2488:
  9918     16AD  1C7B               	btfss	___fladd@grs,0
  9919     16AE  2EB0               	goto	u2761
  9920     16AF  2EB1               	goto	u2760
  9921     16B0                     u2761:
  9922     16B0  2EBA               	goto	l2492
  9923     16B1                     u2760:
  9924     16B1                     l2490:
  9925     16B1  087B               	movf	___fladd@grs,w
  9926     16B2  1283               	bcf	3,5	;RP0=0, select bank0
  9927     16B3  1303               	bcf	3,6	;RP1=0, select bank0
  9928     16B4  00A0               	movwf	??___fladd
  9929     16B5  1003               	clrc
  9930     16B6  0C20               	rrf	??___fladd,w
  9931     16B7  3801               	iorlw	1
  9932     16B8  00FB               	movwf	___fladd@grs
  9933     16B9  2EBC               	goto	l2494
  9934     16BA                     l2492:
  9935     16BA  1003               	clrc
  9936     16BB  0CFB               	rrf	___fladd@grs,f
  9937     16BC                     l2494:
  9938     16BC  1C70               	btfss	___fladd@b,0
  9939     16BD  2EBF               	goto	u2771
  9940     16BE  2EC0               	goto	u2770
  9941     16BF                     u2771:
  9942     16BF  2EC1               	goto	l2498
  9943     16C0                     u2770:
  9944     16C0                     l2496:
  9945     16C0  17FB               	bsf	___fladd@grs,7
  9946     16C1                     l2498:
  9947     16C1  3001               	movlw	1
  9948     16C2  1283               	bcf	3,5	;RP0=0, select bank0
  9949     16C3  1303               	bcf	3,6	;RP1=0, select bank0
  9950     16C4  00A0               	movwf	??___fladd
  9951     16C5                     u2785:
  9952     16C5  0D73               	rlf	___fladd@b+3,w
  9953     16C6  0CF3               	rrf	___fladd@b+3,f
  9954     16C7  0CF2               	rrf	___fladd@b+2,f
  9955     16C8  0CF1               	rrf	___fladd@b+1,f
  9956     16C9  0CF0               	rrf	___fladd@b,f
  9957     16CA  0BA0               	decfsz	??___fladd& (0+127),f
  9958     16CB  2EC5               	goto	u2785
  9959     16CC                     l2500:
  9960     16CC  3001               	movlw	1
  9961     16CD  07FA               	addwf	___fladd@bexp,f
  9962     16CE  2F87               	goto	l2538
  9963     16CF                     l2502:
  9964     16CF  0873               	movf	___fladd@b+3,w
  9965     16D0  3A80               	xorlw	128
  9966     16D1  00FF               	movwf	btemp+1
  9967     16D2  0877               	movf	___fladd@a+3,w
  9968     16D3  3A80               	xorlw	128
  9969     16D4  027F               	subwf	btemp+1,w
  9970     16D5  1D03               	skipz
  9971     16D6  2EE1               	goto	u2793
  9972     16D7  0876               	movf	___fladd@a+2,w
  9973     16D8  0272               	subwf	___fladd@b+2,w
  9974     16D9  1D03               	skipz
  9975     16DA  2EE1               	goto	u2793
  9976     16DB  0875               	movf	___fladd@a+1,w
  9977     16DC  0271               	subwf	___fladd@b+1,w
  9978     16DD  1D03               	skipz
  9979     16DE  2EE1               	goto	u2793
  9980     16DF  0874               	movf	___fladd@a,w
  9981     16E0  0270               	subwf	___fladd@b,w
  9982     16E1                     u2793:
  9983     16E1  1803               	skipnc
  9984     16E2  2EE4               	goto	u2791
  9985     16E3  2EE5               	goto	u2790
  9986     16E4                     u2791:
  9987     16E4  2F3E               	goto	l2514
  9988     16E5                     u2790:
  9989     16E5                     l2504:
  9990     16E5  30FF               	movlw	255
  9991     16E6  1283               	bcf	3,5	;RP0=0, select bank0
  9992     16E7  1303               	bcf	3,6	;RP1=0, select bank0
  9993     16E8  00A0               	movwf	??___fladd
  9994     16E9  30FF               	movlw	255
  9995     16EA  00A1               	movwf	??___fladd+1
  9996     16EB  30FF               	movlw	255
  9997     16EC  00A2               	movwf	??___fladd+2
  9998     16ED  30FF               	movlw	255
  9999     16EE  00A3               	movwf	??___fladd+3
 10000     16EF  0874               	movf	___fladd@a,w
 10001     16F0  00A4               	movwf	??___fladd+4
 10002     16F1  0875               	movf	___fladd@a+1,w
 10003     16F2  00A5               	movwf	??___fladd+5
 10004     16F3  0876               	movf	___fladd@a+2,w
 10005     16F4  00A6               	movwf	??___fladd+6
 10006     16F5  0877               	movf	___fladd@a+3,w
 10007     16F6  00A7               	movwf	??___fladd+7
 10008     16F7  0870               	movf	___fladd@b,w
 10009     16F8  02A4               	subwf	??___fladd+4,f
 10010     16F9  0871               	movf	___fladd@b+1,w
 10011     16FA  1C03               	skipc
 10012     16FB  0F71               	incfsz	___fladd@b+1,w
 10013     16FC  2EFE               	goto	u2801
 10014     16FD  2EFF               	goto	u2802
 10015     16FE                     u2801:
 10016     16FE  02A5               	subwf	??___fladd+5,f
 10017     16FF                     u2802:
 10018     16FF  0872               	movf	___fladd@b+2,w
 10019     1700  1C03               	skipc
 10020     1701  0F72               	incfsz	___fladd@b+2,w
 10021     1702  2F04               	goto	u2803
 10022     1703  2F05               	goto	u2804
 10023     1704                     u2803:
 10024     1704  02A6               	subwf	??___fladd+6,f
 10025     1705                     u2804:
 10026     1705  0873               	movf	___fladd@b+3,w
 10027     1706  1C03               	skipc
 10028     1707  0F73               	incfsz	___fladd@b+3,w
 10029     1708  2F0A               	goto	u2805
 10030     1709  2F0B               	goto	u2806
 10031     170A                     u2805:
 10032     170A  02A7               	subwf	??___fladd+7,f
 10033     170B                     u2806:
 10034     170B  0824               	movf	??___fladd+4,w
 10035     170C  07A0               	addwf	??___fladd,f
 10036     170D  0825               	movf	??___fladd+5,w
 10037     170E  1803               	skipnc
 10038     170F  0F25               	incfsz	??___fladd+5,w
 10039     1710  2F12               	goto	u2810
 10040     1711  2F13               	goto	u2811
 10041     1712                     u2810:
 10042     1712  07A1               	addwf	??___fladd+1,f
 10043     1713                     u2811:
 10044     1713  0826               	movf	??___fladd+6,w
 10045     1714  1803               	skipnc
 10046     1715  0F26               	incfsz	??___fladd+6,w
 10047     1716  2F18               	goto	u2812
 10048     1717  2F19               	goto	u2813
 10049     1718                     u2812:
 10050     1718  07A2               	addwf	??___fladd+2,f
 10051     1719                     u2813:
 10052     1719  0827               	movf	??___fladd+7,w
 10053     171A  1803               	skipnc
 10054     171B  0A27               	incf	??___fladd+7,w
 10055     171C  07A3               	addwf	??___fladd+3,f
 10056     171D  0823               	movf	??___fladd+3,w
 10057     171E  00F3               	movwf	___fladd@b+3
 10058     171F  0822               	movf	??___fladd+2,w
 10059     1720  00F2               	movwf	___fladd@b+2
 10060     1721  0821               	movf	??___fladd+1,w
 10061     1722  00F1               	movwf	___fladd@b+1
 10062     1723  0820               	movf	??___fladd,w
 10063     1724  00F0               	movwf	___fladd@b
 10064     1725                     l2506:
 10065     1725  3080               	movlw	128
 10066     1726  06F8               	xorwf	___fladd@signs,f
 10067     1727                     l2508:
 10068     1727  037B               	decf	___fladd@grs,w
 10069     1728  3AFF               	xorlw	255
 10070     1729  00FB               	movwf	___fladd@grs
 10071     172A                     l2510:
 10072     172A  087B               	movf	___fladd@grs,w
 10073     172B  1D03               	btfss	3,2
 10074     172C  2F2E               	goto	u2821
 10075     172D  2F2F               	goto	u2820
 10076     172E                     u2821:
 10077     172E  2F4C               	goto	l671
 10078     172F                     u2820:
 10079     172F                     l2512:
 10080     172F  3001               	movlw	1
 10081     1730  07F0               	addwf	___fladd@b,f
 10082     1731  3000               	movlw	0
 10083     1732  1803               	skipnc
 10084     1733  3001               	movlw	1
 10085     1734  07F1               	addwf	___fladd@b+1,f
 10086     1735  3000               	movlw	0
 10087     1736  1803               	skipnc
 10088     1737  3001               	movlw	1
 10089     1738  07F2               	addwf	___fladd@b+2,f
 10090     1739  3000               	movlw	0
 10091     173A  1803               	skipnc
 10092     173B  3001               	movlw	1
 10093     173C  07F3               	addwf	___fladd@b+3,f
 10094     173D  2F4C               	goto	l671
 10095     173E                     l2514:
 10096     173E  0874               	movf	___fladd@a,w
 10097     173F  02F0               	subwf	___fladd@b,f
 10098     1740  0875               	movf	___fladd@a+1,w
 10099     1741  1C03               	skipc
 10100     1742  0F75               	incfsz	___fladd@a+1,w
 10101     1743  02F1               	subwf	___fladd@b+1,f
 10102     1744  0876               	movf	___fladd@a+2,w
 10103     1745  1C03               	skipc
 10104     1746  0F76               	incfsz	___fladd@a+2,w
 10105     1747  02F2               	subwf	___fladd@b+2,f
 10106     1748  0877               	movf	___fladd@a+3,w
 10107     1749  1C03               	skipc
 10108     174A  0F77               	incfsz	___fladd@a+3,w
 10109     174B  02F3               	subwf	___fladd@b+3,f
 10110     174C                     l671:
 10111     174C  0873               	movf	___fladd@b+3,w
 10112     174D  0472               	iorwf	___fladd@b+2,w
 10113     174E  0471               	iorwf	___fladd@b+1,w
 10114     174F  0470               	iorwf	___fladd@b,w
 10115     1750  1D03               	skipz
 10116     1751  2F53               	goto	u2831
 10117     1752  2F54               	goto	u2830
 10118     1753                     u2831:
 10119     1753  2F83               	goto	l2536
 10120     1754                     u2830:
 10121     1754                     l2516:
 10122     1754  087B               	movf	___fladd@grs,w
 10123     1755  1D03               	btfss	3,2
 10124     1756  2F58               	goto	u2841
 10125     1757  2F59               	goto	u2840
 10126     1758                     u2841:
 10127     1758  2F83               	goto	l2536
 10128     1759                     u2840:
 10129     1759                     l2518:
 10130     1759  3000               	movlw	0
 10131     175A  00F3               	movwf	?___fladd+3
 10132     175B  3000               	movlw	0
 10133     175C  00F2               	movwf	?___fladd+2
 10134     175D  3000               	movlw	0
 10135     175E  00F1               	movwf	?___fladd+1
 10136     175F  3000               	movlw	0
 10137     1760  00F0               	movwf	?___fladd
 10138     1761  2FFF               	goto	l663
 10139     1762                     l2522:
 10140     1762  3001               	movlw	1
 10141     1763  1283               	bcf	3,5	;RP0=0, select bank0
 10142     1764  1303               	bcf	3,6	;RP1=0, select bank0
 10143     1765  00A0               	movwf	??___fladd
 10144     1766                     u2855:
 10145     1766  1003               	clrc
 10146     1767  0DF0               	rlf	___fladd@b,f
 10147     1768  0DF1               	rlf	___fladd@b+1,f
 10148     1769  0DF2               	rlf	___fladd@b+2,f
 10149     176A  0DF3               	rlf	___fladd@b+3,f
 10150     176B  0BA0               	decfsz	??___fladd,f
 10151     176C  2F66               	goto	u2855
 10152     176D                     l2524:
 10153     176D  1FFB               	btfss	___fladd@grs,7
 10154     176E  2F70               	goto	u2861
 10155     176F  2F71               	goto	u2860
 10156     1770                     u2861:
 10157     1770  2F72               	goto	l675
 10158     1771                     u2860:
 10159     1771                     l2526:
 10160     1771  1470               	bsf	___fladd@b,0
 10161     1772                     l675:
 10162     1772  1C7B               	btfss	___fladd@grs,0
 10163     1773  2F75               	goto	u2871
 10164     1774  2F76               	goto	u2870
 10165     1775                     u2871:
 10166     1775  2F7A               	goto	l2530
 10167     1776                     u2870:
 10168     1776                     l2528:
 10169     1776  1403               	setc
 10170     1777  0D7B               	rlf	___fladd@grs,w
 10171     1778  00FB               	movwf	___fladd@grs
 10172     1779  2F7C               	goto	l2532
 10173     177A                     l2530:
 10174     177A  1003               	clrc
 10175     177B  0DFB               	rlf	___fladd@grs,f
 10176     177C                     l2532:
 10177     177C  087A               	movf	___fladd@bexp,w
 10178     177D  1903               	btfsc	3,2
 10179     177E  2F80               	goto	u2881
 10180     177F  2F81               	goto	u2880
 10181     1780                     u2881:
 10182     1780  2F83               	goto	l2536
 10183     1781                     u2880:
 10184     1781                     l2534:
 10185     1781  3001               	movlw	1
 10186     1782  02FA               	subwf	___fladd@bexp,f
 10187     1783                     l2536:
 10188     1783  1FF2               	btfss	___fladd@b+2,7
 10189     1784  2F86               	goto	u2891
 10190     1785  2F87               	goto	u2890
 10191     1786                     u2891:
 10192     1786  2F62               	goto	l2522
 10193     1787                     u2890:
 10194     1787                     l2538:
 10195     1787  01F9               	clrf	___fladd@aexp
 10196     1788                     l2540:
 10197     1788  1FFB               	btfss	___fladd@grs,7
 10198     1789  2F8B               	goto	u2901
 10199     178A  2F8C               	goto	u2900
 10200     178B                     u2901:
 10201     178B  2F9A               	goto	l2548
 10202     178C                     u2900:
 10203     178C                     l2542:
 10204     178C  087B               	movf	___fladd@grs,w
 10205     178D  397F               	andlw	127
 10206     178E  1903               	btfsc	3,2
 10207     178F  2F91               	goto	u2911
 10208     1790  2F92               	goto	u2910
 10209     1791                     u2911:
 10210     1791  2F95               	goto	l681
 10211     1792                     u2910:
 10212     1792                     l2544:
 10213     1792  3001               	movlw	1
 10214     1793  00F9               	movwf	___fladd@aexp
 10215     1794  2F9A               	goto	l2548
 10216     1795                     l681:
 10217     1795  1C70               	btfss	___fladd@b,0
 10218     1796  2F98               	goto	u2921
 10219     1797  2F99               	goto	u2920
 10220     1798                     u2921:
 10221     1798  2F9A               	goto	l2548
 10222     1799                     u2920:
 10223     1799  2F92               	goto	l2544
 10224     179A                     l2548:
 10225     179A  0879               	movf	___fladd@aexp,w
 10226     179B  1903               	btfsc	3,2
 10227     179C  2F9E               	goto	u2931
 10228     179D  2F9F               	goto	u2930
 10229     179E                     u2931:
 10230     179E  2FD3               	goto	l684
 10231     179F                     u2930:
 10232     179F                     l2550:
 10233     179F  3001               	movlw	1
 10234     17A0  07F0               	addwf	___fladd@b,f
 10235     17A1  3000               	movlw	0
 10236     17A2  1803               	skipnc
 10237     17A3  3001               	movlw	1
 10238     17A4  07F1               	addwf	___fladd@b+1,f
 10239     17A5  3000               	movlw	0
 10240     17A6  1803               	skipnc
 10241     17A7  3001               	movlw	1
 10242     17A8  07F2               	addwf	___fladd@b+2,f
 10243     17A9  3000               	movlw	0
 10244     17AA  1803               	skipnc
 10245     17AB  3001               	movlw	1
 10246     17AC  07F3               	addwf	___fladd@b+3,f
 10247     17AD                     l2552:
 10248     17AD  1C73               	btfss	___fladd@b+3,0
 10249     17AE  2FB0               	goto	u2941
 10250     17AF  2FB1               	goto	u2940
 10251     17B0                     u2941:
 10252     17B0  2FD3               	goto	l684
 10253     17B1                     u2940:
 10254     17B1                     l2554:
 10255     17B1  0870               	movf	___fladd@b,w
 10256     17B2  1283               	bcf	3,5	;RP0=0, select bank0
 10257     17B3  1303               	bcf	3,6	;RP1=0, select bank0
 10258     17B4  00A0               	movwf	??___fladd
 10259     17B5  0871               	movf	___fladd@b+1,w
 10260     17B6  00A1               	movwf	??___fladd+1
 10261     17B7  0872               	movf	___fladd@b+2,w
 10262     17B8  00A2               	movwf	??___fladd+2
 10263     17B9  0873               	movf	___fladd@b+3,w
 10264     17BA  00A3               	movwf	??___fladd+3
 10265     17BB  3001               	movlw	1
 10266     17BC  00A4               	movwf	??___fladd+4
 10267     17BD                     u2955:
 10268     17BD  0D23               	rlf	??___fladd+3,w
 10269     17BE  0CA3               	rrf	??___fladd+3,f
 10270     17BF  0CA2               	rrf	??___fladd+2,f
 10271     17C0  0CA1               	rrf	??___fladd+1,f
 10272     17C1  0CA0               	rrf	??___fladd,f
 10273     17C2                     u2950:
 10274     17C2  0BA4               	decfsz	??___fladd+4,f
 10275     17C3  2FBD               	goto	u2955
 10276     17C4  0823               	movf	??___fladd+3,w
 10277     17C5  00F3               	movwf	___fladd@b+3
 10278     17C6  0822               	movf	??___fladd+2,w
 10279     17C7  00F2               	movwf	___fladd@b+2
 10280     17C8  0821               	movf	??___fladd+1,w
 10281     17C9  00F1               	movwf	___fladd@b+1
 10282     17CA  0820               	movf	??___fladd,w
 10283     17CB  00F0               	movwf	___fladd@b
 10284     17CC  0A7A               	incf	___fladd@bexp,w
 10285     17CD  1903               	btfsc	3,2
 10286     17CE  2FD0               	goto	u2961
 10287     17CF  2FD1               	goto	u2960
 10288     17D0                     u2961:
 10289     17D0  2FD3               	goto	l684
 10290     17D1                     u2960:
 10291     17D1                     l2556:
 10292     17D1  3001               	movlw	1
 10293     17D2  07FA               	addwf	___fladd@bexp,f
 10294     17D3                     l684:
 10295     17D3  0A7A               	incf	___fladd@bexp,w
 10296     17D4  1903               	btfsc	3,2
 10297     17D5  2FD7               	goto	u2971
 10298     17D6  2FD8               	goto	u2970
 10299     17D7                     u2971:
 10300     17D7  2FDD               	goto	l2560
 10301     17D8                     u2970:
 10302     17D8                     l2558:
 10303     17D8  087A               	movf	___fladd@bexp,w
 10304     17D9  1D03               	btfss	3,2
 10305     17DA  2FDC               	goto	u2981
 10306     17DB  2FDD               	goto	u2980
 10307     17DC                     u2981:
 10308     17DC  2FEB               	goto	l2566
 10309     17DD                     u2980:
 10310     17DD                     l2560:
 10311     17DD  3000               	movlw	0
 10312     17DE  00F3               	movwf	___fladd@b+3
 10313     17DF  3000               	movlw	0
 10314     17E0  00F2               	movwf	___fladd@b+2
 10315     17E1  3000               	movlw	0
 10316     17E2  00F1               	movwf	___fladd@b+1
 10317     17E3  3000               	movlw	0
 10318     17E4  00F0               	movwf	___fladd@b
 10319     17E5                     l2562:
 10320     17E5  087A               	movf	___fladd@bexp,w
 10321     17E6  1D03               	btfss	3,2
 10322     17E7  2FE9               	goto	u2991
 10323     17E8  2FEA               	goto	u2990
 10324     17E9                     u2991:
 10325     17E9  2FEB               	goto	l2566
 10326     17EA                     u2990:
 10327     17EA                     l2564:
 10328     17EA  01F8               	clrf	___fladd@signs
 10329     17EB                     l2566:
 10330     17EB  1C7A               	btfss	___fladd@bexp,0
 10331     17EC  2FEE               	goto	u3001
 10332     17ED  2FEF               	goto	u3000
 10333     17EE                     u3001:
 10334     17EE  2FF1               	goto	l2570
 10335     17EF                     u3000:
 10336     17EF                     l2568:
 10337     17EF  17F2               	bsf	___fladd@b+2,7
 10338     17F0  2FF3               	goto	l692
 10339     17F1                     l2570:
 10340     17F1  307F               	movlw	127
 10341     17F2  05F2               	andwf	___fladd@b+2,f
 10342     17F3                     l692:
 10343     17F3  087A               	movf	___fladd@bexp,w
 10344     17F4  1283               	bcf	3,5	;RP0=0, select bank0
 10345     17F5  1303               	bcf	3,6	;RP1=0, select bank0
 10346     17F6  00A0               	movwf	??___fladd
 10347     17F7  1003               	clrc
 10348     17F8  0C20               	rrf	??___fladd,w
 10349     17F9  00F3               	movwf	___fladd@b+3
 10350     17FA                     l2572:
 10351     17FA  1FF8               	btfss	___fladd@signs,7
 10352     17FB  2FFD               	goto	u3011
 10353     17FC  2FFE               	goto	u3010
 10354     17FD                     u3011:
 10355     17FD  2FFF               	goto	l693
 10356     17FE                     u3010:
 10357     17FE                     l2574:
 10358     17FE  17F3               	bsf	___fladd@b+3,7
 10359     17FF                     l693:
 10360     17FF                     l663:
 10361     17FF  0008               	return
 10362     1800                     __end_of___fladd:
 10363                           
 10364                           	psect	text44
 10365     1AA3                     __ptext44:	
 10366 ;; *************** function _I2C_Read_Byte *****************
 10367 ;; Defined at:
 10368 ;;		line 53 in file "i2c.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;		None
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;		None
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  1    wreg      unsigned char 
 10375 ;; Registers used:
 10376 ;;		wreg, status,2, status,0, pclath, cstack
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10382 ;;      Params:         0       0       0       0       0
 10383 ;;      Locals:         0       0       0       0       0
 10384 ;;      Temps:          0       0       0       0       0
 10385 ;;      Totals:         0       0       0       0       0
 10386 ;;Total ram usage:        0 bytes
 10387 ;; Hardware stack levels used: 1
 10388 ;; Hardware stack levels required when called: 1
 10389 ;; This function calls:
 10390 ;;		_I2C_Master_Wait
 10391 ;; This function is called by:
 10392 ;;		_LM75_read
 10393 ;;		_LM75_readConfig
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397     1AA3                     _I2C_Read_Byte:	
 10398                           ;psect for function _I2C_Read_Byte
 10399                           
 10400     1AA3                     l3372:	
 10401                           ;incstack = 0
 10402                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
 10403                           
 10404                           
 10405                           ;i2c.c: 54:     I2C_Master_Wait();
 10406     1AA3  160A  158A  2242  160A  158A  	fcall	_I2C_Master_Wait
 10407     1AA8                     l3374:
 10408                           
 10409                           ;i2c.c: 55:     RCEN = 1;
 10410     1AA8  1683               	bsf	3,5	;RP0=1, select bank1
 10411     1AA9  1303               	bcf	3,6	;RP1=0, select bank1
 10412     1AAA  1591               	bsf	17,3	;volatile
 10413     1AAB                     l111:	
 10414                           ;i2c.c: 56:     while(!SSPIF);
 10415                           
 10416     1AAB  1283               	bcf	3,5	;RP0=0, select bank0
 10417     1AAC  1D8C               	btfss	12,3	;volatile
 10418     1AAD  2AAF               	goto	u4771
 10419     1AAE  2AB0               	goto	u4770
 10420     1AAF                     u4771:
 10421     1AAF  2AAB               	goto	l111
 10422     1AB0                     u4770:
 10423     1AB0                     l113:
 10424                           
 10425                           ;i2c.c: 57:     SSPIF = 0;
 10426     1AB0  118C               	bcf	12,3	;volatile
 10427     1AB1                     l3376:
 10428                           
 10429                           ;i2c.c: 58:     I2C_Master_Wait();
 10430     1AB1  160A  158A  2242  160A  158A  	fcall	_I2C_Master_Wait
 10431     1AB6                     l3378:
 10432                           
 10433                           ;i2c.c: 59:     return SSPBUF;
 10434     1AB6  1283               	bcf	3,5	;RP0=0, select bank0
 10435     1AB7  1303               	bcf	3,6	;RP1=0, select bank0
 10436     1AB8  0813               	movf	19,w	;volatile
 10437     1AB9                     l114:
 10438     1AB9  0008               	return
 10439     1ABA                     __end_of_I2C_Read_Byte:
 10440                           
 10441                           	psect	text45
 10442     1A36                     __ptext45:	
 10443 ;; *************** function _I2C_NACK *****************
 10444 ;; Defined at:
 10445 ;;		line 39 in file "i2c.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;		None
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;		None
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  1    wreg      void 
 10452 ;; Registers used:
 10453 ;;		wreg, status,2, status,0, pclath, cstack
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10459 ;;      Params:         0       0       0       0       0
 10460 ;;      Locals:         0       0       0       0       0
 10461 ;;      Temps:          0       0       0       0       0
 10462 ;;      Totals:         0       0       0       0       0
 10463 ;;Total ram usage:        0 bytes
 10464 ;; Hardware stack levels used: 1
 10465 ;; Hardware stack levels required when called: 1
 10466 ;; This function calls:
 10467 ;;		_I2C_Master_Wait
 10468 ;; This function is called by:
 10469 ;;		_LM75_read
 10470 ;;		_LM75_readConfig
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474     1A36                     _I2C_NACK:	
 10475                           ;psect for function _I2C_NACK
 10476                           
 10477     1A36                     l3362:	
 10478                           ;incstack = 0
 10479                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
 10480                           
 10481                           
 10482                           ;i2c.c: 40:     ACKDT = 1;
 10483     1A36  1683               	bsf	3,5	;RP0=1, select bank1
 10484     1A37  1303               	bcf	3,6	;RP1=0, select bank1
 10485     1A38  1691               	bsf	17,5	;volatile
 10486     1A39                     l3364:
 10487                           
 10488                           ;i2c.c: 41:     I2C_Master_Wait();
 10489     1A39  160A  158A  2242  160A  158A  	fcall	_I2C_Master_Wait
 10490     1A3E                     l3366:
 10491                           
 10492                           ;i2c.c: 42:     ACKEN = 1;
 10493     1A3E  1683               	bsf	3,5	;RP0=1, select bank1
 10494     1A3F  1303               	bcf	3,6	;RP1=0, select bank1
 10495     1A40  1611               	bsf	17,4	;volatile
 10496     1A41                     l102:
 10497     1A41  0008               	return
 10498     1A42                     __end_of_I2C_NACK:
 10499                           
 10500                           	psect	text46
 10501     1A5C                     __ptext46:	
 10502 ;; *************** function _I2C_Master_Write *****************
 10503 ;; Defined at:
 10504 ;;		line 45 in file "i2c.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  data            1    wreg     unsigned char 
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;  data            1    0[COMMON] unsigned char 
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  1    wreg      unsigned char 
 10511 ;; Registers used:
 10512 ;;		wreg, status,2, status,0, pclath, cstack
 10513 ;; Tracked objects:
 10514 ;;		On entry : 0/0
 10515 ;;		On exit  : 0/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10518 ;;      Params:         0       0       0       0       0
 10519 ;;      Locals:         1       0       0       0       0
 10520 ;;      Temps:          0       0       0       0       0
 10521 ;;      Totals:         1       0       0       0       0
 10522 ;;Total ram usage:        1 bytes
 10523 ;; Hardware stack levels used: 1
 10524 ;; Hardware stack levels required when called: 1
 10525 ;; This function calls:
 10526 ;;		_I2C_Master_Wait
 10527 ;; This function is called by:
 10528 ;;		_LM75_read
 10529 ;;		_LM75_setConfig
 10530 ;;		_LM75_readConfig
 10531 ;;		_LM75_set
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535     1A5C                     _I2C_Master_Write:	
 10536                           ;psect for function _I2C_Master_Write
 10537                           
 10538                           
 10539                           ;incstack = 0
 10540                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10541                           ;I2C_Master_Write@data stored from wreg
 10542     1A5C  00F0               	movwf	I2C_Master_Write@data
 10543     1A5D                     l3368:
 10544                           
 10545                           ;i2c.c: 46:     I2C_Master_Wait();
 10546     1A5D  160A  158A  2242  160A  158A  	fcall	_I2C_Master_Wait
 10547     1A62                     l3370:
 10548                           
 10549                           ;i2c.c: 47:     SSPBUF = data;
 10550     1A62  0870               	movf	I2C_Master_Write@data,w
 10551     1A63  1283               	bcf	3,5	;RP0=0, select bank0
 10552     1A64  1303               	bcf	3,6	;RP1=0, select bank0
 10553     1A65  0093               	movwf	19	;volatile
 10554     1A66                     l105:	
 10555                           ;i2c.c: 48:     while(!SSPIF);
 10556                           
 10557     1A66  1D8C               	btfss	12,3	;volatile
 10558     1A67  2A69               	goto	u4761
 10559     1A68  2A6A               	goto	u4760
 10560     1A69                     u4761:
 10561     1A69  2A66               	goto	l105
 10562     1A6A                     u4760:
 10563     1A6A                     l107:
 10564                           
 10565                           ;i2c.c: 49:     SSPIF = 0;
 10566     1A6A  118C               	bcf	12,3	;volatile
 10567     1A6B                     l108:	
 10568                           ;i2c.c: 50:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
 10569                           
 10570     1A6B  0008               	return
 10571     1A6C                     __end_of_I2C_Master_Write:
 10572                           
 10573                           	psect	text47
 10574     0003                     __ptext47:	
 10575 ;; *************** function _I2C_Master_Stop *****************
 10576 ;; Defined at:
 10577 ;;		line 28 in file "i2c.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;		None
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;		None
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      void 
 10584 ;; Registers used:
 10585 ;;		wreg, status,2, status,0, pclath, cstack
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10591 ;;      Params:         0       0       0       0       0
 10592 ;;      Locals:         0       0       0       0       0
 10593 ;;      Temps:          0       0       0       0       0
 10594 ;;      Totals:         0       0       0       0       0
 10595 ;;Total ram usage:        0 bytes
 10596 ;; Hardware stack levels used: 1
 10597 ;; Hardware stack levels required when called: 1
 10598 ;; This function calls:
 10599 ;;		_I2C_Master_Wait
 10600 ;; This function is called by:
 10601 ;;		_LM75_read
 10602 ;;		_LM75_setConfig
 10603 ;;		_LM75_readConfig
 10604 ;;		_LM75_set
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608     0003                     _I2C_Master_Stop:	
 10609                           ;psect for function _I2C_Master_Stop
 10610                           
 10611     0003                     l3352:	
 10612                           ;incstack = 0
 10613                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10614                           
 10615                           
 10616                           ;i2c.c: 29:     I2C_Master_Wait();
 10617     0003  160A  158A  2242  120A  118A  	fcall	_I2C_Master_Wait
 10618     0008                     l3354:
 10619                           
 10620                           ;i2c.c: 30:     PEN = 1;
 10621     0008  1683               	bsf	3,5	;RP0=1, select bank1
 10622     0009  1303               	bcf	3,6	;RP1=0, select bank1
 10623     000A  1511               	bsf	17,2	;volatile
 10624     000B                     l96:
 10625     000B  0008               	return
 10626     000C                     __end_of_I2C_Master_Stop:
 10627                           
 10628                           	psect	text48
 10629     1A16                     __ptext48:	
 10630 ;; *************** function _I2C_Master_Start *****************
 10631 ;; Defined at:
 10632 ;;		line 18 in file "i2c.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;		None
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;		None
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      void 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2, status,0, pclath, cstack
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10646 ;;      Params:         0       0       0       0       0
 10647 ;;      Locals:         0       0       0       0       0
 10648 ;;      Temps:          0       0       0       0       0
 10649 ;;      Totals:         0       0       0       0       0
 10650 ;;Total ram usage:        0 bytes
 10651 ;; Hardware stack levels used: 1
 10652 ;; Hardware stack levels required when called: 1
 10653 ;; This function calls:
 10654 ;;		_I2C_Master_Wait
 10655 ;; This function is called by:
 10656 ;;		_LM75_read
 10657 ;;		_LM75_setConfig
 10658 ;;		_LM75_readConfig
 10659 ;;		_LM75_set
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663     1A16                     _I2C_Master_Start:	
 10664                           ;psect for function _I2C_Master_Start
 10665                           
 10666     1A16                     l3344:	
 10667                           ;incstack = 0
 10668                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10669                           
 10670                           
 10671                           ;i2c.c: 19:     I2C_Master_Wait();
 10672     1A16  160A  158A  2242  160A  158A  	fcall	_I2C_Master_Wait
 10673     1A1B                     l3346:
 10674                           
 10675                           ;i2c.c: 20:     SEN = 1;
 10676     1A1B  1683               	bsf	3,5	;RP0=1, select bank1
 10677     1A1C  1303               	bcf	3,6	;RP1=0, select bank1
 10678     1A1D  1411               	bsf	17,0	;volatile
 10679     1A1E                     l90:
 10680     1A1E  0008               	return
 10681     1A1F                     __end_of_I2C_Master_Start:
 10682                           
 10683                           	psect	text49
 10684     1A0D                     __ptext49:	
 10685 ;; *************** function _I2C_Master_RepeatedStart *****************
 10686 ;; Defined at:
 10687 ;;		line 23 in file "i2c.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		wreg, status,2, status,0, pclath, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10701 ;;      Params:         0       0       0       0       0
 10702 ;;      Locals:         0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0
 10704 ;;      Totals:         0       0       0       0       0
 10705 ;;Total ram usage:        0 bytes
 10706 ;; Hardware stack levels used: 1
 10707 ;; Hardware stack levels required when called: 1
 10708 ;; This function calls:
 10709 ;;		_I2C_Master_Wait
 10710 ;; This function is called by:
 10711 ;;		_LM75_read
 10712 ;;		_LM75_readConfig
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716     1A0D                     _I2C_Master_RepeatedStart:	
 10717                           ;psect for function _I2C_Master_RepeatedStart
 10718                           
 10719     1A0D                     l3348:	
 10720                           ;incstack = 0
 10721                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 10722                           
 10723                           
 10724                           ;i2c.c: 24:     I2C_Master_Wait();
 10725     1A0D  160A  158A  2242  160A  158A  	fcall	_I2C_Master_Wait
 10726     1A12                     l3350:
 10727                           
 10728                           ;i2c.c: 25:     RSEN = 1;
 10729     1A12  1683               	bsf	3,5	;RP0=1, select bank1
 10730     1A13  1303               	bcf	3,6	;RP1=0, select bank1
 10731     1A14  1491               	bsf	17,1	;volatile
 10732     1A15                     l93:
 10733     1A15  0008               	return
 10734     1A16                     __end_of_I2C_Master_RepeatedStart:
 10735                           
 10736                           	psect	text50
 10737     1A2A                     __ptext50:	
 10738 ;; *************** function _I2C_ACK *****************
 10739 ;; Defined at:
 10740 ;;		line 33 in file "i2c.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		wreg, status,2, status,0, pclath, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10754 ;;      Params:         0       0       0       0       0
 10755 ;;      Locals:         0       0       0       0       0
 10756 ;;      Temps:          0       0       0       0       0
 10757 ;;      Totals:         0       0       0       0       0
 10758 ;;Total ram usage:        0 bytes
 10759 ;; Hardware stack levels used: 1
 10760 ;; Hardware stack levels required when called: 1
 10761 ;; This function calls:
 10762 ;;		_I2C_Master_Wait
 10763 ;; This function is called by:
 10764 ;;		_LM75_read
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768     1A2A                     _I2C_ACK:	
 10769                           ;psect for function _I2C_ACK
 10770                           
 10771     1A2A                     l3356:	
 10772                           ;incstack = 0
 10773                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
 10774                           
 10775                           
 10776                           ;i2c.c: 34:     ACKDT = 0;
 10777     1A2A  1683               	bsf	3,5	;RP0=1, select bank1
 10778     1A2B  1303               	bcf	3,6	;RP1=0, select bank1
 10779     1A2C  1291               	bcf	17,5	;volatile
 10780     1A2D                     l3358:
 10781                           
 10782                           ;i2c.c: 35:     I2C_Master_Wait();
 10783     1A2D  160A  158A  2242  160A  158A  	fcall	_I2C_Master_Wait
 10784     1A32                     l3360:
 10785                           
 10786                           ;i2c.c: 36:     ACKEN = 1;
 10787     1A32  1683               	bsf	3,5	;RP0=1, select bank1
 10788     1A33  1303               	bcf	3,6	;RP1=0, select bank1
 10789     1A34  1611               	bsf	17,4	;volatile
 10790     1A35                     l99:
 10791     1A35  0008               	return
 10792     1A36                     __end_of_I2C_ACK:
 10793                           
 10794                           	psect	text51
 10795     1A42                     __ptext51:	
 10796 ;; *************** function _I2C_Master_Wait *****************
 10797 ;; Defined at:
 10798 ;;		line 14 in file "i2c.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;		None
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;		None
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      void 
 10805 ;; Registers used:
 10806 ;;		wreg, status,2
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10812 ;;      Params:         0       0       0       0       0
 10813 ;;      Locals:         0       0       0       0       0
 10814 ;;      Temps:          0       0       0       0       0
 10815 ;;      Totals:         0       0       0       0       0
 10816 ;;Total ram usage:        0 bytes
 10817 ;; Hardware stack levels used: 1
 10818 ;; This function calls:
 10819 ;;		Nothing
 10820 ;; This function is called by:
 10821 ;;		_I2C_Master_Start
 10822 ;;		_I2C_Master_RepeatedStart
 10823 ;;		_I2C_Master_Stop
 10824 ;;		_I2C_ACK
 10825 ;;		_I2C_NACK
 10826 ;;		_I2C_Master_Write
 10827 ;;		_I2C_Read_Byte
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831     1A42                     _I2C_Master_Wait:	
 10832                           ;psect for function _I2C_Master_Wait
 10833                           
 10834     1A42                     l3066:	
 10835                           ;incstack = 0
 10836                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10837                           
 10838     1A42                     l84:	
 10839                           ;i2c.c: 15:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10840                           
 10841     1A42  1683               	bsf	3,5	;RP0=1, select bank1
 10842     1A43  1303               	bcf	3,6	;RP1=0, select bank1
 10843     1A44  1914               	btfsc	20,2	;volatile
 10844     1A45  2A47               	goto	u4231
 10845     1A46  2A48               	goto	u4230
 10846     1A47                     u4231:
 10847     1A47  2A42               	goto	l84
 10848     1A48                     u4230:
 10849     1A48                     l3068:
 10850     1A48  0811               	movf	17,w	;volatile
 10851     1A49  391F               	andlw	31
 10852     1A4A  1D03               	btfss	3,2
 10853     1A4B  2A4D               	goto	u4241
 10854     1A4C  2A4E               	goto	u4240
 10855     1A4D                     u4241:
 10856     1A4D  2A42               	goto	l84
 10857     1A4E                     u4240:
 10858     1A4E                     l87:
 10859     1A4E  0008               	return
 10860     1A4F                     __end_of_I2C_Master_Wait:
 10861     0002                     ___latbits      equ	2
 10862     007E                     btemp           set	126	;btemp
 10863     007E                     wtemp0          set	126
 10864                           
 10865                           	psect	text6_split_1
 10866     00A6                     l3162:
 10867                           
 10868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 10869     00A6  303F               	movlw	63
 10870     00A7  1683               	bsf	3,5	;RP0=1, select bank1
 10871     00A8  1303               	bcf	3,6	;RP1=0, select bank1
 10872     00A9  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10873     00AA  3080               	movlw	128
 10874     00AB  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10875     00AC  3000               	movlw	0
 10876     00AD  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10877     00AE  3000               	movlw	0
 10878     00AF  00C8               	movwf	efgtoa@u^(0+128)
 10879     00B0                     l3164:
 10880                           
 10881                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 10882     00B0  01AF               	clrf	efgtoa@e^(0+128)
 10883     00B1  01B0               	clrf	(efgtoa@e+1)^(0+128)
 10884     00B2                     l3166:
 10885                           
 10886                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 10887     00B2  0847               	movf	(efgtoa@g+3)^(0+128),w
 10888     00B3  00F3               	movwf	___fleq@ff1+3
 10889     00B4  0846               	movf	(efgtoa@g+2)^(0+128),w
 10890     00B5  00F2               	movwf	___fleq@ff1+2
 10891     00B6  0845               	movf	(efgtoa@g+1)^(0+128),w
 10892     00B7  00F1               	movwf	___fleq@ff1+1
 10893     00B8  0844               	movf	efgtoa@g^(0+128),w
 10894     00B9  00F0               	movwf	___fleq@ff1
 10895     00BA  3000               	movlw	0
 10896     00BB  00F7               	movwf	___fleq@ff2+3
 10897     00BC  3000               	movlw	0
 10898     00BD  00F6               	movwf	___fleq@ff2+2
 10899     00BE  3000               	movlw	0
 10900     00BF  00F5               	movwf	___fleq@ff2+1
 10901     00C0  3000               	movlw	0
 10902     00C1  00F4               	movwf	___fleq@ff2
 10903     00C2  160A  158A  25D7  120A  118A  	fcall	___fleq
 10904     00C7  1803               	btfsc	3,0
 10905     00C8  28CA               	goto	u4461
 10906     00C9  28CB               	goto	u4460
 10907     00CA                     u4461:
 10908     00CA  2ADC               	goto	l3192
 10909     00CB                     u4460:
 10910     00CB  28DC               	goto	l3172
 10911     00CC                     l3170:
 10912                           
 10913                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10914     00CC  1683               	bsf	3,5	;RP0=1, select bank1
 10915     00CD  1303               	bcf	3,6	;RP1=0, select bank1
 10916     00CE  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10917     00CF  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10918     00D0  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10919     00D1  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10920     00D2  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10921     00D3  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10922     00D4  0833               	movf	efgtoa@ou^(0+128),w
 10923     00D5  00C8               	movwf	efgtoa@u^(0+128)
 10924                           
 10925                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10926     00D6  3001               	movlw	1
 10927     00D7  07AF               	addwf	efgtoa@e^(0+128),f
 10928     00D8  1803               	skipnc
 10929     00D9  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 10930     00DA  3000               	movlw	0
 10931     00DB  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 10932     00DC                     l3172:
 10933                           
 10934                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10935     00DC  3041               	movlw	65
 10936     00DD  1283               	bcf	3,5	;RP0=0, select bank0
 10937     00DE  1303               	bcf	3,6	;RP1=0, select bank0
 10938     00DF  00A3               	movwf	___flmul@b+3
 10939     00E0  3020               	movlw	32
 10940     00E1  00A2               	movwf	___flmul@b+2
 10941     00E2  3000               	movlw	0
 10942     00E3  00A1               	movwf	___flmul@b+1
 10943     00E4  3000               	movlw	0
 10944     00E5  00A0               	movwf	___flmul@b
 10945     00E6  1683               	bsf	3,5	;RP0=1, select bank1
 10946     00E7  1303               	bcf	3,6	;RP1=0, select bank1
 10947     00E8  084B               	movf	(efgtoa@u+3)^(0+128),w
 10948     00E9  1283               	bcf	3,5	;RP0=0, select bank0
 10949     00EA  1303               	bcf	3,6	;RP1=0, select bank0
 10950     00EB  00A7               	movwf	___flmul@a+3
 10951     00EC  1683               	bsf	3,5	;RP0=1, select bank1
 10952     00ED  1303               	bcf	3,6	;RP1=0, select bank1
 10953     00EE  084A               	movf	(efgtoa@u+2)^(0+128),w
 10954     00EF  1283               	bcf	3,5	;RP0=0, select bank0
 10955     00F0  1303               	bcf	3,6	;RP1=0, select bank0
 10956     00F1  00A6               	movwf	___flmul@a+2
 10957     00F2  1683               	bsf	3,5	;RP0=1, select bank1
 10958     00F3  1303               	bcf	3,6	;RP1=0, select bank1
 10959     00F4  0849               	movf	(efgtoa@u+1)^(0+128),w
 10960     00F5  1283               	bcf	3,5	;RP0=0, select bank0
 10961     00F6  1303               	bcf	3,6	;RP1=0, select bank0
 10962     00F7  00A5               	movwf	___flmul@a+1
 10963     00F8  1683               	bsf	3,5	;RP0=1, select bank1
 10964     00F9  1303               	bcf	3,6	;RP1=0, select bank1
 10965     00FA  0848               	movf	efgtoa@u^(0+128),w
 10966     00FB  1283               	bcf	3,5	;RP0=0, select bank0
 10967     00FC  1303               	bcf	3,6	;RP1=0, select bank0
 10968     00FD  00A4               	movwf	___flmul@a
 10969     00FE  120A  158A  217B  120A  118A  	fcall	___flmul
 10970     0103  1283               	bcf	3,5	;RP0=0, select bank0
 10971     0104  1303               	bcf	3,6	;RP1=0, select bank0
 10972     0105  0823               	movf	?___flmul+3,w
 10973     0106  1683               	bsf	3,5	;RP0=1, select bank1
 10974     0107  1303               	bcf	3,6	;RP1=0, select bank1
 10975     0108  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10976     0109  1283               	bcf	3,5	;RP0=0, select bank0
 10977     010A  1303               	bcf	3,6	;RP1=0, select bank0
 10978     010B  0822               	movf	?___flmul+2,w
 10979     010C  1683               	bsf	3,5	;RP0=1, select bank1
 10980     010D  1303               	bcf	3,6	;RP1=0, select bank1
 10981     010E  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10982     010F  1283               	bcf	3,5	;RP0=0, select bank0
 10983     0110  1303               	bcf	3,6	;RP1=0, select bank0
 10984     0111  0821               	movf	?___flmul+1,w
 10985     0112  1683               	bsf	3,5	;RP0=1, select bank1
 10986     0113  1303               	bcf	3,6	;RP1=0, select bank1
 10987     0114  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10988     0115  1283               	bcf	3,5	;RP0=0, select bank0
 10989     0116  1303               	bcf	3,6	;RP1=0, select bank0
 10990     0117  0820               	movf	?___flmul,w
 10991     0118  1683               	bsf	3,5	;RP0=1, select bank1
 10992     0119  1303               	bcf	3,6	;RP1=0, select bank1
 10993     011A  00B3               	movwf	efgtoa@ou^(0+128)
 10994     011B                     l3174:
 10995     011B  0844               	movf	efgtoa@g^(0+128),w
 10996     011C  1283               	bcf	3,5	;RP0=0, select bank0
 10997     011D  1303               	bcf	3,6	;RP1=0, select bank0
 10998     011E  00D0               	movwf	??_efgtoa
 10999     011F  1683               	bsf	3,5	;RP0=1, select bank1
 11000     0120  1303               	bcf	3,6	;RP1=0, select bank1
 11001     0121  0845               	movf	(efgtoa@g+1)^(0+128),w
 11002     0122  1283               	bcf	3,5	;RP0=0, select bank0
 11003     0123  1303               	bcf	3,6	;RP1=0, select bank0
 11004     0124  00D1               	movwf	??_efgtoa+1
 11005     0125  1683               	bsf	3,5	;RP0=1, select bank1
 11006     0126  1303               	bcf	3,6	;RP1=0, select bank1
 11007     0127  0846               	movf	(efgtoa@g+2)^(0+128),w
 11008     0128  1283               	bcf	3,5	;RP0=0, select bank0
 11009     0129  1303               	bcf	3,6	;RP1=0, select bank0
 11010     012A  00D2               	movwf	??_efgtoa+2
 11011     012B  1683               	bsf	3,5	;RP0=1, select bank1
 11012     012C  1303               	bcf	3,6	;RP1=0, select bank1
 11013     012D  0847               	movf	(efgtoa@g+3)^(0+128),w
 11014     012E  1283               	bcf	3,5	;RP0=0, select bank0
 11015     012F  1303               	bcf	3,6	;RP1=0, select bank0
 11016     0130  00D3               	movwf	??_efgtoa+3
 11017     0131  1683               	bsf	3,5	;RP0=1, select bank1
 11018     0132  1303               	bcf	3,6	;RP1=0, select bank1
 11019     0133  0833               	movf	efgtoa@ou^(0+128),w
 11020     0134  1283               	bcf	3,5	;RP0=0, select bank0
 11021     0135  1303               	bcf	3,6	;RP1=0, select bank0
 11022     0136  02D0               	subwf	??_efgtoa,f
 11023     0137  1683               	bsf	3,5	;RP0=1, select bank1
 11024     0138  1303               	bcf	3,6	;RP1=0, select bank1
 11025     0139  0834               	movf	(efgtoa@ou+1)^(0+128),w
 11026     013A  1C03               	skipc
 11027     013B  0F34               	incfsz	(efgtoa@ou+1)^(0+128),w
 11028     013C  293E               	goto	u4471
 11029     013D  2941               	goto	u4472
 11030     013E                     u4471:
 11031     013E  1283               	bcf	3,5	;RP0=0, select bank0
 11032     013F  1303               	bcf	3,6	;RP1=0, select bank0
 11033     0140  02D1               	subwf	??_efgtoa+1,f
 11034     0141                     u4472:
 11035     0141  1683               	bsf	3,5	;RP0=1, select bank1
 11036     0142  1303               	bcf	3,6	;RP1=0, select bank1
 11037     0143  0835               	movf	(efgtoa@ou+2)^(0+128),w
 11038     0144  1C03               	skipc
 11039     0145  0F35               	incfsz	(efgtoa@ou+2)^(0+128),w
 11040     0146  2948               	goto	u4473
 11041     0147  294B               	goto	u4474
 11042     0148                     u4473:
 11043     0148  1283               	bcf	3,5	;RP0=0, select bank0
 11044     0149  1303               	bcf	3,6	;RP1=0, select bank0
 11045     014A  02D2               	subwf	??_efgtoa+2,f
 11046     014B                     u4474:
 11047     014B  1683               	bsf	3,5	;RP0=1, select bank1
 11048     014C  1303               	bcf	3,6	;RP1=0, select bank1
 11049     014D  0836               	movf	(efgtoa@ou+3)^(0+128),w
 11050     014E  1C03               	skipc
 11051     014F  0F36               	incfsz	(efgtoa@ou+3)^(0+128),w
 11052     0150  2952               	goto	u4475
 11053     0151  2955               	goto	u4476
 11054     0152                     u4475:
 11055     0152  1283               	bcf	3,5	;RP0=0, select bank0
 11056     0153  1303               	bcf	3,6	;RP1=0, select bank0
 11057     0154  02D3               	subwf	??_efgtoa+3,f
 11058     0155                     u4476:
 11059     0155  1683               	bsf	3,5	;RP0=1, select bank1
 11060     0156  1303               	bcf	3,6	;RP1=0, select bank1
 11061     0157  1283               	bcf	3,5	;RP0=0, select bank0
 11062     0158  1303               	bcf	3,6	;RP1=0, select bank0
 11063     0159  0853               	movf	??_efgtoa+3,w
 11064     015A  00F3               	movwf	labs@a+3
 11065     015B  0852               	movf	??_efgtoa+2,w
 11066     015C  00F2               	movwf	labs@a+2
 11067     015D  0851               	movf	??_efgtoa+1,w
 11068     015E  00F1               	movwf	labs@a+1
 11069     015F  0850               	movf	??_efgtoa,w
 11070     0160  00F0               	movwf	labs@a
 11071     0161  160A  158A  228E  120A  118A  	fcall	_labs
 11072     0166  1BF3               	btfsc	?_labs+3,7
 11073     0167  2978               	goto	u4481
 11074     0168  0873               	movf	?_labs+3,w
 11075     0169  1D03               	btfss	3,2
 11076     016A  2979               	goto	u4480
 11077     016B  0872               	movf	?_labs+2,w
 11078     016C  1D03               	btfss	3,2
 11079     016D  2979               	goto	u4480
 11080     016E  0871               	movf	?_labs+1,w
 11081     016F  1D03               	btfss	3,2
 11082     0170  2979               	goto	u4480
 11083     0171  3002               	movlw	2
 11084     0172  0270               	subwf	?_labs,w
 11085     0173  1D03               	skipz
 11086     0174  2975               	goto	u4483
 11087     0175                     u4483:
 11088     0175  1C03               	btfss	3,0
 11089     0176  2978               	goto	u4481
 11090     0177  2979               	goto	u4480
 11091     0178                     u4481:
 11092     0178  28CC               	goto	l3170
 11093     0179                     u4480:
 11094     0179                     l3176:
 11095     0179  1683               	bsf	3,5	;RP0=1, select bank1
 11096     017A  1303               	bcf	3,6	;RP1=0, select bank1
 11097     017B  0836               	movf	(efgtoa@ou+3)^(0+128),w
 11098     017C  1283               	bcf	3,5	;RP0=0, select bank0
 11099     017D  1303               	bcf	3,6	;RP1=0, select bank0
 11100     017E  00B8               	movwf	___flge@ff1+3
 11101     017F  1683               	bsf	3,5	;RP0=1, select bank1
 11102     0180  1303               	bcf	3,6	;RP1=0, select bank1
 11103     0181  0835               	movf	(efgtoa@ou+2)^(0+128),w
 11104     0182  1283               	bcf	3,5	;RP0=0, select bank0
 11105     0183  1303               	bcf	3,6	;RP1=0, select bank0
 11106     0184  00B7               	movwf	___flge@ff1+2
 11107     0185  1683               	bsf	3,5	;RP0=1, select bank1
 11108     0186  1303               	bcf	3,6	;RP1=0, select bank1
 11109     0187  0834               	movf	(efgtoa@ou+1)^(0+128),w
 11110     0188  1283               	bcf	3,5	;RP0=0, select bank0
 11111     0189  1303               	bcf	3,6	;RP1=0, select bank0
 11112     018A  00B6               	movwf	___flge@ff1+1
 11113     018B  1683               	bsf	3,5	;RP0=1, select bank1
 11114     018C  1303               	bcf	3,6	;RP1=0, select bank1
 11115     018D  0833               	movf	efgtoa@ou^(0+128),w
 11116     018E  1283               	bcf	3,5	;RP0=0, select bank0
 11117     018F  1303               	bcf	3,6	;RP1=0, select bank0
 11118     0190  00B5               	movwf	___flge@ff1
 11119     0191  1683               	bsf	3,5	;RP0=1, select bank1
 11120     0192  1303               	bcf	3,6	;RP1=0, select bank1
 11121     0193  0847               	movf	(efgtoa@g+3)^(0+128),w
 11122     0194  1283               	bcf	3,5	;RP0=0, select bank0
 11123     0195  1303               	bcf	3,6	;RP1=0, select bank0
 11124     0196  00BC               	movwf	___flge@ff2+3
 11125     0197  1683               	bsf	3,5	;RP0=1, select bank1
 11126     0198  1303               	bcf	3,6	;RP1=0, select bank1
 11127     0199  0846               	movf	(efgtoa@g+2)^(0+128),w
 11128     019A  1283               	bcf	3,5	;RP0=0, select bank0
 11129     019B  1303               	bcf	3,6	;RP1=0, select bank0
 11130     019C  00BB               	movwf	___flge@ff2+2
 11131     019D  1683               	bsf	3,5	;RP0=1, select bank1
 11132     019E  1303               	bcf	3,6	;RP1=0, select bank1
 11133     019F  0845               	movf	(efgtoa@g+1)^(0+128),w
 11134     01A0  1283               	bcf	3,5	;RP0=0, select bank0
 11135     01A1  1303               	bcf	3,6	;RP1=0, select bank0
 11136     01A2  00BA               	movwf	___flge@ff2+1
 11137     01A3  1683               	bsf	3,5	;RP0=1, select bank1
 11138     01A4  1303               	bcf	3,6	;RP1=0, select bank1
 11139     01A5  0844               	movf	efgtoa@g^(0+128),w
 11140     01A6  1283               	bcf	3,5	;RP0=0, select bank0
 11141     01A7  1303               	bcf	3,6	;RP1=0, select bank0
 11142     01A8  00B9               	movwf	___flge@ff2
 11143     01A9  160A  118A  205E  120A  118A  	fcall	___flge
 11144     01AE  1C03               	btfss	3,0
 11145     01AF  29B1               	goto	u4491
 11146     01B0  29B2               	goto	u4490
 11147     01B1                     u4491:
 11148     01B1  28CC               	goto	l3170
 11149     01B2                     u4490:
 11150     01B2                     l3178:
 11151                           
 11152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11153     01B2  1683               	bsf	3,5	;RP0=1, select bank1
 11154     01B3  1303               	bcf	3,6	;RP1=0, select bank1
 11155     01B4  0844               	movf	efgtoa@g^(0+128),w
 11156     01B5  1283               	bcf	3,5	;RP0=0, select bank0
 11157     01B6  1303               	bcf	3,6	;RP1=0, select bank0
 11158     01B7  00D0               	movwf	??_efgtoa
 11159     01B8  1683               	bsf	3,5	;RP0=1, select bank1
 11160     01B9  1303               	bcf	3,6	;RP1=0, select bank1
 11161     01BA  0845               	movf	(efgtoa@g+1)^(0+128),w
 11162     01BB  1283               	bcf	3,5	;RP0=0, select bank0
 11163     01BC  1303               	bcf	3,6	;RP1=0, select bank0
 11164     01BD  00D1               	movwf	??_efgtoa+1
 11165     01BE  1683               	bsf	3,5	;RP0=1, select bank1
 11166     01BF  1303               	bcf	3,6	;RP1=0, select bank1
 11167     01C0  0846               	movf	(efgtoa@g+2)^(0+128),w
 11168     01C1  1283               	bcf	3,5	;RP0=0, select bank0
 11169     01C2  1303               	bcf	3,6	;RP1=0, select bank0
 11170     01C3  00D2               	movwf	??_efgtoa+2
 11171     01C4  1683               	bsf	3,5	;RP0=1, select bank1
 11172     01C5  1303               	bcf	3,6	;RP1=0, select bank1
 11173     01C6  0847               	movf	(efgtoa@g+3)^(0+128),w
 11174     01C7  1283               	bcf	3,5	;RP0=0, select bank0
 11175     01C8  1303               	bcf	3,6	;RP1=0, select bank0
 11176     01C9  00D3               	movwf	??_efgtoa+3
 11177     01CA  1683               	bsf	3,5	;RP0=1, select bank1
 11178     01CB  1303               	bcf	3,6	;RP1=0, select bank1
 11179     01CC  0848               	movf	efgtoa@u^(0+128),w
 11180     01CD  1283               	bcf	3,5	;RP0=0, select bank0
 11181     01CE  1303               	bcf	3,6	;RP1=0, select bank0
 11182     01CF  02D0               	subwf	??_efgtoa,f
 11183     01D0  1683               	bsf	3,5	;RP0=1, select bank1
 11184     01D1  1303               	bcf	3,6	;RP1=0, select bank1
 11185     01D2  0849               	movf	(efgtoa@u+1)^(0+128),w
 11186     01D3  1C03               	skipc
 11187     01D4  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 11188     01D5  29D7               	goto	u4501
 11189     01D6  29DA               	goto	u4502
 11190     01D7                     u4501:
 11191     01D7  1283               	bcf	3,5	;RP0=0, select bank0
 11192     01D8  1303               	bcf	3,6	;RP1=0, select bank0
 11193     01D9  02D1               	subwf	??_efgtoa+1,f
 11194     01DA                     u4502:
 11195     01DA  1683               	bsf	3,5	;RP0=1, select bank1
 11196     01DB  1303               	bcf	3,6	;RP1=0, select bank1
 11197     01DC  084A               	movf	(efgtoa@u+2)^(0+128),w
 11198     01DD  1C03               	skipc
 11199     01DE  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 11200     01DF  29E1               	goto	u4503
 11201     01E0  29E4               	goto	u4504
 11202     01E1                     u4503:
 11203     01E1  1283               	bcf	3,5	;RP0=0, select bank0
 11204     01E2  1303               	bcf	3,6	;RP1=0, select bank0
 11205     01E3  02D2               	subwf	??_efgtoa+2,f
 11206     01E4                     u4504:
 11207     01E4  1683               	bsf	3,5	;RP0=1, select bank1
 11208     01E5  1303               	bcf	3,6	;RP1=0, select bank1
 11209     01E6  084B               	movf	(efgtoa@u+3)^(0+128),w
 11210     01E7  1C03               	skipc
 11211     01E8  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 11212     01E9  29EB               	goto	u4505
 11213     01EA  29EE               	goto	u4506
 11214     01EB                     u4505:
 11215     01EB  1283               	bcf	3,5	;RP0=0, select bank0
 11216     01EC  1303               	bcf	3,6	;RP1=0, select bank0
 11217     01ED  02D3               	subwf	??_efgtoa+3,f
 11218     01EE                     u4506:
 11219     01EE  1683               	bsf	3,5	;RP0=1, select bank1
 11220     01EF  1303               	bcf	3,6	;RP1=0, select bank1
 11221     01F0  1283               	bcf	3,5	;RP0=0, select bank0
 11222     01F1  1303               	bcf	3,6	;RP1=0, select bank0
 11223     01F2  0853               	movf	??_efgtoa+3,w
 11224     01F3  00F3               	movwf	labs@a+3
 11225     01F4  0852               	movf	??_efgtoa+2,w
 11226     01F5  00F2               	movwf	labs@a+2
 11227     01F6  0851               	movf	??_efgtoa+1,w
 11228     01F7  00F1               	movwf	labs@a+1
 11229     01F8  0850               	movf	??_efgtoa,w
 11230     01F9  00F0               	movwf	labs@a
 11231     01FA  160A  158A  228E  120A  118A  	fcall	_labs
 11232     01FF  1BF3               	btfsc	?_labs+3,7
 11233     0200  2A12               	goto	u4510
 11234     0201  0873               	movf	?_labs+3,w
 11235     0202  1D03               	btfss	3,2
 11236     0203  2A11               	goto	u4511
 11237     0204  0872               	movf	?_labs+2,w
 11238     0205  1D03               	btfss	3,2
 11239     0206  2A11               	goto	u4511
 11240     0207  0871               	movf	?_labs+1,w
 11241     0208  1D03               	btfss	3,2
 11242     0209  2A11               	goto	u4511
 11243     020A  3002               	movlw	2
 11244     020B  0270               	subwf	?_labs,w
 11245     020C  1D03               	skipz
 11246     020D  2A0E               	goto	u4513
 11247     020E                     u4513:
 11248     020E  1803               	btfsc	3,0
 11249     020F  2A11               	goto	u4511
 11250     0210  2A12               	goto	u4510
 11251     0211                     u4511:
 11252     0211  2AA3               	goto	l3190
 11253     0212                     u4510:
 11254     0212                     l3180:
 11255                           
 11256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11257     0212  1683               	bsf	3,5	;RP0=1, select bank1
 11258     0213  1303               	bcf	3,6	;RP1=0, select bank1
 11259     0214  084B               	movf	(efgtoa@u+3)^(0+128),w
 11260     0215  00C7               	movwf	(efgtoa@g+3)^(0+128)
 11261     0216  084A               	movf	(efgtoa@u+2)^(0+128),w
 11262     0217  00C6               	movwf	(efgtoa@g+2)^(0+128)
 11263     0218  0849               	movf	(efgtoa@u+1)^(0+128),w
 11264     0219  00C5               	movwf	(efgtoa@g+1)^(0+128)
 11265     021A  0848               	movf	efgtoa@u^(0+128),w
 11266     021B  00C4               	movwf	efgtoa@g^(0+128)
 11267                           
 11268                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
 11269     021C  2ADC               	goto	l3192
 11270     021D                     l3182:
 11271                           
 11272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11273     021D  3041               	movlw	65
 11274     021E  00F3               	movwf	___fldiv@a+3
 11275     021F  3020               	movlw	32
 11276     0220  00F2               	movwf	___fldiv@a+2
 11277     0221  3000               	movlw	0
 11278     0222  00F1               	movwf	___fldiv@a+1
 11279     0223  3000               	movlw	0
 11280     0224  00F0               	movwf	___fldiv@a
 11281     0225  1683               	bsf	3,5	;RP0=1, select bank1
 11282     0226  1303               	bcf	3,6	;RP1=0, select bank1
 11283     0227  084B               	movf	(efgtoa@u+3)^(0+128),w
 11284     0228  00F7               	movwf	___fldiv@b+3
 11285     0229  084A               	movf	(efgtoa@u+2)^(0+128),w
 11286     022A  00F6               	movwf	___fldiv@b+2
 11287     022B  0849               	movf	(efgtoa@u+1)^(0+128),w
 11288     022C  00F5               	movwf	___fldiv@b+1
 11289     022D  0848               	movf	efgtoa@u^(0+128),w
 11290     022E  00F4               	movwf	___fldiv@b
 11291     022F  160A  118A  23D4  120A  118A  	fcall	___fldiv
 11292     0234  0873               	movf	?___fldiv+3,w
 11293     0235  1683               	bsf	3,5	;RP0=1, select bank1
 11294     0236  1303               	bcf	3,6	;RP1=0, select bank1
 11295     0237  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11296     0238  0872               	movf	?___fldiv+2,w
 11297     0239  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11298     023A  0871               	movf	?___fldiv+1,w
 11299     023B  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11300     023C  0870               	movf	?___fldiv,w
 11301     023D  00C8               	movwf	efgtoa@u^(0+128)
 11302     023E                     l3184:
 11303                           
 11304                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
 11305     023E  30FF               	movlw	255
 11306     023F  07AF               	addwf	efgtoa@e^(0+128),f
 11307     0240  1803               	skipnc
 11308     0241  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 11309     0242  30FF               	movlw	255
 11310     0243  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 11311     0244                     l3186:
 11312                           
 11313                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11314     0244  0844               	movf	efgtoa@g^(0+128),w
 11315     0245  1283               	bcf	3,5	;RP0=0, select bank0
 11316     0246  1303               	bcf	3,6	;RP1=0, select bank0
 11317     0247  00D0               	movwf	??_efgtoa
 11318     0248  1683               	bsf	3,5	;RP0=1, select bank1
 11319     0249  1303               	bcf	3,6	;RP1=0, select bank1
 11320     024A  0845               	movf	(efgtoa@g+1)^(0+128),w
 11321     024B  1283               	bcf	3,5	;RP0=0, select bank0
 11322     024C  1303               	bcf	3,6	;RP1=0, select bank0
 11323     024D  00D1               	movwf	??_efgtoa+1
 11324     024E  1683               	bsf	3,5	;RP0=1, select bank1
 11325     024F  1303               	bcf	3,6	;RP1=0, select bank1
 11326     0250  0846               	movf	(efgtoa@g+2)^(0+128),w
 11327     0251  1283               	bcf	3,5	;RP0=0, select bank0
 11328     0252  1303               	bcf	3,6	;RP1=0, select bank0
 11329     0253  00D2               	movwf	??_efgtoa+2
 11330     0254  1683               	bsf	3,5	;RP0=1, select bank1
 11331     0255  1303               	bcf	3,6	;RP1=0, select bank1
 11332     0256  0847               	movf	(efgtoa@g+3)^(0+128),w
 11333     0257  1283               	bcf	3,5	;RP0=0, select bank0
 11334     0258  1303               	bcf	3,6	;RP1=0, select bank0
 11335     0259  00D3               	movwf	??_efgtoa+3
 11336     025A  1683               	bsf	3,5	;RP0=1, select bank1
 11337     025B  1303               	bcf	3,6	;RP1=0, select bank1
 11338     025C  0848               	movf	efgtoa@u^(0+128),w
 11339     025D  1283               	bcf	3,5	;RP0=0, select bank0
 11340     025E  1303               	bcf	3,6	;RP1=0, select bank0
 11341     025F  02D0               	subwf	??_efgtoa,f
 11342     0260  1683               	bsf	3,5	;RP0=1, select bank1
 11343     0261  1303               	bcf	3,6	;RP1=0, select bank1
 11344     0262  0849               	movf	(efgtoa@u+1)^(0+128),w
 11345     0263  1C03               	skipc
 11346     0264  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 11347     0265  2A67               	goto	u4521
 11348     0266  2A6A               	goto	u4522
 11349     0267                     u4521:
 11350     0267  1283               	bcf	3,5	;RP0=0, select bank0
 11351     0268  1303               	bcf	3,6	;RP1=0, select bank0
 11352     0269  02D1               	subwf	??_efgtoa+1,f
 11353     026A                     u4522:
 11354     026A  1683               	bsf	3,5	;RP0=1, select bank1
 11355     026B  1303               	bcf	3,6	;RP1=0, select bank1
 11356     026C  084A               	movf	(efgtoa@u+2)^(0+128),w
 11357     026D  1C03               	skipc
 11358     026E  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 11359     026F  2A71               	goto	u4523
 11360     0270  2A74               	goto	u4524
 11361     0271                     u4523:
 11362     0271  1283               	bcf	3,5	;RP0=0, select bank0
 11363     0272  1303               	bcf	3,6	;RP1=0, select bank0
 11364     0273  02D2               	subwf	??_efgtoa+2,f
 11365     0274                     u4524:
 11366     0274  1683               	bsf	3,5	;RP0=1, select bank1
 11367     0275  1303               	bcf	3,6	;RP1=0, select bank1
 11368     0276  084B               	movf	(efgtoa@u+3)^(0+128),w
 11369     0277  1C03               	skipc
 11370     0278  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 11371     0279  2A7B               	goto	u4525
 11372     027A  2A7E               	goto	u4526
 11373     027B                     u4525:
 11374     027B  1283               	bcf	3,5	;RP0=0, select bank0
 11375     027C  1303               	bcf	3,6	;RP1=0, select bank0
 11376     027D  02D3               	subwf	??_efgtoa+3,f
 11377     027E                     u4526:
 11378     027E  1683               	bsf	3,5	;RP0=1, select bank1
 11379     027F  1303               	bcf	3,6	;RP1=0, select bank1
 11380     0280  1283               	bcf	3,5	;RP0=0, select bank0
 11381     0281  1303               	bcf	3,6	;RP1=0, select bank0
 11382     0282  0853               	movf	??_efgtoa+3,w
 11383     0283  00F3               	movwf	labs@a+3
 11384     0284  0852               	movf	??_efgtoa+2,w
 11385     0285  00F2               	movwf	labs@a+2
 11386     0286  0851               	movf	??_efgtoa+1,w
 11387     0287  00F1               	movwf	labs@a+1
 11388     0288  0850               	movf	??_efgtoa,w
 11389     0289  00F0               	movwf	labs@a
 11390     028A  160A  158A  228E  120A  118A  	fcall	_labs
 11391     028F  1BF3               	btfsc	?_labs+3,7
 11392     0290  2AA2               	goto	u4530
 11393     0291  0873               	movf	?_labs+3,w
 11394     0292  1D03               	btfss	3,2
 11395     0293  2AA1               	goto	u4531
 11396     0294  0872               	movf	?_labs+2,w
 11397     0295  1D03               	btfss	3,2
 11398     0296  2AA1               	goto	u4531
 11399     0297  0871               	movf	?_labs+1,w
 11400     0298  1D03               	btfss	3,2
 11401     0299  2AA1               	goto	u4531
 11402     029A  3002               	movlw	2
 11403     029B  0270               	subwf	?_labs,w
 11404     029C  1D03               	skipz
 11405     029D  2A9E               	goto	u4533
 11406     029E                     u4533:
 11407     029E  1803               	btfsc	3,0
 11408     029F  2AA1               	goto	u4531
 11409     02A0  2AA2               	goto	u4530
 11410     02A1                     u4531:
 11411     02A1  2AA3               	goto	l3190
 11412     02A2                     u4530:
 11413     02A2  2A12               	goto	l3180
 11414     02A3                     l3190:
 11415                           
 11416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11417     02A3  1683               	bsf	3,5	;RP0=1, select bank1
 11418     02A4  1303               	bcf	3,6	;RP1=0, select bank1
 11419     02A5  0847               	movf	(efgtoa@g+3)^(0+128),w
 11420     02A6  1283               	bcf	3,5	;RP0=0, select bank0
 11421     02A7  1303               	bcf	3,6	;RP1=0, select bank0
 11422     02A8  00B8               	movwf	___flge@ff1+3
 11423     02A9  1683               	bsf	3,5	;RP0=1, select bank1
 11424     02AA  1303               	bcf	3,6	;RP1=0, select bank1
 11425     02AB  0846               	movf	(efgtoa@g+2)^(0+128),w
 11426     02AC  1283               	bcf	3,5	;RP0=0, select bank0
 11427     02AD  1303               	bcf	3,6	;RP1=0, select bank0
 11428     02AE  00B7               	movwf	___flge@ff1+2
 11429     02AF  1683               	bsf	3,5	;RP0=1, select bank1
 11430     02B0  1303               	bcf	3,6	;RP1=0, select bank1
 11431     02B1  0845               	movf	(efgtoa@g+1)^(0+128),w
 11432     02B2  1283               	bcf	3,5	;RP0=0, select bank0
 11433     02B3  1303               	bcf	3,6	;RP1=0, select bank0
 11434     02B4  00B6               	movwf	___flge@ff1+1
 11435     02B5  1683               	bsf	3,5	;RP0=1, select bank1
 11436     02B6  1303               	bcf	3,6	;RP1=0, select bank1
 11437     02B7  0844               	movf	efgtoa@g^(0+128),w
 11438     02B8  1283               	bcf	3,5	;RP0=0, select bank0
 11439     02B9  1303               	bcf	3,6	;RP1=0, select bank0
 11440     02BA  00B5               	movwf	___flge@ff1
 11441     02BB  1683               	bsf	3,5	;RP0=1, select bank1
 11442     02BC  1303               	bcf	3,6	;RP1=0, select bank1
 11443     02BD  084B               	movf	(efgtoa@u+3)^(0+128),w
 11444     02BE  1283               	bcf	3,5	;RP0=0, select bank0
 11445     02BF  1303               	bcf	3,6	;RP1=0, select bank0
 11446     02C0  00BC               	movwf	___flge@ff2+3
 11447     02C1  1683               	bsf	3,5	;RP0=1, select bank1
 11448     02C2  1303               	bcf	3,6	;RP1=0, select bank1
 11449     02C3  084A               	movf	(efgtoa@u+2)^(0+128),w
 11450     02C4  1283               	bcf	3,5	;RP0=0, select bank0
 11451     02C5  1303               	bcf	3,6	;RP1=0, select bank0
 11452     02C6  00BB               	movwf	___flge@ff2+2
 11453     02C7  1683               	bsf	3,5	;RP0=1, select bank1
 11454     02C8  1303               	bcf	3,6	;RP1=0, select bank1
 11455     02C9  0849               	movf	(efgtoa@u+1)^(0+128),w
 11456     02CA  1283               	bcf	3,5	;RP0=0, select bank0
 11457     02CB  1303               	bcf	3,6	;RP1=0, select bank0
 11458     02CC  00BA               	movwf	___flge@ff2+1
 11459     02CD  1683               	bsf	3,5	;RP0=1, select bank1
 11460     02CE  1303               	bcf	3,6	;RP1=0, select bank1
 11461     02CF  0848               	movf	efgtoa@u^(0+128),w
 11462     02D0  1283               	bcf	3,5	;RP0=0, select bank0
 11463     02D1  1303               	bcf	3,6	;RP1=0, select bank0
 11464     02D2  00B9               	movwf	___flge@ff2
 11465     02D3  160A  118A  205E  120A  118A  	fcall	___flge
 11466     02D8  1C03               	btfss	3,0
 11467     02D9  2ADB               	goto	u4541
 11468     02DA  2ADC               	goto	u4540
 11469     02DB                     u4541:
 11470     02DB  2A1D               	goto	l3182
 11471     02DC                     u4540:
 11472     02DC                     l3192:
 11473                           
 11474                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 11475     02DC  1283               	bcf	3,5	;RP0=0, select bank0
 11476     02DD  1303               	bcf	3,6	;RP1=0, select bank0
 11477     02DE  084F               	movf	efgtoa@c,w
 11478     02DF  1683               	bsf	3,5	;RP0=1, select bank1
 11479     02E0  1303               	bcf	3,6	;RP1=0, select bank1
 11480     02E1  00A9               	movwf	efgtoa@mode^(0+128)
 11481                           
 11482                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 11483     02E2  0829               	movf	efgtoa@mode^(0+128),w
 11484     02E3  00AA               	movwf	efgtoa@nmode^(0+128)
 11485     02E4                     l3194:
 11486                           
 11487                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 11488     02E4  1BEE               	btfsc	(_prec+1)^(0+128),7
 11489     02E5  2AE7               	goto	u4551
 11490     02E6  2AE8               	goto	u4550
 11491     02E7                     u4551:
 11492     02E7  2AED               	goto	l3198
 11493     02E8                     u4550:
 11494     02E8                     l3196:
 11495     02E8  086E               	movf	(_prec+1)^(0+128),w
 11496     02E9  00A3               	movwf	(efgtoa@p+1)^(0+128)
 11497     02EA  086D               	movf	_prec^(0+128),w
 11498     02EB  00A2               	movwf	efgtoa@p^(0+128)
 11499     02EC  2AF1               	goto	l886
 11500     02ED                     l3198:
 11501     02ED  3006               	movlw	6
 11502     02EE  00A2               	movwf	efgtoa@p^(0+128)
 11503     02EF  3000               	movlw	0
 11504     02F0  00A3               	movwf	(efgtoa@p^(0+128)+1)
 11505     02F1                     l886:
 11506                           
 11507                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
 11508     02F1  0823               	movf	(efgtoa@p+1)^(0+128),w
 11509     02F2  00AE               	movwf	(efgtoa@m+1)^(0+128)
 11510     02F3  0822               	movf	efgtoa@p^(0+128),w
 11511     02F4  00AD               	movwf	efgtoa@m^(0+128)
 11512                           
 11513                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
 11514     02F5  3001               	movlw	1
 11515     02F6  07AD               	addwf	efgtoa@m^(0+128),f
 11516     02F7  1803               	skipnc
 11517     02F8  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 11518     02F9  3000               	movlw	0
 11519     02FA  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 11520     02FB                     l3200:
 11521                           
 11522                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 11523     02FB  3066               	movlw	102
 11524     02FC  062A               	xorwf	efgtoa@nmode^(0+128),w
 11525     02FD  1D03               	btfss	3,2
 11526     02FE  2B00               	goto	u4561
 11527     02FF  2B01               	goto	u4560
 11528     0300                     u4561:
 11529     0300  2B1B               	goto	l3212
 11530     0301                     u4560:
 11531     0301                     l3202:
 11532                           
 11533                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 11534     0301  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
 11535     0302  2B04               	goto	u4571
 11536     0303  2B05               	goto	u4570
 11537     0304                     u4571:
 11538     0304  2B0F               	goto	l3208
 11539     0305                     u4570:
 11540     0305                     l3204:
 11541                           
 11542                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 11543     0305  303F               	movlw	63
 11544     0306  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11545     0307  3080               	movlw	128
 11546     0308  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11547     0309  3000               	movlw	0
 11548     030A  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11549     030B  3000               	movlw	0
 11550     030C  00C8               	movwf	efgtoa@u^(0+128)
 11551     030D                     l3206:
 11552                           
 11553                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 11554     030D  01AF               	clrf	efgtoa@e^(0+128)
 11555     030E  01B0               	clrf	(efgtoa@e+1)^(0+128)
 11556     030F                     l3208:
 11557                           
 11558                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 11559     030F  3067               	movlw	103
 11560     0310  0629               	xorwf	efgtoa@mode^(0+128),w
 11561     0311  1903               	btfsc	3,2
 11562     0312  2B14               	goto	u4581
 11563     0313  2B15               	goto	u4580
 11564     0314                     u4581:
 11565     0314  2B1B               	goto	l3212
 11566     0315                     u4580:
 11567     0315                     l3210:
 11568                           
 11569                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 11570     0315  082F               	movf	efgtoa@e^(0+128),w
 11571     0316  07AD               	addwf	efgtoa@m^(0+128),f
 11572     0317  1803               	skipnc
 11573     0318  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 11574     0319  0830               	movf	(efgtoa@e+1)^(0+128),w
 11575     031A  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 11576     031B                     l3212:
 11577                           
 11578                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 11579     031B  01B7               	clrf	efgtoa@i^(0+128)
 11580     031C  01B8               	clrf	(efgtoa@i+1)^(0+128)
 11581     031D                     l3214:
 11582                           
 11583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 11584     031D  0847               	movf	(efgtoa@g+3)^(0+128),w
 11585     031E  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11586     031F  0846               	movf	(efgtoa@g+2)^(0+128),w
 11587     0320  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11588     0321  0845               	movf	(efgtoa@g+1)^(0+128),w
 11589     0322  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11590     0323  0844               	movf	efgtoa@g^(0+128),w
 11591     0324  00B9               	movwf	efgtoa@h^(0+128)
 11592     0325                     l3216:
 11593                           
 11594                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 11595     0325  084B               	movf	(efgtoa@u+3)^(0+128),w
 11596     0326  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 11597     0327  084A               	movf	(efgtoa@u+2)^(0+128),w
 11598     0328  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 11599     0329  0849               	movf	(efgtoa@u+1)^(0+128),w
 11600     032A  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 11601     032B  0848               	movf	efgtoa@u^(0+128),w
 11602     032C  00B3               	movwf	efgtoa@ou^(0+128)
 11603                           
 11604                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11605     032D  2C2A               	goto	l3228
 11606     032E                     l3218:
 11607                           
 11608                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 11609     032E  1683               	bsf	3,5	;RP0=1, select bank1
 11610     032F  1303               	bcf	3,6	;RP1=0, select bank1
 11611     0330  084B               	movf	(efgtoa@u+3)^(0+128),w
 11612     0331  00F3               	movwf	___fldiv@a+3
 11613     0332  084A               	movf	(efgtoa@u+2)^(0+128),w
 11614     0333  00F2               	movwf	___fldiv@a+2
 11615     0334  0849               	movf	(efgtoa@u+1)^(0+128),w
 11616     0335  00F1               	movwf	___fldiv@a+1
 11617     0336  0848               	movf	efgtoa@u^(0+128),w
 11618     0337  00F0               	movwf	___fldiv@a
 11619     0338  083C               	movf	(efgtoa@h+3)^(0+128),w
 11620     0339  00F7               	movwf	___fldiv@b+3
 11621     033A  083B               	movf	(efgtoa@h+2)^(0+128),w
 11622     033B  00F6               	movwf	___fldiv@b+2
 11623     033C  083A               	movf	(efgtoa@h+1)^(0+128),w
 11624     033D  00F5               	movwf	___fldiv@b+1
 11625     033E  0839               	movf	efgtoa@h^(0+128),w
 11626     033F  00F4               	movwf	___fldiv@b
 11627     0340  160A  118A  23D4  120A  118A  	fcall	___fldiv
 11628     0345  0873               	movf	?___fldiv+3,w
 11629     0346  1283               	bcf	3,5	;RP0=0, select bank0
 11630     0347  1303               	bcf	3,6	;RP1=0, select bank0
 11631     0348  00B0               	movwf	floorf@x+3
 11632     0349  0872               	movf	?___fldiv+2,w
 11633     034A  00AF               	movwf	floorf@x+2
 11634     034B  0871               	movf	?___fldiv+1,w
 11635     034C  00AE               	movwf	floorf@x+1
 11636     034D  0870               	movf	?___fldiv,w
 11637     034E  00AD               	movwf	floorf@x
 11638     034F  160A  118A  21B6  120A  118A  	fcall	_floorf
 11639     0354  1283               	bcf	3,5	;RP0=0, select bank0
 11640     0355  1303               	bcf	3,6	;RP1=0, select bank0
 11641     0356  0830               	movf	?_floorf+3,w
 11642     0357  1683               	bsf	3,5	;RP0=1, select bank1
 11643     0358  1303               	bcf	3,6	;RP1=0, select bank1
 11644     0359  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11645     035A  1283               	bcf	3,5	;RP0=0, select bank0
 11646     035B  1303               	bcf	3,6	;RP1=0, select bank0
 11647     035C  082F               	movf	?_floorf+2,w
 11648     035D  1683               	bsf	3,5	;RP0=1, select bank1
 11649     035E  1303               	bcf	3,6	;RP1=0, select bank1
 11650     035F  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11651     0360  1283               	bcf	3,5	;RP0=0, select bank0
 11652     0361  1303               	bcf	3,6	;RP1=0, select bank0
 11653     0362  082E               	movf	?_floorf+1,w
 11654     0363  1683               	bsf	3,5	;RP0=1, select bank1
 11655     0364  1303               	bcf	3,6	;RP1=0, select bank1
 11656     0365  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11657     0366  1283               	bcf	3,5	;RP0=0, select bank0
 11658     0367  1303               	bcf	3,6	;RP1=0, select bank0
 11659     0368  082D               	movf	?_floorf,w
 11660     0369  1683               	bsf	3,5	;RP0=1, select bank1
 11661     036A  1303               	bcf	3,6	;RP1=0, select bank1
 11662     036B  00BD               	movwf	efgtoa@l^(0+128)
 11663     036C                     l3220:
 11664                           
 11665                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 11666     036C  0840               	movf	(efgtoa@l+3)^(0+128),w
 11667     036D  1283               	bcf	3,5	;RP0=0, select bank0
 11668     036E  1303               	bcf	3,6	;RP1=0, select bank0
 11669     036F  00C2               	movwf	___fltol@f1+3
 11670     0370  1683               	bsf	3,5	;RP0=1, select bank1
 11671     0371  1303               	bcf	3,6	;RP1=0, select bank1
 11672     0372  083F               	movf	(efgtoa@l+2)^(0+128),w
 11673     0373  1283               	bcf	3,5	;RP0=0, select bank0
 11674     0374  1303               	bcf	3,6	;RP1=0, select bank0
 11675     0375  00C1               	movwf	___fltol@f1+2
 11676     0376  1683               	bsf	3,5	;RP0=1, select bank1
 11677     0377  1303               	bcf	3,6	;RP1=0, select bank1
 11678     0378  083E               	movf	(efgtoa@l+1)^(0+128),w
 11679     0379  1283               	bcf	3,5	;RP0=0, select bank0
 11680     037A  1303               	bcf	3,6	;RP1=0, select bank0
 11681     037B  00C0               	movwf	___fltol@f1+1
 11682     037C  1683               	bsf	3,5	;RP0=1, select bank1
 11683     037D  1303               	bcf	3,6	;RP1=0, select bank1
 11684     037E  083D               	movf	efgtoa@l^(0+128),w
 11685     037F  1283               	bcf	3,5	;RP0=0, select bank0
 11686     0380  1303               	bcf	3,6	;RP1=0, select bank0
 11687     0381  00BF               	movwf	___fltol@f1
 11688     0382  160A  158A  26FD  120A  118A  	fcall	___fltol
 11689     0387  1283               	bcf	3,5	;RP0=0, select bank0
 11690     0388  1303               	bcf	3,6	;RP1=0, select bank0
 11691     0389  0840               	movf	?___fltol+1,w
 11692     038A  1683               	bsf	3,5	;RP0=1, select bank1
 11693     038B  1303               	bcf	3,6	;RP1=0, select bank1
 11694     038C  00AC               	movwf	(efgtoa@d+1)^(0+128)
 11695     038D  1283               	bcf	3,5	;RP0=0, select bank0
 11696     038E  1303               	bcf	3,6	;RP1=0, select bank0
 11697     038F  083F               	movf	?___fltol,w
 11698     0390  1683               	bsf	3,5	;RP0=1, select bank1
 11699     0391  1303               	bcf	3,6	;RP1=0, select bank1
 11700     0392  00AB               	movwf	efgtoa@d^(0+128)
 11701     0393                     l3222:
 11702                           
 11703                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 11704     0393  084B               	movf	(efgtoa@u+3)^(0+128),w
 11705     0394  1283               	bcf	3,5	;RP0=0, select bank0
 11706     0395  1303               	bcf	3,6	;RP1=0, select bank0
 11707     0396  00A7               	movwf	___flmul@a+3
 11708     0397  1683               	bsf	3,5	;RP0=1, select bank1
 11709     0398  1303               	bcf	3,6	;RP1=0, select bank1
 11710     0399  084A               	movf	(efgtoa@u+2)^(0+128),w
 11711     039A  1283               	bcf	3,5	;RP0=0, select bank0
 11712     039B  1303               	bcf	3,6	;RP1=0, select bank0
 11713     039C  00A6               	movwf	___flmul@a+2
 11714     039D  1683               	bsf	3,5	;RP0=1, select bank1
 11715     039E  1303               	bcf	3,6	;RP1=0, select bank1
 11716     039F  0849               	movf	(efgtoa@u+1)^(0+128),w
 11717     03A0  1283               	bcf	3,5	;RP0=0, select bank0
 11718     03A1  1303               	bcf	3,6	;RP1=0, select bank0
 11719     03A2  00A5               	movwf	___flmul@a+1
 11720     03A3  1683               	bsf	3,5	;RP0=1, select bank1
 11721     03A4  1303               	bcf	3,6	;RP1=0, select bank1
 11722     03A5  0848               	movf	efgtoa@u^(0+128),w
 11723     03A6  1283               	bcf	3,5	;RP0=0, select bank0
 11724     03A7  1303               	bcf	3,6	;RP1=0, select bank0
 11725     03A8  00A4               	movwf	___flmul@a
 11726     03A9  1683               	bsf	3,5	;RP0=1, select bank1
 11727     03AA  1303               	bcf	3,6	;RP1=0, select bank1
 11728     03AB  0840               	movf	(efgtoa@l+3)^(0+128),w
 11729     03AC  1283               	bcf	3,5	;RP0=0, select bank0
 11730     03AD  1303               	bcf	3,6	;RP1=0, select bank0
 11731     03AE  00A3               	movwf	___flmul@b+3
 11732     03AF  1683               	bsf	3,5	;RP0=1, select bank1
 11733     03B0  1303               	bcf	3,6	;RP1=0, select bank1
 11734     03B1  083F               	movf	(efgtoa@l+2)^(0+128),w
 11735     03B2  1283               	bcf	3,5	;RP0=0, select bank0
 11736     03B3  1303               	bcf	3,6	;RP1=0, select bank0
 11737     03B4  00A2               	movwf	___flmul@b+2
 11738     03B5  1683               	bsf	3,5	;RP0=1, select bank1
 11739     03B6  1303               	bcf	3,6	;RP1=0, select bank1
 11740     03B7  083E               	movf	(efgtoa@l+1)^(0+128),w
 11741     03B8  1283               	bcf	3,5	;RP0=0, select bank0
 11742     03B9  1303               	bcf	3,6	;RP1=0, select bank0
 11743     03BA  00A1               	movwf	___flmul@b+1
 11744     03BB  1683               	bsf	3,5	;RP0=1, select bank1
 11745     03BC  1303               	bcf	3,6	;RP1=0, select bank1
 11746     03BD  083D               	movf	efgtoa@l^(0+128),w
 11747     03BE  1283               	bcf	3,5	;RP0=0, select bank0
 11748     03BF  1303               	bcf	3,6	;RP1=0, select bank0
 11749     03C0  00A0               	movwf	___flmul@b
 11750     03C1  120A  158A  217B  120A  118A  	fcall	___flmul
 11751     03C6  1283               	bcf	3,5	;RP0=0, select bank0
 11752     03C7  1303               	bcf	3,6	;RP1=0, select bank0
 11753     03C8  0823               	movf	?___flmul+3,w
 11754     03C9  00B8               	movwf	___flsub@a+3
 11755     03CA  0822               	movf	?___flmul+2,w
 11756     03CB  00B7               	movwf	___flsub@a+2
 11757     03CC  0821               	movf	?___flmul+1,w
 11758     03CD  00B6               	movwf	___flsub@a+1
 11759     03CE  0820               	movf	?___flmul,w
 11760     03CF  00B5               	movwf	___flsub@a
 11761     03D0  1683               	bsf	3,5	;RP0=1, select bank1
 11762     03D1  1303               	bcf	3,6	;RP1=0, select bank1
 11763     03D2  083C               	movf	(efgtoa@h+3)^(0+128),w
 11764     03D3  1283               	bcf	3,5	;RP0=0, select bank0
 11765     03D4  1303               	bcf	3,6	;RP1=0, select bank0
 11766     03D5  00BC               	movwf	___flsub@b+3
 11767     03D6  1683               	bsf	3,5	;RP0=1, select bank1
 11768     03D7  1303               	bcf	3,6	;RP1=0, select bank1
 11769     03D8  083B               	movf	(efgtoa@h+2)^(0+128),w
 11770     03D9  1283               	bcf	3,5	;RP0=0, select bank0
 11771     03DA  1303               	bcf	3,6	;RP1=0, select bank0
 11772     03DB  00BB               	movwf	___flsub@b+2
 11773     03DC  1683               	bsf	3,5	;RP0=1, select bank1
 11774     03DD  1303               	bcf	3,6	;RP1=0, select bank1
 11775     03DE  083A               	movf	(efgtoa@h+1)^(0+128),w
 11776     03DF  1283               	bcf	3,5	;RP0=0, select bank0
 11777     03E0  1303               	bcf	3,6	;RP1=0, select bank0
 11778     03E1  00BA               	movwf	___flsub@b+1
 11779     03E2  1683               	bsf	3,5	;RP0=1, select bank1
 11780     03E3  1303               	bcf	3,6	;RP1=0, select bank1
 11781     03E4  0839               	movf	efgtoa@h^(0+128),w
 11782     03E5  1283               	bcf	3,5	;RP0=0, select bank0
 11783     03E6  1303               	bcf	3,6	;RP1=0, select bank0
 11784     03E7  00B9               	movwf	___flsub@b
 11785     03E8  120A  158A  2000  120A  118A  	fcall	___flsub
 11786     03ED  1283               	bcf	3,5	;RP0=0, select bank0
 11787     03EE  1303               	bcf	3,6	;RP1=0, select bank0
 11788     03EF  0838               	movf	?___flsub+3,w
 11789     03F0  1683               	bsf	3,5	;RP0=1, select bank1
 11790     03F1  1303               	bcf	3,6	;RP1=0, select bank1
 11791     03F2  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11792     03F3  1283               	bcf	3,5	;RP0=0, select bank0
 11793     03F4  1303               	bcf	3,6	;RP1=0, select bank0
 11794     03F5  0837               	movf	?___flsub+2,w
 11795     03F6  1683               	bsf	3,5	;RP0=1, select bank1
 11796     03F7  1303               	bcf	3,6	;RP1=0, select bank1
 11797     03F8  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11798     03F9  1283               	bcf	3,5	;RP0=0, select bank0
 11799     03FA  1303               	bcf	3,6	;RP1=0, select bank0
 11800     03FB  0836               	movf	?___flsub+1,w
 11801     03FC  1683               	bsf	3,5	;RP0=1, select bank1
 11802     03FD  1303               	bcf	3,6	;RP1=0, select bank1
 11803     03FE  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11804     03FF  1283               	bcf	3,5	;RP0=0, select bank0
 11805     0400  1303               	bcf	3,6	;RP1=0, select bank0
 11806     0401  0835               	movf	?___flsub,w
 11807     0402  1683               	bsf	3,5	;RP0=1, select bank1
 11808     0403  1303               	bcf	3,6	;RP1=0, select bank1
 11809     0404  00B9               	movwf	efgtoa@h^(0+128)
 11810     0405                     l3224:
 11811                           
 11812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 11813     0405  3041               	movlw	65
 11814     0406  00F3               	movwf	___fldiv@a+3
 11815     0407  3020               	movlw	32
 11816     0408  00F2               	movwf	___fldiv@a+2
 11817     0409  3000               	movlw	0
 11818     040A  00F1               	movwf	___fldiv@a+1
 11819     040B  3000               	movlw	0
 11820     040C  00F0               	movwf	___fldiv@a
 11821     040D  084B               	movf	(efgtoa@u+3)^(0+128),w
 11822     040E  00F7               	movwf	___fldiv@b+3
 11823     040F  084A               	movf	(efgtoa@u+2)^(0+128),w
 11824     0410  00F6               	movwf	___fldiv@b+2
 11825     0411  0849               	movf	(efgtoa@u+1)^(0+128),w
 11826     0412  00F5               	movwf	___fldiv@b+1
 11827     0413  0848               	movf	efgtoa@u^(0+128),w
 11828     0414  00F4               	movwf	___fldiv@b
 11829     0415  160A  118A  23D4  120A  118A  	fcall	___fldiv
 11830     041A  0873               	movf	?___fldiv+3,w
 11831     041B  1683               	bsf	3,5	;RP0=1, select bank1
 11832     041C  1303               	bcf	3,6	;RP1=0, select bank1
 11833     041D  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11834     041E  0872               	movf	?___fldiv+2,w
 11835     041F  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11836     0420  0871               	movf	?___fldiv+1,w
 11837     0421  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11838     0422  0870               	movf	?___fldiv,w
 11839     0423  00C8               	movwf	efgtoa@u^(0+128)
 11840     0424                     l3226:
 11841                           
 11842                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
 11843     0424  3001               	movlw	1
 11844     0425  07B7               	addwf	efgtoa@i^(0+128),f
 11845     0426  1803               	skipnc
 11846     0427  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 11847     0428  3000               	movlw	0
 11848     0429  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 11849     042A                     l3228:
 11850                           
 11851                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11852     042A  0838               	movf	(efgtoa@i+1)^(0+128),w
 11853     042B  3A80               	xorlw	128
 11854     042C  1283               	bcf	3,5	;RP0=0, select bank0
 11855     042D  1303               	bcf	3,6	;RP1=0, select bank0
 11856     042E  00D0               	movwf	??_efgtoa
 11857     042F  1683               	bsf	3,5	;RP0=1, select bank1
 11858     0430  1303               	bcf	3,6	;RP1=0, select bank1
 11859     0431  082E               	movf	(efgtoa@m+1)^(0+128),w
 11860     0432  3A80               	xorlw	128
 11861     0433  1283               	bcf	3,5	;RP0=0, select bank0
 11862     0434  1303               	bcf	3,6	;RP1=0, select bank0
 11863     0435  0250               	subwf	??_efgtoa,w
 11864     0436  1D03               	skipz
 11865     0437  2C3C               	goto	u4595
 11866     0438  1683               	bsf	3,5	;RP0=1, select bank1
 11867     0439  1303               	bcf	3,6	;RP1=0, select bank1
 11868     043A  082D               	movf	efgtoa@m^(0+128),w
 11869     043B  0237               	subwf	efgtoa@i^(0+128),w
 11870     043C                     u4595:
 11871     043C  1C03               	skipc
 11872     043D  2C3F               	goto	u4591
 11873     043E  2C40               	goto	u4590
 11874     043F                     u4591:
 11875     043F  2B2E               	goto	l3218
 11876     0440                     u4590:
 11877     0440                     l3230:
 11878                           
 11879                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 11880     0440  3040               	movlw	64
 11881     0441  1283               	bcf	3,5	;RP0=0, select bank0
 11882     0442  1303               	bcf	3,6	;RP1=0, select bank0
 11883     0443  00A3               	movwf	___flmul@b+3
 11884     0444  30A0               	movlw	160
 11885     0445  00A2               	movwf	___flmul@b+2
 11886     0446  3000               	movlw	0
 11887     0447  00A1               	movwf	___flmul@b+1
 11888     0448  3000               	movlw	0
 11889     0449  00A0               	movwf	___flmul@b
 11890     044A  1683               	bsf	3,5	;RP0=1, select bank1
 11891     044B  1303               	bcf	3,6	;RP1=0, select bank1
 11892     044C  084B               	movf	(efgtoa@u+3)^(0+128),w
 11893     044D  1283               	bcf	3,5	;RP0=0, select bank0
 11894     044E  1303               	bcf	3,6	;RP1=0, select bank0
 11895     044F  00A7               	movwf	___flmul@a+3
 11896     0450  1683               	bsf	3,5	;RP0=1, select bank1
 11897     0451  1303               	bcf	3,6	;RP1=0, select bank1
 11898     0452  084A               	movf	(efgtoa@u+2)^(0+128),w
 11899     0453  1283               	bcf	3,5	;RP0=0, select bank0
 11900     0454  1303               	bcf	3,6	;RP1=0, select bank0
 11901     0455  00A6               	movwf	___flmul@a+2
 11902     0456  1683               	bsf	3,5	;RP0=1, select bank1
 11903     0457  1303               	bcf	3,6	;RP1=0, select bank1
 11904     0458  0849               	movf	(efgtoa@u+1)^(0+128),w
 11905     0459  1283               	bcf	3,5	;RP0=0, select bank0
 11906     045A  1303               	bcf	3,6	;RP1=0, select bank0
 11907     045B  00A5               	movwf	___flmul@a+1
 11908     045C  1683               	bsf	3,5	;RP0=1, select bank1
 11909     045D  1303               	bcf	3,6	;RP1=0, select bank1
 11910     045E  0848               	movf	efgtoa@u^(0+128),w
 11911     045F  1283               	bcf	3,5	;RP0=0, select bank0
 11912     0460  1303               	bcf	3,6	;RP1=0, select bank0
 11913     0461  00A4               	movwf	___flmul@a
 11914     0462  120A  158A  217B  120A  118A  	fcall	___flmul
 11915     0467  1283               	bcf	3,5	;RP0=0, select bank0
 11916     0468  1303               	bcf	3,6	;RP1=0, select bank0
 11917     0469  0823               	movf	?___flmul+3,w
 11918     046A  1683               	bsf	3,5	;RP0=1, select bank1
 11919     046B  1303               	bcf	3,6	;RP1=0, select bank1
 11920     046C  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11921     046D  1283               	bcf	3,5	;RP0=0, select bank0
 11922     046E  1303               	bcf	3,6	;RP1=0, select bank0
 11923     046F  0822               	movf	?___flmul+2,w
 11924     0470  1683               	bsf	3,5	;RP0=1, select bank1
 11925     0471  1303               	bcf	3,6	;RP1=0, select bank1
 11926     0472  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11927     0473  1283               	bcf	3,5	;RP0=0, select bank0
 11928     0474  1303               	bcf	3,6	;RP1=0, select bank0
 11929     0475  0821               	movf	?___flmul+1,w
 11930     0476  1683               	bsf	3,5	;RP0=1, select bank1
 11931     0477  1303               	bcf	3,6	;RP1=0, select bank1
 11932     0478  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11933     0479  1283               	bcf	3,5	;RP0=0, select bank0
 11934     047A  1303               	bcf	3,6	;RP1=0, select bank0
 11935     047B  0820               	movf	?___flmul,w
 11936     047C  1683               	bsf	3,5	;RP0=1, select bank1
 11937     047D  1303               	bcf	3,6	;RP1=0, select bank1
 11938     047E  00BD               	movwf	efgtoa@l^(0+128)
 11939     047F                     l3232:
 11940                           
 11941                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 11942     047F  083C               	movf	(efgtoa@h+3)^(0+128),w
 11943     0480  1283               	bcf	3,5	;RP0=0, select bank0
 11944     0481  1303               	bcf	3,6	;RP1=0, select bank0
 11945     0482  00B8               	movwf	___flge@ff1+3
 11946     0483  1683               	bsf	3,5	;RP0=1, select bank1
 11947     0484  1303               	bcf	3,6	;RP1=0, select bank1
 11948     0485  083B               	movf	(efgtoa@h+2)^(0+128),w
 11949     0486  1283               	bcf	3,5	;RP0=0, select bank0
 11950     0487  1303               	bcf	3,6	;RP1=0, select bank0
 11951     0488  00B7               	movwf	___flge@ff1+2
 11952     0489  1683               	bsf	3,5	;RP0=1, select bank1
 11953     048A  1303               	bcf	3,6	;RP1=0, select bank1
 11954     048B  083A               	movf	(efgtoa@h+1)^(0+128),w
 11955     048C  1283               	bcf	3,5	;RP0=0, select bank0
 11956     048D  1303               	bcf	3,6	;RP1=0, select bank0
 11957     048E  00B6               	movwf	___flge@ff1+1
 11958     048F  1683               	bsf	3,5	;RP0=1, select bank1
 11959     0490  1303               	bcf	3,6	;RP1=0, select bank1
 11960     0491  0839               	movf	efgtoa@h^(0+128),w
 11961     0492  1283               	bcf	3,5	;RP0=0, select bank0
 11962     0493  1303               	bcf	3,6	;RP1=0, select bank0
 11963     0494  00B5               	movwf	___flge@ff1
 11964     0495  1683               	bsf	3,5	;RP0=1, select bank1
 11965     0496  1303               	bcf	3,6	;RP1=0, select bank1
 11966     0497  0840               	movf	(efgtoa@l+3)^(0+128),w
 11967     0498  1283               	bcf	3,5	;RP0=0, select bank0
 11968     0499  1303               	bcf	3,6	;RP1=0, select bank0
 11969     049A  00BC               	movwf	___flge@ff2+3
 11970     049B  1683               	bsf	3,5	;RP0=1, select bank1
 11971     049C  1303               	bcf	3,6	;RP1=0, select bank1
 11972     049D  083F               	movf	(efgtoa@l+2)^(0+128),w
 11973     049E  1283               	bcf	3,5	;RP0=0, select bank0
 11974     049F  1303               	bcf	3,6	;RP1=0, select bank0
 11975     04A0  00BB               	movwf	___flge@ff2+2
 11976     04A1  1683               	bsf	3,5	;RP0=1, select bank1
 11977     04A2  1303               	bcf	3,6	;RP1=0, select bank1
 11978     04A3  083E               	movf	(efgtoa@l+1)^(0+128),w
 11979     04A4  1283               	bcf	3,5	;RP0=0, select bank0
 11980     04A5  1303               	bcf	3,6	;RP1=0, select bank0
 11981     04A6  00BA               	movwf	___flge@ff2+1
 11982     04A7  1683               	bsf	3,5	;RP0=1, select bank1
 11983     04A8  1303               	bcf	3,6	;RP1=0, select bank1
 11984     04A9  083D               	movf	efgtoa@l^(0+128),w
 11985     04AA  1283               	bcf	3,5	;RP0=0, select bank0
 11986     04AB  1303               	bcf	3,6	;RP1=0, select bank0
 11987     04AC  00B9               	movwf	___flge@ff2
 11988     04AD  160A  118A  205E  120A  118A  	fcall	___flge
 11989     04B2  1803               	btfsc	3,0
 11990     04B3  2CB5               	goto	u4601
 11991     04B4  2CB6               	goto	u4600
 11992     04B5                     u4601:
 11993     04B5  2CC1               	goto	l3236
 11994     04B6                     u4600:
 11995     04B6                     l3234:
 11996                           
 11997                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 11998     04B6  3000               	movlw	0
 11999     04B7  1683               	bsf	3,5	;RP0=1, select bank1
 12000     04B8  1303               	bcf	3,6	;RP1=0, select bank1
 12001     04B9  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12002     04BA  3000               	movlw	0
 12003     04BB  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12004     04BC  3000               	movlw	0
 12005     04BD  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12006     04BE  3000               	movlw	0
 12007     04BF  00BD               	movwf	efgtoa@l^(0+128)
 12008                           
 12009                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
 12010     04C0  2CEA               	goto	l3242
 12011     04C1                     l3236:
 12012                           
 12013                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12014     04C1  1683               	bsf	3,5	;RP0=1, select bank1
 12015     04C2  1303               	bcf	3,6	;RP1=0, select bank1
 12016     04C3  083C               	movf	(efgtoa@h+3)^(0+128),w
 12017     04C4  00F3               	movwf	___fleq@ff1+3
 12018     04C5  083B               	movf	(efgtoa@h+2)^(0+128),w
 12019     04C6  00F2               	movwf	___fleq@ff1+2
 12020     04C7  083A               	movf	(efgtoa@h+1)^(0+128),w
 12021     04C8  00F1               	movwf	___fleq@ff1+1
 12022     04C9  0839               	movf	efgtoa@h^(0+128),w
 12023     04CA  00F0               	movwf	___fleq@ff1
 12024     04CB  0840               	movf	(efgtoa@l+3)^(0+128),w
 12025     04CC  00F7               	movwf	___fleq@ff2+3
 12026     04CD  083F               	movf	(efgtoa@l+2)^(0+128),w
 12027     04CE  00F6               	movwf	___fleq@ff2+2
 12028     04CF  083E               	movf	(efgtoa@l+1)^(0+128),w
 12029     04D0  00F5               	movwf	___fleq@ff2+1
 12030     04D1  083D               	movf	efgtoa@l^(0+128),w
 12031     04D2  00F4               	movwf	___fleq@ff2
 12032     04D3  160A  158A  25D7  120A  118A  	fcall	___fleq
 12033     04D8  1C03               	btfss	3,0
 12034     04D9  2CDB               	goto	u4611
 12035     04DA  2CDC               	goto	u4610
 12036     04DB                     u4611:
 12037     04DB  2CEA               	goto	l3242
 12038     04DC                     u4610:
 12039     04DC                     l3238:
 12040     04DC  1683               	bsf	3,5	;RP0=1, select bank1
 12041     04DD  1303               	bcf	3,6	;RP1=0, select bank1
 12042     04DE  182B               	btfsc	efgtoa@d^(0+128),0
 12043     04DF  2CE1               	goto	u4621
 12044     04E0  2CE2               	goto	u4620
 12045     04E1                     u4621:
 12046     04E1  2CEA               	goto	l3242
 12047     04E2                     u4620:
 12048     04E2                     l3240:
 12049                           
 12050                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12051     04E2  3000               	movlw	0
 12052     04E3  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12053     04E4  3000               	movlw	0
 12054     04E5  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12055     04E6  3000               	movlw	0
 12056     04E7  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12057     04E8  3000               	movlw	0
 12058     04E9  00BD               	movwf	efgtoa@l^(0+128)
 12059     04EA                     l3242:
 12060                           
 12061                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12062     04EA  1683               	bsf	3,5	;RP0=1, select bank1
 12063     04EB  1303               	bcf	3,6	;RP1=0, select bank1
 12064     04EC  0840               	movf	(efgtoa@l+3)^(0+128),w
 12065     04ED  00F3               	movwf	___fladd@b+3
 12066     04EE  083F               	movf	(efgtoa@l+2)^(0+128),w
 12067     04EF  00F2               	movwf	___fladd@b+2
 12068     04F0  083E               	movf	(efgtoa@l+1)^(0+128),w
 12069     04F1  00F1               	movwf	___fladd@b+1
 12070     04F2  083D               	movf	efgtoa@l^(0+128),w
 12071     04F3  00F0               	movwf	___fladd@b
 12072     04F4  0847               	movf	(efgtoa@g+3)^(0+128),w
 12073     04F5  00F7               	movwf	___fladd@a+3
 12074     04F6  0846               	movf	(efgtoa@g+2)^(0+128),w
 12075     04F7  00F6               	movwf	___fladd@a+2
 12076     04F8  0845               	movf	(efgtoa@g+1)^(0+128),w
 12077     04F9  00F5               	movwf	___fladd@a+1
 12078     04FA  0844               	movf	efgtoa@g^(0+128),w
 12079     04FB  00F4               	movwf	___fladd@a
 12080     04FC  160A  118A  25A4  120A  118A  	fcall	___fladd
 12081     0501  0873               	movf	?___fladd+3,w
 12082     0502  1683               	bsf	3,5	;RP0=1, select bank1
 12083     0503  1303               	bcf	3,6	;RP1=0, select bank1
 12084     0504  00BC               	movwf	(efgtoa@h+3)^(0+128)
 12085     0505  0872               	movf	?___fladd+2,w
 12086     0506  00BB               	movwf	(efgtoa@h+2)^(0+128)
 12087     0507  0871               	movf	?___fladd+1,w
 12088     0508  00BA               	movwf	(efgtoa@h+1)^(0+128)
 12089     0509  0870               	movf	?___fladd,w
 12090     050A  00B9               	movwf	efgtoa@h^(0+128)
 12091     050B                     l3244:
 12092                           
 12093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12094     050B  083C               	movf	(efgtoa@h+3)^(0+128),w
 12095     050C  1283               	bcf	3,5	;RP0=0, select bank0
 12096     050D  1303               	bcf	3,6	;RP1=0, select bank0
 12097     050E  00B8               	movwf	___flge@ff1+3
 12098     050F  1683               	bsf	3,5	;RP0=1, select bank1
 12099     0510  1303               	bcf	3,6	;RP1=0, select bank1
 12100     0511  083B               	movf	(efgtoa@h+2)^(0+128),w
 12101     0512  1283               	bcf	3,5	;RP0=0, select bank0
 12102     0513  1303               	bcf	3,6	;RP1=0, select bank0
 12103     0514  00B7               	movwf	___flge@ff1+2
 12104     0515  1683               	bsf	3,5	;RP0=1, select bank1
 12105     0516  1303               	bcf	3,6	;RP1=0, select bank1
 12106     0517  083A               	movf	(efgtoa@h+1)^(0+128),w
 12107     0518  1283               	bcf	3,5	;RP0=0, select bank0
 12108     0519  1303               	bcf	3,6	;RP1=0, select bank0
 12109     051A  00B6               	movwf	___flge@ff1+1
 12110     051B  1683               	bsf	3,5	;RP0=1, select bank1
 12111     051C  1303               	bcf	3,6	;RP1=0, select bank1
 12112     051D  0839               	movf	efgtoa@h^(0+128),w
 12113     051E  1283               	bcf	3,5	;RP0=0, select bank0
 12114     051F  1303               	bcf	3,6	;RP1=0, select bank0
 12115     0520  00B5               	movwf	___flge@ff1
 12116     0521  3041               	movlw	65
 12117     0522  00A3               	movwf	___flmul@b+3
 12118     0523  3020               	movlw	32
 12119     0524  00A2               	movwf	___flmul@b+2
 12120     0525  3000               	movlw	0
 12121     0526  00A1               	movwf	___flmul@b+1
 12122     0527  3000               	movlw	0
 12123     0528  00A0               	movwf	___flmul@b
 12124     0529  1683               	bsf	3,5	;RP0=1, select bank1
 12125     052A  1303               	bcf	3,6	;RP1=0, select bank1
 12126     052B  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12127     052C  1283               	bcf	3,5	;RP0=0, select bank0
 12128     052D  1303               	bcf	3,6	;RP1=0, select bank0
 12129     052E  00A7               	movwf	___flmul@a+3
 12130     052F  1683               	bsf	3,5	;RP0=1, select bank1
 12131     0530  1303               	bcf	3,6	;RP1=0, select bank1
 12132     0531  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12133     0532  1283               	bcf	3,5	;RP0=0, select bank0
 12134     0533  1303               	bcf	3,6	;RP1=0, select bank0
 12135     0534  00A6               	movwf	___flmul@a+2
 12136     0535  1683               	bsf	3,5	;RP0=1, select bank1
 12137     0536  1303               	bcf	3,6	;RP1=0, select bank1
 12138     0537  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12139     0538  1283               	bcf	3,5	;RP0=0, select bank0
 12140     0539  1303               	bcf	3,6	;RP1=0, select bank0
 12141     053A  00A5               	movwf	___flmul@a+1
 12142     053B  1683               	bsf	3,5	;RP0=1, select bank1
 12143     053C  1303               	bcf	3,6	;RP1=0, select bank1
 12144     053D  0833               	movf	efgtoa@ou^(0+128),w
 12145     053E  1283               	bcf	3,5	;RP0=0, select bank0
 12146     053F  1303               	bcf	3,6	;RP1=0, select bank0
 12147     0540  00A4               	movwf	___flmul@a
 12148     0541  120A  158A  217B  120A  118A  	fcall	___flmul
 12149     0546  1283               	bcf	3,5	;RP0=0, select bank0
 12150     0547  1303               	bcf	3,6	;RP1=0, select bank0
 12151     0548  0823               	movf	?___flmul+3,w
 12152     0549  00BC               	movwf	___flge@ff2+3
 12153     054A  0822               	movf	?___flmul+2,w
 12154     054B  00BB               	movwf	___flge@ff2+2
 12155     054C  0821               	movf	?___flmul+1,w
 12156     054D  00BA               	movwf	___flge@ff2+1
 12157     054E  0820               	movf	?___flmul,w
 12158     054F  00B9               	movwf	___flge@ff2
 12159     0550  160A  118A  205E  120A  118A  	fcall	___flge
 12160     0555  1C03               	btfss	3,0
 12161     0556  2D58               	goto	u4631
 12162     0557  2D59               	goto	u4630
 12163     0558                     u4631:
 12164     0558  2DAC               	goto	l896
 12165     0559                     u4630:
 12166     0559                     l3246:
 12167                           
 12168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
 12169     0559  3001               	movlw	1
 12170     055A  1683               	bsf	3,5	;RP0=1, select bank1
 12171     055B  1303               	bcf	3,6	;RP1=0, select bank1
 12172     055C  07AF               	addwf	efgtoa@e^(0+128),f
 12173     055D  1803               	skipnc
 12174     055E  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 12175     055F  3000               	movlw	0
 12176     0560  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 12177     0561                     l3248:
 12178                           
 12179                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12180     0561  3041               	movlw	65
 12181     0562  1283               	bcf	3,5	;RP0=0, select bank0
 12182     0563  1303               	bcf	3,6	;RP1=0, select bank0
 12183     0564  00A3               	movwf	___flmul@b+3
 12184     0565  3020               	movlw	32
 12185     0566  00A2               	movwf	___flmul@b+2
 12186     0567  3000               	movlw	0
 12187     0568  00A1               	movwf	___flmul@b+1
 12188     0569  3000               	movlw	0
 12189     056A  00A0               	movwf	___flmul@b
 12190     056B  1683               	bsf	3,5	;RP0=1, select bank1
 12191     056C  1303               	bcf	3,6	;RP1=0, select bank1
 12192     056D  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12193     056E  1283               	bcf	3,5	;RP0=0, select bank0
 12194     056F  1303               	bcf	3,6	;RP1=0, select bank0
 12195     0570  00A7               	movwf	___flmul@a+3
 12196     0571  1683               	bsf	3,5	;RP0=1, select bank1
 12197     0572  1303               	bcf	3,6	;RP1=0, select bank1
 12198     0573  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12199     0574  1283               	bcf	3,5	;RP0=0, select bank0
 12200     0575  1303               	bcf	3,6	;RP1=0, select bank0
 12201     0576  00A6               	movwf	___flmul@a+2
 12202     0577  1683               	bsf	3,5	;RP0=1, select bank1
 12203     0578  1303               	bcf	3,6	;RP1=0, select bank1
 12204     0579  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12205     057A  1283               	bcf	3,5	;RP0=0, select bank0
 12206     057B  1303               	bcf	3,6	;RP1=0, select bank0
 12207     057C  00A5               	movwf	___flmul@a+1
 12208     057D  1683               	bsf	3,5	;RP0=1, select bank1
 12209     057E  1303               	bcf	3,6	;RP1=0, select bank1
 12210     057F  0833               	movf	efgtoa@ou^(0+128),w
 12211     0580  1283               	bcf	3,5	;RP0=0, select bank0
 12212     0581  1303               	bcf	3,6	;RP1=0, select bank0
 12213     0582  00A4               	movwf	___flmul@a
 12214     0583  120A  158A  217B  120A  118A  	fcall	___flmul
 12215     0588  1283               	bcf	3,5	;RP0=0, select bank0
 12216     0589  1303               	bcf	3,6	;RP1=0, select bank0
 12217     058A  0823               	movf	?___flmul+3,w
 12218     058B  1683               	bsf	3,5	;RP0=1, select bank1
 12219     058C  1303               	bcf	3,6	;RP1=0, select bank1
 12220     058D  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 12221     058E  1283               	bcf	3,5	;RP0=0, select bank0
 12222     058F  1303               	bcf	3,6	;RP1=0, select bank0
 12223     0590  0822               	movf	?___flmul+2,w
 12224     0591  1683               	bsf	3,5	;RP0=1, select bank1
 12225     0592  1303               	bcf	3,6	;RP1=0, select bank1
 12226     0593  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 12227     0594  1283               	bcf	3,5	;RP0=0, select bank0
 12228     0595  1303               	bcf	3,6	;RP1=0, select bank0
 12229     0596  0821               	movf	?___flmul+1,w
 12230     0597  1683               	bsf	3,5	;RP0=1, select bank1
 12231     0598  1303               	bcf	3,6	;RP1=0, select bank1
 12232     0599  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 12233     059A  1283               	bcf	3,5	;RP0=0, select bank0
 12234     059B  1303               	bcf	3,6	;RP1=0, select bank0
 12235     059C  0820               	movf	?___flmul,w
 12236     059D  1683               	bsf	3,5	;RP0=1, select bank1
 12237     059E  1303               	bcf	3,6	;RP1=0, select bank1
 12238     059F  00B3               	movwf	efgtoa@ou^(0+128)
 12239     05A0                     l3250:
 12240                           
 12241                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12242     05A0  3066               	movlw	102
 12243     05A1  062A               	xorwf	efgtoa@nmode^(0+128),w
 12244     05A2  1D03               	btfss	3,2
 12245     05A3  2DA5               	goto	u4641
 12246     05A4  2DA6               	goto	u4640
 12247     05A5                     u4641:
 12248     05A5  2DAC               	goto	l896
 12249     05A6                     u4640:
 12250     05A6                     l3252:
 12251                           
 12252                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
 12253     05A6  3001               	movlw	1
 12254     05A7  07AD               	addwf	efgtoa@m^(0+128),f
 12255     05A8  1803               	skipnc
 12256     05A9  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 12257     05AA  3000               	movlw	0
 12258     05AB  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 12259     05AC                     l896:	
 12260                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 767:  }
 12261                           
 12262                           
 12263                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12264     05AC  1683               	bsf	3,5	;RP0=1, select bank1
 12265     05AD  1303               	bcf	3,6	;RP1=0, select bank1
 12266     05AE  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12267     05AF  00CB               	movwf	(efgtoa@u+3)^(0+128)
 12268     05B0  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12269     05B1  00CA               	movwf	(efgtoa@u+2)^(0+128)
 12270     05B2  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12271     05B3  00C9               	movwf	(efgtoa@u+1)^(0+128)
 12272     05B4  0833               	movf	efgtoa@ou^(0+128),w
 12273     05B5  00C8               	movwf	efgtoa@u^(0+128)
 12274                           
 12275                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12276     05B6  0830               	movf	(efgtoa@e+1)^(0+128),w
 12277     05B7  00A1               	movwf	(efgtoa@ne+1)^(0+128)
 12278     05B8  082F               	movf	efgtoa@e^(0+128),w
 12279     05B9  00A0               	movwf	efgtoa@ne^(0+128)
 12280     05BA                     l3254:
 12281                           
 12282                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12283     05BA  01A8               	clrf	efgtoa@pp^(0+128)
 12284     05BB                     l3256:
 12285                           
 12286                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12287     05BB  01A4               	clrf	efgtoa@t^(0+128)
 12288     05BC  01A5               	clrf	(efgtoa@t+1)^(0+128)
 12289     05BD                     l3258:
 12290                           
 12291                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12292     05BD  01B7               	clrf	efgtoa@i^(0+128)
 12293     05BE  01B8               	clrf	(efgtoa@i+1)^(0+128)
 12294                           
 12295                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12296     05BF  2F44               	goto	l3302
 12297     05C0                     l3260:
 12298                           
 12299                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12300     05C0  1683               	bsf	3,5	;RP0=1, select bank1
 12301     05C1  1303               	bcf	3,6	;RP1=0, select bank1
 12302     05C2  084B               	movf	(efgtoa@u+3)^(0+128),w
 12303     05C3  00F3               	movwf	___fldiv@a+3
 12304     05C4  084A               	movf	(efgtoa@u+2)^(0+128),w
 12305     05C5  00F2               	movwf	___fldiv@a+2
 12306     05C6  0849               	movf	(efgtoa@u+1)^(0+128),w
 12307     05C7  00F1               	movwf	___fldiv@a+1
 12308     05C8  0848               	movf	efgtoa@u^(0+128),w
 12309     05C9  00F0               	movwf	___fldiv@a
 12310     05CA  083C               	movf	(efgtoa@h+3)^(0+128),w
 12311     05CB  00F7               	movwf	___fldiv@b+3
 12312     05CC  083B               	movf	(efgtoa@h+2)^(0+128),w
 12313     05CD  00F6               	movwf	___fldiv@b+2
 12314     05CE  083A               	movf	(efgtoa@h+1)^(0+128),w
 12315     05CF  00F5               	movwf	___fldiv@b+1
 12316     05D0  0839               	movf	efgtoa@h^(0+128),w
 12317     05D1  00F4               	movwf	___fldiv@b
 12318     05D2  160A  118A  23D4  120A  118A  	fcall	___fldiv
 12319     05D7  0873               	movf	?___fldiv+3,w
 12320     05D8  1283               	bcf	3,5	;RP0=0, select bank0
 12321     05D9  1303               	bcf	3,6	;RP1=0, select bank0
 12322     05DA  00B0               	movwf	floorf@x+3
 12323     05DB  0872               	movf	?___fldiv+2,w
 12324     05DC  00AF               	movwf	floorf@x+2
 12325     05DD  0871               	movf	?___fldiv+1,w
 12326     05DE  00AE               	movwf	floorf@x+1
 12327     05DF  0870               	movf	?___fldiv,w
 12328     05E0  00AD               	movwf	floorf@x
 12329     05E1  160A  118A  21B6  120A  118A  	fcall	_floorf
 12330     05E6  1283               	bcf	3,5	;RP0=0, select bank0
 12331     05E7  1303               	bcf	3,6	;RP1=0, select bank0
 12332     05E8  0830               	movf	?_floorf+3,w
 12333     05E9  1683               	bsf	3,5	;RP0=1, select bank1
 12334     05EA  1303               	bcf	3,6	;RP1=0, select bank1
 12335     05EB  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12336     05EC  1283               	bcf	3,5	;RP0=0, select bank0
 12337     05ED  1303               	bcf	3,6	;RP1=0, select bank0
 12338     05EE  082F               	movf	?_floorf+2,w
 12339     05EF  1683               	bsf	3,5	;RP0=1, select bank1
 12340     05F0  1303               	bcf	3,6	;RP1=0, select bank1
 12341     05F1  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12342     05F2  1283               	bcf	3,5	;RP0=0, select bank0
 12343     05F3  1303               	bcf	3,6	;RP1=0, select bank0
 12344     05F4  082E               	movf	?_floorf+1,w
 12345     05F5  1683               	bsf	3,5	;RP0=1, select bank1
 12346     05F6  1303               	bcf	3,6	;RP1=0, select bank1
 12347     05F7  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12348     05F8  1283               	bcf	3,5	;RP0=0, select bank0
 12349     05F9  1303               	bcf	3,6	;RP1=0, select bank0
 12350     05FA  082D               	movf	?_floorf,w
 12351     05FB  1683               	bsf	3,5	;RP0=1, select bank1
 12352     05FC  1303               	bcf	3,6	;RP1=0, select bank1
 12353     05FD  00BD               	movwf	efgtoa@l^(0+128)
 12354                           
 12355                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12356     05FE  0840               	movf	(efgtoa@l+3)^(0+128),w
 12357     05FF  1283               	bcf	3,5	;RP0=0, select bank0
 12358     0600  1303               	bcf	3,6	;RP1=0, select bank0
 12359     0601  00C2               	movwf	___fltol@f1+3
 12360     0602  1683               	bsf	3,5	;RP0=1, select bank1
 12361     0603  1303               	bcf	3,6	;RP1=0, select bank1
 12362     0604  083F               	movf	(efgtoa@l+2)^(0+128),w
 12363     0605  1283               	bcf	3,5	;RP0=0, select bank0
 12364     0606  1303               	bcf	3,6	;RP1=0, select bank0
 12365     0607  00C1               	movwf	___fltol@f1+2
 12366     0608  1683               	bsf	3,5	;RP0=1, select bank1
 12367     0609  1303               	bcf	3,6	;RP1=0, select bank1
 12368     060A  083E               	movf	(efgtoa@l+1)^(0+128),w
 12369     060B  1283               	bcf	3,5	;RP0=0, select bank0
 12370     060C  1303               	bcf	3,6	;RP1=0, select bank0
 12371     060D  00C0               	movwf	___fltol@f1+1
 12372     060E  1683               	bsf	3,5	;RP0=1, select bank1
 12373     060F  1303               	bcf	3,6	;RP1=0, select bank1
 12374     0610  083D               	movf	efgtoa@l^(0+128),w
 12375     0611  1283               	bcf	3,5	;RP0=0, select bank0
 12376     0612  1303               	bcf	3,6	;RP1=0, select bank0
 12377     0613  00BF               	movwf	___fltol@f1
 12378     0614  160A  158A  26FD  120A  118A  	fcall	___fltol
 12379     0619  1283               	bcf	3,5	;RP0=0, select bank0
 12380     061A  1303               	bcf	3,6	;RP1=0, select bank0
 12381     061B  0840               	movf	?___fltol+1,w
 12382     061C  3A80               	xorlw	128
 12383     061D  00FF               	movwf	btemp+1
 12384     061E  3080               	movlw	128
 12385     061F  027F               	subwf	btemp+1,w
 12386     0620  1D03               	skipz
 12387     0621  2E24               	goto	u4655
 12388     0622  300A               	movlw	10
 12389     0623  023F               	subwf	?___fltol,w
 12390     0624                     u4655:
 12391     0624  1803               	skipnc
 12392     0625  2E27               	goto	u4651
 12393     0626  2E28               	goto	u4650
 12394     0627                     u4651:
 12395     0627  2E52               	goto	l3264
 12396     0628                     u4650:
 12397     0628                     l3262:
 12398     0628  1683               	bsf	3,5	;RP0=1, select bank1
 12399     0629  1303               	bcf	3,6	;RP1=0, select bank1
 12400     062A  0840               	movf	(efgtoa@l+3)^(0+128),w
 12401     062B  1283               	bcf	3,5	;RP0=0, select bank0
 12402     062C  1303               	bcf	3,6	;RP1=0, select bank0
 12403     062D  00C2               	movwf	___fltol@f1+3
 12404     062E  1683               	bsf	3,5	;RP0=1, select bank1
 12405     062F  1303               	bcf	3,6	;RP1=0, select bank1
 12406     0630  083F               	movf	(efgtoa@l+2)^(0+128),w
 12407     0631  1283               	bcf	3,5	;RP0=0, select bank0
 12408     0632  1303               	bcf	3,6	;RP1=0, select bank0
 12409     0633  00C1               	movwf	___fltol@f1+2
 12410     0634  1683               	bsf	3,5	;RP0=1, select bank1
 12411     0635  1303               	bcf	3,6	;RP1=0, select bank1
 12412     0636  083E               	movf	(efgtoa@l+1)^(0+128),w
 12413     0637  1283               	bcf	3,5	;RP0=0, select bank0
 12414     0638  1303               	bcf	3,6	;RP1=0, select bank0
 12415     0639  00C0               	movwf	___fltol@f1+1
 12416     063A  1683               	bsf	3,5	;RP0=1, select bank1
 12417     063B  1303               	bcf	3,6	;RP1=0, select bank1
 12418     063C  083D               	movf	efgtoa@l^(0+128),w
 12419     063D  1283               	bcf	3,5	;RP0=0, select bank0
 12420     063E  1303               	bcf	3,6	;RP1=0, select bank0
 12421     063F  00BF               	movwf	___fltol@f1
 12422     0640  160A  158A  26FD  120A  118A  	fcall	___fltol
 12423     0645  1283               	bcf	3,5	;RP0=0, select bank0
 12424     0646  1303               	bcf	3,6	;RP1=0, select bank0
 12425     0647  0840               	movf	?___fltol+1,w
 12426     0648  1683               	bsf	3,5	;RP0=1, select bank1
 12427     0649  1303               	bcf	3,6	;RP1=0, select bank1
 12428     064A  00AC               	movwf	(efgtoa@d+1)^(0+128)
 12429     064B  1283               	bcf	3,5	;RP0=0, select bank0
 12430     064C  1303               	bcf	3,6	;RP1=0, select bank0
 12431     064D  083F               	movf	?___fltol,w
 12432     064E  1683               	bsf	3,5	;RP0=1, select bank1
 12433     064F  1303               	bcf	3,6	;RP1=0, select bank1
 12434     0650  00AB               	movwf	efgtoa@d^(0+128)
 12435     0651  2E58               	goto	l3266
 12436     0652                     l3264:
 12437     0652  3009               	movlw	9
 12438     0653  1683               	bsf	3,5	;RP0=1, select bank1
 12439     0654  1303               	bcf	3,6	;RP1=0, select bank1
 12440     0655  00AB               	movwf	efgtoa@d^(0+128)
 12441     0656  3000               	movlw	0
 12442     0657  00AC               	movwf	(efgtoa@d^(0+128)+1)
 12443     0658                     l3266:
 12444                           
 12445                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12446     0658  0828               	movf	efgtoa@pp^(0+128),w
 12447     0659  1D03               	btfss	3,2
 12448     065A  2E5C               	goto	u4661
 12449     065B  2E5D               	goto	u4660
 12450     065C                     u4661:
 12451     065C  2E8E               	goto	l3286
 12452     065D                     u4660:
 12453     065D                     l3268:
 12454     065D  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
 12455     065E  2E60               	goto	u4671
 12456     065F  2E61               	goto	u4670
 12457     0660                     u4671:
 12458     0660  2E8E               	goto	l3286
 12459     0661                     u4670:
 12460     0661                     l3270:
 12461                           
 12462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12463     0661  0842               	movf	efgtoa@n^(0+128),w
 12464     0662  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12465     0663  0084               	movwf	4
 12466     0664  302E               	movlw	46
 12467     0665  1783               	bsf	3,7	;select IRP bank2
 12468     0666  0080               	movwf	0
 12469     0667                     l3272:
 12470     0667  3001               	movlw	1
 12471     0668  07C2               	addwf	efgtoa@n^(0+128),f
 12472     0669  1803               	skipnc
 12473     066A  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12474     066B  3000               	movlw	0
 12475     066C  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12476     066D                     l3274:
 12477                           
 12478                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12479     066D  30FF               	movlw	255
 12480     066E  07B1               	addwf	efgtoa@w^(0+128),f
 12481     066F  1803               	skipnc
 12482     0670  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12483     0671  30FF               	movlw	255
 12484     0672  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12485     0673                     l3276:
 12486                           
 12487                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12488     0673  3001               	movlw	1
 12489     0674  00A8               	movwf	efgtoa@pp^(0+128)
 12490     0675  2E8E               	goto	l3286
 12491     0676                     l3278:
 12492                           
 12493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12494     0676  0842               	movf	efgtoa@n^(0+128),w
 12495     0677  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12496     0678  0084               	movwf	4
 12497     0679  3030               	movlw	48
 12498     067A  1783               	bsf	3,7	;select IRP bank2
 12499     067B  0080               	movwf	0
 12500     067C                     l3280:
 12501     067C  3001               	movlw	1
 12502     067D  07C2               	addwf	efgtoa@n^(0+128),f
 12503     067E  1803               	skipnc
 12504     067F  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12505     0680  3000               	movlw	0
 12506     0681  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12507     0682                     l3282:
 12508                           
 12509                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12510     0682  30FF               	movlw	255
 12511     0683  07B1               	addwf	efgtoa@w^(0+128),f
 12512     0684  1803               	skipnc
 12513     0685  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12514     0686  30FF               	movlw	255
 12515     0687  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12516     0688                     l3284:
 12517                           
 12518                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12519     0688  30FF               	movlw	255
 12520     0689  07A4               	addwf	efgtoa@t^(0+128),f
 12521     068A  1803               	skipnc
 12522     068B  0AA5               	incf	(efgtoa@t+1)^(0+128),f
 12523     068C  30FF               	movlw	255
 12524     068D  07A5               	addwf	(efgtoa@t+1)^(0+128),f
 12525     068E                     l3286:
 12526                           
 12527                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12528     068E  0824               	movf	efgtoa@t^(0+128),w
 12529     068F  0425               	iorwf	(efgtoa@t+1)^(0+128),w
 12530     0690  1D03               	btfss	3,2
 12531     0691  2E93               	goto	u4681
 12532     0692  2E94               	goto	u4680
 12533     0693                     u4681:
 12534     0693  2E76               	goto	l3278
 12535     0694                     u4680:
 12536     0694                     l3288:
 12537                           
 12538                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12539     0694  0842               	movf	efgtoa@n^(0+128),w
 12540     0695  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12541     0696  0084               	movwf	4
 12542     0697  082B               	movf	efgtoa@d^(0+128),w
 12543     0698  3E30               	addlw	48
 12544     0699  1783               	bsf	3,7	;select IRP bank2
 12545     069A  0080               	movwf	0
 12546     069B                     l3290:
 12547     069B  3001               	movlw	1
 12548     069C  07C2               	addwf	efgtoa@n^(0+128),f
 12549     069D  1803               	skipnc
 12550     069E  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12551     069F  3000               	movlw	0
 12552     06A0  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12553     06A1                     l3292:
 12554                           
 12555                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12556     06A1  30FF               	movlw	255
 12557     06A2  07B1               	addwf	efgtoa@w^(0+128),f
 12558     06A3  1803               	skipnc
 12559     06A4  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12560     06A5  30FF               	movlw	255
 12561     06A6  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12562     06A7                     l3294:
 12563                           
 12564                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12565     06A7  084B               	movf	(efgtoa@u+3)^(0+128),w
 12566     06A8  1283               	bcf	3,5	;RP0=0, select bank0
 12567     06A9  1303               	bcf	3,6	;RP1=0, select bank0
 12568     06AA  00A7               	movwf	___flmul@a+3
 12569     06AB  1683               	bsf	3,5	;RP0=1, select bank1
 12570     06AC  1303               	bcf	3,6	;RP1=0, select bank1
 12571     06AD  084A               	movf	(efgtoa@u+2)^(0+128),w
 12572     06AE  1283               	bcf	3,5	;RP0=0, select bank0
 12573     06AF  1303               	bcf	3,6	;RP1=0, select bank0
 12574     06B0  00A6               	movwf	___flmul@a+2
 12575     06B1  1683               	bsf	3,5	;RP0=1, select bank1
 12576     06B2  1303               	bcf	3,6	;RP1=0, select bank1
 12577     06B3  0849               	movf	(efgtoa@u+1)^(0+128),w
 12578     06B4  1283               	bcf	3,5	;RP0=0, select bank0
 12579     06B5  1303               	bcf	3,6	;RP1=0, select bank0
 12580     06B6  00A5               	movwf	___flmul@a+1
 12581     06B7  1683               	bsf	3,5	;RP0=1, select bank1
 12582     06B8  1303               	bcf	3,6	;RP1=0, select bank1
 12583     06B9  0848               	movf	efgtoa@u^(0+128),w
 12584     06BA  1283               	bcf	3,5	;RP0=0, select bank0
 12585     06BB  1303               	bcf	3,6	;RP1=0, select bank0
 12586     06BC  00A4               	movwf	___flmul@a
 12587     06BD  1683               	bsf	3,5	;RP0=1, select bank1
 12588     06BE  1303               	bcf	3,6	;RP1=0, select bank1
 12589     06BF  0840               	movf	(efgtoa@l+3)^(0+128),w
 12590     06C0  1283               	bcf	3,5	;RP0=0, select bank0
 12591     06C1  1303               	bcf	3,6	;RP1=0, select bank0
 12592     06C2  00A3               	movwf	___flmul@b+3
 12593     06C3  1683               	bsf	3,5	;RP0=1, select bank1
 12594     06C4  1303               	bcf	3,6	;RP1=0, select bank1
 12595     06C5  083F               	movf	(efgtoa@l+2)^(0+128),w
 12596     06C6  1283               	bcf	3,5	;RP0=0, select bank0
 12597     06C7  1303               	bcf	3,6	;RP1=0, select bank0
 12598     06C8  00A2               	movwf	___flmul@b+2
 12599     06C9  1683               	bsf	3,5	;RP0=1, select bank1
 12600     06CA  1303               	bcf	3,6	;RP1=0, select bank1
 12601     06CB  083E               	movf	(efgtoa@l+1)^(0+128),w
 12602     06CC  1283               	bcf	3,5	;RP0=0, select bank0
 12603     06CD  1303               	bcf	3,6	;RP1=0, select bank0
 12604     06CE  00A1               	movwf	___flmul@b+1
 12605     06CF  1683               	bsf	3,5	;RP0=1, select bank1
 12606     06D0  1303               	bcf	3,6	;RP1=0, select bank1
 12607     06D1  083D               	movf	efgtoa@l^(0+128),w
 12608     06D2  1283               	bcf	3,5	;RP0=0, select bank0
 12609     06D3  1303               	bcf	3,6	;RP1=0, select bank0
 12610     06D4  00A0               	movwf	___flmul@b
 12611     06D5  120A  158A  217B  120A  118A  	fcall	___flmul
 12612     06DA  1283               	bcf	3,5	;RP0=0, select bank0
 12613     06DB  1303               	bcf	3,6	;RP1=0, select bank0
 12614     06DC  0823               	movf	?___flmul+3,w
 12615     06DD  00B8               	movwf	___flsub@a+3
 12616     06DE  0822               	movf	?___flmul+2,w
 12617     06DF  00B7               	movwf	___flsub@a+2
 12618     06E0  0821               	movf	?___flmul+1,w
 12619     06E1  00B6               	movwf	___flsub@a+1
 12620     06E2  0820               	movf	?___flmul,w
 12621     06E3  00B5               	movwf	___flsub@a
 12622     06E4  1683               	bsf	3,5	;RP0=1, select bank1
 12623     06E5  1303               	bcf	3,6	;RP1=0, select bank1
 12624     06E6  083C               	movf	(efgtoa@h+3)^(0+128),w
 12625     06E7  1283               	bcf	3,5	;RP0=0, select bank0
 12626     06E8  1303               	bcf	3,6	;RP1=0, select bank0
 12627     06E9  00BC               	movwf	___flsub@b+3
 12628     06EA  1683               	bsf	3,5	;RP0=1, select bank1
 12629     06EB  1303               	bcf	3,6	;RP1=0, select bank1
 12630     06EC  083B               	movf	(efgtoa@h+2)^(0+128),w
 12631     06ED  1283               	bcf	3,5	;RP0=0, select bank0
 12632     06EE  1303               	bcf	3,6	;RP1=0, select bank0
 12633     06EF  00BB               	movwf	___flsub@b+2
 12634     06F0  1683               	bsf	3,5	;RP0=1, select bank1
 12635     06F1  1303               	bcf	3,6	;RP1=0, select bank1
 12636     06F2  083A               	movf	(efgtoa@h+1)^(0+128),w
 12637     06F3  1283               	bcf	3,5	;RP0=0, select bank0
 12638     06F4  1303               	bcf	3,6	;RP1=0, select bank0
 12639     06F5  00BA               	movwf	___flsub@b+1
 12640     06F6  1683               	bsf	3,5	;RP0=1, select bank1
 12641     06F7  1303               	bcf	3,6	;RP1=0, select bank1
 12642     06F8  0839               	movf	efgtoa@h^(0+128),w
 12643     06F9  1283               	bcf	3,5	;RP0=0, select bank0
 12644     06FA  1303               	bcf	3,6	;RP1=0, select bank0
 12645     06FB  00B9               	movwf	___flsub@b
 12646     06FC  120A  158A  2000  120A  118A  	fcall	___flsub
 12647     0701  1283               	bcf	3,5	;RP0=0, select bank0
 12648     0702  1303               	bcf	3,6	;RP1=0, select bank0
 12649     0703  0838               	movf	?___flsub+3,w
 12650     0704  1683               	bsf	3,5	;RP0=1, select bank1
 12651     0705  1303               	bcf	3,6	;RP1=0, select bank1
 12652     0706  00BC               	movwf	(efgtoa@h+3)^(0+128)
 12653     0707  1283               	bcf	3,5	;RP0=0, select bank0
 12654     0708  1303               	bcf	3,6	;RP1=0, select bank0
 12655     0709  0837               	movf	?___flsub+2,w
 12656     070A  1683               	bsf	3,5	;RP0=1, select bank1
 12657     070B  1303               	bcf	3,6	;RP1=0, select bank1
 12658     070C  00BB               	movwf	(efgtoa@h+2)^(0+128)
 12659     070D  1283               	bcf	3,5	;RP0=0, select bank0
 12660     070E  1303               	bcf	3,6	;RP1=0, select bank0
 12661     070F  0836               	movf	?___flsub+1,w
 12662     0710  1683               	bsf	3,5	;RP0=1, select bank1
 12663     0711  1303               	bcf	3,6	;RP1=0, select bank1
 12664     0712  00BA               	movwf	(efgtoa@h+1)^(0+128)
 12665     0713  1283               	bcf	3,5	;RP0=0, select bank0
 12666     0714  1303               	bcf	3,6	;RP1=0, select bank0
 12667     0715  0835               	movf	?___flsub,w
 12668     0716  1683               	bsf	3,5	;RP0=1, select bank1
 12669     0717  1303               	bcf	3,6	;RP1=0, select bank1
 12670     0718  00B9               	movwf	efgtoa@h^(0+128)
 12671     0719                     l3296:
 12672                           
 12673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12674     0719  3041               	movlw	65
 12675     071A  00F3               	movwf	___fldiv@a+3
 12676     071B  3020               	movlw	32
 12677     071C  00F2               	movwf	___fldiv@a+2
 12678     071D  3000               	movlw	0
 12679     071E  00F1               	movwf	___fldiv@a+1
 12680     071F  3000               	movlw	0
 12681     0720  00F0               	movwf	___fldiv@a
 12682     0721  084B               	movf	(efgtoa@u+3)^(0+128),w
 12683     0722  00F7               	movwf	___fldiv@b+3
 12684     0723  084A               	movf	(efgtoa@u+2)^(0+128),w
 12685     0724  00F6               	movwf	___fldiv@b+2
 12686     0725  0849               	movf	(efgtoa@u+1)^(0+128),w
 12687     0726  00F5               	movwf	___fldiv@b+1
 12688     0727  0848               	movf	efgtoa@u^(0+128),w
 12689     0728  00F4               	movwf	___fldiv@b
 12690     0729  160A  118A  23D4  120A  118A  	fcall	___fldiv
 12691     072E  0873               	movf	?___fldiv+3,w
 12692     072F  1683               	bsf	3,5	;RP0=1, select bank1
 12693     0730  1303               	bcf	3,6	;RP1=0, select bank1
 12694     0731  00CB               	movwf	(efgtoa@u+3)^(0+128)
 12695     0732  0872               	movf	?___fldiv+2,w
 12696     0733  00CA               	movwf	(efgtoa@u+2)^(0+128)
 12697     0734  0871               	movf	?___fldiv+1,w
 12698     0735  00C9               	movwf	(efgtoa@u+1)^(0+128)
 12699     0736  0870               	movf	?___fldiv,w
 12700     0737  00C8               	movwf	efgtoa@u^(0+128)
 12701     0738                     l3298:
 12702                           
 12703                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12704     0738  30FF               	movlw	255
 12705     0739  07A0               	addwf	efgtoa@ne^(0+128),f
 12706     073A  1803               	skipnc
 12707     073B  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
 12708     073C  30FF               	movlw	255
 12709     073D  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
 12710     073E                     l3300:
 12711                           
 12712                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12713     073E  3001               	movlw	1
 12714     073F  07B7               	addwf	efgtoa@i^(0+128),f
 12715     0740  1803               	skipnc
 12716     0741  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 12717     0742  3000               	movlw	0
 12718     0743  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 12719     0744                     l3302:
 12720                           
 12721                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12722     0744  0838               	movf	(efgtoa@i+1)^(0+128),w
 12723     0745  3A80               	xorlw	128
 12724     0746  1283               	bcf	3,5	;RP0=0, select bank0
 12725     0747  1303               	bcf	3,6	;RP1=0, select bank0
 12726     0748  00D0               	movwf	??_efgtoa
 12727     0749  1683               	bsf	3,5	;RP0=1, select bank1
 12728     074A  1303               	bcf	3,6	;RP1=0, select bank1
 12729     074B  082E               	movf	(efgtoa@m+1)^(0+128),w
 12730     074C  3A80               	xorlw	128
 12731     074D  1283               	bcf	3,5	;RP0=0, select bank0
 12732     074E  1303               	bcf	3,6	;RP1=0, select bank0
 12733     074F  0250               	subwf	??_efgtoa,w
 12734     0750  1D03               	skipz
 12735     0751  2F56               	goto	u4695
 12736     0752  1683               	bsf	3,5	;RP0=1, select bank1
 12737     0753  1303               	bcf	3,6	;RP1=0, select bank1
 12738     0754  082D               	movf	efgtoa@m^(0+128),w
 12739     0755  0237               	subwf	efgtoa@i^(0+128),w
 12740     0756                     u4695:
 12741     0756  1803               	skipnc
 12742     0757  2F59               	goto	u4691
 12743     0758  2F5A               	goto	u4690
 12744     0759                     u4691:
 12745     0759  2F69               	goto	l3306
 12746     075A                     u4690:
 12747     075A                     l3304:
 12748     075A  1683               	bsf	3,5	;RP0=1, select bank1
 12749     075B  1303               	bcf	3,6	;RP1=0, select bank1
 12750     075C  0843               	movf	(efgtoa@n+1)^(0+128),w
 12751     075D  3A80               	xorlw	128
 12752     075E  00FF               	movwf	btemp+1
 12753     075F  3080               	movlw	128
 12754     0760  027F               	subwf	btemp+1,w
 12755     0761  1D03               	skipz
 12756     0762  2F65               	goto	u4705
 12757     0763  304B               	movlw	75
 12758     0764  0242               	subwf	efgtoa@n^(0+128),w
 12759     0765                     u4705:
 12760     0765  1C03               	skipc
 12761     0766  2F68               	goto	u4701
 12762     0767  2F69               	goto	u4700
 12763     0768                     u4701:
 12764     0768  2DC0               	goto	l3260
 12765     0769                     u4700:
 12766     0769                     l3306:
 12767                           
 12768                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12769     0769  304F               	movlw	79
 12770     076A  1683               	bsf	3,5	;RP0=1, select bank1
 12771     076B  1303               	bcf	3,6	;RP1=0, select bank1
 12772     076C  00B7               	movwf	efgtoa@i^(0+128)
 12773     076D  3000               	movlw	0
 12774     076E  00B8               	movwf	(efgtoa@i^(0+128)+1)
 12775     076F                     l3308:
 12776                           
 12777                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12778     076F  0837               	movf	efgtoa@i^(0+128),w
 12779     0770  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12780     0771  0084               	movwf	4
 12781     0772  1783               	bsf	3,7	;select IRP bank2
 12782     0773  0180               	clrf	0
 12783     0774                     l3310:
 12784                           
 12785                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12786     0774  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 12787     0775  1283               	bcf	3,5	;RP0=0, select bank0
 12788     0776  1303               	bcf	3,6	;RP1=0, select bank0
 12789     0777  00D0               	movwf	??_efgtoa
 12790     0778  1683               	bsf	3,5	;RP0=1, select bank1
 12791     0779  1303               	bcf	3,6	;RP1=0, select bank1
 12792     077A  0842               	movf	efgtoa@n^(0+128),w
 12793     077B  1283               	bcf	3,5	;RP0=0, select bank0
 12794     077C  1303               	bcf	3,6	;RP1=0, select bank0
 12795     077D  02D0               	subwf	??_efgtoa,f
 12796     077E  1683               	bsf	3,5	;RP0=1, select bank1
 12797     077F  1303               	bcf	3,6	;RP1=0, select bank1
 12798     0780  0837               	movf	efgtoa@i^(0+128),w
 12799     0781  1283               	bcf	3,5	;RP0=0, select bank0
 12800     0782  1303               	bcf	3,6	;RP1=0, select bank0
 12801     0783  0750               	addwf	??_efgtoa,w
 12802     0784  00F0               	movwf	memcpy@d1
 12803     0785  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 12804     0786  00F1               	movwf	memcpy@s1
 12805     0787  1683               	bsf	3,5	;RP0=1, select bank1
 12806     0788  1303               	bcf	3,6	;RP1=0, select bank1
 12807     0789  0843               	movf	(efgtoa@n+1)^(0+128),w
 12808     078A  00F3               	movwf	memcpy@n+1
 12809     078B  0842               	movf	efgtoa@n^(0+128),w
 12810     078C  00F2               	movwf	memcpy@n
 12811     078D  160A  158A  2306  120A  118A  	fcall	_memcpy
 12812     0792                     l3312:
 12813                           
 12814                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12815     0792  1683               	bsf	3,5	;RP0=1, select bank1
 12816     0793  1303               	bcf	3,6	;RP1=0, select bank1
 12817     0794  0842               	movf	efgtoa@n^(0+128),w
 12818     0795  0237               	subwf	efgtoa@i^(0+128),w
 12819     0796  00C2               	movwf	efgtoa@n^(0+128)
 12820     0797  0843               	movf	(efgtoa@n+1)^(0+128),w
 12821     0798  1C03               	skipc
 12822     0799  0A43               	incf	(efgtoa@n+1)^(0+128),w
 12823     079A  0238               	subwf	(efgtoa@i+1)^(0+128),w
 12824     079B  00C3               	movwf	(efgtoa@n+1)^(0+128)
 12825     079C                     l3314:
 12826                           
 12827                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12828     079C  0841               	movf	efgtoa@sign^(0+128),w
 12829     079D  1D03               	btfss	3,2
 12830     079E  2FA0               	goto	u4711
 12831     079F  2FA2               	goto	u4710
 12832     07A0                     u4711:
 12833     07A0  3001               	movlw	1
 12834     07A1  2FA3               	goto	u4720
 12835     07A2                     u4710:
 12836     07A2  3000               	movlw	0
 12837     07A3                     u4720:
 12838     07A3  1283               	bcf	3,5	;RP0=0, select bank0
 12839     07A4  1303               	bcf	3,6	;RP1=0, select bank0
 12840     07A5  00D0               	movwf	??_efgtoa
 12841     07A6  01D1               	clrf	??_efgtoa+1
 12842     07A7  0850               	movf	??_efgtoa,w
 12843     07A8  1683               	bsf	3,5	;RP0=1, select bank1
 12844     07A9  1303               	bcf	3,6	;RP1=0, select bank1
 12845     07AA  00B7               	movwf	efgtoa@i^(0+128)
 12846     07AB  1283               	bcf	3,5	;RP0=0, select bank0
 12847     07AC  1303               	bcf	3,6	;RP1=0, select bank0
 12848     07AD  0851               	movf	??_efgtoa+1,w
 12849     07AE  1683               	bsf	3,5	;RP0=1, select bank1
 12850     07AF  1303               	bcf	3,6	;RP1=0, select bank1
 12851     07B0  00B8               	movwf	(efgtoa@i+1)^(0+128)
 12852     07B1                     l3316:
 12853                           
 12854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 12855     07B1  0841               	movf	efgtoa@sign^(0+128),w
 12856     07B2  1903               	btfsc	3,2
 12857     07B3  2FB5               	goto	u4731
 12858     07B4  2FB6               	goto	u4730
 12859     07B5                     u4731:
 12860     07B5  2FC2               	goto	l3320
 12861     07B6                     u4730:
 12862     07B6                     l3318:
 12863                           
 12864                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 12865     07B6  30FF               	movlw	255
 12866     07B7  07C2               	addwf	efgtoa@n^(0+128),f
 12867     07B8  1803               	skipnc
 12868     07B9  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12869     07BA  30FF               	movlw	255
 12870     07BB  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12871     07BC  0842               	movf	efgtoa@n^(0+128),w
 12872     07BD  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12873     07BE  0084               	movwf	4
 12874     07BF  0841               	movf	efgtoa@sign^(0+128),w
 12875     07C0  1783               	bsf	3,7	;select IRP bank2
 12876     07C1  0080               	movwf	0
 12877     07C2                     l3320:
 12878                           
 12879                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 12880     07C2  0837               	movf	efgtoa@i^(0+128),w
 12881     07C3  02B1               	subwf	efgtoa@w^(0+128),f
 12882     07C4  0838               	movf	(efgtoa@i+1)^(0+128),w
 12883     07C5  1C03               	skipc
 12884     07C6  03B2               	decf	(efgtoa@w+1)^(0+128),f
 12885     07C7  02B2               	subwf	(efgtoa@w+1)^(0+128),f
 12886     07C8                     l3322:
 12887                           
 12888                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 12889     07C8  1283               	bcf	3,5	;RP0=0, select bank0
 12890     07C9  1303               	bcf	3,6	;RP1=0, select bank0
 12891     07CA  0849               	movf	efgtoa@fp,w
 12892     07CB  00A8               	movwf	pad@fp
 12893     07CC  084A               	movf	efgtoa@fp+1,w
 12894     07CD  00A9               	movwf	pad@fp+1
 12895     07CE  1683               	bsf	3,5	;RP0=1, select bank1
 12896     07CF  1303               	bcf	3,6	;RP1=0, select bank1
 12897     07D0  0842               	movf	efgtoa@n^(0+128),w
 12898     07D1  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12899     07D2  1283               	bcf	3,5	;RP0=0, select bank0
 12900     07D3  1303               	bcf	3,6	;RP1=0, select bank0
 12901     07D4  00AA               	movwf	pad@buf
 12902     07D5  1683               	bsf	3,5	;RP0=1, select bank1
 12903     07D6  1303               	bcf	3,6	;RP1=0, select bank1
 12904     07D7  0832               	movf	(efgtoa@w+1)^(0+128),w
 12905     07D8  1283               	bcf	3,5	;RP0=0, select bank0
 12906     07D9  1303               	bcf	3,6	;RP1=0, select bank0
 12907     07DA  00AC               	movwf	pad@p+1
 12908     07DB  1683               	bsf	3,5	;RP0=1, select bank1
 12909     07DC  1303               	bcf	3,6	;RP1=0, select bank1
 12910     07DD  0831               	movf	efgtoa@w^(0+128),w
 12911     07DE  1283               	bcf	3,5	;RP0=0, select bank0
 12912     07DF  1303               	bcf	3,6	;RP1=0, select bank0
 12913     07E0  00AB               	movwf	pad@p
 12914     07E1  160A  158A  2599  120A  118A  	fcall	_pad
 12915     07E6                     l870:
 12916     07E6  0008               	return
 12917     07E7                     __end_of_efgtoa:

Data Sizes:
    Strings     416
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     67      79
    BANK3            96     76      76
    BANK2            96      0      80

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@buffer(BANK3[64]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@buffer(BANK3[64]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S682$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@buffer(BANK3[64]), 

    S682$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_10(CODE[61]), STR_2(CODE[15]), STR_4(CODE[55]), STR_7(CODE[59]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> main@buffer(BANK3[64]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), STR_15(CODE[4]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 64
		 -> main@buffer(BANK3[64]), STR_1(CODE[19]), STR_11(CODE[54]), STR_3(CODE[15]), 
		 -> STR_5(CODE[50]), STR_6(CODE[14]), STR_8(CODE[54]), STR_9(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 61
		 -> STR_10(CODE[61]), STR_2(CODE[15]), STR_4(CODE[55]), STR_7(CODE[59]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 61
		 -> STR_10(CODE[61]), STR_2(CODE[15]), STR_4(CODE[55]), STR_7(CODE[59]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_10(CODE[61]), STR_2(CODE[15]), STR_4(CODE[55]), STR_7(CODE[59]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _efgtoa->___flmul
    _efgtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _UART_Write_Text->_UART_Write
    _LM75_setOSTripTemperature->___flmul
    _LM75_setOSPolarity->_LM75_readConfig
    _LM75_setOSPolarity->_LM75_setConfig
    _LM75_setHysteresisTemperature->___flmul
    ___flmul->__Umul8_16
    _LM75_set->_I2C_Master_Write
    _LM75_setFaultQueue->_LM75_readConfig
    _LM75_setFaultQueue->_LM75_setConfig
    _LM75_setDeviceMode->_LM75_readConfig
    _LM75_setDeviceMode->_LM75_setConfig
    _LM75_setConfig->_I2C_Master_Write
    _LM75_readConfig->_I2C_Master_Write
    _LM75_getOSTripTemperature->___xxtofl
    _LM75_getHysteresisTemperature->___xxtofl
    ___fltol->___flmul
    _toFloat->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _LM75_setOSTripTemperature->___fltol
    _LM75_setHysteresisTemperature->___fltol
    _LM75_getOSTripTemperature->___fltol
    _LM75_getHysteresisTemperature->___fltol
    ___fltol->_LM75_read
    _LM75_read->_toFloat
    _toFloat->___fladd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0   26553
                                             64 BANK1      3     3      0
                                              0 BANK3     76    76      0
      _LM75_getHysteresisTemperature
          _LM75_getOSTripTemperature
                          _LM75_init
                          _LM75_read
                 _LM75_setDeviceMode
                 _LM75_setFaultQueue
      _LM75_setHysteresisTemperature
                 _LM75_setOSPolarity
          _LM75_setOSTripTemperature
                       _UART_TX_Init
                    _UART_Write_Text
                             ___flge
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    15     11   12437
                                             65 BANK0     13    13      0
                                             53 BANK1     11     0     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     2      5   12226
                                             63 BANK0      2     2      0
                                             48 BANK1      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4   12092
                                             52 BANK0     11    11      0
                                             44 BANK1      4     0      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     276
                                              6 COMMON     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   11068
                                             41 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3      77
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     707
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     331
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4      69
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     137
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2041
                                             21 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     198
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1132
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2      85
                                              1 COMMON     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              0 COMMON     1     1      0
                      _UART_TX_Empty
 ---------------------------------------------------------------------------------
 (3) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM75_setOSTripTemperature                            6     2      4    2009
                                             41 BANK0      6     2      4
                           _LM75_set
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _LM75_setOSPolarity                                   2     2      0     164
                                              2 COMMON     2     2      0
                    _LM75_readConfig
                     _LM75_setConfig
 ---------------------------------------------------------------------------------
 (1) _LM75_setHysteresisTemperature                        6     2      4    2009
                                             41 BANK0      6     2      4
                           _LM75_set
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    1622
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _LM75_set                                             3     1      2     104
                                              1 COMMON     3     1      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _LM75_setFaultQueue                                   2     2      0     166
                                              2 COMMON     2     2      0
                    _LM75_readConfig
                     _LM75_setConfig
 ---------------------------------------------------------------------------------
 (1) _LM75_setDeviceMode                                   2     2      0     164
                                              2 COMMON     2     2      0
                    _LM75_readConfig
                     _LM75_setConfig
 ---------------------------------------------------------------------------------
 (2) _LM75_setConfig                                       1     1      0      58
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _LM75_readConfig                                      1     1      0      52
                                              1 COMMON     1     1      0
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _LM75_init                                            0     0      0       0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM75_getOSTripTemperature                            9     5      4    3148
                                             41 BANK0      9     5      4
                          _LM75_read
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _LM75_getHysteresisTemperature                        9     5      4    3148
                                             41 BANK0      9     5      4
                          _LM75_read
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     236
                                             31 BANK0     10     6      4
                          _LM75_read (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LM75_read                                           11     7      4    2550
                                             20 BANK0     11     7      4
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
                            _toFloat
 ---------------------------------------------------------------------------------
 (2) _toFloat                                             12     8      4    2446
                                              8 BANK0     12     8      4
                            ___fladd
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1992
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM75_getHysteresisTemperature
     _LM75_read
       _I2C_ACK
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_NACK
         _I2C_Master_Wait
       _I2C_Read_Byte
         _I2C_Master_Wait
       _toFloat
         ___fladd
         ___xxtofl
     ___fltol
       _LM75_read (ARG)
       ___flmul (ARG)
         __Umul8_16
     ___xxtofl
   _LM75_getOSTripTemperature
     _LM75_read
     ___fltol
     ___xxtofl
   _LM75_init
     _I2C_Master_Init
   _LM75_read
   _LM75_setDeviceMode
     _LM75_readConfig
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _I2C_NACK
       _I2C_Read_Byte
     _LM75_setConfig
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
   _LM75_setFaultQueue
     _LM75_readConfig
     _LM75_setConfig
   _LM75_setHysteresisTemperature
     _LM75_set
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     ___flmul
     ___fltol
   _LM75_setOSPolarity
     _LM75_readConfig
     _LM75_setConfig
   _LM75_setOSTripTemperature
     _LM75_set
     ___flmul
     ___fltol
   _UART_TX_Init
   _UART_Write_Text
     _UART_Write
       _UART_TX_Empty
   ___flge
     ___flmul (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     78      79     98.8%
BANK1               80     67      79     98.8%
BANK3               96     76      76     79.2%
BANK2               96      0      80     83.3%
STACK                0      0       0      0.0%
DATA                 0      0     328      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Nov 14 19:45:43 2024

                            ___fldiv@aexp 002C                              ___fldiv@bexp 002B  
                                       pc 0002                              ___fldiv@sign 0024  
                                      l41 0EEE                                        l38 0DEE  
                                      l81 1A5B                                        l90 1A1E  
                                      l84 1A42                                        l93 1A15  
                                      l87 1A4E                                        l96 000B  
                                      l99 1A35                                        fsr 0004  
                     ___wmul@multiplicand 0072                       __Umul8_16@word_mpld 0076  
                                     l102 1A41                                       l111 1AAB  
                                     l105 1A66                                       l113 1AB0  
                                     l114 1AB9                                       l202 1B05  
                                     l107 1A6A                                       l108 1A6B  
                                     l212 105D                                       l205 1C5C  
                                     l222 1AD0                                       l143 1A8D  
                                     l208 1B6B                                       l152 1A7B  
                                     l233 1B9B                                       l234 1B9D  
                                     l146 1006                                       l227 1AE7  
                                     l260 1D61                                       l253 1CF3  
                                     l237 1BB6                                       l158 1BDC  
                                     l263 1D98                                       l351 1B90  
                                     l257 1D2A                                       l530 10E8  
                                     l196 1A04                                       l524 1E24  
                                     l349 1B78                                       l550 1F5D  
                                     l518 1DF3                                       l199 1E8F  
                                     l543 1F72                                       l519 1E0F  
                                     l535 1101                                       l527 107C  
                                     l553 1F72                                       l650 1601  
                                     l730 159B                                       l722 151D  
                                     l706 1429                                       l803 117F  
                                     l539 1A29                                       l804 118B  
                                     l708 15A3                                       l645 15D0  
                                     l654 1680                                       l671 174C  
                                     l663 17FF                                       l656 1659  
                                     l752 0C2E                                       l728 158F  
                                     l681 1795                                       l746 0CBC  
                                     l675 1772                                       l692 17F3  
                                     l684 17D3                                       l828 1C8B  
                                     l693 17FF                                       l765 1BF1  
                                     l790 1124                                       l758 0CB2  
                                     l870 07E6                                       l791 1135  
                                     l767 1C03                                       l855 1DA1  
                                     l919 1EFC                                       l792 11B5  
                                     l696 0823                                       l928 08A3  
                                     l962 1203                                       l946 1CBC  
                                     l963 12C4                                       l859 1DD6  
                                     l867 133D                                       l939 097A  
                                     l796 1163                                       l956 1FFF  
                                     l980 1B18                                       l886 02F1  
                                     l967 12BC                                       l983 1B26  
                                     l896 05AC                                       l977 1AA2  
                                     l995 00A5                                       _RB0 0030  
                                     _RB1 0031                                       _RB2 0032  
                                     _PEN 048A                                       _SEN 0488  
                         __end_of_I2C_ACK 1A36                                       _pad 1D99  
                                     fsr0 0004                                       indf 0000  
LM75_setHysteresisTemperature@temperature 0049                              ___flmul@aexp 002D  
                            ___flmul@bexp 002E                              ___flmul@sign 0028  
                            ___flmul@temp 0033                              ___flmul@prod 002F  
                            ___fltol@exp1 0048                                      l1003 1C2E  
                                    l1012 1B47                                      l1006 1000  
                                    l3000 1FC9                                      l3002 1FCE  
                                    l3100 118D                                      l3012 1FFB  
                                    l3020 1A8E                                      l3102 11A3  
                                    l3006 1FD3                                      l3030 11D6  
                                    l3022 1A92                                      l2400 15D2  
                                    l3104 11A8                                      l3008 1FD9  
                                    l3032 11F5                                      l3024 1A93  
                                    l3016 1B27                                      l3200 02FB  
                                    l3120 130B                                      l3112 12C5  
                                    l2410 15E3                                      l2402 15D4  
                                    l3106 11AC                                      l3050 1292  
                                    l3042 1238                                      l3034 1202  
                                    l3018 1B29                                      l3210 0315  
                                    l3202 0301                                      l3130 1334  
                                    l3122 1322                                      l3114 12C8  
                                    l2500 16CC                                      l2420 15F7  
                                    l2412 15E4                                      l2404 15DA  
                                    l3108 11AD                                      l3052 129B  
                                    l3044 1251                                      l3036 1209  
                                    l3028 11B6                                      l3060 1B0B  
                                    l3300 073E                                      l3220 036C  
                                    l3204 0305                                      l3212 031B  
                                    l3140 1369                                      l3132 1339  
                                    l3124 1326                                      l3116 12E0  
                                    l2510 172A                                      l2502 16CF  
                                    l2430 160F                                      l2414 15E9  
                                    l2422 15F9                                      l2406 15DB  
                                    l3070 1103                                      l3054 12B4  
                                    l3046 1268                                      l3038 1223  
                                    l3062 1B10                                      l3310 0774  
                                    l3302 0744                                      l3230 0440  
                                    l3222 0393                                      l3214 031D  
                                    l3206 030D                                      l3150 13B0  
                                    l3142 1375                                      l3134 133F  
                                    l3126 132A                                      l3118 1307  
                                    l2512 172F                                      l2504 16E5  
                                    l2440 1619                                      l2432 1611  
                                    l2424 1607                                      l2416 15EE  
                                    l2408 15DF                                      l3072 1108  
                                    l3048 1279                                      l3064 1B12  
                                    l3320 07C2                                      l3312 0792  
                                    l3304 075A                                      l3240 04E2  
                                    l3232 047F                                      l3224 0405  
                                    l3216 0325                                      l3208 030F  
                                    l3152 13B7                                      l3144 137D  
                                    l3136 1352                                      l3128 132F  
                                    l2600 1B6E                                      l3400 0824  
                                    l3066 1A42                                      l2530 177A  
                                    l2522 1762                                      l2506 1725  
                                    l2514 173E                                      l2450 1623  
                                    l2442 161B                                      l2434 1613  
                                    l2426 160B                                      l2418 15F6  
                                    l3090 115A                                      l3082 1138  
                                    l3074 110C                                      l3058 1B06  
                                    l2370 001F                                      l3322 07C8  
                                    l3314 079C                                      l3306 0769  
                                    l3250 05A0                                      l3242 04EA  
                                    l3234 04B6                                      l3226 0424  
                                    l3218 032E                                      l3170 00CC  
                                    l3154 13C7                                      l3162 00A6  
                                    l3138 1359                                      l2602 1B72  
                                    l3330 1EAA                                      l3410 086B  
                                    l3402 083E                                      l3068 1A48  
                                    l2540 1788                                      l2532 177C  
                                    l2524 176D                                      l2516 1754  
                                    l2508 1727                                      l2460 162C  
                                    l2452 1625                                      l2444 161D  
                                    l2436 1615                                      l2428 160D  
                                    l2380 15A6                                      l3092 116A  
                                    l3084 1143                                      l3076 111C  
                                    l3500 1A7C                                      l2700 13DE  
                                    l2620 1E23                                      l2612 1DD7  
                                    l2372 0037                                      l2364 000C  
                                    l3316 07B1                                      l3308 076F  
                                    l3260 05C0                                      l3252 05A6  
                                    l3244 050B                                      l3236 04C1  
                                    l3228 042A                                      l3180 0212  
                                    l3172 00DC                                      l3164 00B0  
                                    l3148 1399                                      l2604 1B7F  
                                    l3340 1EF8                                      l3332 1EB2  
                                    l3420 08A6                                      l3412 0875  
                                    l3404 0848                                      l3350 1A12  
                                    l2550 179F                                      l2542 178C  
                                    l2534 1781                                      l2526 1771  
                                    l2518 1759                                      l2470 166C  
                                    l2462 1643                                      l2454 1627  
                                    l2446 161F                                      l2438 1617  
                                    l2390 15B8                                      l2382 15A8  
                                    l3094 1175                                      l3086 114A  
                                    l3078 112C                                      l3502 1BB7  
                                    l2710 13F5                                      l2702 13E2  
                                    l2614 1DEB                                      l2630 1098  
                                    l2374 0069                                      l2366 0012  
                                    l3318 07B6                                      l3270 0661  
                                    l3262 0628                                      l3254 05BA  
                                    l3246 0559                                      l3238 04DC  
                                    l3182 021D                                      l3190 02A3  
                                    l3174 011B                                      l3166 00B2  
                                    l2606 1B86                                      l3334 1EC0  
                                    l3326 1E90                                      l3430 08DB  
                                    l3414 0884                                      l3406 084E  
                                    l3510 1C5D                                      l3360 1A32  
                                    l3344 1A16                                      l3352 0003  
                                    l2560 17DD                                      l2552 17AD  
                                    l2544 1792                                      l2528 1776  
                                    l2536 1783                                      l2480 1689  
                                    l2472 166D                                      l2464 165D  
                                    l2456 1629                                      l2448 1621  
                                    l2392 15BD                                      l2384 15AE  
                                    l3096 1179                                      l3088 114C  
                                    l3504 1BB8                                      l2800 1506  
                                    l2720 1407                                      l2712 13F6  
                                    l2704 13E3                                      l2616 1E07  
                                    l2640 1100                                      l2632 109C  
                                    l2624 105E                                      l2368 0018  
                                    l3280 067C                                      l3272 0667  
                                    l3264 0652                                      l3256 05BB  
                                    l3248 0561                                      l3184 023E  
                                    l3176 0179                                      l3192 02DC  
                                    l2608 1B8C                                      l3336 1ED5  
                                    l3328 1E92                                      l3424 08A8  
                                    l3416 0891                                      l3408 0854  
                                    l3520 1C7E                                      l3512 1C61  
                                    l3600 0DAB                                      l3346 1A1B  
                                    l3354 0008                                      l3370 1A62  
                                    l3362 1A36                                      l2570 17F1  
                                    l2562 17E5                                      l2554 17B1  
                                    l2490 16B1                                      l2538 1787  
                                    l2474 1678                                      l2466 1666  
                                    l2458 162B                                      l2394 15C5  
                                    l2386 15B2                                      l2378 15A4  
                                    l3098 1183                                      l3530 1CD6  
                                    l3506 1BC6                                      l2810 1535  
                                    l2802 151A                                      l2730 141E  
                                    l2722 140B                                      l2706 13E8  
                                    l2714 13F8                                      l2618 1E21  
                                    l2634 10C0                                      l2626 1074  
                                    l3290 069B                                      l3282 0682  
                                    l3274 066D                                      l3266 0658  
                                    l3258 05BD                                      l3194 02E4  
                                    l3186 0244                                      l3178 01B2  
                                    l3338 1EDD                                      l3434 08F4  
                                    l3426 08B3                                      l3418 089C  
                                    l3450 0953                                      l3514 1C69  
                                    l3610 0E07                                      l3602 0DE4  
                                    l3356 1A2A                                      l3348 1A0D  
                                    l3364 1A39                                      l3372 1AA3  
                                    l2572 17FA                                      l2564 17EA  
                                    l2556 17D1                                      l2548 179A  
                                    l2492 16BA                                      l2484 1692  
                                    l2468 1668                                      l2476 167A  
                                    l2396 15C6                                      l2388 15B3  
                                    l2660 1F24                                      l2652 1EFD  
                                    l3524 1CBD                                      l3540 1D0D  
                                    l2580 1BE7                                      l2900 0A9E  
                                    l3508 1BCC                                      l2820 1573  
                                    l2812 1539                                      l2740 143F  
                                    l2732 141F                                      l2724 140C  
                                    l2716 1400                                      l2708 13ED  
                                    l2636 10C4                                      l2628 1090  
                                    l2644 1A1F                                      l3292 06A1  
                                    l3284 0688                                      l3276 0673  
                                    l3268 065D                                      l3196 02E8  
                                    l3444 093B                                      l3436 08FC  
                                    l3428 08C2                                      l3516 1C6B  
                                    l3620 0E65                                      l3612 0E16  
                                    l3604 0DF2                                      l3358 1A2D  
                                    l3366 1A3E                                      l3374 1AA8  
                                    l2574 17FE                                      l2566 17EB  
                                    l2558 17D8                                      l2494 16BC  
                                    l2486 16A9                                      l2478 1684  
                                    l2398 15C8                                      l3390 102F  
                                    l2662 1F25                                      l2654 1F08  
                                    l3534 1CF4                                      l3470 1A5A  
                                    l3462 1A4F                                      l3550 1AC8  
                                    l2582 1BEB                                      l2910 0B0B  
                                    l2902 0AAC                                      l3382 1001  
                                    l2830 1597                                      l2822 1582  
                                    l2814 1552                                      l2806 1522  
                                    l2750 1456                                      l2726 1411  
                                    l2734 1421                                      l2718 1403  
                                    l2638 10FE                                      l2646 1A27  
                                    l2590 1C04                                      l3294 06A7  
                                    l3278 0676                                      l3286 068E  
                                    l3198 02ED                                      l3438 0917  
                                    l3446 0948                                      l3518 1C6D  
                                    l3630 0EFB                                      l3622 0EA2  
                                    l3614 0E25                                      l3606 0DFB  
                                    l3368 1A5D                                      l3376 1AB1  
                                    l2568 17EF                                      l2496 16C0  
                                    l2488 16AD                                      l3392 1031  
                                    l3456 1E28                                      l2664 1F2D  
                                    l3464 1A53                                      l3480 1C2F  
                                    l3552 1ACA                                      l3544 1ABB  
                                    l2584 1BFA                                      l2576 1BDE  
                                    l2920 0BB2                                      l2912 0B28  
                                    l2904 0AC9                                      l2840 097F  
                                    l3560 1ADF                                      l3472 1A6D  
                                    l2832 1599                                      l2824 1586  
                                    l2808 1527                                      l2816 1558  
                                    l2760 1482                                      l2752 1468  
                                    l2736 1431                                      l2744 1448  
                                    l2728 1416                                      l2648 1A29  
                                    l2592 1C09                                      l3296 0719  
                                    l3288 0694                                      l3640 0F2B  
                                    l3632 0F01                                      l3624 0EAB  
                                    l3616 0E2B                                      l3608 0E01  
                                    l3378 1AB6                                      l2498 16C1  
                                    l3394 1036                                      l3386 1007  
                                    l3458 1E6F                                      l2682 1F52  
                                    l2674 1F3B                                      l2666 1F2F  
                                    l2658 1F11                                      l3466 1A57  
                                    l3482 1C5B                                      l3546 1AC1  
                                    l2586 1BFF                                      l2578 1BE0  
                                    l2930 0BFE                                      l2922 0BDA  
                                    l2914 0B53                                      l2906 0AD7  
                                    l2850 098F                                      l2842 0981  
                                    l3570 1D57                                      l3562 1AE1  
                                    l3554 1AD2                                      l3474 1A6D  
                                    l2826 158E                                      l2818 1565  
                                    l2762 1487                                      l2770 14A7  
                                    l2754 1470                                      l2746 144D  
                                    l2738 143D                                      l2690 0804  
                                    l2594 1C19                                      l3298 0738  
                                    l3490 1C99                                      l3650 0FE4  
                                    l3642 0F48                                      l3634 0F07  
                                    l3626 0EE4                                      l3618 0E48  
                                    l3396 1055                                      l3388 102D  
                                    l2684 1F62                                      l2668 1F33  
                                    l2676 1F4B                                      l3468 1A59  
                                    l3548 1AC6                                      l3580 1BB0  
                                    l3572 1B92                                      l2940 0C13  
                                    l2932 0BFF                                      l2924 0BE3  
                                    l2916 0B61                                      l2908 0AF4  
                                    l2860 09A9                                      l2852 0994  
                                    l2844 0985                                      l3556 1AD8  
                                    l3564 1D62                                      l3476 1A77  
                                    l2828 1593                                      l2780 14D6  
                                    l2772 14B9                                      l2764 1499  
                                    l2756 1478                                      l2596 1C21  
                                    l3492 1CA8                                      l3644 0F65  
                                    l3636 0F16                                      l3628 0EF2  
                                    l3652 0FED                                      l2686 1F67  
                                    l3478 1AE9                                      l3574 1B98  
                                    l3486 1B49                                      l2950 0C38  
                                    l2942 0C17                                      l2934 0C08  
                                    l2926 0BF1                                      l2918 0B8C  
                                    l2870 09BC                                      l2862 09AD  
                                    l2854 099C                                      l2846 0989  
                                    l2838 097B                                      l3558 1ADD  
                                    l3566 1D8E                                      l2790 14EE  
                                    l2782 14DE                                      l2774 14BA  
                                    l2766 149D                                      l2758 1480  
                                    l2694 13D4                                      l2598 1B6C  
                                    l3494 1CB8                                      l3646 0FA2  
                                    l3638 0F25                                      l3590 0D13  
                                    l3582 0CBD                                      ?_pad 0028  
                                    l3576 1B9F                                      l2960 0C76  
                                    l2952 0C46                                      l2944 0C2B  
                                    l2928 0BFA                                      l2936 0C0E  
                                    l2880 09D8                                      l2872 09C4  
                                    l2864 09B1                                      l2856 099E  
                                    l2848 098A                                      l3568 1D2B  
                                    l2792 14F7                                      l2784 14E0  
                                    l2776 14CE                                      l2768 149E  
                                    l2696 13D8                                      l2688 0800  
                                    l3488 1C8C                                      l3648 0FAB  
                                    l3592 0D1C                                      l3584 0CC7  
                                    l3498 19FF                                      l3578 1BA2  
                                    l2970 0CA8                                      l2962 0C81  
                                    l2954 0C4A                                      l2938 0C12  
                                    l2890 0A17                                      l2874 09C6  
                                    l2866 09B2                                      l2858 09A6  
                                    l2786 14E9                                      l2794 14FD  
                                    l2778 14D0                                      l2698 13DA  
                                    l3594 0D22                                      l3586 0CD0  
                                    l2972 0CAC                                      l2964 0C90  
                                    l2956 0C63                                      l2948 0C33  
                                    l2892 0A33                                      l2884 09E1  
                                    l2876 09CE                                      l2868 09B7  
                                    l2796 1501                                      l2788 14ED  
                                    l2980 1D99                                      l3596 0D2B  
                                    l3588 0CEE                                      l2974 0CAD  
                                    l2966 0C9A                                      l2958 0C69  
                                    l2894 0A5D                                      l2886 09EF  
                                    l2878 09D3                                      l2798 1502  
                                    l2990 1DC9                                      l2982 1D9F  
                                    l3598 0D48                                      l2976 0CB4  
                                    l2968 0C9C                                      l2896 0A79  
                                    l2888 09FC                                      l2992 1F73  
                                    l2984 1DA4                                      l2898 0A95  
                                    l2994 1F93                                      l2986 1DB3  
                                    l2996 1FAA                                      l2988 1DBB  
                                    l2998 1FB0                                      STR_1 194D  
                                    STR_2 1960                                      STR_3 196F  
                                    STR_4 1878                                      STR_5 191B  
                                    STR_6 197E                                      STR_7 183D  
                                    STR_8 18AF                                      STR_9 198C  
                                    _BRGH 04C2                                      _CREN 00C4  
                                    u3000 17EF                                      u3001 17EE  
                                    u3010 17FE                                      u3011 17FD  
                                    u3020 1BEB                                      u3100 1DEB  
                                    u3021 1BEA                                      u3101 1DEA  
                                    u3110 1E07                                      u3111 1E06  
                                    u3040 1BFF                                      u3120 1E21  
                                    u3200 1A27                                      u4000 1FA1  
                                    u3041 1BFE                                      u3121 1E20  
                                    u3201 1A26                                      u3210 1F08  
                                    u3130 1074                                      u4010 1FB0  
                                    u3050 1C2E                                      u3211 1F07  
                                    u3035 1BF2                                      u3131 1073  
                                    u4011 1FAF                                      u3051 1C2D  
                                    u3300 1F67                                      u3220 1F1F  
                                    u3140 1090                                      u4020 1FBE  
                                    u4100 11E4                                      u3060 1B72  
                                    u3301 1F66                                      u3125 1E1D  
                                    u3141 108F                                      u4005 1F9C  
                                    u3061 1B71                                      u3230 1F33  
                                    u3310 13E2                                      u3150 109C  
                                    u4030 1FC9                                      u4110 1202  
                                    u2510 0012                                      u3231 1F32  
                                    u3311 13E1                                      u3151 109B  
                                    u4031 1FC8                                      u4111 1201  
                                    u2511 0011                                      u2600 15E3  
                                    u3240 1F3A                                      u3320 13E8  
                                    u4040 1FD9                                      u4200 12A9  
                                    u4120 1209                                      u2520 0018  
                                    u2601 15E2                                      u3241 1F39  
                                    u3225 1F1A                                      u3321 13E7  
                                    u3161 10AB                                      u4041 1FD8  
                                    u4025 1FB9                                      u4121 1208  
                                    u4105 11DF                                      u2521 0017  
                                    u2610 15E9                                      u3330 13ED  
                                    u3170 10C4                                      u3162 10AC  
                                    u4050 1FE7                                      u4210 12B4  
                                    u4130 1219                                      u2530 0037  
                                    u3090 1B8C                                      u2611 15E8  
                                    u3331 13EC                                      u3171 10C3  
                                    u3163 10B1                                      u4211 12B3  
                                    u4115 11FE                                      u2531 0036  
                                    u3091 1B8B                                      u3075 1B79  
                                    u2620 15EE                                      u3260 1F4A  
                                    u3420 149D                                      u3340 140B  
                                    u3164 10B2                                      u4060 1FF3  
                                    u4140 1237                                      u4220 1B26  
                                    u2540 0069                                      u2621 15ED  
                                    u3261 1F49                                      u3421 149C  
                                    u3405 1489                                      u3341 140A  
                                    u3181 10D3                                      u3165 10B7  
                                    u4061 1FF1                                      u4205 12A4  
                                    u4141 1236                                      u4221 1B25  
                                    u2541 0068                                      u3085 1B80  
                                    u4230 1A48                                      u2710 1680  
                                    u2630 1607                                      u4310 1169  
                                    u3270 1F51                                      u3510 1501  
                                    u3350 1411                                      u3190 10FE  
                                    u3182 10D4                                      u3166 10B8  
                                    u4070 1FF4                                      u4150 1246  
                                    u2550 008A                                      u4231 1A47  
                                    u2711 167F                                      u2631 1606  
                                    u4311 1168                                      u3271 1F50  
                                    u3255 1F3C                                      u3511 1500  
                                    u3415 1492                                      u3351 1410  
                                    u3191 10FD                                      u3183 10D9  
                                    u4055 1FE2                                      u4135 1214  
                                    u4240 1A4E                                      u2720 1684  
                                    u2640 160B                                      u2560 15B2  
                                    u3600 1597                                      u3520 1506  
                                    u3440 14B9                                      u3360 1416  
                                    u3184 10DA                                      u4160 1251  
                                    u4080 1B47                                      u4400 132F  
                                    u4241 1A4D                                      u2801 16FE  
                                    u2721 1683                                      u2705 1671  
                                    u2641 160A                                      u2561 15B1  
                                    u4305 115B                                      u3601 1596  
                                    u3521 1505                                      u3505 14F0  
                                    u3441 14B8                                      u3361 1415  
                                    u3185 10DF                                      u4161 1250  
                                    u2545 0065                                      u4081 1B46  
                                    u4401 132E                                      u2810 1712  
                                    u2802 16FF                                      u2730 1689  
                                    u2650 1643                                      u2570 15B8  
                                    u4330 1179                                      u4250 1108  
                                    u3290 1F62                                      u3610 0989  
                                    u3530 151A                                      u3450 14CE  
                                    u3370 1431                                      u3186 10E0  
                                    u4090 1A92                                      u4410 1334  
                                    u2811 1713                                      u2803 1704  
                                    u2731 1688                                      u2651 1642  
                                    u2571 15B7                                      u4331 1178  
                                    u4251 1107                                      u3291 1F61  
                                    u3611 0988                                      u3531 1519  
                                    u3435 14A0                                      u3371 1430  
                                    u3195 10FA                                      u4171 125A  
                                    u4155 1241                                      u4091 1A91  
                                    u4411 1333                                      u2900 178C  
                                    u2820 172F                                      u2812 1718  
                                    u2804 1705                                      u2660 164C  
                                    u2580 15BD                                      u4340 117F  
                                    u4260 110C                                      u3620 098F  
                                    u3540 1521                                      u3460 14D6  
                                    u3380 144D                                      u4180 1287  
                                    u4172 1261                                      u4420 1352  
                                    u2901 178B                                      u2821 172E  
                                    u2813 1719                                      u2805 170A  
                                    u2741 169B                                      u2661 164A  
                                    u2581 15BC                                      u4341 117E  
                                    u4325 116E                                      u4261 110B  
                                    u3285 1F54                                      u3701 0A41  
                                    u3621 098E                                      u3541 1520  
                                    u3461 14D5                                      u3445 14B5  
                                    u3381 144C                                      u4173 1268  
                                    u4501 01D7                                      u4421 1351  
                                    u2910 1792                                      u2830 1754  
                                    u2806 170B                                      u2750 16AD  
                                    u2742 16A2                                      u2670 164D  
                                    u2590 15DA                                      u4350 1183  
                                    u4270 112C                                      u3702 0A48  
                                    u3630 0994                                      u3550 1527  
                                    u3470 14DE                                      u3390 1487  
                                    u4190 1292                                      u4510 0212  
                                    u4502 01DA                                      u4430 1359  
                                    u2911 1791                                      u2831 1753  
                                    u2751 16AC                                      u2743 16A9  
                                    u2655 163F                                      u2591 15D9  
                                    u4351 1182                                      u4271 112B  
                                    u3711 0A6B                                      u3703 0A4F  
                                    u3631 0993                                      u3551 1526  
                                    u3471 14DD                                      u3455 14C1  
                                    u3391 1486                                      u4191 1291  
                                    u4511 0211                                      u4503 01E1  
                                    u4431 1358                                      u2920 1799  
                                    u2840 1759                                      u2760 16B1  
                                    u2680 165D                                      u4360 1198  
                                    u3800 0B98                                      u3712 0A72  
                                    u3640 09B1                                      u3560 1539  
                                    u3456 14C2                                      u4600 04B6  
                                    u4504 01E4                                      u4440 13B0  
                                    u2921 1798                                      u2841 1758  
                                    u2761 16B0                                      u2681 165C  
                                    u3721 0A87                                      u3713 0A79  
                                    u3641 09B0                                      u3561 1538  
                                    u3457 14C7                                      u4185 1282  
                                    u4601 04B5                                      u4521 0267  
                                    u4513 020E                                      u4505 01EB  
                                    u4441 13AD                                      u2930 179F  
                                    u2770 16C0                                      u2690 166C  
                                    u4370 11A8                                      u4290 1149  
                                    u3722 0A8E                                      u3650 09B7  
                                    u3570 1548                                      u3490 14ED  
                                    u3458 14C8                                      u4610 04DC  
                                    u4530 02A2                                      u4522 026A  
                                    u4506 01EE                                      u4450 13B7  
                                    u2931 179E                                      u2771 16BF  
                                    u2691 166B                                      u4371 11A7  
                                    u4291 1148                                      u3811 0BA4  
                                    u3723 0A95                                      u3651 09B6  
                                    u3491 14EC                                      u3459 14CD  
                                    u4611 04DB                                      u4531 02A1  
                                    u4523 0271                                      u4451 13B6  
                                    u2940 17B1                                      u2860 1771  
                                    u4380 11AC                                      u3900 0C2B  
                                    u3820 0BC0                                      u3812 0BAB  
                                    u3660 09BC                                      u3580 1565  
                                    u4700 0769                                      u4620 04E2  
                                    u4540 02DC                                      u4524 0274  
                                    u4460 00CB                                      u2941 17B0  
                                    u2861 1770                                      u4381 11AB  
                                    u4365 1193                                      u4285 113B  
                                    u3901 0C2A                                      u3813 0BB2  
                                    u3805 0B93                                      u3741 0ABB  
                                    u3661 09BB                                      u3581 1564  
                                    u3485 14E2                                      u4701 0768  
                                    u4621 04E1                                      u4541 02DB  
                                    u4533 029E                                      u4525 027B  
                                    u4461 00CA                                      u2950 17C2  
                                    u2870 1776                                      u2790 16E5  
                                    u3910 0C32                                      u3742 0AC2  
                                    u3670 09D3                                      u3590 1582  
                                    u4710 07A2                                      u4630 0559  
                                    u4550 02E8                                      u4526 027E  
                                    u4390 1307                                      u2871 1775  
                                    u2855 1766                                      u2791 16E4  
                                    u3911 0C31                                      u3831 0BCC  
                                    u3751 0AE6                                      u3743 0AC9  
                                    u3735 0A97                                      u3671 09D2  
                                    u3591 1581                                      u3575 1543  
                                    u4711 07A0                                      u4631 0558  
                                    u4551 02E7                                      u4471 013E  
                                    u4391 1306                                      u2960 17D1  
                                    u2880 1781                                      u3920 0C38  
                                    u3832 0BD3                                      u3752 0AED  
                                    u3680 09D8                                      u4720 07A3  
                                    u4640 05A6                                      u4560 0301  
                                    u4480 0179                                      u4472 0141  
                                    u4800 083E                                      u2961 17D0  
                                    u2881 1780                                      u2793 16E1  
                                    u2785 16C5                                      u3921 0C37  
                                    u3833 0BDA                                      u3825 0BBB  
                                    u3753 0AF4                                      u3681 09D7  
                                    u3585 1561                                      u4705 0765  
                                    u4641 05A5                                      u4561 0300  
                                    u4481 0178                                      u4473 0148  
                                    u4801 083D                                      u2970 17D8  
                                    u2890 1787                                      u3930 0C4A  
                                    u4730 07B6                                      u4650 0628  
                                    u4570 0305                                      u4490 01B2  
                                    u4474 014B                                      u4810 086B  
                                    u2971 17D7                                      u2955 17BD  
                                    u2891 1786                                      u3931 0C49  
                                    u3771 0B1A                                      u3691 0A25  
                                    u3595 157E                                      u4731 07B5  
                                    u4651 0627                                      u4571 0304  
                                    u4491 01B1                                      u4483 0175  
                                    u4475 0152                                      u4811 086A  
                                    u2980 17DD                                      u3940 0C59  
                                    u3860 0BFE                                      u3772 0B21  
                                    u3692 0A2C                                      u4660 065D  
                                    u4580 0315                                      u4476 0155  
                                    u4740 1EAA                                      u4820 08C1  
                                    u4900 0DF2                                      _RCEN 048B  
                                    _RCIF 0065                                      u2981 17DC  
                                    u3861 0BFD                                      u3845 0BDC  
                                    u3781 0B45                                      u3773 0B28  
                                    u3765 0AF6                                      u3693 0A33  
                                    u4661 065C                                      u4581 0314  
                                    u4741 1EA9                                      u4821 08C0  
                                    u4901 0DF1                                      u2990 17EA  
                                    u3950 0C76                                      u3782 0B4C  
                                    u4830 1A77                                      u4670 0661  
                                    u4590 0440                                      u4750 1EF8  
                                    u4910 0EE4                                      u2991 17E9  
                                    u3951 0C75                                      u3855 0BF3  
                                    u3791 0B70                                      u3783 0B53  
                                    u4831 1A76                                      u4671 0660  
                                    u4655 0624                                      u4591 043F  
                                    u4751 1EF7                                      u4911 0EE3  
                                    u4760 1A6A                                      u3960 0C90  
                                    u3880 0C12                                      u3792 0B77  
                                    u4680 0694                                      u4840 1CB8  
                                    u4920 0EF2                                      u4761 1A69  
                                    u3961 0C8F                                      u3945 0C54  
                                    u3881 0C11                                      u3793 0B7E  
                                    u4681 0693                                      u4841 1CB7  
                                    u4921 0EF1                                      u4770 1AB0  
                                    u3970 0CAC                                      u3890 0C17  
                                    u4850 1BDC                                      u4690 075A  
                                    u4930 0FE4                                      u4771 1AAF  
                                    u3971 0CAB                                      u3955 0C72  
                                    u3891 0C16                                      u3875 0C01  
                                    u4851 1BDB                                      u4691 0759  
                                    u4595 043C                                      u4931 0FE3  
                                    u4860 1AC6                                      u3980 1D9F  
                                    u4861 1AC5                                      u3965 0C8C  
                                    u3981 1D9E                                      u4790 1036  
                                    u4870 1ADD                                      u3990 1DC9  
                                    u4791 1035                                      u4871 1ADC  
                                    u3991 1DC8                                      u4695 0756  
                                    u4880 0D22                                      u4785 100F  
                                    u4881 0D21                                      u4890 0DE4  
                                    u3995 1DC5                                      u4891 0DE3  
                                    u4957 0FF5                                      _SPEN 00C7  
                                    _RSEN 0489                                      _TRMT 04C1  
                                    _TXEN 04C5                                      _SYNC 04C4  
                        __end_of_I2C_NACK 1A42                                      _dbuf 0110  
        __end_of_I2C_Master_RepeatedStart 1A16                                      _labs 1A8E  
                                    _main 0CBD                                      _prec 00ED  
                                    pad@i 002D                                      pad@p 002B  
                                    btemp 007E               ??_LM75_getOSTripTemperature 004D  
                           ___fpclassifyf 1F73               ??_LM75_setOSTripTemperature 007E  
    LM75_getHysteresisTemperature@rawTemp 0051                                      start 0000  
                         ___fldiv@new_exp 0025                   __end_of_UART_Write_Text 1BDD  
                        __end_of_LM75_set 1B6C                                     ??_pad 007D  
              __end_of_LM75_setOSPolarity 1AE8                          ?_I2C_Master_Init 0070  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                           ___fltol@sign1 0047                                     ?_labs 0070  
                         __end_of___fladd 1800                                     ?_main 0070  
                                   _ACKEN 048C                                     _ACKDT 048D  
                         __end_of___fldiv 15A4                           __end_of___flneg 1A2A  
                                   STR_10 1800                                     STR_11 18E5  
                                   STR_12 1998                                     STR_15 199C  
                         __end_of___flmul 0CBD                           __end_of___flsub 0824  
                         __end_of___fltol 1F73                                     _RCREG 001A  
                            vfpfcnvrt@fmt 00CE                                     _SPBRG 0099  
                        ??_LM75_setConfig 0071                                     _SSPIF 0063  
                                   _TXREG 0019                               ?_UART_Write 0070  
                                   _flags 006E                       read_prec_or_width@c 007A  
                     read_prec_or_width@n 007B                                     _fputc 000C  
                                   _fputs 1C04                                     labs@a 0070  
                                   pad@fp 0028                        main@hysteresisTemp 01D0  
                                   _width 00EB                           __end_of_toFloat 105E  
                                   _putch 1000                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 1C8C                            ?___fpclassifyf 0070  
              __end_of_LM75_setDeviceMode 1AD1                           __initialization 07E7  
              __end_of_LM75_setFaultQueue 1BB7                              __end_of_labs 1AA3  
                            __end_of_main 1000                                 ??_I2C_ACK 0070  
                       __end_of_LM75_init 1A05                         __end_of_LM75_read 1E90  
                       ??_LM75_readConfig 0071                                    ??_labs 0074  
                                  ??_main 00E0                 _LM75_getOSTripTemperature 1CF4  
               _LM75_setOSTripTemperature 1D62                __end_of_read_prec_or_width 1EFD  
                       ?_I2C_Master_Start 0070                         ?_I2C_Master_Write 0070  
                      ??_I2C_Master_Start 0070                        ??_I2C_Master_Write 0070  
                                  ?_fputc 0070                                    ?_fputs 0020  
                                  ?_putch 0070                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
                        __end_of___xxtofl 11B6                         toFloat@isfraction 002F  
                _I2C_Master_RepeatedStart 1A0D                              vfprintf@cfmt 005F  
                           toFloat@result 0030                                    ___flge 105E  
                                  ___fleq 1DD7                             _I2C_Read_Byte 1AA3  
            LM75_setFaultQueue@faultCount 0072                                 ??___fladd 0020  
                                  ___wmul 1B6C                                 ??___fldiv 0078  
                               ??___flneg 0074                                 ??___flmul 0079  
                        ?_UART_Write_Text 0071                                 ??___flsub 007E  
                               ??___fltol 0043                                    _efgtoa 12C5  
                                  _floorf 11B6                                    _memcpy 1B06  
                    read_prec_or_width@ap 0077                                    pad@buf 002A  
                   __end_of_UART_TX_Empty 1007                                    _strcpy 1B27  
                               ?_I2C_NACK 0070                                    fputc@c 0070  
                                  fputs@c 0025                                    fputs@i 0026  
                                  fputs@s 0020                           ___fpclassifyf@e 0020  
                               ??_toFloat 002C                           ___fpclassifyf@u 0022  
                         ___fpclassifyf@x 0070                                    putch@c 0070  
                        __end_of_vfprintf 1CBD                                 ??_sprintf 0061  
                              ___flge@ff1 0035                                ___flge@ff2 0039  
                         ??___fpclassifyf 0074                                 ?_LM75_set 0071  
                            ___xxtofl@arg 007A                              ___xxtofl@exp 0079  
                            ___xxtofl@val 0070                                ___fleq@ff1 0070  
                              ___fleq@ff2 0074                   __end_of__initialization 07FC  
                              ___flneg@f1 0070                                ___fltol@f1 003F  
                          ?_I2C_Read_Byte 0070                            __pcstackCOMMON 0070  
                           __end_of_fputc 00A6                             __end_of_fputs 1C2F  
                           __end_of_putch 1001                                ??_I2C_NACK 0070  
                                 ??_fputc 0074                                   ??_fputs 0023  
                                 ??_putch 0070                                __pbssBANK0 006E  
                              __pbssBANK1 00E3                                __pbssBANK2 0110  
                              ??_LM75_set 0073                         __end_of__Umul8_16 1C04  
                              _efgtoa$807 00A6                                __pmaintext 0CBD  
                                 ?___flge 0035                                   ?___fleq 0070  
            LM75_setOSPolarity@activeHigh 0072                                   ?___wmul 0070  
                                 ?_efgtoa 0049                                   _I2C_ACK 1A2A  
                                 ?_floorf 002D                                   ?_memcpy 0070  
                                 _ACKSTAT 048E            ?_LM75_getHysteresisTemperature 0049  
                                 ?_strcpy 0070                                 ?___xxtofl 0070  
                            ??_UART_Write 0070                        _LM75_setOSPolarity 1AD1  
                                 _SSPCON2 0091                                   _SSPSTAT 0094  
                           ?_UART_TX_Init 0070                                __stringtab 19A0  
                     ?_LM75_setOSPolarity 0070                           ??_I2C_Read_Byte 0070  
                         _LM75_readConfig 1C2F            ?_LM75_setHysteresisTemperature 0049  
                                 ___fladd 15A4                                   ___fldiv 13D4  
                                 ___flneg 1A1F                                   ___flmul 097B  
                                 ___flsub 0800                                   ___fltol 1EFD  
                      __end_of_UART_Write 1A7C                            main@osTripTemp 01D8  
                               ?_vfprintf 00D0                        LM75_set@regAddress 0073  
                    ??_LM75_setOSPolarity 0072                        _LM75_setDeviceMode 1ABA  
                                 __ptext1 1C5D                                   __ptext2 1C8C  
                                 __ptext3 0824                                   __ptext4 1E90  
                                 __ptext5 1B6C                                   __ptext6 12C5  
                                 __ptext7 1B27                                   __ptext8 1D99  
                                 __ptext9 1C04                     read_prec_or_width@fmt 0076  
                              ??___xxtofl 0074                        _LM75_setFaultQueue 1B91  
                               _LM75_init 19FF                                 _LM75_read 1E25  
                                 _toFloat 1007                                   efgtoa@c 004F  
                                 efgtoa@d 00AB                                   efgtoa@e 00AF  
                                 efgtoa@f 004B                                   efgtoa@g 00C4  
                                 efgtoa@h 00B9                                   efgtoa@i 00B7  
                                 efgtoa@l 00BD                                   efgtoa@m 00AD  
                                 efgtoa@n 00C2                                   efgtoa@p 00A2  
                                 efgtoa@t 00A4                                   efgtoa@u 00C8  
                                 efgtoa@w 00B1                       ?_LM75_setDeviceMode 0070  
                          ??_UART_TX_Init 0070                                   _sprintf 1C5D  
                                 clrloop0 1A06                  LM75_setOSPolarity@config 0073  
                    end_of_initialization 07FC                       ?_LM75_setFaultQueue 0070  
                                 floorf@e 003B                                   floorf@m 0037  
                                 floorf@u 003D                                   floorf@x 002D  
              ??_I2C_Master_RepeatedStart 0070                                   memcpy@d 0075  
                                 memcpy@n 0072                                   memcpy@s 0076  
                                 fputc@fp 0072                                   fputs@fp 0021  
                      _read_prec_or_width 1E90                      ??_LM75_setDeviceMode 0072  
                       __end_of_vfpfcnvrt 097B                                efgtoa@mode 00A9  
                              efgtoa@sign 00C1                       ?_read_prec_or_width 0076  
                                 psplit$0 130041                          vfpfcnvrt@convarg 0058  
                    ??_LM75_setFaultQueue 0072                              __pstringtext 1800  
                              ??_vfprintf 007E                                   strcpy@d 0075  
                          UART_Write@data 0070                               ___fladd@grs 007B  
                              ?_LM75_init 0070                                ?_LM75_read 0034  
                           ___xxtofl@sign 0078                      ??_read_prec_or_width 0078  
                             ___fldiv@grs 0027                               ___fldiv@rem 0020  
                      LM75_setConfig@data 0071                   __end_of_LM75_readConfig 1C5D  
                             ___flmul@grs 0029                                main@buffer 0190  
                   LM75_readConfig@config 0071                            __end_of___flge 1102  
                          __end_of___fleq 1E25                               vfpfcnvrt@ap 00CF  
                             vfpfcnvrt@cp 005D                               vfpfcnvrt@fp 00CC  
                          __end_of___wmul 1B91                            __end_of_efgtoa 07E7  
                          __end_of_floorf 12C5                            __end_of_memcpy 1B27  
                              floorf@F521 00E3                            __end_of_strcpy 1B48  
                     start_initialization 07E7                               __end_of_pad 1DD7  
                       pnum$text6_split_1 0041                         ??_I2C_Master_Init 0070  
                       ??_I2C_Master_Wait 0070                         ??_I2C_Master_Stop 0070  
                   __end_of___fpclassifyf 2000                  LM75_setDeviceMode@config 0073  
                             vfprintf@fmt 00D2                              toFloat@tempr 0028  
                                ??___flge 003D                                  ??___fleq 0078  
                                ??___wmul 0074         LM75_setHysteresisTemperature@data 004D  
                                ??_efgtoa 0050                                 __Umul8_16 1BDD  
                    __end_of_UART_TX_Init 1A8E                                  ?_I2C_ACK 0070  
                                ??_floorf 0031                                  ??_memcpy 0074  
                                ??_strcpy 0073                                 ___fladd@a 0074  
                               ___fladd@b 0070                                 ___fldiv@a 0070  
                               ___fldiv@b 0074                               ??_LM75_init 0070  
                             ??_LM75_read 0038                                 ___flmul@a 0024  
                               ___flmul@b 0020                                 ___flsub@a 0035  
                               ___flsub@b 0039                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK3 0190           ??_LM75_getHysteresisTemperature 004D  
                        ?_LM75_readConfig 0070                          _I2C_Master_Start 1A16  
                        _I2C_Master_Write 1A5C                                  ?___fladd 0070  
                                ?___fldiv 0070                                  ?___flneg 0070  
                                ?___flmul 0020                                  ?___flsub 0035  
                                ?___fltol 003F                                ?__Umul8_16 0070  
                    I2C_Master_Write@data 0070                                 __pstrings 19A0  
                                _I2C_NACK 1A36                             _UART_TX_Empty 1001  
         ??_LM75_setHysteresisTemperature 007E                                  ?_toFloat 0028  
                                ?_sprintf 00D5                         ??_UART_Write_Text 0073  
                                _LM75_set 1B48                            _LM75_setConfig 1AE8  
                          ___wmul@product 0074                                 clear_ram0 1A05  
                   __end_of_I2C_Read_Byte 1ABA             LM75_setOSTripTemperature@data 004D  
                               _vfpfcnvrt 0824                               __stringbase 19B2  
                          ?_UART_TX_Empty 0070                         ___wmul@multiplier 0070  
                         main@currentTemp 01D4                                vfpfcnvrt@c 005C  
                  __end_of_LM75_setConfig 1B06      LM75_setOSTripTemperature@temperature 0049  
              ?_LM75_getOSTripTemperature 0049                       LM75_read@regAddress 003E  
   __end_of_LM75_getHysteresisTemperature 1CF4             _LM75_getHysteresisTemperature 1CBD  
              ?_LM75_setOSTripTemperature 0049                                 memcpy@tmp 0074  
                              vfprintf@ap 00D4                                vfprintf@fp 00D0  
                             ??__Umul8_16 0072                 ?_I2C_Master_RepeatedStart 0070  
                              ?_vfpfcnvrt 00CC                        __end_of__stringtab 19B2  
                      ___fpclassifyf@F465 00E7                                sprintf@fmt 00D6  
                         _I2C_Master_Init 1A4F                                  ___xxtofl 1102  
                         _I2C_Master_Wait 1A42                           _I2C_Master_Stop 0003  
                                __ptext10 000C                                  __ptext11 1000  
                                __ptext20 13D4                                  __ptext12 1B06  
                                __ptext21 1BB7                                  __ptext13 1A8E  
                                __ptext30 1B48                                  __ptext22 1A6C  
                                __ptext14 11B6                                  __ptext31 1B91  
                                __ptext23 1001                                  __ptext15 1F73  
                                __ptext40 1E25                                  __ptext32 1ABA  
                                __ptext24 1A7C                                  __ptext16 0800  
                                __ptext41 1007                                  __ptext33 1AE8  
                                __ptext25 1D62                                  __ptext17 1A1F  
                                __ptext50 1A2A                                  __ptext42 1102  
                                __ptext34 1C2F                                  __ptext26 1AD1  
                                __ptext18 105E                                  __ptext51 1A42  
                                __ptext43 15A4                                  __ptext35 19FF  
                                __ptext27 1D2B                                  __ptext19 1DD7  
                                __ptext44 1AA3                                  __ptext36 1A4F  
                                __ptext28 097B                                  __ptext45 1A36  
                                __ptext37 1CF4                                  __ptext29 1BDD  
                                __ptext46 1A5C                                  __ptext38 1CBD  
                                __ptext47 0003                                  __ptext39 1EFD  
                                __ptext48 1A16                                  __ptext49 1A0D  
   __end_of_LM75_setHysteresisTemperature 1D62             _LM75_setHysteresisTemperature 1D2B  
                         ?_LM75_setConfig 0070           LM75_setDeviceMode@interruptMode 0072  
                            _UART_TX_Init 1A7C                                strcpy@dest 0070  
                     UART_Write_Text@text 0071                                 pnum$text6 0013  
       __end_of_LM75_getOSTripTemperature 1D2B         __end_of_LM75_setOSTripTemperature 1D99  
                                efgtoa@fp 0049                                  efgtoa@ne 00A0  
                                efgtoa@pp 00A8                                  efgtoa@ou 00B3  
                LM75_setFaultQueue@config 0073                                  _vfprintf 1C8C  
                         ??_UART_TX_Empty 0070                  __end_of_I2C_Master_Start 1A1F  
                __end_of_I2C_Master_Write 1A6C                                  memcpy@d1 0070  
                                memcpy@s1 0071                                 sprintf@ap 0062  
                               strcpy@src 0071                                 stringcode 19AA  
                             efgtoa@nmode 00AA                   __end_of_I2C_Master_Init 1A5C  
                 __end_of_I2C_Master_Wait 1A4F                   __end_of_I2C_Master_Stop 000C  
                             ??_vfpfcnvrt 0054                    __Umul8_16@multiplicand 0070  
                         _UART_Write_Text 1BB7                                  sprintf@f 0063  
                                sprintf@s 00D5                                  stringtab 19A0  
                              _UART_Write 1A6C          LM75_getOSTripTemperature@rawTemp 0051  
                           ___fladd@signs 0078                              LM75_read@LSB 003C  
                            LM75_read@MSB 003A                              ___fladd@aexp 0079  
                            ___fladd@bexp 007A                      __Umul8_16@multiplier 0078  
                            LM75_set@data 0071                         __Umul8_16@product 0074  
