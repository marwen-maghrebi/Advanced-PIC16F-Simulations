

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Nov 23 11:10:39 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    17                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57     0000                     
    58                           ; Generated 12/10/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F877A Definitions
    90                           ; 
    91                           ; SFR Addresses
    92     0004                     fsr             equ	4
    93     0004                     fsr0            equ	4
    94     0000                     indf            equ	0
    95     0000                     indf0           equ	0
    96     0002                     pc              equ	2
    97     0002                     pcl             equ	2
    98     000A                     pclath          equ	10
    99     0003                     status          equ	3
   100     0000                     INDF            equ	0	;# 
   101     0001                     TMR0            equ	1	;# 
   102     0002                     PCL             equ	2	;# 
   103     0003                     STATUS          equ	3	;# 
   104     0004                     FSR             equ	4	;# 
   105     0005                     PORTA           equ	5	;# 
   106     0006                     PORTB           equ	6	;# 
   107     0007                     PORTC           equ	7	;# 
   108     0008                     PORTD           equ	8	;# 
   109     0009                     PORTE           equ	9	;# 
   110     000A                     PCLATH          equ	10	;# 
   111     000B                     INTCON          equ	11	;# 
   112     000C                     PIR1            equ	12	;# 
   113     000D                     PIR2            equ	13	;# 
   114     000E                     TMR1            equ	14	;# 
   115     000E                     TMR1L           equ	14	;# 
   116     000F                     TMR1H           equ	15	;# 
   117     0010                     T1CON           equ	16	;# 
   118     0011                     TMR2            equ	17	;# 
   119     0012                     T2CON           equ	18	;# 
   120     0013                     SSPBUF          equ	19	;# 
   121     0014                     SSPCON          equ	20	;# 
   122     0015                     CCPR1           equ	21	;# 
   123     0015                     CCPR1L          equ	21	;# 
   124     0016                     CCPR1H          equ	22	;# 
   125     0017                     CCP1CON         equ	23	;# 
   126     0018                     RCSTA           equ	24	;# 
   127     0019                     TXREG           equ	25	;# 
   128     001A                     RCREG           equ	26	;# 
   129     001B                     CCPR2           equ	27	;# 
   130     001B                     CCPR2L          equ	27	;# 
   131     001C                     CCPR2H          equ	28	;# 
   132     001D                     CCP2CON         equ	29	;# 
   133     001E                     ADRESH          equ	30	;# 
   134     001F                     ADCON0          equ	31	;# 
   135     0081                     OPTION_REG      equ	129	;# 
   136     0085                     TRISA           equ	133	;# 
   137     0086                     TRISB           equ	134	;# 
   138     0087                     TRISC           equ	135	;# 
   139     0088                     TRISD           equ	136	;# 
   140     0089                     TRISE           equ	137	;# 
   141     008C                     PIE1            equ	140	;# 
   142     008D                     PIE2            equ	141	;# 
   143     008E                     PCON            equ	142	;# 
   144     0091                     SSPCON2         equ	145	;# 
   145     0092                     PR2             equ	146	;# 
   146     0093                     SSPADD          equ	147	;# 
   147     0094                     SSPSTAT         equ	148	;# 
   148     0098                     TXSTA           equ	152	;# 
   149     0099                     SPBRG           equ	153	;# 
   150     009C                     CMCON           equ	156	;# 
   151     009D                     CVRCON          equ	157	;# 
   152     009E                     ADRESL          equ	158	;# 
   153     009F                     ADCON1          equ	159	;# 
   154     010C                     EEDATA          equ	268	;# 
   155     010D                     EEADR           equ	269	;# 
   156     010E                     EEDATH          equ	270	;# 
   157     010F                     EEADRH          equ	271	;# 
   158     018C                     EECON1          equ	396	;# 
   159     018D                     EECON2          equ	397	;# 
   160     0000                     INDF            equ	0	;# 
   161     0001                     TMR0            equ	1	;# 
   162     0002                     PCL             equ	2	;# 
   163     0003                     STATUS          equ	3	;# 
   164     0004                     FSR             equ	4	;# 
   165     0005                     PORTA           equ	5	;# 
   166     0006                     PORTB           equ	6	;# 
   167     0007                     PORTC           equ	7	;# 
   168     0008                     PORTD           equ	8	;# 
   169     0009                     PORTE           equ	9	;# 
   170     000A                     PCLATH          equ	10	;# 
   171     000B                     INTCON          equ	11	;# 
   172     000C                     PIR1            equ	12	;# 
   173     000D                     PIR2            equ	13	;# 
   174     000E                     TMR1            equ	14	;# 
   175     000E                     TMR1L           equ	14	;# 
   176     000F                     TMR1H           equ	15	;# 
   177     0010                     T1CON           equ	16	;# 
   178     0011                     TMR2            equ	17	;# 
   179     0012                     T2CON           equ	18	;# 
   180     0013                     SSPBUF          equ	19	;# 
   181     0014                     SSPCON          equ	20	;# 
   182     0015                     CCPR1           equ	21	;# 
   183     0015                     CCPR1L          equ	21	;# 
   184     0016                     CCPR1H          equ	22	;# 
   185     0017                     CCP1CON         equ	23	;# 
   186     0018                     RCSTA           equ	24	;# 
   187     0019                     TXREG           equ	25	;# 
   188     001A                     RCREG           equ	26	;# 
   189     001B                     CCPR2           equ	27	;# 
   190     001B                     CCPR2L          equ	27	;# 
   191     001C                     CCPR2H          equ	28	;# 
   192     001D                     CCP2CON         equ	29	;# 
   193     001E                     ADRESH          equ	30	;# 
   194     001F                     ADCON0          equ	31	;# 
   195     0081                     OPTION_REG      equ	129	;# 
   196     0085                     TRISA           equ	133	;# 
   197     0086                     TRISB           equ	134	;# 
   198     0087                     TRISC           equ	135	;# 
   199     0088                     TRISD           equ	136	;# 
   200     0089                     TRISE           equ	137	;# 
   201     008C                     PIE1            equ	140	;# 
   202     008D                     PIE2            equ	141	;# 
   203     008E                     PCON            equ	142	;# 
   204     0091                     SSPCON2         equ	145	;# 
   205     0092                     PR2             equ	146	;# 
   206     0093                     SSPADD          equ	147	;# 
   207     0094                     SSPSTAT         equ	148	;# 
   208     0098                     TXSTA           equ	152	;# 
   209     0099                     SPBRG           equ	153	;# 
   210     009C                     CMCON           equ	156	;# 
   211     009D                     CVRCON          equ	157	;# 
   212     009E                     ADRESL          equ	158	;# 
   213     009F                     ADCON1          equ	159	;# 
   214     010C                     EEDATA          equ	268	;# 
   215     010D                     EEADR           equ	269	;# 
   216     010E                     EEDATH          equ	270	;# 
   217     010F                     EEADRH          equ	271	;# 
   218     018C                     EECON1          equ	396	;# 
   219     018D                     EECON2          equ	397	;# 
   220     0000                     INDF            equ	0	;# 
   221     0001                     TMR0            equ	1	;# 
   222     0002                     PCL             equ	2	;# 
   223     0003                     STATUS          equ	3	;# 
   224     0004                     FSR             equ	4	;# 
   225     0005                     PORTA           equ	5	;# 
   226     0006                     PORTB           equ	6	;# 
   227     0007                     PORTC           equ	7	;# 
   228     0008                     PORTD           equ	8	;# 
   229     0009                     PORTE           equ	9	;# 
   230     000A                     PCLATH          equ	10	;# 
   231     000B                     INTCON          equ	11	;# 
   232     000C                     PIR1            equ	12	;# 
   233     000D                     PIR2            equ	13	;# 
   234     000E                     TMR1            equ	14	;# 
   235     000E                     TMR1L           equ	14	;# 
   236     000F                     TMR1H           equ	15	;# 
   237     0010                     T1CON           equ	16	;# 
   238     0011                     TMR2            equ	17	;# 
   239     0012                     T2CON           equ	18	;# 
   240     0013                     SSPBUF          equ	19	;# 
   241     0014                     SSPCON          equ	20	;# 
   242     0015                     CCPR1           equ	21	;# 
   243     0015                     CCPR1L          equ	21	;# 
   244     0016                     CCPR1H          equ	22	;# 
   245     0017                     CCP1CON         equ	23	;# 
   246     0018                     RCSTA           equ	24	;# 
   247     0019                     TXREG           equ	25	;# 
   248     001A                     RCREG           equ	26	;# 
   249     001B                     CCPR2           equ	27	;# 
   250     001B                     CCPR2L          equ	27	;# 
   251     001C                     CCPR2H          equ	28	;# 
   252     001D                     CCP2CON         equ	29	;# 
   253     001E                     ADRESH          equ	30	;# 
   254     001F                     ADCON0          equ	31	;# 
   255     0081                     OPTION_REG      equ	129	;# 
   256     0085                     TRISA           equ	133	;# 
   257     0086                     TRISB           equ	134	;# 
   258     0087                     TRISC           equ	135	;# 
   259     0088                     TRISD           equ	136	;# 
   260     0089                     TRISE           equ	137	;# 
   261     008C                     PIE1            equ	140	;# 
   262     008D                     PIE2            equ	141	;# 
   263     008E                     PCON            equ	142	;# 
   264     0091                     SSPCON2         equ	145	;# 
   265     0092                     PR2             equ	146	;# 
   266     0093                     SSPADD          equ	147	;# 
   267     0094                     SSPSTAT         equ	148	;# 
   268     0098                     TXSTA           equ	152	;# 
   269     0099                     SPBRG           equ	153	;# 
   270     009C                     CMCON           equ	156	;# 
   271     009D                     CVRCON          equ	157	;# 
   272     009E                     ADRESL          equ	158	;# 
   273     009F                     ADCON1          equ	159	;# 
   274     010C                     EEDATA          equ	268	;# 
   275     010D                     EEADR           equ	269	;# 
   276     010E                     EEDATH          equ	270	;# 
   277     010F                     EEADRH          equ	271	;# 
   278     018C                     EECON1          equ	396	;# 
   279     018D                     EECON2          equ	397	;# 
   280     0000                     INDF            equ	0	;# 
   281     0001                     TMR0            equ	1	;# 
   282     0002                     PCL             equ	2	;# 
   283     0003                     STATUS          equ	3	;# 
   284     0004                     FSR             equ	4	;# 
   285     0005                     PORTA           equ	5	;# 
   286     0006                     PORTB           equ	6	;# 
   287     0007                     PORTC           equ	7	;# 
   288     0008                     PORTD           equ	8	;# 
   289     0009                     PORTE           equ	9	;# 
   290     000A                     PCLATH          equ	10	;# 
   291     000B                     INTCON          equ	11	;# 
   292     000C                     PIR1            equ	12	;# 
   293     000D                     PIR2            equ	13	;# 
   294     000E                     TMR1            equ	14	;# 
   295     000E                     TMR1L           equ	14	;# 
   296     000F                     TMR1H           equ	15	;# 
   297     0010                     T1CON           equ	16	;# 
   298     0011                     TMR2            equ	17	;# 
   299     0012                     T2CON           equ	18	;# 
   300     0013                     SSPBUF          equ	19	;# 
   301     0014                     SSPCON          equ	20	;# 
   302     0015                     CCPR1           equ	21	;# 
   303     0015                     CCPR1L          equ	21	;# 
   304     0016                     CCPR1H          equ	22	;# 
   305     0017                     CCP1CON         equ	23	;# 
   306     0018                     RCSTA           equ	24	;# 
   307     0019                     TXREG           equ	25	;# 
   308     001A                     RCREG           equ	26	;# 
   309     001B                     CCPR2           equ	27	;# 
   310     001B                     CCPR2L          equ	27	;# 
   311     001C                     CCPR2H          equ	28	;# 
   312     001D                     CCP2CON         equ	29	;# 
   313     001E                     ADRESH          equ	30	;# 
   314     001F                     ADCON0          equ	31	;# 
   315     0081                     OPTION_REG      equ	129	;# 
   316     0085                     TRISA           equ	133	;# 
   317     0086                     TRISB           equ	134	;# 
   318     0087                     TRISC           equ	135	;# 
   319     0088                     TRISD           equ	136	;# 
   320     0089                     TRISE           equ	137	;# 
   321     008C                     PIE1            equ	140	;# 
   322     008D                     PIE2            equ	141	;# 
   323     008E                     PCON            equ	142	;# 
   324     0091                     SSPCON2         equ	145	;# 
   325     0092                     PR2             equ	146	;# 
   326     0093                     SSPADD          equ	147	;# 
   327     0094                     SSPSTAT         equ	148	;# 
   328     0098                     TXSTA           equ	152	;# 
   329     0099                     SPBRG           equ	153	;# 
   330     009C                     CMCON           equ	156	;# 
   331     009D                     CVRCON          equ	157	;# 
   332     009E                     ADRESL          equ	158	;# 
   333     009F                     ADCON1          equ	159	;# 
   334     010C                     EEDATA          equ	268	;# 
   335     010D                     EEADR           equ	269	;# 
   336     010E                     EEDATH          equ	270	;# 
   337     010F                     EEADRH          equ	271	;# 
   338     018C                     EECON1          equ	396	;# 
   339     018D                     EECON2          equ	397	;# 
   340                           
   341                           	psect	idataBANK1
   342     0ECC                     __pidataBANK1:
   343                           
   344                           ;initializer for LCD_SetCursor@F1080
   345     0ECC  3480               	retlw	128
   346     0ECD  34C0               	retlw	192
   347     0ECE  3494               	retlw	148
   348     0ECF  34D4               	retlw	212
   349                           
   350                           ;initializer for _calendar
   351     0ED0  3444               	retlw	68
   352     0ED1  3441               	retlw	65
   353     0ED2  3454               	retlw	84
   354     0ED3  3445               	retlw	69
   355     0ED4  343A               	retlw	58
   356     0ED5  3420               	retlw	32
   357     0ED6  3420               	retlw	32
   358     0ED7  342F               	retlw	47
   359     0ED8  3420               	retlw	32
   360     0ED9  3420               	retlw	32
   361     0EDA  342F               	retlw	47
   362     0EDB  3432               	retlw	50
   363     0EDC  3430               	retlw	48
   364     0EDD  3420               	retlw	32
   365     0EDE  3420               	retlw	32
   366     0EDF  3400               	retlw	0
   367                           
   368                           ;initializer for _time
   369     0EE0  3454               	retlw	84
   370     0EE1  3449               	retlw	73
   371     0EE2  344D               	retlw	77
   372     0EE3  3445               	retlw	69
   373     0EE4  343A               	retlw	58
   374     0EE5  3420               	retlw	32
   375     0EE6  3420               	retlw	32
   376     0EE7  343A               	retlw	58
   377     0EE8  3420               	retlw	32
   378     0EE9  3420               	retlw	32
   379     0EEA  343A               	retlw	58
   380     0EEB  3420               	retlw	32
   381     0EEC  3420               	retlw	32
   382     0EED  3400               	retlw	0
   383                           
   384                           	psect	nvBANK0
   385     006E                     __pnvBANK0:
   386     006E                     __displaymode:
   387     006E                     	ds	1
   388     006F                     __displaycontrol:
   389     006F                     	ds	1
   390                           
   391                           	psect	nvBANK1
   392     00E9                     __pnvBANK1:
   393     00E9                     __lcd_addr:
   394     00E9                     	ds	1
   395     0006                     _PORTBbits      set	6
   396     0013                     _SSPBUF         set	19
   397     0014                     _SSPCON         set	20
   398     0063                     _SSPIF          set	99
   399     0081                     _OPTION_REGbits set	129
   400     0086                     _TRISB          set	134
   401     0093                     _SSPADD         set	147
   402     0094                     _SSPSTAT        set	148
   403     0091                     _SSPCON2        set	145
   404     048B                     _RCEN           set	1163
   405     048E                     _ACKSTAT        set	1166
   406     048C                     _ACKEN          set	1164
   407     048D                     _ACKDT          set	1165
   408     048A                     _PEN            set	1162
   409     0489                     _RSEN           set	1161
   410     0488                     _SEN            set	1160
   411     043C                     _TRISC4         set	1084
   412     043B                     _TRISC3         set	1083
   413                           
   414                           	psect	strings
   415     0800                     __pstrings:
   416     0800                     stringtab:
   417     0800                     __stringtab:
   418                           
   419                           ;	String table - string pointers are 1 byte each
   420     0800  1BFF               	btfsc	btemp+1,7
   421     0801  280A               	ljmp	stringcode
   422     0802  1383               	bcf	3,7
   423     0803  187F               	btfsc	btemp+1,0
   424     0804  1783               	bsf	3,7
   425     0805  0800               	movf	0,w
   426     0806  0A84               	incf	4,f
   427     0807  1903               	skipnz
   428     0808  0AFF               	incf	btemp+1,f
   429     0809  0008               	return
   430     080A                     stringcode:
   431     080A                     stringdir:
   432     080A  3008               	movlw	high stringdir
   433     080B  008A               	movwf	10
   434     080C  0804               	movf	4,w
   435     080D  0A84               	incf	4,f
   436     080E  0782               	addwf	2,f
   437     080F                     __stringbase:
   438     080F  3400               	retlw	0
   439     0810                     __end_of__stringtab:
   440     0810                     STR_1:
   441     0810  3425               	retlw	37	;'%'
   442     0811  3430               	retlw	48	;'0'
   443     0812  3432               	retlw	50	;'2'
   444     0813  3475               	retlw	117	;'u'
   445     0814  3400               	retlw	0
   446     0815                     STR_2:
   447     0815  3420               	retlw	32	;' '
   448     0816  3420               	retlw	32	;' '
   449     0817  3400               	retlw	0
   450     0810                     STR_3           equ	STR_1
   451                           
   452                           	psect	cinit
   453     07DE                     start_initialization:	
   454                           ; #config settings
   455                           
   456     07DE                     __initialization:
   457                           
   458                           ; Initialize objects allocated to BANK1
   459     07DE  1383               	bcf	3,7	;select IRP bank0
   460     07DF  30E9               	movlw	low (__pdataBANK1+34)
   461     07E0  00FD               	movwf	btemp+-1
   462     07E1  300E               	movlw	high __pidataBANK1
   463     07E2  00FE               	movwf	btemp
   464     07E3  30CC               	movlw	low __pidataBANK1
   465     07E4  00FF               	movwf	btemp+1
   466     07E5  30C7               	movlw	low __pdataBANK1
   467     07E6  0084               	movwf	4
   468     07E7  120A  118A  2007  120A  118A  	fcall	init_ram0
   469                           
   470                           ; Clear objects allocated to BANK1
   471     07EC  30A0               	movlw	low __pbssBANK1
   472     07ED  0084               	movwf	4
   473     07EE  30C7               	movlw	low (__pbssBANK1+39)
   474     07EF  120A  158A  25C8  120A  118A  	fcall	clear_ram0
   475                           
   476                           ; Clear objects allocated to BANK0
   477     07F4  3066               	movlw	low __pbssBANK0
   478     07F5  0084               	movwf	4
   479     07F6  306E               	movlw	low (__pbssBANK0+8)
   480     07F7  120A  158A  25C8  120A  118A  	fcall	clear_ram0
   481     07FC                     end_of_initialization:	
   482                           ;End of C runtime variable initialization code
   483                           
   484     07FC                     __end_of__initialization:
   485     07FC  0183               	clrf	3
   486     07FD  120A  118A  2BBF   	ljmp	_main	;jump to C main() function
   487                           
   488                           	psect	bssBANK0
   489     0066                     __pbssBANK0:
   490     0066                     _flags:
   491     0066                     	ds	1
   492     0067                     _year:
   493     0067                     	ds	1
   494     0068                     _month:
   495     0068                     	ds	1
   496     0069                     _date:
   497     0069                     	ds	1
   498     006A                     _hour:
   499     006A                     	ds	1
   500     006B                     _minute:
   501     006B                     	ds	1
   502     006C                     _second:
   503     006C                     	ds	1
   504     006D                     _i:
   505     006D                     	ds	1
   506                           
   507                           	psect	bssBANK1
   508     00A0                     __pbssBANK1:
   509     00A0                     _width:
   510     00A0                     	ds	2
   511     00A2                     _prec:
   512     00A2                     	ds	2
   513     00A4                     __currline:
   514     00A4                     	ds	1
   515     00A5                     __numlines:
   516     00A5                     	ds	1
   517     00A6                     __initialized:
   518     00A6                     	ds	1
   519     00A7                     _dbuf:
   520     00A7                     	ds	32
   521                           
   522                           	psect	dataBANK1
   523     00C7                     __pdataBANK1:
   524     00C7                     LCD_SetCursor@F1080:
   525     00C7                     	ds	4
   526     00CB                     _calendar:
   527     00CB                     	ds	16
   528     00DB                     _time:
   529     00DB                     	ds	14
   530                           
   531                           	psect	inittext
   532     0003                     init_fetch0:	
   533                           ;	Called with low address in FSR and high address in W
   534                           
   535     0003  087E               	movf	btemp,w
   536     0004  008A               	movwf	10
   537     0005  087F               	movf	btemp+1,w
   538     0006  0082               	movwf	2
   539     0007                     init_ram0:	
   540                           ;Called with:
   541                           ;	high address of idata address in btemp 
   542                           ;	low address of idata address in btemp+1 
   543                           ;	low address of data in FSR
   544                           ;	high address + 1 of data in btemp-1
   545                           
   546     0007  120A  118A  2003  120A  118A  	fcall	init_fetch0
   547     000C  0080               	movwf	0
   548     000D  0A84               	incf	4,f
   549     000E  0804               	movf	4,w
   550     000F  067D               	xorwf	btemp+-1,w
   551     0010  1903               	btfsc	3,2
   552     0011  3400               	retlw	0
   553     0012  0AFF               	incf	btemp+1,f
   554     0013  1903               	btfsc	3,2
   555     0014  0AFE               	incf	btemp,f
   556     0015  2807               	goto	init_ram0
   557                           
   558                           	psect	clrtext
   559     0DC8                     clear_ram0:	
   560                           ;	Called with FSR containing the base address, and
   561                           ;	W with the last address+1
   562                           
   563     0DC8  0064               	clrwdt	;clear the watchdog before getting into this loop
   564     0DC9                     clrloop0:
   565     0DC9  0180               	clrf	0	;clear RAM location pointed to by FSR
   566     0DCA  0A84               	incf	4,f	;increment pointer
   567     0DCB  0604               	xorwf	4,w	;XOR with final address
   568     0DCC  1903               	btfsc	3,2	;have we reached the end yet?
   569     0DCD  3400               	retlw	0	;all done for this memory range, return
   570     0DCE  0604               	xorwf	4,w	;XOR again to restore value
   571     0DCF  2DC9               	goto	clrloop0	;do the next byte
   572                           
   573                           	psect	cstackCOMMON
   574     0070                     __pcstackCOMMON:
   575     0070                     ?_LCD_Clear:
   576     0070                     ?_putch:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_I2C_Master_Init:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_I2C_Master_Wait:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_I2C_Master_Start:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_I2C_Master_RepeatedStart:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_I2C_Master_Stop:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?_I2C_ACK:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_I2C_NACK:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_I2C_Master_Write:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_I2C_Read_Byte:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_LCD_Command:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_LCD_Print_Char:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_LCD_Init:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_bcd_to_decimal:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_decimal_to_bcd:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_DS3231_display:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_blink:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_DS3231_write:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_DS3231_read:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_main:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?___bmul:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_fputc:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?___wmul:	
   643                           ; 2 bytes @ 0x0
   644                           
   645     0070                     ?___awdiv:	
   646                           ; 2 bytes @ 0x0
   647                           
   648     0070                     ?___awmod:	
   649                           ; 2 bytes @ 0x0
   650                           
   651     0070                     ?___lwdiv:	
   652                           ; 2 bytes @ 0x0
   653                           
   654     0070                     ?___lwmod:	
   655                           ; 2 bytes @ 0x0
   656                           
   657     0070                     I2C_Master_Write@data:	
   658                           ; 2 bytes @ 0x0
   659                           
   660     0070                     ___bmul@multiplicand:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     putch@c:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ___wmul@multiplier:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ___awdiv@divisor:	
   670                           ; 2 bytes @ 0x0
   671                           
   672     0070                     ___awmod@divisor:	
   673                           ; 2 bytes @ 0x0
   674                           
   675     0070                     ___lwdiv@divisor:	
   676                           ; 2 bytes @ 0x0
   677                           
   678     0070                     ___lwmod@divisor:	
   679                           ; 2 bytes @ 0x0
   680                           
   681     0070                     fputc@c:	
   682                           ; 2 bytes @ 0x0
   683                           
   684     0070                     ??_putch:	
   685                           ; 2 bytes @ 0x0
   686                           
   687     0070                     ??_I2C_Master_Init:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ??_I2C_Master_Wait:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ??_I2C_Master_Start:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ??_I2C_Master_RepeatedStart:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ??_I2C_Master_Stop:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ??_I2C_ACK:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ??_I2C_NACK:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0070                     ??_I2C_Master_Write:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0070                     ??_I2C_Read_Byte:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     ??_blink:	
   715                           ; 1 bytes @ 0x0
   716                           
   717                           
   718                           ; 1 bytes @ 0x0
   719     0070                     	ds	1
   720     0071                     ?_LCD_Send:
   721     0071                     LCD_Send@mode:	
   722                           ; 1 bytes @ 0x1
   723                           
   724     0071                     ___bmul@product:	
   725                           ; 1 bytes @ 0x1
   726                           
   727     0071                     ??_DS3231_read:	
   728                           ; 1 bytes @ 0x1
   729                           
   730     0071                     ??___bmul:	
   731                           ; 1 bytes @ 0x1
   732                           
   733                           
   734                           ; 1 bytes @ 0x1
   735     0071                     	ds	1
   736     0072                     blink@j:
   737     0072                     ___bmul@multiplier:	
   738                           ; 1 bytes @ 0x2
   739                           
   740     0072                     ___wmul@multiplicand:	
   741                           ; 1 bytes @ 0x2
   742                           
   743     0072                     ___awdiv@dividend:	
   744                           ; 2 bytes @ 0x2
   745                           
   746     0072                     ___awmod@dividend:	
   747                           ; 2 bytes @ 0x2
   748                           
   749     0072                     ___lwdiv@dividend:	
   750                           ; 2 bytes @ 0x2
   751                           
   752     0072                     ___lwmod@dividend:	
   753                           ; 2 bytes @ 0x2
   754                           
   755     0072                     fputc@fp:	
   756                           ; 2 bytes @ 0x2
   757                           
   758     0072                     ??_LCD_Send:	
   759                           ; 2 bytes @ 0x2
   760                           
   761                           
   762                           ; 1 bytes @ 0x2
   763     0072                     	ds	1
   764     0073                     LCD_Send@data:
   765     0073                     ??_bcd_to_decimal:	
   766                           ; 1 bytes @ 0x3
   767                           
   768                           
   769                           ; 1 bytes @ 0x3
   770     0073                     	ds	1
   771     0074                     LCD_Command@cmd:
   772     0074                     LCD_Print_Char@c:	
   773                           ; 1 bytes @ 0x4
   774                           
   775     0074                     ___awdiv@counter:	
   776                           ; 1 bytes @ 0x4
   777                           
   778     0074                     ___awmod@counter:	
   779                           ; 1 bytes @ 0x4
   780                           
   781     0074                     ___lwmod@counter:	
   782                           ; 1 bytes @ 0x4
   783                           
   784     0074                     ___wmul@product:	
   785                           ; 1 bytes @ 0x4
   786                           
   787     0074                     ___lwdiv@quotient:	
   788                           ; 2 bytes @ 0x4
   789                           
   790     0074                     ??_fputc:	
   791                           ; 2 bytes @ 0x4
   792                           
   793     0074                     ??_LCD_Command:	
   794                           ; 1 bytes @ 0x4
   795                           
   796     0074                     ??_LCD_Print_Char:	
   797                           ; 1 bytes @ 0x4
   798                           
   799     0074                     ??___wmul:	
   800                           ; 1 bytes @ 0x4
   801                           
   802     0074                     ??___awdiv:	
   803                           ; 1 bytes @ 0x4
   804                           
   805     0074                     ??___awmod:	
   806                           ; 1 bytes @ 0x4
   807                           
   808     0074                     ??___lwdiv:	
   809                           ; 1 bytes @ 0x4
   810                           
   811     0074                     ??___lwmod:	
   812                           ; 1 bytes @ 0x4
   813                           
   814                           
   815                           ; 1 bytes @ 0x4
   816     0074                     	ds	1
   817     0075                     ?_LCD_SetCursor:
   818     0075                     ?_LCD_Print_String:	
   819                           ; 1 bytes @ 0x5
   820                           
   821     0075                     LCD_SetCursor@row:	
   822                           ; 1 bytes @ 0x5
   823                           
   824     0075                     bcd_to_decimal@bcd:	
   825                           ; 1 bytes @ 0x5
   826                           
   827     0075                     ___awdiv@sign:	
   828                           ; 1 bytes @ 0x5
   829                           
   830     0075                     ___awmod@sign:	
   831                           ; 1 bytes @ 0x5
   832                           
   833     0075                     LCD_Print_String@str:	
   834                           ; 1 bytes @ 0x5
   835                           
   836     0075                     ??_LCD_Clear:	
   837                           ; 2 bytes @ 0x5
   838                           
   839                           
   840                           ; 1 bytes @ 0x5
   841     0075                     	ds	1
   842     0076                     ?_read_prec_or_width:
   843     0076                     ___lwdiv@counter:	
   844                           ; 2 bytes @ 0x6
   845                           
   846     0076                     read_prec_or_width@fmt:	
   847                           ; 1 bytes @ 0x6
   848                           
   849     0076                     ___awdiv@quotient:	
   850                           ; 1 bytes @ 0x6
   851                           
   852     0076                     LCD_SetCursor@row_offsets:	
   853                           ; 2 bytes @ 0x6
   854                           
   855     0076                     ??_LCD_SetCursor:	
   856                           ; 4 bytes @ 0x6
   857                           
   858                           
   859                           ; 1 bytes @ 0x6
   860     0076                     	ds	1
   861     0077                     read_prec_or_width@ap:
   862     0077                     ??_LCD_Init:	
   863                           ; 1 bytes @ 0x7
   864                           
   865     0077                     ??_LCD_Print_String:	
   866                           ; 1 bytes @ 0x7
   867                           
   868                           
   869                           ; 1 bytes @ 0x7
   870     0077                     	ds	1
   871     0078                     read_prec_or_width@c:
   872     0078                     ??_decimal_to_bcd:	
   873                           ; 1 bytes @ 0x8
   874                           
   875     0078                     ??_read_prec_or_width:	
   876                           ; 1 bytes @ 0x8
   877                           
   878                           
   879                           ; 1 bytes @ 0x8
   880     0078                     	ds	1
   881     0079                     read_prec_or_width@n:
   882                           
   883                           ; 2 bytes @ 0x9
   884     0079                     	ds	1
   885     007A                     LCD_Init@lcd_addr:
   886     007A                     LCD_SetCursor@col:	
   887                           ; 1 bytes @ 0xA
   888                           
   889     007A                     decimal_to_bcd@tens:	
   890                           ; 1 bytes @ 0xA
   891                           
   892                           
   893                           ; 1 bytes @ 0xA
   894     007A                     	ds	1
   895     007B                     decimal_to_bcd@ones:
   896     007B                     ??_DS3231_display:	
   897                           ; 1 bytes @ 0xB
   898                           
   899                           
   900                           ; 1 bytes @ 0xB
   901     007B                     	ds	1
   902     007C                     decimal_to_bcd@decimal:
   903                           
   904                           ; 1 bytes @ 0xC
   905     007C                     	ds	1
   906     007D                     ??_DS3231_write:
   907     007D                     ??_pad:	
   908                           ; 1 bytes @ 0xD
   909                           
   910                           
   911                           ; 1 bytes @ 0xD
   912     007D                     	ds	1
   913     007E                     ??_vfprintf:
   914     007E                     ??_utoa:	
   915                           ; 1 bytes @ 0xE
   916                           
   917                           
   918                           	psect	cstackBANK0
   919     0020                     __pcstackBANK0:	
   920                           ; 1 bytes @ 0xE
   921                           
   922     0020                     ?_fputs:
   923     0020                     fputs@s:	
   924                           ; 2 bytes @ 0x0
   925                           
   926                           
   927                           ; 1 bytes @ 0x0
   928     0020                     	ds	1
   929     0021                     fputs@fp:
   930                           
   931                           ; 2 bytes @ 0x1
   932     0021                     	ds	2
   933     0023                     ??_fputs:
   934                           
   935                           ; 1 bytes @ 0x3
   936     0023                     	ds	2
   937     0025                     fputs@c:
   938                           
   939                           ; 1 bytes @ 0x5
   940     0025                     	ds	1
   941     0026                     fputs@i:
   942                           
   943                           ; 2 bytes @ 0x6
   944     0026                     	ds	2
   945     0028                     ?_pad:
   946     0028                     pad@fp:	
   947                           ; 1 bytes @ 0x8
   948                           
   949                           
   950                           ; 2 bytes @ 0x8
   951     0028                     	ds	2
   952     002A                     pad@buf:
   953                           
   954                           ; 1 bytes @ 0xA
   955     002A                     	ds	1
   956     002B                     pad@p:
   957                           
   958                           ; 2 bytes @ 0xB
   959     002B                     	ds	2
   960     002D                     pad@i:
   961                           
   962                           ; 2 bytes @ 0xD
   963     002D                     	ds	2
   964     002F                     ?_utoa:
   965     002F                     utoa@fp:	
   966                           ; 1 bytes @ 0xF
   967                           
   968                           
   969                           ; 2 bytes @ 0xF
   970     002F                     	ds	2
   971     0031                     utoa@d:
   972                           
   973                           ; 2 bytes @ 0x11
   974     0031                     	ds	2
   975     0033                     utoa@p:
   976                           
   977                           ; 1 bytes @ 0x13
   978     0033                     	ds	1
   979     0034                     utoa@w:
   980                           
   981                           ; 2 bytes @ 0x14
   982     0034                     	ds	2
   983     0036                     utoa@i:
   984                           
   985                           ; 2 bytes @ 0x16
   986     0036                     	ds	2
   987     0038                     ?_vfpfcnvrt:
   988     0038                     vfpfcnvrt@fp:	
   989                           ; 1 bytes @ 0x18
   990                           
   991                           
   992                           ; 2 bytes @ 0x18
   993     0038                     	ds	2
   994     003A                     vfpfcnvrt@fmt:
   995                           
   996                           ; 1 bytes @ 0x1A
   997     003A                     	ds	1
   998     003B                     vfpfcnvrt@ap:
   999                           
  1000                           ; 1 bytes @ 0x1B
  1001     003B                     	ds	1
  1002     003C                     ??_vfpfcnvrt:
  1003                           
  1004                           ; 1 bytes @ 0x1C
  1005     003C                     	ds	2
  1006     003E                     vfpfcnvrt@convarg:
  1007                           
  1008                           ; 4 bytes @ 0x1E
  1009     003E                     	ds	4
  1010     0042                     vfpfcnvrt@done:
  1011                           
  1012                           ; 1 bytes @ 0x22
  1013     0042                     	ds	1
  1014     0043                     vfpfcnvrt@cp:
  1015                           
  1016                           ; 1 bytes @ 0x23
  1017     0043                     	ds	1
  1018     0044                     ?_vfprintf:
  1019     0044                     vfprintf@fp:	
  1020                           ; 2 bytes @ 0x24
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x24
  1024     0044                     	ds	2
  1025     0046                     vfprintf@fmt:
  1026                           
  1027                           ; 1 bytes @ 0x26
  1028     0046                     	ds	1
  1029     0047                     vfprintf@ap:
  1030                           
  1031                           ; 1 bytes @ 0x27
  1032     0047                     	ds	1
  1033     0048                     vfprintf@cfmt:
  1034                           
  1035                           ; 1 bytes @ 0x28
  1036     0048                     	ds	1
  1037     0049                     ?_sprintf:
  1038     0049                     sprintf@s:	
  1039                           ; 2 bytes @ 0x29
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x29
  1043     0049                     	ds	1
  1044     004A                     sprintf@fmt:
  1045                           
  1046                           ; 1 bytes @ 0x2A
  1047     004A                     	ds	3
  1048     004D                     ??_sprintf:
  1049                           
  1050                           ; 1 bytes @ 0x2D
  1051     004D                     	ds	1
  1052     004E                     sprintf@ap:
  1053                           
  1054                           ; 1 bytes @ 0x2E
  1055     004E                     	ds	1
  1056     004F                     sprintf@f:
  1057                           
  1058                           ; 11 bytes @ 0x2F
  1059     004F                     	ds	11
  1060     005A                     ?_edit:
  1061     005A                     edit@xx:	
  1062                           ; 1 bytes @ 0x3A
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x3A
  1066     005A                     	ds	1
  1067     005B                     edit@yy:
  1068                           
  1069                           ; 1 bytes @ 0x3B
  1070     005B                     	ds	1
  1071     005C                     ??_edit:
  1072                           
  1073                           ; 1 bytes @ 0x3C
  1074     005C                     	ds	3
  1075     005F                     edit@temp:
  1076                           
  1077                           ; 3 bytes @ 0x3F
  1078     005F                     	ds	3
  1079     0062                     edit@parameter:
  1080                           
  1081                           ; 1 bytes @ 0x42
  1082     0062                     	ds	1
  1083     0063                     ??_main:
  1084                           
  1085                           ; 1 bytes @ 0x43
  1086     0063                     	ds	3
  1087                           
  1088                           	psect	maintext
  1089     03BF                     __pmaintext:	
  1090 ;;
  1091 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1092 ;;
  1093 ;; *************** function _main *****************
  1094 ;; Defined at:
  1095 ;;		line 164 in file "main.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : B00/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0
  1111 ;;      Temps:          0       3       0       0       0
  1112 ;;      Totals:         0       3       0       0       0
  1113 ;;Total ram usage:        3 bytes
  1114 ;; Hardware stack levels required when called: 9
  1115 ;; This function calls:
  1116 ;;		_DS3231_display
  1117 ;;		_DS3231_read
  1118 ;;		_DS3231_write
  1119 ;;		_I2C_Master_Init
  1120 ;;		_LCD_Clear
  1121 ;;		_LCD_Init
  1122 ;;		_edit
  1123 ;; This function is called by:
  1124 ;;		Startup code after reset
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128     03BF                     _main:	
  1129                           ;psect for function _main
  1130                           
  1131     03BF                     l2124:	
  1132                           ;incstack = 0
  1133 ;; hardware stack exceeded
  1134                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1135                           
  1136                           
  1137                           ;main.c: 166:     TRISB = 0xFF;
  1138     03BF  30FF               	movlw	255
  1139     03C0  1683               	bsf	3,5	;RP0=1, select bank1
  1140     03C1  1303               	bcf	3,6	;RP1=0, select bank1
  1141     03C2  0086               	movwf	6	;volatile
  1142                           
  1143                           ;main.c: 167:     OPTION_REGbits.nRBPU = 0;
  1144     03C3  1381               	bcf	1,7	;volatile
  1145     03C4                     l2126:
  1146                           
  1147                           ;main.c: 170:     I2C_Master_Init();
  1148     03C4  120A  158A  2624  120A  118A  	fcall	_I2C_Master_Init
  1149     03C9                     l2128:
  1150                           
  1151                           ;main.c: 171:     LCD_Init(0x7C);
  1152     03C9  307C               	movlw	124
  1153     03CA  120A  118A  2254  120A  118A  	fcall	_LCD_Init
  1154     03CF                     l2130:
  1155                           
  1156                           ;main.c: 172:     LCD_Clear();
  1157     03CF  120A  158A  2641  120A  118A  	fcall	_LCD_Clear
  1158     03D4                     l2132:
  1159                           
  1160                           ;main.c: 175:         if(!PORTBbits.RB0) {
  1161     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1162     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1163     03D6  1806               	btfsc	6,0	;volatile
  1164     03D7  2BD9               	goto	u1741
  1165     03D8  2BDA               	goto	u1740
  1166     03D9                     u1741:
  1167     03D9  2C2E               	goto	l2150
  1168     03DA                     u1740:
  1169     03DA                     l2134:
  1170                           
  1171                           ;main.c: 176:             i = 0;
  1172     03DA  01ED               	clrf	_i
  1173     03DB                     l2136:
  1174                           
  1175                           ;main.c: 177:             hour = edit(hour, 5, 0);
  1176     03DB  3005               	movlw	5
  1177     03DC  00DA               	movwf	edit@xx
  1178     03DD  01DB               	clrf	edit@yy
  1179     03DE  086A               	movf	_hour,w
  1180     03DF  120A  118A  25A5  120A  118A  	fcall	_edit
  1181     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1182     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1183     03E6  00EA               	movwf	_hour
  1184     03E7                     l2138:
  1185                           
  1186                           ;main.c: 178:             minute = edit(minute, 8, 0);
  1187     03E7  3008               	movlw	8
  1188     03E8  00DA               	movwf	edit@xx
  1189     03E9  01DB               	clrf	edit@yy
  1190     03EA  086B               	movf	_minute,w
  1191     03EB  120A  118A  25A5  120A  118A  	fcall	_edit
  1192     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1193     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1194     03F2  00EB               	movwf	_minute
  1195     03F3                     l2140:
  1196                           
  1197                           ;main.c: 179:             date = edit(date, 5, 1);
  1198     03F3  3005               	movlw	5
  1199     03F4  00DA               	movwf	edit@xx
  1200     03F5  01DB               	clrf	edit@yy
  1201     03F6  0ADB               	incf	edit@yy,f
  1202     03F7  0869               	movf	_date,w
  1203     03F8  120A  118A  25A5  120A  118A  	fcall	_edit
  1204     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1205     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1206     03FF  00E9               	movwf	_date
  1207     0400                     l2142:
  1208                           
  1209                           ;main.c: 180:             month = edit(month, 8, 1);
  1210     0400  3008               	movlw	8
  1211     0401  00DA               	movwf	edit@xx
  1212     0402  01DB               	clrf	edit@yy
  1213     0403  0ADB               	incf	edit@yy,f
  1214     0404  0868               	movf	_month,w
  1215     0405  120A  118A  25A5  120A  118A  	fcall	_edit
  1216     040A  1283               	bcf	3,5	;RP0=0, select bank0
  1217     040B  1303               	bcf	3,6	;RP1=0, select bank0
  1218     040C  00E8               	movwf	_month
  1219     040D                     l2144:
  1220                           
  1221                           ;main.c: 181:             year = edit(year, 13, 1);
  1222     040D  300D               	movlw	13
  1223     040E  00DA               	movwf	edit@xx
  1224     040F  01DB               	clrf	edit@yy
  1225     0410  0ADB               	incf	edit@yy,f
  1226     0411  0867               	movf	_year,w
  1227     0412  120A  118A  25A5  120A  118A  	fcall	_edit
  1228     0417  1283               	bcf	3,5	;RP0=0, select bank0
  1229     0418  1303               	bcf	3,6	;RP1=0, select bank0
  1230     0419  00E7               	movwf	_year
  1231     041A                     l2146:
  1232                           
  1233                           ;main.c: 183:             DS3231_write();
  1234     041A  120A  118A  21F0  120A  118A  	fcall	_DS3231_write
  1235     041F                     l2148:
  1236                           
  1237                           ;main.c: 184:             _delay((unsigned long)((200)*(16000000/4000.0)));
  1238     041F  3005               	movlw	5
  1239     0420  1283               	bcf	3,5	;RP0=0, select bank0
  1240     0421  1303               	bcf	3,6	;RP1=0, select bank0
  1241     0422  00E5               	movwf	??_main+2
  1242     0423  300F               	movlw	15
  1243     0424  00E4               	movwf	??_main+1
  1244     0425  30F0               	movlw	240
  1245     0426  00E3               	movwf	??_main
  1246     0427                     u1757:
  1247     0427  0BE3               	decfsz	??_main,f
  1248     0428  2C27               	goto	u1757
  1249     0429  0BE4               	decfsz	??_main+1,f
  1250     042A  2C27               	goto	u1757
  1251     042B  0BE5               	decfsz	??_main+2,f
  1252     042C  2C27               	goto	u1757
  1253     042D  0000               	nop
  1254     042E                     l2150:
  1255                           
  1256                           ;main.c: 187:         DS3231_read();
  1257     042E  120A  118A  22BF  120A  118A  	fcall	_DS3231_read
  1258     0433                     l2152:
  1259                           
  1260                           ;main.c: 188:         DS3231_display();
  1261     0433  120A  118A  2672  120A  118A  	fcall	_DS3231_display
  1262     0438                     l2154:
  1263                           
  1264                           ;main.c: 189:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1265     0438  3002               	movlw	2
  1266     0439  1283               	bcf	3,5	;RP0=0, select bank0
  1267     043A  1303               	bcf	3,6	;RP1=0, select bank0
  1268     043B  00E5               	movwf	??_main+2
  1269     043C  3004               	movlw	4
  1270     043D  00E4               	movwf	??_main+1
  1271     043E  30B9               	movlw	185
  1272     043F  00E3               	movwf	??_main
  1273     0440                     u1767:
  1274     0440  0BE3               	decfsz	??_main,f
  1275     0441  2C40               	goto	u1767
  1276     0442  0BE4               	decfsz	??_main+1,f
  1277     0443  2C40               	goto	u1767
  1278     0444  0BE5               	decfsz	??_main+2,f
  1279     0445  2C40               	goto	u1767
  1280     0446  2C47               	nop2
  1281     0447  2BD4               	goto	l2132
  1282     0448  120A  118A  2800   	ljmp	start
  1283     044B                     __end_of_main:
  1284                           
  1285                           	psect	text1
  1286     05A5                     __ptext1:	
  1287 ;; *************** function _edit *****************
  1288 ;; Defined at:
  1289 ;;		line 90 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  parameter       1    wreg     unsigned char 
  1292 ;;  xx              1   58[BANK0 ] unsigned char 
  1293 ;;  yy              1   59[BANK0 ] unsigned char 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  parameter       1   66[BANK0 ] unsigned char 
  1296 ;;  temp            3   63[BANK0 ] unsigned char [3]
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      unsigned char 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       2       0       0       0
  1307 ;;      Locals:         0       4       0       0       0
  1308 ;;      Temps:          0       3       0       0       0
  1309 ;;      Totals:         0       9       0       0       0
  1310 ;;Total ram usage:        9 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 8
  1313 ;; This function calls:
  1314 ;;		_LCD_Print_String
  1315 ;;		_LCD_SetCursor
  1316 ;;		_blink
  1317 ;;		_sprintf
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323     05A5                     _edit:	
  1324                           ;psect for function _edit
  1325                           
  1326                           
  1327                           ;incstack = 0
  1328 ;; hardware stack exceeded
  1329                           ; Regs used in _edit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1330                           ;edit@parameter stored from wreg
  1331     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1332     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1333     05A7  00E2               	movwf	edit@parameter
  1334     05A8                     l1990:
  1335     05A8                     l231:	
  1336                           ;main.c: 91:     char temp[3];;main.c: 93:     while(!PORTBbits.RB0);
  1337                           
  1338     05A8  1C06               	btfss	6,0	;volatile
  1339     05A9  2DAB               	goto	u1591
  1340     05AA  2DAC               	goto	u1590
  1341     05AB                     u1591:
  1342     05AB  2DA8               	goto	l231
  1343     05AC                     u1590:
  1344     05AC  2E22               	goto	l2032
  1345     05AD                     l1992:
  1346                           
  1347                           ;main.c: 97:             parameter++;
  1348     05AD  3001               	movlw	1
  1349     05AE  07E2               	addwf	edit@parameter,f
  1350     05AF                     l1994:
  1351                           
  1352                           ;main.c: 98:             if(i == 0 && parameter > 23)
  1353     05AF  086D               	movf	_i,w
  1354     05B0  1D03               	btfss	3,2
  1355     05B1  2DB3               	goto	u1601
  1356     05B2  2DB4               	goto	u1600
  1357     05B3                     u1601:
  1358     05B3  2DBB               	goto	l2000
  1359     05B4                     u1600:
  1360     05B4                     l1996:
  1361     05B4  3018               	movlw	24
  1362     05B5  0262               	subwf	edit@parameter,w
  1363     05B6  1C03               	skipc
  1364     05B7  2DB9               	goto	u1611
  1365     05B8  2DBA               	goto	u1610
  1366     05B9                     u1611:
  1367     05B9  2DBB               	goto	l2000
  1368     05BA                     u1610:
  1369     05BA                     l1998:
  1370                           
  1371                           ;main.c: 99:                 parameter = 0;
  1372     05BA  01E2               	clrf	edit@parameter
  1373     05BB                     l2000:
  1374                           
  1375                           ;main.c: 100:             if(i == 1 && parameter > 59)
  1376     05BB  036D               	decf	_i,w
  1377     05BC  1D03               	btfss	3,2
  1378     05BD  2DBF               	goto	u1621
  1379     05BE  2DC0               	goto	u1620
  1380     05BF                     u1621:
  1381     05BF  2DC7               	goto	l2006
  1382     05C0                     u1620:
  1383     05C0                     l2002:
  1384     05C0  303C               	movlw	60
  1385     05C1  0262               	subwf	edit@parameter,w
  1386     05C2  1C03               	skipc
  1387     05C3  2DC5               	goto	u1631
  1388     05C4  2DC6               	goto	u1630
  1389     05C5                     u1631:
  1390     05C5  2DC7               	goto	l2006
  1391     05C6                     u1630:
  1392     05C6                     l2004:
  1393                           
  1394                           ;main.c: 101:                 parameter = 0;
  1395     05C6  01E2               	clrf	edit@parameter
  1396     05C7                     l2006:
  1397                           
  1398                           ;main.c: 102:             if(i == 2 && parameter > 31)
  1399     05C7  3002               	movlw	2
  1400     05C8  066D               	xorwf	_i,w
  1401     05C9  1D03               	btfss	3,2
  1402     05CA  2DCC               	goto	u1641
  1403     05CB  2DCD               	goto	u1640
  1404     05CC                     u1641:
  1405     05CC  2DD5               	goto	l2012
  1406     05CD                     u1640:
  1407     05CD                     l2008:
  1408     05CD  3020               	movlw	32
  1409     05CE  0262               	subwf	edit@parameter,w
  1410     05CF  1C03               	skipc
  1411     05D0  2DD2               	goto	u1651
  1412     05D1  2DD3               	goto	u1650
  1413     05D2                     u1651:
  1414     05D2  2DD5               	goto	l2012
  1415     05D3                     u1650:
  1416     05D3                     l2010:
  1417                           
  1418                           ;main.c: 103:                 parameter = 1;
  1419     05D3  3001               	movlw	1
  1420     05D4  00E2               	movwf	edit@parameter
  1421     05D5                     l2012:
  1422                           
  1423                           ;main.c: 104:             if(i == 3 && parameter > 12)
  1424     05D5  3003               	movlw	3
  1425     05D6  066D               	xorwf	_i,w
  1426     05D7  1D03               	btfss	3,2
  1427     05D8  2DDA               	goto	u1661
  1428     05D9  2DDB               	goto	u1660
  1429     05DA                     u1661:
  1430     05DA  2DE3               	goto	l2018
  1431     05DB                     u1660:
  1432     05DB                     l2014:
  1433     05DB  300D               	movlw	13
  1434     05DC  0262               	subwf	edit@parameter,w
  1435     05DD  1C03               	skipc
  1436     05DE  2DE0               	goto	u1671
  1437     05DF  2DE1               	goto	u1670
  1438     05E0                     u1671:
  1439     05E0  2DE3               	goto	l2018
  1440     05E1                     u1670:
  1441     05E1                     l2016:
  1442                           
  1443                           ;main.c: 105:                 parameter = 1;
  1444     05E1  3001               	movlw	1
  1445     05E2  00E2               	movwf	edit@parameter
  1446     05E3                     l2018:
  1447                           
  1448                           ;main.c: 106:             if(i == 4 && parameter > 99)
  1449     05E3  3004               	movlw	4
  1450     05E4  066D               	xorwf	_i,w
  1451     05E5  1D03               	btfss	3,2
  1452     05E6  2DE8               	goto	u1681
  1453     05E7  2DE9               	goto	u1680
  1454     05E8                     u1681:
  1455     05E8  2DF0               	goto	l2024
  1456     05E9                     u1680:
  1457     05E9                     l2020:
  1458     05E9  3064               	movlw	100
  1459     05EA  0262               	subwf	edit@parameter,w
  1460     05EB  1C03               	skipc
  1461     05EC  2DEE               	goto	u1691
  1462     05ED  2DEF               	goto	u1690
  1463     05EE                     u1691:
  1464     05EE  2DF0               	goto	l2024
  1465     05EF                     u1690:
  1466     05EF                     l2022:
  1467                           
  1468                           ;main.c: 107:                 parameter = 0;
  1469     05EF  01E2               	clrf	edit@parameter
  1470     05F0                     l2024:
  1471                           
  1472                           ;main.c: 109:             LCD_SetCursor(xx, yy);
  1473     05F0  085B               	movf	edit@yy,w
  1474     05F1  00F5               	movwf	LCD_SetCursor@row
  1475     05F2  085A               	movf	edit@xx,w
  1476     05F3  120A  158A  2691  120A  118A  	fcall	_LCD_SetCursor
  1477     05F8                     l2026:
  1478                           
  1479                           ;main.c: 110:             sprintf(temp, "%02u", parameter);
  1480     05F8  305F               	movlw	(low (edit@temp| 0))& (0+255)
  1481     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1482     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1483     05FB  00C9               	movwf	sprintf@s
  1484     05FC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1485     05FD  00CA               	movwf	sprintf@fmt
  1486     05FE  0862               	movf	edit@parameter,w
  1487     05FF  00DC               	movwf	??_edit
  1488     0600  01DD               	clrf	??_edit+1
  1489     0601  085C               	movf	??_edit,w
  1490     0602  00CB               	movwf	?_sprintf+2
  1491     0603  085D               	movf	??_edit+1,w
  1492     0604  00CC               	movwf	?_sprintf+3
  1493     0605  120A  158A  2711  120A  118A  	fcall	_sprintf
  1494     060A                     l2028:
  1495                           
  1496                           ;main.c: 111:             LCD_Print_String(temp);
  1497     060A  305F               	movlw	(low (edit@temp| 0))& (0+255)
  1498     060B  00F5               	movwf	LCD_Print_String@str
  1499     060C  3000               	movlw	0
  1500     060D  00F6               	movwf	LCD_Print_String@str+1
  1501     060E  120A  158A  277E  120A  118A  	fcall	_LCD_Print_String
  1502     0613                     l2030:
  1503                           
  1504                           ;main.c: 112:             _delay((unsigned long)((200)*(16000000/4000.0)));
  1505     0613  3005               	movlw	5
  1506     0614  1283               	bcf	3,5	;RP0=0, select bank0
  1507     0615  1303               	bcf	3,6	;RP1=0, select bank0
  1508     0616  00DE               	movwf	??_edit+2
  1509     0617  300F               	movlw	15
  1510     0618  00DD               	movwf	??_edit+1
  1511     0619  30F0               	movlw	240
  1512     061A  00DC               	movwf	??_edit
  1513     061B                     u1777:
  1514     061B  0BDC               	decfsz	??_edit,f
  1515     061C  2E1B               	goto	u1777
  1516     061D  0BDD               	decfsz	??_edit+1,f
  1517     061E  2E1B               	goto	u1777
  1518     061F  0BDE               	decfsz	??_edit+2,f
  1519     0620  2E1B               	goto	u1777
  1520     0621  0000               	nop
  1521     0622                     l2032:
  1522                           
  1523                           ;main.c: 96:         while(!PORTBbits.RB1) {
  1524     0622  1283               	bcf	3,5	;RP0=0, select bank0
  1525     0623  1303               	bcf	3,6	;RP1=0, select bank0
  1526     0624  1C86               	btfss	6,1	;volatile
  1527     0625  2E27               	goto	u1701
  1528     0626  2E28               	goto	u1700
  1529     0627                     u1701:
  1530     0627  2DAD               	goto	l1992
  1531     0628                     u1700:
  1532     0628                     l2034:
  1533                           
  1534                           ;main.c: 116:         LCD_SetCursor(xx, yy);
  1535     0628  085B               	movf	edit@yy,w
  1536     0629  00F5               	movwf	LCD_SetCursor@row
  1537     062A  085A               	movf	edit@xx,w
  1538     062B  120A  158A  2691  120A  118A  	fcall	_LCD_SetCursor
  1539     0630                     l2036:
  1540                           
  1541                           ;main.c: 117:         LCD_Print_String("  ");
  1542     0630  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1543     0631  00F5               	movwf	LCD_Print_String@str
  1544     0632  3080               	movlw	128
  1545     0633  00F6               	movwf	LCD_Print_String@str+1
  1546     0634  120A  158A  277E  120A  118A  	fcall	_LCD_Print_String
  1547     0639                     l2038:
  1548                           
  1549                           ;main.c: 118:         blink();
  1550     0639  120A  158A  26AE  120A  118A  	fcall	_blink
  1551     063E                     l2040:
  1552                           
  1553                           ;main.c: 119:         LCD_SetCursor(xx, yy);
  1554     063E  1283               	bcf	3,5	;RP0=0, select bank0
  1555     063F  1303               	bcf	3,6	;RP1=0, select bank0
  1556     0640  085B               	movf	edit@yy,w
  1557     0641  00F5               	movwf	LCD_SetCursor@row
  1558     0642  085A               	movf	edit@xx,w
  1559     0643  120A  158A  2691  120A  118A  	fcall	_LCD_SetCursor
  1560     0648                     l2042:
  1561                           
  1562                           ;main.c: 120:         sprintf(temp, "%02u", parameter);
  1563     0648  305F               	movlw	(low (edit@temp| 0))& (0+255)
  1564     0649  1283               	bcf	3,5	;RP0=0, select bank0
  1565     064A  1303               	bcf	3,6	;RP1=0, select bank0
  1566     064B  00C9               	movwf	sprintf@s
  1567     064C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1568     064D  00CA               	movwf	sprintf@fmt
  1569     064E  0862               	movf	edit@parameter,w
  1570     064F  00DC               	movwf	??_edit
  1571     0650  01DD               	clrf	??_edit+1
  1572     0651  085C               	movf	??_edit,w
  1573     0652  00CB               	movwf	?_sprintf+2
  1574     0653  085D               	movf	??_edit+1,w
  1575     0654  00CC               	movwf	?_sprintf+3
  1576     0655  120A  158A  2711  120A  118A  	fcall	_sprintf
  1577     065A                     l2044:
  1578                           
  1579                           ;main.c: 121:         LCD_Print_String(temp);
  1580     065A  305F               	movlw	(low (edit@temp| 0))& (0+255)
  1581     065B  00F5               	movwf	LCD_Print_String@str
  1582     065C  3000               	movlw	0
  1583     065D  00F6               	movwf	LCD_Print_String@str+1
  1584     065E  120A  158A  277E  120A  118A  	fcall	_LCD_Print_String
  1585     0663                     l2046:
  1586                           
  1587                           ;main.c: 122:         blink();
  1588     0663  120A  158A  26AE  120A  118A  	fcall	_blink
  1589     0668                     l2048:
  1590                           
  1591                           ;main.c: 124:         if(!PORTBbits.RB0) {
  1592     0668  1283               	bcf	3,5	;RP0=0, select bank0
  1593     0669  1303               	bcf	3,6	;RP1=0, select bank0
  1594     066A  1806               	btfsc	6,0	;volatile
  1595     066B  2E6D               	goto	u1711
  1596     066C  2E6E               	goto	u1710
  1597     066D                     u1711:
  1598     066D  2E22               	goto	l2032
  1599     066E                     u1710:
  1600     066E                     l2050:
  1601                           
  1602                           ;main.c: 125:             i++;
  1603     066E  3001               	movlw	1
  1604     066F  07ED               	addwf	_i,f
  1605     0670                     l2052:
  1606                           
  1607                           ;main.c: 126:             return parameter;
  1608     0670  0862               	movf	edit@parameter,w
  1609     0671                     l244:
  1610     0671  0008               	return
  1611     0672                     __end_of_edit:
  1612                           
  1613                           	psect	text2
  1614     0F11                     __ptext2:	
  1615 ;; *************** function _sprintf *****************
  1616 ;; Defined at:
  1617 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  s               1   41[BANK0 ] PTR unsigned char 
  1620 ;;		 -> edit@temp(3), 
  1621 ;;  fmt             1   42[BANK0 ] PTR const unsigned char 
  1622 ;;		 -> STR_3(5), STR_1(5), 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  f              11   47[BANK0 ] struct _IO_FILE
  1625 ;;  ret             2    0        int 
  1626 ;;  ap              1   46[BANK0 ] PTR void [1]
  1627 ;;		 -> ?_sprintf(2), 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2   41[BANK0 ] int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       4       0       0       0
  1638 ;;      Locals:         0      12       0       0       0
  1639 ;;      Temps:          0       1       0       0       0
  1640 ;;      Totals:         0      17       0       0       0
  1641 ;;Total ram usage:       17 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 7
  1644 ;; This function calls:
  1645 ;;		_vfprintf
  1646 ;; This function is called by:
  1647 ;;		_edit
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651     0F11                     _sprintf:	
  1652                           ;psect for function _sprintf
  1653                           
  1654     0F11                     l1924:	
  1655                           ;incstack = 0
  1656 ;; hardware stack exceeded
  1657                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1658                           
  1659     0F11  304B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1660     0F12  1283               	bcf	3,5	;RP0=0, select bank0
  1661     0F13  1303               	bcf	3,6	;RP1=0, select bank0
  1662     0F14  00CE               	movwf	sprintf@ap
  1663     0F15                     l1926:
  1664     0F15  0849               	movf	sprintf@s,w
  1665     0F16  00CF               	movwf	sprintf@f
  1666     0F17  3000               	movlw	0
  1667     0F18  00D0               	movwf	sprintf@f+1
  1668     0F19                     l1928:
  1669     0F19  01D1               	clrf	sprintf@f+2
  1670     0F1A  01D2               	clrf	sprintf@f+3
  1671     0F1B                     l1930:
  1672     0F1B  01D8               	clrf	sprintf@f+9
  1673     0F1C  01D9               	clrf	sprintf@f+10
  1674     0F1D                     l1932:
  1675     0F1D  304F               	movlw	low sprintf@f
  1676     0F1E  00C4               	movwf	vfprintf@fp
  1677     0F1F  3000               	movlw	high sprintf@f
  1678     0F20  00C5               	movwf	vfprintf@fp+1
  1679     0F21  084A               	movf	sprintf@fmt,w
  1680     0F22  00C6               	movwf	vfprintf@fmt
  1681     0F23  304E               	movlw	(low (sprintf@ap| 0))& (0+255)
  1682     0F24  00C7               	movwf	vfprintf@ap
  1683     0F25  120A  158A  26EE  120A  158A  	fcall	_vfprintf
  1684     0F2A                     l1934:
  1685     0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  1686     0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  1687     0F2C  0851               	movf	sprintf@f+2,w
  1688     0F2D  0749               	addwf	sprintf@s,w
  1689     0F2E  00CD               	movwf	??_sprintf
  1690     0F2F  084D               	movf	??_sprintf,w
  1691     0F30  0084               	movwf	4
  1692     0F31  1383               	bcf	3,7	;select IRP bank0
  1693     0F32  0180               	clrf	0
  1694     0F33                     l810:
  1695     0F33  0008               	return
  1696     0F34                     __end_of_sprintf:
  1697                           
  1698                           	psect	text3
  1699     0EEE                     __ptext3:	
  1700 ;; *************** function _vfprintf *****************
  1701 ;; Defined at:
  1702 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  1705 ;;		 -> sprintf@f(11), 
  1706 ;;  fmt             1   38[BANK0 ] PTR const unsigned char 
  1707 ;;		 -> STR_3(5), STR_1(5), 
  1708 ;;  ap              1   39[BANK0 ] PTR PTR void 
  1709 ;;		 -> sprintf@ap(1), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  cfmt            1   40[BANK0 ] PTR unsigned char 
  1712 ;;		 -> STR_3(5), STR_1(5), 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2   36[BANK0 ] int 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       4       0       0       0
  1723 ;;      Locals:         0       1       0       0       0
  1724 ;;      Temps:          0       0       0       0       0
  1725 ;;      Totals:         0       5       0       0       0
  1726 ;;Total ram usage:        5 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 6
  1729 ;; This function calls:
  1730 ;;		_vfpfcnvrt
  1731 ;; This function is called by:
  1732 ;;		_sprintf
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736     0EEE                     _vfprintf:	
  1737                           ;psect for function _vfprintf
  1738                           
  1739     0EEE                     l1848:	
  1740                           ;incstack = 0
  1741 ;; hardware stack exceeded
  1742                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1743                           
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1746     0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  1747     0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  1748     0EF0  0846               	movf	vfprintf@fmt,w
  1749     0EF1  00C8               	movwf	vfprintf@cfmt
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1752     0EF2  2F00               	goto	l1852
  1753     0EF3                     l1850:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1756     0EF3  0844               	movf	vfprintf@fp,w
  1757     0EF4  00B8               	movwf	vfpfcnvrt@fp
  1758     0EF5  0845               	movf	vfprintf@fp+1,w
  1759     0EF6  00B9               	movwf	vfpfcnvrt@fp+1
  1760     0EF7  3048               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1761     0EF8  00BA               	movwf	vfpfcnvrt@fmt
  1762     0EF9  0847               	movf	vfprintf@ap,w
  1763     0EFA  00BB               	movwf	vfpfcnvrt@ap
  1764     0EFB  120A  118A  24E5  120A  158A  	fcall	_vfpfcnvrt
  1765     0F00                     l1852:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1768     0F00  1283               	bcf	3,5	;RP0=0, select bank0
  1769     0F01  1303               	bcf	3,6	;RP1=0, select bank0
  1770     0F02  0848               	movf	vfprintf@cfmt,w
  1771     0F03  0084               	movwf	4
  1772     0F04  120A  158A  200A  120A  158A  	fcall	stringdir
  1773     0F09  3A00               	xorlw	0
  1774     0F0A  1D03               	skipz
  1775     0F0B  2F0D               	goto	u1501
  1776     0F0C  2F0E               	goto	u1500
  1777     0F0D                     u1501:
  1778     0F0D  2EF3               	goto	l1850
  1779     0F0E                     u1500:
  1780     0F0E                     l1854:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1783     0F0E  01C4               	clrf	?_vfprintf
  1784     0F0F  01C5               	clrf	?_vfprintf+1
  1785     0F10                     l875:
  1786     0F10  0008               	return
  1787     0F11                     __end_of_vfprintf:
  1788                           
  1789                           	psect	text4
  1790     04E5                     __ptext4:	
  1791 ;; *************** function _vfpfcnvrt *****************
  1792 ;; Defined at:
  1793 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  fp              2   24[BANK0 ] PTR struct _IO_FILE
  1796 ;;		 -> sprintf@f(11), 
  1797 ;;  fmt             1   26[BANK0 ] PTR PTR unsigned char 
  1798 ;;		 -> vfprintf@cfmt(1), 
  1799 ;;  ap              1   27[BANK0 ] PTR PTR void 
  1800 ;;		 -> sprintf@ap(1), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  convarg         4   30[BANK0 ] struct .
  1803 ;;  cp              1   35[BANK0 ] PTR unsigned char 
  1804 ;;		 -> STR_3(5), STR_1(5), 
  1805 ;;  done            1   34[BANK0 ] _Bool 
  1806 ;;  c               1    0        unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       4       0       0       0
  1817 ;;      Locals:         0       6       0       0       0
  1818 ;;      Temps:          0       2       0       0       0
  1819 ;;      Totals:         0      12       0       0       0
  1820 ;;Total ram usage:       12 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 5
  1823 ;; This function calls:
  1824 ;;		_fputc
  1825 ;;		_read_prec_or_width
  1826 ;;		_utoa
  1827 ;; This function is called by:
  1828 ;;		_vfprintf
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832     04E5                     _vfpfcnvrt:	
  1833                           ;psect for function _vfpfcnvrt
  1834                           
  1835     04E5                     l1696:	
  1836                           ;incstack = 0
  1837 ;; hardware stack exceeded
  1838                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1839                           
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1842     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1843     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1844     04E7  083A               	movf	vfpfcnvrt@fmt,w
  1845     04E8  0084               	movwf	4
  1846     04E9  1383               	bcf	3,7	;select IRP bank0
  1847     04EA  0800               	movf	0,w
  1848     04EB  0084               	movwf	4
  1849     04EC  120A  158A  200A  120A  118A  	fcall	stringdir
  1850     04F1  3A25               	xorlw	37
  1851     04F2  1D03               	skipz
  1852     04F3  2CF5               	goto	u1251
  1853     04F4  2CF6               	goto	u1250
  1854     04F5                     u1251:
  1855     04F5  2D8B               	goto	l1742
  1856     04F6                     u1250:
  1857     04F6                     l1698:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1860     04F6  083A               	movf	vfpfcnvrt@fmt,w
  1861     04F7  0084               	movwf	4
  1862     04F8  3001               	movlw	1
  1863     04F9  0780               	addwf	0,f
  1864     04FA                     l1700:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1867     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1868     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1869     04FC  01A0               	clrf	_width^(0+128)
  1870     04FD  01A1               	clrf	(_width+1)^(0+128)
  1871     04FE  3000               	movlw	0
  1872     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1873     0500  1303               	bcf	3,6	;RP1=0, select bank0
  1874     0501  00E6               	movwf	_flags
  1875     0502                     l1702:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1878     0502  30FF               	movlw	255
  1879     0503  1683               	bsf	3,5	;RP0=1, select bank1
  1880     0504  1303               	bcf	3,6	;RP1=0, select bank1
  1881     0505  00A2               	movwf	_prec^(0+128)
  1882     0506  30FF               	movlw	255
  1883     0507  00A3               	movwf	(_prec^(0+128)+1)
  1884     0508                     l1704:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1887     0508  1283               	bcf	3,5	;RP0=0, select bank0
  1888     0509  1303               	bcf	3,6	;RP1=0, select bank0
  1889     050A  01C2               	clrf	vfpfcnvrt@done
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1892     050B  2D22               	goto	l1712
  1893     050C                     l858:	
  1894                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  1895                           
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1898     050C  14E6               	bsf	_flags,1
  1899     050D                     l1706:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1902     050D  083A               	movf	vfpfcnvrt@fmt,w
  1903     050E  0084               	movwf	4
  1904     050F  3001               	movlw	1
  1905     0510  0780               	addwf	0,f
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1908     0511  2D22               	goto	l1712
  1909     0512                     l860:	
  1910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  1911                           
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1914     0512  3001               	movlw	1
  1915     0513  00C2               	movwf	vfpfcnvrt@done
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1918     0514  2D22               	goto	l1712
  1919     0515                     l1710:
  1920     0515  083A               	movf	vfpfcnvrt@fmt,w
  1921     0516  0084               	movwf	4
  1922     0517  0800               	movf	0,w
  1923     0518  0084               	movwf	4
  1924     0519  120A  158A  200A  120A  118A  	fcall	stringdir
  1925                           
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 1, Range of values is 48 to 48
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            4     3 (average)
  1931                           ; direct_byte           14    11 (fixed)
  1932                           ; jumptable            263     9 (fixed)
  1933                           ;	Chosen strategy is simple_byte
  1934     051E  3A30               	xorlw	48	; case 48
  1935     051F  1903               	skipnz
  1936     0520  2D0C               	goto	l858
  1937     0521  2D12               	goto	l860
  1938     0522                     l1712:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1941     0522  0842               	movf	vfpfcnvrt@done,w
  1942     0523  1903               	btfsc	3,2
  1943     0524  2D26               	goto	u1261
  1944     0525  2D27               	goto	u1260
  1945     0526                     u1261:
  1946     0526  2D15               	goto	l1710
  1947     0527                     u1260:
  1948     0527                     l1714:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1951     0527  083A               	movf	vfpfcnvrt@fmt,w
  1952     0528  00F6               	movwf	read_prec_or_width@fmt
  1953     0529  083B               	movf	vfpfcnvrt@ap,w
  1954     052A  00F7               	movwf	read_prec_or_width@ap
  1955     052B  120A  118A  2090  120A  118A  	fcall	_read_prec_or_width
  1956     0530  0877               	movf	?_read_prec_or_width+1,w
  1957     0531  1683               	bsf	3,5	;RP0=1, select bank1
  1958     0532  1303               	bcf	3,6	;RP1=0, select bank1
  1959     0533  00A1               	movwf	(_width+1)^(0+128)
  1960     0534  0876               	movf	?_read_prec_or_width,w
  1961     0535  00A0               	movwf	_width^(0+128)
  1962     0536                     l1716:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1965     0536  1FA1               	btfss	(_width+1)^(0+128),7
  1966     0537  2D39               	goto	u1271
  1967     0538  2D3A               	goto	u1270
  1968     0539                     u1271:
  1969     0539  2D44               	goto	l1722
  1970     053A                     u1270:
  1971     053A                     l1718:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1974     053A  1283               	bcf	3,5	;RP0=0, select bank0
  1975     053B  1303               	bcf	3,6	;RP1=0, select bank0
  1976     053C  1466               	bsf	_flags,0
  1977     053D                     l1720:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1980     053D  1683               	bsf	3,5	;RP0=1, select bank1
  1981     053E  1303               	bcf	3,6	;RP1=0, select bank1
  1982     053F  09A0               	comf	_width^(0+128),f
  1983     0540  09A1               	comf	(_width+1)^(0+128),f
  1984     0541  0AA0               	incf	_width^(0+128),f
  1985     0542  1903               	skipnz
  1986     0543  0AA1               	incf	(_width+1)^(0+128),f
  1987     0544                     l1722:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1990     0544  1283               	bcf	3,5	;RP0=0, select bank0
  1991     0545  1303               	bcf	3,6	;RP1=0, select bank0
  1992     0546  083A               	movf	vfpfcnvrt@fmt,w
  1993     0547  0084               	movwf	4
  1994     0548  1383               	bcf	3,7	;select IRP bank0
  1995     0549  0800               	movf	0,w
  1996     054A  00C3               	movwf	vfpfcnvrt@cp
  1997     054B                     l1724:
  1998     054B  0843               	movf	vfpfcnvrt@cp,w
  1999     054C  0084               	movwf	4
  2000     054D  120A  158A  200A  120A  118A  	fcall	stringdir
  2001     0552  3A75               	xorlw	117
  2002     0553  1D03               	skipz
  2003     0554  2D56               	goto	u1281
  2004     0555  2D57               	goto	u1280
  2005     0556                     u1281:
  2006     0556  2D83               	goto	l1738
  2007     0557                     u1280:
  2008     0557                     l1726:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2011     0557  083B               	movf	vfpfcnvrt@ap,w
  2012     0558  0084               	movwf	4
  2013     0559  0800               	movf	0,w
  2014     055A  00FF               	movwf	btemp+1
  2015     055B  3002               	movlw	2
  2016     055C  0780               	addwf	0,f
  2017     055D  087F               	movf	btemp+1,w
  2018     055E  0084               	movwf	4
  2019     055F  0800               	movf	0,w
  2020     0560  00BE               	movwf	vfpfcnvrt@convarg
  2021     0561  0A84               	incf	4,f
  2022     0562  0800               	movf	0,w
  2023     0563  00BF               	movwf	vfpfcnvrt@convarg+1
  2024     0564                     l1728:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2027     0564  083A               	movf	vfpfcnvrt@fmt,w
  2028     0565  0084               	movwf	4
  2029     0566  0843               	movf	vfpfcnvrt@cp,w
  2030     0567  3E01               	addlw	1
  2031     0568  0080               	movwf	0
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2034     0569  2D78               	goto	l1736
  2035     056A                     l1730:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2038     056A  0838               	movf	vfpfcnvrt@fp,w
  2039     056B  00AF               	movwf	utoa@fp
  2040     056C  0839               	movf	vfpfcnvrt@fp+1,w
  2041     056D  00B0               	movwf	utoa@fp+1
  2042     056E  083F               	movf	vfpfcnvrt@convarg+1,w
  2043     056F  00B2               	movwf	utoa@d+1
  2044     0570  083E               	movf	vfpfcnvrt@convarg,w
  2045     0571  00B1               	movwf	utoa@d
  2046     0572  120A  118A  2339  120A  118A  	fcall	_utoa
  2047     0577  2DA4               	goto	l868
  2048     0578                     l1736:
  2049     0578  0843               	movf	vfpfcnvrt@cp,w
  2050     0579  0084               	movwf	4
  2051     057A  120A  158A  200A  120A  118A  	fcall	stringdir
  2052                           
  2053                           ; Switch size 1, requested type "simple"
  2054                           ; Number of cases is 1, Range of values is 117 to 117
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            4     3 (average)
  2058                           ; direct_byte           14    11 (fixed)
  2059                           ; jumptable            263     9 (fixed)
  2060                           ;	Chosen strategy is simple_byte
  2061     057F  3A75               	xorlw	117	; case 117
  2062     0580  1903               	skipnz
  2063     0581  2D6A               	goto	l1730
  2064     0582  2D83               	goto	l1738
  2065     0583                     l1738:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2068     0583  1283               	bcf	3,5	;RP0=0, select bank0
  2069     0584  1303               	bcf	3,6	;RP1=0, select bank0
  2070     0585  083A               	movf	vfpfcnvrt@fmt,w
  2071     0586  0084               	movwf	4
  2072     0587  3001               	movlw	1
  2073     0588  1383               	bcf	3,7	;select IRP bank0
  2074     0589  0780               	addwf	0,f
  2075     058A  2DA4               	goto	l868
  2076     058B                     l1742:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2079     058B  083A               	movf	vfpfcnvrt@fmt,w
  2080     058C  0084               	movwf	4
  2081     058D  0800               	movf	0,w
  2082     058E  0084               	movwf	4
  2083     058F  120A  158A  200A  120A  118A  	fcall	stringdir
  2084     0594  00BC               	movwf	??_vfpfcnvrt
  2085     0595  01BD               	clrf	??_vfpfcnvrt+1
  2086     0596  083C               	movf	??_vfpfcnvrt,w
  2087     0597  00F0               	movwf	fputc@c
  2088     0598  083D               	movf	??_vfpfcnvrt+1,w
  2089     0599  00F1               	movwf	fputc@c+1
  2090     059A  0838               	movf	vfpfcnvrt@fp,w
  2091     059B  00F2               	movwf	fputc@fp
  2092     059C  0839               	movf	vfpfcnvrt@fp+1,w
  2093     059D  00F3               	movwf	fputc@fp+1
  2094     059E  120A  118A  244B  120A  118A  	fcall	_fputc
  2095     05A3  2D83               	goto	l1738
  2096     05A4                     l868:
  2097     05A4  0008               	return
  2098     05A5                     __end_of_vfpfcnvrt:
  2099                           
  2100                           	psect	text5
  2101     0339                     __ptext5:	
  2102 ;; *************** function _utoa *****************
  2103 ;; Defined at:
  2104 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  2107 ;;		 -> sprintf@f(11), 
  2108 ;;  d               2   17[BANK0 ] unsigned int 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  i               2   22[BANK0 ] int 
  2111 ;;  w               2   20[BANK0 ] int 
  2112 ;;  p               1   19[BANK0 ] _Bool 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2122 ;;      Params:         0       4       0       0       0
  2123 ;;      Locals:         0       5       0       0       0
  2124 ;;      Temps:          0       0       0       0       0
  2125 ;;      Totals:         0       9       0       0       0
  2126 ;;Total ram usage:        9 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 4
  2129 ;; This function calls:
  2130 ;;		___lwdiv
  2131 ;;		___lwmod
  2132 ;;		_pad
  2133 ;; This function is called by:
  2134 ;;		_vfpfcnvrt
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138     0339                     _utoa:	
  2139                           ;psect for function _utoa
  2140                           
  2141     0339                     l1644:	
  2142                           ;incstack = 0
  2143 ;; hardware stack exceeded
  2144                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2145                           
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  2148     0339  3001               	movlw	1
  2149     033A  1283               	bcf	3,5	;RP0=0, select bank0
  2150     033B  1303               	bcf	3,6	;RP1=0, select bank0
  2151     033C  00B3               	movwf	utoa@p
  2152     033D                     l1646:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  2155     033D  1683               	bsf	3,5	;RP0=1, select bank1
  2156     033E  1303               	bcf	3,6	;RP1=0, select bank1
  2157     033F  0821               	movf	(_width+1)^(0+128),w
  2158     0340  1283               	bcf	3,5	;RP0=0, select bank0
  2159     0341  1303               	bcf	3,6	;RP1=0, select bank0
  2160     0342  00B5               	movwf	utoa@w+1
  2161     0343  1683               	bsf	3,5	;RP0=1, select bank1
  2162     0344  1303               	bcf	3,6	;RP1=0, select bank1
  2163     0345  0820               	movf	_width^(0+128),w
  2164     0346  1283               	bcf	3,5	;RP0=0, select bank0
  2165     0347  1303               	bcf	3,6	;RP1=0, select bank0
  2166     0348  00B4               	movwf	utoa@w
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  2169     0349  301F               	movlw	31
  2170     034A  00B6               	movwf	utoa@i
  2171     034B  3000               	movlw	0
  2172     034C  00B7               	movwf	utoa@i+1
  2173     034D                     l1648:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  2176     034D  1683               	bsf	3,5	;RP0=1, select bank1
  2177     034E  1303               	bcf	3,6	;RP1=0, select bank1
  2178     034F  01C6               	clrf	(_dbuf^(0+128)+31)
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2181     0350  2B87               	goto	l1660
  2182     0351                     l1650:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1034:         --i;
  2185     0351  30FF               	movlw	255
  2186     0352  07B6               	addwf	utoa@i,f
  2187     0353  1803               	skipnc
  2188     0354  0AB7               	incf	utoa@i+1,f
  2189     0355  30FF               	movlw	255
  2190     0356  07B7               	addwf	utoa@i+1,f
  2191     0357                     l1652:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  2194     0357  0836               	movf	utoa@i,w
  2195     0358  3EA7               	addlw	(low (_dbuf| 0))& (0+255)
  2196     0359  0084               	movwf	4
  2197     035A  300A               	movlw	10
  2198     035B  00F0               	movwf	___lwmod@divisor
  2199     035C  3000               	movlw	0
  2200     035D  00F1               	movwf	___lwmod@divisor+1
  2201     035E  0832               	movf	utoa@d+1,w
  2202     035F  00F3               	movwf	___lwmod@dividend+1
  2203     0360  0831               	movf	utoa@d,w
  2204     0361  00F2               	movwf	___lwmod@dividend
  2205     0362  120A  118A  2016  120A  118A  	fcall	___lwmod
  2206     0367  0870               	movf	?___lwmod,w
  2207     0368  3E30               	addlw	48
  2208     0369  1383               	bcf	3,7	;select IRP bank1
  2209     036A  0080               	movwf	0
  2210     036B                     l1654:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  2213     036B  1283               	bcf	3,5	;RP0=0, select bank0
  2214     036C  1303               	bcf	3,6	;RP1=0, select bank0
  2215     036D  01B3               	clrf	utoa@p
  2216     036E                     l1656:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  2219     036E  30FF               	movlw	255
  2220     036F  07B4               	addwf	utoa@w,f
  2221     0370  1803               	skipnc
  2222     0371  0AB5               	incf	utoa@w+1,f
  2223     0372  30FF               	movlw	255
  2224     0373  07B5               	addwf	utoa@w+1,f
  2225     0374                     l1658:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  2228     0374  300A               	movlw	10
  2229     0375  00F0               	movwf	___lwdiv@divisor
  2230     0376  3000               	movlw	0
  2231     0377  00F1               	movwf	___lwdiv@divisor+1
  2232     0378  0832               	movf	utoa@d+1,w
  2233     0379  00F3               	movwf	___lwdiv@dividend+1
  2234     037A  0831               	movf	utoa@d,w
  2235     037B  00F2               	movwf	___lwdiv@dividend
  2236     037C  120A  118A  204E  120A  118A  	fcall	___lwdiv
  2237     0381  0871               	movf	?___lwdiv+1,w
  2238     0382  1283               	bcf	3,5	;RP0=0, select bank0
  2239     0383  1303               	bcf	3,6	;RP1=0, select bank0
  2240     0384  00B2               	movwf	utoa@d+1
  2241     0385  0870               	movf	?___lwdiv,w
  2242     0386  00B1               	movwf	utoa@d
  2243     0387                     l1660:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2246     0387  1283               	bcf	3,5	;RP0=0, select bank0
  2247     0388  0836               	movf	utoa@i,w
  2248     0389  0437               	iorwf	utoa@i+1,w
  2249     038A  1903               	btfsc	3,2
  2250     038B  2B8D               	goto	u1181
  2251     038C  2B8E               	goto	u1180
  2252     038D                     u1181:
  2253     038D  2BAC               	goto	l1670
  2254     038E                     u1180:
  2255     038E                     l1662:
  2256     038E  0831               	movf	utoa@d,w
  2257     038F  0432               	iorwf	utoa@d+1,w
  2258     0390  1D03               	btfss	3,2
  2259     0391  2B93               	goto	u1191
  2260     0392  2B94               	goto	u1190
  2261     0393                     u1191:
  2262     0393  2B51               	goto	l1650
  2263     0394                     u1190:
  2264     0394                     l1664:
  2265     0394  0833               	movf	utoa@p,w
  2266     0395  1D03               	btfss	3,2
  2267     0396  2B98               	goto	u1201
  2268     0397  2B99               	goto	u1200
  2269     0398                     u1201:
  2270     0398  2B51               	goto	l1650
  2271     0399                     u1200:
  2272     0399                     l1666:
  2273     0399  0835               	movf	utoa@w+1,w
  2274     039A  3A80               	xorlw	128
  2275     039B  00FF               	movwf	btemp+1
  2276     039C  3080               	movlw	128
  2277     039D  027F               	subwf	btemp+1,w
  2278     039E  1D03               	skipz
  2279     039F  2BA2               	goto	u1215
  2280     03A0  3001               	movlw	1
  2281     03A1  0234               	subwf	utoa@w,w
  2282     03A2                     u1215:
  2283     03A2  1C03               	skipc
  2284     03A3  2BA5               	goto	u1211
  2285     03A4  2BA6               	goto	u1210
  2286     03A5                     u1211:
  2287     03A5  2BAC               	goto	l1670
  2288     03A6                     u1210:
  2289     03A6                     l1668:
  2290     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2291     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2292     03A8  18E6               	btfsc	_flags,1
  2293     03A9  2BAB               	goto	u1221
  2294     03AA  2BAC               	goto	u1220
  2295     03AB                     u1221:
  2296     03AB  2B51               	goto	l1650
  2297     03AC                     u1220:
  2298     03AC                     l1670:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2301     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2302     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2303     03AE  082F               	movf	utoa@fp,w
  2304     03AF  00A8               	movwf	pad@fp
  2305     03B0  0830               	movf	utoa@fp+1,w
  2306     03B1  00A9               	movwf	pad@fp+1
  2307     03B2  0836               	movf	utoa@i,w
  2308     03B3  3EA7               	addlw	(low (_dbuf| 0))& (0+255)
  2309     03B4  00AA               	movwf	pad@buf
  2310     03B5  0835               	movf	utoa@w+1,w
  2311     03B6  00AC               	movwf	pad@p+1
  2312     03B7  0834               	movf	utoa@w,w
  2313     03B8  00AB               	movwf	pad@p
  2314     03B9  120A  118A  20E3  120A  118A  	fcall	_pad
  2315     03BE                     l843:
  2316     03BE  0008               	return
  2317     03BF                     __end_of_utoa:
  2318                           
  2319                           	psect	text6
  2320     00E3                     __ptext6:	
  2321 ;; *************** function _pad *****************
  2322 ;; Defined at:
  2323 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  2326 ;;		 -> sprintf@f(11), 
  2327 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  2328 ;;		 -> dbuf(32), 
  2329 ;;  p               2   11[BANK0 ] int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  i               2   13[BANK0 ] int 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       5       0       0       0
  2342 ;;      Locals:         0       2       0       0       0
  2343 ;;      Temps:          1       0       0       0       0
  2344 ;;      Totals:         1       7       0       0       0
  2345 ;;Total ram usage:        8 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 3
  2348 ;; This function calls:
  2349 ;;		_fputc
  2350 ;;		_fputs
  2351 ;; This function is called by:
  2352 ;;		_utoa
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     00E3                     _pad:	
  2357                           ;psect for function _pad
  2358                           
  2359     00E3                     l1616:	
  2360                           ;incstack = 0
  2361 ;; hardware stack exceeded
  2362                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2363                           
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2366     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2367     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  2368     00E5  1C66               	btfss	_flags,0
  2369     00E6  28E8               	goto	u1131
  2370     00E7  28E9               	goto	u1130
  2371     00E8                     u1131:
  2372     00E8  28F4               	goto	l1620
  2373     00E9                     u1130:
  2374     00E9                     l1618:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2377     00E9  082A               	movf	pad@buf,w
  2378     00EA  00A0               	movwf	fputs@s
  2379     00EB  0828               	movf	pad@fp,w
  2380     00EC  00A1               	movwf	fputs@fp
  2381     00ED  0829               	movf	pad@fp+1,w
  2382     00EE  00A2               	movwf	fputs@fp+1
  2383     00EF  120A  158A  27A4  120A  118A  	fcall	_fputs
  2384     00F4                     l1620:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2387     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2388     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2389     00F6  1FAC               	btfss	pad@p+1,7
  2390     00F7  28F9               	goto	u1141
  2391     00F8  28FA               	goto	u1140
  2392     00F9                     u1141:
  2393     00F9  28FC               	goto	l828
  2394     00FA                     u1140:
  2395     00FA                     l1622:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2398     00FA  01AB               	clrf	pad@p
  2399     00FB  01AC               	clrf	pad@p+1
  2400     00FC                     l828:	
  2401                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  2402                           
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2405     00FC  01AD               	clrf	pad@i
  2406     00FD  01AE               	clrf	pad@i+1
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2409     00FE  2916               	goto	l1628
  2410     00FF                     l1624:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2413     00FF  3020               	movlw	32
  2414     0100  00F0               	movwf	fputc@c
  2415     0101  3000               	movlw	0
  2416     0102  00F1               	movwf	fputc@c+1
  2417     0103  1283               	bcf	3,5	;RP0=0, select bank0
  2418     0104  1303               	bcf	3,6	;RP1=0, select bank0
  2419     0105  0828               	movf	pad@fp,w
  2420     0106  00F2               	movwf	fputc@fp
  2421     0107  0829               	movf	pad@fp+1,w
  2422     0108  00F3               	movwf	fputc@fp+1
  2423     0109  120A  118A  244B  120A  118A  	fcall	_fputc
  2424     010E                     l1626:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2427     010E  3001               	movlw	1
  2428     010F  1283               	bcf	3,5	;RP0=0, select bank0
  2429     0110  1303               	bcf	3,6	;RP1=0, select bank0
  2430     0111  07AD               	addwf	pad@i,f
  2431     0112  1803               	skipnc
  2432     0113  0AAE               	incf	pad@i+1,f
  2433     0114  3000               	movlw	0
  2434     0115  07AE               	addwf	pad@i+1,f
  2435     0116                     l1628:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2438     0116  082E               	movf	pad@i+1,w
  2439     0117  3A80               	xorlw	128
  2440     0118  00FD               	movwf	??_pad
  2441     0119  082C               	movf	pad@p+1,w
  2442     011A  3A80               	xorlw	128
  2443     011B  027D               	subwf	??_pad,w
  2444     011C  1D03               	skipz
  2445     011D  2920               	goto	u1155
  2446     011E  082B               	movf	pad@p,w
  2447     011F  022D               	subwf	pad@i,w
  2448     0120                     u1155:
  2449     0120  1C03               	skipc
  2450     0121  2923               	goto	u1151
  2451     0122  2924               	goto	u1150
  2452     0123                     u1151:
  2453     0123  28FF               	goto	l1624
  2454     0124                     u1150:
  2455     0124                     l831:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2458     0124  1283               	bcf	3,5	;RP0=0, select bank0
  2459     0125  1303               	bcf	3,6	;RP1=0, select bank0
  2460     0126  1866               	btfsc	_flags,0
  2461     0127  2929               	goto	u1161
  2462     0128  292A               	goto	u1160
  2463     0129                     u1161:
  2464     0129  2935               	goto	l833
  2465     012A                     u1160:
  2466     012A                     l1630:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2469     012A  082A               	movf	pad@buf,w
  2470     012B  00A0               	movwf	fputs@s
  2471     012C  0828               	movf	pad@fp,w
  2472     012D  00A1               	movwf	fputs@fp
  2473     012E  0829               	movf	pad@fp+1,w
  2474     012F  00A2               	movwf	fputs@fp+1
  2475     0130  120A  158A  27A4  120A  118A  	fcall	_fputs
  2476     0135                     l833:
  2477     0135  0008               	return
  2478     0136                     __end_of_pad:
  2479                           
  2480                           	psect	text7
  2481     0FA4                     __ptext7:	
  2482 ;; *************** function _fputs *****************
  2483 ;; Defined at:
  2484 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  2487 ;;		 -> dbuf(32), 
  2488 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  2489 ;;		 -> sprintf@f(11), 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  i               2    6[BANK0 ] int 
  2492 ;;  c               1    5[BANK0 ] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2    0[BANK0 ] int 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       3       0       0       0
  2503 ;;      Locals:         0       3       0       0       0
  2504 ;;      Temps:          0       2       0       0       0
  2505 ;;      Totals:         0       8       0       0       0
  2506 ;;Total ram usage:        8 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 2
  2509 ;; This function calls:
  2510 ;;		_fputc
  2511 ;; This function is called by:
  2512 ;;		_pad
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516     0FA4                     _fputs:	
  2517                           ;psect for function _fputs
  2518                           
  2519     0FA4                     l1542:	
  2520                           ;incstack = 0
  2521 ;; hardware stack exceeded
  2522                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2523                           
  2524     0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  2525     0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  2526     0FA6  01A6               	clrf	fputs@i
  2527     0FA7  01A7               	clrf	fputs@i+1
  2528     0FA8  2FC1               	goto	l1548
  2529     0FA9                     l1544:
  2530     0FA9  0825               	movf	fputs@c,w
  2531     0FAA  00A3               	movwf	??_fputs
  2532     0FAB  01A4               	clrf	??_fputs+1
  2533     0FAC  0823               	movf	??_fputs,w
  2534     0FAD  00F0               	movwf	fputc@c
  2535     0FAE  0824               	movf	??_fputs+1,w
  2536     0FAF  00F1               	movwf	fputc@c+1
  2537     0FB0  0821               	movf	fputs@fp,w
  2538     0FB1  00F2               	movwf	fputc@fp
  2539     0FB2  0822               	movf	fputs@fp+1,w
  2540     0FB3  00F3               	movwf	fputc@fp+1
  2541     0FB4  120A  118A  244B  120A  158A  	fcall	_fputc
  2542     0FB9                     l1546:
  2543     0FB9  3001               	movlw	1
  2544     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2545     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2546     0FBC  07A6               	addwf	fputs@i,f
  2547     0FBD  1803               	skipnc
  2548     0FBE  0AA7               	incf	fputs@i+1,f
  2549     0FBF  3000               	movlw	0
  2550     0FC0  07A7               	addwf	fputs@i+1,f
  2551     0FC1                     l1548:
  2552     0FC1  0826               	movf	fputs@i,w
  2553     0FC2  0720               	addwf	fputs@s,w
  2554     0FC3  00A3               	movwf	??_fputs
  2555     0FC4  0823               	movf	??_fputs,w
  2556     0FC5  0084               	movwf	4
  2557     0FC6  1383               	bcf	3,7	;select IRP bank0
  2558     0FC7  0800               	movf	0,w
  2559     0FC8  00A5               	movwf	fputs@c
  2560     0FC9  0825               	movf	fputs@c,w
  2561     0FCA  1D03               	btfss	3,2
  2562     0FCB  2FCD               	goto	u931
  2563     0FCC  2FCE               	goto	u930
  2564     0FCD                     u931:
  2565     0FCD  2FA9               	goto	l1544
  2566     0FCE                     u930:
  2567     0FCE                     l895:
  2568     0FCE  0008               	return
  2569     0FCF                     __end_of_fputs:
  2570                           
  2571                           	psect	text8
  2572     044B                     __ptext8:	
  2573 ;; *************** function _fputc *****************
  2574 ;; Defined at:
  2575 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  c               2    0[COMMON] int 
  2578 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  2579 ;;		 -> sprintf@f(11), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2    0[COMMON] int 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         4       0       0       0       0
  2592 ;;      Locals:         0       0       0       0       0
  2593 ;;      Temps:          9       0       0       0       0
  2594 ;;      Totals:        13       0       0       0       0
  2595 ;;Total ram usage:       13 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 1
  2598 ;; This function calls:
  2599 ;;		_putch
  2600 ;; This function is called by:
  2601 ;;		_pad
  2602 ;;		_vfpfcnvrt
  2603 ;;		_fputs
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607     044B                     _fputc:	
  2608                           ;psect for function _fputc
  2609                           
  2610     044B                     l1528:	
  2611                           ;incstack = 0
  2612 ;; hardware stack exceeded
  2613                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2614                           
  2615     044B  0872               	movf	fputc@fp,w
  2616     044C  0473               	iorwf	fputc@fp+1,w
  2617     044D  1903               	btfsc	3,2
  2618     044E  2C50               	goto	u881
  2619     044F  2C51               	goto	u880
  2620     0450                     u881:
  2621     0450  2C57               	goto	l1532
  2622     0451                     u880:
  2623     0451                     l1530:
  2624     0451  0872               	movf	fputc@fp,w
  2625     0452  0473               	iorwf	fputc@fp+1,w
  2626     0453  1D03               	btfss	3,2
  2627     0454  2C56               	goto	u891
  2628     0455  2C57               	goto	u890
  2629     0456                     u891:
  2630     0456  2C5E               	goto	l1534
  2631     0457                     u890:
  2632     0457                     l1532:
  2633     0457  0870               	movf	fputc@c,w
  2634     0458  120A  158A  25C7  120A  118A  	fcall	_putch
  2635     045D  2CE4               	goto	l887
  2636     045E                     l1534:
  2637     045E  0872               	movf	fputc@fp,w
  2638     045F  3E09               	addlw	9
  2639     0460  00F4               	movwf	??_fputc
  2640     0461  0873               	movf	fputc@fp+1,w
  2641     0462  1803               	skipnc
  2642     0463  3E01               	addlw	1
  2643     0464  3E00               	addlw	0
  2644     0465  00F5               	movwf	??_fputc+1
  2645     0466  0874               	movf	??_fputc,w
  2646     0467  0084               	movwf	4
  2647     0468  1783               	bsf	3,7
  2648     0469  1C75               	btfss	??_fputc+1,0
  2649     046A  1383               	bcf	3,7
  2650     046B  0800               	movf	0,w
  2651     046C  00F6               	movwf	??_fputc+2
  2652     046D  0A84               	incf	4,f
  2653     046E  0800               	movf	0,w
  2654     046F  00F7               	movwf	??_fputc+3
  2655     0470  0876               	movf	??_fputc+2,w
  2656     0471  0477               	iorwf	??_fputc+3,w
  2657     0472  1903               	btfsc	3,2
  2658     0473  2C75               	goto	u901
  2659     0474  2C76               	goto	u900
  2660     0475                     u901:
  2661     0475  2CA8               	goto	l1538
  2662     0476                     u900:
  2663     0476                     l1536:
  2664     0476  0872               	movf	fputc@fp,w
  2665     0477  3E09               	addlw	9
  2666     0478  00F4               	movwf	??_fputc
  2667     0479  0873               	movf	fputc@fp+1,w
  2668     047A  1803               	skipnc
  2669     047B  3E01               	addlw	1
  2670     047C  3E00               	addlw	0
  2671     047D  00F5               	movwf	??_fputc+1
  2672     047E  0874               	movf	??_fputc,w
  2673     047F  0084               	movwf	4
  2674     0480  1783               	bsf	3,7
  2675     0481  1C75               	btfss	??_fputc+1,0
  2676     0482  1383               	bcf	3,7
  2677     0483  0800               	movf	0,w
  2678     0484  00F6               	movwf	??_fputc+2
  2679     0485  0A84               	incf	4,f
  2680     0486  0800               	movf	0,w
  2681     0487  00F7               	movwf	??_fputc+3
  2682     0488  0872               	movf	fputc@fp,w
  2683     0489  3E02               	addlw	2
  2684     048A  00F8               	movwf	??_fputc+4
  2685     048B  0873               	movf	fputc@fp+1,w
  2686     048C  1803               	skipnc
  2687     048D  3E01               	addlw	1
  2688     048E  3E00               	addlw	0
  2689     048F  00F9               	movwf	??_fputc+5
  2690     0490  0878               	movf	??_fputc+4,w
  2691     0491  0084               	movwf	4
  2692     0492  1783               	bsf	3,7
  2693     0493  1C79               	btfss	??_fputc+5,0
  2694     0494  1383               	bcf	3,7
  2695     0495  0800               	movf	0,w
  2696     0496  00FA               	movwf	??_fputc+6
  2697     0497  0A84               	incf	4,f
  2698     0498  0800               	movf	0,w
  2699     0499  00FB               	movwf	??_fputc+7
  2700     049A  087B               	movf	??_fputc+7,w
  2701     049B  3A80               	xorlw	128
  2702     049C  00FC               	movwf	??_fputc+8
  2703     049D  0877               	movf	??_fputc+3,w
  2704     049E  3A80               	xorlw	128
  2705     049F  027C               	subwf	??_fputc+8,w
  2706     04A0  1D03               	skipz
  2707     04A1  2CA4               	goto	u915
  2708     04A2  0876               	movf	??_fputc+2,w
  2709     04A3  027A               	subwf	??_fputc+6,w
  2710     04A4                     u915:
  2711     04A4  1803               	skipnc
  2712     04A5  2CA7               	goto	u911
  2713     04A6  2CA8               	goto	u910
  2714     04A7                     u911:
  2715     04A7  2CE4               	goto	l887
  2716     04A8                     u910:
  2717     04A8                     l1538:
  2718     04A8  0872               	movf	fputc@fp,w
  2719     04A9  0084               	movwf	4
  2720     04AA  1783               	bsf	3,7
  2721     04AB  1C73               	btfss	fputc@fp+1,0
  2722     04AC  1383               	bcf	3,7
  2723     04AD  0800               	movf	0,w
  2724     04AE  00F4               	movwf	??_fputc
  2725     04AF  0A84               	incf	4,f
  2726     04B0  0800               	movf	0,w
  2727     04B1  00F5               	movwf	??_fputc+1
  2728     04B2  0872               	movf	fputc@fp,w
  2729     04B3  3E02               	addlw	2
  2730     04B4  00F6               	movwf	??_fputc+2
  2731     04B5  0873               	movf	fputc@fp+1,w
  2732     04B6  1803               	skipnc
  2733     04B7  3E01               	addlw	1
  2734     04B8  3E00               	addlw	0
  2735     04B9  00F7               	movwf	??_fputc+3
  2736     04BA  0876               	movf	??_fputc+2,w
  2737     04BB  0084               	movwf	4
  2738     04BC  1783               	bsf	3,7
  2739     04BD  1C77               	btfss	??_fputc+3,0
  2740     04BE  1383               	bcf	3,7
  2741     04BF  0800               	movf	0,w
  2742     04C0  0774               	addwf	??_fputc,w
  2743     04C1  00F9               	movwf	??_fputc+5
  2744     04C2  0875               	movf	??_fputc+1,w
  2745     04C3  00F8               	movwf	??_fputc+4
  2746     04C4  1803               	skipnc
  2747     04C5  0AF8               	incf	??_fputc+4,f
  2748     04C6  1F80               	btfss	0,7
  2749     04C7  2CC9               	goto	u920
  2750     04C8  03F8               	decf	??_fputc+4,f
  2751     04C9                     u920:
  2752     04C9  0878               	movf	??_fputc+4,w
  2753     04CA  00FA               	movwf	??_fputc+6
  2754     04CB  0879               	movf	??_fputc+5,w
  2755     04CC  0084               	movwf	4
  2756     04CD  1783               	bsf	3,7
  2757     04CE  1C7A               	btfss	??_fputc+6,0
  2758     04CF  1383               	bcf	3,7
  2759     04D0  0870               	movf	fputc@c,w
  2760     04D1  0080               	movwf	0
  2761     04D2  0872               	movf	fputc@fp,w
  2762     04D3  3E02               	addlw	2
  2763     04D4  00F4               	movwf	??_fputc
  2764     04D5  0873               	movf	fputc@fp+1,w
  2765     04D6  1803               	skipnc
  2766     04D7  3E01               	addlw	1
  2767     04D8  3E00               	addlw	0
  2768     04D9  00F5               	movwf	??_fputc+1
  2769     04DA  0874               	movf	??_fputc,w
  2770     04DB  0084               	movwf	4
  2771     04DC  1783               	bsf	3,7
  2772     04DD  1C75               	btfss	??_fputc+1,0
  2773     04DE  1383               	bcf	3,7
  2774     04DF  3001               	movlw	1
  2775     04E0  0780               	addwf	0,f
  2776     04E1  0A84               	incf	4,f
  2777     04E2  1803               	skipnc
  2778     04E3  0A80               	incf	0,f
  2779     04E4                     l887:
  2780     04E4  0008               	return
  2781     04E5                     __end_of_fputc:
  2782                           
  2783                           	psect	text9
  2784     0DC7                     __ptext9:	
  2785 ;; *************** function _putch *****************
  2786 ;; Defined at:
  2787 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  c               1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  c               1    0[COMMON] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_fputc
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814     0DC7                     _putch:	
  2815                           ;psect for function _putch
  2816                           
  2817     0DC7                     l898:	
  2818                           ;incstack = 0
  2819 ;; hardware stack exceeded
  2820                           ; Regs used in _putch: [wreg]
  2821                           
  2822     0DC7  0008               	return
  2823     0DC8                     __end_of_putch:
  2824                           
  2825                           	psect	text10
  2826     0016                     __ptext10:	
  2827 ;; *************** function ___lwmod *****************
  2828 ;; Defined at:
  2829 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  divisor         2    0[COMMON] unsigned int 
  2832 ;;  dividend        2    2[COMMON] unsigned int 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  counter         1    4[COMMON] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  2    0[COMMON] unsigned int 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2844 ;;      Params:         4       0       0       0       0
  2845 ;;      Locals:         1       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0
  2847 ;;      Totals:         5       0       0       0       0
  2848 ;;Total ram usage:        5 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_utoa
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857     0016                     ___lwmod:	
  2858                           ;psect for function ___lwmod
  2859                           
  2860     0016                     l1594:	
  2861                           ;incstack = 0
  2862                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2863                           
  2864     0016  0870               	movf	___lwmod@divisor,w
  2865     0017  0471               	iorwf	___lwmod@divisor+1,w
  2866     0018  1903               	btfsc	3,2
  2867     0019  281B               	goto	u1071
  2868     001A  281C               	goto	u1070
  2869     001B                     u1071:
  2870     001B  2849               	goto	l1612
  2871     001C                     u1070:
  2872     001C                     l1596:
  2873     001C  3001               	movlw	1
  2874     001D  00F4               	movwf	___lwmod@counter
  2875     001E  2828               	goto	l1602
  2876     001F                     l1598:
  2877     001F  3001               	movlw	1
  2878     0020                     u1085:
  2879     0020  1003               	clrc
  2880     0021  0DF0               	rlf	___lwmod@divisor,f
  2881     0022  0DF1               	rlf	___lwmod@divisor+1,f
  2882     0023  3EFF               	addlw	-1
  2883     0024  1D03               	skipz
  2884     0025  2820               	goto	u1085
  2885     0026                     l1600:
  2886     0026  3001               	movlw	1
  2887     0027  07F4               	addwf	___lwmod@counter,f
  2888     0028                     l1602:
  2889     0028  1FF1               	btfss	___lwmod@divisor+1,7
  2890     0029  282B               	goto	u1091
  2891     002A  282C               	goto	u1090
  2892     002B                     u1091:
  2893     002B  281F               	goto	l1598
  2894     002C                     u1090:
  2895     002C                     l1604:
  2896     002C  0871               	movf	___lwmod@divisor+1,w
  2897     002D  0273               	subwf	___lwmod@dividend+1,w
  2898     002E  1D03               	skipz
  2899     002F  2832               	goto	u1105
  2900     0030  0870               	movf	___lwmod@divisor,w
  2901     0031  0272               	subwf	___lwmod@dividend,w
  2902     0032                     u1105:
  2903     0032  1C03               	skipc
  2904     0033  2835               	goto	u1101
  2905     0034  2836               	goto	u1100
  2906     0035                     u1101:
  2907     0035  283C               	goto	l1608
  2908     0036                     u1100:
  2909     0036                     l1606:
  2910     0036  0870               	movf	___lwmod@divisor,w
  2911     0037  02F2               	subwf	___lwmod@dividend,f
  2912     0038  0871               	movf	___lwmod@divisor+1,w
  2913     0039  1C03               	skipc
  2914     003A  03F3               	decf	___lwmod@dividend+1,f
  2915     003B  02F3               	subwf	___lwmod@dividend+1,f
  2916     003C                     l1608:
  2917     003C  3001               	movlw	1
  2918     003D                     u1115:
  2919     003D  1003               	clrc
  2920     003E  0CF1               	rrf	___lwmod@divisor+1,f
  2921     003F  0CF0               	rrf	___lwmod@divisor,f
  2922     0040  3EFF               	addlw	-1
  2923     0041  1D03               	skipz
  2924     0042  283D               	goto	u1115
  2925     0043                     l1610:
  2926     0043  3001               	movlw	1
  2927     0044  02F4               	subwf	___lwmod@counter,f
  2928     0045  1D03               	btfss	3,2
  2929     0046  2848               	goto	u1121
  2930     0047  2849               	goto	u1120
  2931     0048                     u1121:
  2932     0048  282C               	goto	l1604
  2933     0049                     u1120:
  2934     0049                     l1612:
  2935     0049  0873               	movf	___lwmod@dividend+1,w
  2936     004A  00F1               	movwf	?___lwmod+1
  2937     004B  0872               	movf	___lwmod@dividend,w
  2938     004C  00F0               	movwf	?___lwmod
  2939     004D                     l637:
  2940     004D  0008               	return
  2941     004E                     __end_of___lwmod:
  2942                           
  2943                           	psect	text11
  2944     004E                     __ptext11:	
  2945 ;; *************** function ___lwdiv *****************
  2946 ;; Defined at:
  2947 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  divisor         2    0[COMMON] unsigned int 
  2950 ;;  dividend        2    2[COMMON] unsigned int 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  quotient        2    4[COMMON] unsigned int 
  2953 ;;  counter         1    6[COMMON] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2    0[COMMON] unsigned int 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         4       0       0       0       0
  2964 ;;      Locals:         3       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         7       0       0       0       0
  2967 ;;Total ram usage:        7 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_utoa
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976     004E                     ___lwdiv:	
  2977                           ;psect for function ___lwdiv
  2978                           
  2979     004E                     l1568:	
  2980                           ;incstack = 0
  2981                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2982                           
  2983     004E  01F4               	clrf	___lwdiv@quotient
  2984     004F  01F5               	clrf	___lwdiv@quotient+1
  2985     0050                     l1570:
  2986     0050  0870               	movf	___lwdiv@divisor,w
  2987     0051  0471               	iorwf	___lwdiv@divisor+1,w
  2988     0052  1903               	btfsc	3,2
  2989     0053  2855               	goto	u1001
  2990     0054  2856               	goto	u1000
  2991     0055                     u1001:
  2992     0055  288B               	goto	l1590
  2993     0056                     u1000:
  2994     0056                     l1572:
  2995     0056  3001               	movlw	1
  2996     0057  00F6               	movwf	___lwdiv@counter
  2997     0058  2862               	goto	l1578
  2998     0059                     l1574:
  2999     0059  3001               	movlw	1
  3000     005A                     u1015:
  3001     005A  1003               	clrc
  3002     005B  0DF0               	rlf	___lwdiv@divisor,f
  3003     005C  0DF1               	rlf	___lwdiv@divisor+1,f
  3004     005D  3EFF               	addlw	-1
  3005     005E  1D03               	skipz
  3006     005F  285A               	goto	u1015
  3007     0060                     l1576:
  3008     0060  3001               	movlw	1
  3009     0061  07F6               	addwf	___lwdiv@counter,f
  3010     0062                     l1578:
  3011     0062  1FF1               	btfss	___lwdiv@divisor+1,7
  3012     0063  2865               	goto	u1021
  3013     0064  2866               	goto	u1020
  3014     0065                     u1021:
  3015     0065  2859               	goto	l1574
  3016     0066                     u1020:
  3017     0066                     l1580:
  3018     0066  3001               	movlw	1
  3019     0067                     u1035:
  3020     0067  1003               	clrc
  3021     0068  0DF4               	rlf	___lwdiv@quotient,f
  3022     0069  0DF5               	rlf	___lwdiv@quotient+1,f
  3023     006A  3EFF               	addlw	-1
  3024     006B  1D03               	skipz
  3025     006C  2867               	goto	u1035
  3026     006D  0871               	movf	___lwdiv@divisor+1,w
  3027     006E  0273               	subwf	___lwdiv@dividend+1,w
  3028     006F  1D03               	skipz
  3029     0070  2873               	goto	u1045
  3030     0071  0870               	movf	___lwdiv@divisor,w
  3031     0072  0272               	subwf	___lwdiv@dividend,w
  3032     0073                     u1045:
  3033     0073  1C03               	skipc
  3034     0074  2876               	goto	u1041
  3035     0075  2877               	goto	u1040
  3036     0076                     u1041:
  3037     0076  287E               	goto	l1586
  3038     0077                     u1040:
  3039     0077                     l1582:
  3040     0077  0870               	movf	___lwdiv@divisor,w
  3041     0078  02F2               	subwf	___lwdiv@dividend,f
  3042     0079  0871               	movf	___lwdiv@divisor+1,w
  3043     007A  1C03               	skipc
  3044     007B  03F3               	decf	___lwdiv@dividend+1,f
  3045     007C  02F3               	subwf	___lwdiv@dividend+1,f
  3046     007D                     l1584:
  3047     007D  1474               	bsf	___lwdiv@quotient,0
  3048     007E                     l1586:
  3049     007E  3001               	movlw	1
  3050     007F                     u1055:
  3051     007F  1003               	clrc
  3052     0080  0CF1               	rrf	___lwdiv@divisor+1,f
  3053     0081  0CF0               	rrf	___lwdiv@divisor,f
  3054     0082  3EFF               	addlw	-1
  3055     0083  1D03               	skipz
  3056     0084  287F               	goto	u1055
  3057     0085                     l1588:
  3058     0085  3001               	movlw	1
  3059     0086  02F6               	subwf	___lwdiv@counter,f
  3060     0087  1D03               	btfss	3,2
  3061     0088  288A               	goto	u1061
  3062     0089  288B               	goto	u1060
  3063     008A                     u1061:
  3064     008A  2866               	goto	l1580
  3065     008B                     u1060:
  3066     008B                     l1590:
  3067     008B  0875               	movf	___lwdiv@quotient+1,w
  3068     008C  00F1               	movwf	?___lwdiv+1
  3069     008D  0874               	movf	___lwdiv@quotient,w
  3070     008E  00F0               	movwf	?___lwdiv
  3071     008F                     l627:
  3072     008F  0008               	return
  3073     0090                     __end_of___lwdiv:
  3074                           
  3075                           	psect	text12
  3076     0090                     __ptext12:	
  3077 ;; *************** function _read_prec_or_width *****************
  3078 ;; Defined at:
  3079 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  3082 ;;		 -> vfprintf@cfmt(1), 
  3083 ;;  ap              1    7[COMMON] PTR PTR void [1]
  3084 ;;		 -> sprintf@ap(1), 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  c               1    8[COMMON] unsigned char 
  3087 ;;  n               2    9[COMMON] int 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  2    6[COMMON] int 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3097 ;;      Params:         2       0       0       0       0
  3098 ;;      Locals:         3       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0
  3100 ;;      Totals:         5       0       0       0       0
  3101 ;;Total ram usage:        5 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 1
  3104 ;; This function calls:
  3105 ;;		___wmul
  3106 ;; This function is called by:
  3107 ;;		_vfpfcnvrt
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111     0090                     _read_prec_or_width:	
  3112                           ;psect for function _read_prec_or_width
  3113                           
  3114     0090                     l1674:	
  3115                           ;incstack = 0
  3116                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3117                           
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3120     0090  01F9               	clrf	read_prec_or_width@n
  3121     0091  01FA               	clrf	read_prec_or_width@n+1
  3122     0092                     l1676:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3125     0092  0876               	movf	read_prec_or_width@fmt,w
  3126     0093  0084               	movwf	4
  3127     0094  1383               	bcf	3,7	;select IRP bank0
  3128     0095  0800               	movf	0,w
  3129     0096  0084               	movwf	4
  3130     0097  120A  158A  200A  120A  118A  	fcall	stringdir
  3131     009C  3A2A               	xorlw	42
  3132     009D  1D03               	skipz
  3133     009E  28A0               	goto	u1231
  3134     009F  28A1               	goto	u1230
  3135     00A0                     u1231:
  3136     00A0  28CD               	goto	l1686
  3137     00A1                     u1230:
  3138     00A1                     l1678:
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3141     00A1  0876               	movf	read_prec_or_width@fmt,w
  3142     00A2  0084               	movwf	4
  3143     00A3  3001               	movlw	1
  3144     00A4  0780               	addwf	0,f
  3145     00A5                     l1680:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3148     00A5  0877               	movf	read_prec_or_width@ap,w
  3149     00A6  0084               	movwf	4
  3150     00A7  0800               	movf	0,w
  3151     00A8  00FF               	movwf	btemp+1
  3152     00A9  3002               	movlw	2
  3153     00AA  0780               	addwf	0,f
  3154     00AB  087F               	movf	btemp+1,w
  3155     00AC  0084               	movwf	4
  3156     00AD  0800               	movf	0,w
  3157     00AE  00F9               	movwf	read_prec_or_width@n
  3158     00AF  0A84               	incf	4,f
  3159     00B0  0800               	movf	0,w
  3160     00B1  00FA               	movwf	read_prec_or_width@n+1
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3163     00B2  28DE               	goto	l1688
  3164     00B3                     l1682:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3167     00B3  087A               	movf	read_prec_or_width@n+1,w
  3168     00B4  00F1               	movwf	___wmul@multiplier+1
  3169     00B5  0879               	movf	read_prec_or_width@n,w
  3170     00B6  00F0               	movwf	___wmul@multiplier
  3171     00B7  300A               	movlw	10
  3172     00B8  00F2               	movwf	___wmul@multiplicand
  3173     00B9  3000               	movlw	0
  3174     00BA  00F3               	movwf	___wmul@multiplicand+1
  3175     00BB  120A  158A  2759  120A  118A  	fcall	___wmul
  3176     00C0  0878               	movf	read_prec_or_width@c,w
  3177     00C1  0770               	addwf	?___wmul,w
  3178     00C2  00F9               	movwf	read_prec_or_width@n
  3179     00C3  3000               	movlw	0
  3180     00C4  1803               	skipnc
  3181     00C5  3001               	movlw	1
  3182     00C6  0771               	addwf	?___wmul+1,w
  3183     00C7  00FA               	movwf	read_prec_or_width@n+1
  3184     00C8                     l1684:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3187     00C8  0876               	movf	read_prec_or_width@fmt,w
  3188     00C9  0084               	movwf	4
  3189     00CA  3001               	movlw	1
  3190     00CB  1383               	bcf	3,7	;select IRP bank0
  3191     00CC  0780               	addwf	0,f
  3192     00CD                     l1686:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3195     00CD  0876               	movf	read_prec_or_width@fmt,w
  3196     00CE  0084               	movwf	4
  3197     00CF  0800               	movf	0,w
  3198     00D0  0084               	movwf	4
  3199     00D1  120A  158A  200A  120A  118A  	fcall	stringdir
  3200     00D6  3ED0               	addlw	208
  3201     00D7  00F8               	movwf	read_prec_or_width@c
  3202     00D8  300A               	movlw	10
  3203     00D9  0278               	subwf	read_prec_or_width@c,w
  3204     00DA  1C03               	skipc
  3205     00DB  28DD               	goto	u1241
  3206     00DC  28DE               	goto	u1240
  3207     00DD                     u1241:
  3208     00DD  28B3               	goto	l1682
  3209     00DE                     u1240:
  3210     00DE                     l1688:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3213     00DE  087A               	movf	read_prec_or_width@n+1,w
  3214     00DF  00F7               	movwf	?_read_prec_or_width+1
  3215     00E0  0879               	movf	read_prec_or_width@n,w
  3216     00E1  00F6               	movwf	?_read_prec_or_width
  3217     00E2                     l851:
  3218     00E2  0008               	return
  3219     00E3                     __end_of_read_prec_or_width:
  3220                           
  3221                           	psect	text13
  3222     0F59                     __ptext13:	
  3223 ;; *************** function ___wmul *****************
  3224 ;; Defined at:
  3225 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  multiplier      2    0[COMMON] unsigned int 
  3228 ;;  multiplicand    2    2[COMMON] unsigned int 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  product         2    4[COMMON] unsigned int 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2    0[COMMON] unsigned int 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3240 ;;      Params:         4       0       0       0       0
  3241 ;;      Locals:         2       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0
  3243 ;;      Totals:         6       0       0       0       0
  3244 ;;Total ram usage:        6 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_read_prec_or_width
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253     0F59                     ___wmul:	
  3254                           ;psect for function ___wmul
  3255                           
  3256     0F59                     l1554:	
  3257                           ;incstack = 0
  3258                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3259                           
  3260     0F59  01F4               	clrf	___wmul@product
  3261     0F5A  01F5               	clrf	___wmul@product+1
  3262     0F5B                     l1556:
  3263     0F5B  1C70               	btfss	___wmul@multiplier,0
  3264     0F5C  2F5E               	goto	u961
  3265     0F5D  2F5F               	goto	u960
  3266     0F5E                     u961:
  3267     0F5E  2F65               	goto	l347
  3268     0F5F                     u960:
  3269     0F5F                     l1558:
  3270     0F5F  0872               	movf	___wmul@multiplicand,w
  3271     0F60  07F4               	addwf	___wmul@product,f
  3272     0F61  1803               	skipnc
  3273     0F62  0AF5               	incf	___wmul@product+1,f
  3274     0F63  0873               	movf	___wmul@multiplicand+1,w
  3275     0F64  07F5               	addwf	___wmul@product+1,f
  3276     0F65                     l347:
  3277     0F65  3001               	movlw	1
  3278     0F66                     u975:
  3279     0F66  1003               	clrc
  3280     0F67  0DF2               	rlf	___wmul@multiplicand,f
  3281     0F68  0DF3               	rlf	___wmul@multiplicand+1,f
  3282     0F69  3EFF               	addlw	-1
  3283     0F6A  1D03               	skipz
  3284     0F6B  2F66               	goto	u975
  3285     0F6C                     l1560:
  3286     0F6C  3001               	movlw	1
  3287     0F6D                     u985:
  3288     0F6D  1003               	clrc
  3289     0F6E  0CF1               	rrf	___wmul@multiplier+1,f
  3290     0F6F  0CF0               	rrf	___wmul@multiplier,f
  3291     0F70  3EFF               	addlw	-1
  3292     0F71  1D03               	skipz
  3293     0F72  2F6D               	goto	u985
  3294     0F73                     l1562:
  3295     0F73  0870               	movf	___wmul@multiplier,w
  3296     0F74  0471               	iorwf	___wmul@multiplier+1,w
  3297     0F75  1D03               	btfss	3,2
  3298     0F76  2F78               	goto	u991
  3299     0F77  2F79               	goto	u990
  3300     0F78                     u991:
  3301     0F78  2F5B               	goto	l1556
  3302     0F79                     u990:
  3303     0F79                     l1564:
  3304     0F79  0875               	movf	___wmul@product+1,w
  3305     0F7A  00F1               	movwf	?___wmul+1
  3306     0F7B  0874               	movf	___wmul@product,w
  3307     0F7C  00F0               	movwf	?___wmul
  3308     0F7D                     l349:
  3309     0F7D  0008               	return
  3310     0F7E                     __end_of___wmul:
  3311                           
  3312                           	psect	text14
  3313     0EAE                     __ptext14:	
  3314 ;; *************** function _blink *****************
  3315 ;; Defined at:
  3316 ;;		line 82 in file "main.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  j               1    2[COMMON] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3330 ;;      Params:         0       0       0       0       0
  3331 ;;      Locals:         1       0       0       0       0
  3332 ;;      Temps:          2       0       0       0       0
  3333 ;;      Totals:         3       0       0       0       0
  3334 ;;Total ram usage:        3 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_edit
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343     0EAE                     _blink:	
  3344                           ;psect for function _blink
  3345                           
  3346     0EAE                     l1912:	
  3347                           ;incstack = 0
  3348                           ; Regs used in _blink: [wreg+status,2+status,0]
  3349                           
  3350                           
  3351                           ;main.c: 83:     uint8_t j = 0;
  3352     0EAE  01F2               	clrf	blink@j
  3353                           
  3354                           ;main.c: 84:     while(j < 10 && PORTBbits.RB0 && PORTBbits.RB1) {
  3355     0EAF  2EBB               	goto	l1918
  3356     0EB0                     l1914:
  3357                           
  3358                           ;main.c: 85:         j++;
  3359     0EB0  3001               	movlw	1
  3360     0EB1  07F2               	addwf	blink@j,f
  3361     0EB2                     l1916:
  3362                           
  3363                           ;main.c: 86:         _delay((unsigned long)((25)*(16000000/4000.0)));
  3364     0EB2  3082               	movlw	130
  3365     0EB3  00F1               	movwf	??_blink+1
  3366     0EB4  30DD               	movlw	221
  3367     0EB5  00F0               	movwf	??_blink
  3368     0EB6                     u1787:
  3369     0EB6  0BF0               	decfsz	??_blink,f
  3370     0EB7  2EB6               	goto	u1787
  3371     0EB8  0BF1               	decfsz	??_blink+1,f
  3372     0EB9  2EB6               	goto	u1787
  3373     0EBA  2EBB               	nop2
  3374     0EBB                     l1918:
  3375                           
  3376                           ;main.c: 84:     while(j < 10 && PORTBbits.RB0 && PORTBbits.RB1) {
  3377     0EBB  300A               	movlw	10
  3378     0EBC  0272               	subwf	blink@j,w
  3379     0EBD  1803               	skipnc
  3380     0EBE  2EC0               	goto	u1561
  3381     0EBF  2EC1               	goto	u1560
  3382     0EC0                     u1561:
  3383     0EC0  2ECB               	goto	l228
  3384     0EC1                     u1560:
  3385     0EC1                     l1920:
  3386     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  3387     0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  3388     0EC3  1C06               	btfss	6,0	;volatile
  3389     0EC4  2EC6               	goto	u1571
  3390     0EC5  2EC7               	goto	u1570
  3391     0EC6                     u1571:
  3392     0EC6  2ECB               	goto	l228
  3393     0EC7                     u1570:
  3394     0EC7                     l1922:
  3395     0EC7  1886               	btfsc	6,1	;volatile
  3396     0EC8  2ECA               	goto	u1581
  3397     0EC9  2ECB               	goto	u1580
  3398     0ECA                     u1581:
  3399     0ECA  2EB0               	goto	l1914
  3400     0ECB                     u1580:
  3401     0ECB                     l228:
  3402     0ECB  0008               	return
  3403     0ECC                     __end_of_blink:
  3404                           
  3405                           	psect	text15
  3406     0254                     __ptext15:	
  3407 ;; *************** function _LCD_Init *****************
  3408 ;; Defined at:
  3409 ;;		line 29 in file "jhd_lcd.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  lcd_addr        1    wreg     unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  lcd_addr        1   10[COMMON] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0, pclath, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       0       0       0       0
  3424 ;;      Locals:         1       0       0       0       0
  3425 ;;      Temps:          3       0       0       0       0
  3426 ;;      Totals:         4       0       0       0       0
  3427 ;;Total ram usage:        4 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 5
  3430 ;; This function calls:
  3431 ;;		_LCD_Clear
  3432 ;;		_LCD_Command
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     0254                     _LCD_Init:	
  3439                           ;psect for function _LCD_Init
  3440                           
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3444                           ;LCD_Init@lcd_addr stored from wreg
  3445     0254  00FA               	movwf	LCD_Init@lcd_addr
  3446     0255                     l1948:
  3447                           
  3448                           ;jhd_lcd.c: 30:     _lcd_addr = lcd_addr;
  3449     0255  087A               	movf	LCD_Init@lcd_addr,w
  3450     0256  1683               	bsf	3,5	;RP0=1, select bank1
  3451     0257  1303               	bcf	3,6	;RP1=0, select bank1
  3452     0258  00E9               	movwf	__lcd_addr^(0+128)
  3453     0259                     l1950:
  3454                           
  3455                           ;jhd_lcd.c: 31:     _initialized = 0;
  3456     0259  01A6               	clrf	__initialized^(0+128)
  3457     025A                     l1952:
  3458                           
  3459                           ;jhd_lcd.c: 32:     _displaycontrol = 0x04 | 0x00 | 0x00;
  3460     025A  3004               	movlw	4
  3461     025B  1283               	bcf	3,5	;RP0=0, select bank0
  3462     025C  1303               	bcf	3,6	;RP1=0, select bank0
  3463     025D  00EF               	movwf	__displaycontrol
  3464     025E                     l1954:
  3465                           
  3466                           ;jhd_lcd.c: 33:     _displaymode = 0x02 | 0x00;
  3467     025E  3002               	movlw	2
  3468     025F  00EE               	movwf	__displaymode
  3469     0260                     l1956:
  3470                           
  3471                           ;jhd_lcd.c: 36:     _delay((unsigned long)((50)*(16000000/4000.0)));
  3472     0260  3002               	movlw	2
  3473     0261  00F9               	movwf	??_LCD_Init+2
  3474     0262  3004               	movlw	4
  3475     0263  00F8               	movwf	??_LCD_Init+1
  3476     0264  30BA               	movlw	186
  3477     0265  00F7               	movwf	??_LCD_Init
  3478     0266                     u1797:
  3479     0266  0BF7               	decfsz	??_LCD_Init,f
  3480     0267  2A66               	goto	u1797
  3481     0268  0BF8               	decfsz	??_LCD_Init+1,f
  3482     0269  2A66               	goto	u1797
  3483     026A  0BF9               	decfsz	??_LCD_Init+2,f
  3484     026B  2A66               	goto	u1797
  3485     026C  0000               	nop
  3486     026D                     l1958:
  3487                           
  3488                           ;jhd_lcd.c: 39:     LCD_Command(0x33);
  3489     026D  3033               	movlw	51
  3490     026E  120A  158A  25F5  120A  118A  	fcall	_LCD_Command
  3491     0273                     l1960:
  3492                           
  3493                           ;jhd_lcd.c: 40:     _delay((unsigned long)((5)*(16000000/4000.0)));
  3494     0273  301A               	movlw	26
  3495     0274  00F8               	movwf	??_LCD_Init+1
  3496     0275  30F8               	movlw	248
  3497     0276  00F7               	movwf	??_LCD_Init
  3498     0277                     u1807:
  3499     0277  0BF7               	decfsz	??_LCD_Init,f
  3500     0278  2A77               	goto	u1807
  3501     0279  0BF8               	decfsz	??_LCD_Init+1,f
  3502     027A  2A77               	goto	u1807
  3503     027B  0000               	nop
  3504     027C                     l1962:
  3505                           
  3506                           ;jhd_lcd.c: 41:     LCD_Command(0x32);
  3507     027C  3032               	movlw	50
  3508     027D  120A  158A  25F5  120A  118A  	fcall	_LCD_Command
  3509     0282                     l1964:
  3510                           
  3511                           ;jhd_lcd.c: 42:     _delay((unsigned long)((5)*(16000000/4000.0)));
  3512     0282  301A               	movlw	26
  3513     0283  00F8               	movwf	??_LCD_Init+1
  3514     0284  30F8               	movlw	248
  3515     0285  00F7               	movwf	??_LCD_Init
  3516     0286                     u1817:
  3517     0286  0BF7               	decfsz	??_LCD_Init,f
  3518     0287  2A86               	goto	u1817
  3519     0288  0BF8               	decfsz	??_LCD_Init+1,f
  3520     0289  2A86               	goto	u1817
  3521     028A  0000               	nop
  3522     028B                     l1966:
  3523                           
  3524                           ;jhd_lcd.c: 45:     LCD_Command(0x20 | 0x08 | 0x00 | 0x00);
  3525     028B  3028               	movlw	40
  3526     028C  120A  158A  25F5  120A  118A  	fcall	_LCD_Command
  3527     0291                     l1968:
  3528                           
  3529                           ;jhd_lcd.c: 46:     _delay((unsigned long)((5)*(16000000/4000.0)));
  3530     0291  301A               	movlw	26
  3531     0292  00F8               	movwf	??_LCD_Init+1
  3532     0293  30F8               	movlw	248
  3533     0294  00F7               	movwf	??_LCD_Init
  3534     0295                     u1827:
  3535     0295  0BF7               	decfsz	??_LCD_Init,f
  3536     0296  2A95               	goto	u1827
  3537     0297  0BF8               	decfsz	??_LCD_Init+1,f
  3538     0298  2A95               	goto	u1827
  3539     0299  0000               	nop
  3540     029A                     l1970:
  3541                           
  3542                           ;jhd_lcd.c: 49:     LCD_Command(0x08 | _displaycontrol);
  3543     029A  1283               	bcf	3,5	;RP0=0, select bank0
  3544     029B  1303               	bcf	3,6	;RP1=0, select bank0
  3545     029C  086F               	movf	__displaycontrol,w
  3546     029D  3808               	iorlw	8
  3547     029E  120A  158A  25F5  120A  118A  	fcall	_LCD_Command
  3548     02A3                     l1972:
  3549                           
  3550                           ;jhd_lcd.c: 50:     _delay((unsigned long)((5)*(16000000/4000.0)));
  3551     02A3  301A               	movlw	26
  3552     02A4  00F8               	movwf	??_LCD_Init+1
  3553     02A5  30F8               	movlw	248
  3554     02A6  00F7               	movwf	??_LCD_Init
  3555     02A7                     u1837:
  3556     02A7  0BF7               	decfsz	??_LCD_Init,f
  3557     02A8  2AA7               	goto	u1837
  3558     02A9  0BF8               	decfsz	??_LCD_Init+1,f
  3559     02AA  2AA7               	goto	u1837
  3560     02AB  0000               	nop
  3561     02AC                     l1974:
  3562                           
  3563                           ;jhd_lcd.c: 53:     LCD_Clear();
  3564     02AC  120A  158A  2641  120A  118A  	fcall	_LCD_Clear
  3565     02B1                     l1976:
  3566                           
  3567                           ;jhd_lcd.c: 56:     LCD_Command(0x04 | _displaymode);
  3568     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3569     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  3570     02B3  086E               	movf	__displaymode,w
  3571     02B4  3804               	iorlw	4
  3572     02B5  120A  158A  25F5  120A  118A  	fcall	_LCD_Command
  3573     02BA                     l1978:
  3574                           
  3575                           ;jhd_lcd.c: 58:     _initialized = 1;
  3576     02BA  3001               	movlw	1
  3577     02BB  1683               	bsf	3,5	;RP0=1, select bank1
  3578     02BC  1303               	bcf	3,6	;RP1=0, select bank1
  3579     02BD  00A6               	movwf	__initialized^(0+128)
  3580     02BE                     l100:
  3581     02BE  0008               	return
  3582     02BF                     __end_of_LCD_Init:
  3583                           
  3584                           	psect	text16
  3585     0E41                     __ptext16:	
  3586 ;; *************** function _LCD_Clear *****************
  3587 ;; Defined at:
  3588 ;;		line 61 in file "jhd_lcd.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, pclath, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0
  3604 ;;      Temps:          2       0       0       0       0
  3605 ;;      Totals:         2       0       0       0       0
  3606 ;;Total ram usage:        2 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; Hardware stack levels required when called: 4
  3609 ;; This function calls:
  3610 ;;		_LCD_Command
  3611 ;; This function is called by:
  3612 ;;		_LCD_Init
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617     0E41                     _LCD_Clear:	
  3618                           ;psect for function _LCD_Clear
  3619                           
  3620     0E41                     l1884:	
  3621                           ;incstack = 0
  3622                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3623                           
  3624                           
  3625                           ;jhd_lcd.c: 62:     LCD_Command(0x01);
  3626     0E41  3001               	movlw	1
  3627     0E42  120A  158A  25F5  120A  158A  	fcall	_LCD_Command
  3628     0E47                     l1886:
  3629                           
  3630                           ;jhd_lcd.c: 63:     _delay((unsigned long)((2)*(16000000/4000.0)));
  3631     0E47  300B               	movlw	11
  3632     0E48  00F6               	movwf	??_LCD_Clear+1
  3633     0E49  3062               	movlw	98
  3634     0E4A  00F5               	movwf	??_LCD_Clear
  3635     0E4B                     u1847:
  3636     0E4B  0BF5               	decfsz	??_LCD_Clear,f
  3637     0E4C  2E4B               	goto	u1847
  3638     0E4D  0BF6               	decfsz	??_LCD_Clear+1,f
  3639     0E4E  2E4B               	goto	u1847
  3640     0E4F  0000               	nop
  3641     0E50                     l103:
  3642     0E50  0008               	return
  3643     0E51                     __end_of_LCD_Clear:
  3644                           
  3645                           	psect	text17
  3646     0E24                     __ptext17:	
  3647 ;; *************** function _I2C_Master_Init *****************
  3648 ;; Defined at:
  3649 ;;		line 5 in file "i2c.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		status,2
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3663 ;;      Params:         0       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0
  3666 ;;      Totals:         0       0       0       0       0
  3667 ;;Total ram usage:        0 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_main
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676     0E24                     _I2C_Master_Init:	
  3677                           ;psect for function _I2C_Master_Init
  3678                           
  3679     0E24                     l1938:	
  3680                           ;incstack = 0
  3681                           ; Regs used in _I2C_Master_Init: [status,2]
  3682                           
  3683                           
  3684                           ;i2c.c: 6:     SSPCON = 0x28;
  3685     0E24  3028               	movlw	40
  3686     0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3687     0E26  1303               	bcf	3,6	;RP1=0, select bank0
  3688     0E27  0094               	movwf	20	;volatile
  3689     0E28                     l1940:
  3690                           
  3691                           ;i2c.c: 7:     SSPCON2 = 0x00;
  3692     0E28  1683               	bsf	3,5	;RP0=1, select bank1
  3693     0E29  1303               	bcf	3,6	;RP1=0, select bank1
  3694     0E2A  0191               	clrf	17	;volatile
  3695                           
  3696                           ;i2c.c: 8:     SSPSTAT = 0x00;
  3697     0E2B  0194               	clrf	20	;volatile
  3698     0E2C                     l1942:
  3699                           
  3700                           ;i2c.c: 9:     SSPADD = ((16000000/4)/100000) - 1;
  3701     0E2C  3027               	movlw	39
  3702     0E2D  0093               	movwf	19	;volatile
  3703     0E2E                     l1944:
  3704                           
  3705                           ;i2c.c: 10:     TRISC3 = 1;
  3706     0E2E  1587               	bsf	7,3	;volatile
  3707     0E2F                     l1946:
  3708                           
  3709                           ;i2c.c: 11:     TRISC4 = 1;
  3710     0E2F  1607               	bsf	7,4	;volatile
  3711     0E30                     l33:
  3712     0E30  0008               	return
  3713     0E31                     __end_of_I2C_Master_Init:
  3714                           
  3715                           	psect	text18
  3716     01F0                     __ptext18:	
  3717 ;; *************** function _DS3231_write *****************
  3718 ;; Defined at:
  3719 ;;		line 131 in file "main.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, pclath, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 2
  3740 ;; This function calls:
  3741 ;;		_I2C_Master_Start
  3742 ;;		_I2C_Master_Stop
  3743 ;;		_I2C_Master_Write
  3744 ;;		_decimal_to_bcd
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750     01F0                     _DS3231_write:	
  3751                           ;psect for function _DS3231_write
  3752                           
  3753     01F0                     l2056:	
  3754                           ;incstack = 0
  3755                           ; Regs used in _DS3231_write: [wreg+status,2+status,0+pclath+cstack]
  3756                           
  3757                           
  3758                           ;main.c: 132:     I2C_Master_Start();
  3759     01F0  120A  158A  25D0  120A  118A  	fcall	_I2C_Master_Start
  3760                           
  3761                           ;main.c: 133:     I2C_Master_Write(0xD0);
  3762     01F5  30D0               	movlw	208
  3763     01F6  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3764                           
  3765                           ;main.c: 134:     I2C_Master_Write(0x00);
  3766     01FB  3000               	movlw	0
  3767     01FC  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3768                           
  3769                           ;main.c: 135:     I2C_Master_Write(0x00);
  3770     0201  3000               	movlw	0
  3771     0202  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3772                           
  3773                           ;main.c: 136:     I2C_Master_Write(decimal_to_bcd(minute));
  3774     0207  1283               	bcf	3,5	;RP0=0, select bank0
  3775     0208  1303               	bcf	3,6	;RP1=0, select bank0
  3776     0209  086B               	movf	_minute,w
  3777     020A  120A  158A  27CF  120A  118A  	fcall	_decimal_to_bcd
  3778     020F  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3779                           
  3780                           ;main.c: 137:     I2C_Master_Write(decimal_to_bcd(hour));
  3781     0214  1283               	bcf	3,5	;RP0=0, select bank0
  3782     0215  1303               	bcf	3,6	;RP1=0, select bank0
  3783     0216  086A               	movf	_hour,w
  3784     0217  120A  158A  27CF  120A  118A  	fcall	_decimal_to_bcd
  3785     021C  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3786                           
  3787                           ;main.c: 138:     I2C_Master_Write(1);
  3788     0221  3001               	movlw	1
  3789     0222  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3790                           
  3791                           ;main.c: 139:     I2C_Master_Write(decimal_to_bcd(date));
  3792     0227  1283               	bcf	3,5	;RP0=0, select bank0
  3793     0228  1303               	bcf	3,6	;RP1=0, select bank0
  3794     0229  0869               	movf	_date,w
  3795     022A  120A  158A  27CF  120A  118A  	fcall	_decimal_to_bcd
  3796     022F  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3797                           
  3798                           ;main.c: 140:     I2C_Master_Write(decimal_to_bcd(month));
  3799     0234  1283               	bcf	3,5	;RP0=0, select bank0
  3800     0235  1303               	bcf	3,6	;RP1=0, select bank0
  3801     0236  0868               	movf	_month,w
  3802     0237  120A  158A  27CF  120A  118A  	fcall	_decimal_to_bcd
  3803     023C  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3804                           
  3805                           ;main.c: 141:     I2C_Master_Write(decimal_to_bcd(year));
  3806     0241  1283               	bcf	3,5	;RP0=0, select bank0
  3807     0242  1303               	bcf	3,6	;RP1=0, select bank0
  3808     0243  0867               	movf	_year,w
  3809     0244  120A  158A  27CF  120A  118A  	fcall	_decimal_to_bcd
  3810     0249  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3811                           
  3812                           ;main.c: 142:     I2C_Master_Stop();
  3813     024E  120A  158A  25D9  120A  118A  	fcall	_I2C_Master_Stop
  3814     0253                     l249:
  3815     0253  0008               	return
  3816     0254                     __end_of_DS3231_write:
  3817                           
  3818                           	psect	text19
  3819     0FCF                     __ptext19:	
  3820 ;; *************** function _decimal_to_bcd *****************
  3821 ;; Defined at:
  3822 ;;		line 44 in file "main.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  decimal         1    wreg     unsigned char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  decimal         1   12[COMMON] unsigned char 
  3827 ;;  ones            1   11[COMMON] unsigned char 
  3828 ;;  tens            1   10[COMMON] unsigned char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      unsigned char 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         0       0       0       0       0
  3839 ;;      Locals:         3       0       0       0       0
  3840 ;;      Temps:          2       0       0       0       0
  3841 ;;      Totals:         5       0       0       0       0
  3842 ;;Total ram usage:        5 bytes
  3843 ;; Hardware stack levels used: 1
  3844 ;; Hardware stack levels required when called: 1
  3845 ;; This function calls:
  3846 ;;		___awdiv
  3847 ;;		___awmod
  3848 ;; This function is called by:
  3849 ;;		_DS3231_write
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853     0FCF                     _decimal_to_bcd:	
  3854                           ;psect for function _decimal_to_bcd
  3855                           
  3856                           
  3857                           ;incstack = 0
  3858                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  3859                           ;decimal_to_bcd@decimal stored from wreg
  3860     0FCF  00FC               	movwf	decimal_to_bcd@decimal
  3861     0FD0                     l1906:
  3862                           
  3863                           ;main.c: 45:     uint8_t tens = decimal / 10;
  3864     0FD0  300A               	movlw	10
  3865     0FD1  00F0               	movwf	___awdiv@divisor
  3866     0FD2  3000               	movlw	0
  3867     0FD3  00F1               	movwf	___awdiv@divisor+1
  3868     0FD4  087C               	movf	decimal_to_bcd@decimal,w
  3869     0FD5  00F8               	movwf	??_decimal_to_bcd
  3870     0FD6  01F9               	clrf	??_decimal_to_bcd+1
  3871     0FD7  0878               	movf	??_decimal_to_bcd,w
  3872     0FD8  00F2               	movwf	___awdiv@dividend
  3873     0FD9  0879               	movf	??_decimal_to_bcd+1,w
  3874     0FDA  00F3               	movwf	___awdiv@dividend+1
  3875     0FDB  120A  118A  218D  120A  158A  	fcall	___awdiv
  3876     0FE0  0870               	movf	?___awdiv,w
  3877     0FE1  00FA               	movwf	decimal_to_bcd@tens
  3878                           
  3879                           ;main.c: 46:     uint8_t ones = decimal % 10;
  3880     0FE2  300A               	movlw	10
  3881     0FE3  00F0               	movwf	___awmod@divisor
  3882     0FE4  3000               	movlw	0
  3883     0FE5  00F1               	movwf	___awmod@divisor+1
  3884     0FE6  087C               	movf	decimal_to_bcd@decimal,w
  3885     0FE7  00F8               	movwf	??_decimal_to_bcd
  3886     0FE8  01F9               	clrf	??_decimal_to_bcd+1
  3887     0FE9  0878               	movf	??_decimal_to_bcd,w
  3888     0FEA  00F2               	movwf	___awmod@dividend
  3889     0FEB  0879               	movf	??_decimal_to_bcd+1,w
  3890     0FEC  00F3               	movwf	___awmod@dividend+1
  3891     0FED  120A  118A  2136  120A  158A  	fcall	___awmod
  3892     0FF2  0870               	movf	?___awmod,w
  3893     0FF3  00FB               	movwf	decimal_to_bcd@ones
  3894     0FF4                     l1908:
  3895                           
  3896                           ;main.c: 47:     return ((tens << 4) | ones);
  3897     0FF4  087A               	movf	decimal_to_bcd@tens,w
  3898     0FF5  00F8               	movwf	??_decimal_to_bcd
  3899     0FF6  3003               	movlw	3
  3900     0FF7                     u1555:
  3901     0FF7  1003               	clrc
  3902     0FF8  0DF8               	rlf	??_decimal_to_bcd,f
  3903     0FF9  3EFF               	addlw	-1
  3904     0FFA  1D03               	skipz
  3905     0FFB  2FF7               	goto	u1555
  3906     0FFC  1003               	clrc
  3907     0FFD  0D78               	rlf	??_decimal_to_bcd,w
  3908     0FFE  047B               	iorwf	decimal_to_bcd@ones,w
  3909     0FFF                     l217:
  3910     0FFF  0008               	return
  3911     1000                     __end_of_decimal_to_bcd:
  3912                           
  3913                           	psect	text20
  3914     02BF                     __ptext20:	
  3915 ;; *************** function _DS3231_read *****************
  3916 ;; Defined at:
  3917 ;;		line 145 in file "main.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 2
  3938 ;; This function calls:
  3939 ;;		_I2C_ACK
  3940 ;;		_I2C_Master_RepeatedStart
  3941 ;;		_I2C_Master_Start
  3942 ;;		_I2C_Master_Stop
  3943 ;;		_I2C_Master_Write
  3944 ;;		_I2C_NACK
  3945 ;;		_I2C_Read_Byte
  3946 ;; This function is called by:
  3947 ;;		_main
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951     02BF                     _DS3231_read:	
  3952                           ;psect for function _DS3231_read
  3953                           
  3954     02BF                     l2058:	
  3955                           ;incstack = 0
  3956                           ; Regs used in _DS3231_read: [wreg+status,2+status,0+pclath+cstack]
  3957                           
  3958                           
  3959                           ;main.c: 146:     I2C_Master_Start();
  3960     02BF  120A  158A  25D0  120A  118A  	fcall	_I2C_Master_Start
  3961                           
  3962                           ;main.c: 147:     I2C_Master_Write(0xD0);
  3963     02C4  30D0               	movlw	208
  3964     02C5  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3965                           
  3966                           ;main.c: 148:     I2C_Master_Write(0x00);
  3967     02CA  3000               	movlw	0
  3968     02CB  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3969                           
  3970                           ;main.c: 150:     I2C_Master_RepeatedStart();
  3971     02D0  120A  158A  25E2  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3972                           
  3973                           ;main.c: 151:     I2C_Master_Write(0xD0 | 0x01);
  3974     02D5  30D1               	movlw	209
  3975     02D6  120A  158A  2631  120A  118A  	fcall	_I2C_Master_Write
  3976                           
  3977                           ;main.c: 153:     second = I2C_Read_Byte(); I2C_ACK();
  3978     02DB  120A  158A  267A  120A  118A  	fcall	_I2C_Read_Byte
  3979     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3980     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3981     02E2  00EC               	movwf	_second
  3982     02E3  120A  158A  25FF  120A  118A  	fcall	_I2C_ACK
  3983                           
  3984                           ;main.c: 154:     minute = I2C_Read_Byte(); I2C_ACK();
  3985     02E8  120A  158A  267A  120A  118A  	fcall	_I2C_Read_Byte
  3986     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3987     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  3988     02EF  00EB               	movwf	_minute
  3989     02F0  120A  158A  25FF  120A  118A  	fcall	_I2C_ACK
  3990                           
  3991                           ;main.c: 155:     hour = I2C_Read_Byte(); I2C_ACK();
  3992     02F5  120A  158A  267A  120A  118A  	fcall	_I2C_Read_Byte
  3993     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3994     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3995     02FC  00EA               	movwf	_hour
  3996     02FD  120A  158A  25FF  120A  118A  	fcall	_I2C_ACK
  3997                           
  3998                           ;main.c: 156:     I2C_Read_Byte(); I2C_ACK();
  3999     0302  120A  158A  267A  120A  118A  	fcall	_I2C_Read_Byte
  4000     0307  120A  158A  25FF  120A  118A  	fcall	_I2C_ACK
  4001                           
  4002                           ;main.c: 157:     date = I2C_Read_Byte(); I2C_ACK();
  4003     030C  120A  158A  267A  120A  118A  	fcall	_I2C_Read_Byte
  4004     0311  1283               	bcf	3,5	;RP0=0, select bank0
  4005     0312  1303               	bcf	3,6	;RP1=0, select bank0
  4006     0313  00E9               	movwf	_date
  4007     0314  120A  158A  25FF  120A  118A  	fcall	_I2C_ACK
  4008                           
  4009                           ;main.c: 158:     month = I2C_Read_Byte(); I2C_ACK();
  4010     0319  120A  158A  267A  120A  118A  	fcall	_I2C_Read_Byte
  4011     031E  1283               	bcf	3,5	;RP0=0, select bank0
  4012     031F  1303               	bcf	3,6	;RP1=0, select bank0
  4013     0320  00E8               	movwf	_month
  4014     0321  120A  158A  25FF  120A  118A  	fcall	_I2C_ACK
  4015                           
  4016                           ;main.c: 159:     year = I2C_Read_Byte(); I2C_NACK();
  4017     0326  120A  158A  267A  120A  118A  	fcall	_I2C_Read_Byte
  4018     032B  1283               	bcf	3,5	;RP0=0, select bank0
  4019     032C  1303               	bcf	3,6	;RP1=0, select bank0
  4020     032D  00E7               	movwf	_year
  4021     032E  120A  158A  260B  120A  118A  	fcall	_I2C_NACK
  4022                           
  4023                           ;main.c: 161:     I2C_Master_Stop();
  4024     0333  120A  158A  25D9  120A  118A  	fcall	_I2C_Master_Stop
  4025     0338                     l252:
  4026     0338  0008               	return
  4027     0339                     __end_of_DS3231_read:
  4028                           
  4029                           	psect	text21
  4030     0E7A                     __ptext21:	
  4031 ;; *************** function _I2C_Read_Byte *****************
  4032 ;; Defined at:
  4033 ;;		line 53 in file "i2c.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      unsigned char 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4047 ;;      Params:         0       0       0       0       0
  4048 ;;      Locals:         0       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0
  4050 ;;      Totals:         0       0       0       0       0
  4051 ;;Total ram usage:        0 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; Hardware stack levels required when called: 1
  4054 ;; This function calls:
  4055 ;;		_I2C_Master_Wait
  4056 ;; This function is called by:
  4057 ;;		_DS3231_read
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061     0E7A                     _I2C_Read_Byte:	
  4062                           ;psect for function _I2C_Read_Byte
  4063                           
  4064     0E7A                     l1874:	
  4065                           ;incstack = 0
  4066                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  4067                           
  4068                           
  4069                           ;i2c.c: 54:     I2C_Master_Wait();
  4070     0E7A  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  4071     0E7F                     l1876:
  4072                           
  4073                           ;i2c.c: 55:     RCEN = 1;
  4074     0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  4075     0E80  1303               	bcf	3,6	;RP1=0, select bank1
  4076     0E81  1591               	bsf	17,3	;volatile
  4077     0E82                     l63:	
  4078                           ;i2c.c: 56:     while(!SSPIF);
  4079                           
  4080     0E82  1283               	bcf	3,5	;RP0=0, select bank0
  4081     0E83  1D8C               	btfss	12,3	;volatile
  4082     0E84  2E86               	goto	u1511
  4083     0E85  2E87               	goto	u1510
  4084     0E86                     u1511:
  4085     0E86  2E82               	goto	l63
  4086     0E87                     u1510:
  4087     0E87                     l65:
  4088                           
  4089                           ;i2c.c: 57:     SSPIF = 0;
  4090     0E87  118C               	bcf	12,3	;volatile
  4091     0E88                     l1878:
  4092                           
  4093                           ;i2c.c: 58:     I2C_Master_Wait();
  4094     0E88  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  4095     0E8D                     l1880:
  4096                           
  4097                           ;i2c.c: 59:     return SSPBUF;
  4098     0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  4099     0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  4100     0E8F  0813               	movf	19,w	;volatile
  4101     0E90                     l66:
  4102     0E90  0008               	return
  4103     0E91                     __end_of_I2C_Read_Byte:
  4104                           
  4105                           	psect	text22
  4106     0E0B                     __ptext22:	
  4107 ;; *************** function _I2C_NACK *****************
  4108 ;; Defined at:
  4109 ;;		line 39 in file "i2c.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0, pclath, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4123 ;;      Params:         0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0
  4126 ;;      Totals:         0       0       0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 1
  4130 ;; This function calls:
  4131 ;;		_I2C_Master_Wait
  4132 ;; This function is called by:
  4133 ;;		_DS3231_read
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137     0E0B                     _I2C_NACK:	
  4138                           ;psect for function _I2C_NACK
  4139                           
  4140     0E0B                     l1868:	
  4141                           ;incstack = 0
  4142                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  4143                           
  4144                           
  4145                           ;i2c.c: 40:     ACKDT = 1;
  4146     0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  4147     0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  4148     0E0D  1691               	bsf	17,5	;volatile
  4149     0E0E                     l1870:
  4150                           
  4151                           ;i2c.c: 41:     I2C_Master_Wait();
  4152     0E0E  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  4153     0E13                     l1872:
  4154                           
  4155                           ;i2c.c: 42:     ACKEN = 1;
  4156     0E13  1683               	bsf	3,5	;RP0=1, select bank1
  4157     0E14  1303               	bcf	3,6	;RP1=0, select bank1
  4158     0E15  1611               	bsf	17,4	;volatile
  4159     0E16                     l54:
  4160     0E16  0008               	return
  4161     0E17                     __end_of_I2C_NACK:
  4162                           
  4163                           	psect	text23
  4164     0DE2                     __ptext23:	
  4165 ;; *************** function _I2C_Master_RepeatedStart *****************
  4166 ;; Defined at:
  4167 ;;		line 23 in file "i2c.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4181 ;;      Params:         0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0
  4184 ;;      Totals:         0       0       0       0       0
  4185 ;;Total ram usage:        0 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 1
  4188 ;; This function calls:
  4189 ;;		_I2C_Master_Wait
  4190 ;; This function is called by:
  4191 ;;		_DS3231_read
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195     0DE2                     _I2C_Master_RepeatedStart:	
  4196                           ;psect for function _I2C_Master_RepeatedStart
  4197                           
  4198     0DE2                     l1858:	
  4199                           ;incstack = 0
  4200                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4201                           
  4202                           
  4203                           ;i2c.c: 24:     I2C_Master_Wait();
  4204     0DE2  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  4205     0DE7                     l1860:
  4206                           
  4207                           ;i2c.c: 25:     RSEN = 1;
  4208     0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  4209     0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  4210     0DE9  1491               	bsf	17,1	;volatile
  4211     0DEA                     l45:
  4212     0DEA  0008               	return
  4213     0DEB                     __end_of_I2C_Master_RepeatedStart:
  4214                           
  4215                           	psect	text24
  4216     0DFF                     __ptext24:	
  4217 ;; *************** function _I2C_ACK *****************
  4218 ;; Defined at:
  4219 ;;		line 33 in file "i2c.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0
  4236 ;;      Totals:         0       0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 1
  4240 ;; This function calls:
  4241 ;;		_I2C_Master_Wait
  4242 ;; This function is called by:
  4243 ;;		_DS3231_read
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     0DFF                     _I2C_ACK:	
  4248                           ;psect for function _I2C_ACK
  4249                           
  4250     0DFF                     l1862:	
  4251                           ;incstack = 0
  4252                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  4253                           
  4254                           
  4255                           ;i2c.c: 34:     ACKDT = 0;
  4256     0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  4257     0E00  1303               	bcf	3,6	;RP1=0, select bank1
  4258     0E01  1291               	bcf	17,5	;volatile
  4259     0E02                     l1864:
  4260                           
  4261                           ;i2c.c: 35:     I2C_Master_Wait();
  4262     0E02  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  4263     0E07                     l1866:
  4264                           
  4265                           ;i2c.c: 36:     ACKEN = 1;
  4266     0E07  1683               	bsf	3,5	;RP0=1, select bank1
  4267     0E08  1303               	bcf	3,6	;RP1=0, select bank1
  4268     0E09  1611               	bsf	17,4	;volatile
  4269     0E0A                     l51:
  4270     0E0A  0008               	return
  4271     0E0B                     __end_of_I2C_ACK:
  4272                           
  4273                           	psect	text25
  4274     0672                     __ptext25:	
  4275 ;; *************** function _DS3231_display *****************
  4276 ;; Defined at:
  4277 ;;		line 50 in file "main.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4291 ;;      Params:         0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0
  4293 ;;      Temps:          2       0       0       0       0
  4294 ;;      Totals:         2       0       0       0       0
  4295 ;;Total ram usage:        2 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 5
  4298 ;; This function calls:
  4299 ;;		_LCD_Print_String
  4300 ;;		_LCD_SetCursor
  4301 ;;		___awdiv
  4302 ;;		___awmod
  4303 ;;		_bcd_to_decimal
  4304 ;; This function is called by:
  4305 ;;		_main
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309     0672                     _DS3231_display:	
  4310                           ;psect for function _DS3231_display
  4311                           
  4312     0672                     l1980:	
  4313                           ;incstack = 0
  4314                           ; Regs used in _DS3231_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4315                           
  4316                           
  4317                           ;main.c: 52:     second = bcd_to_decimal(second);
  4318     0672  1283               	bcf	3,5	;RP0=0, select bank0
  4319     0673  1303               	bcf	3,6	;RP1=0, select bank0
  4320     0674  086C               	movf	_second,w
  4321     0675  120A  158A  2664  120A  118A  	fcall	_bcd_to_decimal
  4322     067A  1283               	bcf	3,5	;RP0=0, select bank0
  4323     067B  1303               	bcf	3,6	;RP1=0, select bank0
  4324     067C  00EC               	movwf	_second
  4325                           
  4326                           ;main.c: 53:     minute = bcd_to_decimal(minute);
  4327     067D  086B               	movf	_minute,w
  4328     067E  120A  158A  2664  120A  118A  	fcall	_bcd_to_decimal
  4329     0683  1283               	bcf	3,5	;RP0=0, select bank0
  4330     0684  1303               	bcf	3,6	;RP1=0, select bank0
  4331     0685  00EB               	movwf	_minute
  4332                           
  4333                           ;main.c: 54:     hour = bcd_to_decimal(hour);
  4334     0686  086A               	movf	_hour,w
  4335     0687  120A  158A  2664  120A  118A  	fcall	_bcd_to_decimal
  4336     068C  1283               	bcf	3,5	;RP0=0, select bank0
  4337     068D  1303               	bcf	3,6	;RP1=0, select bank0
  4338     068E  00EA               	movwf	_hour
  4339                           
  4340                           ;main.c: 55:     date = bcd_to_decimal(date);
  4341     068F  0869               	movf	_date,w
  4342     0690  120A  158A  2664  120A  118A  	fcall	_bcd_to_decimal
  4343     0695  1283               	bcf	3,5	;RP0=0, select bank0
  4344     0696  1303               	bcf	3,6	;RP1=0, select bank0
  4345     0697  00E9               	movwf	_date
  4346                           
  4347                           ;main.c: 56:     month = bcd_to_decimal(month);
  4348     0698  0868               	movf	_month,w
  4349     0699  120A  158A  2664  120A  118A  	fcall	_bcd_to_decimal
  4350     069E  1283               	bcf	3,5	;RP0=0, select bank0
  4351     069F  1303               	bcf	3,6	;RP1=0, select bank0
  4352     06A0  00E8               	movwf	_month
  4353                           
  4354                           ;main.c: 57:     year = bcd_to_decimal(year);
  4355     06A1  0867               	movf	_year,w
  4356     06A2  120A  158A  2664  120A  118A  	fcall	_bcd_to_decimal
  4357     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  4358     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  4359     06A9  00E7               	movwf	_year
  4360                           
  4361                           ;main.c: 60:     time[12] = second % 10 + '0';
  4362     06AA  300A               	movlw	10
  4363     06AB  00F0               	movwf	___awmod@divisor
  4364     06AC  3000               	movlw	0
  4365     06AD  00F1               	movwf	___awmod@divisor+1
  4366     06AE  086C               	movf	_second,w
  4367     06AF  00FB               	movwf	??_DS3231_display
  4368     06B0  01FC               	clrf	??_DS3231_display+1
  4369     06B1  087B               	movf	??_DS3231_display,w
  4370     06B2  00F2               	movwf	___awmod@dividend
  4371     06B3  087C               	movf	??_DS3231_display+1,w
  4372     06B4  00F3               	movwf	___awmod@dividend+1
  4373     06B5  120A  118A  2136  120A  118A  	fcall	___awmod
  4374     06BA  0870               	movf	?___awmod,w
  4375     06BB  3E30               	addlw	48
  4376     06BC  1683               	bsf	3,5	;RP0=1, select bank1
  4377     06BD  1303               	bcf	3,6	;RP1=0, select bank1
  4378     06BE  00E7               	movwf	(_time^(0+128)+12)
  4379                           
  4380                           ;main.c: 61:     time[11] = second / 10 + '0';
  4381     06BF  300A               	movlw	10
  4382     06C0  00F0               	movwf	___awdiv@divisor
  4383     06C1  3000               	movlw	0
  4384     06C2  00F1               	movwf	___awdiv@divisor+1
  4385     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  4386     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  4387     06C5  086C               	movf	_second,w
  4388     06C6  00FB               	movwf	??_DS3231_display
  4389     06C7  01FC               	clrf	??_DS3231_display+1
  4390     06C8  087B               	movf	??_DS3231_display,w
  4391     06C9  00F2               	movwf	___awdiv@dividend
  4392     06CA  087C               	movf	??_DS3231_display+1,w
  4393     06CB  00F3               	movwf	___awdiv@dividend+1
  4394     06CC  120A  118A  218D  120A  118A  	fcall	___awdiv
  4395     06D1  0870               	movf	?___awdiv,w
  4396     06D2  3E30               	addlw	48
  4397     06D3  1683               	bsf	3,5	;RP0=1, select bank1
  4398     06D4  1303               	bcf	3,6	;RP1=0, select bank1
  4399     06D5  00E6               	movwf	(_time^(0+128)+11)
  4400                           
  4401                           ;main.c: 62:     time[9] = minute % 10 + '0';
  4402     06D6  300A               	movlw	10
  4403     06D7  00F0               	movwf	___awmod@divisor
  4404     06D8  3000               	movlw	0
  4405     06D9  00F1               	movwf	___awmod@divisor+1
  4406     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  4407     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  4408     06DC  086B               	movf	_minute,w
  4409     06DD  00FB               	movwf	??_DS3231_display
  4410     06DE  01FC               	clrf	??_DS3231_display+1
  4411     06DF  087B               	movf	??_DS3231_display,w
  4412     06E0  00F2               	movwf	___awmod@dividend
  4413     06E1  087C               	movf	??_DS3231_display+1,w
  4414     06E2  00F3               	movwf	___awmod@dividend+1
  4415     06E3  120A  118A  2136  120A  118A  	fcall	___awmod
  4416     06E8  0870               	movf	?___awmod,w
  4417     06E9  3E30               	addlw	48
  4418     06EA  1683               	bsf	3,5	;RP0=1, select bank1
  4419     06EB  1303               	bcf	3,6	;RP1=0, select bank1
  4420     06EC  00E4               	movwf	(_time^(0+128)+9)
  4421                           
  4422                           ;main.c: 63:     time[8] = minute / 10 + '0';
  4423     06ED  300A               	movlw	10
  4424     06EE  00F0               	movwf	___awdiv@divisor
  4425     06EF  3000               	movlw	0
  4426     06F0  00F1               	movwf	___awdiv@divisor+1
  4427     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  4428     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  4429     06F3  086B               	movf	_minute,w
  4430     06F4  00FB               	movwf	??_DS3231_display
  4431     06F5  01FC               	clrf	??_DS3231_display+1
  4432     06F6  087B               	movf	??_DS3231_display,w
  4433     06F7  00F2               	movwf	___awdiv@dividend
  4434     06F8  087C               	movf	??_DS3231_display+1,w
  4435     06F9  00F3               	movwf	___awdiv@dividend+1
  4436     06FA  120A  118A  218D  120A  118A  	fcall	___awdiv
  4437     06FF  0870               	movf	?___awdiv,w
  4438     0700  3E30               	addlw	48
  4439     0701  1683               	bsf	3,5	;RP0=1, select bank1
  4440     0702  1303               	bcf	3,6	;RP1=0, select bank1
  4441     0703  00E3               	movwf	(_time^(0+128)+8)
  4442                           
  4443                           ;main.c: 64:     time[6] = hour % 10 + '0';
  4444     0704  300A               	movlw	10
  4445     0705  00F0               	movwf	___awmod@divisor
  4446     0706  3000               	movlw	0
  4447     0707  00F1               	movwf	___awmod@divisor+1
  4448     0708  1283               	bcf	3,5	;RP0=0, select bank0
  4449     0709  1303               	bcf	3,6	;RP1=0, select bank0
  4450     070A  086A               	movf	_hour,w
  4451     070B  00FB               	movwf	??_DS3231_display
  4452     070C  01FC               	clrf	??_DS3231_display+1
  4453     070D  087B               	movf	??_DS3231_display,w
  4454     070E  00F2               	movwf	___awmod@dividend
  4455     070F  087C               	movf	??_DS3231_display+1,w
  4456     0710  00F3               	movwf	___awmod@dividend+1
  4457     0711  120A  118A  2136  120A  118A  	fcall	___awmod
  4458     0716  0870               	movf	?___awmod,w
  4459     0717  3E30               	addlw	48
  4460     0718  1683               	bsf	3,5	;RP0=1, select bank1
  4461     0719  1303               	bcf	3,6	;RP1=0, select bank1
  4462     071A  00E1               	movwf	(_time^(0+128)+6)
  4463                           
  4464                           ;main.c: 65:     time[5] = hour / 10 + '0';
  4465     071B  300A               	movlw	10
  4466     071C  00F0               	movwf	___awdiv@divisor
  4467     071D  3000               	movlw	0
  4468     071E  00F1               	movwf	___awdiv@divisor+1
  4469     071F  1283               	bcf	3,5	;RP0=0, select bank0
  4470     0720  1303               	bcf	3,6	;RP1=0, select bank0
  4471     0721  086A               	movf	_hour,w
  4472     0722  00FB               	movwf	??_DS3231_display
  4473     0723  01FC               	clrf	??_DS3231_display+1
  4474     0724  087B               	movf	??_DS3231_display,w
  4475     0725  00F2               	movwf	___awdiv@dividend
  4476     0726  087C               	movf	??_DS3231_display+1,w
  4477     0727  00F3               	movwf	___awdiv@dividend+1
  4478     0728  120A  118A  218D  120A  118A  	fcall	___awdiv
  4479     072D  0870               	movf	?___awdiv,w
  4480     072E  3E30               	addlw	48
  4481     072F  1683               	bsf	3,5	;RP0=1, select bank1
  4482     0730  1303               	bcf	3,6	;RP1=0, select bank1
  4483     0731  00E0               	movwf	(_time^(0+128)+5)
  4484                           
  4485                           ;main.c: 68:     calendar[14] = year % 10 + '0';
  4486     0732  300A               	movlw	10
  4487     0733  00F0               	movwf	___awmod@divisor
  4488     0734  3000               	movlw	0
  4489     0735  00F1               	movwf	___awmod@divisor+1
  4490     0736  1283               	bcf	3,5	;RP0=0, select bank0
  4491     0737  1303               	bcf	3,6	;RP1=0, select bank0
  4492     0738  0867               	movf	_year,w
  4493     0739  00FB               	movwf	??_DS3231_display
  4494     073A  01FC               	clrf	??_DS3231_display+1
  4495     073B  087B               	movf	??_DS3231_display,w
  4496     073C  00F2               	movwf	___awmod@dividend
  4497     073D  087C               	movf	??_DS3231_display+1,w
  4498     073E  00F3               	movwf	___awmod@dividend+1
  4499     073F  120A  118A  2136  120A  118A  	fcall	___awmod
  4500     0744  0870               	movf	?___awmod,w
  4501     0745  3E30               	addlw	48
  4502     0746  1683               	bsf	3,5	;RP0=1, select bank1
  4503     0747  1303               	bcf	3,6	;RP1=0, select bank1
  4504     0748  00D9               	movwf	(_calendar^(0+128)+14)
  4505                           
  4506                           ;main.c: 69:     calendar[13] = year / 10 + '0';
  4507     0749  300A               	movlw	10
  4508     074A  00F0               	movwf	___awdiv@divisor
  4509     074B  3000               	movlw	0
  4510     074C  00F1               	movwf	___awdiv@divisor+1
  4511     074D  1283               	bcf	3,5	;RP0=0, select bank0
  4512     074E  1303               	bcf	3,6	;RP1=0, select bank0
  4513     074F  0867               	movf	_year,w
  4514     0750  00FB               	movwf	??_DS3231_display
  4515     0751  01FC               	clrf	??_DS3231_display+1
  4516     0752  087B               	movf	??_DS3231_display,w
  4517     0753  00F2               	movwf	___awdiv@dividend
  4518     0754  087C               	movf	??_DS3231_display+1,w
  4519     0755  00F3               	movwf	___awdiv@dividend+1
  4520     0756  120A  118A  218D  120A  118A  	fcall	___awdiv
  4521     075B  0870               	movf	?___awdiv,w
  4522     075C  3E30               	addlw	48
  4523     075D  1683               	bsf	3,5	;RP0=1, select bank1
  4524     075E  1303               	bcf	3,6	;RP1=0, select bank1
  4525     075F  00D8               	movwf	(_calendar^(0+128)+13)
  4526                           
  4527                           ;main.c: 70:     calendar[9] = month % 10 + '0';
  4528     0760  300A               	movlw	10
  4529     0761  00F0               	movwf	___awmod@divisor
  4530     0762  3000               	movlw	0
  4531     0763  00F1               	movwf	___awmod@divisor+1
  4532     0764  1283               	bcf	3,5	;RP0=0, select bank0
  4533     0765  1303               	bcf	3,6	;RP1=0, select bank0
  4534     0766  0868               	movf	_month,w
  4535     0767  00FB               	movwf	??_DS3231_display
  4536     0768  01FC               	clrf	??_DS3231_display+1
  4537     0769  087B               	movf	??_DS3231_display,w
  4538     076A  00F2               	movwf	___awmod@dividend
  4539     076B  087C               	movf	??_DS3231_display+1,w
  4540     076C  00F3               	movwf	___awmod@dividend+1
  4541     076D  120A  118A  2136  120A  118A  	fcall	___awmod
  4542     0772  0870               	movf	?___awmod,w
  4543     0773  3E30               	addlw	48
  4544     0774  1683               	bsf	3,5	;RP0=1, select bank1
  4545     0775  1303               	bcf	3,6	;RP1=0, select bank1
  4546     0776  00D4               	movwf	(_calendar^(0+128)+9)
  4547                           
  4548                           ;main.c: 71:     calendar[8] = month / 10 + '0';
  4549     0777  300A               	movlw	10
  4550     0778  00F0               	movwf	___awdiv@divisor
  4551     0779  3000               	movlw	0
  4552     077A  00F1               	movwf	___awdiv@divisor+1
  4553     077B  1283               	bcf	3,5	;RP0=0, select bank0
  4554     077C  1303               	bcf	3,6	;RP1=0, select bank0
  4555     077D  0868               	movf	_month,w
  4556     077E  00FB               	movwf	??_DS3231_display
  4557     077F  01FC               	clrf	??_DS3231_display+1
  4558     0780  087B               	movf	??_DS3231_display,w
  4559     0781  00F2               	movwf	___awdiv@dividend
  4560     0782  087C               	movf	??_DS3231_display+1,w
  4561     0783  00F3               	movwf	___awdiv@dividend+1
  4562     0784  120A  118A  218D  120A  118A  	fcall	___awdiv
  4563     0789  0870               	movf	?___awdiv,w
  4564     078A  3E30               	addlw	48
  4565     078B  1683               	bsf	3,5	;RP0=1, select bank1
  4566     078C  1303               	bcf	3,6	;RP1=0, select bank1
  4567     078D  00D3               	movwf	(_calendar^(0+128)+8)
  4568                           
  4569                           ;main.c: 72:     calendar[6] = date % 10 + '0';
  4570     078E  300A               	movlw	10
  4571     078F  00F0               	movwf	___awmod@divisor
  4572     0790  3000               	movlw	0
  4573     0791  00F1               	movwf	___awmod@divisor+1
  4574     0792  1283               	bcf	3,5	;RP0=0, select bank0
  4575     0793  1303               	bcf	3,6	;RP1=0, select bank0
  4576     0794  0869               	movf	_date,w
  4577     0795  00FB               	movwf	??_DS3231_display
  4578     0796  01FC               	clrf	??_DS3231_display+1
  4579     0797  087B               	movf	??_DS3231_display,w
  4580     0798  00F2               	movwf	___awmod@dividend
  4581     0799  087C               	movf	??_DS3231_display+1,w
  4582     079A  00F3               	movwf	___awmod@dividend+1
  4583     079B  120A  118A  2136  120A  118A  	fcall	___awmod
  4584     07A0  0870               	movf	?___awmod,w
  4585     07A1  3E30               	addlw	48
  4586     07A2  1683               	bsf	3,5	;RP0=1, select bank1
  4587     07A3  1303               	bcf	3,6	;RP1=0, select bank1
  4588     07A4  00D1               	movwf	(_calendar^(0+128)+6)
  4589                           
  4590                           ;main.c: 73:     calendar[5] = date / 10 + '0';
  4591     07A5  300A               	movlw	10
  4592     07A6  00F0               	movwf	___awdiv@divisor
  4593     07A7  3000               	movlw	0
  4594     07A8  00F1               	movwf	___awdiv@divisor+1
  4595     07A9  1283               	bcf	3,5	;RP0=0, select bank0
  4596     07AA  1303               	bcf	3,6	;RP1=0, select bank0
  4597     07AB  0869               	movf	_date,w
  4598     07AC  00FB               	movwf	??_DS3231_display
  4599     07AD  01FC               	clrf	??_DS3231_display+1
  4600     07AE  087B               	movf	??_DS3231_display,w
  4601     07AF  00F2               	movwf	___awdiv@dividend
  4602     07B0  087C               	movf	??_DS3231_display+1,w
  4603     07B1  00F3               	movwf	___awdiv@dividend+1
  4604     07B2  120A  118A  218D  120A  118A  	fcall	___awdiv
  4605     07B7  0870               	movf	?___awdiv,w
  4606     07B8  3E30               	addlw	48
  4607     07B9  1683               	bsf	3,5	;RP0=1, select bank1
  4608     07BA  1303               	bcf	3,6	;RP1=0, select bank1
  4609     07BB  00D0               	movwf	(_calendar^(0+128)+5)
  4610     07BC                     l1982:
  4611                           
  4612                           ;main.c: 76:     LCD_SetCursor(0, 0);
  4613     07BC  01F5               	clrf	LCD_SetCursor@row
  4614     07BD  3000               	movlw	0
  4615     07BE  120A  158A  2691  120A  118A  	fcall	_LCD_SetCursor
  4616     07C3                     l1984:
  4617                           
  4618                           ;main.c: 77:     LCD_Print_String(time);
  4619     07C3  30DB               	movlw	(low (_time| 0))& (0+255)
  4620     07C4  00F5               	movwf	LCD_Print_String@str
  4621     07C5  3000               	movlw	0
  4622     07C6  00F6               	movwf	LCD_Print_String@str+1
  4623     07C7  120A  158A  277E  120A  118A  	fcall	_LCD_Print_String
  4624     07CC                     l1986:
  4625                           
  4626                           ;main.c: 78:     LCD_SetCursor(0, 1);
  4627     07CC  01F5               	clrf	LCD_SetCursor@row
  4628     07CD  0AF5               	incf	LCD_SetCursor@row,f
  4629     07CE  3000               	movlw	0
  4630     07CF  120A  158A  2691  120A  118A  	fcall	_LCD_SetCursor
  4631     07D4                     l1988:
  4632                           
  4633                           ;main.c: 79:     LCD_Print_String(calendar);
  4634     07D4  30CB               	movlw	(low (_calendar| 0))& (0+255)
  4635     07D5  00F5               	movwf	LCD_Print_String@str
  4636     07D6  3000               	movlw	0
  4637     07D7  00F6               	movwf	LCD_Print_String@str+1
  4638     07D8  120A  158A  277E  120A  118A  	fcall	_LCD_Print_String
  4639     07DD                     l220:
  4640     07DD  0008               	return
  4641     07DE                     __end_of_DS3231_display:
  4642                           
  4643                           	psect	text26
  4644     0E64                     __ptext26:	
  4645 ;; *************** function _bcd_to_decimal *****************
  4646 ;; Defined at:
  4647 ;;		line 39 in file "main.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  bcd             1    wreg     unsigned char 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  bcd             1    5[COMMON] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      unsigned char 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       0       0       0
  4662 ;;      Locals:         1       0       0       0       0
  4663 ;;      Temps:          2       0       0       0       0
  4664 ;;      Totals:         3       0       0       0       0
  4665 ;;Total ram usage:        3 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: 1
  4668 ;; This function calls:
  4669 ;;		___bmul
  4670 ;; This function is called by:
  4671 ;;		_DS3231_display
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675     0E64                     _bcd_to_decimal:	
  4676                           ;psect for function _bcd_to_decimal
  4677                           
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  4681                           ;bcd_to_decimal@bcd stored from wreg
  4682     0E64  00F5               	movwf	bcd_to_decimal@bcd
  4683     0E65                     l1902:
  4684                           
  4685                           ;main.c: 40:     return ((bcd >> 4) * 10 + (bcd & 0x0F));
  4686     0E65  300F               	movlw	15
  4687     0E66  0575               	andwf	bcd_to_decimal@bcd,w
  4688     0E67  00F3               	movwf	??_bcd_to_decimal
  4689     0E68  300A               	movlw	10
  4690     0E69  00F0               	movwf	___bmul@multiplicand
  4691     0E6A  0875               	movf	bcd_to_decimal@bcd,w
  4692     0E6B  00F4               	movwf	??_bcd_to_decimal+1
  4693     0E6C  3004               	movlw	4
  4694     0E6D                     u1545:
  4695     0E6D  1003               	clrc
  4696     0E6E  0CF4               	rrf	??_bcd_to_decimal+1,f
  4697     0E6F  3EFF               	addlw	-1
  4698     0E70  1D03               	skipz
  4699     0E71  2E6D               	goto	u1545
  4700     0E72  0874               	movf	??_bcd_to_decimal+1,w
  4701     0E73  120A  158A  2651  120A  158A  	fcall	___bmul
  4702     0E78  0773               	addwf	??_bcd_to_decimal,w
  4703     0E79                     l214:
  4704     0E79  0008               	return
  4705     0E7A                     __end_of_bcd_to_decimal:
  4706                           
  4707                           	psect	text27
  4708     0E51                     __ptext27:	
  4709 ;; *************** function ___bmul *****************
  4710 ;; Defined at:
  4711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  multiplier      1    wreg     unsigned char 
  4714 ;;  multiplicand    1    0[COMMON] unsigned char 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  multiplier      1    2[COMMON] unsigned char 
  4717 ;;  product         1    1[COMMON] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      unsigned char 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4727 ;;      Params:         1       0       0       0       0
  4728 ;;      Locals:         2       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0
  4730 ;;      Totals:         3       0       0       0       0
  4731 ;;Total ram usage:        3 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_bcd_to_decimal
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740     0E51                     ___bmul:	
  4741                           ;psect for function ___bmul
  4742                           
  4743                           
  4744                           ;incstack = 0
  4745                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4746                           ;___bmul@multiplier stored from wreg
  4747     0E51  00F2               	movwf	___bmul@multiplier
  4748     0E52                     l1752:
  4749     0E52  01F1               	clrf	___bmul@product
  4750     0E53                     l1754:
  4751     0E53  1C72               	btfss	___bmul@multiplier,0
  4752     0E54  2E56               	goto	u1291
  4753     0E55  2E57               	goto	u1290
  4754     0E56                     u1291:
  4755     0E56  2E59               	goto	l1758
  4756     0E57                     u1290:
  4757     0E57                     l1756:
  4758     0E57  0870               	movf	___bmul@multiplicand,w
  4759     0E58  07F1               	addwf	___bmul@product,f
  4760     0E59                     l1758:
  4761     0E59  1003               	clrc
  4762     0E5A  0DF0               	rlf	___bmul@multiplicand,f
  4763     0E5B                     l1760:
  4764     0E5B  1003               	clrc
  4765     0E5C  0CF2               	rrf	___bmul@multiplier,f
  4766     0E5D  0872               	movf	___bmul@multiplier,w
  4767     0E5E  1D03               	btfss	3,2
  4768     0E5F  2E61               	goto	u1301
  4769     0E60  2E62               	goto	u1300
  4770     0E61                     u1301:
  4771     0E61  2E53               	goto	l1754
  4772     0E62                     u1300:
  4773     0E62                     l1762:
  4774     0E62  0871               	movf	___bmul@product,w
  4775     0E63                     l373:
  4776     0E63  0008               	return
  4777     0E64                     __end_of___bmul:
  4778                           
  4779                           	psect	text28
  4780     0136                     __ptext28:	
  4781 ;; *************** function ___awmod *****************
  4782 ;; Defined at:
  4783 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  divisor         2    0[COMMON] int 
  4786 ;;  dividend        2    2[COMMON] int 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  sign            1    5[COMMON] unsigned char 
  4789 ;;  counter         1    4[COMMON] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  2    0[COMMON] int 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4799 ;;      Params:         4       0       0       0       0
  4800 ;;      Locals:         2       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0
  4802 ;;      Totals:         6       0       0       0       0
  4803 ;;Total ram usage:        6 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_decimal_to_bcd
  4809 ;;		_DS3231_display
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813     0136                     ___awmod:	
  4814                           ;psect for function ___awmod
  4815                           
  4816     0136                     l1810:	
  4817                           ;incstack = 0
  4818                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4819                           
  4820     0136  01F5               	clrf	___awmod@sign
  4821     0137                     l1812:
  4822     0137  1FF3               	btfss	___awmod@dividend+1,7
  4823     0138  293A               	goto	u1411
  4824     0139  293B               	goto	u1410
  4825     013A                     u1411:
  4826     013A  2942               	goto	l1818
  4827     013B                     u1410:
  4828     013B                     l1814:
  4829     013B  09F2               	comf	___awmod@dividend,f
  4830     013C  09F3               	comf	___awmod@dividend+1,f
  4831     013D  0AF2               	incf	___awmod@dividend,f
  4832     013E  1903               	skipnz
  4833     013F  0AF3               	incf	___awmod@dividend+1,f
  4834     0140                     l1816:
  4835     0140  3001               	movlw	1
  4836     0141  00F5               	movwf	___awmod@sign
  4837     0142                     l1818:
  4838     0142  1FF1               	btfss	___awmod@divisor+1,7
  4839     0143  2945               	goto	u1421
  4840     0144  2946               	goto	u1420
  4841     0145                     u1421:
  4842     0145  294B               	goto	l1822
  4843     0146                     u1420:
  4844     0146                     l1820:
  4845     0146  09F0               	comf	___awmod@divisor,f
  4846     0147  09F1               	comf	___awmod@divisor+1,f
  4847     0148  0AF0               	incf	___awmod@divisor,f
  4848     0149  1903               	skipnz
  4849     014A  0AF1               	incf	___awmod@divisor+1,f
  4850     014B                     l1822:
  4851     014B  0870               	movf	___awmod@divisor,w
  4852     014C  0471               	iorwf	___awmod@divisor+1,w
  4853     014D  1903               	btfsc	3,2
  4854     014E  2950               	goto	u1431
  4855     014F  2951               	goto	u1430
  4856     0150                     u1431:
  4857     0150  297E               	goto	l1840
  4858     0151                     u1430:
  4859     0151                     l1824:
  4860     0151  3001               	movlw	1
  4861     0152  00F4               	movwf	___awmod@counter
  4862     0153  295D               	goto	l1830
  4863     0154                     l1826:
  4864     0154  3001               	movlw	1
  4865     0155                     u1445:
  4866     0155  1003               	clrc
  4867     0156  0DF0               	rlf	___awmod@divisor,f
  4868     0157  0DF1               	rlf	___awmod@divisor+1,f
  4869     0158  3EFF               	addlw	-1
  4870     0159  1D03               	skipz
  4871     015A  2955               	goto	u1445
  4872     015B                     l1828:
  4873     015B  3001               	movlw	1
  4874     015C  07F4               	addwf	___awmod@counter,f
  4875     015D                     l1830:
  4876     015D  1FF1               	btfss	___awmod@divisor+1,7
  4877     015E  2960               	goto	u1451
  4878     015F  2961               	goto	u1450
  4879     0160                     u1451:
  4880     0160  2954               	goto	l1826
  4881     0161                     u1450:
  4882     0161                     l1832:
  4883     0161  0871               	movf	___awmod@divisor+1,w
  4884     0162  0273               	subwf	___awmod@dividend+1,w
  4885     0163  1D03               	skipz
  4886     0164  2967               	goto	u1465
  4887     0165  0870               	movf	___awmod@divisor,w
  4888     0166  0272               	subwf	___awmod@dividend,w
  4889     0167                     u1465:
  4890     0167  1C03               	skipc
  4891     0168  296A               	goto	u1461
  4892     0169  296B               	goto	u1460
  4893     016A                     u1461:
  4894     016A  2971               	goto	l1836
  4895     016B                     u1460:
  4896     016B                     l1834:
  4897     016B  0870               	movf	___awmod@divisor,w
  4898     016C  02F2               	subwf	___awmod@dividend,f
  4899     016D  0871               	movf	___awmod@divisor+1,w
  4900     016E  1C03               	skipc
  4901     016F  03F3               	decf	___awmod@dividend+1,f
  4902     0170  02F3               	subwf	___awmod@dividend+1,f
  4903     0171                     l1836:
  4904     0171  3001               	movlw	1
  4905     0172                     u1475:
  4906     0172  1003               	clrc
  4907     0173  0CF1               	rrf	___awmod@divisor+1,f
  4908     0174  0CF0               	rrf	___awmod@divisor,f
  4909     0175  3EFF               	addlw	-1
  4910     0176  1D03               	skipz
  4911     0177  2972               	goto	u1475
  4912     0178                     l1838:
  4913     0178  3001               	movlw	1
  4914     0179  02F4               	subwf	___awmod@counter,f
  4915     017A  1D03               	btfss	3,2
  4916     017B  297D               	goto	u1481
  4917     017C  297E               	goto	u1480
  4918     017D                     u1481:
  4919     017D  2961               	goto	l1832
  4920     017E                     u1480:
  4921     017E                     l1840:
  4922     017E  0875               	movf	___awmod@sign,w
  4923     017F  1903               	btfsc	3,2
  4924     0180  2982               	goto	u1491
  4925     0181  2983               	goto	u1490
  4926     0182                     u1491:
  4927     0182  2988               	goto	l1844
  4928     0183                     u1490:
  4929     0183                     l1842:
  4930     0183  09F2               	comf	___awmod@dividend,f
  4931     0184  09F3               	comf	___awmod@dividend+1,f
  4932     0185  0AF2               	incf	___awmod@dividend,f
  4933     0186  1903               	skipnz
  4934     0187  0AF3               	incf	___awmod@dividend+1,f
  4935     0188                     l1844:
  4936     0188  0873               	movf	___awmod@dividend+1,w
  4937     0189  00F1               	movwf	?___awmod+1
  4938     018A  0872               	movf	___awmod@dividend,w
  4939     018B  00F0               	movwf	?___awmod
  4940     018C                     l513:
  4941     018C  0008               	return
  4942     018D                     __end_of___awmod:
  4943                           
  4944                           	psect	text29
  4945     018D                     __ptext29:	
  4946 ;; *************** function ___awdiv *****************
  4947 ;; Defined at:
  4948 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  divisor         2    0[COMMON] int 
  4951 ;;  dividend        2    2[COMMON] int 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  quotient        2    6[COMMON] int 
  4954 ;;  sign            1    5[COMMON] unsigned char 
  4955 ;;  counter         1    4[COMMON] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  2    0[COMMON] int 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4965 ;;      Params:         4       0       0       0       0
  4966 ;;      Locals:         4       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0
  4968 ;;      Totals:         8       0       0       0       0
  4969 ;;Total ram usage:        8 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_decimal_to_bcd
  4975 ;;		_DS3231_display
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979     018D                     ___awdiv:	
  4980                           ;psect for function ___awdiv
  4981                           
  4982     018D                     l1766:	
  4983                           ;incstack = 0
  4984                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4985                           
  4986     018D  01F5               	clrf	___awdiv@sign
  4987     018E                     l1768:
  4988     018E  1FF1               	btfss	___awdiv@divisor+1,7
  4989     018F  2991               	goto	u1311
  4990     0190  2992               	goto	u1310
  4991     0191                     u1311:
  4992     0191  2999               	goto	l1774
  4993     0192                     u1310:
  4994     0192                     l1770:
  4995     0192  09F0               	comf	___awdiv@divisor,f
  4996     0193  09F1               	comf	___awdiv@divisor+1,f
  4997     0194  0AF0               	incf	___awdiv@divisor,f
  4998     0195  1903               	skipnz
  4999     0196  0AF1               	incf	___awdiv@divisor+1,f
  5000     0197                     l1772:
  5001     0197  3001               	movlw	1
  5002     0198  00F5               	movwf	___awdiv@sign
  5003     0199                     l1774:
  5004     0199  1FF3               	btfss	___awdiv@dividend+1,7
  5005     019A  299C               	goto	u1321
  5006     019B  299D               	goto	u1320
  5007     019C                     u1321:
  5008     019C  29A4               	goto	l1780
  5009     019D                     u1320:
  5010     019D                     l1776:
  5011     019D  09F2               	comf	___awdiv@dividend,f
  5012     019E  09F3               	comf	___awdiv@dividend+1,f
  5013     019F  0AF2               	incf	___awdiv@dividend,f
  5014     01A0  1903               	skipnz
  5015     01A1  0AF3               	incf	___awdiv@dividend+1,f
  5016     01A2                     l1778:
  5017     01A2  3001               	movlw	1
  5018     01A3  06F5               	xorwf	___awdiv@sign,f
  5019     01A4                     l1780:
  5020     01A4  01F6               	clrf	___awdiv@quotient
  5021     01A5  01F7               	clrf	___awdiv@quotient+1
  5022     01A6                     l1782:
  5023     01A6  0870               	movf	___awdiv@divisor,w
  5024     01A7  0471               	iorwf	___awdiv@divisor+1,w
  5025     01A8  1903               	btfsc	3,2
  5026     01A9  29AB               	goto	u1331
  5027     01AA  29AC               	goto	u1330
  5028     01AB                     u1331:
  5029     01AB  29E1               	goto	l1802
  5030     01AC                     u1330:
  5031     01AC                     l1784:
  5032     01AC  3001               	movlw	1
  5033     01AD  00F4               	movwf	___awdiv@counter
  5034     01AE  29B8               	goto	l1790
  5035     01AF                     l1786:
  5036     01AF  3001               	movlw	1
  5037     01B0                     u1345:
  5038     01B0  1003               	clrc
  5039     01B1  0DF0               	rlf	___awdiv@divisor,f
  5040     01B2  0DF1               	rlf	___awdiv@divisor+1,f
  5041     01B3  3EFF               	addlw	-1
  5042     01B4  1D03               	skipz
  5043     01B5  29B0               	goto	u1345
  5044     01B6                     l1788:
  5045     01B6  3001               	movlw	1
  5046     01B7  07F4               	addwf	___awdiv@counter,f
  5047     01B8                     l1790:
  5048     01B8  1FF1               	btfss	___awdiv@divisor+1,7
  5049     01B9  29BB               	goto	u1351
  5050     01BA  29BC               	goto	u1350
  5051     01BB                     u1351:
  5052     01BB  29AF               	goto	l1786
  5053     01BC                     u1350:
  5054     01BC                     l1792:
  5055     01BC  3001               	movlw	1
  5056     01BD                     u1365:
  5057     01BD  1003               	clrc
  5058     01BE  0DF6               	rlf	___awdiv@quotient,f
  5059     01BF  0DF7               	rlf	___awdiv@quotient+1,f
  5060     01C0  3EFF               	addlw	-1
  5061     01C1  1D03               	skipz
  5062     01C2  29BD               	goto	u1365
  5063     01C3  0871               	movf	___awdiv@divisor+1,w
  5064     01C4  0273               	subwf	___awdiv@dividend+1,w
  5065     01C5  1D03               	skipz
  5066     01C6  29C9               	goto	u1375
  5067     01C7  0870               	movf	___awdiv@divisor,w
  5068     01C8  0272               	subwf	___awdiv@dividend,w
  5069     01C9                     u1375:
  5070     01C9  1C03               	skipc
  5071     01CA  29CC               	goto	u1371
  5072     01CB  29CD               	goto	u1370
  5073     01CC                     u1371:
  5074     01CC  29D4               	goto	l1798
  5075     01CD                     u1370:
  5076     01CD                     l1794:
  5077     01CD  0870               	movf	___awdiv@divisor,w
  5078     01CE  02F2               	subwf	___awdiv@dividend,f
  5079     01CF  0871               	movf	___awdiv@divisor+1,w
  5080     01D0  1C03               	skipc
  5081     01D1  03F3               	decf	___awdiv@dividend+1,f
  5082     01D2  02F3               	subwf	___awdiv@dividend+1,f
  5083     01D3                     l1796:
  5084     01D3  1476               	bsf	___awdiv@quotient,0
  5085     01D4                     l1798:
  5086     01D4  3001               	movlw	1
  5087     01D5                     u1385:
  5088     01D5  1003               	clrc
  5089     01D6  0CF1               	rrf	___awdiv@divisor+1,f
  5090     01D7  0CF0               	rrf	___awdiv@divisor,f
  5091     01D8  3EFF               	addlw	-1
  5092     01D9  1D03               	skipz
  5093     01DA  29D5               	goto	u1385
  5094     01DB                     l1800:
  5095     01DB  3001               	movlw	1
  5096     01DC  02F4               	subwf	___awdiv@counter,f
  5097     01DD  1D03               	btfss	3,2
  5098     01DE  29E0               	goto	u1391
  5099     01DF  29E1               	goto	u1390
  5100     01E0                     u1391:
  5101     01E0  29BC               	goto	l1792
  5102     01E1                     u1390:
  5103     01E1                     l1802:
  5104     01E1  0875               	movf	___awdiv@sign,w
  5105     01E2  1903               	btfsc	3,2
  5106     01E3  29E5               	goto	u1401
  5107     01E4  29E6               	goto	u1400
  5108     01E5                     u1401:
  5109     01E5  29EB               	goto	l1806
  5110     01E6                     u1400:
  5111     01E6                     l1804:
  5112     01E6  09F6               	comf	___awdiv@quotient,f
  5113     01E7  09F7               	comf	___awdiv@quotient+1,f
  5114     01E8  0AF6               	incf	___awdiv@quotient,f
  5115     01E9  1903               	skipnz
  5116     01EA  0AF7               	incf	___awdiv@quotient+1,f
  5117     01EB                     l1806:
  5118     01EB  0877               	movf	___awdiv@quotient+1,w
  5119     01EC  00F1               	movwf	?___awdiv+1
  5120     01ED  0876               	movf	___awdiv@quotient,w
  5121     01EE  00F0               	movwf	?___awdiv
  5122     01EF                     l500:
  5123     01EF  0008               	return
  5124     01F0                     __end_of___awdiv:
  5125                           
  5126                           	psect	text30
  5127     0E91                     __ptext30:	
  5128 ;; *************** function _LCD_SetCursor *****************
  5129 ;; Defined at:
  5130 ;;		line 138 in file "jhd_lcd.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  col             1    wreg     unsigned char 
  5133 ;;  row             1    5[COMMON] unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  col             1   10[COMMON] unsigned char 
  5136 ;;  row_offsets     4    6[COMMON] unsigned char [4]
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5146 ;;      Params:         1       0       0       0       0
  5147 ;;      Locals:         5       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0
  5149 ;;      Totals:         6       0       0       0       0
  5150 ;;Total ram usage:        6 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 4
  5153 ;; This function calls:
  5154 ;;		_LCD_Command
  5155 ;; This function is called by:
  5156 ;;		_DS3231_display
  5157 ;;		_edit
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161     0E91                     _LCD_SetCursor:	
  5162                           ;psect for function _LCD_SetCursor
  5163                           
  5164                           
  5165                           ;incstack = 0
  5166                           ; Regs used in _LCD_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5167                           ;LCD_SetCursor@col stored from wreg
  5168     0E91  00FA               	movwf	LCD_SetCursor@col
  5169     0E92                     l1888:
  5170                           
  5171                           ;jhd_lcd.c: 139:     unsigned char row_offsets[] = {0x80, 0xC0, 0x94, 0xD4};
  5172     0E92  1683               	bsf	3,5	;RP0=1, select bank1
  5173     0E93  1303               	bcf	3,6	;RP1=0, select bank1
  5174     0E94  084A               	movf	(LCD_SetCursor@F1080+3)^(0+128),w
  5175     0E95  00F9               	movwf	LCD_SetCursor@row_offsets+3
  5176     0E96  0849               	movf	(LCD_SetCursor@F1080+2)^(0+128),w
  5177     0E97  00F8               	movwf	LCD_SetCursor@row_offsets+2
  5178     0E98  0848               	movf	(LCD_SetCursor@F1080+1)^(0+128),w
  5179     0E99  00F7               	movwf	LCD_SetCursor@row_offsets+1
  5180     0E9A  0847               	movf	LCD_SetCursor@F1080^(0+128),w
  5181     0E9B  00F6               	movwf	LCD_SetCursor@row_offsets
  5182                           
  5183                           ;jhd_lcd.c: 141:     if (row >= 4) {
  5184     0E9C  3004               	movlw	4
  5185     0E9D  0275               	subwf	LCD_SetCursor@row,w
  5186     0E9E  1C03               	skipc
  5187     0E9F  2EA1               	goto	u1521
  5188     0EA0  2EA2               	goto	u1520
  5189     0EA1                     u1521:
  5190     0EA1  2EA3               	goto	l1892
  5191     0EA2                     u1520:
  5192     0EA2                     l1890:
  5193                           
  5194                           ;jhd_lcd.c: 142:         row = 0;
  5195     0EA2  01F5               	clrf	LCD_SetCursor@row
  5196     0EA3                     l1892:
  5197                           
  5198                           ;jhd_lcd.c: 145:     LCD_Command(row_offsets[row] + col);
  5199     0EA3  0875               	movf	LCD_SetCursor@row,w
  5200     0EA4  3E76               	addlw	(low (LCD_SetCursor@row_offsets| 0))& (0+255)
  5201     0EA5  0084               	movwf	4
  5202     0EA6  087A               	movf	LCD_SetCursor@col,w
  5203     0EA7  0700               	addwf	0,w
  5204     0EA8  120A  158A  25F5  120A  158A  	fcall	_LCD_Command
  5205     0EAD                     l153:
  5206     0EAD  0008               	return
  5207     0EAE                     __end_of_LCD_SetCursor:
  5208                           
  5209                           	psect	text31
  5210     0DF5                     __ptext31:	
  5211 ;; *************** function _LCD_Command *****************
  5212 ;; Defined at:
  5213 ;;		line 21 in file "jhd_lcd.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  cmd             1    wreg     unsigned char 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  cmd             1    4[COMMON] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0, pclath, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5227 ;;      Params:         0       0       0       0       0
  5228 ;;      Locals:         1       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0
  5230 ;;      Totals:         1       0       0       0       0
  5231 ;;Total ram usage:        1 bytes
  5232 ;; Hardware stack levels used: 1
  5233 ;; Hardware stack levels required when called: 3
  5234 ;; This function calls:
  5235 ;;		_LCD_Send
  5236 ;; This function is called by:
  5237 ;;		_LCD_Init
  5238 ;;		_LCD_Clear
  5239 ;;		_LCD_SetCursor
  5240 ;;		_LCD_Home
  5241 ;;		_LCD_Display_ON
  5242 ;;		_LCD_Display_OFF
  5243 ;;		_LCD_Cursor_ON
  5244 ;;		_LCD_Cursor_OFF
  5245 ;;		_LCD_Blink_ON
  5246 ;;		_LCD_Blink_OFF
  5247 ;;		_LCD_ScrollDisplayLeft
  5248 ;;		_LCD_ScrollDisplayRight
  5249 ;;		_LCD_LeftToRight
  5250 ;;		_LCD_RightToLeft
  5251 ;;		_LCD_AutoScroll_ON
  5252 ;;		_LCD_AutoScroll_OFF
  5253 ;;		_LCD_CreateCustomChar
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257     0DF5                     _LCD_Command:	
  5258                           ;psect for function _LCD_Command
  5259                           
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  5263                           ;LCD_Command@cmd stored from wreg
  5264     0DF5  00F4               	movwf	LCD_Command@cmd
  5265     0DF6                     l1748:
  5266                           
  5267                           ;jhd_lcd.c: 22:     LCD_Send(cmd, 0x80);
  5268     0DF6  3080               	movlw	128
  5269     0DF7  00F1               	movwf	LCD_Send@mode
  5270     0DF8  0874               	movf	LCD_Command@cmd,w
  5271     0DF9  120A  158A  2734  120A  158A  	fcall	_LCD_Send
  5272     0DFE                     l94:
  5273     0DFE  0008               	return
  5274     0DFF                     __end_of_LCD_Command:
  5275                           
  5276                           	psect	text32
  5277     0F7E                     __ptext32:	
  5278 ;; *************** function _LCD_Print_String *****************
  5279 ;; Defined at:
  5280 ;;		line 148 in file "jhd_lcd.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  str             2    5[COMMON] PTR const unsigned char 
  5283 ;;		 -> STR_2(3), edit@temp(3), calendar(16), time(14), 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5295 ;;      Params:         2       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0
  5298 ;;      Totals:         2       0       0       0       0
  5299 ;;Total ram usage:        2 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 4
  5302 ;; This function calls:
  5303 ;;		_LCD_Print_Char
  5304 ;; This function is called by:
  5305 ;;		_DS3231_display
  5306 ;;		_edit
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310     0F7E                     _LCD_Print_String:	
  5311                           ;psect for function _LCD_Print_String
  5312                           
  5313     0F7E                     l1894:	
  5314                           ;incstack = 0
  5315                           ; Regs used in _LCD_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5316                           
  5317                           
  5318                           ;jhd_lcd.c: 149:     while (*str) {
  5319     0F7E  2F93               	goto	l1900
  5320     0F7F                     l1896:
  5321                           
  5322                           ;jhd_lcd.c: 150:         LCD_Print_Char(*str++);
  5323     0F7F  0876               	movf	LCD_Print_String@str+1,w
  5324     0F80  00FF               	movwf	btemp+1
  5325     0F81  0875               	movf	LCD_Print_String@str,w
  5326     0F82  0084               	movwf	4
  5327     0F83  120A  158A  2000  120A  158A  	fcall	stringtab
  5328     0F88  120A  158A  25EB  120A  158A  	fcall	_LCD_Print_Char
  5329     0F8D                     l1898:
  5330     0F8D  3001               	movlw	1
  5331     0F8E  07F5               	addwf	LCD_Print_String@str,f
  5332     0F8F  1803               	skipnc
  5333     0F90  0AF6               	incf	LCD_Print_String@str+1,f
  5334     0F91  3000               	movlw	0
  5335     0F92  07F6               	addwf	LCD_Print_String@str+1,f
  5336     0F93                     l1900:
  5337                           
  5338                           ;jhd_lcd.c: 149:     while (*str) {
  5339     0F93  0876               	movf	LCD_Print_String@str+1,w
  5340     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  5341     0F95  1303               	bcf	3,6	;RP1=0, select bank0
  5342     0F96  00FF               	movwf	btemp+1
  5343     0F97  0875               	movf	LCD_Print_String@str,w
  5344     0F98  0084               	movwf	4
  5345     0F99  120A  158A  2000  120A  158A  	fcall	stringtab
  5346     0F9E  3A00               	xorlw	0
  5347     0F9F  1D03               	skipz
  5348     0FA0  2FA2               	goto	u1531
  5349     0FA1  2FA3               	goto	u1530
  5350     0FA2                     u1531:
  5351     0FA2  2F7F               	goto	l1896
  5352     0FA3                     u1530:
  5353     0FA3                     l159:
  5354     0FA3  0008               	return
  5355     0FA4                     __end_of_LCD_Print_String:
  5356                           
  5357                           	psect	text33
  5358     0DEB                     __ptext33:	
  5359 ;; *************** function _LCD_Print_Char *****************
  5360 ;; Defined at:
  5361 ;;		line 25 in file "jhd_lcd.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  c               1    wreg     unsigned char 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  c               1    4[COMMON] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       0       0       0       0
  5376 ;;      Locals:         1       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0
  5378 ;;      Totals:         1       0       0       0       0
  5379 ;;Total ram usage:        1 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 3
  5382 ;; This function calls:
  5383 ;;		_LCD_Send
  5384 ;; This function is called by:
  5385 ;;		_LCD_Print_String
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389     0DEB                     _LCD_Print_Char:	
  5390                           ;psect for function _LCD_Print_Char
  5391                           
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in _LCD_Print_Char: [wreg+status,2+status,0+pclath+cstack]
  5395                           ;LCD_Print_Char@c stored from wreg
  5396     0DEB  00F4               	movwf	LCD_Print_Char@c
  5397     0DEC                     l1750:
  5398                           
  5399                           ;jhd_lcd.c: 26:     LCD_Send(c, 0x40);
  5400     0DEC  3040               	movlw	64
  5401     0DED  00F1               	movwf	LCD_Send@mode
  5402     0DEE  0874               	movf	LCD_Print_Char@c,w
  5403     0DEF  120A  158A  2734  120A  158A  	fcall	_LCD_Send
  5404     0DF4                     l97:
  5405     0DF4  0008               	return
  5406     0DF5                     __end_of_LCD_Print_Char:
  5407                           
  5408                           	psect	text34
  5409     0F34                     __ptext34:	
  5410 ;; *************** function _LCD_Send *****************
  5411 ;; Defined at:
  5412 ;;		line 12 in file "jhd_lcd.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  data            1    wreg     unsigned char 
  5415 ;;  mode            1    1[COMMON] unsigned char 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  data            1    3[COMMON] unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0, pclath, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5427 ;;      Params:         1       0       0       0       0
  5428 ;;      Locals:         1       0       0       0       0
  5429 ;;      Temps:          1       0       0       0       0
  5430 ;;      Totals:         3       0       0       0       0
  5431 ;;Total ram usage:        3 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 2
  5434 ;; This function calls:
  5435 ;;		_I2C_Master_Start
  5436 ;;		_I2C_Master_Stop
  5437 ;;		_I2C_Master_Write
  5438 ;; This function is called by:
  5439 ;;		_LCD_Command
  5440 ;;		_LCD_Print_Char
  5441 ;;		_LCD_CreateCustomChar
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445     0F34                     _LCD_Send:	
  5446                           ;psect for function _LCD_Send
  5447                           
  5448                           
  5449                           ;incstack = 0
  5450                           ; Regs used in _LCD_Send: [wreg+status,2+status,0+pclath+cstack]
  5451                           ;LCD_Send@data stored from wreg
  5452     0F34  00F3               	movwf	LCD_Send@data
  5453     0F35                     l1692:
  5454                           
  5455                           ;jhd_lcd.c: 13:     I2C_Master_Start();
  5456     0F35  120A  158A  25D0  120A  158A  	fcall	_I2C_Master_Start
  5457                           
  5458                           ;jhd_lcd.c: 14:     I2C_Master_Write(_lcd_addr);
  5459     0F3A  1683               	bsf	3,5	;RP0=1, select bank1
  5460     0F3B  1303               	bcf	3,6	;RP1=0, select bank1
  5461     0F3C  0869               	movf	__lcd_addr^(0+128),w
  5462     0F3D  120A  158A  2631  120A  158A  	fcall	_I2C_Master_Write
  5463                           
  5464                           ;jhd_lcd.c: 15:     I2C_Master_Write(mode);
  5465     0F42  0871               	movf	LCD_Send@mode,w
  5466     0F43  120A  158A  2631  120A  158A  	fcall	_I2C_Master_Write
  5467                           
  5468                           ;jhd_lcd.c: 16:     I2C_Master_Write(data);
  5469     0F48  0873               	movf	LCD_Send@data,w
  5470     0F49  120A  158A  2631  120A  158A  	fcall	_I2C_Master_Write
  5471                           
  5472                           ;jhd_lcd.c: 17:     I2C_Master_Stop();
  5473     0F4E  120A  158A  25D9  120A  158A  	fcall	_I2C_Master_Stop
  5474     0F53                     l1694:
  5475                           
  5476                           ;jhd_lcd.c: 18:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  5477     0F53  3042               	movlw	66
  5478     0F54  00F2               	movwf	??_LCD_Send
  5479     0F55                     u1857:
  5480     0F55  0BF2               	decfsz	??_LCD_Send,f
  5481     0F56  2F55               	goto	u1857
  5482     0F57  0000               	nop
  5483     0F58                     l91:
  5484     0F58  0008               	return
  5485     0F59                     __end_of_LCD_Send:
  5486                           
  5487                           	psect	text35
  5488     0E31                     __ptext35:	
  5489 ;; *************** function _I2C_Master_Write *****************
  5490 ;; Defined at:
  5491 ;;		line 45 in file "i2c.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  data            1    wreg     unsigned char 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  data            1    0[COMMON] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      unsigned char 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0, pclath, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         0       0       0       0       0
  5506 ;;      Locals:         1       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0
  5508 ;;      Totals:         1       0       0       0       0
  5509 ;;Total ram usage:        1 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; Hardware stack levels required when called: 1
  5512 ;; This function calls:
  5513 ;;		_I2C_Master_Wait
  5514 ;; This function is called by:
  5515 ;;		_LCD_Send
  5516 ;;		_DS3231_write
  5517 ;;		_DS3231_read
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521     0E31                     _I2C_Master_Write:	
  5522                           ;psect for function _I2C_Master_Write
  5523                           
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5527                           ;I2C_Master_Write@data stored from wreg
  5528     0E31  00F0               	movwf	I2C_Master_Write@data
  5529     0E32                     l1640:
  5530                           
  5531                           ;i2c.c: 46:     I2C_Master_Wait();
  5532     0E32  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  5533     0E37                     l1642:
  5534                           
  5535                           ;i2c.c: 47:     SSPBUF = data;
  5536     0E37  0870               	movf	I2C_Master_Write@data,w
  5537     0E38  1283               	bcf	3,5	;RP0=0, select bank0
  5538     0E39  1303               	bcf	3,6	;RP1=0, select bank0
  5539     0E3A  0093               	movwf	19	;volatile
  5540     0E3B                     l57:	
  5541                           ;i2c.c: 48:     while(!SSPIF);
  5542                           
  5543     0E3B  1D8C               	btfss	12,3	;volatile
  5544     0E3C  2E3E               	goto	u1171
  5545     0E3D  2E3F               	goto	u1170
  5546     0E3E                     u1171:
  5547     0E3E  2E3B               	goto	l57
  5548     0E3F                     u1170:
  5549     0E3F                     l59:
  5550                           
  5551                           ;i2c.c: 49:     SSPIF = 0;
  5552     0E3F  118C               	bcf	12,3	;volatile
  5553     0E40                     l60:	
  5554                           ;i2c.c: 50:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  5555                           
  5556     0E40  0008               	return
  5557     0E41                     __end_of_I2C_Master_Write:
  5558                           
  5559                           	psect	text36
  5560     0DD9                     __ptext36:	
  5561 ;; *************** function _I2C_Master_Stop *****************
  5562 ;; Defined at:
  5563 ;;		line 28 in file "i2c.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, pclath, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5577 ;;      Params:         0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0
  5580 ;;      Totals:         0       0       0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used: 1
  5583 ;; Hardware stack levels required when called: 1
  5584 ;; This function calls:
  5585 ;;		_I2C_Master_Wait
  5586 ;; This function is called by:
  5587 ;;		_LCD_Send
  5588 ;;		_DS3231_write
  5589 ;;		_DS3231_read
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593     0DD9                     _I2C_Master_Stop:	
  5594                           ;psect for function _I2C_Master_Stop
  5595                           
  5596     0DD9                     l1636:	
  5597                           ;incstack = 0
  5598                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5599                           
  5600                           
  5601                           ;i2c.c: 29:     I2C_Master_Wait();
  5602     0DD9  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  5603     0DDE                     l1638:
  5604                           
  5605                           ;i2c.c: 30:     PEN = 1;
  5606     0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  5607     0DDF  1303               	bcf	3,6	;RP1=0, select bank1
  5608     0DE0  1511               	bsf	17,2	;volatile
  5609     0DE1                     l48:
  5610     0DE1  0008               	return
  5611     0DE2                     __end_of_I2C_Master_Stop:
  5612                           
  5613                           	psect	text37
  5614     0DD0                     __ptext37:	
  5615 ;; *************** function _I2C_Master_Start *****************
  5616 ;; Defined at:
  5617 ;;		line 18 in file "i2c.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0, pclath, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5631 ;;      Params:         0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0
  5634 ;;      Totals:         0       0       0       0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 1
  5638 ;; This function calls:
  5639 ;;		_I2C_Master_Wait
  5640 ;; This function is called by:
  5641 ;;		_LCD_Send
  5642 ;;		_DS3231_write
  5643 ;;		_DS3231_read
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647     0DD0                     _I2C_Master_Start:	
  5648                           ;psect for function _I2C_Master_Start
  5649                           
  5650     0DD0                     l1632:	
  5651                           ;incstack = 0
  5652                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5653                           
  5654                           
  5655                           ;i2c.c: 19:     I2C_Master_Wait();
  5656     0DD0  120A  158A  2617  120A  158A  	fcall	_I2C_Master_Wait
  5657     0DD5                     l1634:
  5658                           
  5659                           ;i2c.c: 20:     SEN = 1;
  5660     0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  5661     0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  5662     0DD7  1411               	bsf	17,0	;volatile
  5663     0DD8                     l42:
  5664     0DD8  0008               	return
  5665     0DD9                     __end_of_I2C_Master_Start:
  5666                           
  5667                           	psect	text38
  5668     0E17                     __ptext38:	
  5669 ;; *************** function _I2C_Master_Wait *****************
  5670 ;; Defined at:
  5671 ;;		line 14 in file "i2c.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;		None
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;		None
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      void 
  5678 ;; Registers used:
  5679 ;;		wreg, status,2
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5685 ;;      Params:         0       0       0       0       0
  5686 ;;      Locals:         0       0       0       0       0
  5687 ;;      Temps:          0       0       0       0       0
  5688 ;;      Totals:         0       0       0       0       0
  5689 ;;Total ram usage:        0 bytes
  5690 ;; Hardware stack levels used: 1
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_I2C_Master_Start
  5695 ;;		_I2C_Master_RepeatedStart
  5696 ;;		_I2C_Master_Stop
  5697 ;;		_I2C_ACK
  5698 ;;		_I2C_NACK
  5699 ;;		_I2C_Master_Write
  5700 ;;		_I2C_Read_Byte
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704     0E17                     _I2C_Master_Wait:	
  5705                           ;psect for function _I2C_Master_Wait
  5706                           
  5707     0E17                     l1550:	
  5708                           ;incstack = 0
  5709                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5710                           
  5711     0E17                     l36:	
  5712                           ;i2c.c: 15:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5713                           
  5714     0E17  1683               	bsf	3,5	;RP0=1, select bank1
  5715     0E18  1303               	bcf	3,6	;RP1=0, select bank1
  5716     0E19  1914               	btfsc	20,2	;volatile
  5717     0E1A  2E1C               	goto	u941
  5718     0E1B  2E1D               	goto	u940
  5719     0E1C                     u941:
  5720     0E1C  2E17               	goto	l36
  5721     0E1D                     u940:
  5722     0E1D                     l1552:
  5723     0E1D  0811               	movf	17,w	;volatile
  5724     0E1E  391F               	andlw	31
  5725     0E1F  1D03               	btfss	3,2
  5726     0E20  2E22               	goto	u951
  5727     0E21  2E23               	goto	u950
  5728     0E22                     u951:
  5729     0E22  2E17               	goto	l36
  5730     0E23                     u950:
  5731     0E23                     l39:
  5732     0E23  0008               	return
  5733     0E24                     __end_of_I2C_Master_Wait:
  5734     0002                     ___latbits      equ	2
  5735     007E                     btemp           set	126	;btemp
  5736     007E                     wtemp0          set	126
  5737                           
  5738                           	psect	config
  5739                           
  5740                           ;Config register CONFIG @ 0x2007
  5741                           ;	Oscillator Selection bits
  5742                           ;	FOSC = HS, HS oscillator
  5743                           ;	Watchdog Timer Enable bit
  5744                           ;	WDTE = OFF, WDT disabled
  5745                           ;	Power-up Timer Enable bit
  5746                           ;	PWRTE = OFF, PWRT disabled
  5747                           ;	Brown-out Reset Enable bit
  5748                           ;	BOREN = ON, BOR enabled
  5749                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5750                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5751                           ;	Data EEPROM Memory Code Protection bit
  5752                           ;	CPD = OFF, Data EEPROM code protection off
  5753                           ;	Flash Program Memory Write Enable bits
  5754                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5755                           ;	In-Circuit Debugger Mode bit
  5756                           ;	DEBUG = 0x1, unprogrammed default
  5757                           ;	Flash Program Memory Code Protection bit
  5758                           ;	CP = OFF, Code protection off
  5759     2007                     	org	8199
  5760     2007  3F7A               	dw	16250

Data Sizes:
    Strings     8
    Constant    0
    Data        34
    BSS         47
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      80
    BANK1            80      0      74
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> edit@temp(BANK0[3]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> edit@temp(BANK0[3]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_Print_String@str	PTR const unsigned char  size(2) Largest target is 16
		 -> calendar(BANK1[16]), edit@temp(BANK0[3]), STR_2(CODE[3]), time(BANK1[14]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S678$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> edit@temp(BANK0[3]), 

    S678$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 3
		 -> edit@temp(BANK0[3]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _utoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _read_prec_or_width->___wmul
    _LCD_Init->_LCD_Clear
    _LCD_Clear->_LCD_Command
    _DS3231_write->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _DS3231_read->_I2C_Master_Write
    _DS3231_display->_LCD_SetCursor
    _bcd_to_decimal->___bmul
    _LCD_SetCursor->_LCD_Command
    _LCD_Command->_LCD_Send
    _LCD_Print_String->_LCD_Print_Char
    _LCD_Print_Char->_LCD_Send
    _LCD_Send->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_edit
    _edit->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5798
                                             67 BANK0      3     3      0
                     _DS3231_display
                        _DS3231_read
                       _DS3231_write
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                               _edit
 ---------------------------------------------------------------------------------
 (1) _edit                                                 9     7      2    3480
                                             58 BANK0      9     7      2
                   _LCD_Print_String
                      _LCD_SetCursor
                              _blink
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    2599
                                             41 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    2390
                                             36 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    2256
                                             24 BANK0     12     8      4
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     5      4    1323
                                             15 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     747
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     5      3     333
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     276
                                              6 COMMON     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _blink                                                3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     253
                                              7 COMMON     4     4      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0     112
                                              5 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231_write                                         0     0      0     757
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       5     5      0     728
                                              8 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _DS3231_read                                          0     0      0      29
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _DS3231_display                                       2     2      0    1167
                                             11 COMMON     2     2      0
                   _LCD_Print_String
                      _LCD_SetCursor
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     166
                                              3 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     108
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     310
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCursor                                        6     5      1     215
                                              5 COMMON     6     5      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     112
                                              4 COMMON     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Print_String                                     2     0      2     162
                                              5 COMMON     2     0      2
                     _LCD_Print_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Print_Char                                       1     1      0     112
                                              4 COMMON     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (4) _LCD_Send                                             3     2      1      83
                                              1 COMMON     3     2      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS3231_display
     _LCD_Print_String
       _LCD_Print_Char
         _LCD_Send
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     _LCD_SetCursor
       _LCD_Command
         _LCD_Send
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _DS3231_read
     _I2C_ACK
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_NACK
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _DS3231_write
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _I2C_Master_Init
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Clear
     _LCD_Command
   _edit
     _LCD_Print_String
     _LCD_SetCursor
     _blink
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad
               _fputc
               _fputs
                 _fputc

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      74     92.5%
BITBANK1            80      0       0      0.0%
BANK0               80     70      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     168      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Nov 23 11:10:39 2024

                               _i 006D                                 pc 0002                    ___bmul@product 0071  
                    ?_LCD_Command 0070                                l33 0E30                                l42 0DD8  
                              l51 0E0A                                l36 0E17                                l60 0E40  
                              l45 0DEA                                l54 0E16                                l39 0E23  
                              l63 0E82                                l48 0DE1                                l57 0E3B  
                              l65 0E87                                l66 0E90                                l59 0E3F  
                              l91 0F58                                l94 0DFE                                l97 0DF4  
                    ___awdiv@sign 0075                                fsr 0004               ___wmul@multiplicand 0072  
                  _decimal_to_bcd 0FCF                     _LCD_SetCursor 0E91                               l100 02BE  
                             l103 0E50                               l220 07DD                               l214 0E79  
                             l231 05A8                               l153 0EAD                               l217 0FFF  
                             l500 01EF                               l252 0338                               l228 0ECB  
                             l244 0671                               l159 0FA3                               l513 018C  
                             l249 0253                               l347 0F65                               l373 0E63  
                             l349 0F7D                               l810 0F33                               l627 008F  
                             l637 004D                               l831 0124                               l833 0135  
                             l851 00E2                               l843 03BE                               l828 00FC  
                             l860 0512                               l858 050C                               l875 0F10  
                             l868 05A4                               l887 04E4                               l895 0FCE  
                             l898 0DC7                               _PEN 048A                               u900 0476  
                             _SEN 0488                               u901 0475                               u910 04A8  
                             u911 04A7                               u920 04C9                               u930 0FCE  
                             u915 04A4                               u931 0FCD                               u940 0E1D  
                             u941 0E1C                               u950 0E23                               u951 0E22  
                             u960 0F5F                               u880 0451                               u961 0F5E  
                             u881 0450                               u890 0457                               u891 0456  
                             u990 0F79                               u991 0F78                               u975 0F66  
                             u985 0F6D                   __end_of_I2C_ACK 0E0B                               _pad 00E3  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0075  
                            l2000 05BB                              l2010 05D3                              l2002 05C0  
                            l2020 05E9                              l2012 05D5                              l2004 05C6  
                            l2030 0613                              l2022 05EF                              l2014 05DB  
                            l2006 05C7                              l2040 063E                              l2024 05F0  
                            l2016 05E1                              l2008 05CD                              l2032 0622  
                            l2050 066E                              l2042 0648                              l2034 0628  
                            l2026 05F8                              l2018 05E3                              l2130 03CF  
                            l2052 0670                              l2044 065A                              l2036 0630  
                            l2028 060A                              l2140 03F3                              l2132 03D4  
                            l2124 03BF                              l2046 0663                              l2038 0639  
                            l2142 0400                              l2134 03DA                              l2150 042E  
                            l2126 03C4                              l2056 01F0                              l1600 0026  
                            l2048 0668                              l2152 0433                              l2144 040D  
                            l2136 03DB                              l2128 03C9                              l2058 02BF  
                            l1610 0043                              l1602 0028                              l1530 0451  
                            l2154 0438                              l2146 041A                              l2138 03E7  
                            l1604 002C                              l1612 0049                              l1532 0457  
                            l1620 00F4                              l1700 04FA                              l2148 041F  
                            l1550 0E17                              l1606 0036                              l1534 045E  
                            l1542 0FA4                              l1630 012A                              l1622 00FA  
                            l1710 0515                              l1702 0502                              l1552 0E1D  
                            l1632 0DD0                              l1640 0E32                              l1800 01DB  
                            l1560 0F6C                              l1608 003C                              l1536 0476  
                            l1528 044B                              l1544 0FA9                              l1624 00FF  
                            l1616 00E3                              l1720 053D                              l1712 0522  
                            l1704 0508                              l1634 0DD5                              l1642 0E37  
                            l1802 01E1                              l1810 0136                              l1562 0F73  
                            l1554 0F59                              l1570 0050                              l1538 04A8  
                            l1546 0FB9                              l1626 010E                              l1618 00E9  
                            l1650 0351                              l1730 056A                              l1722 0544  
                            l1714 0527                              l1706 050D                              l1636 0DD9  
                            l1900 0F93                              l1804 01E6                              l1820 0146  
                            l1812 0137                              l1564 0F79                              l1556 0F5B  
                            l1580 0066                              l1572 0056                              l1548 0FC1  
                            l1628 0116                              l1652 0357                              l1660 0387  
                            l1644 0339                              l1724 054B                              l1716 0536  
                            l1638 0DDE                              l1750 0DEC                              l1806 01EB  
                            l1830 015D                              l1822 014B                              l1814 013B  
                            l1902 0E65                              l1558 0F5F                              l1582 0077  
                            l1574 0059                              l1590 008B                              l1662 038E  
                            l1670 03AC                              l1654 036B                              l1646 033D  
                            l1726 0557                              l1718 053A                              l1742 058B  
                            l1832 0161                              l1824 0151                              l1840 017E  
                            l1816 0140                              l1760 0E5B                              l1752 0E52  
                            l1920 0EC1                              l1912 0EAE                              l1680 00A5  
                            l1584 007D                              l1576 0060                              l1568 004E  
                            l1664 0394                              l1656 036E                              l1648 034D  
                            l1736 0578                              l1728 0564                              l1770 0192  
                            l1842 0183                              l1834 016B                              l1826 0154  
                            l1818 0142                              l1762 0E62                              l1754 0E53  
                            l1906 0FD0                              l1922 0EC7                              l1914 0EB0  
                            l1682 00B3                              l1674 0090                              l1586 007E  
                            l1578 0062                              l1594 0016                              l1666 0399  
                            l1658 0374                              l1738 0583                              l1850 0EF3  
                            l1930 0F1B                              l1692 0F35                              l1748 0DF6  
                            l1780 01A4                              l1772 0197                              l1844 0188  
                            l1836 0171                              l1828 015B                              l1756 0E57  
                            l1860 0DE7                              l1908 0FF4                              l1940 0E28  
                            l1916 0EB2                              l1684 00C8                              l1676 0092  
                            l1588 0085                              l1596 001C                              l1668 03A6  
                            l1852 0F00                              l1932 0F1D                              l1924 0F11  
                            l1694 0F53                              l1790 01B8                              l1782 01A6  
                            l1774 0199                              l1766 018D                              l1838 0178  
                            l1758 0E59                              l1862 0DFF                              l1870 0E0E  
                            l1942 0E2C                              l1950 0259                              l1918 0EBB  
                            l1678 00A1                              l1686 00CD                              l1598 001F  
                            l1854 0F0E                              l1934 0F2A                              l1926 0F15  
                            l1792 01BC                              l1784 01AC                              l1776 019D  
                            l1768 018E                              l1864 0E02                              l1872 0E13  
                            l1880 0E8D                              l1944 0E2E                              l1960 0273  
                            l1952 025A                              l1688 00DE                              l1696 04E5  
                            l1848 0EEE                              l1928 0F19                              l1890 0EA2  
                            l1794 01CD                              l1786 01AF                              l1778 01A2  
                            l1866 0E07                              l1858 0DE2                              l1874 0E7A  
                            l1946 0E2F                              l1938 0E24                              l1970 029A  
                            l1962 027C                              l1954 025E                              l1698 04F6  
                            l1892 0EA3                              l1796 01D3                              l1788 01B6  
                            l1980 0672                              l1868 0E0B                              l1876 0E7F  
                            l1884 0E41                              l1972 02A3                              l1964 0282  
                            l1956 0260                              l1948 0255                              l1894 0F7E  
                            l1798 01D4                              l1982 07BC                              l1878 0E88  
                            l1886 0E47                              l1974 02AC                              l1966 028B  
                            l1958 026D                              l1990 05A8                              ?_pad 0028  
                            l1896 0F7F                              l1888 0E92                              l1984 07C3  
                            l1976 02B1                              l1968 0291                              l1992 05AD  
                            l1898 0F8D                              l1986 07CC                              l1978 02BA  
                            l1994 05AF                              l1988 07D4                              l1996 05B4  
                            l1998 05BA                              STR_1 0810                              STR_2 0815  
                            STR_3 0810                              u1000 0056                              u1001 0055  
                            u1020 0066                              u1100 0036                              u1021 0065  
                            u1101 0035                              u1015 005A                              u1040 0077  
                            u1120 0049                              u1200 0399                              u1041 0076  
                            u1121 0048                              u1105 0032                              u1201 0398  
                            u1130 00E9                              u1210 03A6                              u1035 0067  
                            u1115 003D                              u1131 00E8                              u1211 03A5  
                            u1300 0E62                              u1060 008B                              u1140 00FA  
                            u1220 03AC                              u1301 0E61                              u1061 008A  
                            u1045 0073                              u1141 00F9                              u1221 03AB  
                            u1310 0192                              u1230 00A1                              u1070 001C  
                            u1150 0124                              u1311 0191                              u1231 00A0  
                            u1055 007F                              u1071 001B                              u1151 0123  
                            u1215 03A2                              u1400 01E6                              u1320 019D  
                            u1240 00DE                              u1160 012A                              u1401 01E5  
                            u1321 019C                              u1241 00DD                              u1161 0129  
                            u1170 0E3F                              u1330 01AC                              u1410 013B  
                            u1090 002C                              u1250 04F6                              u1171 0E3E  
                            u1331 01AB                              u1411 013A                              u1091 002B  
                            u1155 0120                              u1251 04F5                              u1420 0146  
                            u1180 038E                              u1260 0527                              u1500 0F0E  
                            u1421 0145                              u1085 0020                              u1181 038D  
                            u1261 0526                              u1501 0F0D                              u1350 01BC  
                            u1430 0151                              u1510 0E87                              u1190 0394  
                            u1270 053A                              u1351 01BB                              u1431 0150  
                            u1511 0E86                              u1191 0393                              u1271 0539  
                            u1520 0EA2                              u1280 0557                              u1600 05B4  
                            u1521 0EA1                              u1345 01B0                              u1281 0556  
                            u1601 05B3                              u1530 0FA3                              u1370 01CD  
                            u1450 0161                              u1290 0E57                              u1610 05BA  
                            u1531 0FA2                              u1371 01CC                              u1451 0160  
                            u1291 0E56                              u1611 05B9                              u1460 016B  
                            u1700 0628                              u1620 05C0                              u1365 01BD  
                            u1461 016A                              u1445 0155                              u1701 0627  
                            u1621 05BF                              u1390 01E1                              u1710 066E  
                            u1630 05C6                              u1391 01E0                              u1375 01C9  
                            u1711 066D                              u1631 05C5                              u1480 017E  
                            u1560 0EC1                              u1640 05CD                  LCD_Init@lcd_addr 007A  
                            u1385 01D5                              u1481 017D                              u1465 0167  
                            u1545 0E6D                              u1561 0EC0                              u1641 05CC  
                            u1490 0183                              u1570 0EC7                              u1650 05D3  
                            u1491 0182                              u1475 0172                              u1555 0FF7  
                            u1571 0EC6                              u1651 05D2                              u1580 0ECB  
                            u1660 05DB                              u1740 03DA                              u1581 0ECA  
                            u1661 05DA                              u1741 03D9                              u1670 05E1  
                            u1590 05AC                              u1807 0277                              u1671 05E0  
                            u1591 05AB                              u1680 05E9                              u1817 0286  
                            u1681 05E8                              u1690 05EF                              u1827 0295  
                            u1691 05EE                              u1837 02A7                              u1757 0427  
                            u1847 0E4B                              u1767 0440                              u1857 0F55  
                            u1777 061B                              u1787 0EB6                              u1797 0266  
                            _RCEN 048B                              _RSEN 0489                  __end_of_I2C_NACK 0E17  
                            _date 0069                              _dbuf 00A7                              _edit 05A5  
__end_of_I2C_Master_RepeatedStart 0DEB                              _main 03BF                      _DS3231_write 01F0  
                            _hour 006A                              _prec 00A2                              _time 00DB  
                            _year 0067                              pad@i 002D                              pad@p 002B  
                            btemp 007E                              _utoa 0339                              start 0000  
               ___bmul@multiplier 0072                    _LCD_Print_Char 0DEB                             ??_pad 007D  
          __end_of_decimal_to_bcd 1000                  __end_of_LCD_Init 02BF                  __end_of_LCD_Send 0F59  
                ?_I2C_Master_Init 0070                  ?_I2C_Master_Wait 0070                    ?_LCD_SetCursor 0075  
                ?_I2C_Master_Stop 0070                             ?_edit 005A                             ?_main 0070  
                           _ACKEN 048C                             _ACKDT 048D                   __end_of___awdiv 01F0  
                 __end_of___awmod 018D                             ?_utoa 002F                   ___awdiv@divisor 0070  
                 __end_of___lwdiv 0090                   __end_of___lwmod 004E                   ___awdiv@counter 0074  
                    vfpfcnvrt@fmt 003A                             _TRISB 0086                             _SSPIF 0063  
                           _blink 0EAE                             _flags 0066               read_prec_or_width@c 0078  
             read_prec_or_width@n 0079                             _fputc 044B                             _fputs 0FA4  
                           _month 0068                             pad@fp 0028                             _width 00A0  
                           _putch 0DC7                             pclath 000A                             utoa@d 0031  
                           utoa@i 0036                             utoa@p 0033                             utoa@w 0034  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 0F34  
                 __initialization 07DE            __end_of_LCD_Print_Char 0DF5                      __end_of_edit 0672  
                    __end_of_main 044B                      __end_of_utoa 03BF                   ?_decimal_to_bcd 0070  
                       ??_I2C_ACK 0070                      LCD_Send@data 0073                      LCD_Send@mode 0071  
                          ??_edit 005C                            ??_main 0063                            ??_utoa 007E  
               __end_of_LCD_Clear 0E51        __end_of_read_prec_or_width 00E3                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                            ?_blink 0070  
              ??_I2C_Master_Write 0070                            ?_fputc 0070                            ?_fputs 0020  
                ___awdiv@dividend 0072                            ?_putch 0070                      __displaymode 006E  
                   vfpfcnvrt@done 0042                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
                  _DS3231_display 0672          _I2C_Master_RepeatedStart 0DE2                      vfprintf@cfmt 0048  
                 ?_LCD_Print_Char 0070                            ___bmul 0E51                     _I2C_Read_Byte 0E7A  
                          ___wmul 0F59                         ??___awdiv 0074                         ??___awmod 0074  
                 ??_LCD_SetCursor 0076                         ??___lwdiv 0074                         ??___lwmod 0074  
            read_prec_or_width@ap 0077                            edit@xx 005A                            edit@yy 005B  
                ___awdiv@quotient 0076                            _minute 006B                            _second 006C  
                          blink@j 0072                   ___awmod@divisor 0070                decimal_to_bcd@ones 007B  
                 ___awmod@counter 0074                decimal_to_bcd@tens 007A                            pad@buf 002A  
                       ?_I2C_NACK 0070                            fputc@c 0070                            fputs@c 0025  
                          fputs@i 0026                            fputs@s 0020                            putch@c 0070  
                __end_of_vfprintf 0F11                            utoa@fp 002F                         ??_sprintf 004D  
          __end_of_DS3231_display 07DE           __end_of__initialization 07FC                         ?_LCD_Init 0070  
                       ?_LCD_Send 0071               ___bmul@multiplicand 0070                      __initialized 00A6  
                  ?_I2C_Read_Byte 0070                    __pcstackCOMMON 0070                      __pidataBANK1 0ECC  
                   __end_of_blink 0ECC                     __end_of_fputc 04E5                     __end_of_fputs 0FCF  
                   __end_of_putch 0DC8                        ??_I2C_NACK 0070                    _OPTION_REGbits 0081  
                         ??_blink 0070                           ??_fputc 0074                           ??_fputs 0023  
                         ??_putch 0070                        __pbssBANK0 0066                        __pbssBANK1 00A0  
                _LCD_Print_String 0F7E                   ?_DS3231_display 0070                        ??_LCD_Init 0077  
                      ??_LCD_Send 0072                     ??_DS3231_read 0071                        __pmaintext 03BF  
                         ?___bmul 0070                 bcd_to_decimal@bcd 0075                           ?___wmul 0070  
                         _I2C_ACK 0DFF                           _ACKSTAT 048E               LCD_Print_String@str 0075  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0800  
                 LCD_Print_Char@c 0074                   ??_I2C_Read_Byte 0070                  ??_decimal_to_bcd 0078  
                         ___awdiv 018D               __end_of_DS3231_read 0339                           ___awmod 0136  
                         ___lwdiv 004E                           ___lwmod 0016                         ?_vfprintf 0044  
        LCD_SetCursor@row_offsets 0076                     edit@parameter 0062                           __ptext1 05A5  
                         __ptext2 0F11                           __ptext3 0EEE                           __ptext4 04E5  
                         __ptext5 0339                           __ptext6 00E3                           __ptext7 0FA4  
                         __ptext8 044B                           __ptext9 0DC7             read_prec_or_width@fmt 0076  
                ___awmod@dividend 0072                   __displaycontrol 006F                         _LCD_Clear 0E41  
                         _sprintf 0F11                           clrloop0 0DC9              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                  LCD_SetCursor@col 007A                  LCD_SetCursor@row 0075  
                         fputc@fp 0072                    LCD_Command@cmd 0074                           fputs@fp 0021  
                ??_LCD_Print_Char 0074                _read_prec_or_width 0090                 __end_of_vfpfcnvrt 05A5  
             ?_read_prec_or_width 0076                  vfpfcnvrt@convarg 003E                        ??_vfprintf 007E  
                       _PORTBbits 0006                        ?_LCD_Clear 0070              ??_read_prec_or_width 0078  
                     _DS3231_read 02BF                     ??_LCD_Command 0074                    __end_of___bmul 0E64  
                     vfpfcnvrt@ap 003B                       vfpfcnvrt@cp 0043                       vfpfcnvrt@fp 0038  
                  __end_of___wmul 0F7E             __end_of_LCD_SetCursor 0EAE          __end_of_LCD_Print_String 0FA4  
             start_initialization 07DE                    _bcd_to_decimal 0E64                       __end_of_pad 0136  
                ??_DS3231_display 007B                 ??_I2C_Master_Init 0070                 ??_I2C_Master_Wait 0070  
                   ?_DS3231_write 0070                 ??_I2C_Master_Stop 0070                       vfprintf@fmt 0046  
                        ??___bmul 0071                          ??___wmul 0074                        init_fetch0 0003  
                     __pdataBANK1 00C7                          ?_I2C_ACK 0070            __end_of_bcd_to_decimal 0E7A  
             __end_of_LCD_Command 0DFF                         ___latbits 0002                     __pcstackBANK0 0020  
                     ??_LCD_Clear 0075                         __lcd_addr 00E9                    ??_DS3231_write 007D  
                       __currline 00A4                         __pnvBANK0 006E                         __pnvBANK1 00E9  
                _I2C_Master_Start 0DD0                  _I2C_Master_Write 0E31                  ___lwdiv@dividend 0072  
                        ?___awdiv 0070                          ?___awmod 0070                          ?___lwdiv 0070  
                        ?___lwmod 0070                         __numlines 00A5              I2C_Master_Write@data 0070  
                       __pstrings 0800                          _I2C_NACK 0E0B                   ?_bcd_to_decimal 0070  
                ___lwdiv@quotient 0074                          ?_sprintf 0049                          _LCD_Init 0254  
                        _LCD_Send 0F34                    ___wmul@product 0074                         clear_ram0 0DC8  
           decimal_to_bcd@decimal 007C             __end_of_I2C_Read_Byte 0E91                       _LCD_Command 0DF5  
                       _vfpfcnvrt 04E5                       __stringbase 080F                 ___wmul@multiplier 0070  
              LCD_SetCursor@F1080 00C7                      ?_DS3231_read 0070                        vfprintf@ap 0047  
                      vfprintf@fp 0044         ?_I2C_Master_RepeatedStart 0070                        ?_vfpfcnvrt 0038  
            __end_of_DS3231_write 0254                __end_of__stringtab 0810                 ?_LCD_Print_String 0075  
                        _calendar 00CB                        sprintf@fmt 004A                   _I2C_Master_Init 0E24  
              ??_LCD_Print_String 0077                   _I2C_Master_Wait 0E17                   _I2C_Master_Stop 0DD9  
                 ___lwdiv@divisor 0070                   ___lwdiv@counter 0076                          __ptext10 0016  
                        __ptext11 004E                          __ptext20 02BF                          __ptext12 0090  
                        __ptext21 0E7A                          __ptext13 0F59                          __ptext30 0E91  
                        __ptext22 0E0B                          __ptext14 0EAE                          __ptext31 0DF5  
                        __ptext23 0DE2                          __ptext15 0254                          __ptext32 0F7E  
                        __ptext24 0DFF                          __ptext16 0E41                          __ptext33 0DEB  
                        __ptext25 0672                          __ptext17 0E24                          __ptext34 0F34  
                        __ptext26 0E64                          __ptext18 01F0                          __ptext35 0E31  
                        __ptext27 0E51                          __ptext19 0FCF                          __ptext36 0DD9  
                        __ptext28 0136                          __ptext37 0DD0                          __ptext29 018D  
                        __ptext38 0E17                          edit@temp 005F                          _vfprintf 0EEE  
        __end_of_I2C_Master_Start 0DD9          __end_of_I2C_Master_Write 0E41                          init_ram0 0007  
                       sprintf@ap 004E                  ___lwmod@dividend 0072                         stringcode 080A  
                ??_bcd_to_decimal 0073           __end_of_I2C_Master_Init 0E31           __end_of_I2C_Master_Wait 0E24  
         __end_of_I2C_Master_Stop 0DE2                       ??_vfpfcnvrt 003C                          sprintf@f 004F  
                        sprintf@s 0049                   ___lwmod@divisor 0070                   ___lwmod@counter 0074  
                        stringdir 080A                          stringtab 0800  
