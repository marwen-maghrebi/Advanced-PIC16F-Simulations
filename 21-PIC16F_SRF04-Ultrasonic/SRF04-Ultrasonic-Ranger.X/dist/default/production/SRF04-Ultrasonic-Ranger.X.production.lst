

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Nov 29 14:01:14 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=3
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0004                     fsr             equ	4
    62     0004                     fsr0            equ	4
    63     0000                     indf            equ	0
    64     0000                     indf0           equ	0
    65     0002                     pc              equ	2
    66     0002                     pcl             equ	2
    67     000A                     pclath          equ	10
    68     0003                     status          equ	3
    69     0000                     INDF            equ	0	;# 
    70     0001                     TMR0            equ	1	;# 
    71     0002                     PCL             equ	2	;# 
    72     0003                     STATUS          equ	3	;# 
    73     0004                     FSR             equ	4	;# 
    74     0005                     PORTA           equ	5	;# 
    75     0006                     PORTB           equ	6	;# 
    76     0007                     PORTC           equ	7	;# 
    77     0008                     PORTD           equ	8	;# 
    78     0009                     PORTE           equ	9	;# 
    79     000A                     PCLATH          equ	10	;# 
    80     000B                     INTCON          equ	11	;# 
    81     000C                     PIR1            equ	12	;# 
    82     000D                     PIR2            equ	13	;# 
    83     000E                     TMR1            equ	14	;# 
    84     000E                     TMR1L           equ	14	;# 
    85     000F                     TMR1H           equ	15	;# 
    86     0010                     T1CON           equ	16	;# 
    87     0011                     TMR2            equ	17	;# 
    88     0012                     T2CON           equ	18	;# 
    89     0013                     SSPBUF          equ	19	;# 
    90     0014                     SSPCON          equ	20	;# 
    91     0015                     CCPR1           equ	21	;# 
    92     0015                     CCPR1L          equ	21	;# 
    93     0016                     CCPR1H          equ	22	;# 
    94     0017                     CCP1CON         equ	23	;# 
    95     0018                     RCSTA           equ	24	;# 
    96     0019                     TXREG           equ	25	;# 
    97     001A                     RCREG           equ	26	;# 
    98     001B                     CCPR2           equ	27	;# 
    99     001B                     CCPR2L          equ	27	;# 
   100     001C                     CCPR2H          equ	28	;# 
   101     001D                     CCP2CON         equ	29	;# 
   102     001E                     ADRESH          equ	30	;# 
   103     001F                     ADCON0          equ	31	;# 
   104     0081                     OPTION_REG      equ	129	;# 
   105     0085                     TRISA           equ	133	;# 
   106     0086                     TRISB           equ	134	;# 
   107     0087                     TRISC           equ	135	;# 
   108     0088                     TRISD           equ	136	;# 
   109     0089                     TRISE           equ	137	;# 
   110     008C                     PIE1            equ	140	;# 
   111     008D                     PIE2            equ	141	;# 
   112     008E                     PCON            equ	142	;# 
   113     0091                     SSPCON2         equ	145	;# 
   114     0092                     PR2             equ	146	;# 
   115     0093                     SSPADD          equ	147	;# 
   116     0094                     SSPSTAT         equ	148	;# 
   117     0098                     TXSTA           equ	152	;# 
   118     0099                     SPBRG           equ	153	;# 
   119     009C                     CMCON           equ	156	;# 
   120     009D                     CVRCON          equ	157	;# 
   121     009E                     ADRESL          equ	158	;# 
   122     009F                     ADCON1          equ	159	;# 
   123     010C                     EEDATA          equ	268	;# 
   124     010D                     EEADR           equ	269	;# 
   125     010E                     EEDATH          equ	270	;# 
   126     010F                     EEADRH          equ	271	;# 
   127     018C                     EECON1          equ	396	;# 
   128     018D                     EECON2          equ	397	;# 
   129     0000                     INDF            equ	0	;# 
   130     0001                     TMR0            equ	1	;# 
   131     0002                     PCL             equ	2	;# 
   132     0003                     STATUS          equ	3	;# 
   133     0004                     FSR             equ	4	;# 
   134     0005                     PORTA           equ	5	;# 
   135     0006                     PORTB           equ	6	;# 
   136     0007                     PORTC           equ	7	;# 
   137     0008                     PORTD           equ	8	;# 
   138     0009                     PORTE           equ	9	;# 
   139     000A                     PCLATH          equ	10	;# 
   140     000B                     INTCON          equ	11	;# 
   141     000C                     PIR1            equ	12	;# 
   142     000D                     PIR2            equ	13	;# 
   143     000E                     TMR1            equ	14	;# 
   144     000E                     TMR1L           equ	14	;# 
   145     000F                     TMR1H           equ	15	;# 
   146     0010                     T1CON           equ	16	;# 
   147     0011                     TMR2            equ	17	;# 
   148     0012                     T2CON           equ	18	;# 
   149     0013                     SSPBUF          equ	19	;# 
   150     0014                     SSPCON          equ	20	;# 
   151     0015                     CCPR1           equ	21	;# 
   152     0015                     CCPR1L          equ	21	;# 
   153     0016                     CCPR1H          equ	22	;# 
   154     0017                     CCP1CON         equ	23	;# 
   155     0018                     RCSTA           equ	24	;# 
   156     0019                     TXREG           equ	25	;# 
   157     001A                     RCREG           equ	26	;# 
   158     001B                     CCPR2           equ	27	;# 
   159     001B                     CCPR2L          equ	27	;# 
   160     001C                     CCPR2H          equ	28	;# 
   161     001D                     CCP2CON         equ	29	;# 
   162     001E                     ADRESH          equ	30	;# 
   163     001F                     ADCON0          equ	31	;# 
   164     0081                     OPTION_REG      equ	129	;# 
   165     0085                     TRISA           equ	133	;# 
   166     0086                     TRISB           equ	134	;# 
   167     0087                     TRISC           equ	135	;# 
   168     0088                     TRISD           equ	136	;# 
   169     0089                     TRISE           equ	137	;# 
   170     008C                     PIE1            equ	140	;# 
   171     008D                     PIE2            equ	141	;# 
   172     008E                     PCON            equ	142	;# 
   173     0091                     SSPCON2         equ	145	;# 
   174     0092                     PR2             equ	146	;# 
   175     0093                     SSPADD          equ	147	;# 
   176     0094                     SSPSTAT         equ	148	;# 
   177     0098                     TXSTA           equ	152	;# 
   178     0099                     SPBRG           equ	153	;# 
   179     009C                     CMCON           equ	156	;# 
   180     009D                     CVRCON          equ	157	;# 
   181     009E                     ADRESL          equ	158	;# 
   182     009F                     ADCON1          equ	159	;# 
   183     010C                     EEDATA          equ	268	;# 
   184     010D                     EEADR           equ	269	;# 
   185     010E                     EEDATH          equ	270	;# 
   186     010F                     EEADRH          equ	271	;# 
   187     018C                     EECON1          equ	396	;# 
   188     018D                     EECON2          equ	397	;# 
   189     0010                     _T1CON          set	16
   190     000E                     _TMR1L          set	14
   191     000F                     _TMR1H          set	15
   192     0019                     _TXREG          set	25
   193     0080                     _TMR1ON         set	128
   194     0031                     _RB1            set	49
   195     0030                     _RB0            set	48
   196     0064                     _TXIF           set	100
   197     00C4                     _CREN           set	196
   198     00C7                     _SPEN           set	199
   199     0099                     _SPBRG          set	153
   200     0431                     _TRISB1         set	1073
   201     0430                     _TRISB0         set	1072
   202     04C5                     _TXEN           set	1221
   203     04C4                     _SYNC           set	1220
   204     04C2                     _BRGH           set	1218
   205     043F                     _TRISC7         set	1087
   206     043E                     _TRISC6         set	1086
   207                           
   208                           	psect	strings
   209     0003                     __pstrings:
   210     0003                     stringtab:
   211     0003                     __stringtab:
   212     0003                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215     0003                     stringdir:
   216     0003  3000               	movlw	high stringdir
   217     0004  008A               	movwf	10
   218     0005  0804               	movf	4,w
   219     0006  0A84               	incf	4,f
   220     0007  0782               	addwf	2,f
   221     0008                     __stringbase:
   222     0008  3400               	retlw	0
   223     0009                     __end_of__stringtab:
   224     0009                     STR_1:
   225     0009  3444               	retlw	68	;'D'
   226     000A  3469               	retlw	105	;'i'
   227     000B  3473               	retlw	115	;'s'
   228     000C  3474               	retlw	116	;'t'
   229     000D  3461               	retlw	97	;'a'
   230     000E  346E               	retlw	110	;'n'
   231     000F  3463               	retlw	99	;'c'
   232     0010  3465               	retlw	101	;'e'
   233     0011  343A               	retlw	58	;':'
   234     0012  3420               	retlw	32	;' '
   235     0013  3425               	retlw	37	;'%'
   236     0014  3475               	retlw	117	;'u'
   237     0015  3463               	retlw	99	;'c'
   238     0016  346D               	retlw	109	;'m'
   239     0017  340D               	retlw	13
   240     0018  340A               	retlw	10
   241     0019  3400               	retlw	0
   242                           
   243                           	psect	cinit
   244     07EB                     start_initialization:	
   245                           ; #config settings
   246                           
   247     07EB                     __initialization:
   248                           
   249                           ; Clear objects allocated to BANK0
   250     07EB  1383               	bcf	3,7	;select IRP bank0
   251     07EC  3046               	movlw	low __pbssBANK0
   252     07ED  0084               	movwf	4
   253     07EE  306B               	movlw	low (__pbssBANK0+37)
   254     07EF  120A  118A  2526  120A  118A  	fcall	clear_ram0
   255                           
   256                           ; Clear objects allocated to BANK1
   257     07F4  30A0               	movlw	low __pbssBANK1
   258     07F5  0084               	movwf	4
   259     07F6  30C0               	movlw	low (__pbssBANK1+32)
   260     07F7  120A  118A  2526  120A  118A  	fcall	clear_ram0
   261     07FC                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264     07FC                     __end_of__initialization:
   265     07FC  0183               	clrf	3
   266     07FD  120A  118A  2E0B   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269     0046                     __pbssBANK0:
   270     0046                     _width:
   271     0046                     	ds	2
   272     0048                     _prec:
   273     0048                     	ds	2
   274     004A                     _flags:
   275     004A                     	ds	1
   276     004B                     _uart_buffer:
   277     004B                     	ds	32
   278                           
   279                           	psect	bssBANK1
   280     00A0                     __pbssBANK1:
   281     00A0                     _dbuf:
   282     00A0                     	ds	32
   283                           
   284                           	psect	clrtext
   285     0526                     clear_ram0:	
   286                           ;	Called with FSR containing the base address, and
   287                           ;	W with the last address+1
   288                           
   289     0526  0064               	clrwdt	;clear the watchdog before getting into this loop
   290     0527                     clrloop0:
   291     0527  0180               	clrf	0	;clear RAM location pointed to by FSR
   292     0528  0A84               	incf	4,f	;increment pointer
   293     0529  0604               	xorwf	4,w	;XOR with final address
   294     052A  1903               	btfsc	3,2	;have we reached the end yet?
   295     052B  3400               	retlw	0	;all done for this memory range, return
   296     052C  0604               	xorwf	4,w	;XOR again to restore value
   297     052D  2D27               	goto	clrloop0	;do the next byte
   298                           
   299                           	psect	cstackCOMMON
   300     0070                     __pcstackCOMMON:
   301     0070                     ?_putch:
   302     0070                     ?_initialize_uart:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_uart_send_byte:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_initialize_pins:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_fputc:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?___lwdiv:	
   318                           ; 2 bytes @ 0x0
   319                           
   320     0070                     ?___lwmod:	
   321                           ; 2 bytes @ 0x0
   322                           
   323     0070                     uart_send_byte@data:	
   324                           ; 2 bytes @ 0x0
   325                           
   326     0070                     putch@c:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ___lwdiv@divisor:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ___lwmod@divisor:	
   333                           ; 2 bytes @ 0x0
   334                           
   335     0070                     fputc@c:	
   336                           ; 2 bytes @ 0x0
   337                           
   338     0070                     ??_putch:	
   339                           ; 2 bytes @ 0x0
   340                           
   341     0070                     ??_initialize_uart:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ??_uart_send_byte:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ??_initialize_pins:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352     0070                     	ds	1
   353     0071                     ?_uart_send_string:
   354     0071                     uart_send_string@str:	
   355                           ; 1 bytes @ 0x1
   356                           
   357                           
   358                           ; 1 bytes @ 0x1
   359     0071                     	ds	1
   360     0072                     ___lwdiv@dividend:
   361     0072                     ___lwmod@dividend:	
   362                           ; 2 bytes @ 0x2
   363                           
   364     0072                     fputc@fp:	
   365                           ; 2 bytes @ 0x2
   366                           
   367     0072                     ??_uart_send_string:	
   368                           ; 2 bytes @ 0x2
   369                           
   370                           
   371                           ; 1 bytes @ 0x2
   372     0072                     	ds	2
   373     0074                     ___lwmod@counter:
   374     0074                     ___lwdiv@quotient:	
   375                           ; 1 bytes @ 0x4
   376                           
   377     0074                     ??_fputc:	
   378                           ; 2 bytes @ 0x4
   379                           
   380     0074                     ??___lwdiv:	
   381                           ; 1 bytes @ 0x4
   382                           
   383     0074                     ??___lwmod:	
   384                           ; 1 bytes @ 0x4
   385                           
   386                           
   387                           ; 1 bytes @ 0x4
   388     0074                     	ds	2
   389     0076                     ___lwdiv@counter:
   390                           
   391                           ; 1 bytes @ 0x6
   392     0076                     	ds	1
   393     0077                     ?_measure_distance:
   394                           
   395                           ; 2 bytes @ 0x7
   396     0077                     	ds	2
   397     0079                     ??_measure_distance:
   398                           
   399                           ; 1 bytes @ 0x9
   400     0079                     	ds	1
   401     007A                     measure_distance@pulse_duration:
   402                           
   403                           ; 2 bytes @ 0xA
   404     007A                     	ds	3
   405     007D                     vfprintf@cfmt:
   406     007D                     ??_vfprintf:	
   407                           ; 1 bytes @ 0xD
   408                           
   409                           
   410                           ; 1 bytes @ 0xD
   411     007D                     	ds	1
   412                           
   413                           	psect	cstackBANK0
   414     0020                     __pcstackBANK0:
   415     0020                     ?_vfpfcnvrt:
   416     0020                     vfpfcnvrt@fp:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 2 bytes @ 0x0
   421     0020                     	ds	2
   422     0022                     vfpfcnvrt@fmt:
   423                           
   424                           ; 1 bytes @ 0x2
   425     0022                     	ds	1
   426     0023                     vfpfcnvrt@ap:
   427                           
   428                           ; 1 bytes @ 0x3
   429     0023                     	ds	1
   430     0024                     ??_vfpfcnvrt:
   431                           
   432                           ; 1 bytes @ 0x4
   433     0024                     	ds	2
   434     0026                     vfpfcnvrt@convarg:
   435                           
   436                           ; 4 bytes @ 0x6
   437     0026                     	ds	4
   438     002A                     vfpfcnvrt@cp:
   439                           
   440                           ; 1 bytes @ 0xA
   441     002A                     	ds	1
   442     002B                     vfpfcnvrt@c:
   443                           
   444                           ; 1 bytes @ 0xB
   445     002B                     	ds	1
   446     002C                     ?_vfprintf:
   447     002C                     vfprintf@fp:	
   448                           ; 2 bytes @ 0xC
   449                           
   450                           
   451                           ; 2 bytes @ 0xC
   452     002C                     	ds	2
   453     002E                     vfprintf@fmt:
   454                           
   455                           ; 1 bytes @ 0xE
   456     002E                     	ds	1
   457     002F                     vfprintf@ap:
   458                           
   459                           ; 1 bytes @ 0xF
   460     002F                     	ds	1
   461     0030                     ?_sprintf:
   462     0030                     sprintf@s:	
   463                           ; 2 bytes @ 0x10
   464                           
   465                           
   466                           ; 1 bytes @ 0x10
   467     0030                     	ds	1
   468     0031                     sprintf@fmt:
   469                           
   470                           ; 1 bytes @ 0x11
   471     0031                     	ds	3
   472     0034                     ??_sprintf:
   473                           
   474                           ; 1 bytes @ 0x14
   475     0034                     	ds	1
   476     0035                     sprintf@ap:
   477                           
   478                           ; 1 bytes @ 0x15
   479     0035                     	ds	1
   480     0036                     sprintf@f:
   481                           
   482                           ; 11 bytes @ 0x16
   483     0036                     	ds	11
   484     0041                     ??_main:
   485                           
   486                           ; 1 bytes @ 0x21
   487     0041                     	ds	3
   488     0044                     main@distance:
   489                           
   490                           ; 2 bytes @ 0x24
   491     0044                     	ds	2
   492                           
   493                           	psect	maintext
   494     060B                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 95 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  distance        2   36[BANK0 ] unsigned short 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       2       0       0       0
   516 ;;      Temps:          0       3       0       0       0
   517 ;;      Totals:         0       5       0       0       0
   518 ;;Total ram usage:        5 bytes
   519 ;; Hardware stack levels required when called: 5
   520 ;; This function calls:
   521 ;;		_initialize_pins
   522 ;;		_initialize_uart
   523 ;;		_measure_distance
   524 ;;		_sprintf
   525 ;;		_uart_send_string
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531     060B                     _main:	
   532                           ;psect for function _main
   533                           
   534     060B                     l1035:	
   535                           ;incstack = 0
   536                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   537                           
   538                           
   539                           ;main.c: 96:     uint16_t distance;;main.c: 99:     initialize_pins();
   540     060B  120A  118A  251E  120A  118A  	fcall	_initialize_pins
   541                           
   542                           ;main.c: 100:     initialize_uart();
   543     0610  120A  118A  2538  120A  118A  	fcall	_initialize_uart
   544     0615                     l1037:
   545                           
   546                           ;main.c: 103:     T1CON = 0x10;
   547     0615  3010               	movlw	16
   548     0616  1283               	bcf	3,5	;RP0=0, select bank0
   549     0617  1303               	bcf	3,6	;RP1=0, select bank0
   550     0618  0090               	movwf	16	;volatile
   551     0619                     l1039:
   552                           
   553                           ;main.c: 106:         distance = measure_distance();
   554     0619  120A  118A  25A6  120A  118A  	fcall	_measure_distance
   555     061E  0878               	movf	?_measure_distance+1,w
   556     061F  1283               	bcf	3,5	;RP0=0, select bank0
   557     0620  1303               	bcf	3,6	;RP1=0, select bank0
   558     0621  00C5               	movwf	main@distance+1
   559     0622  0877               	movf	?_measure_distance,w
   560     0623  00C4               	movwf	main@distance
   561     0624                     l1041:
   562                           
   563                           ;main.c: 109:         sprintf(uart_buffer, "Distance: %ucm\r\n", distance);
   564     0624  304B               	movlw	(low (_uart_buffer| 0))& (0+255)
   565     0625  00B0               	movwf	sprintf@s
   566     0626  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   567     0627  00B1               	movwf	sprintf@fmt
   568     0628  0845               	movf	main@distance+1,w
   569     0629  00B3               	movwf	?_sprintf+3
   570     062A  0844               	movf	main@distance,w
   571     062B  00B2               	movwf	?_sprintf+2
   572     062C  120A  118A  255E  120A  118A  	fcall	_sprintf
   573     0631                     l1043:
   574                           
   575                           ;main.c: 110:         uart_send_string(uart_buffer);
   576     0631  304B               	movlw	(low (_uart_buffer| 0))& (0+255)
   577     0632  00F1               	movwf	uart_send_string@str
   578     0633  120A  118A  254A  120A  118A  	fcall	_uart_send_string
   579     0638                     l1045:
   580                           
   581                           ;main.c: 112:         _delay((unsigned long)((500)*(20000000/4000.0)));
   582     0638  300D               	movlw	13
   583     0639  1283               	bcf	3,5	;RP0=0, select bank0
   584     063A  1303               	bcf	3,6	;RP1=0, select bank0
   585     063B  00C3               	movwf	??_main+2
   586     063C  30AF               	movlw	175
   587     063D  00C2               	movwf	??_main+1
   588     063E  30B5               	movlw	181
   589     063F  00C1               	movwf	??_main
   590     0640                     u577:
   591     0640  0BC1               	decfsz	??_main,f
   592     0641  2E40               	goto	u577
   593     0642  0BC2               	decfsz	??_main+1,f
   594     0643  2E40               	goto	u577
   595     0644  0BC3               	decfsz	??_main+2,f
   596     0645  2E40               	goto	u577
   597     0646  2E47               	nop2
   598     0647  2E19               	goto	l1039
   599     0648  120A  118A  2800   	ljmp	start
   600     064B                     __end_of_main:
   601                           
   602                           	psect	text1
   603     054A                     __ptext1:	
   604 ;; *************** function _uart_send_string *****************
   605 ;; Defined at:
   606 ;;		line 54 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  str             1    1[COMMON] PTR const unsigned char 
   609 ;;		 -> uart_buffer(32), 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         1       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         1       0       0       0       0
   625 ;;Total ram usage:        1 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 1
   628 ;; This function calls:
   629 ;;		_uart_send_byte
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635     054A                     _uart_send_string:	
   636                           ;psect for function _uart_send_string
   637                           
   638     054A                     l993:	
   639                           ;incstack = 0
   640                           ; Regs used in _uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   641                           
   642                           
   643                           ;main.c: 55:     while (*str) {
   644     054A  2D55               	goto	l999
   645     054B                     l995:
   646                           
   647                           ;main.c: 56:         uart_send_byte(*str++);
   648     054B  0871               	movf	uart_send_string@str,w
   649     054C  0084               	movwf	4
   650     054D  0800               	movf	0,w
   651     054E  120A  118A  252E  120A  118A  	fcall	_uart_send_byte
   652     0553                     l997:
   653     0553  3001               	movlw	1
   654     0554  07F1               	addwf	uart_send_string@str,f
   655     0555                     l999:
   656                           
   657                           ;main.c: 55:     while (*str) {
   658     0555  0871               	movf	uart_send_string@str,w
   659     0556  0084               	movwf	4
   660     0557  1383               	bcf	3,7	;select IRP bank0
   661     0558  0800               	movf	0,w
   662     0559  1D03               	btfss	3,2
   663     055A  2D5C               	goto	u541
   664     055B  2D5D               	goto	u540
   665     055C                     u541:
   666     055C  2D4B               	goto	l995
   667     055D                     u540:
   668     055D                     l57:
   669     055D  0008               	return
   670     055E                     __end_of_uart_send_string:
   671                           
   672                           	psect	text2
   673     052E                     __ptext2:	
   674 ;; *************** function _uart_send_byte *****************
   675 ;; Defined at:
   676 ;;		line 49 in file "main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  data            1    wreg     unsigned char 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  data            1    0[COMMON] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         1       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         1       0       0       0       0
   694 ;;Total ram usage:        1 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_uart_send_string
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703     052E                     _uart_send_byte:	
   704                           ;psect for function _uart_send_byte
   705                           
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _uart_send_byte: [wreg]
   709                           ;uart_send_byte@data stored from wreg
   710     052E  00F0               	movwf	uart_send_byte@data
   711     052F                     l977:
   712     052F                     l48:	
   713                           ;main.c: 50:     while (!TXIF);
   714                           
   715     052F  1283               	bcf	3,5	;RP0=0, select bank0
   716     0530  1303               	bcf	3,6	;RP1=0, select bank0
   717     0531  1E0C               	btfss	12,4	;volatile
   718     0532  2D34               	goto	u521
   719     0533  2D35               	goto	u520
   720     0534                     u521:
   721     0534  2D2F               	goto	l48
   722     0535                     u520:
   723     0535                     l979:
   724                           
   725                           ;main.c: 51:     TXREG = data;
   726     0535  0870               	movf	uart_send_byte@data,w
   727     0536  0099               	movwf	25	;volatile
   728     0537                     l51:
   729     0537  0008               	return
   730     0538                     __end_of_uart_send_byte:
   731                           
   732                           	psect	text3
   733     055E                     __ptext3:	
   734 ;; *************** function _sprintf *****************
   735 ;; Defined at:
   736 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  s               1   16[BANK0 ] PTR unsigned char 
   739 ;;		 -> uart_buffer(32), 
   740 ;;  fmt             1   17[BANK0 ] PTR const unsigned char 
   741 ;;		 -> STR_1(17), 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  f              11   22[BANK0 ] struct _IO_FILE
   744 ;;  ret             2    0        int 
   745 ;;  ap              1   21[BANK0 ] PTR void [1]
   746 ;;		 -> ?_sprintf(2), 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2   16[BANK0 ] int 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       4       0       0       0
   757 ;;      Locals:         0      12       0       0       0
   758 ;;      Temps:          0       1       0       0       0
   759 ;;      Totals:         0      17       0       0       0
   760 ;;Total ram usage:       17 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 4
   763 ;; This function calls:
   764 ;;		_vfprintf
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770     055E                     _sprintf:	
   771                           ;psect for function _sprintf
   772                           
   773     055E                     l1021:	
   774                           ;incstack = 0
   775                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   776                           
   777     055E  3032               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
   778     055F  1283               	bcf	3,5	;RP0=0, select bank0
   779     0560  1303               	bcf	3,6	;RP1=0, select bank0
   780     0561  00B5               	movwf	sprintf@ap
   781     0562                     l1023:
   782     0562  0830               	movf	sprintf@s,w
   783     0563  00B6               	movwf	sprintf@f
   784     0564  3000               	movlw	0
   785     0565  00B7               	movwf	sprintf@f+1
   786     0566                     l1025:
   787     0566  01B8               	clrf	sprintf@f+2
   788     0567  01B9               	clrf	sprintf@f+3
   789     0568                     l1027:
   790     0568  01BF               	clrf	sprintf@f+9
   791     0569  01C0               	clrf	sprintf@f+10
   792     056A                     l1029:
   793     056A  3036               	movlw	low sprintf@f
   794     056B  00AC               	movwf	vfprintf@fp
   795     056C  3000               	movlw	high sprintf@f
   796     056D  00AD               	movwf	vfprintf@fp+1
   797     056E  0831               	movf	sprintf@fmt,w
   798     056F  00AE               	movwf	vfprintf@fmt
   799     0570  3035               	movlw	(low (sprintf@ap| 0))& (0+255)
   800     0571  00AF               	movwf	vfprintf@ap
   801     0572  120A  118A  2581  120A  118A  	fcall	_vfprintf
   802     0577                     l1031:
   803     0577  1283               	bcf	3,5	;RP0=0, select bank0
   804     0578  1303               	bcf	3,6	;RP1=0, select bank0
   805     0579  0838               	movf	sprintf@f+2,w
   806     057A  0730               	addwf	sprintf@s,w
   807     057B  00B4               	movwf	??_sprintf
   808     057C  0834               	movf	??_sprintf,w
   809     057D  0084               	movwf	4
   810     057E  1383               	bcf	3,7	;select IRP bank0
   811     057F  0180               	clrf	0
   812     0580                     l626:
   813     0580  0008               	return
   814     0581                     __end_of_sprintf:
   815                           
   816                           	psect	text4
   817     0581                     __ptext4:	
   818 ;; *************** function _vfprintf *****************
   819 ;; Defined at:
   820 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
   823 ;;		 -> sprintf@f(11), 
   824 ;;  fmt             1   14[BANK0 ] PTR const unsigned char 
   825 ;;		 -> STR_1(17), 
   826 ;;  ap              1   15[BANK0 ] PTR PTR void 
   827 ;;		 -> sprintf@ap(1), 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  cfmt            1   13[COMMON] PTR unsigned char 
   830 ;;		 -> STR_1(17), 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2   12[BANK0 ] int 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       4       0       0       0
   841 ;;      Locals:         1       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         1       4       0       0       0
   844 ;;Total ram usage:        5 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; Hardware stack levels required when called: 3
   847 ;; This function calls:
   848 ;;		_vfpfcnvrt
   849 ;; This function is called by:
   850 ;;		_sprintf
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854     0581                     _vfprintf:	
   855                           ;psect for function _vfprintf
   856                           
   857     0581                     l981:	
   858                           ;incstack = 0
   859                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   860                           
   861                           
   862                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   863     0581  1283               	bcf	3,5	;RP0=0, select bank0
   864     0582  1303               	bcf	3,6	;RP1=0, select bank0
   865     0583  082E               	movf	vfprintf@fmt,w
   866     0584  00FD               	movwf	vfprintf@cfmt
   867                           
   868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   869     0585  2D95               	goto	l985
   870     0586                     l983:
   871                           
   872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   873     0586  1283               	bcf	3,5	;RP0=0, select bank0
   874     0587  1303               	bcf	3,6	;RP1=0, select bank0
   875     0588  082C               	movf	vfprintf@fp,w
   876     0589  00A0               	movwf	vfpfcnvrt@fp
   877     058A  082D               	movf	vfprintf@fp+1,w
   878     058B  00A1               	movwf	vfpfcnvrt@fp+1
   879     058C  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
   880     058D  00A2               	movwf	vfpfcnvrt@fmt
   881     058E  082F               	movf	vfprintf@ap,w
   882     058F  00A3               	movwf	vfpfcnvrt@ap
   883     0590  120A  118A  2727  120A  118A  	fcall	_vfpfcnvrt
   884     0595                     l985:
   885                           
   886                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   887     0595  087D               	movf	vfprintf@cfmt,w
   888     0596  0084               	movwf	4
   889     0597  120A  118A  2003  120A  118A  	fcall	stringdir
   890     059C  3A00               	xorlw	0
   891     059D  1D03               	skipz
   892     059E  2DA0               	goto	u531
   893     059F  2DA1               	goto	u530
   894     05A0                     u531:
   895     05A0  2D86               	goto	l983
   896     05A1                     u530:
   897     05A1                     l987:
   898                           
   899                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   900     05A1  1283               	bcf	3,5	;RP0=0, select bank0
   901     05A2  1303               	bcf	3,6	;RP1=0, select bank0
   902     05A3  01AC               	clrf	?_vfprintf
   903     05A4  01AD               	clrf	?_vfprintf+1
   904     05A5                     l670:
   905     05A5  0008               	return
   906     05A6                     __end_of_vfprintf:
   907                           
   908                           	psect	text5
   909     0727                     __ptext5:	
   910 ;; *************** function _vfpfcnvrt *****************
   911 ;; Defined at:
   912 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   915 ;;		 -> sprintf@f(11), 
   916 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
   917 ;;		 -> vfprintf@cfmt(1), 
   918 ;;  ap              1    3[BANK0 ] PTR PTR void 
   919 ;;		 -> sprintf@ap(1), 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  convarg         4    6[BANK0 ] struct .
   922 ;;  c               1   11[BANK0 ] unsigned char 
   923 ;;  cp              1   10[BANK0 ] PTR unsigned char 
   924 ;;		 -> STR_1(17), 
   925 ;;  done            1    0        _Bool 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         0       4       0       0       0
   936 ;;      Locals:         0       6       0       0       0
   937 ;;      Temps:          0       2       0       0       0
   938 ;;      Totals:         0      12       0       0       0
   939 ;;Total ram usage:       12 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; Hardware stack levels required when called: 2
   942 ;; This function calls:
   943 ;;		___lwdiv
   944 ;;		___lwmod
   945 ;;		_fputc
   946 ;; This function is called by:
   947 ;;		_vfprintf
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951     0727                     _vfpfcnvrt:	
   952                           ;psect for function _vfpfcnvrt
   953                           
   954     0727                     l933:	
   955                           ;incstack = 0
   956                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   957                           
   958                           
   959                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   960     0727  1283               	bcf	3,5	;RP0=0, select bank0
   961     0728  1303               	bcf	3,6	;RP1=0, select bank0
   962     0729  0822               	movf	vfpfcnvrt@fmt,w
   963     072A  0084               	movwf	4
   964     072B  0800               	movf	0,w
   965     072C  0084               	movwf	4
   966     072D  120A  118A  2003  120A  118A  	fcall	stringdir
   967     0732  3A25               	xorlw	37
   968     0733  1D03               	skipz
   969     0734  2F36               	goto	u471
   970     0735  2F37               	goto	u470
   971     0736                     u471:
   972     0736  2FD1               	goto	l971
   973     0737                     u470:
   974     0737                     l935:
   975                           
   976                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   977     0737  0822               	movf	vfpfcnvrt@fmt,w
   978     0738  0084               	movwf	4
   979     0739  3001               	movlw	1
   980     073A  0780               	addwf	0,f
   981     073B                     l937:
   982                           
   983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   984     073B  01C6               	clrf	_width
   985     073C  01C7               	clrf	_width+1
   986     073D  3000               	movlw	0
   987     073E  00CA               	movwf	_flags
   988     073F                     l939:
   989                           
   990                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   991     073F  30FF               	movlw	255
   992     0740  00C8               	movwf	_prec
   993     0741  30FF               	movlw	255
   994     0742  00C9               	movwf	_prec+1
   995     0743                     l941:
   996                           
   997                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1439:   if (0
   998     0743  0822               	movf	vfpfcnvrt@fmt,w
   999     0744  0084               	movwf	4
  1000     0745  0800               	movf	0,w
  1001     0746  00AA               	movwf	vfpfcnvrt@cp
  1002     0747                     l943:
  1003     0747  082A               	movf	vfpfcnvrt@cp,w
  1004     0748  0084               	movwf	4
  1005     0749  120A  118A  2003  120A  118A  	fcall	stringdir
  1006     074E  3A75               	xorlw	117
  1007     074F  1D03               	skipz
  1008     0750  2F52               	goto	u481
  1009     0751  2F53               	goto	u480
  1010     0752                     u481:
  1011     0752  2FCA               	goto	l967
  1012     0753                     u480:
  1013     0753                     l945:
  1014                           
  1015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1016     0753  0823               	movf	vfpfcnvrt@ap,w
  1017     0754  0084               	movwf	4
  1018     0755  1383               	bcf	3,7	;select IRP bank0
  1019     0756  0800               	movf	0,w
  1020     0757  00FF               	movwf	btemp+1
  1021     0758  3002               	movlw	2
  1022     0759  0780               	addwf	0,f
  1023     075A  087F               	movf	btemp+1,w
  1024     075B  0084               	movwf	4
  1025     075C  0800               	movf	0,w
  1026     075D  00A6               	movwf	vfpfcnvrt@convarg
  1027     075E  0A84               	incf	4,f
  1028     075F  0800               	movf	0,w
  1029     0760  00A7               	movwf	vfpfcnvrt@convarg+1
  1030     0761                     l947:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1033     0761  0822               	movf	vfpfcnvrt@fmt,w
  1034     0762  0084               	movwf	4
  1035     0763  082A               	movf	vfpfcnvrt@cp,w
  1036     0764  3E01               	addlw	1
  1037     0765  0080               	movwf	0
  1038                           
  1039                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1040     0766  2FBF               	goto	l965
  1041     0767                     l655:	
  1042                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
  1043                           
  1044                           
  1045                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1046     0767  3020               	movlw	32
  1047     0768  00AB               	movwf	vfpfcnvrt@c
  1048     0769                     l949:
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1051     0769  3001               	movlw	1
  1052     076A  02AB               	subwf	vfpfcnvrt@c,f
  1053     076B  082B               	movf	vfpfcnvrt@c,w
  1054     076C  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1055     076D  0084               	movwf	4
  1056     076E  300A               	movlw	10
  1057     076F  00F0               	movwf	___lwmod@divisor
  1058     0770  3000               	movlw	0
  1059     0771  00F1               	movwf	___lwmod@divisor+1
  1060     0772  0827               	movf	vfpfcnvrt@convarg+1,w
  1061     0773  00F3               	movwf	___lwmod@dividend+1
  1062     0774  0826               	movf	vfpfcnvrt@convarg,w
  1063     0775  00F2               	movwf	___lwmod@dividend
  1064     0776  120A  118A  25D3  120A  118A  	fcall	___lwmod
  1065     077B  0870               	movf	?___lwmod,w
  1066     077C  3E30               	addlw	48
  1067     077D  1383               	bcf	3,7	;select IRP bank1
  1068     077E  0080               	movwf	0
  1069     077F                     l951:
  1070                           
  1071                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1072     077F  300A               	movlw	10
  1073     0780  00F0               	movwf	___lwdiv@divisor
  1074     0781  3000               	movlw	0
  1075     0782  00F1               	movwf	___lwdiv@divisor+1
  1076     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1078     0785  0827               	movf	vfpfcnvrt@convarg+1,w
  1079     0786  00F3               	movwf	___lwdiv@dividend+1
  1080     0787  0826               	movf	vfpfcnvrt@convarg,w
  1081     0788  00F2               	movwf	___lwdiv@dividend
  1082     0789  120A  118A  264B  120A  118A  	fcall	___lwdiv
  1083     078E  0871               	movf	?___lwdiv+1,w
  1084     078F  1283               	bcf	3,5	;RP0=0, select bank0
  1085     0790  1303               	bcf	3,6	;RP1=0, select bank0
  1086     0791  00A7               	movwf	vfpfcnvrt@convarg+1
  1087     0792  0870               	movf	?___lwdiv,w
  1088     0793  00A6               	movwf	vfpfcnvrt@convarg
  1089     0794                     l953:
  1090                           
  1091                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1092     0794  0826               	movf	vfpfcnvrt@convarg,w
  1093     0795  0427               	iorwf	vfpfcnvrt@convarg+1,w
  1094     0796  1903               	btfsc	3,2
  1095     0797  2F99               	goto	u491
  1096     0798  2F9A               	goto	u490
  1097     0799                     u491:
  1098     0799  2FB8               	goto	l961
  1099     079A                     u490:
  1100     079A                     l955:
  1101     079A  082B               	movf	vfpfcnvrt@c,w
  1102     079B  1D03               	btfss	3,2
  1103     079C  2F9E               	goto	u501
  1104     079D  2F9F               	goto	u500
  1105     079E                     u501:
  1106     079E  2F69               	goto	l949
  1107     079F                     u500:
  1108     079F  2FB8               	goto	l961
  1109     07A0                     l957:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1112     07A0  082B               	movf	vfpfcnvrt@c,w
  1113     07A1  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1114     07A2  0084               	movwf	4
  1115     07A3  1383               	bcf	3,7	;select IRP bank1
  1116     07A4  0800               	movf	0,w
  1117     07A5  00A4               	movwf	??_vfpfcnvrt
  1118     07A6  01A5               	clrf	??_vfpfcnvrt+1
  1119     07A7  0824               	movf	??_vfpfcnvrt,w
  1120     07A8  00F0               	movwf	fputc@c
  1121     07A9  0825               	movf	??_vfpfcnvrt+1,w
  1122     07AA  00F1               	movwf	fputc@c+1
  1123     07AB  0820               	movf	vfpfcnvrt@fp,w
  1124     07AC  00F2               	movwf	fputc@fp
  1125     07AD  0821               	movf	vfpfcnvrt@fp+1,w
  1126     07AE  00F3               	movwf	fputc@fp+1
  1127     07AF  120A  118A  268D  120A  118A  	fcall	_fputc
  1128     07B4                     l959:
  1129     07B4  3001               	movlw	1
  1130     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1131     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1132     07B7  07AB               	addwf	vfpfcnvrt@c,f
  1133     07B8                     l961:
  1134                           
  1135                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1136     07B8  3020               	movlw	32
  1137     07B9  062B               	xorwf	vfpfcnvrt@c,w
  1138     07BA  1D03               	btfss	3,2
  1139     07BB  2FBD               	goto	u511
  1140     07BC  2FBE               	goto	u510
  1141     07BD                     u511:
  1142     07BD  2FA0               	goto	l957
  1143     07BE                     u510:
  1144     07BE  2FEA               	goto	l663
  1145     07BF                     l965:
  1146     07BF  082A               	movf	vfpfcnvrt@cp,w
  1147     07C0  0084               	movwf	4
  1148     07C1  120A  118A  2003  120A  118A  	fcall	stringdir
  1149                           
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 1, Range of values is 117 to 117
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            4     3 (average)
  1155                           ; direct_byte           14    11 (fixed)
  1156                           ; jumptable            263     9 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158     07C6  3A75               	xorlw	117	; case 117
  1159     07C7  1903               	skipnz
  1160     07C8  2F67               	goto	l655
  1161     07C9  2FCA               	goto	l967
  1162     07CA                     l967:
  1163                           
  1164                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1165     07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1166     07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1167     07CC  0822               	movf	vfpfcnvrt@fmt,w
  1168     07CD  0084               	movwf	4
  1169     07CE  3001               	movlw	1
  1170     07CF  0780               	addwf	0,f
  1171     07D0  2FEA               	goto	l663
  1172     07D1                     l971:
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1175     07D1  0822               	movf	vfpfcnvrt@fmt,w
  1176     07D2  0084               	movwf	4
  1177     07D3  0800               	movf	0,w
  1178     07D4  0084               	movwf	4
  1179     07D5  120A  118A  2003  120A  118A  	fcall	stringdir
  1180     07DA  00A4               	movwf	??_vfpfcnvrt
  1181     07DB  01A5               	clrf	??_vfpfcnvrt+1
  1182     07DC  0824               	movf	??_vfpfcnvrt,w
  1183     07DD  00F0               	movwf	fputc@c
  1184     07DE  0825               	movf	??_vfpfcnvrt+1,w
  1185     07DF  00F1               	movwf	fputc@c+1
  1186     07E0  0820               	movf	vfpfcnvrt@fp,w
  1187     07E1  00F2               	movwf	fputc@fp
  1188     07E2  0821               	movf	vfpfcnvrt@fp+1,w
  1189     07E3  00F3               	movwf	fputc@fp+1
  1190     07E4  120A  118A  268D  120A  118A  	fcall	_fputc
  1191     07E9  2FCA               	goto	l967
  1192     07EA                     l663:
  1193     07EA  0008               	return
  1194     07EB                     __end_of_vfpfcnvrt:
  1195                           
  1196                           	psect	text6
  1197     068D                     __ptext6:	
  1198 ;; *************** function _fputc *****************
  1199 ;; Defined at:
  1200 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  c               2    0[COMMON] int 
  1203 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1204 ;;		 -> sprintf@f(11), 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  2    0[COMMON] int 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         4       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          9       0       0       0       0
  1219 ;;      Totals:        13       0       0       0       0
  1220 ;;Total ram usage:       13 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 1
  1223 ;; This function calls:
  1224 ;;		_putch
  1225 ;; This function is called by:
  1226 ;;		_vfpfcnvrt
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230     068D                     _fputc:	
  1231                           ;psect for function _fputc
  1232                           
  1233     068D                     l919:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1236                           
  1237     068D  0872               	movf	fputc@fp,w
  1238     068E  0473               	iorwf	fputc@fp+1,w
  1239     068F  1903               	btfsc	3,2
  1240     0690  2E92               	goto	u421
  1241     0691  2E93               	goto	u420
  1242     0692                     u421:
  1243     0692  2E99               	goto	l923
  1244     0693                     u420:
  1245     0693                     l921:
  1246     0693  0872               	movf	fputc@fp,w
  1247     0694  0473               	iorwf	fputc@fp+1,w
  1248     0695  1D03               	btfss	3,2
  1249     0696  2E98               	goto	u431
  1250     0697  2E99               	goto	u430
  1251     0698                     u431:
  1252     0698  2EA0               	goto	l925
  1253     0699                     u430:
  1254     0699                     l923:
  1255     0699  0870               	movf	fputc@c,w
  1256     069A  120A  118A  251D  120A  118A  	fcall	_putch
  1257     069F  2F26               	goto	l682
  1258     06A0                     l925:
  1259     06A0  0872               	movf	fputc@fp,w
  1260     06A1  3E09               	addlw	9
  1261     06A2  00F4               	movwf	??_fputc
  1262     06A3  0873               	movf	fputc@fp+1,w
  1263     06A4  1803               	skipnc
  1264     06A5  3E01               	addlw	1
  1265     06A6  3E00               	addlw	0
  1266     06A7  00F5               	movwf	??_fputc+1
  1267     06A8  0874               	movf	??_fputc,w
  1268     06A9  0084               	movwf	4
  1269     06AA  1783               	bsf	3,7
  1270     06AB  1C75               	btfss	??_fputc+1,0
  1271     06AC  1383               	bcf	3,7
  1272     06AD  0800               	movf	0,w
  1273     06AE  00F6               	movwf	??_fputc+2
  1274     06AF  0A84               	incf	4,f
  1275     06B0  0800               	movf	0,w
  1276     06B1  00F7               	movwf	??_fputc+3
  1277     06B2  0876               	movf	??_fputc+2,w
  1278     06B3  0477               	iorwf	??_fputc+3,w
  1279     06B4  1903               	btfsc	3,2
  1280     06B5  2EB7               	goto	u441
  1281     06B6  2EB8               	goto	u440
  1282     06B7                     u441:
  1283     06B7  2EEA               	goto	l929
  1284     06B8                     u440:
  1285     06B8                     l927:
  1286     06B8  0872               	movf	fputc@fp,w
  1287     06B9  3E09               	addlw	9
  1288     06BA  00F4               	movwf	??_fputc
  1289     06BB  0873               	movf	fputc@fp+1,w
  1290     06BC  1803               	skipnc
  1291     06BD  3E01               	addlw	1
  1292     06BE  3E00               	addlw	0
  1293     06BF  00F5               	movwf	??_fputc+1
  1294     06C0  0874               	movf	??_fputc,w
  1295     06C1  0084               	movwf	4
  1296     06C2  1783               	bsf	3,7
  1297     06C3  1C75               	btfss	??_fputc+1,0
  1298     06C4  1383               	bcf	3,7
  1299     06C5  0800               	movf	0,w
  1300     06C6  00F6               	movwf	??_fputc+2
  1301     06C7  0A84               	incf	4,f
  1302     06C8  0800               	movf	0,w
  1303     06C9  00F7               	movwf	??_fputc+3
  1304     06CA  0872               	movf	fputc@fp,w
  1305     06CB  3E02               	addlw	2
  1306     06CC  00F8               	movwf	??_fputc+4
  1307     06CD  0873               	movf	fputc@fp+1,w
  1308     06CE  1803               	skipnc
  1309     06CF  3E01               	addlw	1
  1310     06D0  3E00               	addlw	0
  1311     06D1  00F9               	movwf	??_fputc+5
  1312     06D2  0878               	movf	??_fputc+4,w
  1313     06D3  0084               	movwf	4
  1314     06D4  1783               	bsf	3,7
  1315     06D5  1C79               	btfss	??_fputc+5,0
  1316     06D6  1383               	bcf	3,7
  1317     06D7  0800               	movf	0,w
  1318     06D8  00FA               	movwf	??_fputc+6
  1319     06D9  0A84               	incf	4,f
  1320     06DA  0800               	movf	0,w
  1321     06DB  00FB               	movwf	??_fputc+7
  1322     06DC  087B               	movf	??_fputc+7,w
  1323     06DD  3A80               	xorlw	128
  1324     06DE  00FC               	movwf	??_fputc+8
  1325     06DF  0877               	movf	??_fputc+3,w
  1326     06E0  3A80               	xorlw	128
  1327     06E1  027C               	subwf	??_fputc+8,w
  1328     06E2  1D03               	skipz
  1329     06E3  2EE6               	goto	u455
  1330     06E4  0876               	movf	??_fputc+2,w
  1331     06E5  027A               	subwf	??_fputc+6,w
  1332     06E6                     u455:
  1333     06E6  1803               	skipnc
  1334     06E7  2EE9               	goto	u451
  1335     06E8  2EEA               	goto	u450
  1336     06E9                     u451:
  1337     06E9  2F26               	goto	l682
  1338     06EA                     u450:
  1339     06EA                     l929:
  1340     06EA  0872               	movf	fputc@fp,w
  1341     06EB  0084               	movwf	4
  1342     06EC  1783               	bsf	3,7
  1343     06ED  1C73               	btfss	fputc@fp+1,0
  1344     06EE  1383               	bcf	3,7
  1345     06EF  0800               	movf	0,w
  1346     06F0  00F4               	movwf	??_fputc
  1347     06F1  0A84               	incf	4,f
  1348     06F2  0800               	movf	0,w
  1349     06F3  00F5               	movwf	??_fputc+1
  1350     06F4  0872               	movf	fputc@fp,w
  1351     06F5  3E02               	addlw	2
  1352     06F6  00F6               	movwf	??_fputc+2
  1353     06F7  0873               	movf	fputc@fp+1,w
  1354     06F8  1803               	skipnc
  1355     06F9  3E01               	addlw	1
  1356     06FA  3E00               	addlw	0
  1357     06FB  00F7               	movwf	??_fputc+3
  1358     06FC  0876               	movf	??_fputc+2,w
  1359     06FD  0084               	movwf	4
  1360     06FE  1783               	bsf	3,7
  1361     06FF  1C77               	btfss	??_fputc+3,0
  1362     0700  1383               	bcf	3,7
  1363     0701  0800               	movf	0,w
  1364     0702  0774               	addwf	??_fputc,w
  1365     0703  00F9               	movwf	??_fputc+5
  1366     0704  0875               	movf	??_fputc+1,w
  1367     0705  00F8               	movwf	??_fputc+4
  1368     0706  1803               	skipnc
  1369     0707  0AF8               	incf	??_fputc+4,f
  1370     0708  1F80               	btfss	0,7
  1371     0709  2F0B               	goto	u460
  1372     070A  03F8               	decf	??_fputc+4,f
  1373     070B                     u460:
  1374     070B  0878               	movf	??_fputc+4,w
  1375     070C  00FA               	movwf	??_fputc+6
  1376     070D  0879               	movf	??_fputc+5,w
  1377     070E  0084               	movwf	4
  1378     070F  1783               	bsf	3,7
  1379     0710  1C7A               	btfss	??_fputc+6,0
  1380     0711  1383               	bcf	3,7
  1381     0712  0870               	movf	fputc@c,w
  1382     0713  0080               	movwf	0
  1383     0714  0872               	movf	fputc@fp,w
  1384     0715  3E02               	addlw	2
  1385     0716  00F4               	movwf	??_fputc
  1386     0717  0873               	movf	fputc@fp+1,w
  1387     0718  1803               	skipnc
  1388     0719  3E01               	addlw	1
  1389     071A  3E00               	addlw	0
  1390     071B  00F5               	movwf	??_fputc+1
  1391     071C  0874               	movf	??_fputc,w
  1392     071D  0084               	movwf	4
  1393     071E  1783               	bsf	3,7
  1394     071F  1C75               	btfss	??_fputc+1,0
  1395     0720  1383               	bcf	3,7
  1396     0721  3001               	movlw	1
  1397     0722  0780               	addwf	0,f
  1398     0723  0A84               	incf	4,f
  1399     0724  1803               	skipnc
  1400     0725  0A80               	incf	0,f
  1401     0726                     l682:
  1402     0726  0008               	return
  1403     0727                     __end_of_fputc:
  1404                           
  1405                           	psect	text7
  1406     051D                     __ptext7:	
  1407 ;; *************** function _putch *****************
  1408 ;; Defined at:
  1409 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  c               1    wreg     unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  c               1    0[COMMON] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_fputc
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436     051D                     _putch:	
  1437                           ;psect for function _putch
  1438                           
  1439     051D                     l693:	
  1440                           ;incstack = 0
  1441                           ; Regs used in _putch: [wreg]
  1442                           
  1443     051D  0008               	return
  1444     051E                     __end_of_putch:
  1445                           
  1446                           	psect	text8
  1447     05D3                     __ptext8:	
  1448 ;; *************** function ___lwmod *****************
  1449 ;; Defined at:
  1450 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  divisor         2    0[COMMON] unsigned int 
  1453 ;;  dividend        2    2[COMMON] unsigned int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  counter         1    4[COMMON] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2    0[COMMON] unsigned int 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         4       0       0       0       0
  1466 ;;      Locals:         1       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0
  1468 ;;      Totals:         5       0       0       0       0
  1469 ;;Total ram usage:        5 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_vfpfcnvrt
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478     05D3                     ___lwmod:	
  1479                           ;psect for function ___lwmod
  1480                           
  1481     05D3                     l897:	
  1482                           ;incstack = 0
  1483                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1484                           
  1485     05D3  0870               	movf	___lwmod@divisor,w
  1486     05D4  0471               	iorwf	___lwmod@divisor+1,w
  1487     05D5  1903               	btfsc	3,2
  1488     05D6  2DD8               	goto	u361
  1489     05D7  2DD9               	goto	u360
  1490     05D8                     u361:
  1491     05D8  2E06               	goto	l915
  1492     05D9                     u360:
  1493     05D9                     l899:
  1494     05D9  3001               	movlw	1
  1495     05DA  00F4               	movwf	___lwmod@counter
  1496     05DB  2DE5               	goto	l905
  1497     05DC                     l901:
  1498     05DC  3001               	movlw	1
  1499     05DD                     u375:
  1500     05DD  1003               	clrc
  1501     05DE  0DF0               	rlf	___lwmod@divisor,f
  1502     05DF  0DF1               	rlf	___lwmod@divisor+1,f
  1503     05E0  3EFF               	addlw	-1
  1504     05E1  1D03               	skipz
  1505     05E2  2DDD               	goto	u375
  1506     05E3                     l903:
  1507     05E3  3001               	movlw	1
  1508     05E4  07F4               	addwf	___lwmod@counter,f
  1509     05E5                     l905:
  1510     05E5  1FF1               	btfss	___lwmod@divisor+1,7
  1511     05E6  2DE8               	goto	u381
  1512     05E7  2DE9               	goto	u380
  1513     05E8                     u381:
  1514     05E8  2DDC               	goto	l901
  1515     05E9                     u380:
  1516     05E9                     l907:
  1517     05E9  0871               	movf	___lwmod@divisor+1,w
  1518     05EA  0273               	subwf	___lwmod@dividend+1,w
  1519     05EB  1D03               	skipz
  1520     05EC  2DEF               	goto	u395
  1521     05ED  0870               	movf	___lwmod@divisor,w
  1522     05EE  0272               	subwf	___lwmod@dividend,w
  1523     05EF                     u395:
  1524     05EF  1C03               	skipc
  1525     05F0  2DF2               	goto	u391
  1526     05F1  2DF3               	goto	u390
  1527     05F2                     u391:
  1528     05F2  2DF9               	goto	l911
  1529     05F3                     u390:
  1530     05F3                     l909:
  1531     05F3  0870               	movf	___lwmod@divisor,w
  1532     05F4  02F2               	subwf	___lwmod@dividend,f
  1533     05F5  0871               	movf	___lwmod@divisor+1,w
  1534     05F6  1C03               	skipc
  1535     05F7  03F3               	decf	___lwmod@dividend+1,f
  1536     05F8  02F3               	subwf	___lwmod@dividend+1,f
  1537     05F9                     l911:
  1538     05F9  3001               	movlw	1
  1539     05FA                     u405:
  1540     05FA  1003               	clrc
  1541     05FB  0CF1               	rrf	___lwmod@divisor+1,f
  1542     05FC  0CF0               	rrf	___lwmod@divisor,f
  1543     05FD  3EFF               	addlw	-1
  1544     05FE  1D03               	skipz
  1545     05FF  2DFA               	goto	u405
  1546     0600                     l913:
  1547     0600  3001               	movlw	1
  1548     0601  02F4               	subwf	___lwmod@counter,f
  1549     0602  1D03               	btfss	3,2
  1550     0603  2E05               	goto	u411
  1551     0604  2E06               	goto	u410
  1552     0605                     u411:
  1553     0605  2DE9               	goto	l907
  1554     0606                     u410:
  1555     0606                     l915:
  1556     0606  0873               	movf	___lwmod@dividend+1,w
  1557     0607  00F1               	movwf	?___lwmod+1
  1558     0608  0872               	movf	___lwmod@dividend,w
  1559     0609  00F0               	movwf	?___lwmod
  1560     060A                     l453:
  1561     060A  0008               	return
  1562     060B                     __end_of___lwmod:
  1563                           
  1564                           	psect	text9
  1565     05A6                     __ptext9:	
  1566 ;; *************** function _measure_distance *****************
  1567 ;; Defined at:
  1568 ;;		line 66 in file "main.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  pulse_durati    2   10[COMMON] unsigned short 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  2    7[COMMON] unsigned short 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         2       0       0       0       0
  1583 ;;      Locals:         2       0       0       0       0
  1584 ;;      Temps:          1       0       0       0       0
  1585 ;;      Totals:         5       0       0       0       0
  1586 ;;Total ram usage:        5 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 1
  1589 ;; This function calls:
  1590 ;;		___lwdiv
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596     05A6                     _measure_distance:	
  1597                           ;psect for function _measure_distance
  1598                           
  1599     05A6                     l1003:	
  1600                           ;incstack = 0
  1601                           ; Regs used in _measure_distance: [wreg+status,2+status,0+pclath+cstack]
  1602                           
  1603     05A6                     l1005:
  1604                           
  1605                           ;main.c: 70:     RB0 = 1;
  1606     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1607     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1608     05A8  1406               	bsf	6,0	;volatile
  1609     05A9                     l1007:
  1610                           
  1611                           ;main.c: 71:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  1612     05A9  3010               	movlw	16
  1613     05AA  00F9               	movwf	??_measure_distance
  1614     05AB                     u587:
  1615     05AB  0BF9               	decfsz	??_measure_distance,f
  1616     05AC  2DAB               	goto	u587
  1617     05AD  0000               	nop
  1618     05AE                     l1009:
  1619                           
  1620                           ;main.c: 72:     RB0 = 0;
  1621     05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1622     05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1623     05B0  1006               	bcf	6,0	;volatile
  1624     05B1                     l63:	
  1625                           ;main.c: 75:     while (!RB1);
  1626                           
  1627     05B1  1C86               	btfss	6,1	;volatile
  1628     05B2  2DB4               	goto	u551
  1629     05B3  2DB5               	goto	u550
  1630     05B4                     u551:
  1631     05B4  2DB1               	goto	l63
  1632     05B5                     u550:
  1633     05B5                     l1011:
  1634                           
  1635                           ;main.c: 78:     TMR1H = 0;
  1636     05B5  018F               	clrf	15	;volatile
  1637                           
  1638                           ;main.c: 79:     TMR1L = 0;
  1639     05B6  018E               	clrf	14	;volatile
  1640     05B7                     l1013:
  1641                           
  1642                           ;main.c: 80:     TMR1ON = 1;
  1643     05B7  1410               	bsf	16,0	;volatile
  1644     05B8                     l66:	
  1645                           ;main.c: 83:     while (RB1);
  1646                           
  1647     05B8  1886               	btfsc	6,1	;volatile
  1648     05B9  2DBB               	goto	u561
  1649     05BA  2DBC               	goto	u560
  1650     05BB                     u561:
  1651     05BB  2DB8               	goto	l66
  1652     05BC                     u560:
  1653     05BC                     l68:
  1654                           
  1655                           ;main.c: 86:     TMR1ON = 0;
  1656     05BC  1010               	bcf	16,0	;volatile
  1657     05BD                     l1015:
  1658                           
  1659                           ;main.c: 89:     pulse_duration = ((uint16_t)TMR1H << 8) | TMR1L;
  1660     05BD  080F               	movf	15,w	;volatile
  1661     05BE  00FB               	movwf	measure_distance@pulse_duration+1
  1662     05BF  080E               	movf	14,w	;volatile
  1663     05C0  00FA               	movwf	measure_distance@pulse_duration
  1664     05C1                     l1017:
  1665                           
  1666                           ;main.c: 92:     return pulse_duration / 145;
  1667     05C1  3091               	movlw	145
  1668     05C2  00F0               	movwf	___lwdiv@divisor
  1669     05C3  3000               	movlw	0
  1670     05C4  00F1               	movwf	___lwdiv@divisor+1
  1671     05C5  087B               	movf	measure_distance@pulse_duration+1,w
  1672     05C6  00F3               	movwf	___lwdiv@dividend+1
  1673     05C7  087A               	movf	measure_distance@pulse_duration,w
  1674     05C8  00F2               	movwf	___lwdiv@dividend
  1675     05C9  120A  118A  264B  120A  118A  	fcall	___lwdiv
  1676     05CE  0871               	movf	?___lwdiv+1,w
  1677     05CF  00F8               	movwf	?_measure_distance+1
  1678     05D0  0870               	movf	?___lwdiv,w
  1679     05D1  00F7               	movwf	?_measure_distance
  1680     05D2                     l69:
  1681     05D2  0008               	return
  1682     05D3                     __end_of_measure_distance:
  1683                           
  1684                           	psect	text10
  1685     064B                     __ptext10:	
  1686 ;; *************** function ___lwdiv *****************
  1687 ;; Defined at:
  1688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  divisor         2    0[COMMON] unsigned int 
  1691 ;;  dividend        2    2[COMMON] unsigned int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  quotient        2    4[COMMON] unsigned int 
  1694 ;;  counter         1    6[COMMON] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  2    0[COMMON] unsigned int 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1704 ;;      Params:         4       0       0       0       0
  1705 ;;      Locals:         3       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0
  1707 ;;      Totals:         7       0       0       0       0
  1708 ;;Total ram usage:        7 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_measure_distance
  1714 ;;		_vfpfcnvrt
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718     064B                     ___lwdiv:	
  1719                           ;psect for function ___lwdiv
  1720                           
  1721     064B                     l871:	
  1722                           ;incstack = 0
  1723                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1724                           
  1725     064B  01F4               	clrf	___lwdiv@quotient
  1726     064C  01F5               	clrf	___lwdiv@quotient+1
  1727     064D                     l873:
  1728     064D  0870               	movf	___lwdiv@divisor,w
  1729     064E  0471               	iorwf	___lwdiv@divisor+1,w
  1730     064F  1903               	btfsc	3,2
  1731     0650  2E52               	goto	u291
  1732     0651  2E53               	goto	u290
  1733     0652                     u291:
  1734     0652  2E88               	goto	l893
  1735     0653                     u290:
  1736     0653                     l875:
  1737     0653  3001               	movlw	1
  1738     0654  00F6               	movwf	___lwdiv@counter
  1739     0655  2E5F               	goto	l881
  1740     0656                     l877:
  1741     0656  3001               	movlw	1
  1742     0657                     u305:
  1743     0657  1003               	clrc
  1744     0658  0DF0               	rlf	___lwdiv@divisor,f
  1745     0659  0DF1               	rlf	___lwdiv@divisor+1,f
  1746     065A  3EFF               	addlw	-1
  1747     065B  1D03               	skipz
  1748     065C  2E57               	goto	u305
  1749     065D                     l879:
  1750     065D  3001               	movlw	1
  1751     065E  07F6               	addwf	___lwdiv@counter,f
  1752     065F                     l881:
  1753     065F  1FF1               	btfss	___lwdiv@divisor+1,7
  1754     0660  2E62               	goto	u311
  1755     0661  2E63               	goto	u310
  1756     0662                     u311:
  1757     0662  2E56               	goto	l877
  1758     0663                     u310:
  1759     0663                     l883:
  1760     0663  3001               	movlw	1
  1761     0664                     u325:
  1762     0664  1003               	clrc
  1763     0665  0DF4               	rlf	___lwdiv@quotient,f
  1764     0666  0DF5               	rlf	___lwdiv@quotient+1,f
  1765     0667  3EFF               	addlw	-1
  1766     0668  1D03               	skipz
  1767     0669  2E64               	goto	u325
  1768     066A  0871               	movf	___lwdiv@divisor+1,w
  1769     066B  0273               	subwf	___lwdiv@dividend+1,w
  1770     066C  1D03               	skipz
  1771     066D  2E70               	goto	u335
  1772     066E  0870               	movf	___lwdiv@divisor,w
  1773     066F  0272               	subwf	___lwdiv@dividend,w
  1774     0670                     u335:
  1775     0670  1C03               	skipc
  1776     0671  2E73               	goto	u331
  1777     0672  2E74               	goto	u330
  1778     0673                     u331:
  1779     0673  2E7B               	goto	l889
  1780     0674                     u330:
  1781     0674                     l885:
  1782     0674  0870               	movf	___lwdiv@divisor,w
  1783     0675  02F2               	subwf	___lwdiv@dividend,f
  1784     0676  0871               	movf	___lwdiv@divisor+1,w
  1785     0677  1C03               	skipc
  1786     0678  03F3               	decf	___lwdiv@dividend+1,f
  1787     0679  02F3               	subwf	___lwdiv@dividend+1,f
  1788     067A                     l887:
  1789     067A  1474               	bsf	___lwdiv@quotient,0
  1790     067B                     l889:
  1791     067B  3001               	movlw	1
  1792     067C                     u345:
  1793     067C  1003               	clrc
  1794     067D  0CF1               	rrf	___lwdiv@divisor+1,f
  1795     067E  0CF0               	rrf	___lwdiv@divisor,f
  1796     067F  3EFF               	addlw	-1
  1797     0680  1D03               	skipz
  1798     0681  2E7C               	goto	u345
  1799     0682                     l891:
  1800     0682  3001               	movlw	1
  1801     0683  02F6               	subwf	___lwdiv@counter,f
  1802     0684  1D03               	btfss	3,2
  1803     0685  2E87               	goto	u351
  1804     0686  2E88               	goto	u350
  1805     0687                     u351:
  1806     0687  2E63               	goto	l883
  1807     0688                     u350:
  1808     0688                     l893:
  1809     0688  0875               	movf	___lwdiv@quotient+1,w
  1810     0689  00F1               	movwf	?___lwdiv+1
  1811     068A  0874               	movf	___lwdiv@quotient,w
  1812     068B  00F0               	movwf	?___lwdiv
  1813     068C                     l443:
  1814     068C  0008               	return
  1815     068D                     __end_of___lwdiv:
  1816                           
  1817                           	psect	text11
  1818     0538                     __ptext11:	
  1819 ;; *************** function _initialize_uart *****************
  1820 ;; Defined at:
  1821 ;;		line 37 in file "main.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		None
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0
  1838 ;;      Totals:         0       0       0       0       0
  1839 ;;Total ram usage:        0 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848     0538                     _initialize_uart:	
  1849                           ;psect for function _initialize_uart
  1850                           
  1851     0538                     l991:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _initialize_uart: []
  1854                           
  1855                           
  1856                           ;main.c: 38:     TRISC6 = 0;
  1857     0538  1683               	bsf	3,5	;RP0=1, select bank1
  1858     0539  1303               	bcf	3,6	;RP1=0, select bank1
  1859     053A  1307               	bcf	7,6	;volatile
  1860                           
  1861                           ;main.c: 39:     TRISC7 = 1;
  1862     053B  1787               	bsf	7,7	;volatile
  1863                           
  1864                           ;main.c: 41:     SPBRG = 129;
  1865     053C  3081               	movlw	129
  1866     053D  0099               	movwf	25	;volatile
  1867                           
  1868                           ;main.c: 42:     BRGH = 1;
  1869     053E  1518               	bsf	24,2	;volatile
  1870                           
  1871                           ;main.c: 43:     SYNC = 0;
  1872     053F  1218               	bcf	24,4	;volatile
  1873                           
  1874                           ;main.c: 44:     SPEN = 1;
  1875     0540  1283               	bcf	3,5	;RP0=0, select bank0
  1876     0541  1303               	bcf	3,6	;RP1=0, select bank0
  1877     0542  1798               	bsf	24,7	;volatile
  1878                           
  1879                           ;main.c: 45:     TXEN = 1;
  1880     0543  1683               	bsf	3,5	;RP0=1, select bank1
  1881     0544  1303               	bcf	3,6	;RP1=0, select bank1
  1882     0545  1698               	bsf	24,5	;volatile
  1883                           
  1884                           ;main.c: 46:     CREN = 1;
  1885     0546  1283               	bcf	3,5	;RP0=0, select bank0
  1886     0547  1303               	bcf	3,6	;RP1=0, select bank0
  1887     0548  1618               	bsf	24,4	;volatile
  1888     0549                     l45:
  1889     0549  0008               	return
  1890     054A                     __end_of_initialize_uart:
  1891                           
  1892                           	psect	text12
  1893     051E                     __ptext12:	
  1894 ;; *************** function _initialize_pins *****************
  1895 ;; Defined at:
  1896 ;;		line 60 in file "main.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		None
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923     051E                     _initialize_pins:	
  1924                           ;psect for function _initialize_pins
  1925                           
  1926     051E                     l1001:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _initialize_pins: []
  1929                           
  1930                           
  1931                           ;main.c: 61:     TRISB0 = 0;
  1932     051E  1683               	bsf	3,5	;RP0=1, select bank1
  1933     051F  1303               	bcf	3,6	;RP1=0, select bank1
  1934     0520  1006               	bcf	6,0	;volatile
  1935                           
  1936                           ;main.c: 62:     TRISB1 = 1;
  1937     0521  1486               	bsf	6,1	;volatile
  1938                           
  1939                           ;main.c: 63:     RB0 = 0;
  1940     0522  1283               	bcf	3,5	;RP0=0, select bank0
  1941     0523  1303               	bcf	3,6	;RP1=0, select bank0
  1942     0524  1006               	bcf	6,0	;volatile
  1943     0525                     l60:
  1944     0525  0008               	return
  1945     0526                     __end_of_initialize_pins:
  1946     0002                     ___latbits      equ	2
  1947     007E                     btemp           set	126	;btemp
  1948     007E                     wtemp0          set	126
  1949                           
  1950                           	psect	config
  1951                           
  1952                           ;Config register CONFIG @ 0x2007
  1953                           ;	Oscillator Selection bits
  1954                           ;	FOSC = HS, HS oscillator
  1955                           ;	Watchdog Timer Enable bit
  1956                           ;	WDTE = OFF, WDT disabled
  1957                           ;	Power-up Timer Enable bit
  1958                           ;	PWRTE = ON, PWRT enabled
  1959                           ;	Brown-out Reset Enable bit
  1960                           ;	BOREN = ON, BOR enabled
  1961                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1962                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1963                           ;	Data EEPROM Memory Code Protection bit
  1964                           ;	CPD = OFF, Data EEPROM code protection off
  1965                           ;	Flash Program Memory Write Enable bits
  1966                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1967                           ;	In-Circuit Debugger Mode bit
  1968                           ;	DEBUG = 0x1, unprogrammed default
  1969                           ;	Flash Program Memory Code Protection bit
  1970                           ;	CP = OFF, Code protection off
  1971     2007                     	org	8199
  1972     2007  3F72               	dw	16242

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      75
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> uart_buffer(BANK0[32]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> uart_buffer(BANK0[32]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    S514$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> uart_buffer(BANK0[32]), 

    S514$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> uart_buffer(BANK0[32]), 

    uart_send_string@str	PTR const unsigned char  size(1) Largest target is 32
		 -> uart_buffer(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _uart_send_string->_uart_send_byte
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _measure_distance->___lwdiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1619
                                             33 BANK0      5     5      0
                    _initialize_pins
                    _initialize_uart
                   _measure_distance
                            _sprintf
                   _uart_send_string
 ---------------------------------------------------------------------------------
 (1) _uart_send_string                                     1     0      1      75
                                              1 COMMON     1     0      1
                     _uart_send_byte
 ---------------------------------------------------------------------------------
 (2) _uart_send_byte                                       1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    1331
                                             16 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1130
                                             13 COMMON     1     1      0
                                             12 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1005
                                              0 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _measure_distance                                     5     3      2     190
                                              7 COMMON     5     3      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     166
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initialize_uart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_pins                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_pins
   _initialize_uart
   _measure_distance
     ___lwdiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _uart_send_string
     _uart_send_byte

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     38      75     93.8%
BANK1               80      0      32     40.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     121      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Nov 29 14:01:14 2024

                             pc 0002        __end_of_uart_send_string 055E                              l51 0537  
                            l60 0525                              l45 0549                              l63 05B1  
                            l48 052F                              l57 055D                              l66 05B8  
                            l68 05BC                              l69 05D2                              fsr 0004  
                           l443 068C                             l453 060A                             l626 0580  
                           l901 05DC                             l670 05A5                             l911 05F9  
                           l903 05E3                             l663 07EA                             l655 0767  
                           l913 0600                             l905 05E5                             l921 0693  
                           l682 0726                             l907 05E9                             l915 0606  
                           l923 0699                             l909 05F3                             l693 051D  
                           l925 06A0                             l941 0743                             l933 0727  
                           l871 064B                             l927 06B8                             l919 068D  
                           l951 077F                             l943 0747                             l935 0737  
                           l881 065F                             l873 064D                             l929 06EA  
                           l961 07B8                             l953 0794                             l945 0753  
                           l937 073B                             l891 0682                             l883 0663  
                           l875 0653                             l955 079A                             l947 0761  
                           l939 073F                             l971 07D1                             l885 0674  
                           l877 0656                             l893 0688                             l957 07A0  
                           l949 0769                             l965 07BF                             l981 0581  
                           l991 0538                             l887 067A                             l879 065D  
                           l959 07B4                             l967 07CA                             l983 0586  
                           l889 067B                             l897 05D3                             l985 0595  
                           l977 052F                             l993 054A                             l899 05D9  
                           l987 05A1                             l979 0535                             l995 054B  
                           l997 0553                             l999 0555                             _RB0 0030  
                           _RB1 0031                             u310 0663                             u311 0662  
                           u305 0657                             u330 0674                             u410 0606  
                           u331 0673                             u411 0605                             u420 0693  
                           u500 079F                             u325 0664                             u405 05FA  
                           u421 0692                             u501 079E                             u350 0688  
                           u430 0699                             u510 07BE                             u351 0687  
                           u335 0670                             u431 0698                             u511 07BD  
                           u360 05D9                             u440 06B8                             u520 0535  
                           u345 067C                             u361 05D8                             u441 06B7  
                           u521 0534                             u290 0653                             u450 06EA  
                           u530 05A1                             u291 0652                             u451 06E9  
                           u531 05A0                             u380 05E9                             u460 070B  
                           u540 055D                             u381 05E8                             u541 055C  
                           u550 05B5                             u390 05F3                             u470 0737  
                           u551 05B4                             u391 05F2                             u375 05DD  
                           u455 06E6                             u471 0736                             u560 05BC  
                           u480 0753                             u561 05BB                             u481 0752  
                           u490 079A                             u395 05EF                             u491 0799  
                           u577 0640                             u587 05AB                             fsr0 0004  
                           indf 0000                            l1001 051E                            l1011 05B5  
                          l1003 05A6                            l1013 05B7                            l1005 05A6  
                          l1021 055E                            l1015 05BD                            l1007 05A9  
                          l1031 0577                            l1023 0562                            l1017 05C1  
                          l1009 05AE                            l1025 0566                            l1041 0624  
                          l1027 0568                            l1043 0631                            l1035 060B  
                          l1029 056A                            l1045 0638                            l1037 0615  
                          l1039 0619                            STR_1 0009                            _BRGH 04C2  
                          _CREN 00C4                            _SPEN 00C7                            _TXEN 04C5  
                          _TXIF 0064                            _SYNC 04C4                            _dbuf 00A0  
                          _main 060B                            _prec 0048                            btemp 007E  
                          start 0000        __end_of_measure_distance 05D3                ??_uart_send_byte 0070  
                  main@distance 0044                           ?_main 0070                           _T1CON 0010  
               __end_of___lwdiv 068D                 __end_of___lwmod 060B                    vfpfcnvrt@fmt 0022  
                         _TMR1H 000F                           _TMR1L 000E                           _SPBRG 0099  
                         _TXREG 0019               ??_initialize_pins 0070               ??_initialize_uart 0070  
                         _flags 004A                           _fputc 068D                           _width 0046  
                         _putch 051D                           pclath 000A                           status 0003  
                         wtemp0 007E                 __end_of_sprintf 0581                 __initialization 07EB  
                  __end_of_main 064B                          ??_main 0041                          ?_fputc 0070  
                        ?_putch 0070                          _TMR1ON 0080                          _TRISB0 0430  
                        _TRISB1 0431                          _TRISC6 043E                          _TRISC7 043F  
                  vfprintf@cfmt 007D                       ??___lwdiv 0074                       ??___lwmod 0074  
                        fputc@c 0070                          putch@c 0070                __end_of_vfprintf 05A6  
                     ??_sprintf 0034         __end_of__initialization 07FC                  __pcstackCOMMON 0070  
                 __end_of_fputc 0727                   __end_of_putch 051E               ?_uart_send_string 0071  
            ??_uart_send_string 0072                         ??_fputc 0074                         ??_putch 0070  
                    __pbssBANK0 0046                      __pbssBANK1 00A0               ?_measure_distance 0077  
                    __pmaintext 060B              ??_measure_distance 0079                 _initialize_pins 051E  
               _initialize_uart 0538                      __stringtab 0003                         ___lwdiv 064B  
                       ___lwmod 05D3                       ?_vfprintf 002C                         __ptext1 054A  
                       __ptext2 052E                         __ptext3 055E                         __ptext4 0581  
                       __ptext5 0727                         __ptext6 068D                         __ptext7 051D  
                       __ptext8 05D3                         __ptext9 05A6  measure_distance@pulse_duration 007A  
                       _sprintf 055E                         clrloop0 0527            end_of_initialization 07FC  
                       fputc@fp 0072         __end_of_initialize_pins 0526         __end_of_initialize_uart 054A  
             __end_of_vfpfcnvrt 07EB                vfpfcnvrt@convarg 0026                      ??_vfprintf 007D  
                   vfpfcnvrt@ap 0023                     vfpfcnvrt@cp 002A                     vfpfcnvrt@fp 0020  
           start_initialization 07EB                ?_initialize_pins 0070                ?_initialize_uart 0070  
                   vfprintf@fmt 002E                       ___latbits 0002                   __pcstackBANK0 0020  
              ___lwdiv@dividend 0072                        ?___lwdiv 0070                        ?___lwmod 0070  
                     __pstrings 0003                  _uart_send_byte 052E             uart_send_string@str 0071  
              ___lwdiv@quotient 0074                        ?_sprintf 0030                       clear_ram0 0526  
                     _vfpfcnvrt 0727          __end_of_uart_send_byte 0538                     __stringbase 0008  
                    vfpfcnvrt@c 002B                _uart_send_string 054A              uart_send_byte@data 0070  
                    vfprintf@ap 002F                      vfprintf@fp 002C                      ?_vfpfcnvrt 0020  
               ?_uart_send_byte 0070              __end_of__stringtab 0009                      sprintf@fmt 0031  
              _measure_distance 05A6                 ___lwdiv@divisor 0070                 ___lwdiv@counter 0076  
                      __ptext10 064B                        __ptext11 0538                        __ptext12 051E  
                      _vfprintf 0581                       sprintf@ap 0035                ___lwmod@dividend 0072  
                     stringcode 0003                     ??_vfpfcnvrt 0024                     _uart_buffer 004B  
                      sprintf@f 0036                        sprintf@s 0030                 ___lwmod@divisor 0070  
               ___lwmod@counter 0074                        stringdir 0003                        stringtab 0003  
