

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 19 08:45:21 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 12/10/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0004                     fsr             equ	4
    84     0004                     fsr0            equ	4
    85     0000                     indf            equ	0
    86     0000                     indf0           equ	0
    87     0002                     pc              equ	2
    88     0002                     pcl             equ	2
    89     000A                     pclath          equ	10
    90     0003                     status          equ	3
    91     0000                     INDF            equ	0	;# 
    92     0001                     TMR0            equ	1	;# 
    93     0002                     PCL             equ	2	;# 
    94     0003                     STATUS          equ	3	;# 
    95     0004                     FSR             equ	4	;# 
    96     0005                     PORTA           equ	5	;# 
    97     0006                     PORTB           equ	6	;# 
    98     0007                     PORTC           equ	7	;# 
    99     0008                     PORTD           equ	8	;# 
   100     0009                     PORTE           equ	9	;# 
   101     000A                     PCLATH          equ	10	;# 
   102     000B                     INTCON          equ	11	;# 
   103     000C                     PIR1            equ	12	;# 
   104     000D                     PIR2            equ	13	;# 
   105     000E                     TMR1            equ	14	;# 
   106     000E                     TMR1L           equ	14	;# 
   107     000F                     TMR1H           equ	15	;# 
   108     0010                     T1CON           equ	16	;# 
   109     0011                     TMR2            equ	17	;# 
   110     0012                     T2CON           equ	18	;# 
   111     0013                     SSPBUF          equ	19	;# 
   112     0014                     SSPCON          equ	20	;# 
   113     0015                     CCPR1           equ	21	;# 
   114     0015                     CCPR1L          equ	21	;# 
   115     0016                     CCPR1H          equ	22	;# 
   116     0017                     CCP1CON         equ	23	;# 
   117     0018                     RCSTA           equ	24	;# 
   118     0019                     TXREG           equ	25	;# 
   119     001A                     RCREG           equ	26	;# 
   120     001B                     CCPR2           equ	27	;# 
   121     001B                     CCPR2L          equ	27	;# 
   122     001C                     CCPR2H          equ	28	;# 
   123     001D                     CCP2CON         equ	29	;# 
   124     001E                     ADRESH          equ	30	;# 
   125     001F                     ADCON0          equ	31	;# 
   126     0081                     OPTION_REG      equ	129	;# 
   127     0085                     TRISA           equ	133	;# 
   128     0086                     TRISB           equ	134	;# 
   129     0087                     TRISC           equ	135	;# 
   130     0088                     TRISD           equ	136	;# 
   131     0089                     TRISE           equ	137	;# 
   132     008C                     PIE1            equ	140	;# 
   133     008D                     PIE2            equ	141	;# 
   134     008E                     PCON            equ	142	;# 
   135     0091                     SSPCON2         equ	145	;# 
   136     0092                     PR2             equ	146	;# 
   137     0093                     SSPADD          equ	147	;# 
   138     0094                     SSPSTAT         equ	148	;# 
   139     0098                     TXSTA           equ	152	;# 
   140     0099                     SPBRG           equ	153	;# 
   141     009C                     CMCON           equ	156	;# 
   142     009D                     CVRCON          equ	157	;# 
   143     009E                     ADRESL          equ	158	;# 
   144     009F                     ADCON1          equ	159	;# 
   145     010C                     EEDATA          equ	268	;# 
   146     010D                     EEADR           equ	269	;# 
   147     010E                     EEDATH          equ	270	;# 
   148     010F                     EEADRH          equ	271	;# 
   149     018C                     EECON1          equ	396	;# 
   150     018D                     EECON2          equ	397	;# 
   151     0000                     INDF            equ	0	;# 
   152     0001                     TMR0            equ	1	;# 
   153     0002                     PCL             equ	2	;# 
   154     0003                     STATUS          equ	3	;# 
   155     0004                     FSR             equ	4	;# 
   156     0005                     PORTA           equ	5	;# 
   157     0006                     PORTB           equ	6	;# 
   158     0007                     PORTC           equ	7	;# 
   159     0008                     PORTD           equ	8	;# 
   160     0009                     PORTE           equ	9	;# 
   161     000A                     PCLATH          equ	10	;# 
   162     000B                     INTCON          equ	11	;# 
   163     000C                     PIR1            equ	12	;# 
   164     000D                     PIR2            equ	13	;# 
   165     000E                     TMR1            equ	14	;# 
   166     000E                     TMR1L           equ	14	;# 
   167     000F                     TMR1H           equ	15	;# 
   168     0010                     T1CON           equ	16	;# 
   169     0011                     TMR2            equ	17	;# 
   170     0012                     T2CON           equ	18	;# 
   171     0013                     SSPBUF          equ	19	;# 
   172     0014                     SSPCON          equ	20	;# 
   173     0015                     CCPR1           equ	21	;# 
   174     0015                     CCPR1L          equ	21	;# 
   175     0016                     CCPR1H          equ	22	;# 
   176     0017                     CCP1CON         equ	23	;# 
   177     0018                     RCSTA           equ	24	;# 
   178     0019                     TXREG           equ	25	;# 
   179     001A                     RCREG           equ	26	;# 
   180     001B                     CCPR2           equ	27	;# 
   181     001B                     CCPR2L          equ	27	;# 
   182     001C                     CCPR2H          equ	28	;# 
   183     001D                     CCP2CON         equ	29	;# 
   184     001E                     ADRESH          equ	30	;# 
   185     001F                     ADCON0          equ	31	;# 
   186     0081                     OPTION_REG      equ	129	;# 
   187     0085                     TRISA           equ	133	;# 
   188     0086                     TRISB           equ	134	;# 
   189     0087                     TRISC           equ	135	;# 
   190     0088                     TRISD           equ	136	;# 
   191     0089                     TRISE           equ	137	;# 
   192     008C                     PIE1            equ	140	;# 
   193     008D                     PIE2            equ	141	;# 
   194     008E                     PCON            equ	142	;# 
   195     0091                     SSPCON2         equ	145	;# 
   196     0092                     PR2             equ	146	;# 
   197     0093                     SSPADD          equ	147	;# 
   198     0094                     SSPSTAT         equ	148	;# 
   199     0098                     TXSTA           equ	152	;# 
   200     0099                     SPBRG           equ	153	;# 
   201     009C                     CMCON           equ	156	;# 
   202     009D                     CVRCON          equ	157	;# 
   203     009E                     ADRESL          equ	158	;# 
   204     009F                     ADCON1          equ	159	;# 
   205     010C                     EEDATA          equ	268	;# 
   206     010D                     EEADR           equ	269	;# 
   207     010E                     EEDATH          equ	270	;# 
   208     010F                     EEADRH          equ	271	;# 
   209     018C                     EECON1          equ	396	;# 
   210     018D                     EECON2          equ	397	;# 
   211     0000                     INDF            equ	0	;# 
   212     0001                     TMR0            equ	1	;# 
   213     0002                     PCL             equ	2	;# 
   214     0003                     STATUS          equ	3	;# 
   215     0004                     FSR             equ	4	;# 
   216     0005                     PORTA           equ	5	;# 
   217     0006                     PORTB           equ	6	;# 
   218     0007                     PORTC           equ	7	;# 
   219     0008                     PORTD           equ	8	;# 
   220     0009                     PORTE           equ	9	;# 
   221     000A                     PCLATH          equ	10	;# 
   222     000B                     INTCON          equ	11	;# 
   223     000C                     PIR1            equ	12	;# 
   224     000D                     PIR2            equ	13	;# 
   225     000E                     TMR1            equ	14	;# 
   226     000E                     TMR1L           equ	14	;# 
   227     000F                     TMR1H           equ	15	;# 
   228     0010                     T1CON           equ	16	;# 
   229     0011                     TMR2            equ	17	;# 
   230     0012                     T2CON           equ	18	;# 
   231     0013                     SSPBUF          equ	19	;# 
   232     0014                     SSPCON          equ	20	;# 
   233     0015                     CCPR1           equ	21	;# 
   234     0015                     CCPR1L          equ	21	;# 
   235     0016                     CCPR1H          equ	22	;# 
   236     0017                     CCP1CON         equ	23	;# 
   237     0018                     RCSTA           equ	24	;# 
   238     0019                     TXREG           equ	25	;# 
   239     001A                     RCREG           equ	26	;# 
   240     001B                     CCPR2           equ	27	;# 
   241     001B                     CCPR2L          equ	27	;# 
   242     001C                     CCPR2H          equ	28	;# 
   243     001D                     CCP2CON         equ	29	;# 
   244     001E                     ADRESH          equ	30	;# 
   245     001F                     ADCON0          equ	31	;# 
   246     0081                     OPTION_REG      equ	129	;# 
   247     0085                     TRISA           equ	133	;# 
   248     0086                     TRISB           equ	134	;# 
   249     0087                     TRISC           equ	135	;# 
   250     0088                     TRISD           equ	136	;# 
   251     0089                     TRISE           equ	137	;# 
   252     008C                     PIE1            equ	140	;# 
   253     008D                     PIE2            equ	141	;# 
   254     008E                     PCON            equ	142	;# 
   255     0091                     SSPCON2         equ	145	;# 
   256     0092                     PR2             equ	146	;# 
   257     0093                     SSPADD          equ	147	;# 
   258     0094                     SSPSTAT         equ	148	;# 
   259     0098                     TXSTA           equ	152	;# 
   260     0099                     SPBRG           equ	153	;# 
   261     009C                     CMCON           equ	156	;# 
   262     009D                     CVRCON          equ	157	;# 
   263     009E                     ADRESL          equ	158	;# 
   264     009F                     ADCON1          equ	159	;# 
   265     010C                     EEDATA          equ	268	;# 
   266     010D                     EEADR           equ	269	;# 
   267     010E                     EEDATH          equ	270	;# 
   268     010F                     EEADRH          equ	271	;# 
   269     018C                     EECON1          equ	396	;# 
   270     018D                     EECON2          equ	397	;# 
   271     0000                     INDF            equ	0	;# 
   272     0001                     TMR0            equ	1	;# 
   273     0002                     PCL             equ	2	;# 
   274     0003                     STATUS          equ	3	;# 
   275     0004                     FSR             equ	4	;# 
   276     0005                     PORTA           equ	5	;# 
   277     0006                     PORTB           equ	6	;# 
   278     0007                     PORTC           equ	7	;# 
   279     0008                     PORTD           equ	8	;# 
   280     0009                     PORTE           equ	9	;# 
   281     000A                     PCLATH          equ	10	;# 
   282     000B                     INTCON          equ	11	;# 
   283     000C                     PIR1            equ	12	;# 
   284     000D                     PIR2            equ	13	;# 
   285     000E                     TMR1            equ	14	;# 
   286     000E                     TMR1L           equ	14	;# 
   287     000F                     TMR1H           equ	15	;# 
   288     0010                     T1CON           equ	16	;# 
   289     0011                     TMR2            equ	17	;# 
   290     0012                     T2CON           equ	18	;# 
   291     0013                     SSPBUF          equ	19	;# 
   292     0014                     SSPCON          equ	20	;# 
   293     0015                     CCPR1           equ	21	;# 
   294     0015                     CCPR1L          equ	21	;# 
   295     0016                     CCPR1H          equ	22	;# 
   296     0017                     CCP1CON         equ	23	;# 
   297     0018                     RCSTA           equ	24	;# 
   298     0019                     TXREG           equ	25	;# 
   299     001A                     RCREG           equ	26	;# 
   300     001B                     CCPR2           equ	27	;# 
   301     001B                     CCPR2L          equ	27	;# 
   302     001C                     CCPR2H          equ	28	;# 
   303     001D                     CCP2CON         equ	29	;# 
   304     001E                     ADRESH          equ	30	;# 
   305     001F                     ADCON0          equ	31	;# 
   306     0081                     OPTION_REG      equ	129	;# 
   307     0085                     TRISA           equ	133	;# 
   308     0086                     TRISB           equ	134	;# 
   309     0087                     TRISC           equ	135	;# 
   310     0088                     TRISD           equ	136	;# 
   311     0089                     TRISE           equ	137	;# 
   312     008C                     PIE1            equ	140	;# 
   313     008D                     PIE2            equ	141	;# 
   314     008E                     PCON            equ	142	;# 
   315     0091                     SSPCON2         equ	145	;# 
   316     0092                     PR2             equ	146	;# 
   317     0093                     SSPADD          equ	147	;# 
   318     0094                     SSPSTAT         equ	148	;# 
   319     0098                     TXSTA           equ	152	;# 
   320     0099                     SPBRG           equ	153	;# 
   321     009C                     CMCON           equ	156	;# 
   322     009D                     CVRCON          equ	157	;# 
   323     009E                     ADRESL          equ	158	;# 
   324     009F                     ADCON1          equ	159	;# 
   325     010C                     EEDATA          equ	268	;# 
   326     010D                     EEADR           equ	269	;# 
   327     010E                     EEDATH          equ	270	;# 
   328     010F                     EEADRH          equ	271	;# 
   329     018C                     EECON1          equ	396	;# 
   330     018D                     EECON2          equ	397	;# 
   331                           
   332                           	psect	idataBANK0
   333     035B                     __pidataBANK0:
   334                           
   335                           ;initializer for LCD_SetCursor@F1080
   336     035B  3480               	retlw	128
   337     035C  34C0               	retlw	192
   338     035D  3494               	retlw	148
   339     035E  34D4               	retlw	212
   340                           
   341                           	psect	strings
   342     0003                     __pstrings:
   343     0003                     stringtab:
   344     0003                     __stringtab:
   345     0003                     stringcode:	
   346                           ;	String table - string pointers are 1 byte each
   347                           
   348     0003                     stringdir:
   349     0003  3000               	movlw	high stringdir
   350     0004  008A               	movwf	10
   351     0005  0804               	movf	4,w
   352     0006  0A84               	incf	4,f
   353     0007  0782               	addwf	2,f
   354     0008                     __stringbase:
   355     0008  3400               	retlw	0
   356     0009                     __end_of__stringtab:
   357     0009                     _LAUGHING_SMILEY:
   358     0009  3400               	retlw	0
   359     000A  340A               	retlw	10
   360     000B  3400               	retlw	0
   361     000C  3400               	retlw	0
   362     000D  3411               	retlw	17
   363     000E  341F               	retlw	31
   364     000F  340E               	retlw	14
   365     0010  3400               	retlw	0
   366     0011                     __end_of_LAUGHING_SMILEY:
   367     0011                     _SMILEY:
   368     0011  3400               	retlw	0
   369     0012  340A               	retlw	10
   370     0013  3400               	retlw	0
   371     0014  3400               	retlw	0
   372     0015  3411               	retlw	17
   373     0016  340E               	retlw	14
   374     0017  3400               	retlw	0
   375     0018  3400               	retlw	0
   376     0019                     __end_of_SMILEY:
   377     0019                     STR_6:
   378     0019  3443               	retlw	67	;'C'
   379     001A  3475               	retlw	117	;'u'
   380     001B  3472               	retlw	114	;'r'
   381     001C  3473               	retlw	115	;'s'
   382     001D  346F               	retlw	111	;'o'
   383     001E  3472               	retlw	114	;'r'
   384     001F  342F               	retlw	47	;'/'
   385     0020  3442               	retlw	66	;'B'
   386     0021  346C               	retlw	108	;'l'
   387     0022  3469               	retlw	105	;'i'
   388     0023  346E               	retlw	110	;'n'
   389     0024  346B               	retlw	107	;'k'
   390     0025  3420               	retlw	32	;' '
   391     0026  344F               	retlw	79	;'O'
   392     0027  3446               	retlw	70	;'F'
   393     0028  3446               	retlw	70	;'F'
   394     0029  3400               	retlw	0
   395     002A                     STR_3:
   396     002A  3441               	retlw	65	;'A'
   397     002B  3475               	retlw	117	;'u'
   398     002C  3474               	retlw	116	;'t'
   399     002D  346F               	retlw	111	;'o'
   400     002E  3453               	retlw	83	;'S'
   401     002F  3463               	retlw	99	;'c'
   402     0030  3472               	retlw	114	;'r'
   403     0031  346F               	retlw	111	;'o'
   404     0032  346C               	retlw	108	;'l'
   405     0033  346C               	retlw	108	;'l'
   406     0034  3420               	retlw	32	;' '
   407     0035  3454               	retlw	84	;'T'
   408     0036  3465               	retlw	101	;'e'
   409     0037  3473               	retlw	115	;'s'
   410     0038  3474               	retlw	116	;'t'
   411     0039  3400               	retlw	0
   412     003A                     STR_13:
   413     003A  3452               	retlw	82	;'R'
   414     003B  3465               	retlw	101	;'e'
   415     003C  3474               	retlw	116	;'t'
   416     003D  3475               	retlw	117	;'u'
   417     003E  3472               	retlw	114	;'r'
   418     003F  346E               	retlw	110	;'n'
   419     0040  3469               	retlw	105	;'i'
   420     0041  346E               	retlw	110	;'n'
   421     0042  3467               	retlw	103	;'g'
   422     0043  3420               	retlw	32	;' '
   423     0044  3448               	retlw	72	;'H'
   424     0045  346F               	retlw	111	;'o'
   425     0046  346D               	retlw	109	;'m'
   426     0047  3465               	retlw	101	;'e'
   427     0048  3400               	retlw	0
   428     0049                     STR_12:
   429     0049  3453               	retlw	83	;'S'
   430     004A  3463               	retlw	99	;'c'
   431     004B  3472               	retlw	114	;'r'
   432     004C  346F               	retlw	111	;'o'
   433     004D  346C               	retlw	108	;'l'
   434     004E  346C               	retlw	108	;'l'
   435     004F  3420               	retlw	32	;' '
   436     0050  3452               	retlw	82	;'R'
   437     0051  3469               	retlw	105	;'i'
   438     0052  3467               	retlw	103	;'g'
   439     0053  3468               	retlw	104	;'h'
   440     0054  3474               	retlw	116	;'t'
   441     0055  3400               	retlw	0
   442     0056                     STR_7:
   443     0056  3444               	retlw	68	;'D'
   444     0057  3469               	retlw	105	;'i'
   445     0058  3473               	retlw	115	;'s'
   446     0059  3470               	retlw	112	;'p'
   447     005A  346C               	retlw	108	;'l'
   448     005B  3461               	retlw	97	;'a'
   449     005C  3479               	retlw	121	;'y'
   450     005D  3420               	retlw	32	;' '
   451     005E  344F               	retlw	79	;'O'
   452     005F  3446               	retlw	70	;'F'
   453     0060  3446               	retlw	70	;'F'
   454     0061  3400               	retlw	0
   455     0062                     STR_1:
   456     0062  3448               	retlw	72	;'H'
   457     0063  3465               	retlw	101	;'e'
   458     0064  346C               	retlw	108	;'l'
   459     0065  346C               	retlw	108	;'l'
   460     0066  346F               	retlw	111	;'o'
   461     0067  3421               	retlw	33	;'!'
   462     0068  3420               	retlw	32	;' '
   463     0069  344C               	retlw	76	;'L'
   464     006A  3469               	retlw	105	;'i'
   465     006B  346B               	retlw	107	;'k'
   466     006C  3465               	retlw	101	;'e'
   467     006D  3400               	retlw	0
   468     006E                     STR_11:
   469     006E  3453               	retlw	83	;'S'
   470     006F  3463               	retlw	99	;'c'
   471     0070  3472               	retlw	114	;'r'
   472     0071  346F               	retlw	111	;'o'
   473     0072  346C               	retlw	108	;'l'
   474     0073  346C               	retlw	108	;'l'
   475     0074  3420               	retlw	32	;' '
   476     0075  344C               	retlw	76	;'L'
   477     0076  3465               	retlw	101	;'e'
   478     0077  3466               	retlw	102	;'f'
   479     0078  3474               	retlw	116	;'t'
   480     0079  3400               	retlw	0
   481     007A                     STR_2:
   482     007A  3453               	retlw	83	;'S'
   483     007B  3455               	retlw	85	;'U'
   484     007C  3442               	retlw	66	;'B'
   485     007D  3453               	retlw	83	;'S'
   486     007E  3443               	retlw	67	;'C'
   487     007F  3452               	retlw	82	;'R'
   488     0080  3449               	retlw	73	;'I'
   489     0081  3442               	retlw	66	;'B'
   490     0082  3445               	retlw	69	;'E'
   491     0083  3420               	retlw	32	;' '
   492     0084  3400               	retlw	0
   493     0085                     STR_8:
   494     0085  3444               	retlw	68	;'D'
   495     0086  3469               	retlw	105	;'i'
   496     0087  3473               	retlw	115	;'s'
   497     0088  3470               	retlw	112	;'p'
   498     0089  346C               	retlw	108	;'l'
   499     008A  3461               	retlw	97	;'a'
   500     008B  3479               	retlw	121	;'y'
   501     008C  3420               	retlw	32	;' '
   502     008D  344F               	retlw	79	;'O'
   503     008E  344E               	retlw	78	;'N'
   504     008F  3400               	retlw	0
   505     0090                     STR_10:
   506     0090  3454               	retlw	84	;'T'
   507     0091  3465               	retlw	101	;'e'
   508     0092  3478               	retlw	120	;'x'
   509     0093  3474               	retlw	116	;'t'
   510     0094  3420               	retlw	32	;' '
   511     0095  3452               	retlw	82	;'R'
   512     0096  342D               	retlw	45	;'-'
   513     0097  343E               	retlw	62	;'>'
   514     0098  344C               	retlw	76	;'L'
   515     0099  3400               	retlw	0
   516     009A                     STR_4:
   517     009A  3443               	retlw	67	;'C'
   518     009B  3475               	retlw	117	;'u'
   519     009C  3472               	retlw	114	;'r'
   520     009D  3473               	retlw	115	;'s'
   521     009E  346F               	retlw	111	;'o'
   522     009F  3472               	retlw	114	;'r'
   523     00A0  3420               	retlw	32	;' '
   524     00A1  344F               	retlw	79	;'O'
   525     00A2  344E               	retlw	78	;'N'
   526     00A3  3400               	retlw	0
   527     00A4                     STR_9:
   528     00A4  3454               	retlw	84	;'T'
   529     00A5  3465               	retlw	101	;'e'
   530     00A6  3478               	retlw	120	;'x'
   531     00A7  3474               	retlw	116	;'t'
   532     00A8  3420               	retlw	32	;' '
   533     00A9  344C               	retlw	76	;'L'
   534     00AA  342D               	retlw	45	;'-'
   535     00AB  343E               	retlw	62	;'>'
   536     00AC  3452               	retlw	82	;'R'
   537     00AD  3400               	retlw	0
   538     00AE                     STR_5:
   539     00AE  3442               	retlw	66	;'B'
   540     00AF  346C               	retlw	108	;'l'
   541     00B0  3469               	retlw	105	;'i'
   542     00B1  346E               	retlw	110	;'n'
   543     00B2  346B               	retlw	107	;'k'
   544     00B3  3420               	retlw	32	;' '
   545     00B4  344F               	retlw	79	;'O'
   546     00B5  344E               	retlw	78	;'N'
   547     00B6  3400               	retlw	0
   548     0044                     STR_14          equ	STR_13+10
   549                           
   550                           	psect	nvBANK0
   551     0028                     __pnvBANK0:
   552     0028                     __displaymode:
   553     0028                     	ds	1
   554     0029                     __displaycontrol:
   555     0029                     	ds	1
   556     002A                     __lcd_addr:
   557     002A                     	ds	1
   558     0013                     _SSPBUF         set	19
   559     0014                     _SSPCON         set	20
   560     0063                     _SSPIF          set	99
   561     0093                     _SSPADD         set	147
   562     0094                     _SSPSTAT        set	148
   563     0091                     _SSPCON2        set	145
   564     048B                     _RCEN           set	1163
   565     048E                     _ACKSTAT        set	1166
   566     048C                     _ACKEN          set	1164
   567     048D                     _ACKDT          set	1165
   568     048A                     _PEN            set	1162
   569     0489                     _RSEN           set	1161
   570     0488                     _SEN            set	1160
   571     043C                     _TRISC4         set	1084
   572     043B                     _TRISC3         set	1083
   573                           
   574                           	psect	cinit
   575     07E1                     start_initialization:	
   576                           ; #config settings
   577                           
   578     07E1                     __initialization:
   579                           
   580                           ; Initialize objects allocated to BANK0
   581     07E1  120A  118A  235B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   582     07E6  00A0               	movwf	__pdataBANK0& (0+127)
   583     07E7  120A  118A  235C  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   584     07EC  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   585     07ED  120A  118A  235D  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   586     07F2  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   587     07F3  120A  118A  235E  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   588     07F8  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   589                           
   590                           ; Clear objects allocated to BANK0
   591     07F9  01AB               	clrf	__pbssBANK0& (0+127)
   592     07FA  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   593     07FB  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   594     07FC                     end_of_initialization:	
   595                           ;End of C runtime variable initialization code
   596                           
   597     07FC                     __end_of__initialization:
   598     07FC  0183               	clrf	3
   599     07FD  120A  118A  2CFB   	ljmp	_main	;jump to C main() function
   600                           
   601                           	psect	bssBANK0
   602     002B                     __pbssBANK0:
   603     002B                     __currline:
   604     002B                     	ds	1
   605     002C                     __numlines:
   606     002C                     	ds	1
   607     002D                     __initialized:
   608     002D                     	ds	1
   609                           
   610                           	psect	dataBANK0
   611     0020                     __pdataBANK0:
   612     0020                     LCD_SetCursor@F1080:
   613     0020                     	ds	4
   614                           
   615                           	psect	cstackCOMMON
   616     0070                     __pcstackCOMMON:
   617     0070                     ?_I2C_Master_Start:
   618     0070                     ?_I2C_Master_Write:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_I2C_Master_Stop:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_LCD_Clear:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_systemInit:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_demoBasicPrinting:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_demoAutoScroll:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_demoCursorControl:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_demoDisplayControl:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_demoTextDirection:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_demoScrolling:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_demoHomeCommand:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_LCD_Command:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_LCD_Print_Char:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_LCD_Init:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_LCD_Home:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_LCD_Display_ON:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_LCD_Display_OFF:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_LCD_Cursor_ON:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_LCD_Cursor_OFF:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ?_LCD_Blink_ON:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_LCD_Blink_OFF:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_LCD_ScrollDisplayLeft:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_LCD_ScrollDisplayRight:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_LCD_LeftToRight:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?_LCD_RightToLeft:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?_LCD_AutoScroll_ON:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?_LCD_AutoScroll_OFF:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?_I2C_Master_Init:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_I2C_Master_Wait:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0070                     I2C_Master_Write@data:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0070                     ??_I2C_Master_Start:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     ??_I2C_Master_Write:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     ??_I2C_Master_Stop:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ??_I2C_Master_Init:	
   721                           ; 1 bytes @ 0x0
   722                           
   723     0070                     ??_I2C_Master_Wait:	
   724                           ; 1 bytes @ 0x0
   725                           
   726                           
   727                           ; 1 bytes @ 0x0
   728     0070                     	ds	1
   729     0071                     ?_LCD_Send:
   730     0071                     LCD_Send@mode:	
   731                           ; 1 bytes @ 0x1
   732                           
   733                           
   734                           ; 1 bytes @ 0x1
   735     0071                     	ds	1
   736     0072                     ??_LCD_Send:
   737                           
   738                           ; 1 bytes @ 0x2
   739     0072                     	ds	1
   740     0073                     LCD_Send@data:
   741                           
   742                           ; 1 bytes @ 0x3
   743     0073                     	ds	1
   744     0074                     LCD_Command@cmd:
   745     0074                     LCD_Print_Char@c:	
   746                           ; 1 bytes @ 0x4
   747                           
   748     0074                     ??_LCD_Command:	
   749                           ; 1 bytes @ 0x4
   750                           
   751     0074                     ??_LCD_Print_Char:	
   752                           ; 1 bytes @ 0x4
   753                           
   754                           
   755                           ; 1 bytes @ 0x4
   756     0074                     	ds	1
   757     0075                     ?_LCD_CreateCustomChar:
   758     0075                     ?_LCD_SetCursor:	
   759                           ; 1 bytes @ 0x5
   760                           
   761     0075                     ?_LCD_Print_String:	
   762                           ; 1 bytes @ 0x5
   763                           
   764     0075                     LCD_CreateCustomChar@charmap:	
   765                           ; 1 bytes @ 0x5
   766                           
   767     0075                     LCD_SetCursor@row:	
   768                           ; 1 bytes @ 0x5
   769                           
   770     0075                     LCD_Print_String@str:	
   771                           ; 1 bytes @ 0x5
   772                           
   773     0075                     ??_LCD_Clear:	
   774                           ; 1 bytes @ 0x5
   775                           
   776     0075                     ??_LCD_Home:	
   777                           ; 1 bytes @ 0x5
   778                           
   779     0075                     ??_LCD_Display_ON:	
   780                           ; 1 bytes @ 0x5
   781                           
   782     0075                     ??_LCD_Display_OFF:	
   783                           ; 1 bytes @ 0x5
   784                           
   785     0075                     ??_LCD_Cursor_ON:	
   786                           ; 1 bytes @ 0x5
   787                           
   788     0075                     ??_LCD_Cursor_OFF:	
   789                           ; 1 bytes @ 0x5
   790                           
   791     0075                     ??_LCD_Blink_ON:	
   792                           ; 1 bytes @ 0x5
   793                           
   794     0075                     ??_LCD_Blink_OFF:	
   795                           ; 1 bytes @ 0x5
   796                           
   797     0075                     ??_LCD_ScrollDisplayLeft:	
   798                           ; 1 bytes @ 0x5
   799                           
   800     0075                     ??_LCD_ScrollDisplayRight:	
   801                           ; 1 bytes @ 0x5
   802                           
   803     0075                     ??_LCD_LeftToRight:	
   804                           ; 1 bytes @ 0x5
   805                           
   806     0075                     ??_LCD_RightToLeft:	
   807                           ; 1 bytes @ 0x5
   808                           
   809     0075                     ??_LCD_AutoScroll_ON:	
   810                           ; 1 bytes @ 0x5
   811                           
   812     0075                     ??_LCD_AutoScroll_OFF:	
   813                           ; 1 bytes @ 0x5
   814                           
   815                           
   816                           ; 1 bytes @ 0x5
   817     0075                     	ds	1
   818     0076                     LCD_SetCursor@row_offsets:
   819     0076                     ??_LCD_CreateCustomChar:	
   820                           ; 4 bytes @ 0x6
   821                           
   822     0076                     ??_LCD_SetCursor:	
   823                           ; 1 bytes @ 0x6
   824                           
   825     0076                     ??_LCD_Print_String:	
   826                           ; 1 bytes @ 0x6
   827                           
   828                           
   829                           ; 1 bytes @ 0x6
   830     0076                     	ds	1
   831     0077                     LCD_CreateCustomChar@location:
   832     0077                     ??_LCD_Init:	
   833                           ; 1 bytes @ 0x7
   834                           
   835                           
   836                           ; 1 bytes @ 0x7
   837     0077                     	ds	1
   838     0078                     LCD_CreateCustomChar@i:
   839                           
   840                           ; 1 bytes @ 0x8
   841     0078                     	ds	2
   842     007A                     LCD_Init@lcd_addr:
   843     007A                     LCD_SetCursor@col:	
   844                           ; 1 bytes @ 0xA
   845                           
   846                           
   847                           ; 1 bytes @ 0xA
   848     007A                     	ds	1
   849     007B                     ??_systemInit:
   850     007B                     ??_demoBasicPrinting:	
   851                           ; 1 bytes @ 0xB
   852                           
   853     007B                     ??_demoAutoScroll:	
   854                           ; 1 bytes @ 0xB
   855                           
   856     007B                     ??_demoCursorControl:	
   857                           ; 1 bytes @ 0xB
   858                           
   859     007B                     ??_demoDisplayControl:	
   860                           ; 1 bytes @ 0xB
   861                           
   862     007B                     ??_demoTextDirection:	
   863                           ; 1 bytes @ 0xB
   864                           
   865     007B                     ??_demoScrolling:	
   866                           ; 1 bytes @ 0xB
   867                           
   868     007B                     ??_demoHomeCommand:	
   869                           ; 1 bytes @ 0xB
   870                           
   871                           
   872                           ; 1 bytes @ 0xB
   873     007B                     	ds	3
   874     007E                     ??_main:
   875                           
   876                           	psect	cstackBANK0
   877     0024                     __pcstackBANK0:	
   878                           ; 1 bytes @ 0xE
   879                           
   880     0024                     demoAutoScroll@i:
   881     0024                     demoScrolling@i:	
   882                           ; 2 bytes @ 0x0
   883                           
   884                           
   885                           ; 2 bytes @ 0x0
   886     0024                     	ds	2
   887     0026                     demoScrolling@i_212:
   888                           
   889                           ; 2 bytes @ 0x2
   890     0026                     	ds	2
   891                           
   892                           	psect	maintext
   893     04FB                     __pmaintext:	
   894 ;;
   895 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   896 ;;
   897 ;; *************** function _main *****************
   898 ;; Defined at:
   899 ;;		line 45 in file "newmain.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : B00/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels required when called: 7
   919 ;; This function calls:
   920 ;;		_demoAutoScroll
   921 ;;		_demoBasicPrinting
   922 ;;		_demoCursorControl
   923 ;;		_demoDisplayControl
   924 ;;		_demoHomeCommand
   925 ;;		_demoScrolling
   926 ;;		_demoTextDirection
   927 ;;		_systemInit
   928 ;; This function is called by:
   929 ;;		Startup code after reset
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933     04FB                     _main:	
   934                           ;psect for function _main
   935                           
   936     04FB                     l1477:	
   937                           ;incstack = 0
   938                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   939                           
   940                           
   941                           ;newmain.c: 46:     systemInit();
   942     04FB  120A  118A  2489  120A  118A  	fcall	_systemInit
   943     0500                     l226:	
   944                           ;newmain.c: 48:     while (1) {
   945                           
   946                           
   947                           ;newmain.c: 49:         demoBasicPrinting();
   948     0500  120A  118A  2560  120A  118A  	fcall	_demoBasicPrinting
   949     0505                     l1479:
   950                           
   951                           ;newmain.c: 50:         demoAutoScroll();
   952     0505  120A  118A  2635  120A  118A  	fcall	_demoAutoScroll
   953     050A                     l1481:
   954                           
   955                           ;newmain.c: 51:         demoCursorControl();
   956     050A  120A  118A  26F4  120A  118A  	fcall	_demoCursorControl
   957     050F                     l1483:
   958                           
   959                           ;newmain.c: 52:         demoDisplayControl();
   960     050F  120A  118A  25EB  120A  118A  	fcall	_demoDisplayControl
   961     0514                     l1485:
   962                           
   963                           ;newmain.c: 53:         demoTextDirection();
   964     0514  120A  118A  25A2  120A  118A  	fcall	_demoTextDirection
   965                           
   966                           ;newmain.c: 54:         demoScrolling();
   967     0519  120A  118A  2764  120A  118A  	fcall	_demoScrolling
   968     051E                     l1487:
   969                           
   970                           ;newmain.c: 55:         demoHomeCommand();
   971     051E  120A  118A  2527  120A  118A  	fcall	_demoHomeCommand
   972     0523  2D00               	goto	l226
   973     0524  120A  118A  2800   	ljmp	start
   974     0527                     __end_of_main:
   975                           
   976                           	psect	text1
   977     0489                     __ptext1:	
   978 ;; *************** function _systemInit *****************
   979 ;; Defined at:
   980 ;;		line 62 in file "newmain.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 6
  1001 ;; This function calls:
  1002 ;;		_I2C_Master_Init
  1003 ;;		_LCD_Clear
  1004 ;;		_LCD_CreateCustomChar
  1005 ;;		_LCD_Init
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011     0489                     _systemInit:	
  1012                           ;psect for function _systemInit
  1013                           
  1014     0489                     l1289:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _systemInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1017                           
  1018                           
  1019                           ;newmain.c: 63:     I2C_Master_Init();
  1020     0489  120A  118A  2413  120A  118A  	fcall	_I2C_Master_Init
  1021     048E                     l1291:
  1022                           
  1023                           ;newmain.c: 64:     LCD_Init(0x7C);
  1024     048E  307C               	movlw	124
  1025     048F  120A  118A  268B  120A  118A  	fcall	_LCD_Init
  1026     0494                     l1293:
  1027                           
  1028                           ;newmain.c: 65:     LCD_Clear();
  1029     0494  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  1030     0499                     l1295:
  1031                           
  1032                           ;newmain.c: 68:     LCD_CreateCustomChar(0, SMILEY);
  1033     0499  3009               	movlw	(low ((_SMILEY-__stringbase)| (0+32768)))& (0+255)
  1034     049A  00F5               	movwf	LCD_CreateCustomChar@charmap
  1035     049B  3000               	movlw	0
  1036     049C  120A  118A  24CF  120A  118A  	fcall	_LCD_CreateCustomChar
  1037     04A1                     l1297:
  1038                           
  1039                           ;newmain.c: 69:     LCD_CreateCustomChar(1, LAUGHING_SMILEY);
  1040     04A1  3001               	movlw	(low ((_LAUGHING_SMILEY-__stringbase)| (0+32768)))& (0+255)
  1041     04A2  00F5               	movwf	LCD_CreateCustomChar@charmap
  1042     04A3  3001               	movlw	1
  1043     04A4  120A  118A  24CF  120A  118A  	fcall	_LCD_CreateCustomChar
  1044     04A9                     l232:
  1045     04A9  0008               	return
  1046     04AA                     __end_of_systemInit:
  1047                           
  1048                           	psect	text2
  1049     068B                     __ptext2:	
  1050 ;; *************** function _LCD_Init *****************
  1051 ;; Defined at:
  1052 ;;		line 30 in file "jhd_lcd.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  lcd_addr        1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  lcd_addr        1   10[COMMON] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         1       0       0       0       0
  1068 ;;      Temps:          3       0       0       0       0
  1069 ;;      Totals:         4       0       0       0       0
  1070 ;;Total ram usage:        4 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 5
  1073 ;; This function calls:
  1074 ;;		_LCD_Clear
  1075 ;;		_LCD_Command
  1076 ;; This function is called by:
  1077 ;;		_systemInit
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081     068B                     _LCD_Init:	
  1082                           ;psect for function _LCD_Init
  1083                           
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1087                           ;LCD_Init@lcd_addr stored from wreg
  1088     068B  00FA               	movwf	LCD_Init@lcd_addr
  1089     068C                     l1179:
  1090                           
  1091                           ;jhd_lcd.c: 31:     _lcd_addr = lcd_addr;
  1092     068C  087A               	movf	LCD_Init@lcd_addr,w
  1093     068D  1283               	bcf	3,5	;RP0=0, select bank0
  1094     068E  1303               	bcf	3,6	;RP1=0, select bank0
  1095     068F  00AA               	movwf	__lcd_addr
  1096     0690                     l1181:
  1097                           
  1098                           ;jhd_lcd.c: 32:     _initialized = 0;
  1099     0690  01AD               	clrf	__initialized
  1100     0691                     l1183:
  1101                           
  1102                           ;jhd_lcd.c: 33:     _displaycontrol = 0x04 | 0x00 | 0x00;
  1103     0691  3004               	movlw	4
  1104     0692  00A9               	movwf	__displaycontrol
  1105     0693                     l1185:
  1106                           
  1107                           ;jhd_lcd.c: 34:     _displaymode = 0x02 | 0x00;
  1108     0693  3002               	movlw	2
  1109     0694  00A8               	movwf	__displaymode
  1110     0695                     l1187:
  1111                           
  1112                           ;jhd_lcd.c: 37:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1113     0695  3002               	movlw	2
  1114     0696  00F9               	movwf	??_LCD_Init+2
  1115     0697  3004               	movlw	4
  1116     0698  00F8               	movwf	??_LCD_Init+1
  1117     0699  30BA               	movlw	186
  1118     069A  00F7               	movwf	??_LCD_Init
  1119     069B                     u237:
  1120     069B  0BF7               	decfsz	??_LCD_Init,f
  1121     069C  2E9B               	goto	u237
  1122     069D  0BF8               	decfsz	??_LCD_Init+1,f
  1123     069E  2E9B               	goto	u237
  1124     069F  0BF9               	decfsz	??_LCD_Init+2,f
  1125     06A0  2E9B               	goto	u237
  1126     06A1  0000               	nop
  1127     06A2                     l1189:
  1128                           
  1129                           ;jhd_lcd.c: 40:     LCD_Command(0x33);
  1130     06A2  3033               	movlw	51
  1131     06A3  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1132     06A8                     l1191:
  1133                           
  1134                           ;jhd_lcd.c: 41:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1135     06A8  301A               	movlw	26
  1136     06A9  00F8               	movwf	??_LCD_Init+1
  1137     06AA  30F8               	movlw	248
  1138     06AB  00F7               	movwf	??_LCD_Init
  1139     06AC                     u247:
  1140     06AC  0BF7               	decfsz	??_LCD_Init,f
  1141     06AD  2EAC               	goto	u247
  1142     06AE  0BF8               	decfsz	??_LCD_Init+1,f
  1143     06AF  2EAC               	goto	u247
  1144     06B0  0000               	nop
  1145     06B1                     l1193:
  1146                           
  1147                           ;jhd_lcd.c: 42:     LCD_Command(0x32);
  1148     06B1  3032               	movlw	50
  1149     06B2  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1150     06B7                     l1195:
  1151                           
  1152                           ;jhd_lcd.c: 43:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1153     06B7  301A               	movlw	26
  1154     06B8  00F8               	movwf	??_LCD_Init+1
  1155     06B9  30F8               	movlw	248
  1156     06BA  00F7               	movwf	??_LCD_Init
  1157     06BB                     u257:
  1158     06BB  0BF7               	decfsz	??_LCD_Init,f
  1159     06BC  2EBB               	goto	u257
  1160     06BD  0BF8               	decfsz	??_LCD_Init+1,f
  1161     06BE  2EBB               	goto	u257
  1162     06BF  0000               	nop
  1163     06C0                     l1197:
  1164                           
  1165                           ;jhd_lcd.c: 46:     LCD_Command(0x20 | 0x08 | 0x00 | 0x00);
  1166     06C0  3028               	movlw	40
  1167     06C1  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1168     06C6                     l1199:
  1169                           
  1170                           ;jhd_lcd.c: 47:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1171     06C6  301A               	movlw	26
  1172     06C7  00F8               	movwf	??_LCD_Init+1
  1173     06C8  30F8               	movlw	248
  1174     06C9  00F7               	movwf	??_LCD_Init
  1175     06CA                     u267:
  1176     06CA  0BF7               	decfsz	??_LCD_Init,f
  1177     06CB  2ECA               	goto	u267
  1178     06CC  0BF8               	decfsz	??_LCD_Init+1,f
  1179     06CD  2ECA               	goto	u267
  1180     06CE  0000               	nop
  1181     06CF                     l1201:
  1182                           
  1183                           ;jhd_lcd.c: 50:     LCD_Command(0x08 | _displaycontrol);
  1184     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1185     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1186     06D1  0829               	movf	__displaycontrol,w
  1187     06D2  3808               	iorlw	8
  1188     06D3  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1189     06D8                     l1203:
  1190                           
  1191                           ;jhd_lcd.c: 51:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1192     06D8  301A               	movlw	26
  1193     06D9  00F8               	movwf	??_LCD_Init+1
  1194     06DA  30F8               	movlw	248
  1195     06DB  00F7               	movwf	??_LCD_Init
  1196     06DC                     u277:
  1197     06DC  0BF7               	decfsz	??_LCD_Init,f
  1198     06DD  2EDC               	goto	u277
  1199     06DE  0BF8               	decfsz	??_LCD_Init+1,f
  1200     06DF  2EDC               	goto	u277
  1201     06E0  0000               	nop
  1202     06E1                     l1205:
  1203                           
  1204                           ;jhd_lcd.c: 54:     LCD_Clear();
  1205     06E1  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  1206     06E6                     l1207:
  1207                           
  1208                           ;jhd_lcd.c: 57:     LCD_Command(0x04 | _displaymode);
  1209     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1210     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1211     06E8  0828               	movf	__displaymode,w
  1212     06E9  3804               	iorlw	4
  1213     06EA  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1214     06EF                     l1209:
  1215                           
  1216                           ;jhd_lcd.c: 59:     _initialized = 1;
  1217     06EF  3001               	movlw	1
  1218     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1219     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1220     06F2  00AD               	movwf	__initialized
  1221     06F3                     l34:
  1222     06F3  0008               	return
  1223     06F4                     __end_of_LCD_Init:
  1224                           
  1225                           	psect	text3
  1226     04CF                     __ptext3:	
  1227 ;; *************** function _LCD_CreateCustomChar *****************
  1228 ;; Defined at:
  1229 ;;		line 130 in file "jhd_lcd.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  location        1    wreg     unsigned char 
  1232 ;;  charmap         1    5[COMMON] PTR unsigned char 
  1233 ;;		 -> LAUGHING_SMILEY(8), SMILEY(8), 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  location        1    7[COMMON] unsigned char 
  1236 ;;  i               1    8[COMMON] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         1       0       0       0       0
  1247 ;;      Locals:         2       0       0       0       0
  1248 ;;      Temps:          1       0       0       0       0
  1249 ;;      Totals:         4       0       0       0       0
  1250 ;;Total ram usage:        4 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 4
  1253 ;; This function calls:
  1254 ;;		_LCD_Command
  1255 ;;		_LCD_Send
  1256 ;; This function is called by:
  1257 ;;		_systemInit
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261     04CF                     _LCD_CreateCustomChar:	
  1262                           ;psect for function _LCD_CreateCustomChar
  1263                           
  1264                           
  1265                           ;incstack = 0
  1266                           ; Regs used in _LCD_CreateCustomChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1267                           ;LCD_CreateCustomChar@location stored from wreg
  1268     04CF  00F7               	movwf	LCD_CreateCustomChar@location
  1269     04D0                     l1259:
  1270                           
  1271                           ;jhd_lcd.c: 131:     location &= 0x7;
  1272     04D0  3007               	movlw	7
  1273     04D1  05F7               	andwf	LCD_CreateCustomChar@location,f
  1274     04D2                     l1261:
  1275                           
  1276                           ;jhd_lcd.c: 132:     LCD_Command(0x40 | (location << 3));
  1277     04D2  0877               	movf	LCD_CreateCustomChar@location,w
  1278     04D3  00F6               	movwf	??_LCD_CreateCustomChar
  1279     04D4  3002               	movlw	2
  1280     04D5                     u155:
  1281     04D5  1003               	clrc
  1282     04D6  0DF6               	rlf	??_LCD_CreateCustomChar,f
  1283     04D7  3EFF               	addlw	-1
  1284     04D8  1D03               	skipz
  1285     04D9  2CD5               	goto	u155
  1286     04DA  1003               	clrc
  1287     04DB  0D76               	rlf	??_LCD_CreateCustomChar,w
  1288     04DC  3840               	iorlw	64
  1289     04DD  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1290     04E2                     l1263:
  1291                           
  1292                           ;jhd_lcd.c: 134:     for (unsigned char i = 0; i < 8; i++) {
  1293     04E2  01F8               	clrf	LCD_CreateCustomChar@i
  1294     04E3                     l1269:
  1295                           
  1296                           ;jhd_lcd.c: 135:         LCD_Send(charmap[i], 0x40);
  1297     04E3  3040               	movlw	64
  1298     04E4  00F1               	movwf	LCD_Send@mode
  1299     04E5  0878               	movf	LCD_CreateCustomChar@i,w
  1300     04E6  0775               	addwf	LCD_CreateCustomChar@charmap,w
  1301     04E7  0084               	movwf	4
  1302     04E8  120A  118A  2003  120A  118A  	fcall	stringdir
  1303     04ED  120A  118A  24AA  120A  118A  	fcall	_LCD_Send
  1304     04F2                     l1271:
  1305                           
  1306                           ;jhd_lcd.c: 136:         }
  1307     04F2  3001               	movlw	1
  1308     04F3  07F8               	addwf	LCD_CreateCustomChar@i,f
  1309     04F4                     l1273:
  1310     04F4  3008               	movlw	8
  1311     04F5  0278               	subwf	LCD_CreateCustomChar@i,w
  1312     04F6  1C03               	skipc
  1313     04F7  2CF9               	goto	u161
  1314     04F8  2CFA               	goto	u160
  1315     04F9                     u161:
  1316     04F9  2CE3               	goto	l1269
  1317     04FA                     u160:
  1318     04FA                     l81:
  1319     04FA  0008               	return
  1320     04FB                     __end_of_LCD_CreateCustomChar:
  1321                           
  1322                           	psect	text4
  1323     0413                     __ptext4:	
  1324 ;; *************** function _I2C_Master_Init *****************
  1325 ;; Defined at:
  1326 ;;		line 5 in file "i2c.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		status,2
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_systemInit
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353     0413                     _I2C_Master_Init:	
  1354                           ;psect for function _I2C_Master_Init
  1355                           
  1356     0413                     l941:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _I2C_Master_Init: [status,2]
  1359                           
  1360                           
  1361                           ;i2c.c: 6:     SSPCON = 0x28;
  1362     0413  3028               	movlw	40
  1363     0414  1283               	bcf	3,5	;RP0=0, select bank0
  1364     0415  1303               	bcf	3,6	;RP1=0, select bank0
  1365     0416  0094               	movwf	20	;volatile
  1366     0417                     l943:
  1367                           
  1368                           ;i2c.c: 7:     SSPCON2 = 0x00;
  1369     0417  1683               	bsf	3,5	;RP0=1, select bank1
  1370     0418  1303               	bcf	3,6	;RP1=0, select bank1
  1371     0419  0191               	clrf	17	;volatile
  1372                           
  1373                           ;i2c.c: 8:     SSPSTAT = 0x00;
  1374     041A  0194               	clrf	20	;volatile
  1375     041B                     l945:
  1376                           
  1377                           ;i2c.c: 9:     SSPADD = ((16000000/4)/100000) - 1;
  1378     041B  3027               	movlw	39
  1379     041C  0093               	movwf	19	;volatile
  1380     041D                     l947:
  1381                           
  1382                           ;i2c.c: 10:     TRISC3 = 1;
  1383     041D  1587               	bsf	7,3	;volatile
  1384     041E                     l949:
  1385                           
  1386                           ;i2c.c: 11:     TRISC4 = 1;
  1387     041E  1607               	bsf	7,4	;volatile
  1388     041F                     l126:
  1389     041F  0008               	return
  1390     0420                     __end_of_I2C_Master_Init:
  1391                           
  1392                           	psect	text5
  1393     05A2                     __ptext5:	
  1394 ;; *************** function _demoTextDirection *****************
  1395 ;; Defined at:
  1396 ;;		line 151 in file "newmain.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0
  1412 ;;      Temps:          3       0       0       0       0
  1413 ;;      Totals:         3       0       0       0       0
  1414 ;;Total ram usage:        3 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 5
  1417 ;; This function calls:
  1418 ;;		_LCD_Clear
  1419 ;;		_LCD_LeftToRight
  1420 ;;		_LCD_Print_String
  1421 ;;		_LCD_RightToLeft
  1422 ;;		_LCD_SetCursor
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428     05A2                     _demoTextDirection:	
  1429                           ;psect for function _demoTextDirection
  1430                           
  1431     05A2                     l1379:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _demoTextDirection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1434                           
  1435                           
  1436                           ;newmain.c: 152:     LCD_Clear();
  1437     05A2  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  1438     05A7                     l1381:
  1439                           
  1440                           ;newmain.c: 153:     LCD_SetCursor(0, 0);
  1441     05A7  01F5               	clrf	LCD_SetCursor@row
  1442     05A8  3000               	movlw	0
  1443     05A9  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  1444     05AE                     l1383:
  1445                           
  1446                           ;newmain.c: 154:     LCD_Print_String("Text L->R");
  1447     05AE  309C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1448     05AF  00F5               	movwf	LCD_Print_String@str
  1449     05B0  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  1450                           
  1451                           ;newmain.c: 155:     LCD_LeftToRight();
  1452     05B5  120A  118A  23BF  120A  118A  	fcall	_LCD_LeftToRight
  1453     05BA                     l1385:
  1454                           
  1455                           ;newmain.c: 156:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1456     05BA  3029               	movlw	41
  1457     05BB  00FD               	movwf	??_demoTextDirection+2
  1458     05BC  3096               	movlw	150
  1459     05BD  00FC               	movwf	??_demoTextDirection+1
  1460     05BE  307F               	movlw	127
  1461     05BF  00FB               	movwf	??_demoTextDirection
  1462     05C0                     u287:
  1463     05C0  0BFB               	decfsz	??_demoTextDirection,f
  1464     05C1  2DC0               	goto	u287
  1465     05C2  0BFC               	decfsz	??_demoTextDirection+1,f
  1466     05C3  2DC0               	goto	u287
  1467     05C4  0BFD               	decfsz	??_demoTextDirection+2,f
  1468     05C5  2DC0               	goto	u287
  1469     05C6                     l1387:
  1470                           
  1471                           ;newmain.c: 158:     LCD_Clear();
  1472     05C6  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  1473     05CB                     l1389:
  1474                           
  1475                           ;newmain.c: 159:     LCD_SetCursor(0, 0);
  1476     05CB  01F5               	clrf	LCD_SetCursor@row
  1477     05CC  3000               	movlw	0
  1478     05CD  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  1479     05D2                     l1391:
  1480                           
  1481                           ;newmain.c: 160:     LCD_Print_String("Text R->L");
  1482     05D2  3088               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1483     05D3  00F5               	movwf	LCD_Print_String@str
  1484     05D4  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  1485     05D9                     l1393:
  1486                           
  1487                           ;newmain.c: 161:     LCD_RightToLeft();
  1488     05D9  120A  118A  23FA  120A  118A  	fcall	_LCD_RightToLeft
  1489     05DE                     l1395:
  1490                           
  1491                           ;newmain.c: 162:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1492     05DE  3029               	movlw	41
  1493     05DF  00FD               	movwf	??_demoTextDirection+2
  1494     05E0  3096               	movlw	150
  1495     05E1  00FC               	movwf	??_demoTextDirection+1
  1496     05E2  307F               	movlw	127
  1497     05E3  00FB               	movwf	??_demoTextDirection
  1498     05E4                     u297:
  1499     05E4  0BFB               	decfsz	??_demoTextDirection,f
  1500     05E5  2DE4               	goto	u297
  1501     05E6  0BFC               	decfsz	??_demoTextDirection+1,f
  1502     05E7  2DE4               	goto	u297
  1503     05E8  0BFD               	decfsz	??_demoTextDirection+2,f
  1504     05E9  2DE4               	goto	u297
  1505     05EA                     l249:
  1506     05EA  0008               	return
  1507     05EB                     __end_of_demoTextDirection:
  1508                           
  1509                           	psect	text6
  1510     03FA                     __ptext6:	
  1511 ;; *************** function _LCD_RightToLeft *****************
  1512 ;; Defined at:
  1513 ;;		line 115 in file "jhd_lcd.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, pclath, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0
  1530 ;;      Totals:         0       0       0       0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; Hardware stack levels required when called: 4
  1534 ;; This function calls:
  1535 ;;		_LCD_Command
  1536 ;; This function is called by:
  1537 ;;		_demoTextDirection
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541     03FA                     _LCD_RightToLeft:	
  1542                           ;psect for function _LCD_RightToLeft
  1543                           
  1544     03FA                     l1247:	
  1545                           ;incstack = 0
  1546                           ; Regs used in _LCD_RightToLeft: [wreg+status,2+status,0+pclath+cstack]
  1547                           
  1548                           
  1549                           ;jhd_lcd.c: 116:     _displaymode &= ~0x02;
  1550     03FA  30FD               	movlw	253
  1551     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1552     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1553     03FD  05A8               	andwf	__displaymode,f
  1554     03FE                     l1249:
  1555                           
  1556                           ;jhd_lcd.c: 117:     LCD_Command(0x04 | _displaymode);
  1557     03FE  0828               	movf	__displaymode,w
  1558     03FF  3804               	iorlw	4
  1559     0400  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1560     0405                     l70:
  1561     0405  0008               	return
  1562     0406                     __end_of_LCD_RightToLeft:
  1563                           
  1564                           	psect	text7
  1565     03BF                     __ptext7:	
  1566 ;; *************** function _LCD_LeftToRight *****************
  1567 ;; Defined at:
  1568 ;;		line 110 in file "jhd_lcd.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 4
  1589 ;; This function calls:
  1590 ;;		_LCD_Command
  1591 ;; This function is called by:
  1592 ;;		_demoTextDirection
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596     03BF                     _LCD_LeftToRight:	
  1597                           ;psect for function _LCD_LeftToRight
  1598                           
  1599     03BF                     l1243:	
  1600                           ;incstack = 0
  1601                           ; Regs used in _LCD_LeftToRight: [wreg+status,2+status,0+pclath+cstack]
  1602                           
  1603                           
  1604                           ;jhd_lcd.c: 111:     _displaymode |= 0x02;
  1605     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1606     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1607     03C1  14A8               	bsf	__displaymode,1
  1608     03C2                     l1245:
  1609                           
  1610                           ;jhd_lcd.c: 112:     LCD_Command(0x04 | _displaymode);
  1611     03C2  0828               	movf	__displaymode,w
  1612     03C3  3804               	iorlw	4
  1613     03C4  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1614     03C9                     l67:
  1615     03C9  0008               	return
  1616     03CA                     __end_of_LCD_LeftToRight:
  1617                           
  1618                           	psect	text8
  1619     0764                     __ptext8:	
  1620 ;; *************** function _demoScrolling *****************
  1621 ;; Defined at:
  1622 ;;		line 168 in file "newmain.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  i               2    2[BANK0 ] int 
  1627 ;;  i               2    0[BANK0 ] int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       0       0       0       0
  1638 ;;      Locals:         0       4       0       0       0
  1639 ;;      Temps:          3       0       0       0       0
  1640 ;;      Totals:         3       4       0       0       0
  1641 ;;Total ram usage:        7 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 5
  1644 ;; This function calls:
  1645 ;;		_LCD_Clear
  1646 ;;		_LCD_Print_String
  1647 ;;		_LCD_ScrollDisplayLeft
  1648 ;;		_LCD_ScrollDisplayRight
  1649 ;;		_LCD_SetCursor
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655     0764                     _demoScrolling:	
  1656                           ;psect for function _demoScrolling
  1657                           
  1658     0764                     l1397:	
  1659                           ;incstack = 0
  1660                           ; Regs used in _demoScrolling: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1661                           
  1662                           
  1663                           ;newmain.c: 170:     LCD_Clear();
  1664     0764  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  1665     0769                     l1399:
  1666                           
  1667                           ;newmain.c: 171:     LCD_SetCursor(0, 0);
  1668     0769  01F5               	clrf	LCD_SetCursor@row
  1669     076A  3000               	movlw	0
  1670     076B  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  1671     0770                     l1401:
  1672                           
  1673                           ;newmain.c: 172:     LCD_Print_String("Scroll Left");
  1674     0770  3066               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1675     0771  00F5               	movwf	LCD_Print_String@str
  1676     0772  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  1677     0777                     l1403:
  1678                           
  1679                           ;newmain.c: 173:     for (int i = 0; i < 5; i++) {
  1680     0777  1283               	bcf	3,5	;RP0=0, select bank0
  1681     0778  1303               	bcf	3,6	;RP1=0, select bank0
  1682     0779  01A4               	clrf	demoScrolling@i
  1683     077A  01A5               	clrf	demoScrolling@i+1
  1684     077B                     l1409:
  1685                           
  1686                           ;newmain.c: 174:         _delay((unsigned long)((500)*(16000000/4000.0)));
  1687     077B  300B               	movlw	11
  1688     077C  00FD               	movwf	??_demoScrolling+2
  1689     077D  3026               	movlw	38
  1690     077E  00FC               	movwf	??_demoScrolling+1
  1691     077F  305D               	movlw	93
  1692     0780  00FB               	movwf	??_demoScrolling
  1693     0781                     u307:
  1694     0781  0BFB               	decfsz	??_demoScrolling,f
  1695     0782  2F81               	goto	u307
  1696     0783  0BFC               	decfsz	??_demoScrolling+1,f
  1697     0784  2F81               	goto	u307
  1698     0785  0BFD               	decfsz	??_demoScrolling+2,f
  1699     0786  2F81               	goto	u307
  1700     0787  2F88               	nop2
  1701     0788                     l1411:
  1702                           
  1703                           ;newmain.c: 175:         LCD_ScrollDisplayLeft();
  1704     0788  120A  118A  235F  120A  118A  	fcall	_LCD_ScrollDisplayLeft
  1705     078D                     l1413:
  1706                           
  1707                           ;newmain.c: 176:     }
  1708     078D  3001               	movlw	1
  1709     078E  1283               	bcf	3,5	;RP0=0, select bank0
  1710     078F  1303               	bcf	3,6	;RP1=0, select bank0
  1711     0790  07A4               	addwf	demoScrolling@i,f
  1712     0791  1803               	skipnc
  1713     0792  0AA5               	incf	demoScrolling@i+1,f
  1714     0793  3000               	movlw	0
  1715     0794  07A5               	addwf	demoScrolling@i+1,f
  1716     0795                     l1415:
  1717     0795  0825               	movf	demoScrolling@i+1,w
  1718     0796  3A80               	xorlw	128
  1719     0797  00FF               	movwf	btemp+1
  1720     0798  3080               	movlw	128
  1721     0799  027F               	subwf	btemp+1,w
  1722     079A  1D03               	skipz
  1723     079B  2F9E               	goto	u205
  1724     079C  3005               	movlw	5
  1725     079D  0224               	subwf	demoScrolling@i,w
  1726     079E                     u205:
  1727     079E  1C03               	skipc
  1728     079F  2FA1               	goto	u201
  1729     07A0  2FA2               	goto	u200
  1730     07A1                     u201:
  1731     07A1  2F7B               	goto	l1409
  1732     07A2                     u200:
  1733     07A2                     l1417:
  1734                           
  1735                           ;newmain.c: 179:     LCD_Clear();
  1736     07A2  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  1737     07A7                     l1419:
  1738                           
  1739                           ;newmain.c: 180:     LCD_SetCursor(0, 0);
  1740     07A7  01F5               	clrf	LCD_SetCursor@row
  1741     07A8  3000               	movlw	0
  1742     07A9  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  1743     07AE                     l1421:
  1744                           
  1745                           ;newmain.c: 181:     LCD_Print_String("Scroll Right");
  1746     07AE  3041               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1747     07AF  00F5               	movwf	LCD_Print_String@str
  1748     07B0  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  1749     07B5                     l1423:
  1750                           
  1751                           ;newmain.c: 182:     for (int i = 0; i < 5; i++) {
  1752     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1753     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1754     07B7  01A6               	clrf	demoScrolling@i_212
  1755     07B8  01A7               	clrf	demoScrolling@i_212+1
  1756     07B9                     l1429:
  1757                           
  1758                           ;newmain.c: 183:         _delay((unsigned long)((500)*(16000000/4000.0)));
  1759     07B9  300B               	movlw	11
  1760     07BA  00FD               	movwf	??_demoScrolling+2
  1761     07BB  3026               	movlw	38
  1762     07BC  00FC               	movwf	??_demoScrolling+1
  1763     07BD  305D               	movlw	93
  1764     07BE  00FB               	movwf	??_demoScrolling
  1765     07BF                     u317:
  1766     07BF  0BFB               	decfsz	??_demoScrolling,f
  1767     07C0  2FBF               	goto	u317
  1768     07C1  0BFC               	decfsz	??_demoScrolling+1,f
  1769     07C2  2FBF               	goto	u317
  1770     07C3  0BFD               	decfsz	??_demoScrolling+2,f
  1771     07C4  2FBF               	goto	u317
  1772     07C5  2FC6               	nop2
  1773     07C6                     l1431:
  1774                           
  1775                           ;newmain.c: 184:         LCD_ScrollDisplayRight();
  1776     07C6  120A  118A  2366  120A  118A  	fcall	_LCD_ScrollDisplayRight
  1777     07CB                     l1433:
  1778                           
  1779                           ;newmain.c: 185:     }
  1780     07CB  3001               	movlw	1
  1781     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1782     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1783     07CE  07A6               	addwf	demoScrolling@i_212,f
  1784     07CF  1803               	skipnc
  1785     07D0  0AA7               	incf	demoScrolling@i_212+1,f
  1786     07D1  3000               	movlw	0
  1787     07D2  07A7               	addwf	demoScrolling@i_212+1,f
  1788     07D3                     l1435:
  1789     07D3  0827               	movf	demoScrolling@i_212+1,w
  1790     07D4  3A80               	xorlw	128
  1791     07D5  00FF               	movwf	btemp+1
  1792     07D6  3080               	movlw	128
  1793     07D7  027F               	subwf	btemp+1,w
  1794     07D8  1D03               	skipz
  1795     07D9  2FDC               	goto	u215
  1796     07DA  3005               	movlw	5
  1797     07DB  0226               	subwf	demoScrolling@i_212,w
  1798     07DC                     u215:
  1799     07DC  1C03               	skipc
  1800     07DD  2FDF               	goto	u211
  1801     07DE  2FE0               	goto	u210
  1802     07DF                     u211:
  1803     07DF  2FB9               	goto	l1429
  1804     07E0                     u210:
  1805     07E0                     l256:
  1806     07E0  0008               	return
  1807     07E1                     __end_of_demoScrolling:
  1808                           
  1809                           	psect	text9
  1810     0366                     __ptext9:	
  1811 ;; *************** function _LCD_ScrollDisplayRight *****************
  1812 ;; Defined at:
  1813 ;;		line 106 in file "jhd_lcd.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 4
  1834 ;; This function calls:
  1835 ;;		_LCD_Command
  1836 ;; This function is called by:
  1837 ;;		_demoScrolling
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     0366                     _LCD_ScrollDisplayRight:	
  1842                           ;psect for function _LCD_ScrollDisplayRight
  1843                           
  1844     0366                     l1241:	
  1845                           ;incstack = 0
  1846                           ; Regs used in _LCD_ScrollDisplayRight: [wreg+status,2+status,0+pclath+cstack]
  1847                           
  1848                           
  1849                           ;jhd_lcd.c: 107:     LCD_Command(0x10 | 0x08 | 0x04);
  1850     0366  301C               	movlw	28
  1851     0367  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1852     036C                     l64:
  1853     036C  0008               	return
  1854     036D                     __end_of_LCD_ScrollDisplayRight:
  1855                           
  1856                           	psect	text10
  1857     035F                     __ptext10:	
  1858 ;; *************** function _LCD_ScrollDisplayLeft *****************
  1859 ;; Defined at:
  1860 ;;		line 102 in file "jhd_lcd.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 4
  1881 ;; This function calls:
  1882 ;;		_LCD_Command
  1883 ;; This function is called by:
  1884 ;;		_demoScrolling
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888     035F                     _LCD_ScrollDisplayLeft:	
  1889                           ;psect for function _LCD_ScrollDisplayLeft
  1890                           
  1891     035F                     l1239:	
  1892                           ;incstack = 0
  1893                           ; Regs used in _LCD_ScrollDisplayLeft: [wreg+status,2+status,0+pclath+cstack]
  1894                           
  1895                           
  1896                           ;jhd_lcd.c: 103:     LCD_Command(0x10 | 0x08 | 0x00);
  1897     035F  3018               	movlw	24
  1898     0360  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  1899     0365                     l61:
  1900     0365  0008               	return
  1901     0366                     __end_of_LCD_ScrollDisplayLeft:
  1902                           
  1903                           	psect	text11
  1904     0527                     __ptext11:	
  1905 ;; *************** function _demoHomeCommand *****************
  1906 ;; Defined at:
  1907 ;;		line 191 in file "newmain.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0
  1923 ;;      Temps:          3       0       0       0       0
  1924 ;;      Totals:         3       0       0       0       0
  1925 ;;Total ram usage:        3 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 5
  1928 ;; This function calls:
  1929 ;;		_LCD_Clear
  1930 ;;		_LCD_Home
  1931 ;;		_LCD_Print_String
  1932 ;;		_LCD_SetCursor
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938     0527                     _demoHomeCommand:	
  1939                           ;psect for function _demoHomeCommand
  1940                           
  1941     0527                     l1437:	
  1942                           ;incstack = 0
  1943                           ; Regs used in _demoHomeCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1944                           
  1945                           
  1946                           ;newmain.c: 192:     LCD_Clear();
  1947     0527  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  1948     052C                     l1439:
  1949                           
  1950                           ;newmain.c: 193:     LCD_SetCursor(0, 1);
  1951     052C  01F5               	clrf	LCD_SetCursor@row
  1952     052D  0AF5               	incf	LCD_SetCursor@row,f
  1953     052E  3000               	movlw	0
  1954     052F  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  1955     0534                     l1441:
  1956                           
  1957                           ;newmain.c: 194:     LCD_Print_String("Returning Home");
  1958     0534  3032               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1959     0535  00F5               	movwf	LCD_Print_String@str
  1960     0536  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  1961     053B                     l1443:
  1962                           
  1963                           ;newmain.c: 195:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1964     053B  3029               	movlw	41
  1965     053C  00FD               	movwf	??_demoHomeCommand+2
  1966     053D  3096               	movlw	150
  1967     053E  00FC               	movwf	??_demoHomeCommand+1
  1968     053F  307F               	movlw	127
  1969     0540  00FB               	movwf	??_demoHomeCommand
  1970     0541                     u327:
  1971     0541  0BFB               	decfsz	??_demoHomeCommand,f
  1972     0542  2D41               	goto	u327
  1973     0543  0BFC               	decfsz	??_demoHomeCommand+1,f
  1974     0544  2D41               	goto	u327
  1975     0545  0BFD               	decfsz	??_demoHomeCommand+2,f
  1976     0546  2D41               	goto	u327
  1977     0547                     l1445:
  1978                           
  1979                           ;newmain.c: 197:     LCD_Home();
  1980     0547  120A  118A  2440  120A  118A  	fcall	_LCD_Home
  1981     054C                     l1447:
  1982                           
  1983                           ;newmain.c: 198:     LCD_Print_String("Home");
  1984     054C  303C               	movlw	(low (((STR_13+10)-__stringbase)| (0+32768)))& (0+255)
  1985     054D  00F5               	movwf	LCD_Print_String@str
  1986     054E  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  1987     0553                     l1449:
  1988                           
  1989                           ;newmain.c: 199:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1990     0553  3029               	movlw	41
  1991     0554  00FD               	movwf	??_demoHomeCommand+2
  1992     0555  3096               	movlw	150
  1993     0556  00FC               	movwf	??_demoHomeCommand+1
  1994     0557  307F               	movlw	127
  1995     0558  00FB               	movwf	??_demoHomeCommand
  1996     0559                     u337:
  1997     0559  0BFB               	decfsz	??_demoHomeCommand,f
  1998     055A  2D59               	goto	u337
  1999     055B  0BFC               	decfsz	??_demoHomeCommand+1,f
  2000     055C  2D59               	goto	u337
  2001     055D  0BFD               	decfsz	??_demoHomeCommand+2,f
  2002     055E  2D59               	goto	u337
  2003     055F                     l259:
  2004     055F  0008               	return
  2005     0560                     __end_of_demoHomeCommand:
  2006                           
  2007                           	psect	text12
  2008     0440                     __ptext12:	
  2009 ;; *************** function _LCD_Home *****************
  2010 ;; Defined at:
  2011 ;;		line 67 in file "jhd_lcd.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0
  2027 ;;      Temps:          2       0       0       0       0
  2028 ;;      Totals:         2       0       0       0       0
  2029 ;;Total ram usage:        2 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 4
  2032 ;; This function calls:
  2033 ;;		_LCD_Command
  2034 ;; This function is called by:
  2035 ;;		_demoHomeCommand
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039     0440                     _LCD_Home:	
  2040                           ;psect for function _LCD_Home
  2041                           
  2042     0440                     l1211:	
  2043                           ;incstack = 0
  2044                           ; Regs used in _LCD_Home: [wreg+status,2+status,0+pclath+cstack]
  2045                           
  2046                           
  2047                           ;jhd_lcd.c: 68:     LCD_Command(0x02);
  2048     0440  3002               	movlw	2
  2049     0441  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2050     0446                     l1213:
  2051                           
  2052                           ;jhd_lcd.c: 69:     _delay((unsigned long)((2)*(16000000/4000.0)));
  2053     0446  300B               	movlw	11
  2054     0447  00F6               	movwf	??_LCD_Home+1
  2055     0448  3062               	movlw	98
  2056     0449  00F5               	movwf	??_LCD_Home
  2057     044A                     u347:
  2058     044A  0BF5               	decfsz	??_LCD_Home,f
  2059     044B  2C4A               	goto	u347
  2060     044C  0BF6               	decfsz	??_LCD_Home+1,f
  2061     044D  2C4A               	goto	u347
  2062     044E  0000               	nop
  2063     044F                     l40:
  2064     044F  0008               	return
  2065     0450                     __end_of_LCD_Home:
  2066                           
  2067                           	psect	text13
  2068     05EB                     __ptext13:	
  2069 ;; *************** function _demoDisplayControl *****************
  2070 ;; Defined at:
  2071 ;;		line 134 in file "newmain.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0
  2087 ;;      Temps:          3       0       0       0       0
  2088 ;;      Totals:         3       0       0       0       0
  2089 ;;Total ram usage:        3 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 5
  2092 ;; This function calls:
  2093 ;;		_LCD_Clear
  2094 ;;		_LCD_Display_OFF
  2095 ;;		_LCD_Display_ON
  2096 ;;		_LCD_Print_String
  2097 ;;		_LCD_SetCursor
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103     05EB                     _demoDisplayControl:	
  2104                           ;psect for function _demoDisplayControl
  2105                           
  2106     05EB                     l1361:	
  2107                           ;incstack = 0
  2108                           ; Regs used in _demoDisplayControl: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2109                           
  2110                           
  2111                           ;newmain.c: 135:     LCD_Clear();
  2112     05EB  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  2113     05F0                     l1363:
  2114                           
  2115                           ;newmain.c: 136:     LCD_SetCursor(0, 0);
  2116     05F0  01F5               	clrf	LCD_SetCursor@row
  2117     05F1  3000               	movlw	0
  2118     05F2  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2119     05F7                     l1365:
  2120                           
  2121                           ;newmain.c: 137:     LCD_Print_String("Display OFF");
  2122     05F7  304E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2123     05F8  00F5               	movwf	LCD_Print_String@str
  2124     05F9  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2125                           
  2126                           ;newmain.c: 138:     LCD_Display_OFF();
  2127     05FE  120A  118A  23EE  120A  118A  	fcall	_LCD_Display_OFF
  2128     0603                     l1367:
  2129                           
  2130                           ;newmain.c: 139:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2131     0603  3015               	movlw	21
  2132     0604  00FD               	movwf	??_demoDisplayControl+2
  2133     0605  304B               	movlw	75
  2134     0606  00FC               	movwf	??_demoDisplayControl+1
  2135     0607  30BE               	movlw	190
  2136     0608  00FB               	movwf	??_demoDisplayControl
  2137     0609                     u357:
  2138     0609  0BFB               	decfsz	??_demoDisplayControl,f
  2139     060A  2E09               	goto	u357
  2140     060B  0BFC               	decfsz	??_demoDisplayControl+1,f
  2141     060C  2E09               	goto	u357
  2142     060D  0BFD               	decfsz	??_demoDisplayControl+2,f
  2143     060E  2E09               	goto	u357
  2144     060F  0000               	nop
  2145     0610                     l1369:
  2146                           
  2147                           ;newmain.c: 141:     LCD_Display_ON();
  2148     0610  120A  118A  23B4  120A  118A  	fcall	_LCD_Display_ON
  2149     0615                     l1371:
  2150                           
  2151                           ;newmain.c: 142:     LCD_Clear();
  2152     0615  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  2153     061A                     l1373:
  2154                           
  2155                           ;newmain.c: 143:     LCD_SetCursor(0, 0);
  2156     061A  01F5               	clrf	LCD_SetCursor@row
  2157     061B  3000               	movlw	0
  2158     061C  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2159     0621                     l1375:
  2160                           
  2161                           ;newmain.c: 144:     LCD_Print_String("Display ON");
  2162     0621  307D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2163     0622  00F5               	movwf	LCD_Print_String@str
  2164     0623  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2165     0628                     l1377:
  2166                           
  2167                           ;newmain.c: 145:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2168     0628  3029               	movlw	41
  2169     0629  00FD               	movwf	??_demoDisplayControl+2
  2170     062A  3096               	movlw	150
  2171     062B  00FC               	movwf	??_demoDisplayControl+1
  2172     062C  307F               	movlw	127
  2173     062D  00FB               	movwf	??_demoDisplayControl
  2174     062E                     u367:
  2175     062E  0BFB               	decfsz	??_demoDisplayControl,f
  2176     062F  2E2E               	goto	u367
  2177     0630  0BFC               	decfsz	??_demoDisplayControl+1,f
  2178     0631  2E2E               	goto	u367
  2179     0632  0BFD               	decfsz	??_demoDisplayControl+2,f
  2180     0633  2E2E               	goto	u367
  2181     0634                     l246:
  2182     0634  0008               	return
  2183     0635                     __end_of_demoDisplayControl:
  2184                           
  2185                           	psect	text14
  2186     03B4                     __ptext14:	
  2187 ;; *************** function _LCD_Display_ON *****************
  2188 ;; Defined at:
  2189 ;;		line 72 in file "jhd_lcd.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0
  2206 ;;      Totals:         0       0       0       0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 4
  2210 ;; This function calls:
  2211 ;;		_LCD_Command
  2212 ;; This function is called by:
  2213 ;;		_demoDisplayControl
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     03B4                     _LCD_Display_ON:	
  2218                           ;psect for function _LCD_Display_ON
  2219                           
  2220     03B4                     l1215:	
  2221                           ;incstack = 0
  2222                           ; Regs used in _LCD_Display_ON: [wreg+status,2+status,0+pclath+cstack]
  2223                           
  2224                           
  2225                           ;jhd_lcd.c: 73:     _displaycontrol |= 0x04;
  2226     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2227     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2228     03B6  1529               	bsf	__displaycontrol,2
  2229     03B7                     l1217:
  2230                           
  2231                           ;jhd_lcd.c: 74:     LCD_Command(0x08 | _displaycontrol);
  2232     03B7  0829               	movf	__displaycontrol,w
  2233     03B8  3808               	iorlw	8
  2234     03B9  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2235     03BE                     l43:
  2236     03BE  0008               	return
  2237     03BF                     __end_of_LCD_Display_ON:
  2238                           
  2239                           	psect	text15
  2240     03EE                     __ptext15:	
  2241 ;; *************** function _LCD_Display_OFF *****************
  2242 ;; Defined at:
  2243 ;;		line 77 in file "jhd_lcd.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0
  2260 ;;      Totals:         0       0       0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 4
  2264 ;; This function calls:
  2265 ;;		_LCD_Command
  2266 ;; This function is called by:
  2267 ;;		_demoDisplayControl
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     03EE                     _LCD_Display_OFF:	
  2272                           ;psect for function _LCD_Display_OFF
  2273                           
  2274     03EE                     l1219:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _LCD_Display_OFF: [wreg+status,2+status,0+pclath+cstack]
  2277                           
  2278                           
  2279                           ;jhd_lcd.c: 78:     _displaycontrol &= ~0x04;
  2280     03EE  30FB               	movlw	251
  2281     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2282     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2283     03F1  05A9               	andwf	__displaycontrol,f
  2284     03F2                     l1221:
  2285                           
  2286                           ;jhd_lcd.c: 79:     LCD_Command(0x08 | _displaycontrol);
  2287     03F2  0829               	movf	__displaycontrol,w
  2288     03F3  3808               	iorlw	8
  2289     03F4  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2290     03F9                     l46:
  2291     03F9  0008               	return
  2292     03FA                     __end_of_LCD_Display_OFF:
  2293                           
  2294                           	psect	text16
  2295     06F4                     __ptext16:	
  2296 ;; *************** function _demoCursorControl *****************
  2297 ;; Defined at:
  2298 ;;		line 111 in file "newmain.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0
  2314 ;;      Temps:          3       0       0       0       0
  2315 ;;      Totals:         3       0       0       0       0
  2316 ;;Total ram usage:        3 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 5
  2319 ;; This function calls:
  2320 ;;		_LCD_Blink_OFF
  2321 ;;		_LCD_Blink_ON
  2322 ;;		_LCD_Clear
  2323 ;;		_LCD_Cursor_OFF
  2324 ;;		_LCD_Cursor_ON
  2325 ;;		_LCD_Print_String
  2326 ;;		_LCD_SetCursor
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332     06F4                     _demoCursorControl:	
  2333                           ;psect for function _demoCursorControl
  2334                           
  2335     06F4                     l1335:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _demoCursorControl: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2338                           
  2339                           
  2340                           ;newmain.c: 112:     LCD_Clear();
  2341     06F4  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  2342     06F9                     l1337:
  2343                           
  2344                           ;newmain.c: 113:     LCD_SetCursor(0, 0);
  2345     06F9  01F5               	clrf	LCD_SetCursor@row
  2346     06FA  3000               	movlw	0
  2347     06FB  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2348     0700                     l1339:
  2349                           
  2350                           ;newmain.c: 114:     LCD_Print_String("Cursor ON");
  2351     0700  3092               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2352     0701  00F5               	movwf	LCD_Print_String@str
  2353     0702  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2354                           
  2355                           ;newmain.c: 115:     LCD_Cursor_ON();
  2356     0707  120A  118A  23A9  120A  118A  	fcall	_LCD_Cursor_ON
  2357     070C                     l1341:
  2358                           
  2359                           ;newmain.c: 116:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2360     070C  3015               	movlw	21
  2361     070D  00FD               	movwf	??_demoCursorControl+2
  2362     070E  304B               	movlw	75
  2363     070F  00FC               	movwf	??_demoCursorControl+1
  2364     0710  30BE               	movlw	190
  2365     0711  00FB               	movwf	??_demoCursorControl
  2366     0712                     u377:
  2367     0712  0BFB               	decfsz	??_demoCursorControl,f
  2368     0713  2F12               	goto	u377
  2369     0714  0BFC               	decfsz	??_demoCursorControl+1,f
  2370     0715  2F12               	goto	u377
  2371     0716  0BFD               	decfsz	??_demoCursorControl+2,f
  2372     0717  2F12               	goto	u377
  2373     0718  0000               	nop
  2374     0719                     l1343:
  2375                           
  2376                           ;newmain.c: 118:     LCD_SetCursor(0, 1);
  2377     0719  01F5               	clrf	LCD_SetCursor@row
  2378     071A  0AF5               	incf	LCD_SetCursor@row,f
  2379     071B  3000               	movlw	0
  2380     071C  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2381     0721                     l1345:
  2382                           
  2383                           ;newmain.c: 119:     LCD_Print_String("Blink ON");
  2384     0721  30A6               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2385     0722  00F5               	movwf	LCD_Print_String@str
  2386     0723  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2387     0728                     l1347:
  2388                           
  2389                           ;newmain.c: 120:     LCD_Blink_ON();
  2390     0728  120A  118A  239E  120A  118A  	fcall	_LCD_Blink_ON
  2391                           
  2392                           ;newmain.c: 121:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2393     072D  3015               	movlw	21
  2394     072E  00FD               	movwf	??_demoCursorControl+2
  2395     072F  304B               	movlw	75
  2396     0730  00FC               	movwf	??_demoCursorControl+1
  2397     0731  30BE               	movlw	190
  2398     0732  00FB               	movwf	??_demoCursorControl
  2399     0733                     u387:
  2400     0733  0BFB               	decfsz	??_demoCursorControl,f
  2401     0734  2F33               	goto	u387
  2402     0735  0BFC               	decfsz	??_demoCursorControl+1,f
  2403     0736  2F33               	goto	u387
  2404     0737  0BFD               	decfsz	??_demoCursorControl+2,f
  2405     0738  2F33               	goto	u387
  2406     0739  0000               	nop
  2407     073A                     l1349:
  2408                           
  2409                           ;newmain.c: 123:     LCD_Blink_OFF();
  2410     073A  120A  118A  23D6  120A  118A  	fcall	_LCD_Blink_OFF
  2411     073F                     l1351:
  2412                           
  2413                           ;newmain.c: 124:     LCD_Cursor_OFF();
  2414     073F  120A  118A  23E2  120A  118A  	fcall	_LCD_Cursor_OFF
  2415     0744                     l1353:
  2416                           
  2417                           ;newmain.c: 125:     LCD_Clear();
  2418     0744  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  2419     0749                     l1355:
  2420                           
  2421                           ;newmain.c: 126:     LCD_SetCursor(0, 0);
  2422     0749  01F5               	clrf	LCD_SetCursor@row
  2423     074A  3000               	movlw	0
  2424     074B  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2425     0750                     l1357:
  2426                           
  2427                           ;newmain.c: 127:     LCD_Print_String("Cursor/Blink OFF");
  2428     0750  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2429     0751  00F5               	movwf	LCD_Print_String@str
  2430     0752  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2431     0757                     l1359:
  2432                           
  2433                           ;newmain.c: 128:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2434     0757  3029               	movlw	41
  2435     0758  00FD               	movwf	??_demoCursorControl+2
  2436     0759  3096               	movlw	150
  2437     075A  00FC               	movwf	??_demoCursorControl+1
  2438     075B  307F               	movlw	127
  2439     075C  00FB               	movwf	??_demoCursorControl
  2440     075D                     u397:
  2441     075D  0BFB               	decfsz	??_demoCursorControl,f
  2442     075E  2F5D               	goto	u397
  2443     075F  0BFC               	decfsz	??_demoCursorControl+1,f
  2444     0760  2F5D               	goto	u397
  2445     0761  0BFD               	decfsz	??_demoCursorControl+2,f
  2446     0762  2F5D               	goto	u397
  2447     0763                     l243:
  2448     0763  0008               	return
  2449     0764                     __end_of_demoCursorControl:
  2450                           
  2451                           	psect	text17
  2452     03A9                     __ptext17:	
  2453 ;; *************** function _LCD_Cursor_ON *****************
  2454 ;; Defined at:
  2455 ;;		line 82 in file "jhd_lcd.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 4
  2476 ;; This function calls:
  2477 ;;		_LCD_Command
  2478 ;; This function is called by:
  2479 ;;		_demoCursorControl
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483     03A9                     _LCD_Cursor_ON:	
  2484                           ;psect for function _LCD_Cursor_ON
  2485                           
  2486     03A9                     l1223:	
  2487                           ;incstack = 0
  2488                           ; Regs used in _LCD_Cursor_ON: [wreg+status,2+status,0+pclath+cstack]
  2489                           
  2490                           
  2491                           ;jhd_lcd.c: 83:     _displaycontrol |= 0x02;
  2492     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2493     03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2494     03AB  14A9               	bsf	__displaycontrol,1
  2495     03AC                     l1225:
  2496                           
  2497                           ;jhd_lcd.c: 84:     LCD_Command(0x08 | _displaycontrol);
  2498     03AC  0829               	movf	__displaycontrol,w
  2499     03AD  3808               	iorlw	8
  2500     03AE  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2501     03B3                     l49:
  2502     03B3  0008               	return
  2503     03B4                     __end_of_LCD_Cursor_ON:
  2504                           
  2505                           	psect	text18
  2506     03E2                     __ptext18:	
  2507 ;; *************** function _LCD_Cursor_OFF *****************
  2508 ;; Defined at:
  2509 ;;		line 87 in file "jhd_lcd.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 4
  2530 ;; This function calls:
  2531 ;;		_LCD_Command
  2532 ;; This function is called by:
  2533 ;;		_demoCursorControl
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537     03E2                     _LCD_Cursor_OFF:	
  2538                           ;psect for function _LCD_Cursor_OFF
  2539                           
  2540     03E2                     l1227:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _LCD_Cursor_OFF: [wreg+status,2+status,0+pclath+cstack]
  2543                           
  2544                           
  2545                           ;jhd_lcd.c: 88:     _displaycontrol &= ~0x02;
  2546     03E2  30FD               	movlw	253
  2547     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2548     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2549     03E5  05A9               	andwf	__displaycontrol,f
  2550     03E6                     l1229:
  2551                           
  2552                           ;jhd_lcd.c: 89:     LCD_Command(0x08 | _displaycontrol);
  2553     03E6  0829               	movf	__displaycontrol,w
  2554     03E7  3808               	iorlw	8
  2555     03E8  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2556     03ED                     l52:
  2557     03ED  0008               	return
  2558     03EE                     __end_of_LCD_Cursor_OFF:
  2559                           
  2560                           	psect	text19
  2561     039E                     __ptext19:	
  2562 ;; *************** function _LCD_Blink_ON *****************
  2563 ;; Defined at:
  2564 ;;		line 92 in file "jhd_lcd.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0
  2581 ;;      Totals:         0       0       0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 4
  2585 ;; This function calls:
  2586 ;;		_LCD_Command
  2587 ;; This function is called by:
  2588 ;;		_demoCursorControl
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592     039E                     _LCD_Blink_ON:	
  2593                           ;psect for function _LCD_Blink_ON
  2594                           
  2595     039E                     l1231:	
  2596                           ;incstack = 0
  2597                           ; Regs used in _LCD_Blink_ON: [wreg+status,2+status,0+pclath+cstack]
  2598                           
  2599                           
  2600                           ;jhd_lcd.c: 93:     _displaycontrol |= 0x01;
  2601     039E  1283               	bcf	3,5	;RP0=0, select bank0
  2602     039F  1303               	bcf	3,6	;RP1=0, select bank0
  2603     03A0  1429               	bsf	__displaycontrol,0
  2604     03A1                     l1233:
  2605                           
  2606                           ;jhd_lcd.c: 94:     LCD_Command(0x08 | _displaycontrol);
  2607     03A1  0829               	movf	__displaycontrol,w
  2608     03A2  3808               	iorlw	8
  2609     03A3  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2610     03A8                     l55:
  2611     03A8  0008               	return
  2612     03A9                     __end_of_LCD_Blink_ON:
  2613                           
  2614                           	psect	text20
  2615     03D6                     __ptext20:	
  2616 ;; *************** function _LCD_Blink_OFF *****************
  2617 ;; Defined at:
  2618 ;;		line 97 in file "jhd_lcd.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, pclath, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 4
  2639 ;; This function calls:
  2640 ;;		_LCD_Command
  2641 ;; This function is called by:
  2642 ;;		_demoCursorControl
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646     03D6                     _LCD_Blink_OFF:	
  2647                           ;psect for function _LCD_Blink_OFF
  2648                           
  2649     03D6                     l1235:	
  2650                           ;incstack = 0
  2651                           ; Regs used in _LCD_Blink_OFF: [wreg+status,2+status,0+pclath+cstack]
  2652                           
  2653                           
  2654                           ;jhd_lcd.c: 98:     _displaycontrol &= ~0x01;
  2655     03D6  30FE               	movlw	254
  2656     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2657     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2658     03D9  05A9               	andwf	__displaycontrol,f
  2659     03DA                     l1237:
  2660                           
  2661                           ;jhd_lcd.c: 99:     LCD_Command(0x08 | _displaycontrol);
  2662     03DA  0829               	movf	__displaycontrol,w
  2663     03DB  3808               	iorlw	8
  2664     03DC  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2665     03E1                     l58:
  2666     03E1  0008               	return
  2667     03E2                     __end_of_LCD_Blink_OFF:
  2668                           
  2669                           	psect	text21
  2670     0560                     __ptext21:	
  2671 ;; *************** function _demoBasicPrinting *****************
  2672 ;; Defined at:
  2673 ;;		line 75 in file "newmain.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0
  2689 ;;      Temps:          3       0       0       0       0
  2690 ;;      Totals:         3       0       0       0       0
  2691 ;;Total ram usage:        3 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 5
  2694 ;; This function calls:
  2695 ;;		_LCD_Clear
  2696 ;;		_LCD_Print_Char
  2697 ;;		_LCD_Print_String
  2698 ;;		_LCD_SetCursor
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704     0560                     _demoBasicPrinting:	
  2705                           ;psect for function _demoBasicPrinting
  2706                           
  2707     0560                     l1299:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _demoBasicPrinting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2710                           
  2711                           
  2712                           ;newmain.c: 76:     LCD_Clear();
  2713     0560  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  2714     0565                     l1301:
  2715                           
  2716                           ;newmain.c: 77:     LCD_SetCursor(0, 0);
  2717     0565  01F5               	clrf	LCD_SetCursor@row
  2718     0566  3000               	movlw	0
  2719     0567  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2720     056C                     l1303:
  2721                           
  2722                           ;newmain.c: 78:     LCD_Print_String("Hello! Like");
  2723     056C  305A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2724     056D  00F5               	movwf	LCD_Print_String@str
  2725     056E  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2726     0573                     l1305:
  2727                           
  2728                           ;newmain.c: 79:     LCD_SetCursor(0, 1);
  2729     0573  01F5               	clrf	LCD_SetCursor@row
  2730     0574  0AF5               	incf	LCD_SetCursor@row,f
  2731     0575  3000               	movlw	0
  2732     0576  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2733     057B                     l1307:
  2734                           
  2735                           ;newmain.c: 80:     LCD_Print_String("SUBSCRIBE ");
  2736     057B  3072               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2737     057C  00F5               	movwf	LCD_Print_String@str
  2738     057D  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2739                           
  2740                           ;newmain.c: 83:     LCD_Print_Char(0);
  2741     0582  3000               	movlw	0
  2742     0583  120A  118A  2389  120A  118A  	fcall	_LCD_Print_Char
  2743                           
  2744                           ;newmain.c: 84:     LCD_Print_Char(1);
  2745     0588  3001               	movlw	1
  2746     0589  120A  118A  2389  120A  118A  	fcall	_LCD_Print_Char
  2747                           
  2748                           ;newmain.c: 85:     LCD_Print_Char(0);
  2749     058E  3000               	movlw	0
  2750     058F  120A  118A  2389  120A  118A  	fcall	_LCD_Print_Char
  2751     0594                     l1309:
  2752                           
  2753                           ;newmain.c: 87:     _delay((unsigned long)((3000)*(16000000/4000.0)));
  2754     0594  303D               	movlw	61
  2755     0595  00FD               	movwf	??_demoBasicPrinting+2
  2756     0596  30E1               	movlw	225
  2757     0597  00FC               	movwf	??_demoBasicPrinting+1
  2758     0598  303F               	movlw	63
  2759     0599  00FB               	movwf	??_demoBasicPrinting
  2760     059A                     u407:
  2761     059A  0BFB               	decfsz	??_demoBasicPrinting,f
  2762     059B  2D9A               	goto	u407
  2763     059C  0BFC               	decfsz	??_demoBasicPrinting+1,f
  2764     059D  2D9A               	goto	u407
  2765     059E  0BFD               	decfsz	??_demoBasicPrinting+2,f
  2766     059F  2D9A               	goto	u407
  2767     05A0  2DA1               	nop2
  2768     05A1                     l235:
  2769     05A1  0008               	return
  2770     05A2                     __end_of_demoBasicPrinting:
  2771                           
  2772                           	psect	text22
  2773     0635                     __ptext22:	
  2774 ;; *************** function _demoAutoScroll *****************
  2775 ;; Defined at:
  2776 ;;		line 93 in file "newmain.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  i               2    0[BANK0 ] int 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       0       0       0       0
  2791 ;;      Locals:         0       2       0       0       0
  2792 ;;      Temps:          3       0       0       0       0
  2793 ;;      Totals:         3       2       0       0       0
  2794 ;;Total ram usage:        5 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 5
  2797 ;; This function calls:
  2798 ;;		_LCD_AutoScroll_OFF
  2799 ;;		_LCD_AutoScroll_ON
  2800 ;;		_LCD_Clear
  2801 ;;		_LCD_Print_Char
  2802 ;;		_LCD_Print_String
  2803 ;;		_LCD_SetCursor
  2804 ;; This function is called by:
  2805 ;;		_main
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809     0635                     _demoAutoScroll:	
  2810                           ;psect for function _demoAutoScroll
  2811                           
  2812     0635                     l1311:	
  2813                           ;incstack = 0
  2814                           ; Regs used in _demoAutoScroll: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2815                           
  2816                           
  2817                           ;newmain.c: 94:     LCD_Clear();
  2818     0635  120A  118A  2430  120A  118A  	fcall	_LCD_Clear
  2819     063A                     l1313:
  2820                           
  2821                           ;newmain.c: 95:     LCD_SetCursor(0, 0);
  2822     063A  01F5               	clrf	LCD_SetCursor@row
  2823     063B  3000               	movlw	0
  2824     063C  120A  118A  246C  120A  118A  	fcall	_LCD_SetCursor
  2825     0641                     l1315:
  2826                           
  2827                           ;newmain.c: 96:     LCD_Print_String("AutoScroll Test");
  2828     0641  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2829     0642  00F5               	movwf	LCD_Print_String@str
  2830     0643  120A  118A  2450  120A  118A  	fcall	_LCD_Print_String
  2831                           
  2832                           ;newmain.c: 97:     LCD_AutoScroll_ON();
  2833     0648  120A  118A  2393  120A  118A  	fcall	_LCD_AutoScroll_ON
  2834     064D                     l1317:
  2835                           
  2836                           ;newmain.c: 99:     for (int i = 0; i < 10; i++) {
  2837     064D  1283               	bcf	3,5	;RP0=0, select bank0
  2838     064E  1303               	bcf	3,6	;RP1=0, select bank0
  2839     064F  01A4               	clrf	demoAutoScroll@i
  2840     0650  01A5               	clrf	demoAutoScroll@i+1
  2841     0651                     l1323:
  2842                           
  2843                           ;newmain.c: 100:         LCD_Print_Char('.');
  2844     0651  302E               	movlw	46
  2845     0652  120A  118A  2389  120A  118A  	fcall	_LCD_Print_Char
  2846     0657                     l1325:
  2847                           
  2848                           ;newmain.c: 101:         _delay((unsigned long)((500)*(16000000/4000.0)));
  2849     0657  300B               	movlw	11
  2850     0658  00FD               	movwf	??_demoAutoScroll+2
  2851     0659  3026               	movlw	38
  2852     065A  00FC               	movwf	??_demoAutoScroll+1
  2853     065B  305D               	movlw	93
  2854     065C  00FB               	movwf	??_demoAutoScroll
  2855     065D                     u417:
  2856     065D  0BFB               	decfsz	??_demoAutoScroll,f
  2857     065E  2E5D               	goto	u417
  2858     065F  0BFC               	decfsz	??_demoAutoScroll+1,f
  2859     0660  2E5D               	goto	u417
  2860     0661  0BFD               	decfsz	??_demoAutoScroll+2,f
  2861     0662  2E5D               	goto	u417
  2862     0663  2E64               	nop2
  2863     0664                     l1327:
  2864                           
  2865                           ;newmain.c: 102:     }
  2866     0664  3001               	movlw	1
  2867     0665  1283               	bcf	3,5	;RP0=0, select bank0
  2868     0666  1303               	bcf	3,6	;RP1=0, select bank0
  2869     0667  07A4               	addwf	demoAutoScroll@i,f
  2870     0668  1803               	skipnc
  2871     0669  0AA5               	incf	demoAutoScroll@i+1,f
  2872     066A  3000               	movlw	0
  2873     066B  07A5               	addwf	demoAutoScroll@i+1,f
  2874     066C                     l1329:
  2875     066C  0825               	movf	demoAutoScroll@i+1,w
  2876     066D  3A80               	xorlw	128
  2877     066E  00FF               	movwf	btemp+1
  2878     066F  3080               	movlw	128
  2879     0670  027F               	subwf	btemp+1,w
  2880     0671  1D03               	skipz
  2881     0672  2E75               	goto	u195
  2882     0673  300A               	movlw	10
  2883     0674  0224               	subwf	demoAutoScroll@i,w
  2884     0675                     u195:
  2885     0675  1C03               	skipc
  2886     0676  2E78               	goto	u191
  2887     0677  2E79               	goto	u190
  2888     0678                     u191:
  2889     0678  2E51               	goto	l1323
  2890     0679                     u190:
  2891     0679                     l1331:
  2892                           
  2893                           ;newmain.c: 104:     LCD_AutoScroll_OFF();
  2894     0679  120A  118A  23CA  120A  118A  	fcall	_LCD_AutoScroll_OFF
  2895     067E                     l1333:
  2896                           
  2897                           ;newmain.c: 105:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2898     067E  3029               	movlw	41
  2899     067F  00FD               	movwf	??_demoAutoScroll+2
  2900     0680  3096               	movlw	150
  2901     0681  00FC               	movwf	??_demoAutoScroll+1
  2902     0682  307F               	movlw	127
  2903     0683  00FB               	movwf	??_demoAutoScroll
  2904     0684                     u427:
  2905     0684  0BFB               	decfsz	??_demoAutoScroll,f
  2906     0685  2E84               	goto	u427
  2907     0686  0BFC               	decfsz	??_demoAutoScroll+1,f
  2908     0687  2E84               	goto	u427
  2909     0688  0BFD               	decfsz	??_demoAutoScroll+2,f
  2910     0689  2E84               	goto	u427
  2911     068A                     l240:
  2912     068A  0008               	return
  2913     068B                     __end_of_demoAutoScroll:
  2914                           
  2915                           	psect	text23
  2916     046C                     __ptext23:	
  2917 ;; *************** function _LCD_SetCursor *****************
  2918 ;; Defined at:
  2919 ;;		line 139 in file "jhd_lcd.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  col             1    wreg     unsigned char 
  2922 ;;  row             1    5[COMMON] unsigned char 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  col             1   10[COMMON] unsigned char 
  2925 ;;  row_offsets     4    6[COMMON] unsigned char [4]
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         1       0       0       0       0
  2936 ;;      Locals:         5       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0
  2938 ;;      Totals:         6       0       0       0       0
  2939 ;;Total ram usage:        6 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 4
  2942 ;; This function calls:
  2943 ;;		_LCD_Command
  2944 ;; This function is called by:
  2945 ;;		_demoBasicPrinting
  2946 ;;		_demoAutoScroll
  2947 ;;		_demoCursorControl
  2948 ;;		_demoDisplayControl
  2949 ;;		_demoTextDirection
  2950 ;;		_demoScrolling
  2951 ;;		_demoHomeCommand
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955     046C                     _LCD_SetCursor:	
  2956                           ;psect for function _LCD_SetCursor
  2957                           
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _LCD_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2961                           ;LCD_SetCursor@col stored from wreg
  2962     046C  00FA               	movwf	LCD_SetCursor@col
  2963     046D                     l1275:
  2964                           
  2965                           ;jhd_lcd.c: 140:     unsigned char row_offsets[] = {0x80, 0xC0, 0x94, 0xD4};
  2966     046D  1283               	bcf	3,5	;RP0=0, select bank0
  2967     046E  1303               	bcf	3,6	;RP1=0, select bank0
  2968     046F  0823               	movf	LCD_SetCursor@F1080+3,w
  2969     0470  00F9               	movwf	LCD_SetCursor@row_offsets+3
  2970     0471  0822               	movf	LCD_SetCursor@F1080+2,w
  2971     0472  00F8               	movwf	LCD_SetCursor@row_offsets+2
  2972     0473  0821               	movf	LCD_SetCursor@F1080+1,w
  2973     0474  00F7               	movwf	LCD_SetCursor@row_offsets+1
  2974     0475  0820               	movf	LCD_SetCursor@F1080,w
  2975     0476  00F6               	movwf	LCD_SetCursor@row_offsets
  2976                           
  2977                           ;jhd_lcd.c: 142:     if (row >= 4) {
  2978     0477  3004               	movlw	4
  2979     0478  0275               	subwf	LCD_SetCursor@row,w
  2980     0479  1C03               	skipc
  2981     047A  2C7C               	goto	u171
  2982     047B  2C7D               	goto	u170
  2983     047C                     u171:
  2984     047C  2C7E               	goto	l1279
  2985     047D                     u170:
  2986     047D                     l1277:
  2987                           
  2988                           ;jhd_lcd.c: 143:         row = 0;
  2989     047D  01F5               	clrf	LCD_SetCursor@row
  2990     047E                     l1279:
  2991                           
  2992                           ;jhd_lcd.c: 146:     LCD_Command(row_offsets[row] + col);
  2993     047E  0875               	movf	LCD_SetCursor@row,w
  2994     047F  3E76               	addlw	(low (LCD_SetCursor@row_offsets| 0))& (0+255)
  2995     0480  0084               	movwf	4
  2996     0481  087A               	movf	LCD_SetCursor@col,w
  2997     0482  0700               	addwf	0,w
  2998     0483  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  2999     0488                     l87:
  3000     0488  0008               	return
  3001     0489                     __end_of_LCD_SetCursor:
  3002                           
  3003                           	psect	text24
  3004     0450                     __ptext24:	
  3005 ;; *************** function _LCD_Print_String *****************
  3006 ;; Defined at:
  3007 ;;		line 149 in file "jhd_lcd.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  str             1    5[COMMON] PTR const unsigned char 
  3010 ;;		 -> STR_14(5), STR_13(15), STR_12(13), STR_11(12), 
  3011 ;;		 -> STR_10(10), STR_9(10), STR_8(11), STR_7(12), 
  3012 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(16), 
  3013 ;;		 -> STR_2(11), STR_1(12), 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         1       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0
  3028 ;;      Totals:         1       0       0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 4
  3032 ;; This function calls:
  3033 ;;		_LCD_Print_Char
  3034 ;; This function is called by:
  3035 ;;		_demoBasicPrinting
  3036 ;;		_demoAutoScroll
  3037 ;;		_demoCursorControl
  3038 ;;		_demoDisplayControl
  3039 ;;		_demoTextDirection
  3040 ;;		_demoScrolling
  3041 ;;		_demoHomeCommand
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045     0450                     _LCD_Print_String:	
  3046                           ;psect for function _LCD_Print_String
  3047                           
  3048     0450                     l1281:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _LCD_Print_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3051                           
  3052                           
  3053                           ;jhd_lcd.c: 150:     while (*str) {
  3054     0450  2C5F               	goto	l1287
  3055     0451                     l1283:
  3056                           
  3057                           ;jhd_lcd.c: 151:         LCD_Print_Char(*str++);
  3058     0451  0875               	movf	LCD_Print_String@str,w
  3059     0452  0084               	movwf	4
  3060     0453  120A  118A  2003  120A  118A  	fcall	stringdir
  3061     0458  120A  118A  2389  120A  118A  	fcall	_LCD_Print_Char
  3062     045D                     l1285:
  3063     045D  3001               	movlw	1
  3064     045E  07F5               	addwf	LCD_Print_String@str,f
  3065     045F                     l1287:
  3066                           
  3067                           ;jhd_lcd.c: 150:     while (*str) {
  3068     045F  0875               	movf	LCD_Print_String@str,w
  3069     0460  0084               	movwf	4
  3070     0461  120A  118A  2003  120A  118A  	fcall	stringdir
  3071     0466  3A00               	xorlw	0
  3072     0467  1D03               	skipz
  3073     0468  2C6A               	goto	u181
  3074     0469  2C6B               	goto	u180
  3075     046A                     u181:
  3076     046A  2C51               	goto	l1283
  3077     046B                     u180:
  3078     046B                     l93:
  3079     046B  0008               	return
  3080     046C                     __end_of_LCD_Print_String:
  3081                           
  3082                           	psect	text25
  3083     0389                     __ptext25:	
  3084 ;; *************** function _LCD_Print_Char *****************
  3085 ;; Defined at:
  3086 ;;		line 26 in file "jhd_lcd.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  c               1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  c               1    4[COMMON] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       0       0       0       0
  3101 ;;      Locals:         1       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0
  3103 ;;      Totals:         1       0       0       0       0
  3104 ;;Total ram usage:        1 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 3
  3107 ;; This function calls:
  3108 ;;		_LCD_Send
  3109 ;; This function is called by:
  3110 ;;		_LCD_Print_String
  3111 ;;		_demoBasicPrinting
  3112 ;;		_demoAutoScroll
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116     0389                     _LCD_Print_Char:	
  3117                           ;psect for function _LCD_Print_Char
  3118                           
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _LCD_Print_Char: [wreg+status,2+status,0+pclath+cstack]
  3122                           ;LCD_Print_Char@c stored from wreg
  3123     0389  00F4               	movwf	LCD_Print_Char@c
  3124     038A                     l1173:
  3125                           
  3126                           ;jhd_lcd.c: 27:     LCD_Send(c, 0x40);
  3127     038A  3040               	movlw	64
  3128     038B  00F1               	movwf	LCD_Send@mode
  3129     038C  0874               	movf	LCD_Print_Char@c,w
  3130     038D  120A  118A  24AA  120A  118A  	fcall	_LCD_Send
  3131     0392                     l31:
  3132     0392  0008               	return
  3133     0393                     __end_of_LCD_Print_Char:
  3134                           
  3135                           	psect	text26
  3136     0430                     __ptext26:	
  3137 ;; *************** function _LCD_Clear *****************
  3138 ;; Defined at:
  3139 ;;		line 62 in file "jhd_lcd.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0
  3155 ;;      Temps:          2       0       0       0       0
  3156 ;;      Totals:         2       0       0       0       0
  3157 ;;Total ram usage:        2 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 4
  3160 ;; This function calls:
  3161 ;;		_LCD_Command
  3162 ;; This function is called by:
  3163 ;;		_LCD_Init
  3164 ;;		_systemInit
  3165 ;;		_demoBasicPrinting
  3166 ;;		_demoAutoScroll
  3167 ;;		_demoCursorControl
  3168 ;;		_demoDisplayControl
  3169 ;;		_demoTextDirection
  3170 ;;		_demoScrolling
  3171 ;;		_demoHomeCommand
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175     0430                     _LCD_Clear:	
  3176                           ;psect for function _LCD_Clear
  3177                           
  3178     0430                     l1175:	
  3179                           ;incstack = 0
  3180                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3181                           
  3182                           
  3183                           ;jhd_lcd.c: 63:     LCD_Command(0x01);
  3184     0430  3001               	movlw	1
  3185     0431  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  3186     0436                     l1177:
  3187                           
  3188                           ;jhd_lcd.c: 64:     _delay((unsigned long)((2)*(16000000/4000.0)));
  3189     0436  300B               	movlw	11
  3190     0437  00F6               	movwf	??_LCD_Clear+1
  3191     0438  3062               	movlw	98
  3192     0439  00F5               	movwf	??_LCD_Clear
  3193     043A                     u437:
  3194     043A  0BF5               	decfsz	??_LCD_Clear,f
  3195     043B  2C3A               	goto	u437
  3196     043C  0BF6               	decfsz	??_LCD_Clear+1,f
  3197     043D  2C3A               	goto	u437
  3198     043E  0000               	nop
  3199     043F                     l37:
  3200     043F  0008               	return
  3201     0440                     __end_of_LCD_Clear:
  3202                           
  3203                           	psect	text27
  3204     0393                     __ptext27:	
  3205 ;; *************** function _LCD_AutoScroll_ON *****************
  3206 ;; Defined at:
  3207 ;;		line 120 in file "jhd_lcd.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0, pclath, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; Hardware stack levels required when called: 4
  3228 ;; This function calls:
  3229 ;;		_LCD_Command
  3230 ;; This function is called by:
  3231 ;;		_demoAutoScroll
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235     0393                     _LCD_AutoScroll_ON:	
  3236                           ;psect for function _LCD_AutoScroll_ON
  3237                           
  3238     0393                     l1251:	
  3239                           ;incstack = 0
  3240                           ; Regs used in _LCD_AutoScroll_ON: [wreg+status,2+status,0+pclath+cstack]
  3241                           
  3242                           
  3243                           ;jhd_lcd.c: 121:     _displaymode |= 0x01;
  3244     0393  1283               	bcf	3,5	;RP0=0, select bank0
  3245     0394  1303               	bcf	3,6	;RP1=0, select bank0
  3246     0395  1428               	bsf	__displaymode,0
  3247     0396                     l1253:
  3248                           
  3249                           ;jhd_lcd.c: 122:     LCD_Command(0x04 | _displaymode);
  3250     0396  0828               	movf	__displaymode,w
  3251     0397  3804               	iorlw	4
  3252     0398  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  3253     039D                     l73:
  3254     039D  0008               	return
  3255     039E                     __end_of_LCD_AutoScroll_ON:
  3256                           
  3257                           	psect	text28
  3258     03CA                     __ptext28:	
  3259 ;; *************** function _LCD_AutoScroll_OFF *****************
  3260 ;; Defined at:
  3261 ;;		line 125 in file "jhd_lcd.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 4
  3282 ;; This function calls:
  3283 ;;		_LCD_Command
  3284 ;; This function is called by:
  3285 ;;		_demoAutoScroll
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289     03CA                     _LCD_AutoScroll_OFF:	
  3290                           ;psect for function _LCD_AutoScroll_OFF
  3291                           
  3292     03CA                     l1255:	
  3293                           ;incstack = 0
  3294                           ; Regs used in _LCD_AutoScroll_OFF: [wreg+status,2+status,0+pclath+cstack]
  3295                           
  3296                           
  3297                           ;jhd_lcd.c: 126:     _displaymode &= ~0x01;
  3298     03CA  30FE               	movlw	254
  3299     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3300     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3301     03CD  05A8               	andwf	__displaymode,f
  3302     03CE                     l1257:
  3303                           
  3304                           ;jhd_lcd.c: 127:     LCD_Command(0x04 | _displaymode);
  3305     03CE  0828               	movf	__displaymode,w
  3306     03CF  3804               	iorlw	4
  3307     03D0  120A  118A  237F  120A  118A  	fcall	_LCD_Command
  3308     03D5                     l76:
  3309     03D5  0008               	return
  3310     03D6                     __end_of_LCD_AutoScroll_OFF:
  3311                           
  3312                           	psect	text29
  3313     037F                     __ptext29:	
  3314 ;; *************** function _LCD_Command *****************
  3315 ;; Defined at:
  3316 ;;		line 22 in file "jhd_lcd.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  cmd             1    wreg     unsigned char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  cmd             1    4[COMMON] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0, pclath, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3330 ;;      Params:         0       0       0       0       0
  3331 ;;      Locals:         1       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0
  3333 ;;      Totals:         1       0       0       0       0
  3334 ;;Total ram usage:        1 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 3
  3337 ;; This function calls:
  3338 ;;		_LCD_Send
  3339 ;; This function is called by:
  3340 ;;		_LCD_Init
  3341 ;;		_LCD_Clear
  3342 ;;		_LCD_Home
  3343 ;;		_LCD_Display_ON
  3344 ;;		_LCD_Display_OFF
  3345 ;;		_LCD_Cursor_ON
  3346 ;;		_LCD_Cursor_OFF
  3347 ;;		_LCD_Blink_ON
  3348 ;;		_LCD_Blink_OFF
  3349 ;;		_LCD_ScrollDisplayLeft
  3350 ;;		_LCD_ScrollDisplayRight
  3351 ;;		_LCD_LeftToRight
  3352 ;;		_LCD_RightToLeft
  3353 ;;		_LCD_AutoScroll_ON
  3354 ;;		_LCD_AutoScroll_OFF
  3355 ;;		_LCD_CreateCustomChar
  3356 ;;		_LCD_SetCursor
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360     037F                     _LCD_Command:	
  3361                           ;psect for function _LCD_Command
  3362                           
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  3366                           ;LCD_Command@cmd stored from wreg
  3367     037F  00F4               	movwf	LCD_Command@cmd
  3368     0380                     l1171:
  3369                           
  3370                           ;jhd_lcd.c: 23:     LCD_Send(cmd, 0x80);
  3371     0380  3080               	movlw	128
  3372     0381  00F1               	movwf	LCD_Send@mode
  3373     0382  0874               	movf	LCD_Command@cmd,w
  3374     0383  120A  118A  24AA  120A  118A  	fcall	_LCD_Send
  3375     0388                     l28:
  3376     0388  0008               	return
  3377     0389                     __end_of_LCD_Command:
  3378                           
  3379                           	psect	text30
  3380     04AA                     __ptext30:	
  3381 ;; *************** function _LCD_Send *****************
  3382 ;; Defined at:
  3383 ;;		line 13 in file "jhd_lcd.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  data            1    wreg     unsigned char 
  3386 ;;  mode            1    1[COMMON] unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  data            1    3[COMMON] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, pclath, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         1       0       0       0       0
  3399 ;;      Locals:         1       0       0       0       0
  3400 ;;      Temps:          1       0       0       0       0
  3401 ;;      Totals:         3       0       0       0       0
  3402 ;;Total ram usage:        3 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 2
  3405 ;; This function calls:
  3406 ;;		_I2C_Master_Start
  3407 ;;		_I2C_Master_Stop
  3408 ;;		_I2C_Master_Write
  3409 ;; This function is called by:
  3410 ;;		_LCD_Command
  3411 ;;		_LCD_Print_Char
  3412 ;;		_LCD_CreateCustomChar
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416     04AA                     _LCD_Send:	
  3417                           ;psect for function _LCD_Send
  3418                           
  3419                           
  3420                           ;incstack = 0
  3421                           ; Regs used in _LCD_Send: [wreg+status,2+status,0+pclath+cstack]
  3422                           ;LCD_Send@data stored from wreg
  3423     04AA  00F3               	movwf	LCD_Send@data
  3424     04AB                     l1167:
  3425                           
  3426                           ;jhd_lcd.c: 14:     I2C_Master_Start();
  3427     04AB  120A  118A  236D  120A  118A  	fcall	_I2C_Master_Start
  3428                           
  3429                           ;jhd_lcd.c: 15:     I2C_Master_Write(_lcd_addr);
  3430     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3431     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3432     04B2  082A               	movf	__lcd_addr,w
  3433     04B3  120A  118A  2420  120A  118A  	fcall	_I2C_Master_Write
  3434                           
  3435                           ;jhd_lcd.c: 16:     I2C_Master_Write(mode);
  3436     04B8  0871               	movf	LCD_Send@mode,w
  3437     04B9  120A  118A  2420  120A  118A  	fcall	_I2C_Master_Write
  3438                           
  3439                           ;jhd_lcd.c: 17:     I2C_Master_Write(data);
  3440     04BE  0873               	movf	LCD_Send@data,w
  3441     04BF  120A  118A  2420  120A  118A  	fcall	_I2C_Master_Write
  3442                           
  3443                           ;jhd_lcd.c: 18:     I2C_Master_Stop();
  3444     04C4  120A  118A  2376  120A  118A  	fcall	_I2C_Master_Stop
  3445     04C9                     l1169:
  3446                           
  3447                           ;jhd_lcd.c: 19:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  3448     04C9  3042               	movlw	66
  3449     04CA  00F2               	movwf	??_LCD_Send
  3450     04CB                     u447:
  3451     04CB  0BF2               	decfsz	??_LCD_Send,f
  3452     04CC  2CCB               	goto	u447
  3453     04CD  0000               	nop
  3454     04CE                     l25:
  3455     04CE  0008               	return
  3456     04CF                     __end_of_LCD_Send:
  3457                           
  3458                           	psect	text31
  3459     0420                     __ptext31:	
  3460 ;; *************** function _I2C_Master_Write *****************
  3461 ;; Defined at:
  3462 ;;		line 45 in file "i2c.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  data            1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  data            1    0[COMMON] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      unsigned char 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         1       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0
  3479 ;;      Totals:         1       0       0       0       0
  3480 ;;Total ram usage:        1 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 1
  3483 ;; This function calls:
  3484 ;;		_I2C_Master_Wait
  3485 ;; This function is called by:
  3486 ;;		_LCD_Send
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490     0420                     _I2C_Master_Write:	
  3491                           ;psect for function _I2C_Master_Write
  3492                           
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3496                           ;I2C_Master_Write@data stored from wreg
  3497     0420  00F0               	movwf	I2C_Master_Write@data
  3498     0421                     l1159:
  3499                           
  3500                           ;i2c.c: 46:     I2C_Master_Wait();
  3501     0421  120A  118A  2406  120A  118A  	fcall	_I2C_Master_Wait
  3502     0426                     l1161:
  3503                           
  3504                           ;i2c.c: 47:     SSPBUF = data;
  3505     0426  0870               	movf	I2C_Master_Write@data,w
  3506     0427  1283               	bcf	3,5	;RP0=0, select bank0
  3507     0428  1303               	bcf	3,6	;RP1=0, select bank0
  3508     0429  0093               	movwf	19	;volatile
  3509     042A                     l150:	
  3510                           ;i2c.c: 48:     while(!SSPIF);
  3511                           
  3512     042A  1D8C               	btfss	12,3	;volatile
  3513     042B  2C2D               	goto	u141
  3514     042C  2C2E               	goto	u140
  3515     042D                     u141:
  3516     042D  2C2A               	goto	l150
  3517     042E                     u140:
  3518     042E                     l152:
  3519                           
  3520                           ;i2c.c: 49:     SSPIF = 0;
  3521     042E  118C               	bcf	12,3	;volatile
  3522     042F                     l153:	
  3523                           ;i2c.c: 50:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  3524                           
  3525     042F  0008               	return
  3526     0430                     __end_of_I2C_Master_Write:
  3527                           
  3528                           	psect	text32
  3529     0376                     __ptext32:	
  3530 ;; *************** function _I2C_Master_Stop *****************
  3531 ;; Defined at:
  3532 ;;		line 28 in file "i2c.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 1
  3553 ;; This function calls:
  3554 ;;		_I2C_Master_Wait
  3555 ;; This function is called by:
  3556 ;;		_LCD_Send
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     0376                     _I2C_Master_Stop:	
  3561                           ;psect for function _I2C_Master_Stop
  3562                           
  3563     0376                     l1163:	
  3564                           ;incstack = 0
  3565                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3566                           
  3567                           
  3568                           ;i2c.c: 29:     I2C_Master_Wait();
  3569     0376  120A  118A  2406  120A  118A  	fcall	_I2C_Master_Wait
  3570     037B                     l1165:
  3571                           
  3572                           ;i2c.c: 30:     PEN = 1;
  3573     037B  1683               	bsf	3,5	;RP0=1, select bank1
  3574     037C  1303               	bcf	3,6	;RP1=0, select bank1
  3575     037D  1511               	bsf	17,2	;volatile
  3576     037E                     l141:
  3577     037E  0008               	return
  3578     037F                     __end_of_I2C_Master_Stop:
  3579                           
  3580                           	psect	text33
  3581     036D                     __ptext33:	
  3582 ;; *************** function _I2C_Master_Start *****************
  3583 ;; Defined at:
  3584 ;;		line 18 in file "i2c.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 1
  3605 ;; This function calls:
  3606 ;;		_I2C_Master_Wait
  3607 ;; This function is called by:
  3608 ;;		_LCD_Send
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612     036D                     _I2C_Master_Start:	
  3613                           ;psect for function _I2C_Master_Start
  3614                           
  3615     036D                     l1155:	
  3616                           ;incstack = 0
  3617                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3618                           
  3619                           
  3620                           ;i2c.c: 19:     I2C_Master_Wait();
  3621     036D  120A  118A  2406  120A  118A  	fcall	_I2C_Master_Wait
  3622     0372                     l1157:
  3623                           
  3624                           ;i2c.c: 20:     SEN = 1;
  3625     0372  1683               	bsf	3,5	;RP0=1, select bank1
  3626     0373  1303               	bcf	3,6	;RP1=0, select bank1
  3627     0374  1411               	bsf	17,0	;volatile
  3628     0375                     l135:
  3629     0375  0008               	return
  3630     0376                     __end_of_I2C_Master_Start:
  3631                           
  3632                           	psect	text34
  3633     0406                     __ptext34:	
  3634 ;; *************** function _I2C_Master_Wait *****************
  3635 ;; Defined at:
  3636 ;;		line 14 in file "i2c.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3650 ;;      Params:         0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0
  3653 ;;      Totals:         0       0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_I2C_Master_Start
  3660 ;;		_I2C_Master_Stop
  3661 ;;		_I2C_Master_Write
  3662 ;;		_I2C_Master_RepeatedStart
  3663 ;;		_I2C_ACK
  3664 ;;		_I2C_NACK
  3665 ;;		_I2C_Read_Byte
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669     0406                     _I2C_Master_Wait:	
  3670                           ;psect for function _I2C_Master_Wait
  3671                           
  3672     0406                     l1151:	
  3673                           ;incstack = 0
  3674                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3675                           
  3676     0406                     l129:	
  3677                           ;i2c.c: 15:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3678                           
  3679     0406  1683               	bsf	3,5	;RP0=1, select bank1
  3680     0407  1303               	bcf	3,6	;RP1=0, select bank1
  3681     0408  1914               	btfsc	20,2	;volatile
  3682     0409  2C0B               	goto	u121
  3683     040A  2C0C               	goto	u120
  3684     040B                     u121:
  3685     040B  2C06               	goto	l129
  3686     040C                     u120:
  3687     040C                     l1153:
  3688     040C  0811               	movf	17,w	;volatile
  3689     040D  391F               	andlw	31
  3690     040E  1D03               	btfss	3,2
  3691     040F  2C11               	goto	u131
  3692     0410  2C12               	goto	u130
  3693     0411                     u131:
  3694     0411  2C06               	goto	l129
  3695     0412                     u130:
  3696     0412                     l132:
  3697     0412  0008               	return
  3698     0413                     __end_of_I2C_Master_Wait:
  3699     0002                     ___latbits      equ	2
  3700     007E                     btemp           set	126	;btemp
  3701     007E                     wtemp0          set	126

Data Sizes:
    Strings     158
    Constant    16
    Data        4
    BSS         3
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_CreateCustomChar@charmap	PTR unsigned char  size(1) Largest target is 8
		 -> LAUGHING_SMILEY(CODE[8]), SMILEY(CODE[8]), 

    LCD_Print_String@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[12]), STR_10(CODE[10]), STR_11(CODE[12]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[5]), STR_2(CODE[11]), STR_3(CODE[16]), 
		 -> STR_4(CODE[10]), STR_5(CODE[9]), STR_6(CODE[17]), STR_7(CODE[12]), 
		 -> STR_8(CODE[11]), STR_9(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_demoAutoScroll
    _main->_demoBasicPrinting
    _main->_demoCursorControl
    _main->_demoDisplayControl
    _main->_demoHomeCommand
    _main->_demoScrolling
    _main->_demoTextDirection
    _systemInit->_LCD_Init
    _LCD_Init->_LCD_Clear
    _LCD_CreateCustomChar->_LCD_Command
    _demoTextDirection->_LCD_SetCursor
    _LCD_RightToLeft->_LCD_Command
    _LCD_LeftToRight->_LCD_Command
    _demoScrolling->_LCD_SetCursor
    _LCD_ScrollDisplayRight->_LCD_Command
    _LCD_ScrollDisplayLeft->_LCD_Command
    _demoHomeCommand->_LCD_SetCursor
    _LCD_Home->_LCD_Command
    _demoDisplayControl->_LCD_SetCursor
    _LCD_Display_ON->_LCD_Command
    _LCD_Display_OFF->_LCD_Command
    _demoCursorControl->_LCD_SetCursor
    _LCD_Cursor_ON->_LCD_Command
    _LCD_Cursor_OFF->_LCD_Command
    _LCD_Blink_ON->_LCD_Command
    _LCD_Blink_OFF->_LCD_Command
    _demoBasicPrinting->_LCD_SetCursor
    _demoAutoScroll->_LCD_SetCursor
    _LCD_SetCursor->_LCD_Command
    _LCD_Print_String->_LCD_Print_Char
    _LCD_Print_Char->_LCD_Send
    _LCD_Clear->_LCD_Command
    _LCD_AutoScroll_ON->_LCD_Command
    _LCD_AutoScroll_OFF->_LCD_Command
    _LCD_Command->_LCD_Send
    _LCD_Send->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_demoScrolling

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6043
                     _demoAutoScroll
                  _demoBasicPrinting
                  _demoCursorControl
                 _demoDisplayControl
                    _demoHomeCommand
                      _demoScrolling
                  _demoTextDirection
                         _systemInit
 ---------------------------------------------------------------------------------
 (1) _systemInit                                           0     0      0     683
                    _I2C_Master_Init
                          _LCD_Clear
               _LCD_CreateCustomChar
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     253
                                              7 COMMON     4     4      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_CreateCustomChar                                 4     3      1     318
                                              5 COMMON     4     3      1
                        _LCD_Command
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _demoTextDirection                                    3     3      0     730
                                             11 COMMON     3     3      0
                          _LCD_Clear
                    _LCD_LeftToRight
                   _LCD_Print_String
                    _LCD_RightToLeft
                      _LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _LCD_RightToLeft                                      0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_LeftToRight                                      0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _demoScrolling                                        7     7      0     822
                                             11 COMMON     3     3      0
                                              0 BANK0      4     4      0
                          _LCD_Clear
                   _LCD_Print_String
              _LCD_ScrollDisplayLeft
             _LCD_ScrollDisplayRight
                      _LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _LCD_ScrollDisplayRight                               0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_ScrollDisplayLeft                                0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _demoHomeCommand                                      3     3      0     618
                                             11 COMMON     3     3      0
                          _LCD_Clear
                           _LCD_Home
                   _LCD_Print_String
                      _LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _LCD_Home                                             2     2      0     112
                                              5 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _demoDisplayControl                                   3     3      0     730
                                             11 COMMON     3     3      0
                          _LCD_Clear
                    _LCD_Display_OFF
                     _LCD_Display_ON
                   _LCD_Print_String
                      _LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _LCD_Display_ON                                       0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Display_OFF                                      0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _demoCursorControl                                    3     3      0     954
                                             11 COMMON     3     3      0
                      _LCD_Blink_OFF
                       _LCD_Blink_ON
                          _LCD_Clear
                     _LCD_Cursor_OFF
                      _LCD_Cursor_ON
                   _LCD_Print_String
                      _LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _LCD_Cursor_ON                                        0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Cursor_OFF                                       0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Blink_ON                                         0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Blink_OFF                                        0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _demoBasicPrinting                                    3     3      0     618
                                             11 COMMON     3     3      0
                          _LCD_Clear
                     _LCD_Print_Char
                   _LCD_Print_String
                      _LCD_SetCursor
 ---------------------------------------------------------------------------------
 (1) _demoAutoScroll                                       5     5      0     888
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                 _LCD_AutoScroll_OFF
                  _LCD_AutoScroll_ON
                          _LCD_Clear
                     _LCD_Print_Char
                   _LCD_Print_String
                      _LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCursor                                        6     5      1     223
                                              5 COMMON     6     5      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Print_String                                     1     0      1     171
                                              5 COMMON     1     0      1
                     _LCD_Print_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Print_Char                                       1     1      0     112
                                              4 COMMON     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            2     2      0     112
                                              5 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_AutoScroll_ON                                    0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_AutoScroll_OFF                                   0     0      0     112
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     112
                                              4 COMMON     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (4) _LCD_Send                                             3     2      1      83
                                              1 COMMON     3     2      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _demoAutoScroll
     _LCD_AutoScroll_OFF
       _LCD_Command
         _LCD_Send
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     _LCD_AutoScroll_ON
       _LCD_Command
     _LCD_Clear
       _LCD_Command
     _LCD_Print_Char
       _LCD_Send
     _LCD_Print_String
       _LCD_Print_Char
     _LCD_SetCursor
       _LCD_Command
   _demoBasicPrinting
     _LCD_Clear
     _LCD_Print_Char
     _LCD_Print_String
     _LCD_SetCursor
   _demoCursorControl
     _LCD_Blink_OFF
       _LCD_Command
     _LCD_Blink_ON
       _LCD_Command
     _LCD_Clear
     _LCD_Cursor_OFF
       _LCD_Command
     _LCD_Cursor_ON
       _LCD_Command
     _LCD_Print_String
     _LCD_SetCursor
   _demoDisplayControl
     _LCD_Clear
     _LCD_Display_OFF
       _LCD_Command
     _LCD_Display_ON
       _LCD_Command
     _LCD_Print_String
     _LCD_SetCursor
   _demoHomeCommand
     _LCD_Clear
     _LCD_Home
       _LCD_Command
     _LCD_Print_String
     _LCD_SetCursor
   _demoScrolling
     _LCD_Clear
     _LCD_Print_String
     _LCD_ScrollDisplayLeft
       _LCD_Command
     _LCD_ScrollDisplayRight
       _LCD_Command
     _LCD_SetCursor
   _demoTextDirection
     _LCD_Clear
     _LCD_LeftToRight
       _LCD_Command
     _LCD_Print_String
     _LCD_RightToLeft
       _LCD_Command
     _LCD_SetCursor
   _systemInit
     _I2C_Master_Init
     _LCD_Clear
     _LCD_CreateCustomChar
       _LCD_Command
       _LCD_Send
     _LCD_Init
       _LCD_Clear
       _LCD_Command

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      4      14     17.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      28      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 19 08:45:21 2024

                 _LCD_Cursor_ON 03A9                  _LCD_Cursor_OFF 03E2              __end_of_systemInit 04AA  
                             pc 0002                    ?_LCD_Command 0070                              l31 0392  
                            l40 044F                              l25 04CE                              l34 06F3  
                            l43 03BE                              l28 0388                              l52 03ED  
                            l37 043F                              l61 0365                              l46 03F9  
                            l70 0405                              l55 03A8                              l64 036C  
                            l73 039D                              l49 03B3                              l81 04FA  
                            l58 03E1                              l67 03C9                              l76 03D5  
                            l93 046B                              l87 0488                   ?_LCD_Blink_ON 0070  
                            fsr 0004                   _LCD_SetCursor 046C          __end_of_LCD_Display_ON 03BF  
                           l132 0412                             l141 037E                             l150 042A  
                           l126 041F                             l135 0375                             l152 042E  
                           l240 068A                             l232 04A9                             l129 0406  
                           l153 042F                             l226 0500                             l235 05A1  
                           l243 0763                             l246 0634                             l256 07E0  
                           l249 05EA                             l259 055F                             l941 0413  
                           l943 0417                             l945 041B                             l947 041D  
                           l949 041E                             u120 040C                             u200 07A2  
                           u121 040B                             u201 07A1                             u130 0412  
                           u210 07E0                             u131 0411                             u211 07DF  
                           u140 042E                             u141 042D                             u205 079E  
                           u215 07DC                             u160 04FA                             u161 04F9  
                           u170 047D                             u171 047C                             u307 0781  
                           u155 04D5                             u180 046B                             u181 046A  
                           u317 07BF                             u237 069B                             u190 0679  
                           u191 0678                             u407 059A                             u327 0541  
                           u247 06AC                             _PEN 048A                             u417 065D  
                           u337 0559                             u257 06BB                             u427 0684  
                           u195 0675                             u347 044A                             u267 06CA  
                           u437 043A                             u357 0609                             u277 06DC  
                           u447 04CB                             u367 062E                             u287 05C0  
                           u377 0712                             u297 05E4                             u387 0733  
                           _SEN 0488                             u397 075D                  ?_LCD_Blink_OFF 0070  
                           fsr0 0004                             indf 0000         __end_of_LCD_Display_OFF 03FA  
                          l1201 06CF                            l1211 0440                            l1203 06D8  
                          l1301 0565                            l1221 03F2                            l1213 0446  
                          l1205 06E1                            l1151 0406                            l1311 0635  
                          l1303 056C                            l1231 039E                            l1223 03A9  
                          l1215 03B4                            l1207 06E6                            l1153 040C  
                          l1161 0426                            l1313 063A                            l1305 0573  
                          l1233 03A1                            l1225 03AC                            l1217 03B7  
                          l1241 0366                            l1401 0770                            l1209 06EF  
                          l1155 036D                            l1163 0376                            l1171 0380  
                          l1251 0393                            l1331 0679                            l1323 0651  
                          l1315 0641                            l1307 057B                            l1235 03D6  
                          l1227 03E2                            l1219 03EE                            l1411 0788  
                          l1403 0777                            l1243 03BF                            l1157 0372  
                          l1165 037B                            l1253 0396                            l1173 038A  
                          l1333 067E                            l1325 0657                            l1317 064D  
                          l1309 0594                            l1237 03DA                            l1229 03E6  
                          l1341 070C                            l1421 07AE                            l1413 078D  
                          l1245 03C2                            l1261 04D2                            l1181 0690  
                          l1159 0421                            l1167 04AB                            l1255 03CA  
                          l1175 0430                            l1327 0664                            l1351 073F  
                          l1343 0719                            l1335 06F4                            l1239 035F  
                          l1431 07C6                            l1423 07B5                            l1415 0795  
                          l1247 03FA                            l1271 04F2                            l1263 04E2  
                          l1191 06A8                            l1183 0691                            l1169 04C9  
                          l1257 03CE                            l1177 0436                            l1281 0450  
                          l1329 066C                            l1353 0744                            l1345 0721  
                          l1337 06F9                            l1361 05EB                            l1441 0534  
                          l1433 07CB                            l1417 07A2                            l1409 077B  
                          l1249 03FE                            l1273 04F4                            l1193 06B1  
                          l1185 0693                            l1283 0451                            l1275 046D  
                          l1355 0749                            l1347 0728                            l1339 0700  
                          l1371 0615                            l1363 05F0                            l1443 053B  
                          l1435 07D3                            l1419 07A7                            l1259 04D0  
                          l1195 06B7                            l1187 0695                            l1179 068C  
                          l1291 048E                            l1285 045D                            l1277 047D  
                          l1357 0750                            l1349 073A                            l1373 061A  
                          l1365 05F7                            l1445 0547                            l1437 0527  
                          l1429 07B9                            l1381 05A7                            l1269 04E3  
                          l1197 06C0                            l1189 06A2                            l1293 0494  
                          l1287 045F                            l1279 047E                            l1359 0757  
                          l1375 0621                            l1367 0603                            l1447 054C  
                          l1439 052C                            l1391 05D2                            l1383 05AE  
                          l1199 06C6                            l1295 0499                            l1377 0628  
                          l1369 0610                            l1449 0553                            l1393 05D9  
                          l1385 05BA                            l1297 04A1                            l1289 0489  
                          l1481 050A                            l1299 0560                            l1395 05DE  
                          l1387 05C6                            l1379 05A2                            l1483 050F  
                          l1397 0764                            l1389 05CB                            l1485 0514  
                          l1477 04FB                            l1399 0769                            l1487 051E  
                          l1479 0505                            STR_1 0062                            STR_2 007A  
                          STR_3 002A                            STR_4 009A                            STR_5 00AE  
                          STR_6 0019                            STR_7 0056                            STR_8 0085  
                          STR_9 00A4                LCD_Init@lcd_addr 007A                            _RCEN 048B  
                          _RSEN 0489                            _main 04FB                            btemp 007E  
                          start 0000          __end_of_LCD_Cursor_OFF 03EE   __end_of_LCD_ScrollDisplayLeft 0366  
                ?_LCD_Cursor_ON 0070         __end_of_LCD_LeftToRight 03CA         ?_LCD_ScrollDisplayRight 0070  
                _LCD_Print_Char 0389                  ??_LCD_Blink_ON 0075                __end_of_LCD_Home 0450  
              __end_of_LCD_Init 06F4                __end_of_LCD_Send 04CF                ?_I2C_Master_Init 0070  
              ?_I2C_Master_Wait 0070                  ?_LCD_SetCursor 0075                ?_I2C_Master_Stop 0070  
                demoScrolling@i 0024                           ?_main 0070                           _ACKEN 048C  
                         _ACKDT 048D                 ?_LCD_Display_ON 0070                           STR_10 0090  
                         STR_11 006E                           STR_12 0049                           STR_13 003A  
                         STR_14 0044                 _LCD_RightToLeft 03FA                           _SSPIF 0063  
   LCD_CreateCustomChar@charmap 0075                           pclath 000A                           status 0003  
                         wtemp0 007E  __end_of_LCD_ScrollDisplayRight 036D                 ?_LCD_Cursor_OFF 0070  
               __initialization 07E1          __end_of_LCD_Print_Char 0393               ??_demoHomeCommand 007B  
                  __end_of_main 0527                    LCD_Send@data 0073                    LCD_Send@mode 0071  
               ??_LCD_Blink_OFF 0075                          ??_main 007E               __end_of_LCD_Clear 0440  
             ?_I2C_Master_Start 0070               ?_I2C_Master_Write 0070           __end_of_demoScrolling 07E1  
            ??_I2C_Master_Start 0070              ??_I2C_Master_Write 0070                ?_LCD_Display_OFF 0070  
                  __displaymode 0028                          _SMILEY 0011                          _SSPADD 0093  
                        _TRISC3 043B                          _TRISC4 043C                          _SSPCON 0014  
                        _SSPBUF 0013                  _demoAutoScroll 0635                 ??_LCD_Cursor_ON 0075  
               ?_LCD_Print_Char 0070                ?_LCD_LeftToRight 0070                 ??_LCD_SetCursor 0076  
       __end_of_LCD_RightToLeft 0406          __end_of_demoAutoScroll 068B            __end_of_LCD_Blink_ON 03A9  
       __end_of__initialization 07FC                       ?_LCD_Home 0070                       ?_LCD_Init 0070  
                     ?_LCD_Send 0071                    __initialized 002D                  __pcstackCOMMON 0070  
                  __pidataBANK0 035B               _demoTextDirection 05A2              ?_demoTextDirection 0070  
                    __pbssBANK0 002B                 ?_demoAutoScroll 0070                _LCD_Print_String 0450  
                    ??_LCD_Home 0075                      ??_LCD_Init 0077                      ??_LCD_Send 0072  
           ??_demoTextDirection 007B      __end_of_LCD_AutoScroll_OFF 03D6                      __pmaintext 04FB  
              ??_LCD_Display_ON 0075                ?_LCD_RightToLeft 0070                         _ACKSTAT 048E  
           LCD_Print_String@str 0075       __end_of_demoTextDirection 05EB              demoScrolling@i_212 0026  
                       _SSPCON2 0091                         _SSPSTAT 0094                      __stringtab 0003  
               _demoHomeCommand 0527                 LCD_Print_Char@c 0074                ??_LCD_Cursor_OFF 0075  
         _LCD_ScrollDisplayLeft 035F        LCD_SetCursor@row_offsets 0076    __end_of_LCD_CreateCustomChar 04FB  
                       __ptext1 0489                         __ptext2 068B                         __ptext3 04CF  
                       __ptext4 0413                         __ptext5 05A2                         __ptext6 03FA  
                       __ptext7 03BF                         __ptext8 0764                         __ptext9 0366  
               __displaycontrol 0029                       _LCD_Clear 0430            end_of_initialization 07FC  
              LCD_SetCursor@col 007A                LCD_SetCursor@row 0075                  LCD_Command@cmd 0074  
              ??_LCD_Print_Char 0074      __end_of_demoDisplayControl 0635                    _LCD_Blink_ON 039E  
         __end_of_LCD_Blink_OFF 03E2           LCD_CreateCustomChar@i 0078         __end_of_demoHomeCommand 0560  
                    ?_LCD_Clear 0070                 _LAUGHING_SMILEY 0009                  __end_of_SMILEY 0019  
         __end_of_LCD_Cursor_ON 03B4          ?_LCD_ScrollDisplayLeft 0070                   ??_LCD_Command 0074  
         __end_of_LCD_SetCursor 0489        __end_of_LCD_Print_String 046C             start_initialization 07E1  
              ??_demoAutoScroll 007B                      _systemInit 0489        ??_LCD_ScrollDisplayRight 0075  
             ??_I2C_Master_Init 0070               ??_I2C_Master_Wait 0070               ??_I2C_Master_Stop 0070  
          _LCD_CreateCustomChar 04CF                     __pdataBANK0 0020              _LCD_AutoScroll_OFF 03CA  
       __end_of_LAUGHING_SMILEY 0011             __end_of_LCD_Command 0389                       ___latbits 0002  
              ?_demoHomeCommand 0070                   __pcstackBANK0 0024                     ??_LCD_Clear 0075  
           ?_LCD_AutoScroll_OFF 0070                   _demoScrolling 0764                       __lcd_addr 002A  
         ?_LCD_CreateCustomChar 0075                       __currline 002B                       __pnvBANK0 0028  
              _I2C_Master_Start 036D                _I2C_Master_Write 0420            ??_LCD_AutoScroll_OFF 0075  
                     __numlines 002C               ??_LCD_Display_OFF 0075            I2C_Master_Write@data 0070  
                     __pstrings 0003                     ?_systemInit 0070                  ?_demoScrolling 0070  
             ??_LCD_LeftToRight 0075                        _LCD_Home 0440                        _LCD_Init 068B  
                      _LCD_Send 04AA               _demoCursorControl 06F4                     _LCD_Command 037F  
            ?_demoCursorControl 0070                     __stringbase 0008              _demoDisplayControl 05EB  
           ??_demoCursorControl 007B             ?_demoDisplayControl 0070              LCD_SetCursor@F1080 0020  
        ??_LCD_CreateCustomChar 0076         ??_LCD_ScrollDisplayLeft 0075       __end_of_demoCursorControl 0764  
          ??_demoDisplayControl 007B               _LCD_AutoScroll_ON 0393    LCD_CreateCustomChar@location 0077  
        _LCD_ScrollDisplayRight 0366              ?_LCD_AutoScroll_ON 0070              __end_of__stringtab 0009  
             ?_LCD_Print_String 0075                 ??_demoScrolling 007B                 _I2C_Master_Init 0413  
            ??_LCD_Print_String 0076                 _I2C_Master_Wait 0406                 demoAutoScroll@i 0024  
               _I2C_Master_Stop 0376             ??_LCD_AutoScroll_ON 0075                        __ptext10 035F  
                      __ptext11 0527                        __ptext20 03D6                        __ptext12 0440  
                      __ptext21 0560                        __ptext13 05EB                        __ptext30 04AA  
                      __ptext22 0635                        __ptext14 03B4                        __ptext31 0420  
                      __ptext23 046C                        __ptext15 03EE                        __ptext32 0376  
                      __ptext24 0450                        __ptext16 06F4                        __ptext33 036D  
                      __ptext25 0389                        __ptext17 03A9                        __ptext34 0406  
                      __ptext26 0430                        __ptext18 03E2                        __ptext27 0393  
                      __ptext19 039E                        __ptext28 03CA                        __ptext29 037F  
             ??_LCD_RightToLeft 0075               _demoBasicPrinting 0560              ?_demoBasicPrinting 0070  
     __end_of_LCD_AutoScroll_ON 039E             ??_demoBasicPrinting 007B        __end_of_I2C_Master_Start 0376  
      __end_of_I2C_Master_Write 0430       __end_of_demoBasicPrinting 05A2                 _LCD_Display_OFF 03EE  
                     stringcode 0003         __end_of_I2C_Master_Init 0420         __end_of_I2C_Master_Wait 0413  
       __end_of_I2C_Master_Stop 037F                 _LCD_LeftToRight 03BF                  _LCD_Display_ON 03B4  
                 _LCD_Blink_OFF 03D6                    ??_systemInit 007B                        stringdir 0003  
                      stringtab 0003  
