

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Nov 17 11:22:58 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2,group=2
    62                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2,group=2
    63                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2,group=2
    64                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    65                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text6_split_1,local,class=CODE,space=0,merge=1,delta=2
    74                           	dabs	1,0x7E,2
    75     0000                     
    76                           ; Generated 12/10/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F877A Definitions
   108                           ; 
   109                           ; SFR Addresses
   110     0004                     fsr             equ	4
   111     0004                     fsr0            equ	4
   112     0000                     indf            equ	0
   113     0000                     indf0           equ	0
   114     0002                     pc              equ	2
   115     0002                     pcl             equ	2
   116     000A                     pclath          equ	10
   117     0003                     status          equ	3
   118     0000                     INDF            equ	0	;# 
   119     0001                     TMR0            equ	1	;# 
   120     0002                     PCL             equ	2	;# 
   121     0003                     STATUS          equ	3	;# 
   122     0004                     FSR             equ	4	;# 
   123     0005                     PORTA           equ	5	;# 
   124     0006                     PORTB           equ	6	;# 
   125     0007                     PORTC           equ	7	;# 
   126     0008                     PORTD           equ	8	;# 
   127     0009                     PORTE           equ	9	;# 
   128     000A                     PCLATH          equ	10	;# 
   129     000B                     INTCON          equ	11	;# 
   130     000C                     PIR1            equ	12	;# 
   131     000D                     PIR2            equ	13	;# 
   132     000E                     TMR1            equ	14	;# 
   133     000E                     TMR1L           equ	14	;# 
   134     000F                     TMR1H           equ	15	;# 
   135     0010                     T1CON           equ	16	;# 
   136     0011                     TMR2            equ	17	;# 
   137     0012                     T2CON           equ	18	;# 
   138     0013                     SSPBUF          equ	19	;# 
   139     0014                     SSPCON          equ	20	;# 
   140     0015                     CCPR1           equ	21	;# 
   141     0015                     CCPR1L          equ	21	;# 
   142     0016                     CCPR1H          equ	22	;# 
   143     0017                     CCP1CON         equ	23	;# 
   144     0018                     RCSTA           equ	24	;# 
   145     0019                     TXREG           equ	25	;# 
   146     001A                     RCREG           equ	26	;# 
   147     001B                     CCPR2           equ	27	;# 
   148     001B                     CCPR2L          equ	27	;# 
   149     001C                     CCPR2H          equ	28	;# 
   150     001D                     CCP2CON         equ	29	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISA           equ	133	;# 
   155     0086                     TRISB           equ	134	;# 
   156     0087                     TRISC           equ	135	;# 
   157     0088                     TRISD           equ	136	;# 
   158     0089                     TRISE           equ	137	;# 
   159     008C                     PIE1            equ	140	;# 
   160     008D                     PIE2            equ	141	;# 
   161     008E                     PCON            equ	142	;# 
   162     0091                     SSPCON2         equ	145	;# 
   163     0092                     PR2             equ	146	;# 
   164     0093                     SSPADD          equ	147	;# 
   165     0094                     SSPSTAT         equ	148	;# 
   166     0098                     TXSTA           equ	152	;# 
   167     0099                     SPBRG           equ	153	;# 
   168     009C                     CMCON           equ	156	;# 
   169     009D                     CVRCON          equ	157	;# 
   170     009E                     ADRESL          equ	158	;# 
   171     009F                     ADCON1          equ	159	;# 
   172     010C                     EEDATA          equ	268	;# 
   173     010D                     EEADR           equ	269	;# 
   174     010E                     EEDATH          equ	270	;# 
   175     010F                     EEADRH          equ	271	;# 
   176     018C                     EECON1          equ	396	;# 
   177     018D                     EECON2          equ	397	;# 
   178     0000                     INDF            equ	0	;# 
   179     0001                     TMR0            equ	1	;# 
   180     0002                     PCL             equ	2	;# 
   181     0003                     STATUS          equ	3	;# 
   182     0004                     FSR             equ	4	;# 
   183     0005                     PORTA           equ	5	;# 
   184     0006                     PORTB           equ	6	;# 
   185     0007                     PORTC           equ	7	;# 
   186     0008                     PORTD           equ	8	;# 
   187     0009                     PORTE           equ	9	;# 
   188     000A                     PCLATH          equ	10	;# 
   189     000B                     INTCON          equ	11	;# 
   190     000C                     PIR1            equ	12	;# 
   191     000D                     PIR2            equ	13	;# 
   192     000E                     TMR1            equ	14	;# 
   193     000E                     TMR1L           equ	14	;# 
   194     000F                     TMR1H           equ	15	;# 
   195     0010                     T1CON           equ	16	;# 
   196     0011                     TMR2            equ	17	;# 
   197     0012                     T2CON           equ	18	;# 
   198     0013                     SSPBUF          equ	19	;# 
   199     0014                     SSPCON          equ	20	;# 
   200     0015                     CCPR1           equ	21	;# 
   201     0015                     CCPR1L          equ	21	;# 
   202     0016                     CCPR1H          equ	22	;# 
   203     0017                     CCP1CON         equ	23	;# 
   204     0018                     RCSTA           equ	24	;# 
   205     0019                     TXREG           equ	25	;# 
   206     001A                     RCREG           equ	26	;# 
   207     001B                     CCPR2           equ	27	;# 
   208     001B                     CCPR2L          equ	27	;# 
   209     001C                     CCPR2H          equ	28	;# 
   210     001D                     CCP2CON         equ	29	;# 
   211     001E                     ADRESH          equ	30	;# 
   212     001F                     ADCON0          equ	31	;# 
   213     0081                     OPTION_REG      equ	129	;# 
   214     0085                     TRISA           equ	133	;# 
   215     0086                     TRISB           equ	134	;# 
   216     0087                     TRISC           equ	135	;# 
   217     0088                     TRISD           equ	136	;# 
   218     0089                     TRISE           equ	137	;# 
   219     008C                     PIE1            equ	140	;# 
   220     008D                     PIE2            equ	141	;# 
   221     008E                     PCON            equ	142	;# 
   222     0091                     SSPCON2         equ	145	;# 
   223     0092                     PR2             equ	146	;# 
   224     0093                     SSPADD          equ	147	;# 
   225     0094                     SSPSTAT         equ	148	;# 
   226     0098                     TXSTA           equ	152	;# 
   227     0099                     SPBRG           equ	153	;# 
   228     009C                     CMCON           equ	156	;# 
   229     009D                     CVRCON          equ	157	;# 
   230     009E                     ADRESL          equ	158	;# 
   231     009F                     ADCON1          equ	159	;# 
   232     010C                     EEDATA          equ	268	;# 
   233     010D                     EEADR           equ	269	;# 
   234     010E                     EEDATH          equ	270	;# 
   235     010F                     EEADRH          equ	271	;# 
   236     018C                     EECON1          equ	396	;# 
   237     018D                     EECON2          equ	397	;# 
   238     0000                     INDF            equ	0	;# 
   239     0001                     TMR0            equ	1	;# 
   240     0002                     PCL             equ	2	;# 
   241     0003                     STATUS          equ	3	;# 
   242     0004                     FSR             equ	4	;# 
   243     0005                     PORTA           equ	5	;# 
   244     0006                     PORTB           equ	6	;# 
   245     0007                     PORTC           equ	7	;# 
   246     0008                     PORTD           equ	8	;# 
   247     0009                     PORTE           equ	9	;# 
   248     000A                     PCLATH          equ	10	;# 
   249     000B                     INTCON          equ	11	;# 
   250     000C                     PIR1            equ	12	;# 
   251     000D                     PIR2            equ	13	;# 
   252     000E                     TMR1            equ	14	;# 
   253     000E                     TMR1L           equ	14	;# 
   254     000F                     TMR1H           equ	15	;# 
   255     0010                     T1CON           equ	16	;# 
   256     0011                     TMR2            equ	17	;# 
   257     0012                     T2CON           equ	18	;# 
   258     0013                     SSPBUF          equ	19	;# 
   259     0014                     SSPCON          equ	20	;# 
   260     0015                     CCPR1           equ	21	;# 
   261     0015                     CCPR1L          equ	21	;# 
   262     0016                     CCPR1H          equ	22	;# 
   263     0017                     CCP1CON         equ	23	;# 
   264     0018                     RCSTA           equ	24	;# 
   265     0019                     TXREG           equ	25	;# 
   266     001A                     RCREG           equ	26	;# 
   267     001B                     CCPR2           equ	27	;# 
   268     001B                     CCPR2L          equ	27	;# 
   269     001C                     CCPR2H          equ	28	;# 
   270     001D                     CCP2CON         equ	29	;# 
   271     001E                     ADRESH          equ	30	;# 
   272     001F                     ADCON0          equ	31	;# 
   273     0081                     OPTION_REG      equ	129	;# 
   274     0085                     TRISA           equ	133	;# 
   275     0086                     TRISB           equ	134	;# 
   276     0087                     TRISC           equ	135	;# 
   277     0088                     TRISD           equ	136	;# 
   278     0089                     TRISE           equ	137	;# 
   279     008C                     PIE1            equ	140	;# 
   280     008D                     PIE2            equ	141	;# 
   281     008E                     PCON            equ	142	;# 
   282     0091                     SSPCON2         equ	145	;# 
   283     0092                     PR2             equ	146	;# 
   284     0093                     SSPADD          equ	147	;# 
   285     0094                     SSPSTAT         equ	148	;# 
   286     0098                     TXSTA           equ	152	;# 
   287     0099                     SPBRG           equ	153	;# 
   288     009C                     CMCON           equ	156	;# 
   289     009D                     CVRCON          equ	157	;# 
   290     009E                     ADRESL          equ	158	;# 
   291     009F                     ADCON1          equ	159	;# 
   292     010C                     EEDATA          equ	268	;# 
   293     010D                     EEADR           equ	269	;# 
   294     010E                     EEDATH          equ	270	;# 
   295     010F                     EEADRH          equ	271	;# 
   296     018C                     EECON1          equ	396	;# 
   297     018D                     EECON2          equ	397	;# 
   298     0000                     INDF            equ	0	;# 
   299     0001                     TMR0            equ	1	;# 
   300     0002                     PCL             equ	2	;# 
   301     0003                     STATUS          equ	3	;# 
   302     0004                     FSR             equ	4	;# 
   303     0005                     PORTA           equ	5	;# 
   304     0006                     PORTB           equ	6	;# 
   305     0007                     PORTC           equ	7	;# 
   306     0008                     PORTD           equ	8	;# 
   307     0009                     PORTE           equ	9	;# 
   308     000A                     PCLATH          equ	10	;# 
   309     000B                     INTCON          equ	11	;# 
   310     000C                     PIR1            equ	12	;# 
   311     000D                     PIR2            equ	13	;# 
   312     000E                     TMR1            equ	14	;# 
   313     000E                     TMR1L           equ	14	;# 
   314     000F                     TMR1H           equ	15	;# 
   315     0010                     T1CON           equ	16	;# 
   316     0011                     TMR2            equ	17	;# 
   317     0012                     T2CON           equ	18	;# 
   318     0013                     SSPBUF          equ	19	;# 
   319     0014                     SSPCON          equ	20	;# 
   320     0015                     CCPR1           equ	21	;# 
   321     0015                     CCPR1L          equ	21	;# 
   322     0016                     CCPR1H          equ	22	;# 
   323     0017                     CCP1CON         equ	23	;# 
   324     0018                     RCSTA           equ	24	;# 
   325     0019                     TXREG           equ	25	;# 
   326     001A                     RCREG           equ	26	;# 
   327     001B                     CCPR2           equ	27	;# 
   328     001B                     CCPR2L          equ	27	;# 
   329     001C                     CCPR2H          equ	28	;# 
   330     001D                     CCP2CON         equ	29	;# 
   331     001E                     ADRESH          equ	30	;# 
   332     001F                     ADCON0          equ	31	;# 
   333     0081                     OPTION_REG      equ	129	;# 
   334     0085                     TRISA           equ	133	;# 
   335     0086                     TRISB           equ	134	;# 
   336     0087                     TRISC           equ	135	;# 
   337     0088                     TRISD           equ	136	;# 
   338     0089                     TRISE           equ	137	;# 
   339     008C                     PIE1            equ	140	;# 
   340     008D                     PIE2            equ	141	;# 
   341     008E                     PCON            equ	142	;# 
   342     0091                     SSPCON2         equ	145	;# 
   343     0092                     PR2             equ	146	;# 
   344     0093                     SSPADD          equ	147	;# 
   345     0094                     SSPSTAT         equ	148	;# 
   346     0098                     TXSTA           equ	152	;# 
   347     0099                     SPBRG           equ	153	;# 
   348     009C                     CMCON           equ	156	;# 
   349     009D                     CVRCON          equ	157	;# 
   350     009E                     ADRESL          equ	158	;# 
   351     009F                     ADCON1          equ	159	;# 
   352     010C                     EEDATA          equ	268	;# 
   353     010D                     EEADR           equ	269	;# 
   354     010E                     EEDATH          equ	270	;# 
   355     010F                     EEADRH          equ	271	;# 
   356     018C                     EECON1          equ	396	;# 
   357     018D                     EECON2          equ	397	;# 
   358     0000                     INDF            equ	0	;# 
   359     0001                     TMR0            equ	1	;# 
   360     0002                     PCL             equ	2	;# 
   361     0003                     STATUS          equ	3	;# 
   362     0004                     FSR             equ	4	;# 
   363     0005                     PORTA           equ	5	;# 
   364     0006                     PORTB           equ	6	;# 
   365     0007                     PORTC           equ	7	;# 
   366     0008                     PORTD           equ	8	;# 
   367     0009                     PORTE           equ	9	;# 
   368     000A                     PCLATH          equ	10	;# 
   369     000B                     INTCON          equ	11	;# 
   370     000C                     PIR1            equ	12	;# 
   371     000D                     PIR2            equ	13	;# 
   372     000E                     TMR1            equ	14	;# 
   373     000E                     TMR1L           equ	14	;# 
   374     000F                     TMR1H           equ	15	;# 
   375     0010                     T1CON           equ	16	;# 
   376     0011                     TMR2            equ	17	;# 
   377     0012                     T2CON           equ	18	;# 
   378     0013                     SSPBUF          equ	19	;# 
   379     0014                     SSPCON          equ	20	;# 
   380     0015                     CCPR1           equ	21	;# 
   381     0015                     CCPR1L          equ	21	;# 
   382     0016                     CCPR1H          equ	22	;# 
   383     0017                     CCP1CON         equ	23	;# 
   384     0018                     RCSTA           equ	24	;# 
   385     0019                     TXREG           equ	25	;# 
   386     001A                     RCREG           equ	26	;# 
   387     001B                     CCPR2           equ	27	;# 
   388     001B                     CCPR2L          equ	27	;# 
   389     001C                     CCPR2H          equ	28	;# 
   390     001D                     CCP2CON         equ	29	;# 
   391     001E                     ADRESH          equ	30	;# 
   392     001F                     ADCON0          equ	31	;# 
   393     0081                     OPTION_REG      equ	129	;# 
   394     0085                     TRISA           equ	133	;# 
   395     0086                     TRISB           equ	134	;# 
   396     0087                     TRISC           equ	135	;# 
   397     0088                     TRISD           equ	136	;# 
   398     0089                     TRISE           equ	137	;# 
   399     008C                     PIE1            equ	140	;# 
   400     008D                     PIE2            equ	141	;# 
   401     008E                     PCON            equ	142	;# 
   402     0091                     SSPCON2         equ	145	;# 
   403     0092                     PR2             equ	146	;# 
   404     0093                     SSPADD          equ	147	;# 
   405     0094                     SSPSTAT         equ	148	;# 
   406     0098                     TXSTA           equ	152	;# 
   407     0099                     SPBRG           equ	153	;# 
   408     009C                     CMCON           equ	156	;# 
   409     009D                     CVRCON          equ	157	;# 
   410     009E                     ADRESL          equ	158	;# 
   411     009F                     ADCON1          equ	159	;# 
   412     010C                     EEDATA          equ	268	;# 
   413     010D                     EEADR           equ	269	;# 
   414     010E                     EEDATH          equ	270	;# 
   415     010F                     EEADRH          equ	271	;# 
   416     018C                     EECON1          equ	396	;# 
   417     018D                     EECON2          equ	397	;# 
   418     0006                     _PORTB          set	6
   419     0007                     _PORTCbits      set	7
   420     0013                     _SSPBUF         set	19
   421     0014                     _SSPCON         set	20
   422     002A                     _RA2            set	42
   423     0029                     _RA1            set	41
   424     0028                     _RA0            set	40
   425     0063                     _SSPIF          set	99
   426     009F                     _ADCON1         set	159
   427     0085                     _TRISAbits      set	133
   428     0086                     _TRISB          set	134
   429     0087                     _TRISCbits      set	135
   430     0093                     _SSPADD         set	147
   431     0094                     _SSPSTAT        set	148
   432     0091                     _SSPCON2        set	145
   433     048B                     _RCEN           set	1163
   434     048E                     _ACKSTAT        set	1166
   435     048C                     _ACKEN          set	1164
   436     048D                     _ACKDT          set	1165
   437     048A                     _PEN            set	1162
   438     0489                     _RSEN           set	1161
   439     0488                     _SEN            set	1160
   440     043C                     _TRISC4         set	1084
   441     043B                     _TRISC3         set	1083
   442                           
   443                           	psect	strings
   444     1000                     __pstrings:
   445     1000                     stringtab:
   446     1000                     __stringtab:
   447                           
   448                           ;	String table - string pointers are 1 byte each
   449     1000  1BFF               	btfsc	btemp+1,7
   450     1001  280A               	ljmp	stringcode
   451     1002  1383               	bcf	3,7
   452     1003  187F               	btfsc	btemp+1,0
   453     1004  1783               	bsf	3,7
   454     1005  0800               	movf	0,w
   455     1006  0A84               	incf	4,f
   456     1007  1903               	skipnz
   457     1008  0AFF               	incf	btemp+1,f
   458     1009  0008               	return
   459     100A                     stringcode:
   460     100A                     stringdir:
   461     100A  3010               	movlw	high stringdir
   462     100B  008A               	movwf	10
   463     100C  0804               	movf	4,w
   464     100D  0A84               	incf	4,f
   465     100E  0782               	addwf	2,f
   466     100F                     __stringbase:
   467     100F  3400               	retlw	0
   468     1010                     __end_of__stringtab:
   469     1010                     STR_4:
   470     1010  344D               	retlw	77	;'M'
   471     1011  346F               	retlw	111	;'o'
   472     1012  3464               	retlw	100	;'d'
   473     1013  3465               	retlw	101	;'e'
   474     1014  343A               	retlw	58	;':'
   475     1015  3420               	retlw	32	;' '
   476     1016  3443               	retlw	67	;'C'
   477     1017  346F               	retlw	111	;'o'
   478     1018  346D               	retlw	109	;'m'
   479     1019  3470               	retlw	112	;'p'
   480     101A  3461               	retlw	97	;'a'
   481     101B  3472               	retlw	114	;'r'
   482     101C  3461               	retlw	97	;'a'
   483     101D  3474               	retlw	116	;'t'
   484     101E  346F               	retlw	111	;'o'
   485     101F  3472               	retlw	114	;'r'
   486     1020  3400               	retlw	0
   487     1021                     STR_5:
   488     1021  344D               	retlw	77	;'M'
   489     1022  346F               	retlw	111	;'o'
   490     1023  3464               	retlw	100	;'d'
   491     1024  3465               	retlw	101	;'e'
   492     1025  343A               	retlw	58	;':'
   493     1026  3420               	retlw	32	;' '
   494     1027  3449               	retlw	73	;'I'
   495     1028  346E               	retlw	110	;'n'
   496     1029  3474               	retlw	116	;'t'
   497     102A  3465               	retlw	101	;'e'
   498     102B  3472               	retlw	114	;'r'
   499     102C  3472               	retlw	114	;'r'
   500     102D  3475               	retlw	117	;'u'
   501     102E  3470               	retlw	112	;'p'
   502     102F  3474               	retlw	116	;'t'
   503     1030  3400               	retlw	0
   504     1031                     STR_3:
   505     1031  344D               	retlw	77	;'M'
   506     1032  346F               	retlw	111	;'o'
   507     1033  3464               	retlw	100	;'d'
   508     1034  3465               	retlw	101	;'e'
   509     1035  343A               	retlw	58	;':'
   510     1036  3420               	retlw	32	;' '
   511     1037  344F               	retlw	79	;'O'
   512     1038  346E               	retlw	110	;'n'
   513     1039  3465               	retlw	101	;'e'
   514     103A  342D               	retlw	45	;'-'
   515     103B  3453               	retlw	83	;'S'
   516     103C  3468               	retlw	104	;'h'
   517     103D  346F               	retlw	111	;'o'
   518     103E  3474               	retlw	116	;'t'
   519     103F  3400               	retlw	0
   520     1040                     STR_1:
   521     1040  344D               	retlw	77	;'M'
   522     1041  3443               	retlw	67	;'C'
   523     1042  3450               	retlw	80	;'P'
   524     1043  3439               	retlw	57	;'9'
   525     1044  3438               	retlw	56	;'8'
   526     1045  3430               	retlw	48	;'0'
   527     1046  3430               	retlw	48	;'0'
   528     1047  3420               	retlw	32	;' '
   529     1048  3452               	retlw	82	;'R'
   530     1049  3465               	retlw	101	;'e'
   531     104A  3461               	retlw	97	;'a'
   532     104B  3464               	retlw	100	;'d'
   533     104C  3479               	retlw	121	;'y'
   534     104D  3400               	retlw	0
   535     104E                     STR_2:
   536     104E  3454               	retlw	84	;'T'
   537     104F  3465               	retlw	101	;'e'
   538     1050  346D               	retlw	109	;'m'
   539     1051  3470               	retlw	112	;'p'
   540     1052  343A               	retlw	58	;':'
   541     1053  3420               	retlw	32	;' '
   542     1054  3425               	retlw	37	;'%'
   543     1055  342E               	retlw	46	;'.'
   544     1056  3432               	retlw	50	;'2'
   545     1057  3466               	retlw	102	;'f'
   546     1058  3420               	retlw	32	;' '
   547     1059  3443               	retlw	67	;'C'
   548     105A  3400               	retlw	0
   549     105B                     STR_6:
   550     105B  3469               	retlw	105	;'i'
   551     105C  346E               	retlw	110	;'n'
   552     105D  3466               	retlw	102	;'f'
   553     105E  3400               	retlw	0
   554     105F                     STR_9:
   555     105F  346E               	retlw	110	;'n'
   556     1060  3461               	retlw	97	;'a'
   557     1061  346E               	retlw	110	;'n'
   558     1062  3400               	retlw	0
   559     105F                     STR_10          equ	STR_9
   560     105F                     STR_11          equ	STR_9
   561     105B                     STR_7           equ	STR_6
   562     105B                     STR_8           equ	STR_6
   563                           
   564                           	psect	cinit
   565     07E2                     start_initialization:	
   566                           ; #config settings
   567                           
   568     07E2                     __initialization:
   569                           
   570                           ; Clear objects allocated to BANK1
   571     07E2  1383               	bcf	3,7	;select IRP bank0
   572     07E3  30E4               	movlw	low __pbssBANK1
   573     07E4  0084               	movwf	4
   574     07E5  30ED               	movlw	low (__pbssBANK1+9)
   575     07E6  160A  158A  22E3  120A  118A  	fcall	clear_ram0
   576                           
   577                           ; Clear objects allocated to BANK3
   578     07EB  1783               	bsf	3,7	;select IRP bank2
   579     07EC  3090               	movlw	low __pbssBANK3
   580     07ED  0084               	movwf	4
   581     07EE  30A8               	movlw	low (__pbssBANK3+24)
   582     07EF  160A  158A  22E3  120A  118A  	fcall	clear_ram0
   583                           
   584                           ; Clear objects allocated to BANK2
   585     07F4  3010               	movlw	low __pbssBANK2
   586     07F5  0084               	movwf	4
   587     07F6  3060               	movlw	low (__pbssBANK2+80)
   588     07F7  160A  158A  22E3  120A  118A  	fcall	clear_ram0
   589     07FC                     end_of_initialization:	
   590                           ;End of C runtime variable initialization code
   591                           
   592     07FC                     __end_of__initialization:
   593     07FC  0183               	clrf	3
   594     07FD  160A  118A  298F   	ljmp	_main	;jump to C main() function
   595                           
   596                           	psect	bssBANK1
   597     00E4                     __pbssBANK1:
   598     00E4                     _nout:
   599     00E4                     	ds	2
   600     00E6                     _width:
   601     00E6                     	ds	2
   602     00E8                     _prec:
   603     00E8                     	ds	2
   604     00EA                     _errno:
   605     00EA                     	ds	2
   606     00EC                     _flags:
   607     00EC                     	ds	1
   608                           
   609                           	psect	bssBANK3
   610     0190                     __pbssBANK3:
   611     0190                     floorf@F521:
   612     0190                     	ds	4
   613     0194                     ___fpclassifyf@F465:
   614     0194                     	ds	4
   615     0198                     _displayString:
   616     0198                     	ds	16
   617                           
   618                           	psect	bssBANK2
   619     0110                     __pbssBANK2:
   620     0110                     _dbuf:
   621     0110                     	ds	80
   622                           
   623                           	psect	clrtext
   624     1AE3                     clear_ram0:	
   625                           ;	Called with FSR containing the base address, and
   626                           ;	W with the last address+1
   627                           
   628     1AE3  0064               	clrwdt	;clear the watchdog before getting into this loop
   629     1AE4                     clrloop0:
   630     1AE4  0180               	clrf	0	;clear RAM location pointed to by FSR
   631     1AE5  0A84               	incf	4,f	;increment pointer
   632     1AE6  0604               	xorwf	4,w	;XOR with final address
   633     1AE7  1903               	btfsc	3,2	;have we reached the end yet?
   634     1AE8  3400               	retlw	0	;all done for this memory range, return
   635     1AE9  0604               	xorwf	4,w	;XOR again to restore value
   636     1AEA  2AE4               	goto	clrloop0	;do the next byte
   637                           
   638                           	psect	cstackBANK1
   639     00A0                     __pcstackBANK1:
   640     00A0                     efgtoa@ne:
   641                           
   642                           ; 2 bytes @ 0x0
   643     00A0                     	ds	2
   644     00A2                     efgtoa@p:
   645                           
   646                           ; 2 bytes @ 0x2
   647     00A2                     	ds	2
   648     00A4                     efgtoa@t:
   649                           
   650                           ; 2 bytes @ 0x4
   651     00A4                     	ds	2
   652     00A6                     _efgtoa$899:
   653                           
   654                           ; 2 bytes @ 0x6
   655     00A6                     	ds	2
   656     00A8                     efgtoa@pp:
   657                           
   658                           ; 1 bytes @ 0x8
   659     00A8                     	ds	1
   660     00A9                     efgtoa@mode:
   661                           
   662                           ; 1 bytes @ 0x9
   663     00A9                     	ds	1
   664     00AA                     efgtoa@nmode:
   665                           
   666                           ; 1 bytes @ 0xA
   667     00AA                     	ds	1
   668     00AB                     efgtoa@d:
   669                           
   670                           ; 2 bytes @ 0xB
   671     00AB                     	ds	2
   672     00AD                     efgtoa@m:
   673                           
   674                           ; 2 bytes @ 0xD
   675     00AD                     	ds	2
   676     00AF                     efgtoa@e:
   677                           
   678                           ; 2 bytes @ 0xF
   679     00AF                     	ds	2
   680     00B1                     efgtoa@w:
   681                           
   682                           ; 2 bytes @ 0x11
   683     00B1                     	ds	2
   684     00B3                     efgtoa@ou:
   685                           
   686                           ; 4 bytes @ 0x13
   687     00B3                     	ds	4
   688     00B7                     efgtoa@i:
   689                           
   690                           ; 2 bytes @ 0x17
   691     00B7                     	ds	2
   692     00B9                     efgtoa@h:
   693                           
   694                           ; 4 bytes @ 0x19
   695     00B9                     	ds	4
   696     00BD                     efgtoa@l:
   697                           
   698                           ; 4 bytes @ 0x1D
   699     00BD                     	ds	4
   700     00C1                     efgtoa@sign:
   701                           
   702                           ; 1 bytes @ 0x21
   703     00C1                     	ds	1
   704     00C2                     efgtoa@n:
   705                           
   706                           ; 2 bytes @ 0x22
   707     00C2                     	ds	2
   708     00C4                     efgtoa@g:
   709                           
   710                           ; 4 bytes @ 0x24
   711     00C4                     	ds	4
   712     00C8                     efgtoa@u:
   713                           
   714                           ; 4 bytes @ 0x28
   715     00C8                     	ds	4
   716     00CC                     ?_vfpfcnvrt:
   717     00CC                     vfpfcnvrt@fp:	
   718                           ; 2 bytes @ 0x2C
   719                           
   720                           
   721                           ; 2 bytes @ 0x2C
   722     00CC                     	ds	2
   723     00CE                     vfpfcnvrt@fmt:
   724                           
   725                           ; 1 bytes @ 0x2E
   726     00CE                     	ds	1
   727     00CF                     vfpfcnvrt@ap:
   728                           
   729                           ; 1 bytes @ 0x2F
   730     00CF                     	ds	1
   731     00D0                     ?_vfprintf:
   732     00D0                     vfprintf@fp:	
   733                           ; 2 bytes @ 0x30
   734                           
   735                           
   736                           ; 2 bytes @ 0x30
   737     00D0                     	ds	2
   738     00D2                     vfprintf@fmt:
   739                           
   740                           ; 1 bytes @ 0x32
   741     00D2                     	ds	1
   742     00D3                     vfprintf@ap:
   743                           
   744                           ; 1 bytes @ 0x33
   745     00D3                     	ds	1
   746     00D4                     ?_snprintf:
   747     00D4                     snprintf@s:	
   748                           ; 2 bytes @ 0x34
   749                           
   750                           
   751                           ; 1 bytes @ 0x34
   752     00D4                     	ds	1
   753     00D5                     snprintf@n:
   754                           
   755                           ; 2 bytes @ 0x35
   756     00D5                     	ds	2
   757     00D7                     snprintf@fmt:
   758                           
   759                           ; 1 bytes @ 0x37
   760     00D7                     	ds	5
   761     00DC                     main@temp:
   762                           
   763                           ; 4 bytes @ 0x3C
   764     00DC                     	ds	4
   765     00E0                     _main$1258:
   766                           
   767                           ; 4 bytes @ 0x40
   768     00E0                     	ds	4
   769                           
   770                           	psect	cstackCOMMON
   771     0070                     __pcstackCOMMON:
   772     0070                     ?_sendCommandToLCD:
   773     0070                     ?_clearLCD:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_MCP9800_WriteConfig:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ?_initializeHardware:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_handleButtonPress:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ?_configureOneShotMode:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ?_configureComparatorMode:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ?_configureInterruptMode:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ?_strcpy:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ?_memcpy:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_putch:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     ?_I2C_Master_Init:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0070                     ?_I2C_Master_Wait:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ?_I2C_Master_Start:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     ?_I2C_Master_RepeatedStart:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ?_I2C_Master_Stop:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ?_I2C_ACK:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ?_I2C_NACK:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     ?_I2C_Master_Write:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0070                     ?_I2C_Read_Byte:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     ?_initializeLCD:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0070                     ?_sendDataToLCD:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0070                     ?_moveCursorToPosition:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     ?_MCP9800_Init:	
   840                           ; 1 bytes @ 0x0
   841                           
   842     0070                     ?_MCP9800_ReadConfig:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0070                     ?_MCP9800_SetConfigOneShot:	
   846                           ; 1 bytes @ 0x0
   847                           
   848     0070                     ?_MCP9800_SetConfigResolution:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     0070                     ?_MCP9800_SetConfigFaultQueue:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0070                     ?_MCP9800_SetConfigAlertPolarity:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0070                     ?_MCP9800_SetConfigCompIntMode:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0070                     ?_MCP9800_SetConfigShutdown:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0070                     ?_configureContinuousConversionMode:	
   864                           ; 1 bytes @ 0x0
   865                           
   866     0070                     ?___fleq:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0070                     ?__Umul8_16:	
   870                           ; 1 bit 
   871                           
   872     0070                     ?_fputc:	
   873                           ; 2 bytes @ 0x0
   874                           
   875     0070                     ?_strlen:	
   876                           ; 2 bytes @ 0x0
   877                           
   878     0070                     ?___fpclassifyf:	
   879                           ; 2 bytes @ 0x0
   880                           
   881     0070                     ?_main:	
   882                           ; 2 bytes @ 0x0
   883                           
   884     0070                     ?___wmul:	
   885                           ; 2 bytes @ 0x0
   886                           
   887     0070                     ?_labs:	
   888                           ; 2 bytes @ 0x0
   889                           
   890     0070                     ?___flneg:	
   891                           ; 4 bytes @ 0x0
   892                           
   893     0070                     ?___fladd:	
   894                           ; 4 bytes @ 0x0
   895                           
   896     0070                     ?___fldiv:	
   897                           ; 4 bytes @ 0x0
   898                           
   899     0070                     ?___xxtofl:	
   900                           ; 4 bytes @ 0x0
   901                           
   902     0070                     I2C_Master_Write@data:	
   903                           ; 4 bytes @ 0x0
   904                           
   905     0070                     __Umul8_16@multiplicand:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     memcpy@d1:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     putch@c:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     strcpy@dest:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     strlen@s:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ___wmul@multiplier:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     fputc@c:	
   924                           ; 2 bytes @ 0x0
   925                           
   926     0070                     ___fleq@ff1:	
   927                           ; 2 bytes @ 0x0
   928                           
   929     0070                     ___flneg@f1:	
   930                           ; 4 bytes @ 0x0
   931                           
   932     0070                     ___fladd@b:	
   933                           ; 4 bytes @ 0x0
   934                           
   935     0070                     ___fldiv@a:	
   936                           ; 4 bytes @ 0x0
   937                           
   938     0070                     ___xxtofl@val:	
   939                           ; 4 bytes @ 0x0
   940                           
   941     0070                     ___fpclassifyf@x:	
   942                           ; 4 bytes @ 0x0
   943                           
   944     0070                     labs@a:	
   945                           ; 4 bytes @ 0x0
   946                           
   947     0070                     ??_sendCommandToLCD:	
   948                           ; 4 bytes @ 0x0
   949                           
   950     0070                     ??_putch:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ??_I2C_Master_Init:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ??_I2C_Master_Wait:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     ??_I2C_Master_Start:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     ??_I2C_Master_RepeatedStart:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     ??_I2C_Master_Stop:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     ??_I2C_ACK:	
   969                           ; 1 bytes @ 0x0
   970                           
   971     0070                     ??_I2C_NACK:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     ??_I2C_Master_Write:	
   975                           ; 1 bytes @ 0x0
   976                           
   977     0070                     ??_I2C_Read_Byte:	
   978                           ; 1 bytes @ 0x0
   979                           
   980     0070                     ??_sendDataToLCD:	
   981                           ; 1 bytes @ 0x0
   982                           
   983                           
   984                           ; 1 bytes @ 0x0
   985     0070                     	ds	1
   986     0071                     ?_MCP9800_SetLIMIT_Temp:
   987     0071                     ?_MCP9800_SetHYST_Temp:	
   988                           ; 1 bytes @ 0x1
   989                           
   990     0071                     sendCommandToLCD@command:	
   991                           ; 1 bytes @ 0x1
   992                           
   993     0071                     sendDataToLCD@data:	
   994                           ; 1 bytes @ 0x1
   995                           
   996     0071                     MCP9800_WriteConfig@value:	
   997                           ; 1 bytes @ 0x1
   998                           
   999     0071                     MCP9800_ReadConfig@config_value:	
  1000                           ; 1 bytes @ 0x1
  1001                           
  1002     0071                     memcpy@s1:	
  1003                           ; 1 bytes @ 0x1
  1004                           
  1005     0071                     strcpy@src:	
  1006                           ; 1 bytes @ 0x1
  1007                           
  1008     0071                     MCP9800_SetLIMIT_Temp@temp_value:	
  1009                           ; 1 bytes @ 0x1
  1010                           
  1011     0071                     MCP9800_SetHYST_Temp@temp_value:	
  1012                           ; 2 bytes @ 0x1
  1013                           
  1014     0071                     ??_MCP9800_WriteConfig:	
  1015                           ; 2 bytes @ 0x1
  1016                           
  1017     0071                     ??_MCP9800_ReadConfig:	
  1018                           ; 1 bytes @ 0x1
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x1
  1022     0071                     	ds	1
  1023     0072                     ?_printToLCD:
  1024     0072                     moveCursorToPosition@address:	
  1025                           ; 1 bytes @ 0x2
  1026                           
  1027     0072                     MCP9800_SetConfigOneShot@enable:	
  1028                           ; 1 bytes @ 0x2
  1029                           
  1030     0072                     MCP9800_SetConfigAlertPolarity@polarity:	
  1031                           ; 1 bytes @ 0x2
  1032                           
  1033     0072                     MCP9800_SetConfigCompIntMode@mode:	
  1034                           ; 1 bytes @ 0x2
  1035                           
  1036     0072                     MCP9800_SetConfigShutdown@enable:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039     0072                     strcpy@d:	
  1040                           ; 1 bytes @ 0x2
  1041                           
  1042     0072                     strlen@a:	
  1043                           ; 1 bytes @ 0x2
  1044                           
  1045     0072                     printToLCD@string:	
  1046                           ; 1 bytes @ 0x2
  1047                           
  1048     0072                     ___wmul@multiplicand:	
  1049                           ; 2 bytes @ 0x2
  1050                           
  1051     0072                     memcpy@n:	
  1052                           ; 2 bytes @ 0x2
  1053                           
  1054     0072                     fputc@fp:	
  1055                           ; 2 bytes @ 0x2
  1056                           
  1057     0072                     ??_clearLCD:	
  1058                           ; 2 bytes @ 0x2
  1059                           
  1060     0072                     ??__Umul8_16:	
  1061                           ; 1 bytes @ 0x2
  1062                           
  1063     0072                     ??_strlen:	
  1064                           ; 1 bytes @ 0x2
  1065                           
  1066     0072                     ??_strcpy:	
  1067                           ; 1 bytes @ 0x2
  1068                           
  1069     0072                     ??_moveCursorToPosition:	
  1070                           ; 1 bytes @ 0x2
  1071                           
  1072     0072                     ??_MCP9800_Init:	
  1073                           ; 1 bytes @ 0x2
  1074                           
  1075     0072                     ??_MCP9800_SetConfigOneShot:	
  1076                           ; 1 bytes @ 0x2
  1077                           
  1078     0072                     ??_MCP9800_SetConfigResolution:	
  1079                           ; 1 bytes @ 0x2
  1080                           
  1081     0072                     ??_MCP9800_SetConfigFaultQueue:	
  1082                           ; 1 bytes @ 0x2
  1083                           
  1084     0072                     ??_MCP9800_SetConfigAlertPolarity:	
  1085                           ; 1 bytes @ 0x2
  1086                           
  1087     0072                     ??_MCP9800_SetConfigCompIntMode:	
  1088                           ; 1 bytes @ 0x2
  1089                           
  1090     0072                     ??_MCP9800_SetConfigShutdown:	
  1091                           ; 1 bytes @ 0x2
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x2
  1095     0072                     	ds	1
  1096     0073                     MCP9800_SetConfigOneShot@config:
  1097     0073                     MCP9800_SetConfigResolution@resolution:	
  1098                           ; 1 bytes @ 0x3
  1099                           
  1100     0073                     MCP9800_SetConfigFaultQueue@fault_queue:	
  1101                           ; 1 bytes @ 0x3
  1102                           
  1103     0073                     MCP9800_SetConfigAlertPolarity@config:	
  1104                           ; 1 bytes @ 0x3
  1105                           
  1106     0073                     MCP9800_SetConfigCompIntMode@config:	
  1107                           ; 1 bytes @ 0x3
  1108                           
  1109     0073                     MCP9800_SetConfigShutdown@config:	
  1110                           ; 1 bytes @ 0x3
  1111                           
  1112     0073                     ??_MCP9800_SetLIMIT_Temp:	
  1113                           ; 1 bytes @ 0x3
  1114                           
  1115     0073                     ??_MCP9800_SetHYST_Temp:	
  1116                           ; 1 bytes @ 0x3
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0x3
  1120     0073                     	ds	1
  1121     0074                     MCP9800_SetConfigResolution@config:
  1122     0074                     MCP9800_SetConfigFaultQueue@config:	
  1123                           ; 1 bytes @ 0x4
  1124                           
  1125     0074                     memcpy@tmp:	
  1126                           ; 1 bytes @ 0x4
  1127                           
  1128     0074                     ___wmul@product:	
  1129                           ; 1 bytes @ 0x4
  1130                           
  1131     0074                     __Umul8_16@product:	
  1132                           ; 2 bytes @ 0x4
  1133                           
  1134     0074                     ___fleq@ff2:	
  1135                           ; 2 bytes @ 0x4
  1136                           
  1137     0074                     ___fladd@a:	
  1138                           ; 4 bytes @ 0x4
  1139                           
  1140     0074                     ___fldiv@b:	
  1141                           ; 4 bytes @ 0x4
  1142                           
  1143     0074                     ??_fputc:	
  1144                           ; 4 bytes @ 0x4
  1145                           
  1146     0074                     ??___fpclassifyf:	
  1147                           ; 1 bytes @ 0x4
  1148                           
  1149     0074                     ??_labs:	
  1150                           ; 1 bytes @ 0x4
  1151                           
  1152     0074                     ??_memcpy:	
  1153                           ; 1 bytes @ 0x4
  1154                           
  1155     0074                     ??_initializeLCD:	
  1156                           ; 1 bytes @ 0x4
  1157                           
  1158     0074                     ??_printToLCD:	
  1159                           ; 1 bytes @ 0x4
  1160                           
  1161     0074                     ??___wmul:	
  1162                           ; 1 bytes @ 0x4
  1163                           
  1164     0074                     ??___flneg:	
  1165                           ; 1 bytes @ 0x4
  1166                           
  1167     0074                     ??___xxtofl:	
  1168                           ; 1 bytes @ 0x4
  1169                           
  1170                           
  1171                           ; 1 bytes @ 0x4
  1172     0074                     	ds	1
  1173     0075                     MCP9800_SetLIMIT_Temp@msb:
  1174     0075                     MCP9800_SetHYST_Temp@msb:	
  1175                           ; 1 bytes @ 0x5
  1176                           
  1177     0075                     memcpy@d:	
  1178                           ; 1 bytes @ 0x5
  1179                           
  1180     0075                     ??_configureOneShotMode:	
  1181                           ; 1 bytes @ 0x5
  1182                           
  1183     0075                     ??_configureContinuousConversionMode:	
  1184                           ; 1 bytes @ 0x5
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x5
  1188     0075                     	ds	1
  1189     0076                     ?_read_prec_or_width:
  1190     0076                     MCP9800_SetLIMIT_Temp@lsb:	
  1191                           ; 2 bytes @ 0x6
  1192                           
  1193     0076                     MCP9800_SetHYST_Temp@lsb:	
  1194                           ; 1 bytes @ 0x6
  1195                           
  1196     0076                     read_prec_or_width@fmt:	
  1197                           ; 1 bytes @ 0x6
  1198                           
  1199     0076                     memcpy@s:	
  1200                           ; 1 bytes @ 0x6
  1201                           
  1202     0076                     __Umul8_16@word_mpld:	
  1203                           ; 1 bytes @ 0x6
  1204                           
  1205     0076                     ??_initializeHardware:	
  1206                           ; 2 bytes @ 0x6
  1207                           
  1208                           
  1209                           ; 1 bytes @ 0x6
  1210     0076                     	ds	1
  1211     0077                     read_prec_or_width@ap:
  1212     0077                     MCP9800_SetLIMIT_Temp@temp_raw_value:	
  1213                           ; 1 bytes @ 0x7
  1214                           
  1215     0077                     MCP9800_SetHYST_Temp@temp_raw_value:	
  1216                           ; 2 bytes @ 0x7
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0x7
  1220     0077                     	ds	1
  1221     0078                     ___fladd@signs:
  1222     0078                     __Umul8_16@multiplier:	
  1223                           ; 1 bytes @ 0x8
  1224                           
  1225     0078                     ___xxtofl@sign:	
  1226                           ; 1 bytes @ 0x8
  1227                           
  1228     0078                     read_prec_or_width@c:	
  1229                           ; 1 bytes @ 0x8
  1230                           
  1231     0078                     ??___fleq:	
  1232                           ; 1 bytes @ 0x8
  1233                           
  1234     0078                     ??___fldiv:	
  1235                           ; 1 bytes @ 0x8
  1236                           
  1237     0078                     ??_read_prec_or_width:	
  1238                           ; 1 bytes @ 0x8
  1239                           
  1240                           
  1241                           ; 1 bytes @ 0x8
  1242     0078                     	ds	1
  1243     0079                     ___fladd@aexp:
  1244     0079                     ___xxtofl@exp:	
  1245                           ; 1 bytes @ 0x9
  1246                           
  1247     0079                     read_prec_or_width@n:	
  1248                           ; 1 bytes @ 0x9
  1249                           
  1250     0079                     ??_handleButtonPress:	
  1251                           ; 2 bytes @ 0x9
  1252                           
  1253     0079                     ??_configureComparatorMode:	
  1254                           ; 1 bytes @ 0x9
  1255                           
  1256     0079                     ??_configureInterruptMode:	
  1257                           ; 1 bytes @ 0x9
  1258                           
  1259                           
  1260                           ; 1 bytes @ 0x9
  1261     0079                     	ds	1
  1262     007A                     ___fladd@bexp:
  1263     007A                     ___xxtofl@arg:	
  1264                           ; 1 bytes @ 0xA
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0xA
  1268     007A                     	ds	1
  1269     007B                     ___fladd@grs:
  1270                           
  1271                           ; 1 bytes @ 0xB
  1272     007B                     	ds	2
  1273     007D                     ??_pad:
  1274                           
  1275                           ; 1 bytes @ 0xD
  1276     007D                     	ds	1
  1277     007E                     ??_vfprintf:
  1278     007E                     ??_MCP9800_ReadTemperature:	
  1279                           ; 1 bytes @ 0xE
  1280                           
  1281     007E                     ??___flsub:	
  1282                           ; 1 bytes @ 0xE
  1283                           
  1284                           
  1285                           	psect	cstackBANK0
  1286     0020                     __pcstackBANK0:	
  1287                           ; 1 bytes @ 0xE
  1288                           
  1289     0020                     ?_fputs:
  1290     0020                     ?___flmul:	
  1291                           ; 2 bytes @ 0x0
  1292                           
  1293     0020                     fputs@s:	
  1294                           ; 4 bytes @ 0x0
  1295                           
  1296     0020                     ___fpclassifyf@e:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299     0020                     ___fldiv@rem:	
  1300                           ; 2 bytes @ 0x0
  1301                           
  1302     0020                     ___flmul@b:	
  1303                           ; 4 bytes @ 0x0
  1304                           
  1305     0020                     ??___fladd:	
  1306                           ; 4 bytes @ 0x0
  1307                           
  1308                           
  1309                           ; 1 bytes @ 0x0
  1310     0020                     	ds	1
  1311     0021                     fputs@fp:
  1312                           
  1313                           ; 2 bytes @ 0x1
  1314     0021                     	ds	1
  1315     0022                     ___fpclassifyf@u:
  1316                           
  1317                           ; 4 bytes @ 0x2
  1318     0022                     	ds	1
  1319     0023                     ??_fputs:
  1320                           
  1321                           ; 1 bytes @ 0x3
  1322     0023                     	ds	1
  1323     0024                     ___fldiv@sign:
  1324     0024                     ___flmul@a:	
  1325                           ; 1 bytes @ 0x4
  1326                           
  1327                           
  1328                           ; 4 bytes @ 0x4
  1329     0024                     	ds	1
  1330     0025                     fputs@c:
  1331     0025                     ___fldiv@new_exp:	
  1332                           ; 1 bytes @ 0x5
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x5
  1336     0025                     	ds	1
  1337     0026                     fputs@i:
  1338                           
  1339                           ; 2 bytes @ 0x6
  1340     0026                     	ds	1
  1341     0027                     ___fldiv@grs:
  1342                           
  1343                           ; 4 bytes @ 0x7
  1344     0027                     	ds	1
  1345     0028                     ?_pad:
  1346     0028                     pad@fp:	
  1347                           ; 2 bytes @ 0x8
  1348                           
  1349     0028                     ??___flmul:	
  1350                           ; 2 bytes @ 0x8
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x8
  1354     0028                     	ds	2
  1355     002A                     pad@buf:
  1356                           
  1357                           ; 1 bytes @ 0xA
  1358     002A                     	ds	1
  1359     002B                     ___fldiv@bexp:
  1360     002B                     pad@p:	
  1361                           ; 1 bytes @ 0xB
  1362                           
  1363                           
  1364                           ; 2 bytes @ 0xB
  1365     002B                     	ds	1
  1366     002C                     ___fldiv@aexp:
  1367                           
  1368                           ; 1 bytes @ 0xC
  1369     002C                     	ds	1
  1370     002D                     ?_floorf:
  1371     002D                     ___flmul@sign:	
  1372                           ; 4 bytes @ 0xD
  1373                           
  1374     002D                     pad@i:	
  1375                           ; 1 bytes @ 0xD
  1376                           
  1377     002D                     floorf@x:	
  1378                           ; 2 bytes @ 0xD
  1379                           
  1380                           
  1381                           ; 4 bytes @ 0xD
  1382     002D                     	ds	1
  1383     002E                     ___flmul@grs:
  1384                           
  1385                           ; 4 bytes @ 0xE
  1386     002E                     	ds	3
  1387     0031                     ??_floorf:
  1388                           
  1389                           ; 1 bytes @ 0x11
  1390     0031                     	ds	1
  1391     0032                     ___flmul@aexp:
  1392                           
  1393                           ; 1 bytes @ 0x12
  1394     0032                     	ds	1
  1395     0033                     ___flmul@bexp:
  1396                           
  1397                           ; 1 bytes @ 0x13
  1398     0033                     	ds	1
  1399     0034                     ___flmul@prod:
  1400                           
  1401                           ; 4 bytes @ 0x14
  1402     0034                     	ds	3
  1403     0037                     floorf@m:
  1404                           
  1405                           ; 4 bytes @ 0x17
  1406     0037                     	ds	1
  1407     0038                     ___flmul@temp:
  1408                           
  1409                           ; 2 bytes @ 0x18
  1410     0038                     	ds	2
  1411     003A                     ?___flge:
  1412     003A                     ?___fltol:	
  1413                           ; 1 bit 
  1414                           
  1415     003A                     ?___flsub:	
  1416                           ; 4 bytes @ 0x1A
  1417                           
  1418     003A                     ___flge@ff1:	
  1419                           ; 4 bytes @ 0x1A
  1420                           
  1421     003A                     ___fltol@f1:	
  1422                           ; 4 bytes @ 0x1A
  1423                           
  1424     003A                     ___flsub@a:	
  1425                           ; 4 bytes @ 0x1A
  1426                           
  1427                           
  1428                           ; 4 bytes @ 0x1A
  1429     003A                     	ds	1
  1430     003B                     floorf@e:
  1431                           
  1432                           ; 2 bytes @ 0x1B
  1433     003B                     	ds	2
  1434     003D                     floorf@u:
  1435                           
  1436                           ; 4 bytes @ 0x1D
  1437     003D                     	ds	1
  1438     003E                     ___flge@ff2:
  1439     003E                     ___flsub@b:	
  1440                           ; 4 bytes @ 0x1E
  1441                           
  1442     003E                     ??___fltol:	
  1443                           ; 4 bytes @ 0x1E
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x1E
  1447     003E                     	ds	4
  1448     0042                     ___fltol@sign1:
  1449     0042                     ??___flge:	
  1450                           ; 1 bytes @ 0x22
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x22
  1454     0042                     	ds	1
  1455     0043                     ___fltol@exp1:
  1456                           
  1457                           ; 1 bytes @ 0x23
  1458     0043                     	ds	1
  1459     0044                     ?_MCP9800_ReadTemperature:
  1460                           
  1461                           ; 2 bytes @ 0x24
  1462     0044                     	ds	2
  1463     0046                     ?_efgtoa:
  1464     0046                     MCP9800_ReadTemperature@temperature:	
  1465                           ; 2 bytes @ 0x26
  1466                           
  1467     0046                     efgtoa@fp:	
  1468                           ; 2 bytes @ 0x26
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0x26
  1472     0046                     	ds	2
  1473     0048                     MCP9800_ReadTemperature@temp_msb:
  1474     0048                     efgtoa@f:	
  1475                           ; 1 bytes @ 0x28
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x28
  1479     0048                     	ds	1
  1480     0049                     MCP9800_ReadTemperature@temp_lsb:
  1481                           
  1482                           ; 1 bytes @ 0x29
  1483     0049                     	ds	3
  1484     004C                     efgtoa@c:
  1485                           
  1486                           ; 1 bytes @ 0x2C
  1487     004C                     	ds	1
  1488     004D                     ??_efgtoa:
  1489                           
  1490                           ; 1 bytes @ 0x2D
  1491     004D                     	ds	4
  1492     0051                     ??_vfpfcnvrt:
  1493                           
  1494                           ; 1 bytes @ 0x31
  1495     0051                     	ds	2
  1496     0053                     vfpfcnvrt@convarg:
  1497                           
  1498                           ; 4 bytes @ 0x33
  1499     0053                     	ds	4
  1500     0057                     vfpfcnvrt@c:
  1501                           
  1502                           ; 1 bytes @ 0x37
  1503     0057                     	ds	1
  1504     0058                     vfpfcnvrt@cp:
  1505                           
  1506                           ; 1 bytes @ 0x38
  1507     0058                     	ds	1
  1508     0059                     vfprintf@cfmt:
  1509                           
  1510                           ; 1 bytes @ 0x39
  1511     0059                     	ds	1
  1512     005A                     ??_snprintf:
  1513                           
  1514                           ; 1 bytes @ 0x3A
  1515     005A                     	ds	3
  1516     005D                     _snprintf$802:
  1517                           
  1518                           ; 2 bytes @ 0x3D
  1519     005D                     	ds	2
  1520     005F                     snprintf@ap:
  1521                           
  1522                           ; 1 bytes @ 0x3F
  1523     005F                     	ds	1
  1524     0060                     snprintf@cnt:
  1525                           
  1526                           ; 2 bytes @ 0x40
  1527     0060                     	ds	2
  1528     0062                     snprintf@f:
  1529                           
  1530                           ; 11 bytes @ 0x42
  1531     0062                     	ds	11
  1532     006D                     ??_main:
  1533                           
  1534                           ; 1 bytes @ 0x4D
  1535     006D                     	ds	3
  1536                           
  1537                           	psect	maintext
  1538     118F                     __pmaintext:	
  1539 ;;
  1540 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1541 ;;
  1542 ;; *************** function _main *****************
  1543 ;; Defined at:
  1544 ;;		line 16 in file "main.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  temp            4   60[BANK1 ] float 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  2  251[None  ] int 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : B00/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         0       0       8       0       0
  1560 ;;      Temps:          0       3       0       0       0
  1561 ;;      Totals:         0       3       8       0       0
  1562 ;;Total ram usage:       11 bytes
  1563 ;; Hardware stack levels required when called: 8
  1564 ;; This function calls:
  1565 ;;		_MCP9800_ReadTemperature
  1566 ;;		___xxtofl
  1567 ;;		_clearLCD
  1568 ;;		_handleButtonPress
  1569 ;;		_initializeHardware
  1570 ;;		_moveCursorToPosition
  1571 ;;		_printToLCD
  1572 ;;		_snprintf
  1573 ;; This function is called by:
  1574 ;;		Startup code after reset
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578     118F                     _main:	
  1579                           ;psect for function _main
  1580                           
  1581     118F                     l3815:	
  1582                           ;incstack = 0
  1583                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1584                           
  1585                           
  1586                           ;main.c: 18:     initializeHardware();
  1587     118F  160A  158A  2358  160A  118A  	fcall	_initializeHardware
  1588                           
  1589                           ;main.c: 19:     clearLCD();
  1590     1194  160A  158A  2348  160A  118A  	fcall	_clearLCD
  1591                           
  1592                           ;main.c: 20:     moveCursorToPosition(0);
  1593     1199  3000               	movlw	0
  1594     119A  160A  158A  24DD  160A  118A  	fcall	_moveCursorToPosition
  1595     119F                     l3817:
  1596                           
  1597                           ;main.c: 21:     printToLCD("MCP9800 Ready");
  1598     119F  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1599     11A0  00F2               	movwf	printToLCD@string
  1600     11A1  3080               	movlw	128
  1601     11A2  00F3               	movwf	printToLCD@string+1
  1602     11A3  160A  158A  2567  160A  118A  	fcall	_printToLCD
  1603     11A8                     l3819:
  1604                           
  1605                           ;main.c: 22:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1606     11A8  301A               	movlw	26
  1607     11A9  1283               	bcf	3,5	;RP0=0, select bank0
  1608     11AA  1303               	bcf	3,6	;RP1=0, select bank0
  1609     11AB  00EF               	movwf	??_main+2
  1610     11AC  305E               	movlw	94
  1611     11AD  00EE               	movwf	??_main+1
  1612     11AE  306D               	movlw	109
  1613     11AF  00ED               	movwf	??_main
  1614     11B0                     u5117:
  1615     11B0  0BED               	decfsz	??_main,f
  1616     11B1  29B0               	goto	u5117
  1617     11B2  0BEE               	decfsz	??_main+1,f
  1618     11B3  29B0               	goto	u5117
  1619     11B4  0BEF               	decfsz	??_main+2,f
  1620     11B5  29B0               	goto	u5117
  1621     11B6  29B7               	nop2
  1622     11B7                     l3821:
  1623                           
  1624                           ;main.c: 25:         handleButtonPress();
  1625     11B7  160A  118A  20BD  160A  118A  	fcall	_handleButtonPress
  1626     11BC                     l3823:
  1627                           
  1628                           ;main.c: 26:         float temp = MCP9800_ReadTemperature();
  1629     11BC  120A  158A  200C  160A  118A  	fcall	_MCP9800_ReadTemperature
  1630     11C1  1283               	bcf	3,5	;RP0=0, select bank0
  1631     11C2  1303               	bcf	3,6	;RP1=0, select bank0
  1632     11C3  0844               	movf	?_MCP9800_ReadTemperature,w
  1633     11C4  1683               	bsf	3,5	;RP0=1, select bank1
  1634     11C5  1303               	bcf	3,6	;RP1=0, select bank1
  1635     11C6  00E0               	movwf	_main$1258^(0+128)
  1636     11C7  1283               	bcf	3,5	;RP0=0, select bank0
  1637     11C8  1303               	bcf	3,6	;RP1=0, select bank0
  1638     11C9  0845               	movf	?_MCP9800_ReadTemperature+1,w
  1639     11CA  1683               	bsf	3,5	;RP0=1, select bank1
  1640     11CB  1303               	bcf	3,6	;RP1=0, select bank1
  1641     11CC  00E1               	movwf	(_main$1258+1)^(0+128)
  1642     11CD  3000               	movlw	0
  1643     11CE  1BE1               	btfsc	(_main$1258+1)^(0+128),7
  1644     11CF  30FF               	movlw	255
  1645     11D0  00E2               	movwf	(_main$1258+2)^(0+128)
  1646     11D1  00E3               	movwf	(_main$1258+3)^(0+128)
  1647     11D2                     l3825:
  1648                           
  1649                           ;main.c: 26:         float temp = MCP9800_ReadTemperature();
  1650     11D2  0863               	movf	(_main$1258+3)^(0+128),w
  1651     11D3  00F3               	movwf	___xxtofl@val+3
  1652     11D4  0862               	movf	(_main$1258+2)^(0+128),w
  1653     11D5  00F2               	movwf	___xxtofl@val+2
  1654     11D6  0861               	movf	(_main$1258+1)^(0+128),w
  1655     11D7  00F1               	movwf	___xxtofl@val+1
  1656     11D8  0860               	movf	_main$1258^(0+128),w
  1657     11D9  00F0               	movwf	___xxtofl@val
  1658     11DA  3001               	movlw	1
  1659     11DB  160A  118A  2412  160A  118A  	fcall	___xxtofl
  1660     11E0  0873               	movf	?___xxtofl+3,w
  1661     11E1  1683               	bsf	3,5	;RP0=1, select bank1
  1662     11E2  1303               	bcf	3,6	;RP1=0, select bank1
  1663     11E3  00DF               	movwf	(main@temp+3)^(0+128)
  1664     11E4  0872               	movf	?___xxtofl+2,w
  1665     11E5  00DE               	movwf	(main@temp+2)^(0+128)
  1666     11E6  0871               	movf	?___xxtofl+1,w
  1667     11E7  00DD               	movwf	(main@temp+1)^(0+128)
  1668     11E8  0870               	movf	?___xxtofl,w
  1669     11E9  00DC               	movwf	main@temp^(0+128)
  1670     11EA                     l3827:
  1671                           
  1672                           ;main.c: 27:         moveCursorToPosition(0xC0);
  1673     11EA  30C0               	movlw	192
  1674     11EB  160A  158A  24DD  160A  118A  	fcall	_moveCursorToPosition
  1675     11F0                     l3829:
  1676                           
  1677                           ;main.c: 28:         snprintf(displayString, sizeof(displayString), "Temp: %.2f C", temp
      +                          );
  1678     11F0  3098               	movlw	(low (_displayString| (0+256)))& (0+255)
  1679     11F1  1683               	bsf	3,5	;RP0=1, select bank1
  1680     11F2  1303               	bcf	3,6	;RP1=0, select bank1
  1681     11F3  00D4               	movwf	snprintf@s^(0+128)
  1682     11F4  3010               	movlw	16
  1683     11F5  00D5               	movwf	snprintf@n^(0+128)
  1684     11F6  3000               	movlw	0
  1685     11F7  00D6               	movwf	(snprintf@n^(0+128)+1)
  1686     11F8  303F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1687     11F9  00D7               	movwf	snprintf@fmt^(0+128)
  1688     11FA  085F               	movf	(main@temp+3)^(0+128),w
  1689     11FB  00DB               	movwf	((?_snprintf+3)^(0+128)+4)
  1690     11FC  085E               	movf	(main@temp+2)^(0+128),w
  1691     11FD  00DA               	movwf	((?_snprintf+2)^(0+128)+4)
  1692     11FE  085D               	movf	(main@temp+1)^(0+128),w
  1693     11FF  00D9               	movwf	((?_snprintf+1)^(0+128)+4)
  1694     1200  085C               	movf	main@temp^(0+128),w
  1695     1201  00D8               	movwf	(?_snprintf^(0+128)+4)
  1696     1202  160A  118A  2366  160A  118A  	fcall	_snprintf
  1697     1207                     l3831:
  1698                           
  1699                           ;main.c: 29:         moveCursorToPosition(0);
  1700     1207  3000               	movlw	0
  1701     1208  160A  158A  24DD  160A  118A  	fcall	_moveCursorToPosition
  1702     120D                     l3833:
  1703                           
  1704                           ;main.c: 30:         printToLCD(displayString);
  1705     120D  3098               	movlw	(low (_displayString| (0+256)))& (0+255)
  1706     120E  00F2               	movwf	printToLCD@string
  1707     120F  3001               	movlw	1
  1708     1210  00F3               	movwf	printToLCD@string+1
  1709     1211  160A  158A  2567  160A  118A  	fcall	_printToLCD
  1710     1216                     l3835:
  1711                           
  1712                           ;main.c: 31:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  1713     1216  3033               	movlw	51
  1714     1217  1283               	bcf	3,5	;RP0=0, select bank0
  1715     1218  1303               	bcf	3,6	;RP1=0, select bank0
  1716     1219  00EF               	movwf	??_main+2
  1717     121A  30BB               	movlw	187
  1718     121B  00EE               	movwf	??_main+1
  1719     121C  30DF               	movlw	223
  1720     121D  00ED               	movwf	??_main
  1721     121E                     u5127:
  1722     121E  0BED               	decfsz	??_main,f
  1723     121F  2A1E               	goto	u5127
  1724     1220  0BEE               	decfsz	??_main+1,f
  1725     1221  2A1E               	goto	u5127
  1726     1222  0BEF               	decfsz	??_main+2,f
  1727     1223  2A1E               	goto	u5127
  1728     1224  29B7               	goto	l3821
  1729     1225  120A  118A  2800   	ljmp	start
  1730     1228                     __end_of_main:
  1731                           
  1732                           	psect	text1
  1733     1366                     __ptext1:	
  1734 ;; *************** function _snprintf *****************
  1735 ;; Defined at:
  1736 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_snprintf.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  s               1   52[BANK1 ] PTR unsigned char 
  1739 ;;		 -> displayString(16), 
  1740 ;;  n               2   53[BANK1 ] unsigned int 
  1741 ;;  fmt             1   55[BANK1 ] PTR const unsigned char 
  1742 ;;		 -> STR_2(13), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  f              11   66[BANK0 ] struct _IO_FILE
  1745 ;;  cnt             2   64[BANK0 ] int 
  1746 ;;  ap              1   63[BANK0 ] PTR void [1]
  1747 ;;		 -> ?_snprintf(2), 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2   52[BANK1 ] int 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       0       8       0       0
  1758 ;;      Locals:         0      16       0       0       0
  1759 ;;      Temps:          0       3       0       0       0
  1760 ;;      Totals:         0      19       8       0       0
  1761 ;;Total ram usage:       27 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 7
  1764 ;; This function calls:
  1765 ;;		_vfprintf
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771     1366                     _snprintf:	
  1772                           ;psect for function _snprintf
  1773                           
  1774     1366                     l3741:	
  1775                           ;incstack = 0
  1776                           ; Regs used in _snprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1777                           
  1778     1366  3080               	movlw	128
  1779     1367  1683               	bsf	3,5	;RP0=1, select bank1
  1780     1368  1303               	bcf	3,6	;RP1=0, select bank1
  1781     1369  0256               	subwf	(snprintf@n+1)^(0+128),w
  1782     136A  3000               	movlw	0
  1783     136B  1903               	skipnz
  1784     136C  0255               	subwf	snprintf@n^(0+128),w
  1785     136D  1C03               	skipc
  1786     136E  2B70               	goto	u5041
  1787     136F  2B71               	goto	u5040
  1788     1370                     u5041:
  1789     1370  2B76               	goto	l3747
  1790     1371                     u5040:
  1791     1371                     l3743:
  1792     1371  304B               	movlw	75
  1793     1372  00EA               	movwf	_errno^(0+128)
  1794     1373  3000               	movlw	0
  1795     1374  00EB               	movwf	(_errno^(0+128)+1)
  1796     1375  2C11               	goto	l830
  1797     1376                     l3747:
  1798     1376  30D8               	movlw	(low ((?_snprintf| 0+4)))& (0+255)
  1799     1377  1283               	bcf	3,5	;RP0=0, select bank0
  1800     1378  1303               	bcf	3,6	;RP1=0, select bank0
  1801     1379  00DF               	movwf	snprintf@ap
  1802     137A                     l3749:
  1803     137A  1683               	bsf	3,5	;RP0=1, select bank1
  1804     137B  1303               	bcf	3,6	;RP1=0, select bank1
  1805     137C  0854               	movf	snprintf@s^(0+128),w
  1806     137D  1283               	bcf	3,5	;RP0=0, select bank0
  1807     137E  1303               	bcf	3,6	;RP1=0, select bank0
  1808     137F  00E2               	movwf	snprintf@f
  1809     1380  3001               	movlw	1
  1810     1381  00E3               	movwf	snprintf@f+1
  1811     1382                     l3751:
  1812     1382  3000               	movlw	0
  1813     1383  1683               	bsf	3,5	;RP0=1, select bank1
  1814     1384  1303               	bcf	3,6	;RP1=0, select bank1
  1815     1385  0256               	subwf	(snprintf@n+1)^(0+128),w
  1816     1386  3002               	movlw	2
  1817     1387  1903               	skipnz
  1818     1388  0255               	subwf	snprintf@n^(0+128),w
  1819     1389  1C03               	skipc
  1820     138A  2B8C               	goto	u5051
  1821     138B  2B8D               	goto	u5050
  1822     138C                     u5051:
  1823     138C  2B9E               	goto	l3757
  1824     138D                     u5050:
  1825     138D                     l3753:
  1826     138D  0855               	movf	snprintf@n^(0+128),w
  1827     138E  3EFF               	addlw	255
  1828     138F  1283               	bcf	3,5	;RP0=0, select bank0
  1829     1390  1303               	bcf	3,6	;RP1=0, select bank0
  1830     1391  00EB               	movwf	snprintf@f+9
  1831     1392  1683               	bsf	3,5	;RP0=1, select bank1
  1832     1393  1303               	bcf	3,6	;RP1=0, select bank1
  1833     1394  0856               	movf	(snprintf@n+1)^(0+128),w
  1834     1395  1803               	skipnc
  1835     1396  3E01               	addlw	1
  1836     1397  3EFF               	addlw	255
  1837     1398  1283               	bcf	3,5	;RP0=0, select bank0
  1838     1399  1303               	bcf	3,6	;RP1=0, select bank0
  1839     139A  00EC               	movwf	snprintf@f+10
  1840     139B                     l3755:
  1841     139B  01E4               	clrf	snprintf@f+2
  1842     139C  01E5               	clrf	snprintf@f+3
  1843     139D  2BA8               	goto	l3759
  1844     139E                     l3757:
  1845     139E  3001               	movlw	1
  1846     139F  1283               	bcf	3,5	;RP0=0, select bank0
  1847     13A0  1303               	bcf	3,6	;RP1=0, select bank0
  1848     13A1  00EB               	movwf	snprintf@f+9
  1849     13A2  3000               	movlw	0
  1850     13A3  00EC               	movwf	snprintf@f+10
  1851     13A4  3001               	movlw	1
  1852     13A5  00E4               	movwf	snprintf@f+2
  1853     13A6  3000               	movlw	0
  1854     13A7  00E5               	movwf	snprintf@f+3
  1855     13A8                     l3759:
  1856     13A8  3062               	movlw	low snprintf@f
  1857     13A9  1683               	bsf	3,5	;RP0=1, select bank1
  1858     13AA  1303               	bcf	3,6	;RP1=0, select bank1
  1859     13AB  00D0               	movwf	vfprintf@fp^(0+128)
  1860     13AC  3000               	movlw	high snprintf@f
  1861     13AD  00D1               	movwf	(vfprintf@fp^(0+128)+1)
  1862     13AE  0857               	movf	snprintf@fmt^(0+128),w
  1863     13AF  00D2               	movwf	vfprintf@fmt^(0+128)
  1864     13B0  305F               	movlw	(low (snprintf@ap| 0))& (0+255)
  1865     13B1  00D3               	movwf	vfprintf@ap^(0+128)
  1866     13B2  160A  158A  2638  160A  118A  	fcall	_vfprintf
  1867     13B7  1683               	bsf	3,5	;RP0=1, select bank1
  1868     13B8  1303               	bcf	3,6	;RP1=0, select bank1
  1869     13B9  0851               	movf	(?_vfprintf+1)^(0+128),w
  1870     13BA  1283               	bcf	3,5	;RP0=0, select bank0
  1871     13BB  1303               	bcf	3,6	;RP1=0, select bank0
  1872     13BC  00E1               	movwf	snprintf@cnt+1
  1873     13BD  1683               	bsf	3,5	;RP0=1, select bank1
  1874     13BE  1303               	bcf	3,6	;RP1=0, select bank1
  1875     13BF  0850               	movf	?_vfprintf^(0+128),w
  1876     13C0  1283               	bcf	3,5	;RP0=0, select bank0
  1877     13C1  1303               	bcf	3,6	;RP1=0, select bank0
  1878     13C2  00E0               	movwf	snprintf@cnt
  1879     13C3                     l3761:
  1880     13C3  1683               	bsf	3,5	;RP0=1, select bank1
  1881     13C4  1303               	bcf	3,6	;RP1=0, select bank1
  1882     13C5  0855               	movf	snprintf@n^(0+128),w
  1883     13C6  0456               	iorwf	(snprintf@n+1)^(0+128),w
  1884     13C7  1903               	btfsc	3,2
  1885     13C8  2BCA               	goto	u5061
  1886     13C9  2BCB               	goto	u5060
  1887     13CA                     u5061:
  1888     13CA  2C11               	goto	l830
  1889     13CB                     u5060:
  1890     13CB                     l3763:
  1891     13CB  1283               	bcf	3,5	;RP0=0, select bank0
  1892     13CC  1303               	bcf	3,6	;RP1=0, select bank0
  1893     13CD  1BE1               	btfsc	snprintf@cnt+1,7
  1894     13CE  2BD0               	goto	u5071
  1895     13CF  2BD1               	goto	u5070
  1896     13D0                     u5071:
  1897     13D0  2C11               	goto	l830
  1898     13D1                     u5070:
  1899     13D1                     l3765:
  1900     13D1  1683               	bsf	3,5	;RP0=1, select bank1
  1901     13D2  1303               	bcf	3,6	;RP1=0, select bank1
  1902     13D3  0855               	movf	snprintf@n^(0+128),w
  1903     13D4  3EFF               	addlw	255
  1904     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  1905     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  1906     13D7  00DA               	movwf	??_snprintf
  1907     13D8  1683               	bsf	3,5	;RP0=1, select bank1
  1908     13D9  1303               	bcf	3,6	;RP1=0, select bank1
  1909     13DA  0856               	movf	(snprintf@n+1)^(0+128),w
  1910     13DB  1803               	skipnc
  1911     13DC  3E01               	addlw	1
  1912     13DD  3EFF               	addlw	255
  1913     13DE  1283               	bcf	3,5	;RP0=0, select bank0
  1914     13DF  1303               	bcf	3,6	;RP1=0, select bank0
  1915     13E0  00DB               	movwf	??_snprintf+1
  1916     13E1  0861               	movf	snprintf@cnt+1,w
  1917     13E2  3A80               	xorlw	128
  1918     13E3  00DC               	movwf	??_snprintf+2
  1919     13E4  085B               	movf	??_snprintf+1,w
  1920     13E5  3A80               	xorlw	128
  1921     13E6  025C               	subwf	??_snprintf+2,w
  1922     13E7  1D03               	skipz
  1923     13E8  2BEB               	goto	u5085
  1924     13E9  085A               	movf	??_snprintf,w
  1925     13EA  0260               	subwf	snprintf@cnt,w
  1926     13EB                     u5085:
  1927     13EB  1C03               	skipc
  1928     13EC  2BEE               	goto	u5081
  1929     13ED  2BEF               	goto	u5080
  1930     13EE                     u5081:
  1931     13EE  2C00               	goto	l3769
  1932     13EF                     u5080:
  1933     13EF                     l3767:
  1934     13EF  1683               	bsf	3,5	;RP0=1, select bank1
  1935     13F0  1303               	bcf	3,6	;RP1=0, select bank1
  1936     13F1  0855               	movf	snprintf@n^(0+128),w
  1937     13F2  3EFF               	addlw	255
  1938     13F3  1283               	bcf	3,5	;RP0=0, select bank0
  1939     13F4  1303               	bcf	3,6	;RP1=0, select bank0
  1940     13F5  00DD               	movwf	_snprintf$802
  1941     13F6  1683               	bsf	3,5	;RP0=1, select bank1
  1942     13F7  1303               	bcf	3,6	;RP1=0, select bank1
  1943     13F8  0856               	movf	(snprintf@n+1)^(0+128),w
  1944     13F9  1803               	skipnc
  1945     13FA  3E01               	addlw	1
  1946     13FB  3EFF               	addlw	255
  1947     13FC  1283               	bcf	3,5	;RP0=0, select bank0
  1948     13FD  1303               	bcf	3,6	;RP1=0, select bank0
  1949     13FE  00DE               	movwf	_snprintf$802+1
  1950     13FF  2C06               	goto	l3771
  1951     1400                     l3769:
  1952     1400  1283               	bcf	3,5	;RP0=0, select bank0
  1953     1401  1303               	bcf	3,6	;RP1=0, select bank0
  1954     1402  0861               	movf	snprintf@cnt+1,w
  1955     1403  00DE               	movwf	_snprintf$802+1
  1956     1404  0860               	movf	snprintf@cnt,w
  1957     1405  00DD               	movwf	_snprintf$802
  1958     1406                     l3771:
  1959     1406  085D               	movf	_snprintf$802,w
  1960     1407  1683               	bsf	3,5	;RP0=1, select bank1
  1961     1408  1303               	bcf	3,6	;RP1=0, select bank1
  1962     1409  0754               	addwf	snprintf@s^(0+128),w
  1963     140A  1283               	bcf	3,5	;RP0=0, select bank0
  1964     140B  1303               	bcf	3,6	;RP1=0, select bank0
  1965     140C  00DA               	movwf	??_snprintf
  1966     140D  085A               	movf	??_snprintf,w
  1967     140E  0084               	movwf	4
  1968     140F  1783               	bsf	3,7	;select IRP bank2
  1969     1410  0180               	clrf	0
  1970     1411                     l830:
  1971     1411  0008               	return
  1972     1412                     __end_of_snprintf:
  1973                           
  1974                           	psect	text2
  1975     1E38                     __ptext2:	
  1976 ;; *************** function _vfprintf *****************
  1977 ;; Defined at:
  1978 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  fp              2   48[BANK1 ] PTR struct _IO_FILE
  1981 ;;		 -> snprintf@f(11), 
  1982 ;;  fmt             1   50[BANK1 ] PTR const unsigned char 
  1983 ;;		 -> STR_2(13), 
  1984 ;;  ap              1   51[BANK1 ] PTR PTR void 
  1985 ;;		 -> snprintf@ap(1), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  cfmt            1   57[BANK0 ] PTR unsigned char 
  1988 ;;		 -> STR_2(13), 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2   48[BANK1 ] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       4       0       0
  1999 ;;      Locals:         0       1       0       0       0
  2000 ;;      Temps:          0       0       0       0       0
  2001 ;;      Totals:         0       1       4       0       0
  2002 ;;Total ram usage:        5 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 6
  2005 ;; This function calls:
  2006 ;;		_vfpfcnvrt
  2007 ;; This function is called by:
  2008 ;;		_snprintf
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012     1E38                     _vfprintf:	
  2013                           ;psect for function _vfprintf
  2014                           
  2015     1E38                     l3703:	
  2016                           ;incstack = 0
  2017 ;; using string table level
  2018                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2019                           
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2022     1E38  1683               	bsf	3,5	;RP0=1, select bank1
  2023     1E39  1303               	bcf	3,6	;RP1=0, select bank1
  2024     1E3A  0852               	movf	vfprintf@fmt^(0+128),w
  2025     1E3B  1283               	bcf	3,5	;RP0=0, select bank0
  2026     1E3C  1303               	bcf	3,6	;RP1=0, select bank0
  2027     1E3D  00D9               	movwf	vfprintf@cfmt
  2028     1E3E                     l3705:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2031     1E3E  1683               	bsf	3,5	;RP0=1, select bank1
  2032     1E3F  1303               	bcf	3,6	;RP1=0, select bank1
  2033     1E40  01E4               	clrf	_nout^(0+128)
  2034     1E41  01E5               	clrf	(_nout+1)^(0+128)
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2037     1E42  2E5A               	goto	l3709
  2038     1E43                     l3707:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2041     1E43  1683               	bsf	3,5	;RP0=1, select bank1
  2042     1E44  1303               	bcf	3,6	;RP1=0, select bank1
  2043     1E45  0850               	movf	vfprintf@fp^(0+128),w
  2044     1E46  00CC               	movwf	vfpfcnvrt@fp^(0+128)
  2045     1E47  0851               	movf	(vfprintf@fp+1)^(0+128),w
  2046     1E48  00CD               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  2047     1E49  3059               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2048     1E4A  00CE               	movwf	vfpfcnvrt@fmt^(0+128)
  2049     1E4B  0853               	movf	vfprintf@ap^(0+128),w
  2050     1E4C  00CF               	movwf	vfpfcnvrt@ap^(0+128)
  2051     1E4D  160A  118A  26E6  160A  158A  	fcall	_vfpfcnvrt
  2052     1E52  1683               	bsf	3,5	;RP0=1, select bank1
  2053     1E53  1303               	bcf	3,6	;RP1=0, select bank1
  2054     1E54  084C               	movf	?_vfpfcnvrt^(0+128),w
  2055     1E55  07E4               	addwf	_nout^(0+128),f
  2056     1E56  1803               	skipnc
  2057     1E57  0AE5               	incf	(_nout+1)^(0+128),f
  2058     1E58  084D               	movf	(?_vfpfcnvrt+1)^(0+128),w
  2059     1E59  07E5               	addwf	(_nout+1)^(0+128),f
  2060     1E5A                     l3709:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2063     1E5A  1283               	bcf	3,5	;RP0=0, select bank0
  2064     1E5B  1303               	bcf	3,6	;RP1=0, select bank0
  2065     1E5C  0859               	movf	vfprintf@cfmt,w
  2066     1E5D  0084               	movwf	4
  2067     1E5E  160A  118A  200A  160A  158A  	fcall	stringdir
  2068     1E63  3A00               	xorlw	0
  2069     1E64  1D03               	skipz
  2070     1E65  2E67               	goto	u5001
  2071     1E66  2E68               	goto	u5000
  2072     1E67                     u5001:
  2073     1E67  2E43               	goto	l3707
  2074     1E68                     u5000:
  2075     1E68                     l3711:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  2078     1E68  1683               	bsf	3,5	;RP0=1, select bank1
  2079     1E69  1303               	bcf	3,6	;RP1=0, select bank1
  2080     1E6A  0865               	movf	(_nout+1)^(0+128),w
  2081     1E6B  00D1               	movwf	(?_vfprintf+1)^(0+128)
  2082     1E6C  0864               	movf	_nout^(0+128),w
  2083     1E6D  00D0               	movwf	?_vfprintf^(0+128)
  2084     1E6E                     l959:
  2085     1E6E  0008               	return
  2086     1E6F                     __end_of_vfprintf:
  2087                           
  2088                           	psect	text3
  2089     16E6                     __ptext3:	
  2090 ;; *************** function _vfpfcnvrt *****************
  2091 ;; Defined at:
  2092 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  2095 ;;		 -> snprintf@f(11), 
  2096 ;;  fmt             1   46[BANK1 ] PTR PTR unsigned char 
  2097 ;;		 -> vfprintf@cfmt(1), 
  2098 ;;  ap              1   47[BANK1 ] PTR PTR void 
  2099 ;;		 -> snprintf@ap(1), 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  convarg         4   51[BANK0 ] struct .
  2102 ;;  cp              1   56[BANK0 ] PTR unsigned char 
  2103 ;;		 -> STR_2(13), 
  2104 ;;  c               1   55[BANK0 ] unsigned char 
  2105 ;;  done            1    0        _Bool 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  2   44[BANK1 ] int 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2115 ;;      Params:         0       0       4       0       0
  2116 ;;      Locals:         0       6       0       0       0
  2117 ;;      Temps:          0       2       0       0       0
  2118 ;;      Totals:         0       8       4       0       0
  2119 ;;Total ram usage:       12 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 5
  2122 ;; This function calls:
  2123 ;;		_efgtoa
  2124 ;;		_fputc
  2125 ;;		_read_prec_or_width
  2126 ;; This function is called by:
  2127 ;;		_vfprintf
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131     16E6                     _vfpfcnvrt:	
  2132                           ;psect for function _vfpfcnvrt
  2133                           
  2134     16E6                     l3543:	
  2135                           ;incstack = 0
  2136 ;; using string table level
  2137                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2138                           
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2141     16E6  1683               	bsf	3,5	;RP0=1, select bank1
  2142     16E7  1303               	bcf	3,6	;RP1=0, select bank1
  2143     16E8  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2144     16E9  0084               	movwf	4
  2145     16EA  1383               	bcf	3,7	;select IRP bank0
  2146     16EB  0800               	movf	0,w
  2147     16EC  0084               	movwf	4
  2148     16ED  160A  118A  200A  160A  118A  	fcall	stringdir
  2149     16F2  3A25               	xorlw	37
  2150     16F3  1D03               	skipz
  2151     16F4  2EF6               	goto	u4781
  2152     16F5  2EF7               	goto	u4780
  2153     16F6                     u4781:
  2154     16F6  2FD8               	goto	l3595
  2155     16F7                     u4780:
  2156     16F7                     l3545:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2159     16F7  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2160     16F8  0084               	movwf	4
  2161     16F9  3001               	movlw	1
  2162     16FA  0780               	addwf	0,f
  2163     16FB                     l3547:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2166     16FB  01E6               	clrf	_width^(0+128)
  2167     16FC  01E7               	clrf	(_width+1)^(0+128)
  2168     16FD  3000               	movlw	0
  2169     16FE  00EC               	movwf	_flags^(0+128)
  2170     16FF                     l3549:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2173     16FF  30FF               	movlw	255
  2174     1700  00E8               	movwf	_prec^(0+128)
  2175     1701  30FF               	movlw	255
  2176     1702  00E9               	movwf	(_prec^(0+128)+1)
  2177     1703                     l3551:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2180     1703  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2181     1704  0084               	movwf	4
  2182     1705  0800               	movf	0,w
  2183     1706  0084               	movwf	4
  2184     1707  160A  118A  200A  160A  118A  	fcall	stringdir
  2185     170C  3A2E               	xorlw	46
  2186     170D  1D03               	skipz
  2187     170E  2F10               	goto	u4791
  2188     170F  2F11               	goto	u4790
  2189     1710                     u4791:
  2190     1710  2F24               	goto	l3557
  2191     1711                     u4790:
  2192     1711                     l3553:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2195     1711  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2196     1712  0084               	movwf	4
  2197     1713  3001               	movlw	1
  2198     1714  0780               	addwf	0,f
  2199     1715                     l3555:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2202     1715  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2203     1716  00F6               	movwf	read_prec_or_width@fmt
  2204     1717  084F               	movf	vfpfcnvrt@ap^(0+128),w
  2205     1718  00F7               	movwf	read_prec_or_width@ap
  2206     1719  160A  118A  206A  160A  118A  	fcall	_read_prec_or_width
  2207     171E  0877               	movf	?_read_prec_or_width+1,w
  2208     171F  1683               	bsf	3,5	;RP0=1, select bank1
  2209     1720  1303               	bcf	3,6	;RP1=0, select bank1
  2210     1721  00E9               	movwf	(_prec+1)^(0+128)
  2211     1722  0876               	movf	?_read_prec_or_width,w
  2212     1723  00E8               	movwf	_prec^(0+128)
  2213     1724                     l3557:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2216     1724  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2217     1725  0084               	movwf	4
  2218     1726  1383               	bcf	3,7	;select IRP bank0
  2219     1727  0800               	movf	0,w
  2220     1728  1283               	bcf	3,5	;RP0=0, select bank0
  2221     1729  1303               	bcf	3,6	;RP1=0, select bank0
  2222     172A  00D8               	movwf	vfpfcnvrt@cp
  2223     172B                     l3559:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2226     172B  0858               	movf	vfpfcnvrt@cp,w
  2227     172C  0084               	movwf	4
  2228     172D  160A  118A  200A  160A  118A  	fcall	stringdir
  2229     1732  00D7               	movwf	vfpfcnvrt@c
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2232     1733  2F3C               	goto	l3567
  2233     1734                     l3561:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2236     1734  3001               	movlw	1
  2237     1735  07D8               	addwf	vfpfcnvrt@cp,f
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
  2240     1736  2F47               	goto	l3569
  2241     1737                     l941:	
  2242                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  2243                           
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2246     1737  306C               	movlw	108
  2247     1738  00D7               	movwf	vfpfcnvrt@c
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
  2250     1739  2F47               	goto	l3569
  2251     173A                     l3563:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2254     173A  01D7               	clrf	vfpfcnvrt@c
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
  2257     173B  2F47               	goto	l3569
  2258     173C                     l3567:
  2259     173C  0857               	movf	vfpfcnvrt@c,w
  2260                           
  2261                           ; Switch size 1, requested type "simple"
  2262                           ; Number of cases is 3, Range of values is 76 to 108
  2263                           ; switch strategies available:
  2264                           ; Name         Instructions Cycles
  2265                           ; simple_byte           10     6 (average)
  2266                           ; direct_byte          110    11 (fixed)
  2267                           ; jumptable            263     9 (fixed)
  2268                           ;	Chosen strategy is simple_byte
  2269     173D  3A4C               	xorlw	76	; case 76
  2270     173E  1903               	skipnz
  2271     173F  2F34               	goto	l3561
  2272     1740  3A2A               	xorlw	42	; case 102
  2273     1741  1903               	skipnz
  2274     1742  2F37               	goto	l941
  2275     1743  3A0A               	xorlw	10	; case 108
  2276     1744  1903               	skipnz
  2277     1745  2F34               	goto	l3561
  2278     1746  2F3A               	goto	l3563
  2279     1747                     l3569:
  2280     1747  0858               	movf	vfpfcnvrt@cp,w
  2281     1748  0084               	movwf	4
  2282     1749  160A  118A  200A  160A  118A  	fcall	stringdir
  2283     174E  3A66               	xorlw	102
  2284     174F  1D03               	skipz
  2285     1750  2F52               	goto	u4801
  2286     1751  2F53               	goto	u4800
  2287     1752                     u4801:
  2288     1752  2FCF               	goto	l3589
  2289     1753                     u4800:
  2290     1753  2F84               	goto	l3577
  2291     1754                     l3571:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2294     1754  1683               	bsf	3,5	;RP0=1, select bank1
  2295     1755  1303               	bcf	3,6	;RP1=0, select bank1
  2296     1756  084F               	movf	vfpfcnvrt@ap^(0+128),w
  2297     1757  0084               	movwf	4
  2298     1758  0800               	movf	0,w
  2299     1759  00FF               	movwf	btemp+1
  2300     175A  3004               	movlw	4
  2301     175B  0780               	addwf	0,f
  2302     175C  087F               	movf	btemp+1,w
  2303     175D  0084               	movwf	4
  2304     175E  0800               	movf	0,w
  2305     175F  1283               	bcf	3,5	;RP0=0, select bank0
  2306     1760  1303               	bcf	3,6	;RP1=0, select bank0
  2307     1761  00D3               	movwf	vfpfcnvrt@convarg
  2308     1762  0A84               	incf	4,f
  2309     1763  0800               	movf	0,w
  2310     1764  00D4               	movwf	vfpfcnvrt@convarg+1
  2311     1765  0A84               	incf	4,f
  2312     1766  0800               	movf	0,w
  2313     1767  00D5               	movwf	vfpfcnvrt@convarg+2
  2314     1768  0A84               	incf	4,f
  2315     1769  0800               	movf	0,w
  2316     176A  00D6               	movwf	vfpfcnvrt@convarg+3
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
  2319     176B  2F8C               	goto	l3579
  2320     176C                     l3573:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2323     176C  1683               	bsf	3,5	;RP0=1, select bank1
  2324     176D  1303               	bcf	3,6	;RP1=0, select bank1
  2325     176E  084F               	movf	vfpfcnvrt@ap^(0+128),w
  2326     176F  0084               	movwf	4
  2327     1770  0800               	movf	0,w
  2328     1771  00FF               	movwf	btemp+1
  2329     1772  3004               	movlw	4
  2330     1773  0780               	addwf	0,f
  2331     1774  087F               	movf	btemp+1,w
  2332     1775  0084               	movwf	4
  2333     1776  0800               	movf	0,w
  2334     1777  1283               	bcf	3,5	;RP0=0, select bank0
  2335     1778  1303               	bcf	3,6	;RP1=0, select bank0
  2336     1779  00D3               	movwf	vfpfcnvrt@convarg
  2337     177A  0A84               	incf	4,f
  2338     177B  0800               	movf	0,w
  2339     177C  00D4               	movwf	vfpfcnvrt@convarg+1
  2340     177D  0A84               	incf	4,f
  2341     177E  0800               	movf	0,w
  2342     177F  00D5               	movwf	vfpfcnvrt@convarg+2
  2343     1780  0A84               	incf	4,f
  2344     1781  0800               	movf	0,w
  2345     1782  00D6               	movwf	vfpfcnvrt@convarg+3
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
  2348     1783  2F8C               	goto	l3579
  2349     1784                     l3577:
  2350     1784  0857               	movf	vfpfcnvrt@c,w
  2351                           
  2352                           ; Switch size 1, requested type "simple"
  2353                           ; Number of cases is 2, Range of values is 76 to 108
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte            7     4 (average)
  2357                           ; direct_byte          110    11 (fixed)
  2358                           ; jumptable            263     9 (fixed)
  2359                           ;	Chosen strategy is simple_byte
  2360     1785  3A4C               	xorlw	76	; case 76
  2361     1786  1903               	skipnz
  2362     1787  2F6C               	goto	l3573
  2363     1788  3A20               	xorlw	32	; case 108
  2364     1789  1903               	skipnz
  2365     178A  2F54               	goto	l3571
  2366     178B  2F8C               	goto	l3579
  2367     178C                     l3579:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2370     178C  1683               	bsf	3,5	;RP0=1, select bank1
  2371     178D  1303               	bcf	3,6	;RP1=0, select bank1
  2372     178E  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2373     178F  0084               	movwf	4
  2374     1790  1283               	bcf	3,5	;RP0=0, select bank0
  2375     1791  1303               	bcf	3,6	;RP1=0, select bank0
  2376     1792  0858               	movf	vfpfcnvrt@cp,w
  2377     1793  3E01               	addlw	1
  2378     1794  0080               	movwf	0
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2381     1795  2FC4               	goto	l3587
  2382     1796                     l3581:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (int) efgtoa(fp, convarg.f, *cp);
  2385     1796  1683               	bsf	3,5	;RP0=1, select bank1
  2386     1797  1303               	bcf	3,6	;RP1=0, select bank1
  2387     1798  084C               	movf	vfpfcnvrt@fp^(0+128),w
  2388     1799  1283               	bcf	3,5	;RP0=0, select bank0
  2389     179A  1303               	bcf	3,6	;RP1=0, select bank0
  2390     179B  00C6               	movwf	efgtoa@fp
  2391     179C  1683               	bsf	3,5	;RP0=1, select bank1
  2392     179D  1303               	bcf	3,6	;RP1=0, select bank1
  2393     179E  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2394     179F  1283               	bcf	3,5	;RP0=0, select bank0
  2395     17A0  1303               	bcf	3,6	;RP1=0, select bank0
  2396     17A1  00C7               	movwf	efgtoa@fp+1
  2397     17A2  0856               	movf	vfpfcnvrt@convarg+3,w
  2398     17A3  00CB               	movwf	efgtoa@f+3
  2399     17A4  0855               	movf	vfpfcnvrt@convarg+2,w
  2400     17A5  00CA               	movwf	efgtoa@f+2
  2401     17A6  0854               	movf	vfpfcnvrt@convarg+1,w
  2402     17A7  00C9               	movwf	efgtoa@f+1
  2403     17A8  0853               	movf	vfpfcnvrt@convarg,w
  2404     17A9  00C8               	movwf	efgtoa@f
  2405     17AA  0858               	movf	vfpfcnvrt@cp,w
  2406     17AB  0084               	movwf	4
  2407     17AC  160A  118A  200A  160A  118A  	fcall	stringdir
  2408     17B1  00CC               	movwf	efgtoa@c
  2409     17B2  160A  118A  25D5  160A  118A  	fcall	_efgtoa
  2410     17B7  1283               	bcf	3,5	;RP0=0, select bank0
  2411     17B8  1303               	bcf	3,6	;RP1=0, select bank0
  2412     17B9  0847               	movf	?_efgtoa+1,w
  2413     17BA  1683               	bsf	3,5	;RP0=1, select bank1
  2414     17BB  1303               	bcf	3,6	;RP1=0, select bank1
  2415     17BC  00CD               	movwf	(?_vfpfcnvrt+1)^(0+128)
  2416     17BD  1283               	bcf	3,5	;RP0=0, select bank0
  2417     17BE  1303               	bcf	3,6	;RP1=0, select bank0
  2418     17BF  0846               	movf	?_efgtoa,w
  2419     17C0  1683               	bsf	3,5	;RP0=1, select bank1
  2420     17C1  1303               	bcf	3,6	;RP1=0, select bank1
  2421     17C2  00CC               	movwf	?_vfpfcnvrt^(0+128)
  2422     17C3  2FFF               	goto	l952
  2423     17C4                     l3587:
  2424     17C4  0858               	movf	vfpfcnvrt@cp,w
  2425     17C5  0084               	movwf	4
  2426     17C6  160A  118A  200A  160A  118A  	fcall	stringdir
  2427                           
  2428                           ; Switch size 1, requested type "simple"
  2429                           ; Number of cases is 1, Range of values is 102 to 102
  2430                           ; switch strategies available:
  2431                           ; Name         Instructions Cycles
  2432                           ; simple_byte            4     3 (average)
  2433                           ; direct_byte           14    11 (fixed)
  2434                           ; jumptable            263     9 (fixed)
  2435                           ;	Chosen strategy is simple_byte
  2436     17CB  3A66               	xorlw	102	; case 102
  2437     17CC  1903               	skipnz
  2438     17CD  2F96               	goto	l3581
  2439     17CE  2FCF               	goto	l3589
  2440     17CF                     l3589:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2443     17CF  1683               	bsf	3,5	;RP0=1, select bank1
  2444     17D0  1303               	bcf	3,6	;RP1=0, select bank1
  2445     17D1  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2446     17D2  0084               	movwf	4
  2447     17D3  3001               	movlw	1
  2448     17D4  0780               	addwf	0,f
  2449     17D5                     l3591:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2452     17D5  01CC               	clrf	?_vfpfcnvrt^(0+128)
  2453     17D6  01CD               	clrf	(?_vfpfcnvrt+1)^(0+128)
  2454     17D7  2FFF               	goto	l952
  2455     17D8                     l3595:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2458     17D8  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2459     17D9  0084               	movwf	4
  2460     17DA  0800               	movf	0,w
  2461     17DB  0084               	movwf	4
  2462     17DC  160A  118A  200A  160A  118A  	fcall	stringdir
  2463     17E1  1283               	bcf	3,5	;RP0=0, select bank0
  2464     17E2  1303               	bcf	3,6	;RP1=0, select bank0
  2465     17E3  00D1               	movwf	??_vfpfcnvrt
  2466     17E4  01D2               	clrf	??_vfpfcnvrt+1
  2467     17E5  0851               	movf	??_vfpfcnvrt,w
  2468     17E6  00F0               	movwf	fputc@c
  2469     17E7  0852               	movf	??_vfpfcnvrt+1,w
  2470     17E8  00F1               	movwf	fputc@c+1
  2471     17E9  1683               	bsf	3,5	;RP0=1, select bank1
  2472     17EA  1303               	bcf	3,6	;RP1=0, select bank1
  2473     17EB  084C               	movf	vfpfcnvrt@fp^(0+128),w
  2474     17EC  00F2               	movwf	fputc@fp
  2475     17ED  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2476     17EE  00F3               	movwf	fputc@fp+1
  2477     17EF  160A  118A  2228  160A  118A  	fcall	_fputc
  2478     17F4                     l3597:
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2481     17F4  1683               	bsf	3,5	;RP0=1, select bank1
  2482     17F5  1303               	bcf	3,6	;RP1=0, select bank1
  2483     17F6  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  2484     17F7  0084               	movwf	4
  2485     17F8  3001               	movlw	1
  2486     17F9  1383               	bcf	3,7	;select IRP bank0
  2487     17FA  0780               	addwf	0,f
  2488     17FB                     l3599:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2491     17FB  3001               	movlw	1
  2492     17FC  00CC               	movwf	?_vfpfcnvrt^(0+128)
  2493     17FD  3000               	movlw	0
  2494     17FE  00CD               	movwf	(?_vfpfcnvrt^(0+128)+1)
  2495     17FF                     l952:
  2496     17FF  0008               	return
  2497     1800                     __end_of_vfpfcnvrt:
  2498                           
  2499                           	psect	text4
  2500     106A                     __ptext4:	
  2501 ;; *************** function _read_prec_or_width *****************
  2502 ;; Defined at:
  2503 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  2506 ;;		 -> vfprintf@cfmt(1), 
  2507 ;;  ap              1    7[COMMON] PTR PTR void [1]
  2508 ;;		 -> snprintf@ap(1), 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  c               1    8[COMMON] unsigned char 
  2511 ;;  n               2    9[COMMON] int 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  2    6[COMMON] int 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         2       0       0       0       0
  2522 ;;      Locals:         3       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0
  2524 ;;      Totals:         5       0       0       0       0
  2525 ;;Total ram usage:        5 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 1
  2528 ;; This function calls:
  2529 ;;		___wmul
  2530 ;; This function is called by:
  2531 ;;		_vfpfcnvrt
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535     106A                     _read_prec_or_width:	
  2536                           ;psect for function _read_prec_or_width
  2537                           
  2538     106A                     l3441:	
  2539                           ;incstack = 0
  2540                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2541                           
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2544     106A  01F9               	clrf	read_prec_or_width@n
  2545     106B  01FA               	clrf	read_prec_or_width@n+1
  2546     106C                     l3443:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2549     106C  0876               	movf	read_prec_or_width@fmt,w
  2550     106D  0084               	movwf	4
  2551     106E  1383               	bcf	3,7	;select IRP bank0
  2552     106F  0800               	movf	0,w
  2553     1070  0084               	movwf	4
  2554     1071  160A  118A  200A  160A  118A  	fcall	stringdir
  2555     1076  3A2A               	xorlw	42
  2556     1077  1D03               	skipz
  2557     1078  287A               	goto	u4711
  2558     1079  287B               	goto	u4710
  2559     107A                     u4711:
  2560     107A  28A7               	goto	l3453
  2561     107B                     u4710:
  2562     107B                     l3445:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2565     107B  0876               	movf	read_prec_or_width@fmt,w
  2566     107C  0084               	movwf	4
  2567     107D  3001               	movlw	1
  2568     107E  0780               	addwf	0,f
  2569     107F                     l3447:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2572     107F  0877               	movf	read_prec_or_width@ap,w
  2573     1080  0084               	movwf	4
  2574     1081  0800               	movf	0,w
  2575     1082  00FF               	movwf	btemp+1
  2576     1083  3002               	movlw	2
  2577     1084  0780               	addwf	0,f
  2578     1085  087F               	movf	btemp+1,w
  2579     1086  0084               	movwf	4
  2580     1087  0800               	movf	0,w
  2581     1088  00F9               	movwf	read_prec_or_width@n
  2582     1089  0A84               	incf	4,f
  2583     108A  0800               	movf	0,w
  2584     108B  00FA               	movwf	read_prec_or_width@n+1
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2587     108C  28B8               	goto	l3455
  2588     108D                     l3449:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2591     108D  087A               	movf	read_prec_or_width@n+1,w
  2592     108E  00F1               	movwf	___wmul@multiplier+1
  2593     108F  0879               	movf	read_prec_or_width@n,w
  2594     1090  00F0               	movwf	___wmul@multiplier
  2595     1091  300A               	movlw	10
  2596     1092  00F2               	movwf	___wmul@multiplicand
  2597     1093  3000               	movlw	0
  2598     1094  00F3               	movwf	___wmul@multiplicand+1
  2599     1095  160A  158A  2542  160A  118A  	fcall	___wmul
  2600     109A  0878               	movf	read_prec_or_width@c,w
  2601     109B  0770               	addwf	?___wmul,w
  2602     109C  00F9               	movwf	read_prec_or_width@n
  2603     109D  3000               	movlw	0
  2604     109E  1803               	skipnc
  2605     109F  3001               	movlw	1
  2606     10A0  0771               	addwf	?___wmul+1,w
  2607     10A1  00FA               	movwf	read_prec_or_width@n+1
  2608     10A2                     l3451:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2611     10A2  0876               	movf	read_prec_or_width@fmt,w
  2612     10A3  0084               	movwf	4
  2613     10A4  3001               	movlw	1
  2614     10A5  1383               	bcf	3,7	;select IRP bank0
  2615     10A6  0780               	addwf	0,f
  2616     10A7                     l3453:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2619     10A7  0876               	movf	read_prec_or_width@fmt,w
  2620     10A8  0084               	movwf	4
  2621     10A9  0800               	movf	0,w
  2622     10AA  0084               	movwf	4
  2623     10AB  160A  118A  200A  160A  118A  	fcall	stringdir
  2624     10B0  3ED0               	addlw	208
  2625     10B1  00F8               	movwf	read_prec_or_width@c
  2626     10B2  300A               	movlw	10
  2627     10B3  0278               	subwf	read_prec_or_width@c,w
  2628     10B4  1C03               	skipc
  2629     10B5  28B7               	goto	u4721
  2630     10B6  28B8               	goto	u4720
  2631     10B7                     u4721:
  2632     10B7  288D               	goto	l3449
  2633     10B8                     u4720:
  2634     10B8                     l3455:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2637     10B8  087A               	movf	read_prec_or_width@n+1,w
  2638     10B9  00F7               	movwf	?_read_prec_or_width+1
  2639     10BA  0879               	movf	read_prec_or_width@n,w
  2640     10BB  00F6               	movwf	?_read_prec_or_width
  2641     10BC                     l932:
  2642     10BC  0008               	return
  2643     10BD                     __end_of_read_prec_or_width:
  2644                           
  2645                           	psect	text5
  2646     1D42                     __ptext5:	
  2647 ;; *************** function ___wmul *****************
  2648 ;; Defined at:
  2649 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  multiplier      2    0[COMMON] unsigned int 
  2652 ;;  multiplicand    2    2[COMMON] unsigned int 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  product         2    4[COMMON] unsigned int 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2    0[COMMON] unsigned int 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         4       0       0       0       0
  2665 ;;      Locals:         2       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0
  2667 ;;      Totals:         6       0       0       0       0
  2668 ;;Total ram usage:        6 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_read_prec_or_width
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677     1D42                     ___wmul:	
  2678                           ;psect for function ___wmul
  2679                           
  2680     1D42                     l2723:	
  2681                           ;incstack = 0
  2682                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2683                           
  2684     1D42  01F4               	clrf	___wmul@product
  2685     1D43  01F5               	clrf	___wmul@product+1
  2686     1D44                     l2725:
  2687     1D44  1C70               	btfss	___wmul@multiplier,0
  2688     1D45  2D47               	goto	u3161
  2689     1D46  2D48               	goto	u3160
  2690     1D47                     u3161:
  2691     1D47  2D4E               	goto	l364
  2692     1D48                     u3160:
  2693     1D48                     l2727:
  2694     1D48  0872               	movf	___wmul@multiplicand,w
  2695     1D49  07F4               	addwf	___wmul@product,f
  2696     1D4A  1803               	skipnc
  2697     1D4B  0AF5               	incf	___wmul@product+1,f
  2698     1D4C  0873               	movf	___wmul@multiplicand+1,w
  2699     1D4D  07F5               	addwf	___wmul@product+1,f
  2700     1D4E                     l364:
  2701     1D4E  3001               	movlw	1
  2702     1D4F                     u3175:
  2703     1D4F  1003               	clrc
  2704     1D50  0DF2               	rlf	___wmul@multiplicand,f
  2705     1D51  0DF3               	rlf	___wmul@multiplicand+1,f
  2706     1D52  3EFF               	addlw	-1
  2707     1D53  1D03               	skipz
  2708     1D54  2D4F               	goto	u3175
  2709     1D55                     l2729:
  2710     1D55  3001               	movlw	1
  2711     1D56                     u3185:
  2712     1D56  1003               	clrc
  2713     1D57  0CF1               	rrf	___wmul@multiplier+1,f
  2714     1D58  0CF0               	rrf	___wmul@multiplier,f
  2715     1D59  3EFF               	addlw	-1
  2716     1D5A  1D03               	skipz
  2717     1D5B  2D56               	goto	u3185
  2718     1D5C                     l2731:
  2719     1D5C  0870               	movf	___wmul@multiplier,w
  2720     1D5D  0471               	iorwf	___wmul@multiplier+1,w
  2721     1D5E  1D03               	btfss	3,2
  2722     1D5F  2D61               	goto	u3191
  2723     1D60  2D62               	goto	u3190
  2724     1D61                     u3191:
  2725     1D61  2D44               	goto	l2725
  2726     1D62                     u3190:
  2727     1D62                     l2733:
  2728     1D62  0875               	movf	___wmul@product+1,w
  2729     1D63  00F1               	movwf	?___wmul+1
  2730     1D64  0874               	movf	___wmul@product,w
  2731     1D65  00F0               	movwf	?___wmul
  2732     1D66                     l366:
  2733     1D66  0008               	return
  2734     1D67                     __end_of___wmul:
  2735                           
  2736                           	psect	text6
  2737     15D5                     __ptext6:	
  2738 ;; *************** function _efgtoa *****************
  2739 ;; Defined at:
  2740 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  fp              2   38[BANK0 ] PTR struct _IO_FILE
  2743 ;;		 -> snprintf@f(11), 
  2744 ;;  f               4   40[BANK0 ] PTR struct _IO_FILE
  2745 ;;  c               1   44[BANK0 ] unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  u               4   40[BANK1 ] struct flui
  2748 ;;  g               4   36[BANK1 ] struct flui
  2749 ;;  l               4   29[BANK1 ] struct flui
  2750 ;;  h               4   25[BANK1 ] struct flui
  2751 ;;  ou              4   19[BANK1 ] struct flui
  2752 ;;  n               2   34[BANK1 ] int 
  2753 ;;  i               2   23[BANK1 ] int 
  2754 ;;  w               2   17[BANK1 ] int 
  2755 ;;  e               2   15[BANK1 ] int 
  2756 ;;  m               2   13[BANK1 ] int 
  2757 ;;  d               2   11[BANK1 ] int 
  2758 ;;  t               2    4[BANK1 ] int 
  2759 ;;  p               2    2[BANK1 ] int 
  2760 ;;  ne              2    0[BANK1 ] int 
  2761 ;;  sign            1   33[BANK1 ] unsigned char 
  2762 ;;  nmode           1   10[BANK1 ] unsigned char 
  2763 ;;  mode            1    9[BANK1 ] unsigned char 
  2764 ;;  pp              1    8[BANK1 ] unsigned char 
  2765 ;;  esign           1    0        unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  2   38[BANK0 ] int 
  2768 ;; Registers used:
  2769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       7       0       0       0
  2776 ;;      Locals:         0       0      44       0       0
  2777 ;;      Temps:          0       4       0       0       0
  2778 ;;      Totals:         0      11      44       0       0
  2779 ;;Total ram usage:       55 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 4
  2782 ;; This function calls:
  2783 ;;		___fladd
  2784 ;;		___fldiv
  2785 ;;		___fleq
  2786 ;;		___flge
  2787 ;;		___flmul
  2788 ;;		___flneg
  2789 ;;		___flsub
  2790 ;;		___fltol
  2791 ;;		___fpclassifyf
  2792 ;;		_floorf
  2793 ;;		_labs
  2794 ;;		_memcpy
  2795 ;;		_pad
  2796 ;;		_strcpy
  2797 ;; This function is called by:
  2798 ;;		_vfpfcnvrt
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     15D5                     _efgtoa:	
  2803                           ;psect for function _efgtoa
  2804                           
  2805     15D5                     l3227:	
  2806                           ;incstack = 0
  2807                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2808                           
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources\
      +                          c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\
      +                          doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2.
      +                          50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program 
      +                          Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2811     15D5  1683               	bsf	3,5	;RP0=1, select bank1
  2812     15D6  1303               	bcf	3,6	;RP1=0, select bank1
  2813     15D7  01C1               	clrf	efgtoa@sign^(0+128)
  2814     15D8                     l3229:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2817     15D8  1283               	bcf	3,5	;RP0=0, select bank0
  2818     15D9  1303               	bcf	3,6	;RP1=0, select bank0
  2819     15DA  084B               	movf	efgtoa@f+3,w
  2820     15DB  1683               	bsf	3,5	;RP0=1, select bank1
  2821     15DC  1303               	bcf	3,6	;RP1=0, select bank1
  2822     15DD  00C7               	movwf	(efgtoa@g+3)^(0+128)
  2823     15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2824     15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2825     15E0  084A               	movf	efgtoa@f+2,w
  2826     15E1  1683               	bsf	3,5	;RP0=1, select bank1
  2827     15E2  1303               	bcf	3,6	;RP1=0, select bank1
  2828     15E3  00C6               	movwf	(efgtoa@g+2)^(0+128)
  2829     15E4  1283               	bcf	3,5	;RP0=0, select bank0
  2830     15E5  1303               	bcf	3,6	;RP1=0, select bank0
  2831     15E6  0849               	movf	efgtoa@f+1,w
  2832     15E7  1683               	bsf	3,5	;RP0=1, select bank1
  2833     15E8  1303               	bcf	3,6	;RP1=0, select bank1
  2834     15E9  00C5               	movwf	(efgtoa@g+1)^(0+128)
  2835     15EA  1283               	bcf	3,5	;RP0=0, select bank0
  2836     15EB  1303               	bcf	3,6	;RP1=0, select bank0
  2837     15EC  0848               	movf	efgtoa@f,w
  2838     15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2839     15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2840     15EF  00C4               	movwf	efgtoa@g^(0+128)
  2841     15F0                     l3231:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2844     15F0  0847               	movf	(efgtoa@g+3)^(0+128),w
  2845     15F1  1283               	bcf	3,5	;RP0=0, select bank0
  2846     15F2  1303               	bcf	3,6	;RP1=0, select bank0
  2847     15F3  00BD               	movwf	___flge@ff1+3
  2848     15F4  1683               	bsf	3,5	;RP0=1, select bank1
  2849     15F5  1303               	bcf	3,6	;RP1=0, select bank1
  2850     15F6  0846               	movf	(efgtoa@g+2)^(0+128),w
  2851     15F7  1283               	bcf	3,5	;RP0=0, select bank0
  2852     15F8  1303               	bcf	3,6	;RP1=0, select bank0
  2853     15F9  00BC               	movwf	___flge@ff1+2
  2854     15FA  1683               	bsf	3,5	;RP0=1, select bank1
  2855     15FB  1303               	bcf	3,6	;RP1=0, select bank1
  2856     15FC  0845               	movf	(efgtoa@g+1)^(0+128),w
  2857     15FD  1283               	bcf	3,5	;RP0=0, select bank0
  2858     15FE  1303               	bcf	3,6	;RP1=0, select bank0
  2859     15FF  00BB               	movwf	___flge@ff1+1
  2860     1600  1683               	bsf	3,5	;RP0=1, select bank1
  2861     1601  1303               	bcf	3,6	;RP1=0, select bank1
  2862     1602  0844               	movf	efgtoa@g^(0+128),w
  2863     1603  1283               	bcf	3,5	;RP0=0, select bank0
  2864     1604  1303               	bcf	3,6	;RP1=0, select bank0
  2865     1605  00BA               	movwf	___flge@ff1
  2866     1606  3000               	movlw	0
  2867     1607  00C1               	movwf	___flge@ff2+3
  2868     1608  3000               	movlw	0
  2869     1609  00C0               	movwf	___flge@ff2+2
  2870     160A  3000               	movlw	0
  2871     160B  00BF               	movwf	___flge@ff2+1
  2872     160C  3000               	movlw	0
  2873     160D  00BE               	movwf	___flge@ff2
  2874     160E  160A  118A  22C2  160A  118A  	fcall	___flge
  2875     1613  1803               	btfsc	3,0
  2876     1614  2E16               	goto	u4361
  2877     1615  2E17               	goto	u4360
  2878     1616                     u4361:
  2879     1616  2E32               	goto	l3237
  2880     1617                     u4360:
  2881     1617                     l3233:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2884     1617  3001               	movlw	1
  2885     1618  1683               	bsf	3,5	;RP0=1, select bank1
  2886     1619  1303               	bcf	3,6	;RP1=0, select bank1
  2887     161A  00C1               	movwf	efgtoa@sign^(0+128)
  2888     161B                     l3235:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2891     161B  0847               	movf	(efgtoa@g+3)^(0+128),w
  2892     161C  00F3               	movwf	___flneg@f1+3
  2893     161D  0846               	movf	(efgtoa@g+2)^(0+128),w
  2894     161E  00F2               	movwf	___flneg@f1+2
  2895     161F  0845               	movf	(efgtoa@g+1)^(0+128),w
  2896     1620  00F1               	movwf	___flneg@f1+1
  2897     1621  0844               	movf	efgtoa@g^(0+128),w
  2898     1622  00F0               	movwf	___flneg@f1
  2899     1623  120A  118A  2003  160A  118A  	fcall	___flneg
  2900     1628  0873               	movf	?___flneg+3,w
  2901     1629  1683               	bsf	3,5	;RP0=1, select bank1
  2902     162A  1303               	bcf	3,6	;RP1=0, select bank1
  2903     162B  00C7               	movwf	(efgtoa@g+3)^(0+128)
  2904     162C  0872               	movf	?___flneg+2,w
  2905     162D  00C6               	movwf	(efgtoa@g+2)^(0+128)
  2906     162E  0871               	movf	?___flneg+1,w
  2907     162F  00C5               	movwf	(efgtoa@g+1)^(0+128)
  2908     1630  0870               	movf	?___flneg,w
  2909     1631  00C4               	movwf	efgtoa@g^(0+128)
  2910     1632                     l3237:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2913     1632  1683               	bsf	3,5	;RP0=1, select bank1
  2914     1633  1303               	bcf	3,6	;RP1=0, select bank1
  2915     1634  01C2               	clrf	efgtoa@n^(0+128)
  2916     1635  01C3               	clrf	(efgtoa@n+1)^(0+128)
  2917     1636                     l3239:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2920     1636  0867               	movf	(_width+1)^(0+128),w
  2921     1637  00B2               	movwf	(efgtoa@w+1)^(0+128)
  2922     1638  0866               	movf	_width^(0+128),w
  2923     1639  00B1               	movwf	efgtoa@w^(0+128)
  2924     163A                     l3241:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2927     163A  0841               	movf	efgtoa@sign^(0+128),w
  2928     163B  1903               	btfsc	3,2
  2929     163C  2E3E               	goto	u4371
  2930     163D  2E3F               	goto	u4370
  2931     163E                     u4371:
  2932     163E  2E4F               	goto	l3249
  2933     163F                     u4370:
  2934     163F                     l3243:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2937     163F  0841               	movf	efgtoa@sign^(0+128),w
  2938     1640  1D03               	btfss	3,2
  2939     1641  2E43               	goto	u4381
  2940     1642  2E44               	goto	u4380
  2941     1643                     u4381:
  2942     1643  2E49               	goto	l3247
  2943     1644                     u4380:
  2944     1644                     l3245:
  2945     1644  302B               	movlw	43
  2946     1645  00A6               	movwf	_efgtoa$899^(0+128)
  2947     1646  3000               	movlw	0
  2948     1647  00A7               	movwf	(_efgtoa$899^(0+128)+1)
  2949     1648  2E4D               	goto	l880
  2950     1649                     l3247:
  2951     1649  302D               	movlw	45
  2952     164A  00A6               	movwf	_efgtoa$899^(0+128)
  2953     164B  3000               	movlw	0
  2954     164C  00A7               	movwf	(_efgtoa$899^(0+128)+1)
  2955     164D                     l880:
  2956     164D  0826               	movf	_efgtoa$899^(0+128),w
  2957     164E  00C1               	movwf	efgtoa@sign^(0+128)
  2958     164F                     l3249:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2961     164F  0847               	movf	(efgtoa@g+3)^(0+128),w
  2962     1650  00F3               	movwf	___fpclassifyf@x+3
  2963     1651  0846               	movf	(efgtoa@g+2)^(0+128),w
  2964     1652  00F2               	movwf	___fpclassifyf@x+2
  2965     1653  0845               	movf	(efgtoa@g+1)^(0+128),w
  2966     1654  00F1               	movwf	___fpclassifyf@x+1
  2967     1655  0844               	movf	efgtoa@g^(0+128),w
  2968     1656  00F0               	movwf	___fpclassifyf@x
  2969     1657  120A  118A  200E  160A  118A  	fcall	___fpclassifyf
  2970     165C  0370               	decf	?___fpclassifyf,w
  2971     165D  0471               	iorwf	?___fpclassifyf+1,w
  2972     165E  1D03               	btfss	3,2
  2973     165F  2E61               	goto	u4391
  2974     1660  2E62               	goto	u4390
  2975     1661                     u4391:
  2976     1661  2EAD               	goto	l3263
  2977     1662                     u4390:
  2978     1662                     l3251:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2981     1662  1683               	bsf	3,5	;RP0=1, select bank1
  2982     1663  1303               	bcf	3,6	;RP1=0, select bank1
  2983     1664  0841               	movf	efgtoa@sign^(0+128),w
  2984     1665  1903               	btfsc	3,2
  2985     1666  2E68               	goto	u4401
  2986     1667  2E69               	goto	u4400
  2987     1668                     u4401:
  2988     1668  2E79               	goto	l3255
  2989     1669                     u4400:
  2990     1669                     l3253:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2993     1669  0841               	movf	efgtoa@sign^(0+128),w
  2994     166A  1283               	bcf	3,5	;RP0=0, select bank2
  2995     166B  1703               	bsf	3,6	;RP1=1, select bank2
  2996     166C  0090               	movwf	_dbuf^(0+256)
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
  2999     166D  30FF               	movlw	255
  3000     166E  1683               	bsf	3,5	;RP0=1, select bank1
  3001     166F  1303               	bcf	3,6	;RP1=0, select bank1
  3002     1670  07B1               	addwf	efgtoa@w^(0+128),f
  3003     1671  1803               	skipnc
  3004     1672  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3005     1673  30FF               	movlw	255
  3006     1674  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3009     1675  3001               	movlw	1
  3010     1676  00C2               	movwf	efgtoa@n^(0+128)
  3011     1677  3000               	movlw	0
  3012     1678  00C3               	movwf	(efgtoa@n^(0+128)+1)
  3013     1679                     l3255:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3016     1679  0842               	movf	efgtoa@n^(0+128),w
  3017     167A  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3018     167B  00F0               	movwf	strcpy@dest
  3019     167C  304C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3020     167D  00F1               	movwf	strcpy@src
  3021     167E  160A  158A  2438  160A  118A  	fcall	_strcpy
  3022     1683                     l3257:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3025     1683  30FD               	movlw	253
  3026     1684  1683               	bsf	3,5	;RP0=1, select bank1
  3027     1685  1303               	bcf	3,6	;RP1=0, select bank1
  3028     1686  07B1               	addwf	efgtoa@w^(0+128),f
  3029     1687  1803               	skipnc
  3030     1688  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3031     1689  30FF               	movlw	255
  3032     168A  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3033     168B                     l3259:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (int) pad(fp, &dbuf[0], w);
  3036     168B  1283               	bcf	3,5	;RP0=0, select bank0
  3037     168C  1303               	bcf	3,6	;RP1=0, select bank0
  3038     168D  0846               	movf	efgtoa@fp,w
  3039     168E  00A8               	movwf	pad@fp
  3040     168F  0847               	movf	efgtoa@fp+1,w
  3041     1690  00A9               	movwf	pad@fp+1
  3042     1691  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3043     1692  00AA               	movwf	pad@buf
  3044     1693  1683               	bsf	3,5	;RP0=1, select bank1
  3045     1694  1303               	bcf	3,6	;RP1=0, select bank1
  3046     1695  0832               	movf	(efgtoa@w+1)^(0+128),w
  3047     1696  1283               	bcf	3,5	;RP0=0, select bank0
  3048     1697  1303               	bcf	3,6	;RP1=0, select bank0
  3049     1698  00AC               	movwf	pad@p+1
  3050     1699  1683               	bsf	3,5	;RP0=1, select bank1
  3051     169A  1303               	bcf	3,6	;RP1=0, select bank1
  3052     169B  0831               	movf	efgtoa@w^(0+128),w
  3053     169C  1283               	bcf	3,5	;RP0=0, select bank0
  3054     169D  1303               	bcf	3,6	;RP1=0, select bank0
  3055     169E  00AB               	movwf	pad@p
  3056     169F  160A  158A  27AF  160A  118A  	fcall	_pad
  3057     16A4  1283               	bcf	3,5	;RP0=0, select bank0
  3058     16A5  1303               	bcf	3,6	;RP1=0, select bank0
  3059     16A6  0829               	movf	?_pad+1,w
  3060     16A7  00C7               	movwf	?_efgtoa+1
  3061     16A8  0828               	movf	?_pad,w
  3062     16A9  00C6               	movwf	?_efgtoa
  3063     16AA  120A  118A  2FE1   	goto	l883
  3064     16AD                     l3263:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3067     16AD  1683               	bsf	3,5	;RP0=1, select bank1
  3068     16AE  1303               	bcf	3,6	;RP1=0, select bank1
  3069     16AF  0847               	movf	(efgtoa@g+3)^(0+128),w
  3070     16B0  00F3               	movwf	___fpclassifyf@x+3
  3071     16B1  0846               	movf	(efgtoa@g+2)^(0+128),w
  3072     16B2  00F2               	movwf	___fpclassifyf@x+2
  3073     16B3  0845               	movf	(efgtoa@g+1)^(0+128),w
  3074     16B4  00F1               	movwf	___fpclassifyf@x+1
  3075     16B5  0844               	movf	efgtoa@g^(0+128),w
  3076     16B6  00F0               	movwf	___fpclassifyf@x
  3077     16B7  120A  118A  200E  160A  118A  	fcall	___fpclassifyf
  3078     16BC  0870               	movf	?___fpclassifyf,w
  3079     16BD  0471               	iorwf	?___fpclassifyf+1,w
  3080     16BE  1D03               	btfss	3,2
  3081     16BF  2EC1               	goto	u4411
  3082     16C0  2EC4               	goto	u4410
  3083     16C1                     u4411:
  3084     16C1  120A  118A  289B   	goto	l3277
  3085     16C4                     u4410:
  3086     16C4                     l3265:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3089     16C4  1683               	bsf	3,5	;RP0=1, select bank1
  3090     16C5  1303               	bcf	3,6	;RP1=0, select bank1
  3091     16C6  0841               	movf	efgtoa@sign^(0+128),w
  3092     16C7  1903               	btfsc	3,2
  3093     16C8  2ECA               	goto	u4421
  3094     16C9  2ECB               	goto	u4420
  3095     16CA                     u4421:
  3096     16CA  2EDB               	goto	l3269
  3097     16CB                     u4420:
  3098     16CB                     l3267:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3101     16CB  0841               	movf	efgtoa@sign^(0+128),w
  3102     16CC  1283               	bcf	3,5	;RP0=0, select bank2
  3103     16CD  1703               	bsf	3,6	;RP1=1, select bank2
  3104     16CE  0090               	movwf	_dbuf^(0+256)
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
  3107     16CF  30FF               	movlw	255
  3108     16D0  1683               	bsf	3,5	;RP0=1, select bank1
  3109     16D1  1303               	bcf	3,6	;RP1=0, select bank1
  3110     16D2  07B1               	addwf	efgtoa@w^(0+128),f
  3111     16D3  1803               	skipnc
  3112     16D4  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3113     16D5  30FF               	movlw	255
  3114     16D6  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3117     16D7  3001               	movlw	1
  3118     16D8  00C2               	movwf	efgtoa@n^(0+128)
  3119     16D9  3000               	movlw	0
  3120     16DA  00C3               	movwf	(efgtoa@n^(0+128)+1)
  3121     16DB                     l3269:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3124     16DB  0842               	movf	efgtoa@n^(0+128),w
  3125     16DC  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3126     16DD  00F0               	movwf	strcpy@dest
  3127     16DE  3050               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3128     16DF  00F1               	movwf	strcpy@src
  3129     16E0  160A  158A  2438  160A  118A  	fcall	_strcpy
  3130     16E5  2E83               	goto	l3257
  3131                           
  3132                           	psect	text7
  3133     1C38                     __ptext7:	
  3134 ;; *************** function _strcpy *****************
  3135 ;; Defined at:
  3136 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  dest            1    0[COMMON] PTR unsigned char 
  3139 ;;		 -> dbuf(80), 
  3140 ;;  src             1    1[COMMON] PTR const unsigned char 
  3141 ;;		 -> STR_9(4), STR_6(4), 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  d               1    2[COMMON] PTR unsigned char 
  3144 ;;		 -> dbuf(80), 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    0[COMMON] PTR unsigned char 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         2       0       0       0       0
  3155 ;;      Locals:         1       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0
  3157 ;;      Totals:         3       0       0       0       0
  3158 ;;Total ram usage:        3 bytes
  3159 ;; Hardware stack levels used: 2
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_efgtoa
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167     1C38                     _strcpy:	
  3168                           ;psect for function _strcpy
  3169                           
  3170     1C38                     l3143:	
  3171                           ;incstack = 0
  3172                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3173                           
  3174     1C38  0870               	movf	strcpy@dest,w
  3175     1C39  00F2               	movwf	strcpy@d
  3176     1C3A                     l3145:
  3177     1C3A  3001               	movlw	1
  3178     1C3B  07F1               	addwf	strcpy@src,f
  3179     1C3C  30FF               	movlw	-1
  3180     1C3D  0771               	addwf	strcpy@src,w
  3181     1C3E  0084               	movwf	4
  3182     1C3F  160A  118A  200A  160A  158A  	fcall	stringdir
  3183     1C44  00FF               	movwf	btemp+1
  3184     1C45  0872               	movf	strcpy@d,w
  3185     1C46  0AF2               	incf	strcpy@d,f
  3186     1C47  0084               	movwf	4
  3187     1C48  087F               	movf	btemp+1,w
  3188     1C49  1783               	bsf	3,7	;select IRP bank2
  3189     1C4A  0080               	movwf	0
  3190     1C4B  0800               	movf	0,w
  3191     1C4C  1D03               	btfss	3,2
  3192     1C4D  2C4F               	goto	u4181
  3193     1C4E  2C50               	goto	u4180
  3194     1C4F                     u4181:
  3195     1C4F  2C3A               	goto	l3145
  3196     1C50                     u4180:
  3197     1C50                     l1027:
  3198     1C50  0008               	return
  3199     1C51                     __end_of_strcpy:
  3200                           
  3201                           	psect	text8
  3202     1FAF                     __ptext8:	
  3203 ;; *************** function _pad *****************
  3204 ;; Defined at:
  3205 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  3208 ;;		 -> snprintf@f(11), 
  3209 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  3210 ;;		 -> dbuf(80), 
  3211 ;;  p               2   11[BANK0 ] int 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  i               2   13[BANK0 ] int 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  2    8[BANK0 ] int 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3223 ;;      Params:         0       5       0       0       0
  3224 ;;      Locals:         0       2       0       0       0
  3225 ;;      Temps:          1       0       0       0       0
  3226 ;;      Totals:         1       7       0       0       0
  3227 ;;Total ram usage:        8 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 3
  3230 ;; This function calls:
  3231 ;;		_fputc
  3232 ;;		_fputs
  3233 ;;		_strlen
  3234 ;; This function is called by:
  3235 ;;		_efgtoa
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     1FAF                     _pad:	
  3240                           ;psect for function _pad
  3241                           
  3242     1FAF                     l3105:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3245                           
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          205:  if (p < 0) {
  3248     1FAF  1283               	bcf	3,5	;RP0=0, select bank0
  3249     1FB0  1303               	bcf	3,6	;RP1=0, select bank0
  3250     1FB1  1FAC               	btfss	pad@p+1,7
  3251     1FB2  2FB4               	goto	u4081
  3252     1FB3  2FB5               	goto	u4080
  3253     1FB4                     u4081:
  3254     1FB4  2FB7               	goto	l868
  3255     1FB5                     u4080:
  3256     1FB5                     l3107:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3259     1FB5  01AB               	clrf	pad@p
  3260     1FB6  01AC               	clrf	pad@p+1
  3261     1FB7                     l868:	
  3262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  3263                           
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3266     1FB7  01AD               	clrf	pad@i
  3267     1FB8  01AE               	clrf	pad@i+1
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3270     1FB9  2FD1               	goto	l3113
  3271     1FBA                     l3109:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3274     1FBA  3020               	movlw	32
  3275     1FBB  00F0               	movwf	fputc@c
  3276     1FBC  3000               	movlw	0
  3277     1FBD  00F1               	movwf	fputc@c+1
  3278     1FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3279     1FBF  1303               	bcf	3,6	;RP1=0, select bank0
  3280     1FC0  0828               	movf	pad@fp,w
  3281     1FC1  00F2               	movwf	fputc@fp
  3282     1FC2  0829               	movf	pad@fp+1,w
  3283     1FC3  00F3               	movwf	fputc@fp+1
  3284     1FC4  160A  118A  2228  160A  158A  	fcall	_fputc
  3285     1FC9                     l3111:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3288     1FC9  3001               	movlw	1
  3289     1FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3290     1FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3291     1FCC  07AD               	addwf	pad@i,f
  3292     1FCD  1803               	skipnc
  3293     1FCE  0AAE               	incf	pad@i+1,f
  3294     1FCF  3000               	movlw	0
  3295     1FD0  07AE               	addwf	pad@i+1,f
  3296     1FD1                     l3113:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3299     1FD1  082E               	movf	pad@i+1,w
  3300     1FD2  3A80               	xorlw	128
  3301     1FD3  00FD               	movwf	??_pad
  3302     1FD4  082C               	movf	pad@p+1,w
  3303     1FD5  3A80               	xorlw	128
  3304     1FD6  027D               	subwf	??_pad,w
  3305     1FD7  1D03               	skipz
  3306     1FD8  2FDB               	goto	u4095
  3307     1FD9  082B               	movf	pad@p,w
  3308     1FDA  022D               	subwf	pad@i,w
  3309     1FDB                     u4095:
  3310     1FDB  1C03               	skipc
  3311     1FDC  2FDE               	goto	u4091
  3312     1FDD  2FDF               	goto	u4090
  3313     1FDE                     u4091:
  3314     1FDE  2FBA               	goto	l3109
  3315     1FDF                     u4090:
  3316     1FDF                     l3115:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3319     1FDF  1283               	bcf	3,5	;RP0=0, select bank0
  3320     1FE0  1303               	bcf	3,6	;RP1=0, select bank0
  3321     1FE1  082A               	movf	pad@buf,w
  3322     1FE2  00A0               	movwf	fputs@s
  3323     1FE3  0828               	movf	pad@fp,w
  3324     1FE4  00A1               	movwf	fputs@fp
  3325     1FE5  0829               	movf	pad@fp+1,w
  3326     1FE6  00A2               	movwf	fputs@fp+1
  3327     1FE7  160A  158A  25DF  160A  158A  	fcall	_fputs
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
  3330     1FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3331     1FED  1303               	bcf	3,6	;RP1=0, select bank0
  3332     1FEE  082A               	movf	pad@buf,w
  3333     1FEF  00F0               	movwf	strlen@s
  3334     1FF0  160A  158A  236A  160A  158A  	fcall	_strlen
  3335     1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  3336     1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  3337     1FF7  082B               	movf	pad@p,w
  3338     1FF8  0770               	addwf	?_strlen,w
  3339     1FF9  00A8               	movwf	?_pad
  3340     1FFA  082C               	movf	pad@p+1,w
  3341     1FFB  1803               	skipnc
  3342     1FFC  0A2C               	incf	pad@p+1,w
  3343     1FFD  0771               	addwf	?_strlen+1,w
  3344     1FFE  00A9               	movwf	?_pad+1
  3345     1FFF                     l872:
  3346     1FFF  0008               	return
  3347     2000                     __end_of_pad:
  3348                           
  3349                           	psect	text9
  3350     1B6A                     __ptext9:	
  3351 ;; *************** function _strlen *****************
  3352 ;; Defined at:
  3353 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  s               1    0[COMMON] PTR const unsigned char 
  3356 ;;		 -> dbuf(80), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  a               1    2[COMMON] PTR const unsigned char 
  3359 ;;		 -> dbuf(80), 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2    0[COMMON] unsigned int 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         2       0       0       0       0
  3370 ;;      Locals:         1       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0
  3372 ;;      Totals:         3       0       0       0       0
  3373 ;;Total ram usage:        3 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_pad
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382     1B6A                     _strlen:	
  3383                           ;psect for function _strlen
  3384                           
  3385     1B6A                     l2705:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3388                           
  3389     1B6A  0870               	movf	strlen@s,w
  3390     1B6B  00F2               	movwf	strlen@a
  3391     1B6C  2B6F               	goto	l2709
  3392     1B6D                     l2707:
  3393     1B6D  3001               	movlw	1
  3394     1B6E  07F0               	addwf	strlen@s,f
  3395     1B6F                     l2709:
  3396     1B6F  0870               	movf	strlen@s,w
  3397     1B70  0084               	movwf	4
  3398     1B71  1783               	bsf	3,7	;select IRP bank2
  3399     1B72  0800               	movf	0,w
  3400     1B73  1D03               	btfss	3,2
  3401     1B74  2B76               	goto	u3151
  3402     1B75  2B77               	goto	u3150
  3403     1B76                     u3151:
  3404     1B76  2B6D               	goto	l2707
  3405     1B77                     u3150:
  3406     1B77                     l2711:
  3407     1B77  0872               	movf	strlen@a,w
  3408     1B78  0270               	subwf	strlen@s,w
  3409     1B79  00F0               	movwf	?_strlen
  3410     1B7A  01F1               	clrf	?_strlen+1
  3411     1B7B  1BF0               	btfsc	?_strlen,7
  3412     1B7C  03F1               	decf	?_strlen+1,f
  3413     1B7D                     l1033:
  3414     1B7D  0008               	return
  3415     1B7E                     __end_of_strlen:
  3416                           
  3417                           	psect	text10
  3418     1DDF                     __ptext10:	
  3419 ;; *************** function _fputs *****************
  3420 ;; Defined at:
  3421 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  3424 ;;		 -> dbuf(80), 
  3425 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  3426 ;;		 -> snprintf@f(11), 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  i               2    6[BANK0 ] int 
  3429 ;;  c               1    5[BANK0 ] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  2    0[BANK0 ] int 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         0       3       0       0       0
  3440 ;;      Locals:         0       3       0       0       0
  3441 ;;      Temps:          0       2       0       0       0
  3442 ;;      Totals:         0       8       0       0       0
  3443 ;;Total ram usage:        8 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 2
  3446 ;; This function calls:
  3447 ;;		_fputc
  3448 ;; This function is called by:
  3449 ;;		_pad
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453     1DDF                     _fputs:	
  3454                           ;psect for function _fputs
  3455                           
  3456     1DDF                     l2697:	
  3457                           ;incstack = 0
  3458                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3459                           
  3460     1DDF  1283               	bcf	3,5	;RP0=0, select bank0
  3461     1DE0  1303               	bcf	3,6	;RP1=0, select bank0
  3462     1DE1  01A6               	clrf	fputs@i
  3463     1DE2  01A7               	clrf	fputs@i+1
  3464     1DE3  2DFC               	goto	l2703
  3465     1DE4                     l2699:
  3466     1DE4  0825               	movf	fputs@c,w
  3467     1DE5  00A3               	movwf	??_fputs
  3468     1DE6  01A4               	clrf	??_fputs+1
  3469     1DE7  0823               	movf	??_fputs,w
  3470     1DE8  00F0               	movwf	fputc@c
  3471     1DE9  0824               	movf	??_fputs+1,w
  3472     1DEA  00F1               	movwf	fputc@c+1
  3473     1DEB  0821               	movf	fputs@fp,w
  3474     1DEC  00F2               	movwf	fputc@fp
  3475     1DED  0822               	movf	fputs@fp+1,w
  3476     1DEE  00F3               	movwf	fputc@fp+1
  3477     1DEF  160A  118A  2228  160A  158A  	fcall	_fputc
  3478     1DF4                     l2701:
  3479     1DF4  3001               	movlw	1
  3480     1DF5  1283               	bcf	3,5	;RP0=0, select bank0
  3481     1DF6  1303               	bcf	3,6	;RP1=0, select bank0
  3482     1DF7  07A6               	addwf	fputs@i,f
  3483     1DF8  1803               	skipnc
  3484     1DF9  0AA7               	incf	fputs@i+1,f
  3485     1DFA  3000               	movlw	0
  3486     1DFB  07A7               	addwf	fputs@i+1,f
  3487     1DFC                     l2703:
  3488     1DFC  0826               	movf	fputs@i,w
  3489     1DFD  0720               	addwf	fputs@s,w
  3490     1DFE  00A3               	movwf	??_fputs
  3491     1DFF  0823               	movf	??_fputs,w
  3492     1E00  0084               	movwf	4
  3493     1E01  1783               	bsf	3,7	;select IRP bank2
  3494     1E02  0800               	movf	0,w
  3495     1E03  00A5               	movwf	fputs@c
  3496     1E04  0825               	movf	fputs@c,w
  3497     1E05  1D03               	btfss	3,2
  3498     1E06  2E08               	goto	u3141
  3499     1E07  2E09               	goto	u3140
  3500     1E08                     u3141:
  3501     1E08  2DE4               	goto	l2699
  3502     1E09                     u3140:
  3503     1E09                     l1018:
  3504     1E09  0008               	return
  3505     1E0A                     __end_of_fputs:
  3506                           
  3507                           	psect	text11
  3508     1228                     __ptext11:	
  3509 ;; *************** function _fputc *****************
  3510 ;; Defined at:
  3511 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  c               2    0[COMMON] int 
  3514 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  3515 ;;		 -> snprintf@f(11), 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  2    0[COMMON] int 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         4       0       0       0       0
  3528 ;;      Locals:         0       0       0       0       0
  3529 ;;      Temps:          9       0       0       0       0
  3530 ;;      Totals:        13       0       0       0       0
  3531 ;;Total ram usage:       13 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 1
  3534 ;; This function calls:
  3535 ;;		_putch
  3536 ;; This function is called by:
  3537 ;;		_pad
  3538 ;;		_vfpfcnvrt
  3539 ;;		_fputs
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543     1228                     _fputc:	
  3544                           ;psect for function _fputc
  3545                           
  3546     1228                     l2439:	
  3547                           ;incstack = 0
  3548                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3549                           
  3550     1228  0872               	movf	fputc@fp,w
  3551     1229  0473               	iorwf	fputc@fp+1,w
  3552     122A  1903               	btfsc	3,2
  3553     122B  2A2D               	goto	u2581
  3554     122C  2A2E               	goto	u2580
  3555     122D                     u2581:
  3556     122D  2A34               	goto	l2443
  3557     122E                     u2580:
  3558     122E                     l2441:
  3559     122E  0872               	movf	fputc@fp,w
  3560     122F  0473               	iorwf	fputc@fp+1,w
  3561     1230  1D03               	btfss	3,2
  3562     1231  2A33               	goto	u2591
  3563     1232  2A34               	goto	u2590
  3564     1233                     u2591:
  3565     1233  2A3B               	goto	l2445
  3566     1234                     u2590:
  3567     1234                     l2443:
  3568     1234  0870               	movf	fputc@c,w
  3569     1235  160A  118A  2069  160A  118A  	fcall	_putch
  3570     123A  2AC1               	goto	l1010
  3571     123B                     l2445:
  3572     123B  0872               	movf	fputc@fp,w
  3573     123C  3E09               	addlw	9
  3574     123D  00F4               	movwf	??_fputc
  3575     123E  0873               	movf	fputc@fp+1,w
  3576     123F  1803               	skipnc
  3577     1240  3E01               	addlw	1
  3578     1241  3E00               	addlw	0
  3579     1242  00F5               	movwf	??_fputc+1
  3580     1243  0874               	movf	??_fputc,w
  3581     1244  0084               	movwf	4
  3582     1245  1783               	bsf	3,7
  3583     1246  1C75               	btfss	??_fputc+1,0
  3584     1247  1383               	bcf	3,7
  3585     1248  0800               	movf	0,w
  3586     1249  00F6               	movwf	??_fputc+2
  3587     124A  0A84               	incf	4,f
  3588     124B  0800               	movf	0,w
  3589     124C  00F7               	movwf	??_fputc+3
  3590     124D  0876               	movf	??_fputc+2,w
  3591     124E  0477               	iorwf	??_fputc+3,w
  3592     124F  1903               	btfsc	3,2
  3593     1250  2A52               	goto	u2601
  3594     1251  2A53               	goto	u2600
  3595     1252                     u2601:
  3596     1252  2A85               	goto	l2449
  3597     1253                     u2600:
  3598     1253                     l2447:
  3599     1253  0872               	movf	fputc@fp,w
  3600     1254  3E09               	addlw	9
  3601     1255  00F4               	movwf	??_fputc
  3602     1256  0873               	movf	fputc@fp+1,w
  3603     1257  1803               	skipnc
  3604     1258  3E01               	addlw	1
  3605     1259  3E00               	addlw	0
  3606     125A  00F5               	movwf	??_fputc+1
  3607     125B  0874               	movf	??_fputc,w
  3608     125C  0084               	movwf	4
  3609     125D  1783               	bsf	3,7
  3610     125E  1C75               	btfss	??_fputc+1,0
  3611     125F  1383               	bcf	3,7
  3612     1260  0800               	movf	0,w
  3613     1261  00F6               	movwf	??_fputc+2
  3614     1262  0A84               	incf	4,f
  3615     1263  0800               	movf	0,w
  3616     1264  00F7               	movwf	??_fputc+3
  3617     1265  0872               	movf	fputc@fp,w
  3618     1266  3E02               	addlw	2
  3619     1267  00F8               	movwf	??_fputc+4
  3620     1268  0873               	movf	fputc@fp+1,w
  3621     1269  1803               	skipnc
  3622     126A  3E01               	addlw	1
  3623     126B  3E00               	addlw	0
  3624     126C  00F9               	movwf	??_fputc+5
  3625     126D  0878               	movf	??_fputc+4,w
  3626     126E  0084               	movwf	4
  3627     126F  1783               	bsf	3,7
  3628     1270  1C79               	btfss	??_fputc+5,0
  3629     1271  1383               	bcf	3,7
  3630     1272  0800               	movf	0,w
  3631     1273  00FA               	movwf	??_fputc+6
  3632     1274  0A84               	incf	4,f
  3633     1275  0800               	movf	0,w
  3634     1276  00FB               	movwf	??_fputc+7
  3635     1277  087B               	movf	??_fputc+7,w
  3636     1278  3A80               	xorlw	128
  3637     1279  00FC               	movwf	??_fputc+8
  3638     127A  0877               	movf	??_fputc+3,w
  3639     127B  3A80               	xorlw	128
  3640     127C  027C               	subwf	??_fputc+8,w
  3641     127D  1D03               	skipz
  3642     127E  2A81               	goto	u2615
  3643     127F  0876               	movf	??_fputc+2,w
  3644     1280  027A               	subwf	??_fputc+6,w
  3645     1281                     u2615:
  3646     1281  1803               	skipnc
  3647     1282  2A84               	goto	u2611
  3648     1283  2A85               	goto	u2610
  3649     1284                     u2611:
  3650     1284  2AC1               	goto	l1010
  3651     1285                     u2610:
  3652     1285                     l2449:
  3653     1285  0872               	movf	fputc@fp,w
  3654     1286  0084               	movwf	4
  3655     1287  1783               	bsf	3,7
  3656     1288  1C73               	btfss	fputc@fp+1,0
  3657     1289  1383               	bcf	3,7
  3658     128A  0800               	movf	0,w
  3659     128B  00F4               	movwf	??_fputc
  3660     128C  0A84               	incf	4,f
  3661     128D  0800               	movf	0,w
  3662     128E  00F5               	movwf	??_fputc+1
  3663     128F  0872               	movf	fputc@fp,w
  3664     1290  3E02               	addlw	2
  3665     1291  00F6               	movwf	??_fputc+2
  3666     1292  0873               	movf	fputc@fp+1,w
  3667     1293  1803               	skipnc
  3668     1294  3E01               	addlw	1
  3669     1295  3E00               	addlw	0
  3670     1296  00F7               	movwf	??_fputc+3
  3671     1297  0876               	movf	??_fputc+2,w
  3672     1298  0084               	movwf	4
  3673     1299  1783               	bsf	3,7
  3674     129A  1C77               	btfss	??_fputc+3,0
  3675     129B  1383               	bcf	3,7
  3676     129C  0800               	movf	0,w
  3677     129D  0774               	addwf	??_fputc,w
  3678     129E  00F9               	movwf	??_fputc+5
  3679     129F  0875               	movf	??_fputc+1,w
  3680     12A0  00F8               	movwf	??_fputc+4
  3681     12A1  1803               	skipnc
  3682     12A2  0AF8               	incf	??_fputc+4,f
  3683     12A3  1F80               	btfss	0,7
  3684     12A4  2AA6               	goto	u2620
  3685     12A5  03F8               	decf	??_fputc+4,f
  3686     12A6                     u2620:
  3687     12A6  0878               	movf	??_fputc+4,w
  3688     12A7  00FA               	movwf	??_fputc+6
  3689     12A8  0879               	movf	??_fputc+5,w
  3690     12A9  0084               	movwf	4
  3691     12AA  1783               	bsf	3,7
  3692     12AB  1C7A               	btfss	??_fputc+6,0
  3693     12AC  1383               	bcf	3,7
  3694     12AD  0870               	movf	fputc@c,w
  3695     12AE  0080               	movwf	0
  3696     12AF  0872               	movf	fputc@fp,w
  3697     12B0  3E02               	addlw	2
  3698     12B1  00F4               	movwf	??_fputc
  3699     12B2  0873               	movf	fputc@fp+1,w
  3700     12B3  1803               	skipnc
  3701     12B4  3E01               	addlw	1
  3702     12B5  3E00               	addlw	0
  3703     12B6  00F5               	movwf	??_fputc+1
  3704     12B7  0874               	movf	??_fputc,w
  3705     12B8  0084               	movwf	4
  3706     12B9  1783               	bsf	3,7
  3707     12BA  1C75               	btfss	??_fputc+1,0
  3708     12BB  1383               	bcf	3,7
  3709     12BC  3001               	movlw	1
  3710     12BD  0780               	addwf	0,f
  3711     12BE  0A84               	incf	4,f
  3712     12BF  1803               	skipnc
  3713     12C0  0A80               	incf	0,f
  3714     12C1                     l1010:
  3715     12C1  0008               	return
  3716     12C2                     __end_of_fputc:
  3717                           
  3718                           	psect	text12
  3719     1069                     __ptext12:	
  3720 ;; *************** function _putch *****************
  3721 ;; Defined at:
  3722 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  c               1    wreg     unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  c               1    0[COMMON] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_fputc
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749     1069                     _putch:	
  3750                           ;psect for function _putch
  3751                           
  3752     1069                     l1021:	
  3753                           ;incstack = 0
  3754                           ; Regs used in _putch: [wreg]
  3755                           
  3756     1069  0008               	return
  3757     106A                     __end_of_putch:
  3758                           
  3759                           	psect	text13
  3760     1CFD                     __ptext13:	
  3761 ;; *************** function _memcpy *****************
  3762 ;; Defined at:
  3763 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  d1              1    0[COMMON] PTR void 
  3766 ;;		 -> dbuf(80), 
  3767 ;;  s1              1    1[COMMON] PTR const void 
  3768 ;;		 -> dbuf(80), 
  3769 ;;  n               2    2[COMMON] unsigned int 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  s               1    6[COMMON] PTR const unsigned char 
  3772 ;;		 -> dbuf(80), 
  3773 ;;  d               1    5[COMMON] PTR unsigned char 
  3774 ;;		 -> dbuf(80), 
  3775 ;;  tmp             1    4[COMMON] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    0[COMMON] PTR void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         4       0       0       0       0
  3786 ;;      Locals:         3       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0
  3788 ;;      Totals:         7       0       0       0       0
  3789 ;;Total ram usage:        7 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_efgtoa
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798     1CFD                     _memcpy:	
  3799                           ;psect for function _memcpy
  3800                           
  3801     1CFD                     l3185:	
  3802                           ;incstack = 0
  3803                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  3804                           
  3805     1CFD  0871               	movf	memcpy@s1,w
  3806     1CFE  00F6               	movwf	memcpy@s
  3807     1CFF  0870               	movf	memcpy@d1,w
  3808     1D00  00F5               	movwf	memcpy@d
  3809     1D01  2D0F               	goto	l995
  3810     1D02                     l3187:
  3811     1D02  0876               	movf	memcpy@s,w
  3812     1D03  0084               	movwf	4
  3813     1D04  1783               	bsf	3,7	;select IRP bank2
  3814     1D05  0800               	movf	0,w
  3815     1D06  00F4               	movwf	memcpy@tmp
  3816     1D07                     l3189:
  3817     1D07  3001               	movlw	1
  3818     1D08  07F6               	addwf	memcpy@s,f
  3819     1D09                     l3191:
  3820     1D09  0875               	movf	memcpy@d,w
  3821     1D0A  0084               	movwf	4
  3822     1D0B  0874               	movf	memcpy@tmp,w
  3823     1D0C  0080               	movwf	0
  3824     1D0D  3001               	movlw	1
  3825     1D0E  07F5               	addwf	memcpy@d,f
  3826     1D0F                     l995:
  3827     1D0F  3001               	movlw	1
  3828     1D10  02F2               	subwf	memcpy@n,f
  3829     1D11  3000               	movlw	0
  3830     1D12  1C03               	skipc
  3831     1D13  03F3               	decf	memcpy@n+1,f
  3832     1D14  02F3               	subwf	memcpy@n+1,f
  3833     1D15  0A72               	incf	memcpy@n,w
  3834     1D16  1D03               	skipz
  3835     1D17  2D1C               	goto	u4321
  3836     1D18  0A73               	incf	memcpy@n+1,w
  3837     1D19  1D03               	btfss	3,2
  3838     1D1A  2D1C               	goto	u4321
  3839     1D1B  2D1D               	goto	u4320
  3840     1D1C                     u4321:
  3841     1D1C  2D02               	goto	l3187
  3842     1D1D                     u4320:
  3843     1D1D                     l998:
  3844     1D1D  0008               	return
  3845     1D1E                     __end_of_memcpy:
  3846                           
  3847                           	psect	text14
  3848     1B7E                     __ptext14:	
  3849 ;; *************** function _labs *****************
  3850 ;; Defined at:
  3851 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  a               4    0[COMMON] long 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  4    0[COMMON] long 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3865 ;;      Params:         4       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0
  3868 ;;      Totals:         4       0       0       0       0
  3869 ;;Total ram usage:        4 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_efgtoa
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878     1B7E                     _labs:	
  3879                           ;psect for function _labs
  3880                           
  3881     1B7E                     l3147:	
  3882                           ;incstack = 0
  3883                           ; Regs used in _labs: [wreg+status,2+status,0]
  3884                           
  3885     1B7E  1BF3               	btfsc	labs@a+3,7
  3886     1B7F  2B81               	goto	u4191
  3887     1B80  2B82               	goto	u4190
  3888     1B81                     u4191:
  3889     1B81  2B83               	goto	l3151
  3890     1B82                     u4190:
  3891     1B82                     l3149:
  3892     1B82  2B92               	goto	l992
  3893     1B83                     l3151:
  3894     1B83  0970               	comf	labs@a,w
  3895     1B84  00F0               	movwf	?_labs
  3896     1B85  0971               	comf	labs@a+1,w
  3897     1B86  00F1               	movwf	?_labs+1
  3898     1B87  0972               	comf	labs@a+2,w
  3899     1B88  00F2               	movwf	?_labs+2
  3900     1B89  0973               	comf	labs@a+3,w
  3901     1B8A  00F3               	movwf	?_labs+3
  3902     1B8B  0AF0               	incf	?_labs,f
  3903     1B8C  1903               	skipnz
  3904     1B8D  0AF1               	incf	?_labs+1,f
  3905     1B8E  1903               	skipnz
  3906     1B8F  0AF2               	incf	?_labs+2,f
  3907     1B90  1903               	skipnz
  3908     1B91  0AF3               	incf	?_labs+3,f
  3909     1B92                     l992:
  3910     1B92  0008               	return
  3911     1B93                     __end_of_labs:
  3912                           
  3913                           	psect	text15
  3914     14C6                     __ptext15:	
  3915 ;; *************** function _floorf *****************
  3916 ;; Defined at:
  3917 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  x               4   13[BANK0 ] float 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  u               4   29[BANK0 ] struct .
  3922 ;;  m               4   23[BANK0 ] unsigned long 
  3923 ;;  e               2   27[BANK0 ] int 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  4   13[BANK0 ] float 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, btemp+1
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         0       4       0       0       0
  3934 ;;      Locals:         0      10       0       0       0
  3935 ;;      Temps:          0       6       0       0       0
  3936 ;;      Totals:         0      20       0       0       0
  3937 ;;Total ram usage:       20 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_efgtoa
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946     14C6                     _floorf:	
  3947                           ;psect for function _floorf
  3948                           
  3949     14C6                     l3155:	
  3950                           ;incstack = 0
  3951                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  3952                           
  3953     14C6  1683               	bsf	3,5	;RP0=1, select bank3
  3954     14C7  1703               	bsf	3,6	;RP1=1, select bank3
  3955     14C8  0813               	movf	(floorf@F521+3)^(0+384),w
  3956     14C9  1283               	bcf	3,5	;RP0=0, select bank0
  3957     14CA  1303               	bcf	3,6	;RP1=0, select bank0
  3958     14CB  00C0               	movwf	floorf@u+3
  3959     14CC  1683               	bsf	3,5	;RP0=1, select bank3
  3960     14CD  1703               	bsf	3,6	;RP1=1, select bank3
  3961     14CE  0812               	movf	(floorf@F521+2)^(0+384),w
  3962     14CF  1283               	bcf	3,5	;RP0=0, select bank0
  3963     14D0  1303               	bcf	3,6	;RP1=0, select bank0
  3964     14D1  00BF               	movwf	floorf@u+2
  3965     14D2  1683               	bsf	3,5	;RP0=1, select bank3
  3966     14D3  1703               	bsf	3,6	;RP1=1, select bank3
  3967     14D4  0811               	movf	(floorf@F521+1)^(0+384),w
  3968     14D5  1283               	bcf	3,5	;RP0=0, select bank0
  3969     14D6  1303               	bcf	3,6	;RP1=0, select bank0
  3970     14D7  00BE               	movwf	floorf@u+1
  3971     14D8  1683               	bsf	3,5	;RP0=1, select bank3
  3972     14D9  1703               	bsf	3,6	;RP1=1, select bank3
  3973     14DA  0810               	movf	floorf@F521^(0+384),w
  3974     14DB  1283               	bcf	3,5	;RP0=0, select bank0
  3975     14DC  1303               	bcf	3,6	;RP1=0, select bank0
  3976     14DD  00BD               	movwf	floorf@u
  3977     14DE  0830               	movf	floorf@x+3,w
  3978     14DF  00C0               	movwf	floorf@u+3
  3979     14E0  082F               	movf	floorf@x+2,w
  3980     14E1  00BF               	movwf	floorf@u+2
  3981     14E2  082E               	movf	floorf@x+1,w
  3982     14E3  00BE               	movwf	floorf@u+1
  3983     14E4  082D               	movf	floorf@x,w
  3984     14E5  00BD               	movwf	floorf@u
  3985     14E6                     l3157:
  3986     14E6  083D               	movf	floorf@u,w
  3987     14E7  00B1               	movwf	??_floorf
  3988     14E8  083E               	movf	floorf@u+1,w
  3989     14E9  00B2               	movwf	??_floorf+1
  3990     14EA  083F               	movf	floorf@u+2,w
  3991     14EB  00B3               	movwf	??_floorf+2
  3992     14EC  0840               	movf	floorf@u+3,w
  3993     14ED  00B4               	movwf	??_floorf+3
  3994     14EE  3017               	movlw	23
  3995     14EF                     u4205:
  3996     14EF  1003               	clrc
  3997     14F0  0CB4               	rrf	??_floorf+3,f
  3998     14F1  0CB3               	rrf	??_floorf+2,f
  3999     14F2  0CB2               	rrf	??_floorf+1,f
  4000     14F3  0CB1               	rrf	??_floorf,f
  4001     14F4                     u4200:
  4002     14F4  3EFF               	addlw	-1
  4003     14F5  1D03               	skipz
  4004     14F6  2CEF               	goto	u4205
  4005     14F7  30FF               	movlw	255
  4006     14F8  0531               	andwf	??_floorf,w
  4007     14F9  00B5               	movwf	??_floorf+4
  4008     14FA  3000               	movlw	0
  4009     14FB  0532               	andwf	??_floorf+1,w
  4010     14FC  00B6               	movwf	??_floorf+5
  4011     14FD  0835               	movf	??_floorf+4,w
  4012     14FE  3E81               	addlw	129
  4013     14FF  00BB               	movwf	floorf@e
  4014     1500  0836               	movf	??_floorf+5,w
  4015     1501  1803               	skipnc
  4016     1502  3E01               	addlw	1
  4017     1503  3EFF               	addlw	255
  4018     1504  00BC               	movwf	floorf@e+1
  4019     1505                     l3159:
  4020     1505  083C               	movf	floorf@e+1,w
  4021     1506  3A80               	xorlw	128
  4022     1507  00FF               	movwf	btemp+1
  4023     1508  3080               	movlw	128
  4024     1509  027F               	subwf	btemp+1,w
  4025     150A  1D03               	skipz
  4026     150B  2D0E               	goto	u4215
  4027     150C  3017               	movlw	23
  4028     150D  023B               	subwf	floorf@e,w
  4029     150E                     u4215:
  4030     150E  1C03               	skipc
  4031     150F  2D11               	goto	u4211
  4032     1510  2D12               	goto	u4210
  4033     1511                     u4211:
  4034     1511  2D13               	goto	l977
  4035     1512                     u4210:
  4036     1512                     l3161:
  4037     1512  2DD4               	goto	l978
  4038     1513                     l977:
  4039     1513  1283               	bcf	3,5	;RP0=0, select bank0
  4040     1514  1303               	bcf	3,6	;RP1=0, select bank0
  4041     1515  1BBC               	btfsc	floorf@e+1,7
  4042     1516  2D18               	goto	u4221
  4043     1517  2D19               	goto	u4220
  4044     1518                     u4221:
  4045     1518  2D89               	goto	l3175
  4046     1519                     u4220:
  4047     1519                     l3163:
  4048     1519  0A3B               	incf	floorf@e,w
  4049     151A  00FF               	movwf	btemp+1
  4050     151B  30FF               	movlw	255
  4051     151C  00B1               	movwf	??_floorf
  4052     151D  30FF               	movlw	255
  4053     151E  00B2               	movwf	??_floorf+1
  4054     151F  307F               	movlw	127
  4055     1520  00B3               	movwf	??_floorf+2
  4056     1521  3000               	movlw	0
  4057     1522  00B4               	movwf	??_floorf+3
  4058     1523  2D29               	goto	u4230
  4059     1524                     u4235:
  4060     1524  0D34               	rlf	??_floorf+3,w
  4061     1525  0CB4               	rrf	??_floorf+3,f
  4062     1526  0CB3               	rrf	??_floorf+2,f
  4063     1527  0CB2               	rrf	??_floorf+1,f
  4064     1528  0CB1               	rrf	??_floorf,f
  4065     1529                     u4230:
  4066     1529  0BFF               	decfsz	btemp+1,f
  4067     152A  2D24               	goto	u4235
  4068     152B  0834               	movf	??_floorf+3,w
  4069     152C  00BA               	movwf	floorf@m+3
  4070     152D  0833               	movf	??_floorf+2,w
  4071     152E  00B9               	movwf	floorf@m+2
  4072     152F  0832               	movf	??_floorf+1,w
  4073     1530  00B8               	movwf	floorf@m+1
  4074     1531  0831               	movf	??_floorf,w
  4075     1532  00B7               	movwf	floorf@m
  4076     1533                     l3165:
  4077     1533  0837               	movf	floorf@m,w
  4078     1534  053D               	andwf	floorf@u,w
  4079     1535  00B1               	movwf	??_floorf
  4080     1536  0838               	movf	floorf@m+1,w
  4081     1537  053E               	andwf	floorf@u+1,w
  4082     1538  00B2               	movwf	??_floorf+1
  4083     1539  0839               	movf	floorf@m+2,w
  4084     153A  053F               	andwf	floorf@u+2,w
  4085     153B  00B3               	movwf	??_floorf+2
  4086     153C  083A               	movf	floorf@m+3,w
  4087     153D  0540               	andwf	floorf@u+3,w
  4088     153E  00B4               	movwf	??_floorf+3
  4089     153F  0834               	movf	??_floorf+3,w
  4090     1540  0433               	iorwf	??_floorf+2,w
  4091     1541  0432               	iorwf	??_floorf+1,w
  4092     1542  0431               	iorwf	??_floorf,w
  4093     1543  1D03               	skipz
  4094     1544  2D46               	goto	u4241
  4095     1545  2D47               	goto	u4240
  4096     1546                     u4241:
  4097     1546  2D48               	goto	l3169
  4098     1547                     u4240:
  4099     1547  2D12               	goto	l3161
  4100     1548                     l3169:
  4101     1548  083D               	movf	floorf@u,w
  4102     1549  00B1               	movwf	??_floorf
  4103     154A  083E               	movf	floorf@u+1,w
  4104     154B  00B2               	movwf	??_floorf+1
  4105     154C  083F               	movf	floorf@u+2,w
  4106     154D  00B3               	movwf	??_floorf+2
  4107     154E  0840               	movf	floorf@u+3,w
  4108     154F  00B4               	movwf	??_floorf+3
  4109     1550  301F               	movlw	31
  4110     1551                     u4255:
  4111     1551  1003               	clrc
  4112     1552  0CB4               	rrf	??_floorf+3,f
  4113     1553  0CB3               	rrf	??_floorf+2,f
  4114     1554  0CB2               	rrf	??_floorf+1,f
  4115     1555  0CB1               	rrf	??_floorf,f
  4116     1556                     u4250:
  4117     1556  3EFF               	addlw	-1
  4118     1557  1D03               	skipz
  4119     1558  2D51               	goto	u4255
  4120     1559  0834               	movf	??_floorf+3,w
  4121     155A  0433               	iorwf	??_floorf+2,w
  4122     155B  0432               	iorwf	??_floorf+1,w
  4123     155C  0431               	iorwf	??_floorf,w
  4124     155D  1903               	skipnz
  4125     155E  2D60               	goto	u4261
  4126     155F  2D61               	goto	u4260
  4127     1560                     u4261:
  4128     1560  2D78               	goto	l3173
  4129     1561                     u4260:
  4130     1561                     l3171:
  4131     1561  0837               	movf	floorf@m,w
  4132     1562  07BD               	addwf	floorf@u,f
  4133     1563  0838               	movf	floorf@m+1,w
  4134     1564  1103               	clrz
  4135     1565  1803               	skipnc
  4136     1566  3E01               	addlw	1
  4137     1567  1903               	skipnz
  4138     1568  2D6A               	goto	u4271
  4139     1569  07BE               	addwf	floorf@u+1,f
  4140     156A                     u4271:
  4141     156A  0839               	movf	floorf@m+2,w
  4142     156B  1103               	clrz
  4143     156C  1803               	skipnc
  4144     156D  3E01               	addlw	1
  4145     156E  1903               	skipnz
  4146     156F  2D71               	goto	u4272
  4147     1570  07BF               	addwf	floorf@u+2,f
  4148     1571                     u4272:
  4149     1571  083A               	movf	floorf@m+3,w
  4150     1572  1103               	clrz
  4151     1573  1803               	skipnc
  4152     1574  3E01               	addlw	1
  4153     1575  1903               	skipnz
  4154     1576  2D78               	goto	u4273
  4155     1577  07C0               	addwf	floorf@u+3,f
  4156     1578                     u4273:
  4157     1578                     l3173:
  4158     1578  0937               	comf	floorf@m,w
  4159     1579  00B1               	movwf	??_floorf
  4160     157A  0938               	comf	floorf@m+1,w
  4161     157B  00B2               	movwf	??_floorf+1
  4162     157C  0939               	comf	floorf@m+2,w
  4163     157D  00B3               	movwf	??_floorf+2
  4164     157E  093A               	comf	floorf@m+3,w
  4165     157F  00B4               	movwf	??_floorf+3
  4166     1580  0831               	movf	??_floorf,w
  4167     1581  05BD               	andwf	floorf@u,f
  4168     1582  0832               	movf	??_floorf+1,w
  4169     1583  05BE               	andwf	floorf@u+1,f
  4170     1584  0833               	movf	??_floorf+2,w
  4171     1585  05BF               	andwf	floorf@u+2,f
  4172     1586  0834               	movf	??_floorf+3,w
  4173     1587  05C0               	andwf	floorf@u+3,f
  4174     1588  2DCC               	goto	l982
  4175     1589                     l3175:
  4176     1589  083D               	movf	floorf@u,w
  4177     158A  00B1               	movwf	??_floorf
  4178     158B  083E               	movf	floorf@u+1,w
  4179     158C  00B2               	movwf	??_floorf+1
  4180     158D  083F               	movf	floorf@u+2,w
  4181     158E  00B3               	movwf	??_floorf+2
  4182     158F  0840               	movf	floorf@u+3,w
  4183     1590  00B4               	movwf	??_floorf+3
  4184     1591  301F               	movlw	31
  4185     1592                     u4285:
  4186     1592  1003               	clrc
  4187     1593  0CB4               	rrf	??_floorf+3,f
  4188     1594  0CB3               	rrf	??_floorf+2,f
  4189     1595  0CB2               	rrf	??_floorf+1,f
  4190     1596  0CB1               	rrf	??_floorf,f
  4191     1597                     u4280:
  4192     1597  3EFF               	addlw	-1
  4193     1598  1D03               	skipz
  4194     1599  2D92               	goto	u4285
  4195     159A  0834               	movf	??_floorf+3,w
  4196     159B  0433               	iorwf	??_floorf+2,w
  4197     159C  0432               	iorwf	??_floorf+1,w
  4198     159D  0431               	iorwf	??_floorf,w
  4199     159E  1D03               	skipz
  4200     159F  2DA1               	goto	u4291
  4201     15A0  2DA2               	goto	u4290
  4202     15A1                     u4291:
  4203     15A1  2DAB               	goto	l3179
  4204     15A2                     u4290:
  4205     15A2                     l3177:
  4206     15A2  3000               	movlw	0
  4207     15A3  00C0               	movwf	floorf@u+3
  4208     15A4  3000               	movlw	0
  4209     15A5  00BF               	movwf	floorf@u+2
  4210     15A6  3000               	movlw	0
  4211     15A7  00BE               	movwf	floorf@u+1
  4212     15A8  3000               	movlw	0
  4213     15A9  00BD               	movwf	floorf@u
  4214     15AA  2DCC               	goto	l982
  4215     15AB                     l3179:
  4216     15AB  083D               	movf	floorf@u,w
  4217     15AC  00B1               	movwf	??_floorf
  4218     15AD  083E               	movf	floorf@u+1,w
  4219     15AE  00B2               	movwf	??_floorf+1
  4220     15AF  083F               	movf	floorf@u+2,w
  4221     15B0  00B3               	movwf	??_floorf+2
  4222     15B1  0840               	movf	floorf@u+3,w
  4223     15B2  00B4               	movwf	??_floorf+3
  4224     15B3  3001               	movlw	1
  4225     15B4                     u4305:
  4226     15B4  1003               	clrc
  4227     15B5  0DB1               	rlf	??_floorf,f
  4228     15B6  0DB2               	rlf	??_floorf+1,f
  4229     15B7  0DB3               	rlf	??_floorf+2,f
  4230     15B8  0DB4               	rlf	??_floorf+3,f
  4231     15B9                     u4300:
  4232     15B9  3EFF               	addlw	-1
  4233     15BA  1D03               	skipz
  4234     15BB  2DB4               	goto	u4305
  4235     15BC  0834               	movf	??_floorf+3,w
  4236     15BD  0433               	iorwf	??_floorf+2,w
  4237     15BE  0432               	iorwf	??_floorf+1,w
  4238     15BF  0431               	iorwf	??_floorf,w
  4239     15C0  1903               	skipnz
  4240     15C1  2DC3               	goto	u4311
  4241     15C2  2DC4               	goto	u4310
  4242     15C3                     u4311:
  4243     15C3  2DCC               	goto	l982
  4244     15C4                     u4310:
  4245     15C4                     l3181:
  4246     15C4  30BF               	movlw	191
  4247     15C5  00C0               	movwf	floorf@u+3
  4248     15C6  3080               	movlw	128
  4249     15C7  00BF               	movwf	floorf@u+2
  4250     15C8  3000               	movlw	0
  4251     15C9  00BE               	movwf	floorf@u+1
  4252     15CA  3000               	movlw	0
  4253     15CB  00BD               	movwf	floorf@u
  4254     15CC                     l982:
  4255     15CC  0840               	movf	floorf@u+3,w
  4256     15CD  00B0               	movwf	?_floorf+3
  4257     15CE  083F               	movf	floorf@u+2,w
  4258     15CF  00AF               	movwf	?_floorf+2
  4259     15D0  083E               	movf	floorf@u+1,w
  4260     15D1  00AE               	movwf	?_floorf+1
  4261     15D2  083D               	movf	floorf@u,w
  4262     15D3  00AD               	movwf	?_floorf
  4263     15D4                     l978:
  4264     15D4  0008               	return
  4265     15D5                     __end_of_floorf:
  4266                           
  4267                           	psect	text16
  4268     000E                     __ptext16:	
  4269 ;; *************** function ___fpclassifyf *****************
  4270 ;; Defined at:
  4271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  x               4    0[COMMON] float 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  u               4    2[BANK0 ] struct .
  4276 ;;  e               2    0[BANK0 ] int 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  2    0[COMMON] int 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4286 ;;      Params:         4       0       0       0       0
  4287 ;;      Locals:         0       6       0       0       0
  4288 ;;      Temps:          6       0       0       0       0
  4289 ;;      Totals:        10       6       0       0       0
  4290 ;;Total ram usage:       16 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_efgtoa
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299     000E                     ___fpclassifyf:	
  4300                           ;psect for function ___fpclassifyf
  4301                           
  4302     000E                     l3119:	
  4303                           ;incstack = 0
  4304                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  4305                           
  4306     000E  1683               	bsf	3,5	;RP0=1, select bank3
  4307     000F  1703               	bsf	3,6	;RP1=1, select bank3
  4308     0010  0817               	movf	(___fpclassifyf@F465+3)^(0+384),w
  4309     0011  1283               	bcf	3,5	;RP0=0, select bank0
  4310     0012  1303               	bcf	3,6	;RP1=0, select bank0
  4311     0013  00A5               	movwf	___fpclassifyf@u+3
  4312     0014  1683               	bsf	3,5	;RP0=1, select bank3
  4313     0015  1703               	bsf	3,6	;RP1=1, select bank3
  4314     0016  0816               	movf	(___fpclassifyf@F465+2)^(0+384),w
  4315     0017  1283               	bcf	3,5	;RP0=0, select bank0
  4316     0018  1303               	bcf	3,6	;RP1=0, select bank0
  4317     0019  00A4               	movwf	___fpclassifyf@u+2
  4318     001A  1683               	bsf	3,5	;RP0=1, select bank3
  4319     001B  1703               	bsf	3,6	;RP1=1, select bank3
  4320     001C  0815               	movf	(___fpclassifyf@F465+1)^(0+384),w
  4321     001D  1283               	bcf	3,5	;RP0=0, select bank0
  4322     001E  1303               	bcf	3,6	;RP1=0, select bank0
  4323     001F  00A3               	movwf	___fpclassifyf@u+1
  4324     0020  1683               	bsf	3,5	;RP0=1, select bank3
  4325     0021  1703               	bsf	3,6	;RP1=1, select bank3
  4326     0022  0814               	movf	___fpclassifyf@F465^(0+384),w
  4327     0023  1283               	bcf	3,5	;RP0=0, select bank0
  4328     0024  1303               	bcf	3,6	;RP1=0, select bank0
  4329     0025  00A2               	movwf	___fpclassifyf@u
  4330     0026  0873               	movf	___fpclassifyf@x+3,w
  4331     0027  00A5               	movwf	___fpclassifyf@u+3
  4332     0028  0872               	movf	___fpclassifyf@x+2,w
  4333     0029  00A4               	movwf	___fpclassifyf@u+2
  4334     002A  0871               	movf	___fpclassifyf@x+1,w
  4335     002B  00A3               	movwf	___fpclassifyf@u+1
  4336     002C  0870               	movf	___fpclassifyf@x,w
  4337     002D  00A2               	movwf	___fpclassifyf@u
  4338     002E                     l3121:
  4339     002E  0822               	movf	___fpclassifyf@u,w
  4340     002F  00F4               	movwf	??___fpclassifyf
  4341     0030  0823               	movf	___fpclassifyf@u+1,w
  4342     0031  00F5               	movwf	??___fpclassifyf+1
  4343     0032  0824               	movf	___fpclassifyf@u+2,w
  4344     0033  00F6               	movwf	??___fpclassifyf+2
  4345     0034  0825               	movf	___fpclassifyf@u+3,w
  4346     0035  00F7               	movwf	??___fpclassifyf+3
  4347     0036  3017               	movlw	23
  4348     0037                     u4105:
  4349     0037  1003               	clrc
  4350     0038  0CF7               	rrf	??___fpclassifyf+3,f
  4351     0039  0CF6               	rrf	??___fpclassifyf+2,f
  4352     003A  0CF5               	rrf	??___fpclassifyf+1,f
  4353     003B  0CF4               	rrf	??___fpclassifyf,f
  4354     003C                     u4100:
  4355     003C  3EFF               	addlw	-1
  4356     003D  1D03               	skipz
  4357     003E  2837               	goto	u4105
  4358     003F  30FF               	movlw	255
  4359     0040  0574               	andwf	??___fpclassifyf,w
  4360     0041  00A0               	movwf	___fpclassifyf@e
  4361     0042  3000               	movlw	0
  4362     0043  0575               	andwf	??___fpclassifyf+1,w
  4363     0044  00A1               	movwf	___fpclassifyf@e+1
  4364     0045                     l3123:
  4365     0045  0820               	movf	___fpclassifyf@e,w
  4366     0046  0421               	iorwf	___fpclassifyf@e+1,w
  4367     0047  1D03               	btfss	3,2
  4368     0048  284A               	goto	u4111
  4369     0049  284B               	goto	u4110
  4370     004A                     u4111:
  4371     004A  286E               	goto	l3133
  4372     004B                     u4110:
  4373     004B                     l3125:
  4374     004B  0822               	movf	___fpclassifyf@u,w
  4375     004C  00F4               	movwf	??___fpclassifyf
  4376     004D  0823               	movf	___fpclassifyf@u+1,w
  4377     004E  00F5               	movwf	??___fpclassifyf+1
  4378     004F  0824               	movf	___fpclassifyf@u+2,w
  4379     0050  00F6               	movwf	??___fpclassifyf+2
  4380     0051  0825               	movf	___fpclassifyf@u+3,w
  4381     0052  00F7               	movwf	??___fpclassifyf+3
  4382     0053  3001               	movlw	1
  4383     0054                     u4125:
  4384     0054  1003               	clrc
  4385     0055  0DF4               	rlf	??___fpclassifyf,f
  4386     0056  0DF5               	rlf	??___fpclassifyf+1,f
  4387     0057  0DF6               	rlf	??___fpclassifyf+2,f
  4388     0058  0DF7               	rlf	??___fpclassifyf+3,f
  4389     0059                     u4120:
  4390     0059  3EFF               	addlw	-1
  4391     005A  1D03               	skipz
  4392     005B  2854               	goto	u4125
  4393     005C  0877               	movf	??___fpclassifyf+3,w
  4394     005D  0476               	iorwf	??___fpclassifyf+2,w
  4395     005E  0475               	iorwf	??___fpclassifyf+1,w
  4396     005F  0474               	iorwf	??___fpclassifyf,w
  4397     0060  1D03               	skipz
  4398     0061  2863               	goto	u4131
  4399     0062  2864               	goto	u4130
  4400     0063                     u4131:
  4401     0063  2869               	goto	l3129
  4402     0064                     u4130:
  4403     0064                     l3127:
  4404     0064  3002               	movlw	2
  4405     0065  00F0               	movwf	?___fpclassifyf
  4406     0066  3000               	movlw	0
  4407     0067  00F1               	movwf	?___fpclassifyf+1
  4408     0068  289A               	goto	l969
  4409     0069                     l3129:
  4410     0069  3003               	movlw	3
  4411     006A  00F0               	movwf	?___fpclassifyf
  4412     006B  3000               	movlw	0
  4413     006C  00F1               	movwf	?___fpclassifyf+1
  4414     006D  289A               	goto	l969
  4415     006E                     l3133:
  4416     006E  0A20               	incf	___fpclassifyf@e,w
  4417     006F  0421               	iorwf	___fpclassifyf@e+1,w
  4418     0070  1D03               	btfss	3,2
  4419     0071  2873               	goto	u4141
  4420     0072  2874               	goto	u4140
  4421     0073                     u4141:
  4422     0073  2896               	goto	l3139
  4423     0074                     u4140:
  4424     0074                     l3135:
  4425     0074  0822               	movf	___fpclassifyf@u,w
  4426     0075  00F4               	movwf	??___fpclassifyf
  4427     0076  0823               	movf	___fpclassifyf@u+1,w
  4428     0077  00F5               	movwf	??___fpclassifyf+1
  4429     0078  0824               	movf	___fpclassifyf@u+2,w
  4430     0079  00F6               	movwf	??___fpclassifyf+2
  4431     007A  0825               	movf	___fpclassifyf@u+3,w
  4432     007B  00F7               	movwf	??___fpclassifyf+3
  4433     007C  3009               	movlw	9
  4434     007D                     u4155:
  4435     007D  1003               	clrc
  4436     007E  0DF4               	rlf	??___fpclassifyf,f
  4437     007F  0DF5               	rlf	??___fpclassifyf+1,f
  4438     0080  0DF6               	rlf	??___fpclassifyf+2,f
  4439     0081  0DF7               	rlf	??___fpclassifyf+3,f
  4440     0082                     u4150:
  4441     0082  3EFF               	addlw	-1
  4442     0083  1D03               	skipz
  4443     0084  287D               	goto	u4155
  4444     0085  0877               	movf	??___fpclassifyf+3,w
  4445     0086  0476               	iorwf	??___fpclassifyf+2,w
  4446     0087  0475               	iorwf	??___fpclassifyf+1,w
  4447     0088  0474               	iorwf	??___fpclassifyf,w
  4448     0089  1903               	skipnz
  4449     008A  288C               	goto	u4161
  4450     008B  288E               	goto	u4160
  4451     008C                     u4161:
  4452     008C  3001               	movlw	1
  4453     008D  288F               	goto	u4170
  4454     008E                     u4160:
  4455     008E  3000               	movlw	0
  4456     008F                     u4170:
  4457     008F  00F8               	movwf	??___fpclassifyf+4
  4458     0090  01F9               	clrf	??___fpclassifyf+5
  4459     0091  0878               	movf	??___fpclassifyf+4,w
  4460     0092  00F0               	movwf	?___fpclassifyf
  4461     0093  0879               	movf	??___fpclassifyf+5,w
  4462     0094  00F1               	movwf	?___fpclassifyf+1
  4463     0095  289A               	goto	l969
  4464     0096                     l3139:
  4465     0096  3004               	movlw	4
  4466     0097  00F0               	movwf	?___fpclassifyf
  4467     0098  3000               	movlw	0
  4468     0099  00F1               	movwf	?___fpclassifyf+1
  4469     009A                     l969:
  4470     009A  0008               	return
  4471     009B                     __end_of___fpclassifyf:
  4472                           
  4473                           	psect	text17
  4474     1D1E                     __ptext17:	
  4475 ;; *************** function ___flsub *****************
  4476 ;; Defined at:
  4477 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  a               4   26[BANK0 ] int 
  4480 ;;  b               4   30[BANK0 ] int 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  4   26[BANK0 ] int 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4492 ;;      Params:         0       8       0       0       0
  4493 ;;      Locals:         0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0
  4495 ;;      Totals:         0       8       0       0       0
  4496 ;;Total ram usage:        8 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; Hardware stack levels required when called: 1
  4499 ;; This function calls:
  4500 ;;		___fladd
  4501 ;; This function is called by:
  4502 ;;		_efgtoa
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506     1D1E                     ___flsub:	
  4507                           ;psect for function ___flsub
  4508                           
  4509     1D1E                     l2813:	
  4510                           ;incstack = 0
  4511                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4512                           
  4513     1D1E  3080               	movlw	128
  4514     1D1F  1283               	bcf	3,5	;RP0=0, select bank0
  4515     1D20  1303               	bcf	3,6	;RP1=0, select bank0
  4516     1D21  06BD               	xorwf	___flsub@a+3,f
  4517     1D22                     l2815:
  4518     1D22  0841               	movf	___flsub@b+3,w
  4519     1D23  00F3               	movwf	___fladd@b+3
  4520     1D24  0840               	movf	___flsub@b+2,w
  4521     1D25  00F2               	movwf	___fladd@b+2
  4522     1D26  083F               	movf	___flsub@b+1,w
  4523     1D27  00F1               	movwf	___fladd@b+1
  4524     1D28  083E               	movf	___flsub@b,w
  4525     1D29  00F0               	movwf	___fladd@b
  4526     1D2A  083D               	movf	___flsub@a+3,w
  4527     1D2B  00F7               	movwf	___fladd@a+3
  4528     1D2C  083C               	movf	___flsub@a+2,w
  4529     1D2D  00F6               	movwf	___fladd@a+2
  4530     1D2E  083B               	movf	___flsub@a+1,w
  4531     1D2F  00F5               	movwf	___fladd@a+1
  4532     1D30  083A               	movf	___flsub@a,w
  4533     1D31  00F4               	movwf	___fladd@a
  4534     1D32  120A  158A  2262  160A  158A  	fcall	___fladd
  4535     1D37  0873               	movf	?___fladd+3,w
  4536     1D38  1283               	bcf	3,5	;RP0=0, select bank0
  4537     1D39  1303               	bcf	3,6	;RP1=0, select bank0
  4538     1D3A  00BD               	movwf	?___flsub+3
  4539     1D3B  0872               	movf	?___fladd+2,w
  4540     1D3C  00BC               	movwf	?___flsub+2
  4541     1D3D  0871               	movf	?___fladd+1,w
  4542     1D3E  00BB               	movwf	?___flsub+1
  4543     1D3F  0870               	movf	?___fladd,w
  4544     1D40  00BA               	movwf	?___flsub
  4545     1D41                     l711:
  4546     1D41  0008               	return
  4547     1D42                     __end_of___flsub:
  4548                           
  4549                           	psect	text18
  4550     0A62                     __ptext18:	
  4551 ;; *************** function ___fladd *****************
  4552 ;; Defined at:
  4553 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  b               4    0[COMMON] int 
  4556 ;;  a               4    4[COMMON] int 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  grs             1   11[COMMON] unsigned char 
  4559 ;;  bexp            1   10[COMMON] unsigned char 
  4560 ;;  aexp            1    9[COMMON] unsigned char 
  4561 ;;  signs           1    8[COMMON] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  4    0[COMMON] unsigned char 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, btemp+1
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         8       0       0       0       0
  4572 ;;      Locals:         4       0       0       0       0
  4573 ;;      Temps:          0       8       0       0       0
  4574 ;;      Totals:        12       8       0       0       0
  4575 ;;Total ram usage:       20 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		___flsub
  4581 ;;		_efgtoa
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585     0A62                     ___fladd:	
  4586                           ;psect for function ___fladd
  4587                           
  4588     0A62                     l2485:	
  4589                           ;incstack = 0
  4590                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4591                           
  4592     0A62  0873               	movf	___fladd@b+3,w
  4593     0A63  00F8               	movwf	___fladd@signs
  4594     0A64                     l2487:
  4595     0A64  3080               	movlw	128
  4596     0A65  05F8               	andwf	___fladd@signs,f
  4597     0A66                     l2489:
  4598     0A66  0873               	movf	___fladd@b+3,w
  4599     0A67  1283               	bcf	3,5	;RP0=0, select bank0
  4600     0A68  1303               	bcf	3,6	;RP1=0, select bank0
  4601     0A69  00A0               	movwf	??___fladd
  4602     0A6A  0720               	addwf	??___fladd,w
  4603     0A6B  00FA               	movwf	___fladd@bexp
  4604     0A6C                     l2491:
  4605     0A6C  1FF2               	btfss	___fladd@b+2,7
  4606     0A6D  2A6F               	goto	u2651
  4607     0A6E  2A70               	goto	u2650
  4608     0A6F                     u2651:
  4609     0A6F  2A71               	goto	l2495
  4610     0A70                     u2650:
  4611     0A70                     l2493:
  4612     0A70  147A               	bsf	___fladd@bexp,0
  4613     0A71                     l2495:
  4614     0A71  087A               	movf	___fladd@bexp,w
  4615     0A72  1903               	btfsc	3,2
  4616     0A73  2A75               	goto	u2661
  4617     0A74  2A76               	goto	u2660
  4618     0A75                     u2661:
  4619     0A75  2A86               	goto	l2505
  4620     0A76                     u2660:
  4621     0A76                     l2497:
  4622     0A76  0A7A               	incf	___fladd@bexp,w
  4623     0A77  1D03               	btfss	3,2
  4624     0A78  2A7A               	goto	u2671
  4625     0A79  2A7B               	goto	u2670
  4626     0A7A                     u2671:
  4627     0A7A  2A83               	goto	l2501
  4628     0A7B                     u2670:
  4629     0A7B                     l2499:
  4630     0A7B  3000               	movlw	0
  4631     0A7C  00F3               	movwf	___fladd@b+3
  4632     0A7D  3000               	movlw	0
  4633     0A7E  00F2               	movwf	___fladd@b+2
  4634     0A7F  3000               	movlw	0
  4635     0A80  00F1               	movwf	___fladd@b+1
  4636     0A81  3000               	movlw	0
  4637     0A82  00F0               	movwf	___fladd@b
  4638     0A83                     l2501:
  4639     0A83  17F2               	bsf	___fladd@b+2,7
  4640     0A84                     l2503:
  4641     0A84  01F3               	clrf	___fladd@b+3
  4642     0A85  2A8E               	goto	l660
  4643     0A86                     l2505:
  4644     0A86  3000               	movlw	0
  4645     0A87  00F3               	movwf	___fladd@b+3
  4646     0A88  3000               	movlw	0
  4647     0A89  00F2               	movwf	___fladd@b+2
  4648     0A8A  3000               	movlw	0
  4649     0A8B  00F1               	movwf	___fladd@b+1
  4650     0A8C  3000               	movlw	0
  4651     0A8D  00F0               	movwf	___fladd@b
  4652     0A8E                     l660:
  4653     0A8E  0877               	movf	___fladd@a+3,w
  4654     0A8F  00F9               	movwf	___fladd@aexp
  4655     0A90                     l2507:
  4656     0A90  3080               	movlw	128
  4657     0A91  05F9               	andwf	___fladd@aexp,f
  4658     0A92                     l2509:
  4659     0A92  0879               	movf	___fladd@aexp,w
  4660     0A93  0678               	xorwf	___fladd@signs,w
  4661     0A94  1903               	skipnz
  4662     0A95  2A97               	goto	u2681
  4663     0A96  2A98               	goto	u2680
  4664     0A97                     u2681:
  4665     0A97  2A99               	goto	l2513
  4666     0A98                     u2680:
  4667     0A98                     l2511:
  4668     0A98  1778               	bsf	___fladd@signs,6
  4669     0A99                     l2513:
  4670     0A99  0877               	movf	___fladd@a+3,w
  4671     0A9A  00A0               	movwf	??___fladd
  4672     0A9B  0720               	addwf	??___fladd,w
  4673     0A9C  00F9               	movwf	___fladd@aexp
  4674     0A9D                     l2515:
  4675     0A9D  1FF6               	btfss	___fladd@a+2,7
  4676     0A9E  2AA0               	goto	u2691
  4677     0A9F  2AA1               	goto	u2690
  4678     0AA0                     u2691:
  4679     0AA0  2AA2               	goto	l2519
  4680     0AA1                     u2690:
  4681     0AA1                     l2517:
  4682     0AA1  1479               	bsf	___fladd@aexp,0
  4683     0AA2                     l2519:
  4684     0AA2  0879               	movf	___fladd@aexp,w
  4685     0AA3  1903               	btfsc	3,2
  4686     0AA4  2AA6               	goto	u2701
  4687     0AA5  2AA7               	goto	u2700
  4688     0AA6                     u2701:
  4689     0AA6  2AB7               	goto	l2529
  4690     0AA7                     u2700:
  4691     0AA7                     l2521:
  4692     0AA7  0A79               	incf	___fladd@aexp,w
  4693     0AA8  1D03               	btfss	3,2
  4694     0AA9  2AAB               	goto	u2711
  4695     0AAA  2AAC               	goto	u2710
  4696     0AAB                     u2711:
  4697     0AAB  2AB4               	goto	l2525
  4698     0AAC                     u2710:
  4699     0AAC                     l2523:
  4700     0AAC  3000               	movlw	0
  4701     0AAD  00F7               	movwf	___fladd@a+3
  4702     0AAE  3000               	movlw	0
  4703     0AAF  00F6               	movwf	___fladd@a+2
  4704     0AB0  3000               	movlw	0
  4705     0AB1  00F5               	movwf	___fladd@a+1
  4706     0AB2  3000               	movlw	0
  4707     0AB3  00F4               	movwf	___fladd@a
  4708     0AB4                     l2525:
  4709     0AB4  17F6               	bsf	___fladd@a+2,7
  4710     0AB5                     l2527:
  4711     0AB5  01F7               	clrf	___fladd@a+3
  4712     0AB6  2ABF               	goto	l665
  4713     0AB7                     l2529:
  4714     0AB7  3000               	movlw	0
  4715     0AB8  00F7               	movwf	___fladd@a+3
  4716     0AB9  3000               	movlw	0
  4717     0ABA  00F6               	movwf	___fladd@a+2
  4718     0ABB  3000               	movlw	0
  4719     0ABC  00F5               	movwf	___fladd@a+1
  4720     0ABD  3000               	movlw	0
  4721     0ABE  00F4               	movwf	___fladd@a
  4722     0ABF                     l665:
  4723     0ABF  087A               	movf	___fladd@bexp,w
  4724     0AC0  0279               	subwf	___fladd@aexp,w
  4725     0AC1  1803               	skipnc
  4726     0AC2  2AC4               	goto	u2721
  4727     0AC3  2AC5               	goto	u2720
  4728     0AC4                     u2721:
  4729     0AC4  2AE9               	goto	l2565
  4730     0AC5                     u2720:
  4731     0AC5                     l2531:
  4732     0AC5  1F78               	btfss	___fladd@signs,6
  4733     0AC6  2AC8               	goto	u2731
  4734     0AC7  2AC9               	goto	u2730
  4735     0AC8                     u2731:
  4736     0AC8  2ACB               	goto	l2535
  4737     0AC9                     u2730:
  4738     0AC9                     l2533:
  4739     0AC9  3080               	movlw	128
  4740     0ACA  06F8               	xorwf	___fladd@signs,f
  4741     0ACB                     l2535:
  4742     0ACB  087A               	movf	___fladd@bexp,w
  4743     0ACC  00FB               	movwf	___fladd@grs
  4744     0ACD                     l2537:
  4745     0ACD  0879               	movf	___fladd@aexp,w
  4746     0ACE  00FA               	movwf	___fladd@bexp
  4747     0ACF                     l2539:
  4748     0ACF  087B               	movf	___fladd@grs,w
  4749     0AD0  00F9               	movwf	___fladd@aexp
  4750     0AD1                     l2541:
  4751     0AD1  0870               	movf	___fladd@b,w
  4752     0AD2  00FB               	movwf	___fladd@grs
  4753     0AD3                     l2543:
  4754     0AD3  0874               	movf	___fladd@a,w
  4755     0AD4  00F0               	movwf	___fladd@b
  4756     0AD5                     l2545:
  4757     0AD5  087B               	movf	___fladd@grs,w
  4758     0AD6  00F4               	movwf	___fladd@a
  4759     0AD7                     l2547:
  4760     0AD7  0871               	movf	___fladd@b+1,w
  4761     0AD8  00FB               	movwf	___fladd@grs
  4762     0AD9                     l2549:
  4763     0AD9  0875               	movf	___fladd@a+1,w
  4764     0ADA  00F1               	movwf	___fladd@b+1
  4765     0ADB                     l2551:
  4766     0ADB  087B               	movf	___fladd@grs,w
  4767     0ADC  00F5               	movwf	___fladd@a+1
  4768     0ADD                     l2553:
  4769     0ADD  0872               	movf	___fladd@b+2,w
  4770     0ADE  00FB               	movwf	___fladd@grs
  4771     0ADF                     l2555:
  4772     0ADF  0876               	movf	___fladd@a+2,w
  4773     0AE0  00F2               	movwf	___fladd@b+2
  4774     0AE1                     l2557:
  4775     0AE1  087B               	movf	___fladd@grs,w
  4776     0AE2  00F6               	movwf	___fladd@a+2
  4777     0AE3                     l2559:
  4778     0AE3  0873               	movf	___fladd@b+3,w
  4779     0AE4  00FB               	movwf	___fladd@grs
  4780     0AE5                     l2561:
  4781     0AE5  0877               	movf	___fladd@a+3,w
  4782     0AE6  00F3               	movwf	___fladd@b+3
  4783     0AE7                     l2563:
  4784     0AE7  087B               	movf	___fladd@grs,w
  4785     0AE8  00F7               	movwf	___fladd@a+3
  4786     0AE9                     l2565:
  4787     0AE9  01FB               	clrf	___fladd@grs
  4788     0AEA                     l2567:
  4789     0AEA  0879               	movf	___fladd@aexp,w
  4790     0AEB  00A0               	movwf	??___fladd
  4791     0AEC  01A1               	clrf	??___fladd+1
  4792     0AED  0821               	movf	??___fladd+1,w
  4793     0AEE  00A3               	movwf	??___fladd+3
  4794     0AEF  087A               	movf	___fladd@bexp,w
  4795     0AF0  0220               	subwf	??___fladd,w
  4796     0AF1  00A2               	movwf	??___fladd+2
  4797     0AF2  1C03               	skipc
  4798     0AF3  03A3               	decf	??___fladd+3,f
  4799     0AF4  0823               	movf	??___fladd+3,w
  4800     0AF5  3A80               	xorlw	128
  4801     0AF6  00FF               	movwf	btemp+1
  4802     0AF7  3080               	movlw	128
  4803     0AF8  027F               	subwf	btemp+1,w
  4804     0AF9  1D03               	skipz
  4805     0AFA  2AFD               	goto	u2745
  4806     0AFB  301A               	movlw	26
  4807     0AFC  0222               	subwf	??___fladd+2,w
  4808     0AFD                     u2745:
  4809     0AFD  1C03               	skipc
  4810     0AFE  2B00               	goto	u2741
  4811     0AFF  2B01               	goto	u2740
  4812     0B00                     u2741:
  4813     0B00  2B38               	goto	l2583
  4814     0B01                     u2740:
  4815     0B01                     l2569:
  4816     0B01  0873               	movf	___fladd@b+3,w
  4817     0B02  0472               	iorwf	___fladd@b+2,w
  4818     0B03  0471               	iorwf	___fladd@b+1,w
  4819     0B04  0470               	iorwf	___fladd@b,w
  4820     0B05  1D03               	skipz
  4821     0B06  2B08               	goto	u2751
  4822     0B07  2B0A               	goto	u2750
  4823     0B08                     u2751:
  4824     0B08  3001               	movlw	1
  4825     0B09  2B0B               	goto	u2760
  4826     0B0A                     u2750:
  4827     0B0A  3000               	movlw	0
  4828     0B0B                     u2760:
  4829     0B0B  00FB               	movwf	___fladd@grs
  4830     0B0C  3000               	movlw	0
  4831     0B0D  00F3               	movwf	___fladd@b+3
  4832     0B0E  3000               	movlw	0
  4833     0B0F  00F2               	movwf	___fladd@b+2
  4834     0B10  3000               	movlw	0
  4835     0B11  00F1               	movwf	___fladd@b+1
  4836     0B12  3000               	movlw	0
  4837     0B13  00F0               	movwf	___fladd@b
  4838     0B14  0879               	movf	___fladd@aexp,w
  4839     0B15  00FA               	movwf	___fladd@bexp
  4840     0B16  2B3E               	goto	l669
  4841     0B17                     l671:
  4842     0B17  1C7B               	btfss	___fladd@grs,0
  4843     0B18  2B1A               	goto	u2771
  4844     0B19  2B1B               	goto	u2770
  4845     0B1A                     u2771:
  4846     0B1A  2B24               	goto	l2573
  4847     0B1B                     u2770:
  4848     0B1B                     l2571:
  4849     0B1B  087B               	movf	___fladd@grs,w
  4850     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  4851     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  4852     0B1E  00A0               	movwf	??___fladd
  4853     0B1F  1003               	clrc
  4854     0B20  0C20               	rrf	??___fladd,w
  4855     0B21  3801               	iorlw	1
  4856     0B22  00FB               	movwf	___fladd@grs
  4857     0B23  2B26               	goto	l2575
  4858     0B24                     l2573:
  4859     0B24  1003               	clrc
  4860     0B25  0CFB               	rrf	___fladd@grs,f
  4861     0B26                     l2575:
  4862     0B26  1C70               	btfss	___fladd@b,0
  4863     0B27  2B29               	goto	u2781
  4864     0B28  2B2A               	goto	u2780
  4865     0B29                     u2781:
  4866     0B29  2B2B               	goto	l2579
  4867     0B2A                     u2780:
  4868     0B2A                     l2577:
  4869     0B2A  17FB               	bsf	___fladd@grs,7
  4870     0B2B                     l2579:
  4871     0B2B  3001               	movlw	1
  4872     0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  4873     0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  4874     0B2E  00A0               	movwf	??___fladd
  4875     0B2F                     u2795:
  4876     0B2F  0D73               	rlf	___fladd@b+3,w
  4877     0B30  0CF3               	rrf	___fladd@b+3,f
  4878     0B31  0CF2               	rrf	___fladd@b+2,f
  4879     0B32  0CF1               	rrf	___fladd@b+1,f
  4880     0B33  0CF0               	rrf	___fladd@b,f
  4881     0B34  0BA0               	decfsz	??___fladd& (0+127),f
  4882     0B35  2B2F               	goto	u2795
  4883     0B36                     l2581:
  4884     0B36  3001               	movlw	1
  4885     0B37  07FA               	addwf	___fladd@bexp,f
  4886     0B38                     l2583:
  4887     0B38  0879               	movf	___fladd@aexp,w
  4888     0B39  027A               	subwf	___fladd@bexp,w
  4889     0B3A  1C03               	skipc
  4890     0B3B  2B3D               	goto	u2801
  4891     0B3C  2B3E               	goto	u2800
  4892     0B3D                     u2801:
  4893     0B3D  2B17               	goto	l671
  4894     0B3E                     u2800:
  4895     0B3E                     l669:
  4896     0B3E  1B78               	btfsc	___fladd@signs,6
  4897     0B3F  2B41               	goto	u2811
  4898     0B40  2B42               	goto	u2810
  4899     0B41                     u2811:
  4900     0B41  2B8D               	goto	l2609
  4901     0B42                     u2810:
  4902     0B42                     l2585:
  4903     0B42  087A               	movf	___fladd@bexp,w
  4904     0B43  1D03               	btfss	3,2
  4905     0B44  2B46               	goto	u2821
  4906     0B45  2B47               	goto	u2820
  4907     0B46                     u2821:
  4908     0B46  2B50               	goto	l2591
  4909     0B47                     u2820:
  4910     0B47                     l2587:
  4911     0B47  3000               	movlw	0
  4912     0B48  00F3               	movwf	?___fladd+3
  4913     0B49  3000               	movlw	0
  4914     0B4A  00F2               	movwf	?___fladd+2
  4915     0B4B  3000               	movlw	0
  4916     0B4C  00F1               	movwf	?___fladd+1
  4917     0B4D  3000               	movlw	0
  4918     0B4E  00F0               	movwf	?___fladd
  4919     0B4F  2CBD               	goto	l678
  4920     0B50                     l2591:
  4921     0B50  0874               	movf	___fladd@a,w
  4922     0B51  07F0               	addwf	___fladd@b,f
  4923     0B52  0875               	movf	___fladd@a+1,w
  4924     0B53  1103               	clrz
  4925     0B54  1803               	skipnc
  4926     0B55  3E01               	addlw	1
  4927     0B56  1903               	skipnz
  4928     0B57  2B59               	goto	u2831
  4929     0B58  07F1               	addwf	___fladd@b+1,f
  4930     0B59                     u2831:
  4931     0B59  0876               	movf	___fladd@a+2,w
  4932     0B5A  1103               	clrz
  4933     0B5B  1803               	skipnc
  4934     0B5C  3E01               	addlw	1
  4935     0B5D  1903               	skipnz
  4936     0B5E  2B60               	goto	u2832
  4937     0B5F  07F2               	addwf	___fladd@b+2,f
  4938     0B60                     u2832:
  4939     0B60  0877               	movf	___fladd@a+3,w
  4940     0B61  1103               	clrz
  4941     0B62  1803               	skipnc
  4942     0B63  3E01               	addlw	1
  4943     0B64  1903               	skipnz
  4944     0B65  2B67               	goto	u2833
  4945     0B66  07F3               	addwf	___fladd@b+3,f
  4946     0B67                     u2833:
  4947     0B67                     l2593:
  4948     0B67  1C73               	btfss	___fladd@b+3,0
  4949     0B68  2B6A               	goto	u2841
  4950     0B69  2B6B               	goto	u2840
  4951     0B6A                     u2841:
  4952     0B6A  2C45               	goto	l2645
  4953     0B6B                     u2840:
  4954     0B6B                     l2595:
  4955     0B6B  1C7B               	btfss	___fladd@grs,0
  4956     0B6C  2B6E               	goto	u2851
  4957     0B6D  2B6F               	goto	u2850
  4958     0B6E                     u2851:
  4959     0B6E  2B78               	goto	l2599
  4960     0B6F                     u2850:
  4961     0B6F                     l2597:
  4962     0B6F  087B               	movf	___fladd@grs,w
  4963     0B70  1283               	bcf	3,5	;RP0=0, select bank0
  4964     0B71  1303               	bcf	3,6	;RP1=0, select bank0
  4965     0B72  00A0               	movwf	??___fladd
  4966     0B73  1003               	clrc
  4967     0B74  0C20               	rrf	??___fladd,w
  4968     0B75  3801               	iorlw	1
  4969     0B76  00FB               	movwf	___fladd@grs
  4970     0B77  2B7A               	goto	l2601
  4971     0B78                     l2599:
  4972     0B78  1003               	clrc
  4973     0B79  0CFB               	rrf	___fladd@grs,f
  4974     0B7A                     l2601:
  4975     0B7A  1C70               	btfss	___fladd@b,0
  4976     0B7B  2B7D               	goto	u2861
  4977     0B7C  2B7E               	goto	u2860
  4978     0B7D                     u2861:
  4979     0B7D  2B7F               	goto	l2605
  4980     0B7E                     u2860:
  4981     0B7E                     l2603:
  4982     0B7E  17FB               	bsf	___fladd@grs,7
  4983     0B7F                     l2605:
  4984     0B7F  3001               	movlw	1
  4985     0B80  1283               	bcf	3,5	;RP0=0, select bank0
  4986     0B81  1303               	bcf	3,6	;RP1=0, select bank0
  4987     0B82  00A0               	movwf	??___fladd
  4988     0B83                     u2875:
  4989     0B83  0D73               	rlf	___fladd@b+3,w
  4990     0B84  0CF3               	rrf	___fladd@b+3,f
  4991     0B85  0CF2               	rrf	___fladd@b+2,f
  4992     0B86  0CF1               	rrf	___fladd@b+1,f
  4993     0B87  0CF0               	rrf	___fladd@b,f
  4994     0B88  0BA0               	decfsz	??___fladd& (0+127),f
  4995     0B89  2B83               	goto	u2875
  4996     0B8A                     l2607:
  4997     0B8A  3001               	movlw	1
  4998     0B8B  07FA               	addwf	___fladd@bexp,f
  4999     0B8C  2C45               	goto	l2645
  5000     0B8D                     l2609:
  5001     0B8D  0873               	movf	___fladd@b+3,w
  5002     0B8E  3A80               	xorlw	128
  5003     0B8F  00FF               	movwf	btemp+1
  5004     0B90  0877               	movf	___fladd@a+3,w
  5005     0B91  3A80               	xorlw	128
  5006     0B92  027F               	subwf	btemp+1,w
  5007     0B93  1D03               	skipz
  5008     0B94  2B9F               	goto	u2883
  5009     0B95  0876               	movf	___fladd@a+2,w
  5010     0B96  0272               	subwf	___fladd@b+2,w
  5011     0B97  1D03               	skipz
  5012     0B98  2B9F               	goto	u2883
  5013     0B99  0875               	movf	___fladd@a+1,w
  5014     0B9A  0271               	subwf	___fladd@b+1,w
  5015     0B9B  1D03               	skipz
  5016     0B9C  2B9F               	goto	u2883
  5017     0B9D  0874               	movf	___fladd@a,w
  5018     0B9E  0270               	subwf	___fladd@b,w
  5019     0B9F                     u2883:
  5020     0B9F  1803               	skipnc
  5021     0BA0  2BA2               	goto	u2881
  5022     0BA1  2BA3               	goto	u2880
  5023     0BA2                     u2881:
  5024     0BA2  2BFC               	goto	l2621
  5025     0BA3                     u2880:
  5026     0BA3                     l2611:
  5027     0BA3  30FF               	movlw	255
  5028     0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  5029     0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  5030     0BA6  00A0               	movwf	??___fladd
  5031     0BA7  30FF               	movlw	255
  5032     0BA8  00A1               	movwf	??___fladd+1
  5033     0BA9  30FF               	movlw	255
  5034     0BAA  00A2               	movwf	??___fladd+2
  5035     0BAB  30FF               	movlw	255
  5036     0BAC  00A3               	movwf	??___fladd+3
  5037     0BAD  0874               	movf	___fladd@a,w
  5038     0BAE  00A4               	movwf	??___fladd+4
  5039     0BAF  0875               	movf	___fladd@a+1,w
  5040     0BB0  00A5               	movwf	??___fladd+5
  5041     0BB1  0876               	movf	___fladd@a+2,w
  5042     0BB2  00A6               	movwf	??___fladd+6
  5043     0BB3  0877               	movf	___fladd@a+3,w
  5044     0BB4  00A7               	movwf	??___fladd+7
  5045     0BB5  0870               	movf	___fladd@b,w
  5046     0BB6  02A4               	subwf	??___fladd+4,f
  5047     0BB7  0871               	movf	___fladd@b+1,w
  5048     0BB8  1C03               	skipc
  5049     0BB9  0F71               	incfsz	___fladd@b+1,w
  5050     0BBA  2BBC               	goto	u2891
  5051     0BBB  2BBD               	goto	u2892
  5052     0BBC                     u2891:
  5053     0BBC  02A5               	subwf	??___fladd+5,f
  5054     0BBD                     u2892:
  5055     0BBD  0872               	movf	___fladd@b+2,w
  5056     0BBE  1C03               	skipc
  5057     0BBF  0F72               	incfsz	___fladd@b+2,w
  5058     0BC0  2BC2               	goto	u2893
  5059     0BC1  2BC3               	goto	u2894
  5060     0BC2                     u2893:
  5061     0BC2  02A6               	subwf	??___fladd+6,f
  5062     0BC3                     u2894:
  5063     0BC3  0873               	movf	___fladd@b+3,w
  5064     0BC4  1C03               	skipc
  5065     0BC5  0F73               	incfsz	___fladd@b+3,w
  5066     0BC6  2BC8               	goto	u2895
  5067     0BC7  2BC9               	goto	u2896
  5068     0BC8                     u2895:
  5069     0BC8  02A7               	subwf	??___fladd+7,f
  5070     0BC9                     u2896:
  5071     0BC9  0824               	movf	??___fladd+4,w
  5072     0BCA  07A0               	addwf	??___fladd,f
  5073     0BCB  0825               	movf	??___fladd+5,w
  5074     0BCC  1803               	skipnc
  5075     0BCD  0F25               	incfsz	??___fladd+5,w
  5076     0BCE  2BD0               	goto	u2900
  5077     0BCF  2BD1               	goto	u2901
  5078     0BD0                     u2900:
  5079     0BD0  07A1               	addwf	??___fladd+1,f
  5080     0BD1                     u2901:
  5081     0BD1  0826               	movf	??___fladd+6,w
  5082     0BD2  1803               	skipnc
  5083     0BD3  0F26               	incfsz	??___fladd+6,w
  5084     0BD4  2BD6               	goto	u2902
  5085     0BD5  2BD7               	goto	u2903
  5086     0BD6                     u2902:
  5087     0BD6  07A2               	addwf	??___fladd+2,f
  5088     0BD7                     u2903:
  5089     0BD7  0827               	movf	??___fladd+7,w
  5090     0BD8  1803               	skipnc
  5091     0BD9  0A27               	incf	??___fladd+7,w
  5092     0BDA  07A3               	addwf	??___fladd+3,f
  5093     0BDB  0823               	movf	??___fladd+3,w
  5094     0BDC  00F3               	movwf	___fladd@b+3
  5095     0BDD  0822               	movf	??___fladd+2,w
  5096     0BDE  00F2               	movwf	___fladd@b+2
  5097     0BDF  0821               	movf	??___fladd+1,w
  5098     0BE0  00F1               	movwf	___fladd@b+1
  5099     0BE1  0820               	movf	??___fladd,w
  5100     0BE2  00F0               	movwf	___fladd@b
  5101     0BE3                     l2613:
  5102     0BE3  3080               	movlw	128
  5103     0BE4  06F8               	xorwf	___fladd@signs,f
  5104     0BE5                     l2615:
  5105     0BE5  037B               	decf	___fladd@grs,w
  5106     0BE6  3AFF               	xorlw	255
  5107     0BE7  00FB               	movwf	___fladd@grs
  5108     0BE8                     l2617:
  5109     0BE8  087B               	movf	___fladd@grs,w
  5110     0BE9  1D03               	btfss	3,2
  5111     0BEA  2BEC               	goto	u2911
  5112     0BEB  2BED               	goto	u2910
  5113     0BEC                     u2911:
  5114     0BEC  2C0A               	goto	l686
  5115     0BED                     u2910:
  5116     0BED                     l2619:
  5117     0BED  3001               	movlw	1
  5118     0BEE  07F0               	addwf	___fladd@b,f
  5119     0BEF  3000               	movlw	0
  5120     0BF0  1803               	skipnc
  5121     0BF1  3001               	movlw	1
  5122     0BF2  07F1               	addwf	___fladd@b+1,f
  5123     0BF3  3000               	movlw	0
  5124     0BF4  1803               	skipnc
  5125     0BF5  3001               	movlw	1
  5126     0BF6  07F2               	addwf	___fladd@b+2,f
  5127     0BF7  3000               	movlw	0
  5128     0BF8  1803               	skipnc
  5129     0BF9  3001               	movlw	1
  5130     0BFA  07F3               	addwf	___fladd@b+3,f
  5131     0BFB  2C0A               	goto	l686
  5132     0BFC                     l2621:
  5133     0BFC  0874               	movf	___fladd@a,w
  5134     0BFD  02F0               	subwf	___fladd@b,f
  5135     0BFE  0875               	movf	___fladd@a+1,w
  5136     0BFF  1C03               	skipc
  5137     0C00  0F75               	incfsz	___fladd@a+1,w
  5138     0C01  02F1               	subwf	___fladd@b+1,f
  5139     0C02  0876               	movf	___fladd@a+2,w
  5140     0C03  1C03               	skipc
  5141     0C04  0F76               	incfsz	___fladd@a+2,w
  5142     0C05  02F2               	subwf	___fladd@b+2,f
  5143     0C06  0877               	movf	___fladd@a+3,w
  5144     0C07  1C03               	skipc
  5145     0C08  0F77               	incfsz	___fladd@a+3,w
  5146     0C09  02F3               	subwf	___fladd@b+3,f
  5147     0C0A                     l686:
  5148     0C0A  0873               	movf	___fladd@b+3,w
  5149     0C0B  0472               	iorwf	___fladd@b+2,w
  5150     0C0C  0471               	iorwf	___fladd@b+1,w
  5151     0C0D  0470               	iorwf	___fladd@b,w
  5152     0C0E  1D03               	skipz
  5153     0C0F  2C11               	goto	u2921
  5154     0C10  2C12               	goto	u2920
  5155     0C11                     u2921:
  5156     0C11  2C41               	goto	l2643
  5157     0C12                     u2920:
  5158     0C12                     l2623:
  5159     0C12  087B               	movf	___fladd@grs,w
  5160     0C13  1D03               	btfss	3,2
  5161     0C14  2C16               	goto	u2931
  5162     0C15  2C17               	goto	u2930
  5163     0C16                     u2931:
  5164     0C16  2C41               	goto	l2643
  5165     0C17                     u2930:
  5166     0C17                     l2625:
  5167     0C17  3000               	movlw	0
  5168     0C18  00F3               	movwf	?___fladd+3
  5169     0C19  3000               	movlw	0
  5170     0C1A  00F2               	movwf	?___fladd+2
  5171     0C1B  3000               	movlw	0
  5172     0C1C  00F1               	movwf	?___fladd+1
  5173     0C1D  3000               	movlw	0
  5174     0C1E  00F0               	movwf	?___fladd
  5175     0C1F  2CBD               	goto	l678
  5176     0C20                     l2629:
  5177     0C20  3001               	movlw	1
  5178     0C21  1283               	bcf	3,5	;RP0=0, select bank0
  5179     0C22  1303               	bcf	3,6	;RP1=0, select bank0
  5180     0C23  00A0               	movwf	??___fladd
  5181     0C24                     u2945:
  5182     0C24  1003               	clrc
  5183     0C25  0DF0               	rlf	___fladd@b,f
  5184     0C26  0DF1               	rlf	___fladd@b+1,f
  5185     0C27  0DF2               	rlf	___fladd@b+2,f
  5186     0C28  0DF3               	rlf	___fladd@b+3,f
  5187     0C29  0BA0               	decfsz	??___fladd,f
  5188     0C2A  2C24               	goto	u2945
  5189     0C2B                     l2631:
  5190     0C2B  1FFB               	btfss	___fladd@grs,7
  5191     0C2C  2C2E               	goto	u2951
  5192     0C2D  2C2F               	goto	u2950
  5193     0C2E                     u2951:
  5194     0C2E  2C30               	goto	l690
  5195     0C2F                     u2950:
  5196     0C2F                     l2633:
  5197     0C2F  1470               	bsf	___fladd@b,0
  5198     0C30                     l690:
  5199     0C30  1C7B               	btfss	___fladd@grs,0
  5200     0C31  2C33               	goto	u2961
  5201     0C32  2C34               	goto	u2960
  5202     0C33                     u2961:
  5203     0C33  2C38               	goto	l2637
  5204     0C34                     u2960:
  5205     0C34                     l2635:
  5206     0C34  1403               	setc
  5207     0C35  0D7B               	rlf	___fladd@grs,w
  5208     0C36  00FB               	movwf	___fladd@grs
  5209     0C37  2C3A               	goto	l2639
  5210     0C38                     l2637:
  5211     0C38  1003               	clrc
  5212     0C39  0DFB               	rlf	___fladd@grs,f
  5213     0C3A                     l2639:
  5214     0C3A  087A               	movf	___fladd@bexp,w
  5215     0C3B  1903               	btfsc	3,2
  5216     0C3C  2C3E               	goto	u2971
  5217     0C3D  2C3F               	goto	u2970
  5218     0C3E                     u2971:
  5219     0C3E  2C41               	goto	l2643
  5220     0C3F                     u2970:
  5221     0C3F                     l2641:
  5222     0C3F  3001               	movlw	1
  5223     0C40  02FA               	subwf	___fladd@bexp,f
  5224     0C41                     l2643:
  5225     0C41  1FF2               	btfss	___fladd@b+2,7
  5226     0C42  2C44               	goto	u2981
  5227     0C43  2C45               	goto	u2980
  5228     0C44                     u2981:
  5229     0C44  2C20               	goto	l2629
  5230     0C45                     u2980:
  5231     0C45                     l2645:
  5232     0C45  01F9               	clrf	___fladd@aexp
  5233     0C46                     l2647:
  5234     0C46  1FFB               	btfss	___fladd@grs,7
  5235     0C47  2C49               	goto	u2991
  5236     0C48  2C4A               	goto	u2990
  5237     0C49                     u2991:
  5238     0C49  2C58               	goto	l2655
  5239     0C4A                     u2990:
  5240     0C4A                     l2649:
  5241     0C4A  087B               	movf	___fladd@grs,w
  5242     0C4B  397F               	andlw	127
  5243     0C4C  1903               	btfsc	3,2
  5244     0C4D  2C4F               	goto	u3001
  5245     0C4E  2C50               	goto	u3000
  5246     0C4F                     u3001:
  5247     0C4F  2C53               	goto	l696
  5248     0C50                     u3000:
  5249     0C50                     l2651:
  5250     0C50  3001               	movlw	1
  5251     0C51  00F9               	movwf	___fladd@aexp
  5252     0C52  2C58               	goto	l2655
  5253     0C53                     l696:
  5254     0C53  1C70               	btfss	___fladd@b,0
  5255     0C54  2C56               	goto	u3011
  5256     0C55  2C57               	goto	u3010
  5257     0C56                     u3011:
  5258     0C56  2C58               	goto	l2655
  5259     0C57                     u3010:
  5260     0C57  2C50               	goto	l2651
  5261     0C58                     l2655:
  5262     0C58  0879               	movf	___fladd@aexp,w
  5263     0C59  1903               	btfsc	3,2
  5264     0C5A  2C5C               	goto	u3021
  5265     0C5B  2C5D               	goto	u3020
  5266     0C5C                     u3021:
  5267     0C5C  2C91               	goto	l699
  5268     0C5D                     u3020:
  5269     0C5D                     l2657:
  5270     0C5D  3001               	movlw	1
  5271     0C5E  07F0               	addwf	___fladd@b,f
  5272     0C5F  3000               	movlw	0
  5273     0C60  1803               	skipnc
  5274     0C61  3001               	movlw	1
  5275     0C62  07F1               	addwf	___fladd@b+1,f
  5276     0C63  3000               	movlw	0
  5277     0C64  1803               	skipnc
  5278     0C65  3001               	movlw	1
  5279     0C66  07F2               	addwf	___fladd@b+2,f
  5280     0C67  3000               	movlw	0
  5281     0C68  1803               	skipnc
  5282     0C69  3001               	movlw	1
  5283     0C6A  07F3               	addwf	___fladd@b+3,f
  5284     0C6B                     l2659:
  5285     0C6B  1C73               	btfss	___fladd@b+3,0
  5286     0C6C  2C6E               	goto	u3031
  5287     0C6D  2C6F               	goto	u3030
  5288     0C6E                     u3031:
  5289     0C6E  2C91               	goto	l699
  5290     0C6F                     u3030:
  5291     0C6F                     l2661:
  5292     0C6F  0870               	movf	___fladd@b,w
  5293     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5294     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5295     0C72  00A0               	movwf	??___fladd
  5296     0C73  0871               	movf	___fladd@b+1,w
  5297     0C74  00A1               	movwf	??___fladd+1
  5298     0C75  0872               	movf	___fladd@b+2,w
  5299     0C76  00A2               	movwf	??___fladd+2
  5300     0C77  0873               	movf	___fladd@b+3,w
  5301     0C78  00A3               	movwf	??___fladd+3
  5302     0C79  3001               	movlw	1
  5303     0C7A  00A4               	movwf	??___fladd+4
  5304     0C7B                     u3045:
  5305     0C7B  0D23               	rlf	??___fladd+3,w
  5306     0C7C  0CA3               	rrf	??___fladd+3,f
  5307     0C7D  0CA2               	rrf	??___fladd+2,f
  5308     0C7E  0CA1               	rrf	??___fladd+1,f
  5309     0C7F  0CA0               	rrf	??___fladd,f
  5310     0C80                     u3040:
  5311     0C80  0BA4               	decfsz	??___fladd+4,f
  5312     0C81  2C7B               	goto	u3045
  5313     0C82  0823               	movf	??___fladd+3,w
  5314     0C83  00F3               	movwf	___fladd@b+3
  5315     0C84  0822               	movf	??___fladd+2,w
  5316     0C85  00F2               	movwf	___fladd@b+2
  5317     0C86  0821               	movf	??___fladd+1,w
  5318     0C87  00F1               	movwf	___fladd@b+1
  5319     0C88  0820               	movf	??___fladd,w
  5320     0C89  00F0               	movwf	___fladd@b
  5321     0C8A  0A7A               	incf	___fladd@bexp,w
  5322     0C8B  1903               	btfsc	3,2
  5323     0C8C  2C8E               	goto	u3051
  5324     0C8D  2C8F               	goto	u3050
  5325     0C8E                     u3051:
  5326     0C8E  2C91               	goto	l699
  5327     0C8F                     u3050:
  5328     0C8F                     l2663:
  5329     0C8F  3001               	movlw	1
  5330     0C90  07FA               	addwf	___fladd@bexp,f
  5331     0C91                     l699:
  5332     0C91  0A7A               	incf	___fladd@bexp,w
  5333     0C92  1903               	btfsc	3,2
  5334     0C93  2C95               	goto	u3061
  5335     0C94  2C96               	goto	u3060
  5336     0C95                     u3061:
  5337     0C95  2C9B               	goto	l2667
  5338     0C96                     u3060:
  5339     0C96                     l2665:
  5340     0C96  087A               	movf	___fladd@bexp,w
  5341     0C97  1D03               	btfss	3,2
  5342     0C98  2C9A               	goto	u3071
  5343     0C99  2C9B               	goto	u3070
  5344     0C9A                     u3071:
  5345     0C9A  2CA9               	goto	l2673
  5346     0C9B                     u3070:
  5347     0C9B                     l2667:
  5348     0C9B  3000               	movlw	0
  5349     0C9C  00F3               	movwf	___fladd@b+3
  5350     0C9D  3000               	movlw	0
  5351     0C9E  00F2               	movwf	___fladd@b+2
  5352     0C9F  3000               	movlw	0
  5353     0CA0  00F1               	movwf	___fladd@b+1
  5354     0CA1  3000               	movlw	0
  5355     0CA2  00F0               	movwf	___fladd@b
  5356     0CA3                     l2669:
  5357     0CA3  087A               	movf	___fladd@bexp,w
  5358     0CA4  1D03               	btfss	3,2
  5359     0CA5  2CA7               	goto	u3081
  5360     0CA6  2CA8               	goto	u3080
  5361     0CA7                     u3081:
  5362     0CA7  2CA9               	goto	l2673
  5363     0CA8                     u3080:
  5364     0CA8                     l2671:
  5365     0CA8  01F8               	clrf	___fladd@signs
  5366     0CA9                     l2673:
  5367     0CA9  1C7A               	btfss	___fladd@bexp,0
  5368     0CAA  2CAC               	goto	u3091
  5369     0CAB  2CAD               	goto	u3090
  5370     0CAC                     u3091:
  5371     0CAC  2CAF               	goto	l2677
  5372     0CAD                     u3090:
  5373     0CAD                     l2675:
  5374     0CAD  17F2               	bsf	___fladd@b+2,7
  5375     0CAE  2CB1               	goto	l707
  5376     0CAF                     l2677:
  5377     0CAF  307F               	movlw	127
  5378     0CB0  05F2               	andwf	___fladd@b+2,f
  5379     0CB1                     l707:
  5380     0CB1  087A               	movf	___fladd@bexp,w
  5381     0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  5382     0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  5383     0CB4  00A0               	movwf	??___fladd
  5384     0CB5  1003               	clrc
  5385     0CB6  0C20               	rrf	??___fladd,w
  5386     0CB7  00F3               	movwf	___fladd@b+3
  5387     0CB8                     l2679:
  5388     0CB8  1FF8               	btfss	___fladd@signs,7
  5389     0CB9  2CBB               	goto	u3101
  5390     0CBA  2CBC               	goto	u3100
  5391     0CBB                     u3101:
  5392     0CBB  2CBD               	goto	l708
  5393     0CBC                     u3100:
  5394     0CBC                     l2681:
  5395     0CBC  17F3               	bsf	___fladd@b+3,7
  5396     0CBD                     l708:
  5397     0CBD                     l678:
  5398     0CBD  0008               	return
  5399     0CBE                     __end_of___fladd:
  5400                           
  5401                           	psect	text19
  5402     0003                     __ptext19:	
  5403 ;; *************** function ___flneg *****************
  5404 ;; Defined at:
  5405 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  f1              4    0[COMMON] unsigned char 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  4    0[COMMON] unsigned char 
  5412 ;; Registers used:
  5413 ;;		wreg
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5419 ;;      Params:         4       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0
  5422 ;;      Totals:         4       0       0       0       0
  5423 ;;Total ram usage:        4 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_efgtoa
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432     0003                     ___flneg:	
  5433                           ;psect for function ___flneg
  5434                           
  5435     0003                     l2769:	
  5436                           ;incstack = 0
  5437                           ; Regs used in ___flneg: [wreg]
  5438                           
  5439     0003  0873               	movf	___flneg@f1+3,w
  5440     0004  0472               	iorwf	___flneg@f1+2,w
  5441     0005  0471               	iorwf	___flneg@f1+1,w
  5442     0006  0470               	iorwf	___flneg@f1,w
  5443     0007  1903               	skipnz
  5444     0008  280A               	goto	u3301
  5445     0009  280B               	goto	u3300
  5446     000A                     u3301:
  5447     000A  280D               	goto	l2773
  5448     000B                     u3300:
  5449     000B                     l2771:
  5450     000B  3080               	movlw	128
  5451     000C  06F3               	xorwf	___flneg@f1+3,f
  5452     000D                     l2773:
  5453     000D                     l554:
  5454     000D  0008               	return
  5455     000E                     __end_of___flneg:
  5456                           
  5457                           	psect	text20
  5458     12C2                     __ptext20:	
  5459 ;; *************** function ___flge *****************
  5460 ;; Defined at:
  5461 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  ff1             4   26[BANK0 ] unsigned char 
  5464 ;;  ff2             4   30[BANK0 ] unsigned char 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;		None               void
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5476 ;;      Params:         0       8       0       0       0
  5477 ;;      Locals:         0       0       0       0       0
  5478 ;;      Temps:          0       4       0       0       0
  5479 ;;      Totals:         0      12       0       0       0
  5480 ;;Total ram usage:       12 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_efgtoa
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489     12C2                     ___flge:	
  5490                           ;psect for function ___flge
  5491                           
  5492     12C2                     l2749:	
  5493                           ;incstack = 0
  5494                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5495                           
  5496     12C2  3000               	movlw	0
  5497     12C3  1283               	bcf	3,5	;RP0=0, select bank0
  5498     12C4  1303               	bcf	3,6	;RP1=0, select bank0
  5499     12C5  053A               	andwf	___flge@ff1,w
  5500     12C6  00C2               	movwf	??___flge
  5501     12C7  3000               	movlw	0
  5502     12C8  053B               	andwf	___flge@ff1+1,w
  5503     12C9  00C3               	movwf	??___flge+1
  5504     12CA  3080               	movlw	128
  5505     12CB  053C               	andwf	___flge@ff1+2,w
  5506     12CC  00C4               	movwf	??___flge+2
  5507     12CD  307F               	movlw	127
  5508     12CE  053D               	andwf	___flge@ff1+3,w
  5509     12CF  00C5               	movwf	??___flge+3
  5510     12D0  0845               	movf	??___flge+3,w
  5511     12D1  0444               	iorwf	??___flge+2,w
  5512     12D2  0443               	iorwf	??___flge+1,w
  5513     12D3  0442               	iorwf	??___flge,w
  5514     12D4  1D03               	skipz
  5515     12D5  2AD7               	goto	u3231
  5516     12D6  2AD8               	goto	u3230
  5517     12D7                     u3231:
  5518     12D7  2AE0               	goto	l542
  5519     12D8                     u3230:
  5520     12D8                     l2751:
  5521     12D8  3000               	movlw	0
  5522     12D9  00BD               	movwf	___flge@ff1+3
  5523     12DA  3000               	movlw	0
  5524     12DB  00BC               	movwf	___flge@ff1+2
  5525     12DC  3000               	movlw	0
  5526     12DD  00BB               	movwf	___flge@ff1+1
  5527     12DE  3000               	movlw	0
  5528     12DF  00BA               	movwf	___flge@ff1
  5529     12E0                     l542:
  5530     12E0  3000               	movlw	0
  5531     12E1  053E               	andwf	___flge@ff2,w
  5532     12E2  00C2               	movwf	??___flge
  5533     12E3  3000               	movlw	0
  5534     12E4  053F               	andwf	___flge@ff2+1,w
  5535     12E5  00C3               	movwf	??___flge+1
  5536     12E6  3080               	movlw	128
  5537     12E7  0540               	andwf	___flge@ff2+2,w
  5538     12E8  00C4               	movwf	??___flge+2
  5539     12E9  307F               	movlw	127
  5540     12EA  0541               	andwf	___flge@ff2+3,w
  5541     12EB  00C5               	movwf	??___flge+3
  5542     12EC  0845               	movf	??___flge+3,w
  5543     12ED  0444               	iorwf	??___flge+2,w
  5544     12EE  0443               	iorwf	??___flge+1,w
  5545     12EF  0442               	iorwf	??___flge,w
  5546     12F0  1D03               	skipz
  5547     12F1  2AF3               	goto	u3241
  5548     12F2  2AF4               	goto	u3240
  5549     12F3                     u3241:
  5550     12F3  2AFC               	goto	l2755
  5551     12F4                     u3240:
  5552     12F4                     l2753:
  5553     12F4  3000               	movlw	0
  5554     12F5  00C1               	movwf	___flge@ff2+3
  5555     12F6  3000               	movlw	0
  5556     12F7  00C0               	movwf	___flge@ff2+2
  5557     12F8  3000               	movlw	0
  5558     12F9  00BF               	movwf	___flge@ff2+1
  5559     12FA  3000               	movlw	0
  5560     12FB  00BE               	movwf	___flge@ff2
  5561     12FC                     l2755:
  5562     12FC  1FBD               	btfss	___flge@ff1+3,7
  5563     12FD  2AFF               	goto	u3251
  5564     12FE  2B00               	goto	u3250
  5565     12FF                     u3251:
  5566     12FF  2B24               	goto	l2759
  5567     1300                     u3250:
  5568     1300                     l2757:
  5569     1300  3000               	movlw	0
  5570     1301  00C2               	movwf	??___flge
  5571     1302  3000               	movlw	0
  5572     1303  00C3               	movwf	??___flge+1
  5573     1304  3000               	movlw	0
  5574     1305  00C4               	movwf	??___flge+2
  5575     1306  3080               	movlw	128
  5576     1307  00C5               	movwf	??___flge+3
  5577     1308  083A               	movf	___flge@ff1,w
  5578     1309  02C2               	subwf	??___flge,f
  5579     130A  083B               	movf	___flge@ff1+1,w
  5580     130B  1C03               	skipc
  5581     130C  0F3B               	incfsz	___flge@ff1+1,w
  5582     130D  2B0F               	goto	u3261
  5583     130E  2B10               	goto	u3262
  5584     130F                     u3261:
  5585     130F  02C3               	subwf	??___flge+1,f
  5586     1310                     u3262:
  5587     1310  083C               	movf	___flge@ff1+2,w
  5588     1311  1C03               	skipc
  5589     1312  0F3C               	incfsz	___flge@ff1+2,w
  5590     1313  2B15               	goto	u3263
  5591     1314  2B16               	goto	u3264
  5592     1315                     u3263:
  5593     1315  02C4               	subwf	??___flge+2,f
  5594     1316                     u3264:
  5595     1316  083D               	movf	___flge@ff1+3,w
  5596     1317  1C03               	skipc
  5597     1318  0F3D               	incfsz	___flge@ff1+3,w
  5598     1319  2B1B               	goto	u3265
  5599     131A  2B1C               	goto	u3266
  5600     131B                     u3265:
  5601     131B  02C5               	subwf	??___flge+3,f
  5602     131C                     u3266:
  5603     131C  0845               	movf	??___flge+3,w
  5604     131D  00BD               	movwf	___flge@ff1+3
  5605     131E  0844               	movf	??___flge+2,w
  5606     131F  00BC               	movwf	___flge@ff1+2
  5607     1320  0843               	movf	??___flge+1,w
  5608     1321  00BB               	movwf	___flge@ff1+1
  5609     1322  0842               	movf	??___flge,w
  5610     1323  00BA               	movwf	___flge@ff1
  5611     1324                     l2759:
  5612     1324  1FC1               	btfss	___flge@ff2+3,7
  5613     1325  2B27               	goto	u3271
  5614     1326  2B28               	goto	u3270
  5615     1327                     u3271:
  5616     1327  2B4C               	goto	l545
  5617     1328                     u3270:
  5618     1328                     l2761:
  5619     1328  3000               	movlw	0
  5620     1329  00C2               	movwf	??___flge
  5621     132A  3000               	movlw	0
  5622     132B  00C3               	movwf	??___flge+1
  5623     132C  3000               	movlw	0
  5624     132D  00C4               	movwf	??___flge+2
  5625     132E  3080               	movlw	128
  5626     132F  00C5               	movwf	??___flge+3
  5627     1330  083E               	movf	___flge@ff2,w
  5628     1331  02C2               	subwf	??___flge,f
  5629     1332  083F               	movf	___flge@ff2+1,w
  5630     1333  1C03               	skipc
  5631     1334  0F3F               	incfsz	___flge@ff2+1,w
  5632     1335  2B37               	goto	u3281
  5633     1336  2B38               	goto	u3282
  5634     1337                     u3281:
  5635     1337  02C3               	subwf	??___flge+1,f
  5636     1338                     u3282:
  5637     1338  0840               	movf	___flge@ff2+2,w
  5638     1339  1C03               	skipc
  5639     133A  0F40               	incfsz	___flge@ff2+2,w
  5640     133B  2B3D               	goto	u3283
  5641     133C  2B3E               	goto	u3284
  5642     133D                     u3283:
  5643     133D  02C4               	subwf	??___flge+2,f
  5644     133E                     u3284:
  5645     133E  0841               	movf	___flge@ff2+3,w
  5646     133F  1C03               	skipc
  5647     1340  0F41               	incfsz	___flge@ff2+3,w
  5648     1341  2B43               	goto	u3285
  5649     1342  2B44               	goto	u3286
  5650     1343                     u3285:
  5651     1343  02C5               	subwf	??___flge+3,f
  5652     1344                     u3286:
  5653     1344  0845               	movf	??___flge+3,w
  5654     1345  00C1               	movwf	___flge@ff2+3
  5655     1346  0844               	movf	??___flge+2,w
  5656     1347  00C0               	movwf	___flge@ff2+2
  5657     1348  0843               	movf	??___flge+1,w
  5658     1349  00BF               	movwf	___flge@ff2+1
  5659     134A  0842               	movf	??___flge,w
  5660     134B  00BE               	movwf	___flge@ff2
  5661     134C                     l545:
  5662     134C  3080               	movlw	128
  5663     134D  06BD               	xorwf	___flge@ff1+3,f
  5664     134E  3080               	movlw	128
  5665     134F  06C1               	xorwf	___flge@ff2+3,f
  5666     1350  0841               	movf	___flge@ff2+3,w
  5667     1351  023D               	subwf	___flge@ff1+3,w
  5668     1352  1D03               	skipz
  5669     1353  2B5E               	goto	u3295
  5670     1354  0840               	movf	___flge@ff2+2,w
  5671     1355  023C               	subwf	___flge@ff1+2,w
  5672     1356  1D03               	skipz
  5673     1357  2B5E               	goto	u3295
  5674     1358  083F               	movf	___flge@ff2+1,w
  5675     1359  023B               	subwf	___flge@ff1+1,w
  5676     135A  1D03               	skipz
  5677     135B  2B5E               	goto	u3295
  5678     135C  083E               	movf	___flge@ff2,w
  5679     135D  023A               	subwf	___flge@ff1,w
  5680     135E                     u3295:
  5681     135E  1803               	skipnc
  5682     135F  2B61               	goto	u3291
  5683     1360  2B62               	goto	u3290
  5684     1361                     u3291:
  5685     1361  2B64               	goto	l2765
  5686     1362                     u3290:
  5687     1362                     l2763:
  5688     1362  1003               	clrc
  5689     1363  2B65               	goto	l550
  5690     1364                     l2765:
  5691     1364  1403               	setc
  5692     1365                     l550:
  5693     1365  0008               	return
  5694     1366                     __end_of___flge:
  5695                           
  5696                           	psect	text21
  5697     1F61                     __ptext21:	
  5698 ;; *************** function ___fleq *****************
  5699 ;; Defined at:
  5700 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  ff1             4    0[COMMON] unsigned char 
  5703 ;;  ff2             4    4[COMMON] unsigned char 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;		None               void
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5715 ;;      Params:         8       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0
  5717 ;;      Temps:          4       0       0       0       0
  5718 ;;      Totals:        12       0       0       0       0
  5719 ;;Total ram usage:       12 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_efgtoa
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728     1F61                     ___fleq:	
  5729                           ;psect for function ___fleq
  5730                           
  5731     1F61                     l2737:	
  5732                           ;incstack = 0
  5733                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5734                           
  5735     1F61  3000               	movlw	0
  5736     1F62  0570               	andwf	___fleq@ff1,w
  5737     1F63  00F8               	movwf	??___fleq
  5738     1F64  3000               	movlw	0
  5739     1F65  0571               	andwf	___fleq@ff1+1,w
  5740     1F66  00F9               	movwf	??___fleq+1
  5741     1F67  3080               	movlw	128
  5742     1F68  0572               	andwf	___fleq@ff1+2,w
  5743     1F69  00FA               	movwf	??___fleq+2
  5744     1F6A  307F               	movlw	127
  5745     1F6B  0573               	andwf	___fleq@ff1+3,w
  5746     1F6C  00FB               	movwf	??___fleq+3
  5747     1F6D  087B               	movf	??___fleq+3,w
  5748     1F6E  047A               	iorwf	??___fleq+2,w
  5749     1F6F  0479               	iorwf	??___fleq+1,w
  5750     1F70  0478               	iorwf	??___fleq,w
  5751     1F71  1D03               	skipz
  5752     1F72  2F74               	goto	u3201
  5753     1F73  2F75               	goto	u3200
  5754     1F74                     u3201:
  5755     1F74  2F7D               	goto	l533
  5756     1F75                     u3200:
  5757     1F75                     l2739:
  5758     1F75  3000               	movlw	0
  5759     1F76  00F3               	movwf	___fleq@ff1+3
  5760     1F77  3000               	movlw	0
  5761     1F78  00F2               	movwf	___fleq@ff1+2
  5762     1F79  3000               	movlw	0
  5763     1F7A  00F1               	movwf	___fleq@ff1+1
  5764     1F7B  3000               	movlw	0
  5765     1F7C  00F0               	movwf	___fleq@ff1
  5766     1F7D                     l533:
  5767     1F7D  3000               	movlw	0
  5768     1F7E  0574               	andwf	___fleq@ff2,w
  5769     1F7F  00F8               	movwf	??___fleq
  5770     1F80  3000               	movlw	0
  5771     1F81  0575               	andwf	___fleq@ff2+1,w
  5772     1F82  00F9               	movwf	??___fleq+1
  5773     1F83  3080               	movlw	128
  5774     1F84  0576               	andwf	___fleq@ff2+2,w
  5775     1F85  00FA               	movwf	??___fleq+2
  5776     1F86  307F               	movlw	127
  5777     1F87  0577               	andwf	___fleq@ff2+3,w
  5778     1F88  00FB               	movwf	??___fleq+3
  5779     1F89  087B               	movf	??___fleq+3,w
  5780     1F8A  047A               	iorwf	??___fleq+2,w
  5781     1F8B  0479               	iorwf	??___fleq+1,w
  5782     1F8C  0478               	iorwf	??___fleq,w
  5783     1F8D  1D03               	skipz
  5784     1F8E  2F90               	goto	u3211
  5785     1F8F  2F91               	goto	u3210
  5786     1F90                     u3211:
  5787     1F90  2F99               	goto	l534
  5788     1F91                     u3210:
  5789     1F91                     l2741:
  5790     1F91  3000               	movlw	0
  5791     1F92  00F7               	movwf	___fleq@ff2+3
  5792     1F93  3000               	movlw	0
  5793     1F94  00F6               	movwf	___fleq@ff2+2
  5794     1F95  3000               	movlw	0
  5795     1F96  00F5               	movwf	___fleq@ff2+1
  5796     1F97  3000               	movlw	0
  5797     1F98  00F4               	movwf	___fleq@ff2
  5798     1F99                     l534:
  5799     1F99  0877               	movf	___fleq@ff2+3,w
  5800     1F9A  0673               	xorwf	___fleq@ff1+3,w
  5801     1F9B  1D03               	skipz
  5802     1F9C  2FA7               	goto	u3225
  5803     1F9D  0876               	movf	___fleq@ff2+2,w
  5804     1F9E  0672               	xorwf	___fleq@ff1+2,w
  5805     1F9F  1D03               	skipz
  5806     1FA0  2FA7               	goto	u3225
  5807     1FA1  0875               	movf	___fleq@ff2+1,w
  5808     1FA2  0671               	xorwf	___fleq@ff1+1,w
  5809     1FA3  1D03               	skipz
  5810     1FA4  2FA7               	goto	u3225
  5811     1FA5  0874               	movf	___fleq@ff2,w
  5812     1FA6  0670               	xorwf	___fleq@ff1,w
  5813     1FA7                     u3225:
  5814     1FA7  1903               	skipnz
  5815     1FA8  2FAA               	goto	u3221
  5816     1FA9  2FAB               	goto	u3220
  5817     1FAA                     u3221:
  5818     1FAA  2FAD               	goto	l2745
  5819     1FAB                     u3220:
  5820     1FAB                     l2743:
  5821     1FAB  1003               	clrc
  5822     1FAC  2FAE               	goto	l539
  5823     1FAD                     l2745:
  5824     1FAD  1403               	setc
  5825     1FAE                     l539:
  5826     1FAE  0008               	return
  5827     1FAF                     __end_of___fleq:
  5828                           
  5829                           	psect	text22
  5830     0892                     __ptext22:	
  5831 ;; *************** function ___fldiv *****************
  5832 ;; Defined at:
  5833 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  a               4    0[COMMON] unsigned char 
  5836 ;;  b               4    4[COMMON] unsigned char 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  grs             4    7[BANK0 ] unsigned long 
  5839 ;;  rem             4    0[BANK0 ] unsigned long 
  5840 ;;  new_exp         2    5[BANK0 ] short 
  5841 ;;  aexp            1   12[BANK0 ] unsigned char 
  5842 ;;  bexp            1   11[BANK0 ] unsigned char 
  5843 ;;  sign            1    4[BANK0 ] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  4    0[COMMON] unsigned char 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0, btemp+1
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5853 ;;      Params:         8       0       0       0       0
  5854 ;;      Locals:         0      13       0       0       0
  5855 ;;      Temps:          5       0       0       0       0
  5856 ;;      Totals:        13      13       0       0       0
  5857 ;;Total ram usage:       26 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_efgtoa
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866     0892                     ___fldiv:	
  5867                           ;psect for function ___fldiv
  5868                           
  5869     0892                     l2819:	
  5870                           ;incstack = 0
  5871                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5872                           
  5873     0892  0877               	movf	___fldiv@b+3,w
  5874     0893  1283               	bcf	3,5	;RP0=0, select bank0
  5875     0894  1303               	bcf	3,6	;RP1=0, select bank0
  5876     0895  00A4               	movwf	___fldiv@sign
  5877     0896                     l2821:
  5878     0896  3080               	movlw	128
  5879     0897  05A4               	andwf	___fldiv@sign,f
  5880     0898                     l2823:
  5881     0898  0877               	movf	___fldiv@b+3,w
  5882     0899  00F8               	movwf	??___fldiv
  5883     089A  0778               	addwf	??___fldiv,w
  5884     089B  00AB               	movwf	___fldiv@bexp
  5885     089C                     l2825:
  5886     089C  1FF6               	btfss	___fldiv@b+2,7
  5887     089D  289F               	goto	u3411
  5888     089E  28A0               	goto	u3410
  5889     089F                     u3411:
  5890     089F  28A1               	goto	l2829
  5891     08A0                     u3410:
  5892     08A0                     l2827:
  5893     08A0  142B               	bsf	___fldiv@bexp,0
  5894     08A1                     l2829:
  5895     08A1  082B               	movf	___fldiv@bexp,w
  5896     08A2  1903               	btfsc	3,2
  5897     08A3  28A5               	goto	u3421
  5898     08A4  28A6               	goto	u3420
  5899     08A5                     u3421:
  5900     08A5  28B6               	goto	l2839
  5901     08A6                     u3420:
  5902     08A6                     l2831:
  5903     08A6  0A2B               	incf	___fldiv@bexp,w
  5904     08A7  1D03               	btfss	3,2
  5905     08A8  28AA               	goto	u3431
  5906     08A9  28AB               	goto	u3430
  5907     08AA                     u3431:
  5908     08AA  28B3               	goto	l2835
  5909     08AB                     u3430:
  5910     08AB                     l2833:
  5911     08AB  3000               	movlw	0
  5912     08AC  00F7               	movwf	___fldiv@b+3
  5913     08AD  3000               	movlw	0
  5914     08AE  00F6               	movwf	___fldiv@b+2
  5915     08AF  3000               	movlw	0
  5916     08B0  00F5               	movwf	___fldiv@b+1
  5917     08B1  3000               	movlw	0
  5918     08B2  00F4               	movwf	___fldiv@b
  5919     08B3                     l2835:
  5920     08B3  17F6               	bsf	___fldiv@b+2,7
  5921     08B4                     l2837:
  5922     08B4  01F7               	clrf	___fldiv@b+3
  5923     08B5  28BE               	goto	l2841
  5924     08B6                     l2839:
  5925     08B6  3000               	movlw	0
  5926     08B7  00F7               	movwf	___fldiv@b+3
  5927     08B8  3000               	movlw	0
  5928     08B9  00F6               	movwf	___fldiv@b+2
  5929     08BA  3000               	movlw	0
  5930     08BB  00F5               	movwf	___fldiv@b+1
  5931     08BC  3000               	movlw	0
  5932     08BD  00F4               	movwf	___fldiv@b
  5933     08BE                     l2841:
  5934     08BE  0873               	movf	___fldiv@a+3,w
  5935     08BF  3980               	andlw	128
  5936     08C0  06A4               	xorwf	___fldiv@sign,f
  5937     08C1                     l2843:
  5938     08C1  0873               	movf	___fldiv@a+3,w
  5939     08C2  00F8               	movwf	??___fldiv
  5940     08C3  0778               	addwf	??___fldiv,w
  5941     08C4  00AC               	movwf	___fldiv@aexp
  5942     08C5                     l2845:
  5943     08C5  1FF2               	btfss	___fldiv@a+2,7
  5944     08C6  28C8               	goto	u3441
  5945     08C7  28C9               	goto	u3440
  5946     08C8                     u3441:
  5947     08C8  28CA               	goto	l2849
  5948     08C9                     u3440:
  5949     08C9                     l2847:
  5950     08C9  142C               	bsf	___fldiv@aexp,0
  5951     08CA                     l2849:
  5952     08CA  082C               	movf	___fldiv@aexp,w
  5953     08CB  1903               	btfsc	3,2
  5954     08CC  28CE               	goto	u3451
  5955     08CD  28CF               	goto	u3450
  5956     08CE                     u3451:
  5957     08CE  28DF               	goto	l2859
  5958     08CF                     u3450:
  5959     08CF                     l2851:
  5960     08CF  0A2C               	incf	___fldiv@aexp,w
  5961     08D0  1D03               	btfss	3,2
  5962     08D1  28D3               	goto	u3461
  5963     08D2  28D4               	goto	u3460
  5964     08D3                     u3461:
  5965     08D3  28DC               	goto	l2855
  5966     08D4                     u3460:
  5967     08D4                     l2853:
  5968     08D4  3000               	movlw	0
  5969     08D5  00F3               	movwf	___fldiv@a+3
  5970     08D6  3000               	movlw	0
  5971     08D7  00F2               	movwf	___fldiv@a+2
  5972     08D8  3000               	movlw	0
  5973     08D9  00F1               	movwf	___fldiv@a+1
  5974     08DA  3000               	movlw	0
  5975     08DB  00F0               	movwf	___fldiv@a
  5976     08DC                     l2855:
  5977     08DC  17F2               	bsf	___fldiv@a+2,7
  5978     08DD                     l2857:
  5979     08DD  01F3               	clrf	___fldiv@a+3
  5980     08DE  28E7               	goto	l721
  5981     08DF                     l2859:
  5982     08DF  3000               	movlw	0
  5983     08E0  00F3               	movwf	___fldiv@a+3
  5984     08E1  3000               	movlw	0
  5985     08E2  00F2               	movwf	___fldiv@a+2
  5986     08E3  3000               	movlw	0
  5987     08E4  00F1               	movwf	___fldiv@a+1
  5988     08E5  3000               	movlw	0
  5989     08E6  00F0               	movwf	___fldiv@a
  5990     08E7                     l721:
  5991     08E7  0873               	movf	___fldiv@a+3,w
  5992     08E8  0472               	iorwf	___fldiv@a+2,w
  5993     08E9  0471               	iorwf	___fldiv@a+1,w
  5994     08EA  0470               	iorwf	___fldiv@a,w
  5995     08EB  1D03               	skipz
  5996     08EC  28EE               	goto	u3471
  5997     08ED  28EF               	goto	u3470
  5998     08EE                     u3471:
  5999     08EE  2906               	goto	l2869
  6000     08EF                     u3470:
  6001     08EF                     l2861:
  6002     08EF  3000               	movlw	0
  6003     08F0  00F7               	movwf	___fldiv@b+3
  6004     08F1  3000               	movlw	0
  6005     08F2  00F6               	movwf	___fldiv@b+2
  6006     08F3  3000               	movlw	0
  6007     08F4  00F5               	movwf	___fldiv@b+1
  6008     08F5  3000               	movlw	0
  6009     08F6  00F4               	movwf	___fldiv@b
  6010     08F7  3080               	movlw	128
  6011     08F8  04F6               	iorwf	___fldiv@b+2,f
  6012     08F9  307F               	movlw	127
  6013     08FA  04F7               	iorwf	___fldiv@b+3,f
  6014     08FB                     l2863:
  6015     08FB  0824               	movf	___fldiv@sign,w
  6016     08FC  04F7               	iorwf	___fldiv@b+3,f
  6017     08FD                     l2865:
  6018     08FD  0877               	movf	___fldiv@b+3,w
  6019     08FE  00F3               	movwf	?___fldiv+3
  6020     08FF  0876               	movf	___fldiv@b+2,w
  6021     0900  00F2               	movwf	?___fldiv+2
  6022     0901  0875               	movf	___fldiv@b+1,w
  6023     0902  00F1               	movwf	?___fldiv+1
  6024     0903  0874               	movf	___fldiv@b,w
  6025     0904  00F0               	movwf	?___fldiv
  6026     0905  2A61               	goto	l723
  6027     0906                     l2869:
  6028     0906  082B               	movf	___fldiv@bexp,w
  6029     0907  1D03               	btfss	3,2
  6030     0908  290A               	goto	u3481
  6031     0909  290B               	goto	u3480
  6032     090A                     u3481:
  6033     090A  2914               	goto	l2875
  6034     090B                     u3480:
  6035     090B                     l2871:
  6036     090B  3000               	movlw	0
  6037     090C  00F3               	movwf	?___fldiv+3
  6038     090D  3000               	movlw	0
  6039     090E  00F2               	movwf	?___fldiv+2
  6040     090F  3000               	movlw	0
  6041     0910  00F1               	movwf	?___fldiv+1
  6042     0911  3000               	movlw	0
  6043     0912  00F0               	movwf	?___fldiv
  6044     0913  2A61               	goto	l723
  6045     0914                     l2875:
  6046     0914  082B               	movf	___fldiv@bexp,w
  6047     0915  00F8               	movwf	??___fldiv
  6048     0916  01F9               	clrf	??___fldiv+1
  6049     0917  0879               	movf	??___fldiv+1,w
  6050     0918  00FB               	movwf	??___fldiv+3
  6051     0919  082C               	movf	___fldiv@aexp,w
  6052     091A  0278               	subwf	??___fldiv,w
  6053     091B  00FA               	movwf	??___fldiv+2
  6054     091C  1C03               	skipc
  6055     091D  03FB               	decf	??___fldiv+3,f
  6056     091E  087A               	movf	??___fldiv+2,w
  6057     091F  3E7F               	addlw	127
  6058     0920  00A5               	movwf	___fldiv@new_exp
  6059     0921  087B               	movf	??___fldiv+3,w
  6060     0922  1803               	skipnc
  6061     0923  3E01               	addlw	1
  6062     0924  3E00               	addlw	0
  6063     0925  00A6               	movwf	___fldiv@new_exp+1
  6064     0926                     l2877:
  6065     0926  0877               	movf	___fldiv@b+3,w
  6066     0927  00A3               	movwf	___fldiv@rem+3
  6067     0928  0876               	movf	___fldiv@b+2,w
  6068     0929  00A2               	movwf	___fldiv@rem+2
  6069     092A  0875               	movf	___fldiv@b+1,w
  6070     092B  00A1               	movwf	___fldiv@rem+1
  6071     092C  0874               	movf	___fldiv@b,w
  6072     092D  00A0               	movwf	___fldiv@rem
  6073     092E                     l2879:
  6074     092E  3000               	movlw	0
  6075     092F  00F7               	movwf	___fldiv@b+3
  6076     0930  3000               	movlw	0
  6077     0931  00F6               	movwf	___fldiv@b+2
  6078     0932  3000               	movlw	0
  6079     0933  00F5               	movwf	___fldiv@b+1
  6080     0934  3000               	movlw	0
  6081     0935  00F4               	movwf	___fldiv@b
  6082     0936                     l2881:
  6083     0936  3000               	movlw	0
  6084     0937  00AA               	movwf	___fldiv@grs+3
  6085     0938  3000               	movlw	0
  6086     0939  00A9               	movwf	___fldiv@grs+2
  6087     093A  3000               	movlw	0
  6088     093B  00A8               	movwf	___fldiv@grs+1
  6089     093C  3000               	movlw	0
  6090     093D  00A7               	movwf	___fldiv@grs
  6091     093E                     l2883:
  6092     093E  01AC               	clrf	___fldiv@aexp
  6093     093F  298E               	goto	l2903
  6094     0940                     l2885:
  6095     0940  082C               	movf	___fldiv@aexp,w
  6096     0941  1903               	btfsc	3,2
  6097     0942  2944               	goto	u3491
  6098     0943  2945               	goto	u3490
  6099     0944                     u3491:
  6100     0944  2965               	goto	l2895
  6101     0945                     u3490:
  6102     0945                     l2887:
  6103     0945  3001               	movlw	1
  6104     0946  00F8               	movwf	??___fldiv
  6105     0947                     u3505:
  6106     0947  1003               	clrc
  6107     0948  0DA0               	rlf	___fldiv@rem,f
  6108     0949  0DA1               	rlf	___fldiv@rem+1,f
  6109     094A  0DA2               	rlf	___fldiv@rem+2,f
  6110     094B  0DA3               	rlf	___fldiv@rem+3,f
  6111     094C  0BF8               	decfsz	??___fldiv,f
  6112     094D  2947               	goto	u3505
  6113     094E  3001               	movlw	1
  6114     094F  00F8               	movwf	??___fldiv
  6115     0950                     u3515:
  6116     0950  1003               	clrc
  6117     0951  0DF4               	rlf	___fldiv@b,f
  6118     0952  0DF5               	rlf	___fldiv@b+1,f
  6119     0953  0DF6               	rlf	___fldiv@b+2,f
  6120     0954  0DF7               	rlf	___fldiv@b+3,f
  6121     0955  0BF8               	decfsz	??___fldiv,f
  6122     0956  2950               	goto	u3515
  6123     0957                     l2889:
  6124     0957  1FAA               	btfss	___fldiv@grs+3,7
  6125     0958  295A               	goto	u3521
  6126     0959  295B               	goto	u3520
  6127     095A                     u3521:
  6128     095A  295C               	goto	l2893
  6129     095B                     u3520:
  6130     095B                     l2891:
  6131     095B  1474               	bsf	___fldiv@b,0
  6132     095C                     l2893:
  6133     095C  3001               	movlw	1
  6134     095D  00F8               	movwf	??___fldiv
  6135     095E                     u3535:
  6136     095E  1003               	clrc
  6137     095F  0DA7               	rlf	___fldiv@grs,f
  6138     0960  0DA8               	rlf	___fldiv@grs+1,f
  6139     0961  0DA9               	rlf	___fldiv@grs+2,f
  6140     0962  0DAA               	rlf	___fldiv@grs+3,f
  6141     0963  0BF8               	decfsz	??___fldiv,f
  6142     0964  295E               	goto	u3535
  6143     0965                     l2895:
  6144     0965  0873               	movf	___fldiv@a+3,w
  6145     0966  0223               	subwf	___fldiv@rem+3,w
  6146     0967  1D03               	skipz
  6147     0968  2973               	goto	u3545
  6148     0969  0872               	movf	___fldiv@a+2,w
  6149     096A  0222               	subwf	___fldiv@rem+2,w
  6150     096B  1D03               	skipz
  6151     096C  2973               	goto	u3545
  6152     096D  0871               	movf	___fldiv@a+1,w
  6153     096E  0221               	subwf	___fldiv@rem+1,w
  6154     096F  1D03               	skipz
  6155     0970  2973               	goto	u3545
  6156     0971  0870               	movf	___fldiv@a,w
  6157     0972  0220               	subwf	___fldiv@rem,w
  6158     0973                     u3545:
  6159     0973  1C03               	skipc
  6160     0974  2976               	goto	u3541
  6161     0975  2977               	goto	u3540
  6162     0976                     u3541:
  6163     0976  298C               	goto	l2901
  6164     0977                     u3540:
  6165     0977                     l2897:
  6166     0977  172A               	bsf	___fldiv@grs+3,6
  6167     0978                     l2899:
  6168     0978  0870               	movf	___fldiv@a,w
  6169     0979  02A0               	subwf	___fldiv@rem,f
  6170     097A  0871               	movf	___fldiv@a+1,w
  6171     097B  1C03               	skipc
  6172     097C  0F71               	incfsz	___fldiv@a+1,w
  6173     097D  297F               	goto	u3555
  6174     097E  2980               	goto	u3556
  6175     097F                     u3555:
  6176     097F  02A1               	subwf	___fldiv@rem+1,f
  6177     0980                     u3556:
  6178     0980  0872               	movf	___fldiv@a+2,w
  6179     0981  1C03               	skipc
  6180     0982  0F72               	incfsz	___fldiv@a+2,w
  6181     0983  2985               	goto	u3557
  6182     0984  2986               	goto	u3558
  6183     0985                     u3557:
  6184     0985  02A2               	subwf	___fldiv@rem+2,f
  6185     0986                     u3558:
  6186     0986  0873               	movf	___fldiv@a+3,w
  6187     0987  1C03               	skipc
  6188     0988  0F73               	incfsz	___fldiv@a+3,w
  6189     0989  298B               	goto	u3559
  6190     098A  298C               	goto	u3550
  6191     098B                     u3559:
  6192     098B  02A3               	subwf	___fldiv@rem+3,f
  6193     098C                     u3550:
  6194     098C                     l2901:
  6195     098C  3001               	movlw	1
  6196     098D  07AC               	addwf	___fldiv@aexp,f
  6197     098E                     l2903:
  6198     098E  301A               	movlw	26
  6199     098F  022C               	subwf	___fldiv@aexp,w
  6200     0990  1C03               	skipc
  6201     0991  2993               	goto	u3561
  6202     0992  2994               	goto	u3560
  6203     0993                     u3561:
  6204     0993  2940               	goto	l2885
  6205     0994                     u3560:
  6206     0994                     l2905:
  6207     0994  0823               	movf	___fldiv@rem+3,w
  6208     0995  0422               	iorwf	___fldiv@rem+2,w
  6209     0996  0421               	iorwf	___fldiv@rem+1,w
  6210     0997  0420               	iorwf	___fldiv@rem,w
  6211     0998  1903               	skipnz
  6212     0999  299B               	goto	u3571
  6213     099A  299C               	goto	u3570
  6214     099B                     u3571:
  6215     099B  29BB               	goto	l2919
  6216     099C                     u3570:
  6217     099C                     l2907:
  6218     099C  1427               	bsf	___fldiv@grs,0
  6219     099D  29BB               	goto	l2919
  6220     099E                     l2909:
  6221     099E  3001               	movlw	1
  6222     099F  00F8               	movwf	??___fldiv
  6223     09A0                     u3585:
  6224     09A0  1003               	clrc
  6225     09A1  0DF4               	rlf	___fldiv@b,f
  6226     09A2  0DF5               	rlf	___fldiv@b+1,f
  6227     09A3  0DF6               	rlf	___fldiv@b+2,f
  6228     09A4  0DF7               	rlf	___fldiv@b+3,f
  6229     09A5  0BF8               	decfsz	??___fldiv,f
  6230     09A6  29A0               	goto	u3585
  6231     09A7                     l2911:
  6232     09A7  1FAA               	btfss	___fldiv@grs+3,7
  6233     09A8  29AA               	goto	u3591
  6234     09A9  29AB               	goto	u3590
  6235     09AA                     u3591:
  6236     09AA  29AC               	goto	l2915
  6237     09AB                     u3590:
  6238     09AB                     l2913:
  6239     09AB  1474               	bsf	___fldiv@b,0
  6240     09AC                     l2915:
  6241     09AC  3001               	movlw	1
  6242     09AD  00F8               	movwf	??___fldiv
  6243     09AE                     u3605:
  6244     09AE  1003               	clrc
  6245     09AF  0DA7               	rlf	___fldiv@grs,f
  6246     09B0  0DA8               	rlf	___fldiv@grs+1,f
  6247     09B1  0DA9               	rlf	___fldiv@grs+2,f
  6248     09B2  0DAA               	rlf	___fldiv@grs+3,f
  6249     09B3  0BF8               	decfsz	??___fldiv,f
  6250     09B4  29AE               	goto	u3605
  6251     09B5                     l2917:
  6252     09B5  30FF               	movlw	255
  6253     09B6  07A5               	addwf	___fldiv@new_exp,f
  6254     09B7  1803               	skipnc
  6255     09B8  0AA6               	incf	___fldiv@new_exp+1,f
  6256     09B9  30FF               	movlw	255
  6257     09BA  07A6               	addwf	___fldiv@new_exp+1,f
  6258     09BB                     l2919:
  6259     09BB  1FF6               	btfss	___fldiv@b+2,7
  6260     09BC  29BE               	goto	u3611
  6261     09BD  29BF               	goto	u3610
  6262     09BE                     u3611:
  6263     09BE  299E               	goto	l2909
  6264     09BF                     u3610:
  6265     09BF                     l2921:
  6266     09BF  01AC               	clrf	___fldiv@aexp
  6267     09C0                     l2923:
  6268     09C0  1FAA               	btfss	___fldiv@grs+3,7
  6269     09C1  29C3               	goto	u3621
  6270     09C2  29C4               	goto	u3620
  6271     09C3                     u3621:
  6272     09C3  29E0               	goto	l2931
  6273     09C4                     u3620:
  6274     09C4                     l2925:
  6275     09C4  30FF               	movlw	255
  6276     09C5  0527               	andwf	___fldiv@grs,w
  6277     09C6  00F8               	movwf	??___fldiv
  6278     09C7  30FF               	movlw	255
  6279     09C8  0528               	andwf	___fldiv@grs+1,w
  6280     09C9  00F9               	movwf	??___fldiv+1
  6281     09CA  30FF               	movlw	255
  6282     09CB  0529               	andwf	___fldiv@grs+2,w
  6283     09CC  00FA               	movwf	??___fldiv+2
  6284     09CD  307F               	movlw	127
  6285     09CE  052A               	andwf	___fldiv@grs+3,w
  6286     09CF  00FB               	movwf	??___fldiv+3
  6287     09D0  087B               	movf	??___fldiv+3,w
  6288     09D1  047A               	iorwf	??___fldiv+2,w
  6289     09D2  0479               	iorwf	??___fldiv+1,w
  6290     09D3  0478               	iorwf	??___fldiv,w
  6291     09D4  1903               	skipnz
  6292     09D5  29D7               	goto	u3631
  6293     09D6  29D8               	goto	u3630
  6294     09D7                     u3631:
  6295     09D7  29DB               	goto	l737
  6296     09D8                     u3630:
  6297     09D8                     l2927:
  6298     09D8  3001               	movlw	1
  6299     09D9  00AC               	movwf	___fldiv@aexp
  6300     09DA  29E0               	goto	l2931
  6301     09DB                     l737:
  6302     09DB  1C74               	btfss	___fldiv@b,0
  6303     09DC  29DE               	goto	u3641
  6304     09DD  29DF               	goto	u3640
  6305     09DE                     u3641:
  6306     09DE  29E0               	goto	l2931
  6307     09DF                     u3640:
  6308     09DF  29D8               	goto	l2927
  6309     09E0                     l2931:
  6310     09E0  082C               	movf	___fldiv@aexp,w
  6311     09E1  1903               	btfsc	3,2
  6312     09E2  29E4               	goto	u3651
  6313     09E3  29E5               	goto	u3650
  6314     09E4                     u3651:
  6315     09E4  2A16               	goto	l2941
  6316     09E5                     u3650:
  6317     09E5                     l2933:
  6318     09E5  3001               	movlw	1
  6319     09E6  07F4               	addwf	___fldiv@b,f
  6320     09E7  3000               	movlw	0
  6321     09E8  1803               	skipnc
  6322     09E9  3001               	movlw	1
  6323     09EA  07F5               	addwf	___fldiv@b+1,f
  6324     09EB  3000               	movlw	0
  6325     09EC  1803               	skipnc
  6326     09ED  3001               	movlw	1
  6327     09EE  07F6               	addwf	___fldiv@b+2,f
  6328     09EF  3000               	movlw	0
  6329     09F0  1803               	skipnc
  6330     09F1  3001               	movlw	1
  6331     09F2  07F7               	addwf	___fldiv@b+3,f
  6332     09F3                     l2935:
  6333     09F3  1C77               	btfss	___fldiv@b+3,0
  6334     09F4  29F6               	goto	u3661
  6335     09F5  29F7               	goto	u3660
  6336     09F6                     u3661:
  6337     09F6  2A16               	goto	l2941
  6338     09F7                     u3660:
  6339     09F7                     l2937:
  6340     09F7  0874               	movf	___fldiv@b,w
  6341     09F8  00F8               	movwf	??___fldiv
  6342     09F9  0875               	movf	___fldiv@b+1,w
  6343     09FA  00F9               	movwf	??___fldiv+1
  6344     09FB  0876               	movf	___fldiv@b+2,w
  6345     09FC  00FA               	movwf	??___fldiv+2
  6346     09FD  0877               	movf	___fldiv@b+3,w
  6347     09FE  00FB               	movwf	??___fldiv+3
  6348     09FF  3001               	movlw	1
  6349     0A00  00FC               	movwf	??___fldiv+4
  6350     0A01                     u3675:
  6351     0A01  0D7B               	rlf	??___fldiv+3,w
  6352     0A02  0CFB               	rrf	??___fldiv+3,f
  6353     0A03  0CFA               	rrf	??___fldiv+2,f
  6354     0A04  0CF9               	rrf	??___fldiv+1,f
  6355     0A05  0CF8               	rrf	??___fldiv,f
  6356     0A06                     u3670:
  6357     0A06  0BFC               	decfsz	??___fldiv+4,f
  6358     0A07  2A01               	goto	u3675
  6359     0A08  087B               	movf	??___fldiv+3,w
  6360     0A09  00F7               	movwf	___fldiv@b+3
  6361     0A0A  087A               	movf	??___fldiv+2,w
  6362     0A0B  00F6               	movwf	___fldiv@b+2
  6363     0A0C  0879               	movf	??___fldiv+1,w
  6364     0A0D  00F5               	movwf	___fldiv@b+1
  6365     0A0E  0878               	movf	??___fldiv,w
  6366     0A0F  00F4               	movwf	___fldiv@b
  6367     0A10                     l2939:
  6368     0A10  3001               	movlw	1
  6369     0A11  07A5               	addwf	___fldiv@new_exp,f
  6370     0A12  1803               	skipnc
  6371     0A13  0AA6               	incf	___fldiv@new_exp+1,f
  6372     0A14  3000               	movlw	0
  6373     0A15  07A6               	addwf	___fldiv@new_exp+1,f
  6374     0A16                     l2941:
  6375     0A16  0826               	movf	___fldiv@new_exp+1,w
  6376     0A17  3A80               	xorlw	128
  6377     0A18  00FF               	movwf	btemp+1
  6378     0A19  3080               	movlw	128
  6379     0A1A  027F               	subwf	btemp+1,w
  6380     0A1B  1D03               	skipz
  6381     0A1C  2A1F               	goto	u3685
  6382     0A1D  30FF               	movlw	255
  6383     0A1E  0225               	subwf	___fldiv@new_exp,w
  6384     0A1F                     u3685:
  6385     0A1F  1C03               	skipc
  6386     0A20  2A22               	goto	u3681
  6387     0A21  2A23               	goto	u3680
  6388     0A22                     u3681:
  6389     0A22  2A31               	goto	l2945
  6390     0A23                     u3680:
  6391     0A23                     l2943:
  6392     0A23  30FF               	movlw	255
  6393     0A24  1283               	bcf	3,5	;RP0=0, select bank0
  6394     0A25  1303               	bcf	3,6	;RP1=0, select bank0
  6395     0A26  00A5               	movwf	___fldiv@new_exp
  6396     0A27  3000               	movlw	0
  6397     0A28  00A6               	movwf	___fldiv@new_exp+1
  6398     0A29  3000               	movlw	0
  6399     0A2A  00F7               	movwf	___fldiv@b+3
  6400     0A2B  3000               	movlw	0
  6401     0A2C  00F6               	movwf	___fldiv@b+2
  6402     0A2D  3000               	movlw	0
  6403     0A2E  00F5               	movwf	___fldiv@b+1
  6404     0A2F  3000               	movlw	0
  6405     0A30  00F4               	movwf	___fldiv@b
  6406     0A31                     l2945:
  6407     0A31  1283               	bcf	3,5	;RP0=0, select bank0
  6408     0A32  1303               	bcf	3,6	;RP1=0, select bank0
  6409     0A33  0826               	movf	___fldiv@new_exp+1,w
  6410     0A34  3A80               	xorlw	128
  6411     0A35  00FF               	movwf	btemp+1
  6412     0A36  3080               	movlw	128
  6413     0A37  027F               	subwf	btemp+1,w
  6414     0A38  1D03               	skipz
  6415     0A39  2A3C               	goto	u3695
  6416     0A3A  3001               	movlw	1
  6417     0A3B  0225               	subwf	___fldiv@new_exp,w
  6418     0A3C                     u3695:
  6419     0A3C  1803               	skipnc
  6420     0A3D  2A3F               	goto	u3691
  6421     0A3E  2A40               	goto	u3690
  6422     0A3F                     u3691:
  6423     0A3F  2A4D               	goto	l743
  6424     0A40                     u3690:
  6425     0A40                     l2947:
  6426     0A40  1283               	bcf	3,5	;RP0=0, select bank0
  6427     0A41  1303               	bcf	3,6	;RP1=0, select bank0
  6428     0A42  01A5               	clrf	___fldiv@new_exp
  6429     0A43  01A6               	clrf	___fldiv@new_exp+1
  6430     0A44                     l2949:
  6431     0A44  3000               	movlw	0
  6432     0A45  00F7               	movwf	___fldiv@b+3
  6433     0A46  3000               	movlw	0
  6434     0A47  00F6               	movwf	___fldiv@b+2
  6435     0A48  3000               	movlw	0
  6436     0A49  00F5               	movwf	___fldiv@b+1
  6437     0A4A  3000               	movlw	0
  6438     0A4B  00F4               	movwf	___fldiv@b
  6439     0A4C                     l2951:
  6440     0A4C  01A4               	clrf	___fldiv@sign
  6441     0A4D                     l743:
  6442     0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  6443     0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  6444     0A4F  0825               	movf	___fldiv@new_exp,w
  6445     0A50  00AB               	movwf	___fldiv@bexp
  6446     0A51                     l2953:
  6447     0A51  1C2B               	btfss	___fldiv@bexp,0
  6448     0A52  2A54               	goto	u3701
  6449     0A53  2A55               	goto	u3700
  6450     0A54                     u3701:
  6451     0A54  2A57               	goto	l2957
  6452     0A55                     u3700:
  6453     0A55                     l2955:
  6454     0A55  17F6               	bsf	___fldiv@b+2,7
  6455     0A56  2A59               	goto	l745
  6456     0A57                     l2957:
  6457     0A57  307F               	movlw	127
  6458     0A58  05F6               	andwf	___fldiv@b+2,f
  6459     0A59                     l745:
  6460     0A59  082B               	movf	___fldiv@bexp,w
  6461     0A5A  00F8               	movwf	??___fldiv
  6462     0A5B  1003               	clrc
  6463     0A5C  0C78               	rrf	??___fldiv,w
  6464     0A5D  00F7               	movwf	___fldiv@b+3
  6465     0A5E  0824               	movf	___fldiv@sign,w
  6466     0A5F  04F7               	iorwf	___fldiv@b+3,f
  6467     0A60  28FD               	goto	l2865
  6468     0A61                     l723:
  6469     0A61  0008               	return
  6470     0A62                     __end_of___fldiv:
  6471                           
  6472                           	psect	text23
  6473     1B58                     __ptext23:	
  6474 ;; *************** function _initializeHardware *****************
  6475 ;; Defined at:
  6476 ;;		line 36 in file "main.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0, pclath, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6490 ;;      Params:         0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0
  6493 ;;      Totals:         0       0       0       0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 4
  6497 ;; This function calls:
  6498 ;;		_MCP9800_Init
  6499 ;;		_initializeLCD
  6500 ;; This function is called by:
  6501 ;;		_main
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505     1B58                     _initializeHardware:	
  6506                           ;psect for function _initializeHardware
  6507                           
  6508     1B58                     l3723:	
  6509                           ;incstack = 0
  6510                           ; Regs used in _initializeHardware: [wreg+status,2+status,0+pclath+cstack]
  6511                           
  6512                           
  6513                           ;main.c: 37:     TRISAbits.TRISA0 = 1;
  6514     1B58  1683               	bsf	3,5	;RP0=1, select bank1
  6515     1B59  1303               	bcf	3,6	;RP1=0, select bank1
  6516     1B5A  1405               	bsf	5,0	;volatile
  6517                           
  6518                           ;main.c: 38:     TRISAbits.TRISA1 = 1;
  6519     1B5B  1485               	bsf	5,1	;volatile
  6520                           
  6521                           ;main.c: 39:     TRISAbits.TRISA2 = 1;
  6522     1B5C  1505               	bsf	5,2	;volatile
  6523                           
  6524                           ;main.c: 41:     ADCON1 = 0x06;
  6525     1B5D  3006               	movlw	6
  6526     1B5E  009F               	movwf	31	;volatile
  6527     1B5F                     l3725:
  6528                           
  6529                           ;main.c: 43:     initializeLCD();
  6530     1B5F  160A  158A  25B4  160A  158A  	fcall	_initializeLCD
  6531                           
  6532                           ;main.c: 44:     MCP9800_Init();
  6533     1B64  120A  158A  2000  160A  158A  	fcall	_MCP9800_Init
  6534     1B69                     l258:
  6535     1B69  0008               	return
  6536     1B6A                     __end_of_initializeHardware:
  6537                           
  6538                           	psect	text24
  6539     1DB4                     __ptext24:	
  6540 ;; *************** function _initializeLCD *****************
  6541 ;; Defined at:
  6542 ;;		line 16 in file "lcd.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;		None
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0, pclath, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6556 ;;      Params:         0       0       0       0       0
  6557 ;;      Locals:         0       0       0       0       0
  6558 ;;      Temps:          2       0       0       0       0
  6559 ;;      Totals:         2       0       0       0       0
  6560 ;;Total ram usage:        2 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 2
  6563 ;; This function calls:
  6564 ;;		_clearLCD
  6565 ;;		_sendCommandToLCD
  6566 ;; This function is called by:
  6567 ;;		_initializeHardware
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571     1DB4                     _initializeLCD:	
  6572                           ;psect for function _initializeLCD
  6573                           
  6574     1DB4                     l3609:	
  6575                           ;incstack = 0
  6576                           ; Regs used in _initializeLCD: [wreg+status,2+status,0+pclath+cstack]
  6577                           
  6578                           
  6579                           ;lcd.c: 17:     TRISCbits.TRISC1 = 0;
  6580     1DB4  1683               	bsf	3,5	;RP0=1, select bank1
  6581     1DB5  1303               	bcf	3,6	;RP1=0, select bank1
  6582     1DB6  1087               	bcf	7,1	;volatile
  6583                           
  6584                           ;lcd.c: 18:     TRISCbits.TRISC0 = 0;
  6585     1DB7  1007               	bcf	7,0	;volatile
  6586     1DB8                     l3611:
  6587                           
  6588                           ;lcd.c: 19:     TRISB = 0;
  6589     1DB8  0186               	clrf	6	;volatile
  6590     1DB9                     l3613:
  6591                           
  6592                           ;lcd.c: 20:     PORTCbits.RC1 = 0;
  6593     1DB9  1283               	bcf	3,5	;RP0=0, select bank0
  6594     1DBA  1303               	bcf	3,6	;RP1=0, select bank0
  6595     1DBB  1087               	bcf	7,1	;volatile
  6596     1DBC                     l3615:
  6597                           
  6598                           ;lcd.c: 21:     PORTCbits.RC0 = 0;
  6599     1DBC  1007               	bcf	7,0	;volatile
  6600                           
  6601                           ;lcd.c: 22:     PORTB = 0;
  6602     1DBD  0186               	clrf	6	;volatile
  6603     1DBE                     l3617:
  6604                           
  6605                           ;lcd.c: 24:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6606     1DBE  3041               	movlw	65
  6607     1DBF  00F5               	movwf	??_initializeLCD+1
  6608     1DC0  30EE               	movlw	238
  6609     1DC1  00F4               	movwf	??_initializeLCD
  6610     1DC2                     u5137:
  6611     1DC2  0BF4               	decfsz	??_initializeLCD,f
  6612     1DC3  2DC2               	goto	u5137
  6613     1DC4  0BF5               	decfsz	??_initializeLCD+1,f
  6614     1DC5  2DC2               	goto	u5137
  6615     1DC6  0000               	nop
  6616     1DC7                     l3619:
  6617                           
  6618                           ;lcd.c: 25:     sendCommandToLCD(0x38);
  6619     1DC7  3038               	movlw	56
  6620     1DC8  160A  158A  2406  160A  158A  	fcall	_sendCommandToLCD
  6621     1DCD                     l3621:
  6622                           
  6623                           ;lcd.c: 26:     sendCommandToLCD(0x0F);
  6624     1DCD  300F               	movlw	15
  6625     1DCE  160A  158A  2406  160A  158A  	fcall	_sendCommandToLCD
  6626     1DD3                     l3623:
  6627                           
  6628                           ;lcd.c: 27:     sendCommandToLCD(0x06);
  6629     1DD3  3006               	movlw	6
  6630     1DD4  160A  158A  2406  160A  158A  	fcall	_sendCommandToLCD
  6631     1DD9                     l3625:
  6632                           
  6633                           ;lcd.c: 28:     clearLCD();
  6634     1DD9  160A  158A  2348  160A  158A  	fcall	_clearLCD
  6635     1DDE                     l83:
  6636     1DDE  0008               	return
  6637     1DDF                     __end_of_initializeLCD:
  6638                           
  6639                           	psect	text25
  6640     0800                     __ptext25:	
  6641 ;; *************** function _MCP9800_Init *****************
  6642 ;; Defined at:
  6643 ;;		line 3 in file "MCP980x.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0, pclath, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6657 ;;      Params:         0       0       0       0       0
  6658 ;;      Locals:         0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0
  6660 ;;      Totals:         0       0       0       0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 3
  6664 ;; This function calls:
  6665 ;;		_I2C_Master_Init
  6666 ;;		_MCP9800_WriteConfig
  6667 ;; This function is called by:
  6668 ;;		_initializeHardware
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672     0800                     _MCP9800_Init:	
  6673                           ;psect for function _MCP9800_Init
  6674                           
  6675     0800                     l3649:	
  6676                           ;incstack = 0
  6677                           ; Regs used in _MCP9800_Init: [wreg+status,2+status,0+pclath+cstack]
  6678                           
  6679                           
  6680                           ;MCP980x.c: 4:     I2C_Master_Init();
  6681     0800  160A  158A  232B  120A  158A  	fcall	_I2C_Master_Init
  6682     0805                     l3651:
  6683                           
  6684                           ;MCP980x.c: 5:     MCP9800_WriteConfig(0x00);
  6685     0805  3000               	movlw	0
  6686     0806  160A  158A  24BF  120A  158A  	fcall	_MCP9800_WriteConfig
  6687     080B                     l128:
  6688     080B  0008               	return
  6689     080C                     __end_of_MCP9800_Init:
  6690                           
  6691                           	psect	text26
  6692     1B2B                     __ptext26:	
  6693 ;; *************** function _I2C_Master_Init *****************
  6694 ;; Defined at:
  6695 ;;		line 4 in file "i2c.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		status,2
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6709 ;;      Params:         0       0       0       0       0
  6710 ;;      Locals:         0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0
  6712 ;;      Totals:         0       0       0       0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_MCP9800_Init
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722     1B2B                     _I2C_Master_Init:	
  6723                           ;psect for function _I2C_Master_Init
  6724                           
  6725     1B2B                     l3459:	
  6726                           ;incstack = 0
  6727                           ; Regs used in _I2C_Master_Init: [status,2]
  6728                           
  6729                           
  6730                           ;i2c.c: 6:     SSPCON = 0x28;
  6731     1B2B  3028               	movlw	40
  6732     1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  6733     1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  6734     1B2E  0094               	movwf	20	;volatile
  6735     1B2F                     l3461:
  6736                           
  6737                           ;i2c.c: 7:     SSPCON2 = 0x00;
  6738     1B2F  1683               	bsf	3,5	;RP0=1, select bank1
  6739     1B30  1303               	bcf	3,6	;RP1=0, select bank1
  6740     1B31  0191               	clrf	17	;volatile
  6741                           
  6742                           ;i2c.c: 8:     SSPSTAT = 0x00;
  6743     1B32  0194               	clrf	20	;volatile
  6744     1B33                     l3463:
  6745                           
  6746                           ;i2c.c: 9:     SSPADD = ((20000000/4)/100000) - 1;
  6747     1B33  3031               	movlw	49
  6748     1B34  0093               	movwf	19	;volatile
  6749     1B35                     l3465:
  6750                           
  6751                           ;i2c.c: 10:     TRISC3 = 1;
  6752     1B35  1587               	bsf	7,3	;volatile
  6753     1B36                     l3467:
  6754                           
  6755                           ;i2c.c: 11:     TRISC4 = 1;
  6756     1B36  1607               	bsf	7,4	;volatile
  6757     1B37                     l33:
  6758     1B37  0008               	return
  6759     1B38                     __end_of_I2C_Master_Init:
  6760                           
  6761                           	psect	text27
  6762     10BD                     __ptext27:	
  6763 ;; *************** function _handleButtonPress *****************
  6764 ;; Defined at:
  6765 ;;		line 47 in file "main.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;		None
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;		None
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      void 
  6772 ;; Registers used:
  6773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6779 ;;      Params:         0       0       0       0       0
  6780 ;;      Locals:         0       0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0
  6782 ;;      Totals:         0       0       0       0       0
  6783 ;;Total ram usage:        0 bytes
  6784 ;; Hardware stack levels used: 1
  6785 ;; Hardware stack levels required when called: 6
  6786 ;; This function calls:
  6787 ;;		_clearLCD
  6788 ;;		_configureComparatorMode
  6789 ;;		_configureInterruptMode
  6790 ;;		_configureOneShotMode
  6791 ;;		_moveCursorToPosition
  6792 ;;		_printToLCD
  6793 ;; This function is called by:
  6794 ;;		_main
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798     10BD                     _handleButtonPress:	
  6799                           ;psect for function _handleButtonPress
  6800                           
  6801     10BD                     l3727:	
  6802                           ;incstack = 0
  6803                           ; Regs used in _handleButtonPress: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6804                           
  6805                           
  6806                           ;main.c: 48:     if (RA0 == 1) {
  6807     10BD  1283               	bcf	3,5	;RP0=0, select bank0
  6808     10BE  1303               	bcf	3,6	;RP1=0, select bank0
  6809     10BF  1C05               	btfss	5,0	;volatile
  6810     10C0  28C2               	goto	u5011
  6811     10C1  28C3               	goto	u5010
  6812     10C2                     u5011:
  6813     10C2  28DD               	goto	l261
  6814     10C3                     u5010:
  6815     10C3                     l3729:
  6816                           
  6817                           ;main.c: 49:         configureOneShotMode();
  6818     10C3  160A  158A  246C  160A  118A  	fcall	_configureOneShotMode
  6819                           
  6820                           ;main.c: 50:         clearLCD();
  6821     10C8  160A  158A  2348  160A  118A  	fcall	_clearLCD
  6822                           
  6823                           ;main.c: 51:         moveCursorToPosition(0x80);
  6824     10CD  3080               	movlw	128
  6825     10CE  160A  158A  24DD  160A  118A  	fcall	_moveCursorToPosition
  6826     10D3                     l3731:
  6827                           
  6828                           ;main.c: 52:         printToLCD("Mode: One-Shot");
  6829     10D3  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  6830     10D4  00F2               	movwf	printToLCD@string
  6831     10D5  3080               	movlw	128
  6832     10D6  00F3               	movwf	printToLCD@string+1
  6833     10D7  160A  158A  2567  160A  118A  	fcall	_printToLCD
  6834                           
  6835                           ;main.c: 53:     } else if (RA1 == 1) {
  6836     10DC  2918               	goto	l266
  6837     10DD                     l261:
  6838     10DD  1C85               	btfss	5,1	;volatile
  6839     10DE  28E0               	goto	u5021
  6840     10DF  28E1               	goto	u5020
  6841     10E0                     u5021:
  6842     10E0  28FB               	goto	l263
  6843     10E1                     u5020:
  6844     10E1                     l3733:
  6845                           
  6846                           ;main.c: 54:         configureComparatorMode();
  6847     10E1  160A  158A  266F  160A  118A  	fcall	_configureComparatorMode
  6848                           
  6849                           ;main.c: 55:         clearLCD();
  6850     10E6  160A  158A  2348  160A  118A  	fcall	_clearLCD
  6851                           
  6852                           ;main.c: 56:         moveCursorToPosition(0x80);
  6853     10EB  3080               	movlw	128
  6854     10EC  160A  158A  24DD  160A  118A  	fcall	_moveCursorToPosition
  6855     10F1                     l3735:
  6856                           
  6857                           ;main.c: 57:         printToLCD("Mode: Comparator");
  6858     10F1  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  6859     10F2  00F2               	movwf	printToLCD@string
  6860     10F3  3080               	movlw	128
  6861     10F4  00F3               	movwf	printToLCD@string+1
  6862     10F5  160A  158A  2567  160A  118A  	fcall	_printToLCD
  6863                           
  6864                           ;main.c: 58:     } else if (RA2 == 1) {
  6865     10FA  2918               	goto	l266
  6866     10FB                     l263:
  6867     10FB  1D05               	btfss	5,2	;volatile
  6868     10FC  28FE               	goto	u5031
  6869     10FD  28FF               	goto	u5030
  6870     10FE                     u5031:
  6871     10FE  2918               	goto	l266
  6872     10FF                     u5030:
  6873     10FF                     l3737:
  6874                           
  6875                           ;main.c: 59:         configureInterruptMode();
  6876     10FF  160A  158A  26AB  160A  118A  	fcall	_configureInterruptMode
  6877                           
  6878                           ;main.c: 60:         clearLCD();
  6879     1104  160A  158A  2348  160A  118A  	fcall	_clearLCD
  6880                           
  6881                           ;main.c: 61:         moveCursorToPosition(0x80);
  6882     1109  3080               	movlw	128
  6883     110A  160A  158A  24DD  160A  118A  	fcall	_moveCursorToPosition
  6884     110F                     l3739:
  6885                           
  6886                           ;main.c: 62:         printToLCD("Mode: Interrupt");
  6887     110F  3012               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  6888     1110  00F2               	movwf	printToLCD@string
  6889     1111  3080               	movlw	128
  6890     1112  00F3               	movwf	printToLCD@string+1
  6891     1113  160A  158A  2567  160A  118A  	fcall	_printToLCD
  6892     1118                     l266:
  6893     1118  0008               	return
  6894     1119                     __end_of_handleButtonPress:
  6895                           
  6896                           	psect	text28
  6897     1D67                     __ptext28:	
  6898 ;; *************** function _printToLCD *****************
  6899 ;; Defined at:
  6900 ;;		line 54 in file "lcd.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  string          2    2[COMMON] PTR const unsigned char 
  6903 ;;		 -> STR_5(16), STR_4(17), STR_3(15), displayString(16), 
  6904 ;;		 -> STR_1(14), 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6916 ;;      Params:         2       0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0
  6919 ;;      Totals:         2       0       0       0       0
  6920 ;;Total ram usage:        2 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 1
  6923 ;; This function calls:
  6924 ;;		_sendDataToLCD
  6925 ;; This function is called by:
  6926 ;;		_main
  6927 ;;		_handleButtonPress
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931     1D67                     _printToLCD:	
  6932                           ;psect for function _printToLCD
  6933                           
  6934     1D67                     l3627:	
  6935                           ;incstack = 0
  6936                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6937                           
  6938                           
  6939                           ;lcd.c: 55:     while(*string) {
  6940     1D67  2D7C               	goto	l3633
  6941     1D68                     l3629:
  6942                           
  6943                           ;lcd.c: 56:         sendDataToLCD(*string++);
  6944     1D68  0873               	movf	printToLCD@string+1,w
  6945     1D69  00FF               	movwf	btemp+1
  6946     1D6A  0872               	movf	printToLCD@string,w
  6947     1D6B  0084               	movwf	4
  6948     1D6C  160A  118A  2000  160A  158A  	fcall	stringtab
  6949     1D71  160A  158A  241F  160A  158A  	fcall	_sendDataToLCD
  6950     1D76                     l3631:
  6951     1D76  3001               	movlw	1
  6952     1D77  07F2               	addwf	printToLCD@string,f
  6953     1D78  1803               	skipnc
  6954     1D79  0AF3               	incf	printToLCD@string+1,f
  6955     1D7A  3000               	movlw	0
  6956     1D7B  07F3               	addwf	printToLCD@string+1,f
  6957     1D7C                     l3633:
  6958                           
  6959                           ;lcd.c: 55:     while(*string) {
  6960     1D7C  0873               	movf	printToLCD@string+1,w
  6961     1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  6962     1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  6963     1D7F  00FF               	movwf	btemp+1
  6964     1D80  0872               	movf	printToLCD@string,w
  6965     1D81  0084               	movwf	4
  6966     1D82  160A  118A  2000  160A  158A  	fcall	stringtab
  6967     1D87  3A00               	xorlw	0
  6968     1D88  1D03               	skipz
  6969     1D89  2D8B               	goto	u4811
  6970     1D8A  2D8C               	goto	u4810
  6971     1D8B                     u4811:
  6972     1D8B  2D68               	goto	l3629
  6973     1D8C                     u4810:
  6974     1D8C                     l98:
  6975     1D8C  0008               	return
  6976     1D8D                     __end_of_printToLCD:
  6977                           
  6978                           	psect	text29
  6979     1C1F                     __ptext29:	
  6980 ;; *************** function _sendDataToLCD *****************
  6981 ;; Defined at:
  6982 ;;		line 45 in file "lcd.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  data            1    wreg     unsigned char 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  data            1    1[COMMON] unsigned char 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		wreg
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6996 ;;      Params:         0       0       0       0       0
  6997 ;;      Locals:         1       0       0       0       0
  6998 ;;      Temps:          1       0       0       0       0
  6999 ;;      Totals:         2       0       0       0       0
  7000 ;;Total ram usage:        2 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_printToLCD
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009     1C1F                     _sendDataToLCD:	
  7010                           ;psect for function _sendDataToLCD
  7011                           
  7012                           
  7013                           ;incstack = 0
  7014                           ; Regs used in _sendDataToLCD: [wreg]
  7015                           ;sendDataToLCD@data stored from wreg
  7016     1C1F  00F1               	movwf	sendDataToLCD@data
  7017     1C20                     l3473:
  7018                           
  7019                           ;lcd.c: 46:     PORTCbits.RC0 = 1;
  7020     1C20  1283               	bcf	3,5	;RP0=0, select bank0
  7021     1C21  1303               	bcf	3,6	;RP1=0, select bank0
  7022     1C22  1407               	bsf	7,0	;volatile
  7023     1C23                     l3475:
  7024                           
  7025                           ;lcd.c: 47:     PORTB = data;
  7026     1C23  0871               	movf	sendDataToLCD@data,w
  7027     1C24  0086               	movwf	6	;volatile
  7028     1C25                     l3477:
  7029                           
  7030                           ;lcd.c: 48:     PORTCbits.RC1 = 1;
  7031     1C25  1487               	bsf	7,1	;volatile
  7032                           
  7033                           ;lcd.c: 49:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  7034     1C26  30C7               	movlw	199
  7035     1C27  00F0               	movwf	??_sendDataToLCD
  7036     1C28                     u5147:
  7037     1C28  2C29               	nop2
  7038     1C29  0BF0               	decfsz	??_sendDataToLCD,f
  7039     1C2A  2C28               	goto	u5147
  7040     1C2B  2C2C               	nop2
  7041     1C2C  2C2D               	nop2
  7042     1C2D                     l3479:
  7043                           
  7044                           ;lcd.c: 50:     PORTCbits.RC1 = 0;
  7045     1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7046     1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7047     1C2F  1087               	bcf	7,1	;volatile
  7048                           
  7049                           ;lcd.c: 51:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  7050     1C30  30C7               	movlw	199
  7051     1C31  00F0               	movwf	??_sendDataToLCD
  7052     1C32                     u5157:
  7053     1C32  2C33               	nop2
  7054     1C33  0BF0               	decfsz	??_sendDataToLCD,f
  7055     1C34  2C32               	goto	u5157
  7056     1C35  2C36               	nop2
  7057     1C36  2C37               	nop2
  7058     1C37                     l92:
  7059     1C37  0008               	return
  7060     1C38                     __end_of_sendDataToLCD:
  7061                           
  7062                           	psect	text30
  7063     1CDD                     __ptext30:	
  7064 ;; *************** function _moveCursorToPosition *****************
  7065 ;; Defined at:
  7066 ;;		line 60 in file "lcd.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  address         1    wreg     unsigned char 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  address         1    2[COMMON] unsigned char 
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      unsigned char 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0, pclath, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7080 ;;      Params:         0       0       0       0       0
  7081 ;;      Locals:         1       0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0
  7083 ;;      Totals:         1       0       0       0       0
  7084 ;;Total ram usage:        1 bytes
  7085 ;; Hardware stack levels used: 1
  7086 ;; Hardware stack levels required when called: 1
  7087 ;; This function calls:
  7088 ;;		_sendCommandToLCD
  7089 ;; This function is called by:
  7090 ;;		_main
  7091 ;;		_handleButtonPress
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095     1CDD                     _moveCursorToPosition:	
  7096                           ;psect for function _moveCursorToPosition
  7097                           
  7098                           
  7099                           ;incstack = 0
  7100                           ; Regs used in _moveCursorToPosition: [wreg+status,2+status,0+pclath+cstack]
  7101                           ;moveCursorToPosition@address stored from wreg
  7102     1CDD  00F2               	movwf	moveCursorToPosition@address
  7103     1CDE                     l3635:
  7104                           
  7105                           ;lcd.c: 61:     if ((address >= 0x80 && address <= 0xA8) || (address >= 0xC0 && address 
      +                          <= 0xE8)) {
  7106     1CDE  3080               	movlw	128
  7107     1CDF  0272               	subwf	moveCursorToPosition@address,w
  7108     1CE0  1C03               	skipc
  7109     1CE1  2CE3               	goto	u4821
  7110     1CE2  2CE4               	goto	u4820
  7111     1CE3                     u4821:
  7112     1CE3  2CEA               	goto	l3639
  7113     1CE4                     u4820:
  7114     1CE4                     l3637:
  7115     1CE4  30A9               	movlw	169
  7116     1CE5  0272               	subwf	moveCursorToPosition@address,w
  7117     1CE6  1C03               	skipc
  7118     1CE7  2CE9               	goto	u4831
  7119     1CE8  2CEA               	goto	u4830
  7120     1CE9                     u4831:
  7121     1CE9  2CF6               	goto	l3643
  7122     1CEA                     u4830:
  7123     1CEA                     l3639:
  7124     1CEA  30C0               	movlw	192
  7125     1CEB  0272               	subwf	moveCursorToPosition@address,w
  7126     1CEC  1C03               	skipc
  7127     1CED  2CEF               	goto	u4841
  7128     1CEE  2CF0               	goto	u4840
  7129     1CEF                     u4841:
  7130     1CEF  2CFC               	goto	l106
  7131     1CF0                     u4840:
  7132     1CF0                     l3641:
  7133     1CF0  30E9               	movlw	233
  7134     1CF1  0272               	subwf	moveCursorToPosition@address,w
  7135     1CF2  1803               	skipnc
  7136     1CF3  2CF5               	goto	u4851
  7137     1CF4  2CF6               	goto	u4850
  7138     1CF5                     u4851:
  7139     1CF5  2CFC               	goto	l106
  7140     1CF6                     u4850:
  7141     1CF6                     l3643:
  7142                           
  7143                           ;lcd.c: 62:         sendCommandToLCD(address);
  7144     1CF6  0872               	movf	moveCursorToPosition@address,w
  7145     1CF7  160A  158A  2406  160A  158A  	fcall	_sendCommandToLCD
  7146     1CFC                     l106:
  7147     1CFC  0008               	return
  7148     1CFD                     __end_of_moveCursorToPosition:
  7149                           
  7150                           	psect	text31
  7151     1C6C                     __ptext31:	
  7152 ;; *************** function _configureOneShotMode *****************
  7153 ;; Defined at:
  7154 ;;		line 66 in file "main.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2, status,0, pclath, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7168 ;;      Params:         0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0
  7170 ;;      Temps:          2       0       0       0       0
  7171 ;;      Totals:         2       0       0       0       0
  7172 ;;Total ram usage:        2 bytes
  7173 ;; Hardware stack levels used: 1
  7174 ;; Hardware stack levels required when called: 4
  7175 ;; This function calls:
  7176 ;;		_MCP9800_SetConfigOneShot
  7177 ;;		_MCP9800_SetConfigResolution
  7178 ;;		_MCP9800_SetConfigShutdown
  7179 ;; This function is called by:
  7180 ;;		_handleButtonPress
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184     1C6C                     _configureOneShotMode:	
  7185                           ;psect for function _configureOneShotMode
  7186                           
  7187     1C6C                     l3653:	
  7188                           ;incstack = 0
  7189                           ; Regs used in _configureOneShotMode: [wreg+status,2+status,0+pclath+cstack]
  7190                           
  7191                           
  7192                           ;main.c: 67:     MCP9800_SetConfigResolution(0);
  7193     1C6C  3000               	movlw	0
  7194     1C6D  160A  158A  24A3  160A  158A  	fcall	_MCP9800_SetConfigResolution
  7195                           
  7196                           ;main.c: 68:     MCP9800_SetConfigShutdown(1);
  7197     1C72  3001               	movlw	1
  7198     1C73  160A  158A  23EF  160A  158A  	fcall	_MCP9800_SetConfigShutdown
  7199                           
  7200                           ;main.c: 69:     MCP9800_SetConfigOneShot(1);
  7201     1C78  3001               	movlw	1
  7202     1C79  160A  158A  23D8  160A  158A  	fcall	_MCP9800_SetConfigOneShot
  7203     1C7E                     l3655:
  7204                           
  7205                           ;main.c: 70:     _delay((unsigned long)((30)*(20000000/4000.0)));
  7206     1C7E  30C3               	movlw	195
  7207     1C7F  00F6               	movwf	??_configureOneShotMode+1
  7208     1C80  30CD               	movlw	205
  7209     1C81  00F5               	movwf	??_configureOneShotMode
  7210     1C82                     u5167:
  7211     1C82  0BF5               	decfsz	??_configureOneShotMode,f
  7212     1C83  2C82               	goto	u5167
  7213     1C84  0BF6               	decfsz	??_configureOneShotMode+1,f
  7214     1C85  2C82               	goto	u5167
  7215     1C86                     l269:
  7216     1C86  0008               	return
  7217     1C87                     __end_of_configureOneShotMode:
  7218                           
  7219                           	psect	text32
  7220     1EAB                     __ptext32:	
  7221 ;; *************** function _configureInterruptMode *****************
  7222 ;; Defined at:
  7223 ;;		line 92 in file "main.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, pclath, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7237 ;;      Params:         0       0       0       0       0
  7238 ;;      Locals:         0       0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0
  7240 ;;      Totals:         0       0       0       0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 5
  7244 ;; This function calls:
  7245 ;;		_MCP9800_SetConfigAlertPolarity
  7246 ;;		_MCP9800_SetConfigCompIntMode
  7247 ;;		_MCP9800_SetConfigFaultQueue
  7248 ;;		_MCP9800_SetConfigResolution
  7249 ;;		_MCP9800_SetConfigShutdown
  7250 ;;		_MCP9800_SetHYST_Temp
  7251 ;;		_MCP9800_SetLIMIT_Temp
  7252 ;;		_configureContinuousConversionMode
  7253 ;; This function is called by:
  7254 ;;		_handleButtonPress
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258     1EAB                     _configureInterruptMode:	
  7259                           ;psect for function _configureInterruptMode
  7260                           
  7261     1EAB                     l3659:	
  7262                           ;incstack = 0
  7263                           ; Regs used in _configureInterruptMode: [wreg+status,2+status,0+pclath+cstack]
  7264                           
  7265                           
  7266                           ;main.c: 93:     configureContinuousConversionMode();
  7267     1EAB  160A  158A  2451  160A  158A  	fcall	_configureContinuousConversionMode
  7268                           
  7269                           ;main.c: 94:     MCP9800_SetConfigShutdown(1);
  7270     1EB0  3001               	movlw	1
  7271     1EB1  160A  158A  23EF  160A  158A  	fcall	_MCP9800_SetConfigShutdown
  7272                           
  7273                           ;main.c: 95:     MCP9800_SetLIMIT_Temp(70);
  7274     1EB6  3046               	movlw	70
  7275     1EB7  00F1               	movwf	MCP9800_SetLIMIT_Temp@temp_value
  7276     1EB8  3000               	movlw	0
  7277     1EB9  00F2               	movwf	MCP9800_SetLIMIT_Temp@temp_value+1
  7278     1EBA  160A  158A  2724  160A  158A  	fcall	_MCP9800_SetLIMIT_Temp
  7279                           
  7280                           ;main.c: 96:     MCP9800_SetHYST_Temp(65);
  7281     1EBF  3041               	movlw	65
  7282     1EC0  00F1               	movwf	MCP9800_SetHYST_Temp@temp_value
  7283     1EC1  3000               	movlw	0
  7284     1EC2  00F2               	movwf	MCP9800_SetHYST_Temp@temp_value+1
  7285     1EC3  160A  158A  26E7  160A  158A  	fcall	_MCP9800_SetHYST_Temp
  7286                           
  7287                           ;main.c: 97:     MCP9800_SetConfigShutdown(0);
  7288     1EC8  3000               	movlw	0
  7289     1EC9  160A  158A  23EF  160A  158A  	fcall	_MCP9800_SetConfigShutdown
  7290                           
  7291                           ;main.c: 98:     MCP9800_SetConfigAlertPolarity(0);
  7292     1ECE  3000               	movlw	0
  7293     1ECF  160A  158A  23AA  160A  158A  	fcall	_MCP9800_SetConfigAlertPolarity
  7294                           
  7295                           ;main.c: 99:     MCP9800_SetConfigResolution(3);
  7296     1ED4  3003               	movlw	3
  7297     1ED5  160A  158A  24A3  160A  158A  	fcall	_MCP9800_SetConfigResolution
  7298                           
  7299                           ;main.c: 100:     MCP9800_SetConfigFaultQueue(1);
  7300     1EDA  3001               	movlw	1
  7301     1EDB  160A  158A  2487  160A  158A  	fcall	_MCP9800_SetConfigFaultQueue
  7302                           
  7303                           ;main.c: 101:     MCP9800_SetConfigCompIntMode(1);
  7304     1EE0  3001               	movlw	1
  7305     1EE1  160A  158A  23C1  160A  158A  	fcall	_MCP9800_SetConfigCompIntMode
  7306     1EE6                     l278:
  7307     1EE6  0008               	return
  7308     1EE7                     __end_of_configureInterruptMode:
  7309                           
  7310                           	psect	text33
  7311     1E6F                     __ptext33:	
  7312 ;; *************** function _configureComparatorMode *****************
  7313 ;; Defined at:
  7314 ;;		line 80 in file "main.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;		None
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;		None
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0, pclath, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7328 ;;      Params:         0       0       0       0       0
  7329 ;;      Locals:         0       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0
  7331 ;;      Totals:         0       0       0       0       0
  7332 ;;Total ram usage:        0 bytes
  7333 ;; Hardware stack levels used: 1
  7334 ;; Hardware stack levels required when called: 5
  7335 ;; This function calls:
  7336 ;;		_MCP9800_SetConfigAlertPolarity
  7337 ;;		_MCP9800_SetConfigCompIntMode
  7338 ;;		_MCP9800_SetConfigFaultQueue
  7339 ;;		_MCP9800_SetConfigResolution
  7340 ;;		_MCP9800_SetConfigShutdown
  7341 ;;		_MCP9800_SetHYST_Temp
  7342 ;;		_MCP9800_SetLIMIT_Temp
  7343 ;;		_configureContinuousConversionMode
  7344 ;; This function is called by:
  7345 ;;		_handleButtonPress
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349     1E6F                     _configureComparatorMode:	
  7350                           ;psect for function _configureComparatorMode
  7351                           
  7352     1E6F                     l3657:	
  7353                           ;incstack = 0
  7354                           ; Regs used in _configureComparatorMode: [wreg+status,2+status,0+pclath+cstack]
  7355                           
  7356                           
  7357                           ;main.c: 81:     configureContinuousConversionMode();
  7358     1E6F  160A  158A  2451  160A  158A  	fcall	_configureContinuousConversionMode
  7359                           
  7360                           ;main.c: 82:     MCP9800_SetConfigShutdown(1);
  7361     1E74  3001               	movlw	1
  7362     1E75  160A  158A  23EF  160A  158A  	fcall	_MCP9800_SetConfigShutdown
  7363                           
  7364                           ;main.c: 83:     MCP9800_SetLIMIT_Temp(60);
  7365     1E7A  303C               	movlw	60
  7366     1E7B  00F1               	movwf	MCP9800_SetLIMIT_Temp@temp_value
  7367     1E7C  3000               	movlw	0
  7368     1E7D  00F2               	movwf	MCP9800_SetLIMIT_Temp@temp_value+1
  7369     1E7E  160A  158A  2724  160A  158A  	fcall	_MCP9800_SetLIMIT_Temp
  7370                           
  7371                           ;main.c: 84:     MCP9800_SetHYST_Temp(55);
  7372     1E83  3037               	movlw	55
  7373     1E84  00F1               	movwf	MCP9800_SetHYST_Temp@temp_value
  7374     1E85  3000               	movlw	0
  7375     1E86  00F2               	movwf	MCP9800_SetHYST_Temp@temp_value+1
  7376     1E87  160A  158A  26E7  160A  158A  	fcall	_MCP9800_SetHYST_Temp
  7377                           
  7378                           ;main.c: 85:     MCP9800_SetConfigShutdown(0);
  7379     1E8C  3000               	movlw	0
  7380     1E8D  160A  158A  23EF  160A  158A  	fcall	_MCP9800_SetConfigShutdown
  7381                           
  7382                           ;main.c: 86:     MCP9800_SetConfigAlertPolarity(0);
  7383     1E92  3000               	movlw	0
  7384     1E93  160A  158A  23AA  160A  158A  	fcall	_MCP9800_SetConfigAlertPolarity
  7385                           
  7386                           ;main.c: 87:     MCP9800_SetConfigResolution(3);
  7387     1E98  3003               	movlw	3
  7388     1E99  160A  158A  24A3  160A  158A  	fcall	_MCP9800_SetConfigResolution
  7389                           
  7390                           ;main.c: 88:     MCP9800_SetConfigFaultQueue(2);
  7391     1E9E  3002               	movlw	2
  7392     1E9F  160A  158A  2487  160A  158A  	fcall	_MCP9800_SetConfigFaultQueue
  7393                           
  7394                           ;main.c: 89:     MCP9800_SetConfigCompIntMode(0);
  7395     1EA4  3000               	movlw	0
  7396     1EA5  160A  158A  23C1  160A  158A  	fcall	_MCP9800_SetConfigCompIntMode
  7397     1EAA                     l275:
  7398     1EAA  0008               	return
  7399     1EAB                     __end_of_configureComparatorMode:
  7400                           
  7401                           	psect	text34
  7402     1C51                     __ptext34:	
  7403 ;; *************** function _configureContinuousConversionMode *****************
  7404 ;; Defined at:
  7405 ;;		line 73 in file "main.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0, pclath, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7419 ;;      Params:         0       0       0       0       0
  7420 ;;      Locals:         0       0       0       0       0
  7421 ;;      Temps:          2       0       0       0       0
  7422 ;;      Totals:         2       0       0       0       0
  7423 ;;Total ram usage:        2 bytes
  7424 ;; Hardware stack levels used: 1
  7425 ;; Hardware stack levels required when called: 4
  7426 ;; This function calls:
  7427 ;;		_MCP9800_SetConfigOneShot
  7428 ;;		_MCP9800_SetConfigResolution
  7429 ;;		_MCP9800_SetConfigShutdown
  7430 ;; This function is called by:
  7431 ;;		_configureComparatorMode
  7432 ;;		_configureInterruptMode
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436     1C51                     _configureContinuousConversionMode:	
  7437                           ;psect for function _configureContinuousConversionMode
  7438                           
  7439     1C51                     l3539:	
  7440                           ;incstack = 0
  7441                           ; Regs used in _configureContinuousConversionMode: [wreg+status,2+status,0+pclath+cstack
      +                          ]
  7442                           
  7443                           
  7444                           ;main.c: 74:     MCP9800_SetConfigResolution(0);
  7445     1C51  3000               	movlw	0
  7446     1C52  160A  158A  24A3  160A  158A  	fcall	_MCP9800_SetConfigResolution
  7447                           
  7448                           ;main.c: 75:     MCP9800_SetConfigShutdown(0);
  7449     1C57  3000               	movlw	0
  7450     1C58  160A  158A  23EF  160A  158A  	fcall	_MCP9800_SetConfigShutdown
  7451                           
  7452                           ;main.c: 76:     MCP9800_SetConfigOneShot(0);
  7453     1C5D  3000               	movlw	0
  7454     1C5E  160A  158A  23D8  160A  158A  	fcall	_MCP9800_SetConfigOneShot
  7455     1C63                     l3541:
  7456                           
  7457                           ;main.c: 77:     _delay((unsigned long)((30)*(20000000/4000.0)));
  7458     1C63  30C3               	movlw	195
  7459     1C64  00F6               	movwf	??_configureContinuousConversionMode+1
  7460     1C65  30CD               	movlw	205
  7461     1C66  00F5               	movwf	??_configureContinuousConversionMode
  7462     1C67                     u5177:
  7463     1C67  0BF5               	decfsz	??_configureContinuousConversionMode,f
  7464     1C68  2C67               	goto	u5177
  7465     1C69  0BF6               	decfsz	??_configureContinuousConversionMode+1,f
  7466     1C6A  2C67               	goto	u5177
  7467     1C6B                     l272:
  7468     1C6B  0008               	return
  7469     1C6C                     __end_of_configureContinuousConversionMode:
  7470                           
  7471                           	psect	text35
  7472     1BEF                     __ptext35:	
  7473 ;; *************** function _MCP9800_SetConfigShutdown *****************
  7474 ;; Defined at:
  7475 ;;		line 105 in file "MCP980x.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  enable          1    wreg     unsigned char 
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;  enable          1    2[COMMON] unsigned char 
  7480 ;;  config          1    3[COMMON] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0, pclath, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         0       0       0       0       0
  7491 ;;      Locals:         2       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0
  7493 ;;      Totals:         2       0       0       0       0
  7494 ;;Total ram usage:        2 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; Hardware stack levels required when called: 3
  7497 ;; This function calls:
  7498 ;;		_MCP9800_ReadConfig
  7499 ;;		_MCP9800_WriteConfig
  7500 ;; This function is called by:
  7501 ;;		_configureOneShotMode
  7502 ;;		_configureContinuousConversionMode
  7503 ;;		_configureComparatorMode
  7504 ;;		_configureInterruptMode
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508     1BEF                     _MCP9800_SetConfigShutdown:	
  7509                           ;psect for function _MCP9800_SetConfigShutdown
  7510                           
  7511                           
  7512                           ;incstack = 0
  7513                           ; Regs used in _MCP9800_SetConfigShutdown: [wreg+status,2+status,0+pclath+cstack]
  7514                           ;MCP9800_SetConfigShutdown@enable stored from wreg
  7515     1BEF  00F2               	movwf	MCP9800_SetConfigShutdown@enable
  7516     1BF0                     l3217:
  7517                           
  7518                           ;MCP980x.c: 106:     uint8_t config = MCP9800_ReadConfig();
  7519     1BF0  160A  158A  260A  160A  158A  	fcall	_MCP9800_ReadConfig
  7520     1BF5  00F3               	movwf	MCP9800_SetConfigShutdown@config
  7521     1BF6                     l3219:
  7522                           
  7523                           ;MCP980x.c: 107:     if (enable) {
  7524     1BF6  0872               	movf	MCP9800_SetConfigShutdown@enable,w
  7525     1BF7  1903               	btfsc	3,2
  7526     1BF8  2BFA               	goto	u4351
  7527     1BF9  2BFB               	goto	u4350
  7528     1BFA                     u4351:
  7529     1BFA  2BFD               	goto	l3223
  7530     1BFB                     u4350:
  7531     1BFB                     l3221:
  7532                           
  7533                           ;MCP980x.c: 108:         config |= (1 << CONFIG_SHUTDOWN);
  7534     1BFB  1473               	bsf	MCP9800_SetConfigShutdown@config,0
  7535                           
  7536                           ;MCP980x.c: 109:         } else {
  7537     1BFC  2BFF               	goto	l3225
  7538     1BFD                     l3223:
  7539                           
  7540                           ;MCP980x.c: 110:         config &= ~(1 << CONFIG_SHUTDOWN);
  7541     1BFD  30FE               	movlw	254
  7542     1BFE  05F3               	andwf	MCP9800_SetConfigShutdown@config,f
  7543     1BFF                     l3225:
  7544                           
  7545                           ;MCP980x.c: 112:     MCP9800_WriteConfig(config);
  7546     1BFF  0873               	movf	MCP9800_SetConfigShutdown@config,w
  7547     1C00  160A  158A  24BF  160A  158A  	fcall	_MCP9800_WriteConfig
  7548     1C05                     l178:
  7549     1C05  0008               	return
  7550     1C06                     __end_of_MCP9800_SetConfigShutdown:
  7551                           
  7552                           	psect	text36
  7553     1CA3                     __ptext36:	
  7554 ;; *************** function _MCP9800_SetConfigResolution *****************
  7555 ;; Defined at:
  7556 ;;		line 71 in file "MCP980x.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  resolution      1    wreg     unsigned char 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  resolution      1    3[COMMON] unsigned char 
  7561 ;;  config          1    4[COMMON] unsigned char 
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0, pclath, cstack
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7571 ;;      Params:         0       0       0       0       0
  7572 ;;      Locals:         2       0       0       0       0
  7573 ;;      Temps:          1       0       0       0       0
  7574 ;;      Totals:         3       0       0       0       0
  7575 ;;Total ram usage:        3 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; Hardware stack levels required when called: 3
  7578 ;; This function calls:
  7579 ;;		_MCP9800_ReadConfig
  7580 ;;		_MCP9800_WriteConfig
  7581 ;; This function is called by:
  7582 ;;		_configureOneShotMode
  7583 ;;		_configureContinuousConversionMode
  7584 ;;		_configureComparatorMode
  7585 ;;		_configureInterruptMode
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589     1CA3                     _MCP9800_SetConfigResolution:	
  7590                           ;psect for function _MCP9800_SetConfigResolution
  7591                           
  7592                           
  7593                           ;incstack = 0
  7594                           ; Regs used in _MCP9800_SetConfigResolution: [wreg+status,2+status,0+pclath+cstack]
  7595                           ;MCP9800_SetConfigResolution@resolution stored from wreg
  7596     1CA3  00F3               	movwf	MCP9800_SetConfigResolution@resolution
  7597     1CA4                     l3211:
  7598                           
  7599                           ;MCP980x.c: 72:     uint8_t config = MCP9800_ReadConfig();
  7600     1CA4  160A  158A  260A  160A  158A  	fcall	_MCP9800_ReadConfig
  7601     1CA9  00F4               	movwf	MCP9800_SetConfigResolution@config
  7602     1CAA                     l3213:
  7603                           
  7604                           ;MCP980x.c: 73:     config &= ~(0x03 << CONFIG_ADC_RES);
  7605     1CAA  309F               	movlw	159
  7606     1CAB  05F4               	andwf	MCP9800_SetConfigResolution@config,f
  7607     1CAC                     l3215:
  7608                           
  7609                           ;MCP980x.c: 74:     config |= (resolution & 0x03) << CONFIG_ADC_RES;
  7610     1CAC  0873               	movf	MCP9800_SetConfigResolution@resolution,w
  7611     1CAD  3903               	andlw	3
  7612     1CAE  00F2               	movwf	??_MCP9800_SetConfigResolution
  7613     1CAF  3004               	movlw	4
  7614     1CB0                     u4345:
  7615     1CB0  1003               	clrc
  7616     1CB1  0DF2               	rlf	??_MCP9800_SetConfigResolution,f
  7617     1CB2  3EFF               	addlw	-1
  7618     1CB3  1D03               	skipz
  7619     1CB4  2CB0               	goto	u4345
  7620     1CB5  1003               	clrc
  7621     1CB6  0D72               	rlf	??_MCP9800_SetConfigResolution,w
  7622     1CB7  04F4               	iorwf	MCP9800_SetConfigResolution@config,f
  7623                           
  7624                           ;MCP980x.c: 75:     MCP9800_WriteConfig(config);
  7625     1CB8  0874               	movf	MCP9800_SetConfigResolution@config,w
  7626     1CB9  160A  158A  24BF  160A  158A  	fcall	_MCP9800_WriteConfig
  7627     1CBE                     l160:
  7628     1CBE  0008               	return
  7629     1CBF                     __end_of_MCP9800_SetConfigResolution:
  7630                           
  7631                           	psect	text37
  7632     1BD8                     __ptext37:	
  7633 ;; *************** function _MCP9800_SetConfigOneShot *****************
  7634 ;; Defined at:
  7635 ;;		line 61 in file "MCP980x.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  enable          1    wreg     unsigned char 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  enable          1    2[COMMON] unsigned char 
  7640 ;;  config          1    3[COMMON] unsigned char 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg, status,2, status,0, pclath, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7650 ;;      Params:         0       0       0       0       0
  7651 ;;      Locals:         2       0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0
  7653 ;;      Totals:         2       0       0       0       0
  7654 ;;Total ram usage:        2 bytes
  7655 ;; Hardware stack levels used: 1
  7656 ;; Hardware stack levels required when called: 3
  7657 ;; This function calls:
  7658 ;;		_MCP9800_ReadConfig
  7659 ;;		_MCP9800_WriteConfig
  7660 ;; This function is called by:
  7661 ;;		_configureOneShotMode
  7662 ;;		_configureContinuousConversionMode
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666     1BD8                     _MCP9800_SetConfigOneShot:	
  7667                           ;psect for function _MCP9800_SetConfigOneShot
  7668                           
  7669                           
  7670                           ;incstack = 0
  7671                           ; Regs used in _MCP9800_SetConfigOneShot: [wreg+status,2+status,0+pclath+cstack]
  7672                           ;MCP9800_SetConfigOneShot@enable stored from wreg
  7673     1BD8  00F2               	movwf	MCP9800_SetConfigOneShot@enable
  7674     1BD9                     l3201:
  7675                           
  7676                           ;MCP980x.c: 62:     uint8_t config = MCP9800_ReadConfig();
  7677     1BD9  160A  158A  260A  160A  158A  	fcall	_MCP9800_ReadConfig
  7678     1BDE  00F3               	movwf	MCP9800_SetConfigOneShot@config
  7679     1BDF                     l3203:
  7680                           
  7681                           ;MCP980x.c: 63:     if (enable) {
  7682     1BDF  0872               	movf	MCP9800_SetConfigOneShot@enable,w
  7683     1BE0  1903               	btfsc	3,2
  7684     1BE1  2BE3               	goto	u4331
  7685     1BE2  2BE4               	goto	u4330
  7686     1BE3                     u4331:
  7687     1BE3  2BE6               	goto	l3207
  7688     1BE4                     u4330:
  7689     1BE4                     l3205:
  7690                           
  7691                           ;MCP980x.c: 64:         config |= (1 << CONFIG_ONE_SHOT);
  7692     1BE4  17F3               	bsf	MCP9800_SetConfigOneShot@config,7
  7693                           
  7694                           ;MCP980x.c: 65:         } else {
  7695     1BE5  2BE8               	goto	l3209
  7696     1BE6                     l3207:
  7697                           
  7698                           ;MCP980x.c: 66:         config &= ~(1 << CONFIG_ONE_SHOT);
  7699     1BE6  307F               	movlw	127
  7700     1BE7  05F3               	andwf	MCP9800_SetConfigOneShot@config,f
  7701     1BE8                     l3209:
  7702                           
  7703                           ;MCP980x.c: 68:     MCP9800_WriteConfig(config);
  7704     1BE8  0873               	movf	MCP9800_SetConfigOneShot@config,w
  7705     1BE9  160A  158A  24BF  160A  158A  	fcall	_MCP9800_WriteConfig
  7706     1BEE                     l157:
  7707     1BEE  0008               	return
  7708     1BEF                     __end_of_MCP9800_SetConfigOneShot:
  7709                           
  7710                           	psect	text38
  7711     1F24                     __ptext38:	
  7712 ;; *************** function _MCP9800_SetLIMIT_Temp *****************
  7713 ;; Defined at:
  7714 ;;		line 115 in file "MCP980x.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  temp_value      2    1[COMMON] short 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  temp_raw_val    2    7[COMMON] short 
  7719 ;;  lsb             1    6[COMMON] unsigned char 
  7720 ;;  msb             1    5[COMMON] unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  1    wreg      void 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0, pclath, cstack
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7730 ;;      Params:         2       0       0       0       0
  7731 ;;      Locals:         4       0       0       0       0
  7732 ;;      Temps:          2       0       0       0       0
  7733 ;;      Totals:         8       0       0       0       0
  7734 ;;Total ram usage:        8 bytes
  7735 ;; Hardware stack levels used: 1
  7736 ;; Hardware stack levels required when called: 2
  7737 ;; This function calls:
  7738 ;;		_I2C_Master_Start
  7739 ;;		_I2C_Master_Stop
  7740 ;;		_I2C_Master_Write
  7741 ;; This function is called by:
  7742 ;;		_configureComparatorMode
  7743 ;;		_configureInterruptMode
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747     1F24                     _MCP9800_SetLIMIT_Temp:	
  7748                           ;psect for function _MCP9800_SetLIMIT_Temp
  7749                           
  7750     1F24                     l3507:	
  7751                           ;incstack = 0
  7752                           ; Regs used in _MCP9800_SetLIMIT_Temp: [wreg+status,2+status,0+pclath+cstack]
  7753                           
  7754                           
  7755                           ;MCP980x.c: 116:     uint8_t msb, lsb;;MCP980x.c: 117:     int16_t temp_raw_value = temp
      +                          _value * 2;
  7756     1F24  1003               	clrc
  7757     1F25  0D71               	rlf	MCP9800_SetLIMIT_Temp@temp_value,w
  7758     1F26  00F7               	movwf	MCP9800_SetLIMIT_Temp@temp_raw_value
  7759     1F27  0D72               	rlf	MCP9800_SetLIMIT_Temp@temp_value+1,w
  7760     1F28  00F8               	movwf	MCP9800_SetLIMIT_Temp@temp_raw_value+1
  7761                           
  7762                           ;MCP980x.c: 118:     msb = (uint8_t)((temp_raw_value >> 1) & 0xFF);
  7763     1F29  0878               	movf	MCP9800_SetLIMIT_Temp@temp_raw_value+1,w
  7764     1F2A  00F4               	movwf	??_MCP9800_SetLIMIT_Temp+1
  7765     1F2B  0877               	movf	MCP9800_SetLIMIT_Temp@temp_raw_value,w
  7766     1F2C  00F3               	movwf	??_MCP9800_SetLIMIT_Temp
  7767     1F2D  0D74               	rlf	??_MCP9800_SetLIMIT_Temp+1,w
  7768     1F2E  0CF4               	rrf	??_MCP9800_SetLIMIT_Temp+1,f
  7769     1F2F  0CF3               	rrf	??_MCP9800_SetLIMIT_Temp,f
  7770     1F30  0873               	movf	??_MCP9800_SetLIMIT_Temp,w
  7771     1F31  00F5               	movwf	MCP9800_SetLIMIT_Temp@msb
  7772     1F32                     l3509:
  7773                           
  7774                           ;MCP980x.c: 119:     lsb = (uint8_t)((temp_raw_value & 0x01) << 7);
  7775     1F32  0877               	movf	MCP9800_SetLIMIT_Temp@temp_raw_value,w
  7776     1F33  3901               	andlw	1
  7777     1F34  00F3               	movwf	??_MCP9800_SetLIMIT_Temp
  7778     1F35  3006               	movlw	6
  7779     1F36                     u4765:
  7780     1F36  1003               	clrc
  7781     1F37  0DF3               	rlf	??_MCP9800_SetLIMIT_Temp,f
  7782     1F38  3EFF               	addlw	-1
  7783     1F39  1D03               	skipz
  7784     1F3A  2F36               	goto	u4765
  7785     1F3B  1003               	clrc
  7786     1F3C  0D73               	rlf	??_MCP9800_SetLIMIT_Temp,w
  7787     1F3D  00F6               	movwf	MCP9800_SetLIMIT_Temp@lsb
  7788     1F3E                     l3511:
  7789                           
  7790                           ;MCP980x.c: 121:     I2C_Master_Start();
  7791     1F3E  160A  158A  22F4  160A  158A  	fcall	_I2C_Master_Start
  7792     1F43                     l3513:
  7793                           
  7794                           ;MCP980x.c: 122:     I2C_Master_Write(0x48 << 1);
  7795     1F43  3090               	movlw	144
  7796     1F44  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7797     1F49                     l3515:
  7798                           
  7799                           ;MCP980x.c: 123:     I2C_Master_Write(0x03);
  7800     1F49  3003               	movlw	3
  7801     1F4A  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7802     1F4F                     l3517:
  7803                           
  7804                           ;MCP980x.c: 124:     I2C_Master_Write(msb);
  7805     1F4F  0875               	movf	MCP9800_SetLIMIT_Temp@msb,w
  7806     1F50  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7807     1F55                     l3519:
  7808                           
  7809                           ;MCP980x.c: 125:     I2C_Master_Write(lsb);
  7810     1F55  0876               	movf	MCP9800_SetLIMIT_Temp@lsb,w
  7811     1F56  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7812     1F5B                     l3521:
  7813                           
  7814                           ;MCP980x.c: 126:     I2C_Master_Stop();
  7815     1F5B  160A  158A  22FD  160A  158A  	fcall	_I2C_Master_Stop
  7816     1F60                     l181:
  7817     1F60  0008               	return
  7818     1F61                     __end_of_MCP9800_SetLIMIT_Temp:
  7819                           
  7820                           	psect	text39
  7821     1EE7                     __ptext39:	
  7822 ;; *************** function _MCP9800_SetHYST_Temp *****************
  7823 ;; Defined at:
  7824 ;;		line 149 in file "MCP980x.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  temp_value      2    1[COMMON] short 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;  temp_raw_val    2    7[COMMON] short 
  7829 ;;  lsb             1    6[COMMON] unsigned char 
  7830 ;;  msb             1    5[COMMON] unsigned char 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0, pclath, cstack
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7840 ;;      Params:         2       0       0       0       0
  7841 ;;      Locals:         4       0       0       0       0
  7842 ;;      Temps:          2       0       0       0       0
  7843 ;;      Totals:         8       0       0       0       0
  7844 ;;Total ram usage:        8 bytes
  7845 ;; Hardware stack levels used: 1
  7846 ;; Hardware stack levels required when called: 2
  7847 ;; This function calls:
  7848 ;;		_I2C_Master_Start
  7849 ;;		_I2C_Master_Stop
  7850 ;;		_I2C_Master_Write
  7851 ;; This function is called by:
  7852 ;;		_configureComparatorMode
  7853 ;;		_configureInterruptMode
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857     1EE7                     _MCP9800_SetHYST_Temp:	
  7858                           ;psect for function _MCP9800_SetHYST_Temp
  7859                           
  7860     1EE7                     l3523:	
  7861                           ;incstack = 0
  7862                           ; Regs used in _MCP9800_SetHYST_Temp: [wreg+status,2+status,0+pclath+cstack]
  7863                           
  7864                           
  7865                           ;MCP980x.c: 150:     uint8_t msb, lsb;;MCP980x.c: 151:     int16_t temp_raw_value = temp
      +                          _value * 2;
  7866     1EE7  1003               	clrc
  7867     1EE8  0D71               	rlf	MCP9800_SetHYST_Temp@temp_value,w
  7868     1EE9  00F7               	movwf	MCP9800_SetHYST_Temp@temp_raw_value
  7869     1EEA  0D72               	rlf	MCP9800_SetHYST_Temp@temp_value+1,w
  7870     1EEB  00F8               	movwf	MCP9800_SetHYST_Temp@temp_raw_value+1
  7871                           
  7872                           ;MCP980x.c: 152:     msb = (uint8_t)((temp_raw_value >> 1) & 0xFF);
  7873     1EEC  0878               	movf	MCP9800_SetHYST_Temp@temp_raw_value+1,w
  7874     1EED  00F4               	movwf	??_MCP9800_SetHYST_Temp+1
  7875     1EEE  0877               	movf	MCP9800_SetHYST_Temp@temp_raw_value,w
  7876     1EEF  00F3               	movwf	??_MCP9800_SetHYST_Temp
  7877     1EF0  0D74               	rlf	??_MCP9800_SetHYST_Temp+1,w
  7878     1EF1  0CF4               	rrf	??_MCP9800_SetHYST_Temp+1,f
  7879     1EF2  0CF3               	rrf	??_MCP9800_SetHYST_Temp,f
  7880     1EF3  0873               	movf	??_MCP9800_SetHYST_Temp,w
  7881     1EF4  00F5               	movwf	MCP9800_SetHYST_Temp@msb
  7882     1EF5                     l3525:
  7883                           
  7884                           ;MCP980x.c: 153:     lsb = (uint8_t)((temp_raw_value & 0x01) << 7);
  7885     1EF5  0877               	movf	MCP9800_SetHYST_Temp@temp_raw_value,w
  7886     1EF6  3901               	andlw	1
  7887     1EF7  00F3               	movwf	??_MCP9800_SetHYST_Temp
  7888     1EF8  3006               	movlw	6
  7889     1EF9                     u4775:
  7890     1EF9  1003               	clrc
  7891     1EFA  0DF3               	rlf	??_MCP9800_SetHYST_Temp,f
  7892     1EFB  3EFF               	addlw	-1
  7893     1EFC  1D03               	skipz
  7894     1EFD  2EF9               	goto	u4775
  7895     1EFE  1003               	clrc
  7896     1EFF  0D73               	rlf	??_MCP9800_SetHYST_Temp,w
  7897     1F00  00F6               	movwf	MCP9800_SetHYST_Temp@lsb
  7898     1F01                     l3527:
  7899                           
  7900                           ;MCP980x.c: 155:     I2C_Master_Start();
  7901     1F01  160A  158A  22F4  160A  158A  	fcall	_I2C_Master_Start
  7902     1F06                     l3529:
  7903                           
  7904                           ;MCP980x.c: 156:     I2C_Master_Write(0x48 << 1);
  7905     1F06  3090               	movlw	144
  7906     1F07  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7907     1F0C                     l3531:
  7908                           
  7909                           ;MCP980x.c: 157:     I2C_Master_Write(0x02);
  7910     1F0C  3002               	movlw	2
  7911     1F0D  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7912     1F12                     l3533:
  7913                           
  7914                           ;MCP980x.c: 158:     I2C_Master_Write(msb);
  7915     1F12  0875               	movf	MCP9800_SetHYST_Temp@msb,w
  7916     1F13  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7917     1F18                     l3535:
  7918                           
  7919                           ;MCP980x.c: 159:     I2C_Master_Write(lsb);
  7920     1F18  0876               	movf	MCP9800_SetHYST_Temp@lsb,w
  7921     1F19  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  7922     1F1E                     l3537:
  7923                           
  7924                           ;MCP980x.c: 160:     I2C_Master_Stop();
  7925     1F1E  160A  158A  22FD  160A  158A  	fcall	_I2C_Master_Stop
  7926     1F23                     l187:
  7927     1F23  0008               	return
  7928     1F24                     __end_of_MCP9800_SetHYST_Temp:
  7929                           
  7930                           	psect	text40
  7931     1C87                     __ptext40:	
  7932 ;; *************** function _MCP9800_SetConfigFaultQueue *****************
  7933 ;; Defined at:
  7934 ;;		line 78 in file "MCP980x.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  fault_queue     1    wreg     unsigned char 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  fault_queue     1    3[COMMON] unsigned char 
  7939 ;;  config          1    4[COMMON] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2, status,0, pclath, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7949 ;;      Params:         0       0       0       0       0
  7950 ;;      Locals:         2       0       0       0       0
  7951 ;;      Temps:          1       0       0       0       0
  7952 ;;      Totals:         3       0       0       0       0
  7953 ;;Total ram usage:        3 bytes
  7954 ;; Hardware stack levels used: 1
  7955 ;; Hardware stack levels required when called: 3
  7956 ;; This function calls:
  7957 ;;		_MCP9800_ReadConfig
  7958 ;;		_MCP9800_WriteConfig
  7959 ;; This function is called by:
  7960 ;;		_configureComparatorMode
  7961 ;;		_configureInterruptMode
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965     1C87                     _MCP9800_SetConfigFaultQueue:	
  7966                           ;psect for function _MCP9800_SetConfigFaultQueue
  7967                           
  7968                           
  7969                           ;incstack = 0
  7970                           ; Regs used in _MCP9800_SetConfigFaultQueue: [wreg+status,2+status,0+pclath+cstack]
  7971                           ;MCP9800_SetConfigFaultQueue@fault_queue stored from wreg
  7972     1C87  00F3               	movwf	MCP9800_SetConfigFaultQueue@fault_queue
  7973     1C88                     l3481:
  7974                           
  7975                           ;MCP980x.c: 79:     uint8_t config = MCP9800_ReadConfig();
  7976     1C88  160A  158A  260A  160A  158A  	fcall	_MCP9800_ReadConfig
  7977     1C8D  00F4               	movwf	MCP9800_SetConfigFaultQueue@config
  7978     1C8E                     l3483:
  7979                           
  7980                           ;MCP980x.c: 80:     config &= ~(0x03 << CONFIG_FAULT_QUEUE);
  7981     1C8E  30E7               	movlw	231
  7982     1C8F  05F4               	andwf	MCP9800_SetConfigFaultQueue@config,f
  7983     1C90                     l3485:
  7984                           
  7985                           ;MCP980x.c: 81:     config |= (fault_queue & 0x03) << CONFIG_FAULT_QUEUE;
  7986     1C90  0873               	movf	MCP9800_SetConfigFaultQueue@fault_queue,w
  7987     1C91  3903               	andlw	3
  7988     1C92  00F2               	movwf	??_MCP9800_SetConfigFaultQueue
  7989     1C93  3002               	movlw	2
  7990     1C94                     u4735:
  7991     1C94  1003               	clrc
  7992     1C95  0DF2               	rlf	??_MCP9800_SetConfigFaultQueue,f
  7993     1C96  3EFF               	addlw	-1
  7994     1C97  1D03               	skipz
  7995     1C98  2C94               	goto	u4735
  7996     1C99  1003               	clrc
  7997     1C9A  0D72               	rlf	??_MCP9800_SetConfigFaultQueue,w
  7998     1C9B  04F4               	iorwf	MCP9800_SetConfigFaultQueue@config,f
  7999                           
  8000                           ;MCP980x.c: 82:     MCP9800_WriteConfig(config);
  8001     1C9C  0874               	movf	MCP9800_SetConfigFaultQueue@config,w
  8002     1C9D  160A  158A  24BF  160A  158A  	fcall	_MCP9800_WriteConfig
  8003     1CA2                     l163:
  8004     1CA2  0008               	return
  8005     1CA3                     __end_of_MCP9800_SetConfigFaultQueue:
  8006                           
  8007                           	psect	text41
  8008     1BC1                     __ptext41:	
  8009 ;; *************** function _MCP9800_SetConfigCompIntMode *****************
  8010 ;; Defined at:
  8011 ;;		line 95 in file "MCP980x.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  mode            1    wreg     unsigned char 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  mode            1    2[COMMON] unsigned char 
  8016 ;;  config          1    3[COMMON] unsigned char 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0, pclath, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8026 ;;      Params:         0       0       0       0       0
  8027 ;;      Locals:         2       0       0       0       0
  8028 ;;      Temps:          0       0       0       0       0
  8029 ;;      Totals:         2       0       0       0       0
  8030 ;;Total ram usage:        2 bytes
  8031 ;; Hardware stack levels used: 1
  8032 ;; Hardware stack levels required when called: 3
  8033 ;; This function calls:
  8034 ;;		_MCP9800_ReadConfig
  8035 ;;		_MCP9800_WriteConfig
  8036 ;; This function is called by:
  8037 ;;		_configureComparatorMode
  8038 ;;		_configureInterruptMode
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042     1BC1                     _MCP9800_SetConfigCompIntMode:	
  8043                           ;psect for function _MCP9800_SetConfigCompIntMode
  8044                           
  8045                           
  8046                           ;incstack = 0
  8047                           ; Regs used in _MCP9800_SetConfigCompIntMode: [wreg+status,2+status,0+pclath+cstack]
  8048                           ;MCP9800_SetConfigCompIntMode@mode stored from wreg
  8049     1BC1  00F2               	movwf	MCP9800_SetConfigCompIntMode@mode
  8050     1BC2                     l3497:
  8051                           
  8052                           ;MCP980x.c: 96:     uint8_t config = MCP9800_ReadConfig();
  8053     1BC2  160A  158A  260A  160A  158A  	fcall	_MCP9800_ReadConfig
  8054     1BC7  00F3               	movwf	MCP9800_SetConfigCompIntMode@config
  8055     1BC8                     l3499:
  8056                           
  8057                           ;MCP980x.c: 97:     if (mode) {
  8058     1BC8  0872               	movf	MCP9800_SetConfigCompIntMode@mode,w
  8059     1BC9  1903               	btfsc	3,2
  8060     1BCA  2BCC               	goto	u4751
  8061     1BCB  2BCD               	goto	u4750
  8062     1BCC                     u4751:
  8063     1BCC  2BCF               	goto	l3503
  8064     1BCD                     u4750:
  8065     1BCD                     l3501:
  8066                           
  8067                           ;MCP980x.c: 98:         config |= (1 << CONFIG_COMP_INT);
  8068     1BCD  14F3               	bsf	MCP9800_SetConfigCompIntMode@config,1
  8069                           
  8070                           ;MCP980x.c: 99:         } else {
  8071     1BCE  2BD1               	goto	l3505
  8072     1BCF                     l3503:
  8073                           
  8074                           ;MCP980x.c: 100:         config &= ~(1 << CONFIG_COMP_INT);
  8075     1BCF  30FD               	movlw	253
  8076     1BD0  05F3               	andwf	MCP9800_SetConfigCompIntMode@config,f
  8077     1BD1                     l3505:
  8078                           
  8079                           ;MCP980x.c: 102:     MCP9800_WriteConfig(config);
  8080     1BD1  0873               	movf	MCP9800_SetConfigCompIntMode@config,w
  8081     1BD2  160A  158A  24BF  160A  158A  	fcall	_MCP9800_WriteConfig
  8082     1BD7                     l173:
  8083     1BD7  0008               	return
  8084     1BD8                     __end_of_MCP9800_SetConfigCompIntMode:
  8085                           
  8086                           	psect	text42
  8087     1BAA                     __ptext42:	
  8088 ;; *************** function _MCP9800_SetConfigAlertPolarity *****************
  8089 ;; Defined at:
  8090 ;;		line 85 in file "MCP980x.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  polarity        1    wreg     unsigned char 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;  polarity        1    2[COMMON] unsigned char 
  8095 ;;  config          1    3[COMMON] unsigned char 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg, status,2, status,0, pclath, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8105 ;;      Params:         0       0       0       0       0
  8106 ;;      Locals:         2       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0
  8108 ;;      Totals:         2       0       0       0       0
  8109 ;;Total ram usage:        2 bytes
  8110 ;; Hardware stack levels used: 1
  8111 ;; Hardware stack levels required when called: 3
  8112 ;; This function calls:
  8113 ;;		_MCP9800_ReadConfig
  8114 ;;		_MCP9800_WriteConfig
  8115 ;; This function is called by:
  8116 ;;		_configureComparatorMode
  8117 ;;		_configureInterruptMode
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121     1BAA                     _MCP9800_SetConfigAlertPolarity:	
  8122                           ;psect for function _MCP9800_SetConfigAlertPolarity
  8123                           
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in _MCP9800_SetConfigAlertPolarity: [wreg+status,2+status,0+pclath+cstack]
  8127                           ;MCP9800_SetConfigAlertPolarity@polarity stored from wreg
  8128     1BAA  00F2               	movwf	MCP9800_SetConfigAlertPolarity@polarity
  8129     1BAB                     l3487:
  8130                           
  8131                           ;MCP980x.c: 86:     uint8_t config = MCP9800_ReadConfig();
  8132     1BAB  160A  158A  260A  160A  158A  	fcall	_MCP9800_ReadConfig
  8133     1BB0  00F3               	movwf	MCP9800_SetConfigAlertPolarity@config
  8134     1BB1                     l3489:
  8135                           
  8136                           ;MCP980x.c: 87:     if (polarity) {
  8137     1BB1  0872               	movf	MCP9800_SetConfigAlertPolarity@polarity,w
  8138     1BB2  1903               	btfsc	3,2
  8139     1BB3  2BB5               	goto	u4741
  8140     1BB4  2BB6               	goto	u4740
  8141     1BB5                     u4741:
  8142     1BB5  2BB8               	goto	l3493
  8143     1BB6                     u4740:
  8144     1BB6                     l3491:
  8145                           
  8146                           ;MCP980x.c: 88:         config |= (1 << CONFIG_ALERT_POL);
  8147     1BB6  1573               	bsf	MCP9800_SetConfigAlertPolarity@config,2
  8148                           
  8149                           ;MCP980x.c: 89:         } else {
  8150     1BB7  2BBA               	goto	l3495
  8151     1BB8                     l3493:
  8152                           
  8153                           ;MCP980x.c: 90:         config &= ~(1 << CONFIG_ALERT_POL);
  8154     1BB8  30FB               	movlw	251
  8155     1BB9  05F3               	andwf	MCP9800_SetConfigAlertPolarity@config,f
  8156     1BBA                     l3495:
  8157                           
  8158                           ;MCP980x.c: 92:     MCP9800_WriteConfig(config);
  8159     1BBA  0873               	movf	MCP9800_SetConfigAlertPolarity@config,w
  8160     1BBB  160A  158A  24BF  160A  158A  	fcall	_MCP9800_WriteConfig
  8161     1BC0                     l168:
  8162     1BC0  0008               	return
  8163     1BC1                     __end_of_MCP9800_SetConfigAlertPolarity:
  8164                           
  8165                           	psect	text43
  8166     1CBF                     __ptext43:	
  8167 ;; *************** function _MCP9800_WriteConfig *****************
  8168 ;; Defined at:
  8169 ;;		line 8 in file "MCP980x.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  value           1    wreg     unsigned char 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;  value           1    1[COMMON] unsigned char 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, status,2, status,0, pclath, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8183 ;;      Params:         0       0       0       0       0
  8184 ;;      Locals:         1       0       0       0       0
  8185 ;;      Temps:          0       0       0       0       0
  8186 ;;      Totals:         1       0       0       0       0
  8187 ;;Total ram usage:        1 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 2
  8190 ;; This function calls:
  8191 ;;		_I2C_Master_Start
  8192 ;;		_I2C_Master_Stop
  8193 ;;		_I2C_Master_Write
  8194 ;; This function is called by:
  8195 ;;		_MCP9800_Init
  8196 ;;		_MCP9800_SetConfigOneShot
  8197 ;;		_MCP9800_SetConfigResolution
  8198 ;;		_MCP9800_SetConfigFaultQueue
  8199 ;;		_MCP9800_SetConfigAlertPolarity
  8200 ;;		_MCP9800_SetConfigCompIntMode
  8201 ;;		_MCP9800_SetConfigShutdown
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205     1CBF                     _MCP9800_WriteConfig:	
  8206                           ;psect for function _MCP9800_WriteConfig
  8207                           
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _MCP9800_WriteConfig: [wreg+status,2+status,0+pclath+cstack]
  8211                           ;MCP9800_WriteConfig@value stored from wreg
  8212     1CBF  00F1               	movwf	MCP9800_WriteConfig@value
  8213     1CC0                     l2715:
  8214                           
  8215                           ;MCP980x.c: 9:     I2C_Master_Start();
  8216     1CC0  160A  158A  22F4  160A  158A  	fcall	_I2C_Master_Start
  8217                           
  8218                           ;MCP980x.c: 10:     I2C_Master_Write(0x48 << 1);
  8219     1CC5  3090               	movlw	144
  8220     1CC6  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  8221                           
  8222                           ;MCP980x.c: 11:     I2C_Master_Write(0x01);
  8223     1CCB  3001               	movlw	1
  8224     1CCC  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  8225                           
  8226                           ;MCP980x.c: 12:     I2C_Master_Write(value);
  8227     1CD1  0871               	movf	MCP9800_WriteConfig@value,w
  8228     1CD2  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  8229                           
  8230                           ;MCP980x.c: 13:     I2C_Master_Stop();
  8231     1CD7  160A  158A  22FD  160A  158A  	fcall	_I2C_Master_Stop
  8232     1CDC                     l131:
  8233     1CDC  0008               	return
  8234     1CDD                     __end_of_MCP9800_WriteConfig:
  8235                           
  8236                           	psect	text44
  8237     1E0A                     __ptext44:	
  8238 ;; *************** function _MCP9800_ReadConfig *****************
  8239 ;; Defined at:
  8240 ;;		line 16 in file "MCP980x.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  config_value    1    1[COMMON] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      unsigned char 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, status,0, pclath, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8254 ;;      Params:         0       0       0       0       0
  8255 ;;      Locals:         1       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0
  8257 ;;      Totals:         1       0       0       0       0
  8258 ;;Total ram usage:        1 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 2
  8261 ;; This function calls:
  8262 ;;		_I2C_Master_RepeatedStart
  8263 ;;		_I2C_Master_Start
  8264 ;;		_I2C_Master_Stop
  8265 ;;		_I2C_Master_Write
  8266 ;;		_I2C_NACK
  8267 ;;		_I2C_Read_Byte
  8268 ;; This function is called by:
  8269 ;;		_MCP9800_SetConfigOneShot
  8270 ;;		_MCP9800_SetConfigResolution
  8271 ;;		_MCP9800_SetConfigFaultQueue
  8272 ;;		_MCP9800_SetConfigAlertPolarity
  8273 ;;		_MCP9800_SetConfigCompIntMode
  8274 ;;		_MCP9800_SetConfigShutdown
  8275 ;;		_MCP9800_GetConfigOneShot
  8276 ;;		_MCP9800_GetConfigResolution
  8277 ;;		_MCP9800_GetConfigFaultQueue
  8278 ;;		_MCP9800_GetConfigAlertPolarity
  8279 ;;		_MCP9800_GetConfigCompIntMode
  8280 ;;		_MCP9800_GetConfigShutdown
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284     1E0A                     _MCP9800_ReadConfig:	
  8285                           ;psect for function _MCP9800_ReadConfig
  8286                           
  8287     1E0A                     l2717:	
  8288                           ;incstack = 0
  8289                           ; Regs used in _MCP9800_ReadConfig: [wreg+status,2+status,0+pclath+cstack]
  8290                           
  8291                           
  8292                           ;MCP980x.c: 17:     uint8_t config_value;;MCP980x.c: 19:     I2C_Master_Start();
  8293     1E0A  160A  158A  22F4  160A  158A  	fcall	_I2C_Master_Start
  8294                           
  8295                           ;MCP980x.c: 20:     I2C_Master_Write(0x48 << 1);
  8296     1E0F  3090               	movlw	144
  8297     1E10  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  8298                           
  8299                           ;MCP980x.c: 21:     I2C_Master_Write(0x01);
  8300     1E15  3001               	movlw	1
  8301     1E16  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  8302                           
  8303                           ;MCP980x.c: 22:     I2C_Master_RepeatedStart();
  8304     1E1B  160A  158A  22EB  160A  158A  	fcall	_I2C_Master_RepeatedStart
  8305                           
  8306                           ;MCP980x.c: 23:     I2C_Master_Write((0x48 << 1) | 0x01);
  8307     1E20  3091               	movlw	145
  8308     1E21  160A  158A  2338  160A  158A  	fcall	_I2C_Master_Write
  8309                           
  8310                           ;MCP980x.c: 24:     config_value = I2C_Read_Byte();
  8311     1E26  160A  158A  2393  160A  158A  	fcall	_I2C_Read_Byte
  8312     1E2B  00F1               	movwf	MCP9800_ReadConfig@config_value
  8313                           
  8314                           ;MCP980x.c: 25:     I2C_NACK();
  8315     1E2C  160A  158A  2312  160A  158A  	fcall	_I2C_NACK
  8316                           
  8317                           ;MCP980x.c: 26:     I2C_Master_Stop();
  8318     1E31  160A  158A  22FD  160A  158A  	fcall	_I2C_Master_Stop
  8319     1E36                     l2719:
  8320                           
  8321                           ;MCP980x.c: 28:     return config_value;
  8322     1E36  0871               	movf	MCP9800_ReadConfig@config_value,w
  8323     1E37                     l134:
  8324     1E37  0008               	return
  8325     1E38                     __end_of_MCP9800_ReadConfig:
  8326                           
  8327                           	psect	text45
  8328     1B48                     __ptext45:	
  8329 ;; *************** function _clearLCD *****************
  8330 ;; Defined at:
  8331 ;;		line 31 in file "lcd.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;		None
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8345 ;;      Params:         0       0       0       0       0
  8346 ;;      Locals:         0       0       0       0       0
  8347 ;;      Temps:          2       0       0       0       0
  8348 ;;      Totals:         2       0       0       0       0
  8349 ;;Total ram usage:        2 bytes
  8350 ;; Hardware stack levels used: 1
  8351 ;; Hardware stack levels required when called: 1
  8352 ;; This function calls:
  8353 ;;		_sendCommandToLCD
  8354 ;; This function is called by:
  8355 ;;		_initializeLCD
  8356 ;;		_main
  8357 ;;		_handleButtonPress
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361     1B48                     _clearLCD:	
  8362                           ;psect for function _clearLCD
  8363                           
  8364     1B48                     l3469:	
  8365                           ;incstack = 0
  8366                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  8367                           
  8368                           
  8369                           ;lcd.c: 32:     sendCommandToLCD(0x01);
  8370     1B48  3001               	movlw	1
  8371     1B49  160A  158A  2406  160A  158A  	fcall	_sendCommandToLCD
  8372     1B4E                     l3471:
  8373                           
  8374                           ;lcd.c: 33:     _delay((unsigned long)((3)*(20000000/4000.0)));
  8375     1B4E  3014               	movlw	20
  8376     1B4F  00F3               	movwf	??_clearLCD+1
  8377     1B50  3079               	movlw	121
  8378     1B51  00F2               	movwf	??_clearLCD
  8379     1B52                     u5187:
  8380     1B52  0BF2               	decfsz	??_clearLCD,f
  8381     1B53  2B52               	goto	u5187
  8382     1B54  0BF3               	decfsz	??_clearLCD+1,f
  8383     1B55  2B52               	goto	u5187
  8384     1B56  2B57               	nop2
  8385     1B57                     l86:
  8386     1B57  0008               	return
  8387     1B58                     __end_of_clearLCD:
  8388                           
  8389                           	psect	text46
  8390     1C06                     __ptext46:	
  8391 ;; *************** function _sendCommandToLCD *****************
  8392 ;; Defined at:
  8393 ;;		line 36 in file "lcd.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  command         1    wreg     unsigned char 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  command         1    1[COMMON] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8407 ;;      Params:         0       0       0       0       0
  8408 ;;      Locals:         1       0       0       0       0
  8409 ;;      Temps:          1       0       0       0       0
  8410 ;;      Totals:         2       0       0       0       0
  8411 ;;Total ram usage:        2 bytes
  8412 ;; Hardware stack levels used: 1
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_initializeLCD
  8417 ;;		_clearLCD
  8418 ;;		_moveCursorToPosition
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422     1C06                     _sendCommandToLCD:	
  8423                           ;psect for function _sendCommandToLCD
  8424                           
  8425                           
  8426                           ;incstack = 0
  8427                           ; Regs used in _sendCommandToLCD: [wreg]
  8428                           ;sendCommandToLCD@command stored from wreg
  8429     1C06  00F1               	movwf	sendCommandToLCD@command
  8430     1C07                     l3193:
  8431                           
  8432                           ;lcd.c: 37:     PORTCbits.RC0 = 0;
  8433     1C07  1283               	bcf	3,5	;RP0=0, select bank0
  8434     1C08  1303               	bcf	3,6	;RP1=0, select bank0
  8435     1C09  1007               	bcf	7,0	;volatile
  8436     1C0A                     l3195:
  8437                           
  8438                           ;lcd.c: 38:     PORTB = command;
  8439     1C0A  0871               	movf	sendCommandToLCD@command,w
  8440     1C0B  0086               	movwf	6	;volatile
  8441     1C0C                     l3197:
  8442                           
  8443                           ;lcd.c: 39:     PORTCbits.RC1 = 1;
  8444     1C0C  1487               	bsf	7,1	;volatile
  8445                           
  8446                           ;lcd.c: 40:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  8447     1C0D  30C7               	movlw	199
  8448     1C0E  00F0               	movwf	??_sendCommandToLCD
  8449     1C0F                     u5197:
  8450     1C0F  2C10               	nop2
  8451     1C10  0BF0               	decfsz	??_sendCommandToLCD,f
  8452     1C11  2C0F               	goto	u5197
  8453     1C12  2C13               	nop2
  8454     1C13  2C14               	nop2
  8455     1C14                     l3199:
  8456                           
  8457                           ;lcd.c: 41:     PORTCbits.RC1 = 0;
  8458     1C14  1283               	bcf	3,5	;RP0=0, select bank0
  8459     1C15  1303               	bcf	3,6	;RP1=0, select bank0
  8460     1C16  1087               	bcf	7,1	;volatile
  8461                           
  8462                           ;lcd.c: 42:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  8463     1C17  30C7               	movlw	199
  8464     1C18  00F0               	movwf	??_sendCommandToLCD
  8465     1C19                     u5207:
  8466     1C19  2C1A               	nop2
  8467     1C1A  0BF0               	decfsz	??_sendCommandToLCD,f
  8468     1C1B  2C19               	goto	u5207
  8469     1C1C  2C1D               	nop2
  8470     1C1D  2C1E               	nop2
  8471     1C1E                     l89:
  8472     1C1E  0008               	return
  8473     1C1F                     __end_of_sendCommandToLCD:
  8474                           
  8475                           	psect	text47
  8476     080C                     __ptext47:	
  8477 ;; *************** function _MCP9800_ReadTemperature *****************
  8478 ;; Defined at:
  8479 ;;		line 183 in file "MCP980x.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  temperature     2   38[BANK0 ] short 
  8484 ;;  temp_lsb        1   41[BANK0 ] unsigned char 
  8485 ;;  temp_msb        1   40[BANK0 ] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  2   36[BANK0 ] short 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8495 ;;      Params:         0       2       0       0       0
  8496 ;;      Locals:         0       4       0       0       0
  8497 ;;      Temps:          0       0       0       0       0
  8498 ;;      Totals:         0       6       0       0       0
  8499 ;;Total ram usage:        6 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 2
  8502 ;; This function calls:
  8503 ;;		_I2C_ACK
  8504 ;;		_I2C_Master_RepeatedStart
  8505 ;;		_I2C_Master_Start
  8506 ;;		_I2C_Master_Stop
  8507 ;;		_I2C_Master_Write
  8508 ;;		_I2C_NACK
  8509 ;;		_I2C_Read_Byte
  8510 ;;		___flmul
  8511 ;;		___fltol
  8512 ;;		___xxtofl
  8513 ;; This function is called by:
  8514 ;;		_main
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518     080C                     _MCP9800_ReadTemperature:	
  8519                           ;psect for function _MCP9800_ReadTemperature
  8520                           
  8521     080C                     l3715:	
  8522                           ;incstack = 0
  8523                           ; Regs used in _MCP9800_ReadTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8524                           
  8525                           
  8526                           ;MCP980x.c: 184:     uint8_t temp_msb, temp_lsb;;MCP980x.c: 185:     int16_t temperature
      +                          ;;MCP980x.c: 187:     I2C_Master_Start();
  8527     080C  160A  158A  22F4  120A  158A  	fcall	_I2C_Master_Start
  8528                           
  8529                           ;MCP980x.c: 188:     I2C_Master_Write(0x48 << 1);
  8530     0811  3090               	movlw	144
  8531     0812  160A  158A  2338  120A  158A  	fcall	_I2C_Master_Write
  8532                           
  8533                           ;MCP980x.c: 189:     I2C_Master_Write(0x00);
  8534     0817  3000               	movlw	0
  8535     0818  160A  158A  2338  120A  158A  	fcall	_I2C_Master_Write
  8536                           
  8537                           ;MCP980x.c: 190:     I2C_Master_RepeatedStart();
  8538     081D  160A  158A  22EB  120A  158A  	fcall	_I2C_Master_RepeatedStart
  8539                           
  8540                           ;MCP980x.c: 191:     I2C_Master_Write((0x48 << 1) | 0x01);
  8541     0822  3091               	movlw	145
  8542     0823  160A  158A  2338  120A  158A  	fcall	_I2C_Master_Write
  8543                           
  8544                           ;MCP980x.c: 192:     temp_msb = I2C_Read_Byte();
  8545     0828  160A  158A  2393  120A  158A  	fcall	_I2C_Read_Byte
  8546     082D  1283               	bcf	3,5	;RP0=0, select bank0
  8547     082E  1303               	bcf	3,6	;RP1=0, select bank0
  8548     082F  00C8               	movwf	MCP9800_ReadTemperature@temp_msb
  8549                           
  8550                           ;MCP980x.c: 193:     I2C_ACK();
  8551     0830  160A  158A  2306  120A  158A  	fcall	_I2C_ACK
  8552                           
  8553                           ;MCP980x.c: 194:     temp_lsb = I2C_Read_Byte();
  8554     0835  160A  158A  2393  120A  158A  	fcall	_I2C_Read_Byte
  8555     083A  1283               	bcf	3,5	;RP0=0, select bank0
  8556     083B  1303               	bcf	3,6	;RP1=0, select bank0
  8557     083C  00C9               	movwf	MCP9800_ReadTemperature@temp_lsb
  8558                           
  8559                           ;MCP980x.c: 195:     I2C_NACK();
  8560     083D  160A  158A  2312  120A  158A  	fcall	_I2C_NACK
  8561                           
  8562                           ;MCP980x.c: 196:     I2C_Master_Stop();
  8563     0842  160A  158A  22FD  120A  158A  	fcall	_I2C_Master_Stop
  8564     0847                     l3717:
  8565                           
  8566                           ;MCP980x.c: 197:     temperature = (((temp_msb << 8) | temp_lsb) >> 4);
  8567     0847  1283               	bcf	3,5	;RP0=0, select bank0
  8568     0848  1303               	bcf	3,6	;RP1=0, select bank0
  8569     0849  0E49               	swapf	MCP9800_ReadTemperature@temp_lsb,w
  8570     084A  390F               	andlw	15
  8571     084B  00C6               	movwf	MCP9800_ReadTemperature@temperature
  8572     084C  0E48               	swapf	MCP9800_ReadTemperature@temp_msb,w
  8573     084D  39F0               	andlw	240
  8574     084E  04C6               	iorwf	MCP9800_ReadTemperature@temperature,f
  8575     084F  0E48               	swapf	MCP9800_ReadTemperature@temp_msb,w
  8576     0850  390F               	andlw	15
  8577     0851  00C7               	movwf	MCP9800_ReadTemperature@temperature+1
  8578     0852  30F0               	movlw	240
  8579     0853  1DC7               	btfss	MCP9800_ReadTemperature@temperature+1,3
  8580     0854  3000               	movlw	0
  8581     0855  04C7               	iorwf	MCP9800_ReadTemperature@temperature+1,f
  8582     0856                     l3719:
  8583                           
  8584                           ;MCP980x.c: 198:     return (temperature * 0.0625);
  8585     0856  0846               	movf	MCP9800_ReadTemperature@temperature,w
  8586     0857  00F0               	movwf	___xxtofl@val
  8587     0858  0847               	movf	MCP9800_ReadTemperature@temperature+1,w
  8588     0859  00F1               	movwf	___xxtofl@val+1
  8589     085A  3000               	movlw	0
  8590     085B  1BF1               	btfsc	___xxtofl@val+1,7
  8591     085C  30FF               	movlw	255
  8592     085D  00F2               	movwf	___xxtofl@val+2
  8593     085E  00F3               	movwf	___xxtofl@val+3
  8594     085F  3001               	movlw	1
  8595     0860  160A  118A  2412  120A  158A  	fcall	___xxtofl
  8596     0865  0873               	movf	?___xxtofl+3,w
  8597     0866  1283               	bcf	3,5	;RP0=0, select bank0
  8598     0867  1303               	bcf	3,6	;RP1=0, select bank0
  8599     0868  00A7               	movwf	___flmul@a+3
  8600     0869  0872               	movf	?___xxtofl+2,w
  8601     086A  00A6               	movwf	___flmul@a+2
  8602     086B  0871               	movf	?___xxtofl+1,w
  8603     086C  00A5               	movwf	___flmul@a+1
  8604     086D  0870               	movf	?___xxtofl,w
  8605     086E  00A4               	movwf	___flmul@a
  8606     086F  303D               	movlw	61
  8607     0870  00A3               	movwf	___flmul@b+3
  8608     0871  3080               	movlw	128
  8609     0872  00A2               	movwf	___flmul@b+2
  8610     0873  3000               	movlw	0
  8611     0874  00A1               	movwf	___flmul@b+1
  8612     0875  3000               	movlw	0
  8613     0876  00A0               	movwf	___flmul@b
  8614     0877  120A  158A  24BE  120A  158A  	fcall	___flmul
  8615     087C  1283               	bcf	3,5	;RP0=0, select bank0
  8616     087D  1303               	bcf	3,6	;RP1=0, select bank0
  8617     087E  0823               	movf	?___flmul+3,w
  8618     087F  00BD               	movwf	___fltol@f1+3
  8619     0880  0822               	movf	?___flmul+2,w
  8620     0881  00BC               	movwf	___fltol@f1+2
  8621     0882  0821               	movf	?___flmul+1,w
  8622     0883  00BB               	movwf	___fltol@f1+1
  8623     0884  0820               	movf	?___flmul,w
  8624     0885  00BA               	movwf	___fltol@f1
  8625     0886  160A  118A  2119  120A  158A  	fcall	___fltol
  8626     088B  1283               	bcf	3,5	;RP0=0, select bank0
  8627     088C  1303               	bcf	3,6	;RP1=0, select bank0
  8628     088D  083B               	movf	?___fltol+1,w
  8629     088E  00C5               	movwf	?_MCP9800_ReadTemperature+1
  8630     088F  083A               	movf	?___fltol,w
  8631     0890  00C4               	movwf	?_MCP9800_ReadTemperature
  8632     0891                     l193:
  8633     0891  0008               	return
  8634     0892                     __end_of_MCP9800_ReadTemperature:
  8635                           
  8636                           	psect	text48
  8637     1412                     __ptext48:	
  8638 ;; *************** function ___xxtofl *****************
  8639 ;; Defined at:
  8640 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  sign            1    wreg     unsigned char 
  8643 ;;  val             4    0[COMMON] long 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  sign            1    8[COMMON] unsigned char 
  8646 ;;  arg             4   10[COMMON] unsigned long 
  8647 ;;  exp             1    9[COMMON] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  4    0[COMMON] unsigned char 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8657 ;;      Params:         4       0       0       0       0
  8658 ;;      Locals:         6       0       0       0       0
  8659 ;;      Temps:          4       0       0       0       0
  8660 ;;      Totals:        14       0       0       0       0
  8661 ;;Total ram usage:       14 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; This function calls:
  8664 ;;		Nothing
  8665 ;; This function is called by:
  8666 ;;		_MCP9800_ReadTemperature
  8667 ;;		_main
  8668 ;;		_MCP9800_GetLIMIT_Temp
  8669 ;;		_MCP9800_GetHYST_Temp
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673     1412                     ___xxtofl:	
  8674                           ;psect for function ___xxtofl
  8675                           
  8676                           
  8677                           ;incstack = 0
  8678                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8679                           ;___xxtofl@sign stored from wreg
  8680     1412  00F8               	movwf	___xxtofl@sign
  8681     1413                     l3661:
  8682     1413  0878               	movf	___xxtofl@sign,w
  8683     1414  1903               	btfsc	3,2
  8684     1415  2C17               	goto	u4861
  8685     1416  2C18               	goto	u4860
  8686     1417                     u4861:
  8687     1417  2C2C               	goto	l3667
  8688     1418                     u4860:
  8689     1418                     l3663:
  8690     1418  1FF3               	btfss	___xxtofl@val+3,7
  8691     1419  2C1B               	goto	u4871
  8692     141A  2C1C               	goto	u4870
  8693     141B                     u4871:
  8694     141B  2C2C               	goto	l3667
  8695     141C                     u4870:
  8696     141C                     l3665:
  8697     141C  0970               	comf	___xxtofl@val,w
  8698     141D  00FA               	movwf	___xxtofl@arg
  8699     141E  0971               	comf	___xxtofl@val+1,w
  8700     141F  00FB               	movwf	___xxtofl@arg+1
  8701     1420  0972               	comf	___xxtofl@val+2,w
  8702     1421  00FC               	movwf	___xxtofl@arg+2
  8703     1422  0973               	comf	___xxtofl@val+3,w
  8704     1423  00FD               	movwf	___xxtofl@arg+3
  8705     1424  0AFA               	incf	___xxtofl@arg,f
  8706     1425  1903               	skipnz
  8707     1426  0AFB               	incf	___xxtofl@arg+1,f
  8708     1427  1903               	skipnz
  8709     1428  0AFC               	incf	___xxtofl@arg+2,f
  8710     1429  1903               	skipnz
  8711     142A  0AFD               	incf	___xxtofl@arg+3,f
  8712     142B  2C34               	goto	l805
  8713     142C                     l3667:
  8714     142C  0873               	movf	___xxtofl@val+3,w
  8715     142D  00FD               	movwf	___xxtofl@arg+3
  8716     142E  0872               	movf	___xxtofl@val+2,w
  8717     142F  00FC               	movwf	___xxtofl@arg+2
  8718     1430  0871               	movf	___xxtofl@val+1,w
  8719     1431  00FB               	movwf	___xxtofl@arg+1
  8720     1432  0870               	movf	___xxtofl@val,w
  8721     1433  00FA               	movwf	___xxtofl@arg
  8722     1434                     l805:
  8723     1434  0873               	movf	___xxtofl@val+3,w
  8724     1435  0472               	iorwf	___xxtofl@val+2,w
  8725     1436  0471               	iorwf	___xxtofl@val+1,w
  8726     1437  0470               	iorwf	___xxtofl@val,w
  8727     1438  1D03               	skipz
  8728     1439  2C3B               	goto	u4881
  8729     143A  2C3C               	goto	u4880
  8730     143B                     u4881:
  8731     143B  2C45               	goto	l806
  8732     143C                     u4880:
  8733     143C                     l3669:
  8734     143C  3000               	movlw	0
  8735     143D  00F3               	movwf	?___xxtofl+3
  8736     143E  3000               	movlw	0
  8737     143F  00F2               	movwf	?___xxtofl+2
  8738     1440  3000               	movlw	0
  8739     1441  00F1               	movwf	?___xxtofl+1
  8740     1442  3000               	movlw	0
  8741     1443  00F0               	movwf	?___xxtofl
  8742     1444  2CC5               	goto	l807
  8743     1445                     l806:
  8744     1445  3096               	movlw	150
  8745     1446  00F9               	movwf	___xxtofl@exp
  8746     1447  2C53               	goto	l3675
  8747     1448                     l3673:
  8748     1448  3001               	movlw	1
  8749     1449  07F9               	addwf	___xxtofl@exp,f
  8750     144A  3001               	movlw	1
  8751     144B                     u4895:
  8752     144B  1003               	clrc
  8753     144C  0CFD               	rrf	___xxtofl@arg+3,f
  8754     144D  0CFC               	rrf	___xxtofl@arg+2,f
  8755     144E  0CFB               	rrf	___xxtofl@arg+1,f
  8756     144F  0CFA               	rrf	___xxtofl@arg,f
  8757     1450  3EFF               	addlw	-1
  8758     1451  1D03               	skipz
  8759     1452  2C4B               	goto	u4895
  8760     1453                     l3675:
  8761     1453  30FE               	movlw	254
  8762     1454  057D               	andwf	___xxtofl@arg+3,w
  8763     1455  1D03               	btfss	3,2
  8764     1456  2C58               	goto	u4901
  8765     1457  2C59               	goto	u4900
  8766     1458                     u4901:
  8767     1458  2C48               	goto	l3673
  8768     1459                     u4900:
  8769     1459  2C73               	goto	l811
  8770     145A                     l3677:
  8771     145A  3001               	movlw	1
  8772     145B  07F9               	addwf	___xxtofl@exp,f
  8773     145C                     l3679:
  8774     145C  3001               	movlw	1
  8775     145D  07FA               	addwf	___xxtofl@arg,f
  8776     145E  3000               	movlw	0
  8777     145F  1803               	skipnc
  8778     1460  3001               	movlw	1
  8779     1461  07FB               	addwf	___xxtofl@arg+1,f
  8780     1462  3000               	movlw	0
  8781     1463  1803               	skipnc
  8782     1464  3001               	movlw	1
  8783     1465  07FC               	addwf	___xxtofl@arg+2,f
  8784     1466  3000               	movlw	0
  8785     1467  1803               	skipnc
  8786     1468  3001               	movlw	1
  8787     1469  07FD               	addwf	___xxtofl@arg+3,f
  8788     146A                     l3681:
  8789     146A  3001               	movlw	1
  8790     146B                     u4915:
  8791     146B  1003               	clrc
  8792     146C  0CFD               	rrf	___xxtofl@arg+3,f
  8793     146D  0CFC               	rrf	___xxtofl@arg+2,f
  8794     146E  0CFB               	rrf	___xxtofl@arg+1,f
  8795     146F  0CFA               	rrf	___xxtofl@arg,f
  8796     1470  3EFF               	addlw	-1
  8797     1471  1D03               	skipz
  8798     1472  2C6B               	goto	u4915
  8799     1473                     l811:
  8800     1473  30FF               	movlw	255
  8801     1474  057D               	andwf	___xxtofl@arg+3,w
  8802     1475  1D03               	btfss	3,2
  8803     1476  2C78               	goto	u4921
  8804     1477  2C79               	goto	u4920
  8805     1478                     u4921:
  8806     1478  2C5A               	goto	l3677
  8807     1479                     u4920:
  8808     1479  2C85               	goto	l3685
  8809     147A                     l3683:
  8810     147A  3001               	movlw	1
  8811     147B  02F9               	subwf	___xxtofl@exp,f
  8812     147C  3001               	movlw	1
  8813     147D  00F4               	movwf	??___xxtofl
  8814     147E                     u4935:
  8815     147E  1003               	clrc
  8816     147F  0DFA               	rlf	___xxtofl@arg,f
  8817     1480  0DFB               	rlf	___xxtofl@arg+1,f
  8818     1481  0DFC               	rlf	___xxtofl@arg+2,f
  8819     1482  0DFD               	rlf	___xxtofl@arg+3,f
  8820     1483  0BF4               	decfsz	??___xxtofl,f
  8821     1484  2C7E               	goto	u4935
  8822     1485                     l3685:
  8823     1485  1BFC               	btfsc	___xxtofl@arg+2,7
  8824     1486  2C88               	goto	u4941
  8825     1487  2C89               	goto	u4940
  8826     1488                     u4941:
  8827     1488  2C8F               	goto	l818
  8828     1489                     u4940:
  8829     1489                     l3687:
  8830     1489  3002               	movlw	2
  8831     148A  0279               	subwf	___xxtofl@exp,w
  8832     148B  1803               	skipnc
  8833     148C  2C8E               	goto	u4951
  8834     148D  2C8F               	goto	u4950
  8835     148E                     u4951:
  8836     148E  2C7A               	goto	l3683
  8837     148F                     u4950:
  8838     148F                     l818:
  8839     148F  1879               	btfsc	___xxtofl@exp,0
  8840     1490  2C92               	goto	u4961
  8841     1491  2C93               	goto	u4960
  8842     1492                     u4961:
  8843     1492  2C9B               	goto	l819
  8844     1493                     u4960:
  8845     1493                     l3689:
  8846     1493  30FF               	movlw	255
  8847     1494  05FA               	andwf	___xxtofl@arg,f
  8848     1495  30FF               	movlw	255
  8849     1496  05FB               	andwf	___xxtofl@arg+1,f
  8850     1497  307F               	movlw	127
  8851     1498  05FC               	andwf	___xxtofl@arg+2,f
  8852     1499  30FF               	movlw	255
  8853     149A  05FD               	andwf	___xxtofl@arg+3,f
  8854     149B                     l819:
  8855     149B  1003               	clrc
  8856     149C  0CF9               	rrf	___xxtofl@exp,f
  8857     149D                     l3691:
  8858     149D  0879               	movf	___xxtofl@exp,w
  8859     149E  00F4               	movwf	??___xxtofl
  8860     149F  01F5               	clrf	??___xxtofl+1
  8861     14A0  01F6               	clrf	??___xxtofl+2
  8862     14A1  01F7               	clrf	??___xxtofl+3
  8863     14A2  3018               	movlw	24
  8864     14A3                     u4975:
  8865     14A3  1003               	clrc
  8866     14A4  0DF4               	rlf	??___xxtofl,f
  8867     14A5  0DF5               	rlf	??___xxtofl+1,f
  8868     14A6  0DF6               	rlf	??___xxtofl+2,f
  8869     14A7  0DF7               	rlf	??___xxtofl+3,f
  8870     14A8                     u4970:
  8871     14A8  3EFF               	addlw	-1
  8872     14A9  1D03               	skipz
  8873     14AA  2CA3               	goto	u4975
  8874     14AB  0874               	movf	??___xxtofl,w
  8875     14AC  04FA               	iorwf	___xxtofl@arg,f
  8876     14AD  0875               	movf	??___xxtofl+1,w
  8877     14AE  04FB               	iorwf	___xxtofl@arg+1,f
  8878     14AF  0876               	movf	??___xxtofl+2,w
  8879     14B0  04FC               	iorwf	___xxtofl@arg+2,f
  8880     14B1  0877               	movf	??___xxtofl+3,w
  8881     14B2  04FD               	iorwf	___xxtofl@arg+3,f
  8882     14B3                     l3693:
  8883     14B3  0878               	movf	___xxtofl@sign,w
  8884     14B4  1903               	btfsc	3,2
  8885     14B5  2CB7               	goto	u4981
  8886     14B6  2CB8               	goto	u4980
  8887     14B7                     u4981:
  8888     14B7  2CBD               	goto	l3699
  8889     14B8                     u4980:
  8890     14B8                     l3695:
  8891     14B8  1FF3               	btfss	___xxtofl@val+3,7
  8892     14B9  2CBB               	goto	u4991
  8893     14BA  2CBC               	goto	u4990
  8894     14BB                     u4991:
  8895     14BB  2CBD               	goto	l3699
  8896     14BC                     u4990:
  8897     14BC                     l3697:
  8898     14BC  17FD               	bsf	___xxtofl@arg+3,7
  8899     14BD                     l3699:
  8900     14BD  087D               	movf	___xxtofl@arg+3,w
  8901     14BE  00F3               	movwf	?___xxtofl+3
  8902     14BF  087C               	movf	___xxtofl@arg+2,w
  8903     14C0  00F2               	movwf	?___xxtofl+2
  8904     14C1  087B               	movf	___xxtofl@arg+1,w
  8905     14C2  00F1               	movwf	?___xxtofl+1
  8906     14C3  087A               	movf	___xxtofl@arg,w
  8907     14C4  00F0               	movwf	?___xxtofl
  8908     14C5                     l807:
  8909     14C5  0008               	return
  8910     14C6                     __end_of___xxtofl:
  8911                           
  8912                           	psect	text49
  8913     1119                     __ptext49:	
  8914 ;; *************** function ___fltol *****************
  8915 ;; Defined at:
  8916 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  f1              4   26[BANK0 ] unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  exp1            1   35[BANK0 ] unsigned char 
  8921 ;;  sign1           1   34[BANK0 ] unsigned char 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  4   26[BANK0 ] long 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8931 ;;      Params:         0       4       0       0       0
  8932 ;;      Locals:         0       2       0       0       0
  8933 ;;      Temps:          0       4       0       0       0
  8934 ;;      Totals:         0      10       0       0       0
  8935 ;;Total ram usage:       10 bytes
  8936 ;; Hardware stack levels used: 1
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_MCP9800_ReadTemperature
  8941 ;;		_efgtoa
  8942 ;;		_MCP9800_GetLIMIT_Temp
  8943 ;;		_MCP9800_GetHYST_Temp
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947     1119                     ___fltol:	
  8948                           ;psect for function ___fltol
  8949                           
  8950     1119                     l2777:	
  8951                           ;incstack = 0
  8952                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8953                           
  8954     1119  1003               	clrc
  8955     111A  1283               	bcf	3,5	;RP0=0, select bank0
  8956     111B  1303               	bcf	3,6	;RP1=0, select bank0
  8957     111C  0D3C               	rlf	___fltol@f1+2,w
  8958     111D  0D3D               	rlf	___fltol@f1+3,w
  8959     111E  00C3               	movwf	___fltol@exp1
  8960     111F  0843               	movf	___fltol@exp1,w
  8961     1120  1D03               	btfss	3,2
  8962     1121  2923               	goto	u3311
  8963     1122  2924               	goto	u3310
  8964     1123                     u3311:
  8965     1123  292D               	goto	l2783
  8966     1124                     u3310:
  8967     1124                     l2779:
  8968     1124  3000               	movlw	0
  8969     1125  00BD               	movwf	?___fltol+3
  8970     1126  3000               	movlw	0
  8971     1127  00BC               	movwf	?___fltol+2
  8972     1128  3000               	movlw	0
  8973     1129  00BB               	movwf	?___fltol+1
  8974     112A  3000               	movlw	0
  8975     112B  00BA               	movwf	?___fltol
  8976     112C  298E               	goto	l558
  8977     112D                     l2783:
  8978     112D  083A               	movf	___fltol@f1,w
  8979     112E  00BE               	movwf	??___fltol
  8980     112F  083B               	movf	___fltol@f1+1,w
  8981     1130  00BF               	movwf	??___fltol+1
  8982     1131  083C               	movf	___fltol@f1+2,w
  8983     1132  00C0               	movwf	??___fltol+2
  8984     1133  083D               	movf	___fltol@f1+3,w
  8985     1134  00C1               	movwf	??___fltol+3
  8986     1135  301F               	movlw	31
  8987     1136                     u3325:
  8988     1136  1003               	clrc
  8989     1137  0CC1               	rrf	??___fltol+3,f
  8990     1138  0CC0               	rrf	??___fltol+2,f
  8991     1139  0CBF               	rrf	??___fltol+1,f
  8992     113A  0CBE               	rrf	??___fltol,f
  8993     113B                     u3320:
  8994     113B  3EFF               	addlw	-1
  8995     113C  1D03               	skipz
  8996     113D  2936               	goto	u3325
  8997     113E  083E               	movf	??___fltol,w
  8998     113F  00C2               	movwf	___fltol@sign1
  8999     1140                     l2785:
  9000     1140  17BC               	bsf	___fltol@f1+2,7
  9001     1141                     l2787:
  9002     1141  30FF               	movlw	255
  9003     1142  05BA               	andwf	___fltol@f1,f
  9004     1143  30FF               	movlw	255
  9005     1144  05BB               	andwf	___fltol@f1+1,f
  9006     1145  30FF               	movlw	255
  9007     1146  05BC               	andwf	___fltol@f1+2,f
  9008     1147  3000               	movlw	0
  9009     1148  05BD               	andwf	___fltol@f1+3,f
  9010     1149                     l2789:
  9011     1149  3096               	movlw	150
  9012     114A  02C3               	subwf	___fltol@exp1,f
  9013     114B                     l2791:
  9014     114B  1FC3               	btfss	___fltol@exp1,7
  9015     114C  294E               	goto	u3331
  9016     114D  294F               	goto	u3330
  9017     114E                     u3331:
  9018     114E  2967               	goto	l2801
  9019     114F                     u3330:
  9020     114F                     l2793:
  9021     114F  0843               	movf	___fltol@exp1,w
  9022     1150  3A80               	xorlw	128
  9023     1151  3E97               	addlw	151
  9024     1152  1803               	skipnc
  9025     1153  2955               	goto	u3341
  9026     1154  2956               	goto	u3340
  9027     1155                     u3341:
  9028     1155  2957               	goto	l2799
  9029     1156                     u3340:
  9030     1156  2924               	goto	l2779
  9031     1157                     l2799:
  9032     1157  3001               	movlw	1
  9033     1158                     u3355:
  9034     1158  1003               	clrc
  9035     1159  0CBD               	rrf	___fltol@f1+3,f
  9036     115A  0CBC               	rrf	___fltol@f1+2,f
  9037     115B  0CBB               	rrf	___fltol@f1+1,f
  9038     115C  0CBA               	rrf	___fltol@f1,f
  9039     115D  3EFF               	addlw	-1
  9040     115E  1D03               	skipz
  9041     115F  2958               	goto	u3355
  9042     1160  3001               	movlw	1
  9043     1161  07C3               	addwf	___fltol@exp1,f
  9044     1162  1D03               	btfss	3,2
  9045     1163  2965               	goto	u3361
  9046     1164  2966               	goto	u3360
  9047     1165                     u3361:
  9048     1165  2957               	goto	l2799
  9049     1166                     u3360:
  9050     1166  297E               	goto	l2809
  9051     1167                     l2801:
  9052     1167  3020               	movlw	32
  9053     1168  0243               	subwf	___fltol@exp1,w
  9054     1169  1C03               	skipc
  9055     116A  296C               	goto	u3371
  9056     116B  296D               	goto	u3370
  9057     116C                     u3371:
  9058     116C  2979               	goto	l565
  9059     116D                     u3370:
  9060     116D  2924               	goto	l2779
  9061     116E                     l2807:
  9062     116E  3001               	movlw	1
  9063     116F  00BE               	movwf	??___fltol
  9064     1170                     u3385:
  9065     1170  1003               	clrc
  9066     1171  0DBA               	rlf	___fltol@f1,f
  9067     1172  0DBB               	rlf	___fltol@f1+1,f
  9068     1173  0DBC               	rlf	___fltol@f1+2,f
  9069     1174  0DBD               	rlf	___fltol@f1+3,f
  9070     1175  0BBE               	decfsz	??___fltol,f
  9071     1176  2970               	goto	u3385
  9072     1177  3001               	movlw	1
  9073     1178  02C3               	subwf	___fltol@exp1,f
  9074     1179                     l565:
  9075     1179  0843               	movf	___fltol@exp1,w
  9076     117A  1D03               	btfss	3,2
  9077     117B  297D               	goto	u3391
  9078     117C  297E               	goto	u3390
  9079     117D                     u3391:
  9080     117D  296E               	goto	l2807
  9081     117E                     u3390:
  9082     117E                     l2809:
  9083     117E  0842               	movf	___fltol@sign1,w
  9084     117F  1903               	btfsc	3,2
  9085     1180  2982               	goto	u3401
  9086     1181  2983               	goto	u3400
  9087     1182                     u3401:
  9088     1182  298E               	goto	l568
  9089     1183                     u3400:
  9090     1183                     l2811:
  9091     1183  09BA               	comf	___fltol@f1,f
  9092     1184  09BB               	comf	___fltol@f1+1,f
  9093     1185  09BC               	comf	___fltol@f1+2,f
  9094     1186  09BD               	comf	___fltol@f1+3,f
  9095     1187  0ABA               	incf	___fltol@f1,f
  9096     1188  1903               	skipnz
  9097     1189  0ABB               	incf	___fltol@f1+1,f
  9098     118A  1903               	skipnz
  9099     118B  0ABC               	incf	___fltol@f1+2,f
  9100     118C  1903               	skipnz
  9101     118D  0ABD               	incf	___fltol@f1+3,f
  9102     118E                     l568:
  9103     118E                     l558:
  9104     118E  0008               	return
  9105     118F                     __end_of___fltol:
  9106                           
  9107                           	psect	text50
  9108     0CBE                     __ptext50:	
  9109 ;; *************** function ___flmul *****************
  9110 ;; Defined at:
  9111 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  b               4    0[BANK0 ] long 
  9114 ;;  a               4    4[BANK0 ] long 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  prod            4   20[BANK0 ] struct .
  9117 ;;  grs             4   14[BANK0 ] unsigned long 
  9118 ;;  temp            2   24[BANK0 ] struct .
  9119 ;;  bexp            1   19[BANK0 ] unsigned char 
  9120 ;;  aexp            1   18[BANK0 ] unsigned char 
  9121 ;;  sign            1   13[BANK0 ] unsigned char 
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  4    0[BANK0 ] unsigned char 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9131 ;;      Params:         0       8       0       0       0
  9132 ;;      Locals:         0      13       0       0       0
  9133 ;;      Temps:          0       5       0       0       0
  9134 ;;      Totals:         0      26       0       0       0
  9135 ;;Total ram usage:       26 bytes
  9136 ;; Hardware stack levels used: 1
  9137 ;; Hardware stack levels required when called: 1
  9138 ;; This function calls:
  9139 ;;		__Umul8_16
  9140 ;; This function is called by:
  9141 ;;		_MCP9800_ReadTemperature
  9142 ;;		_efgtoa
  9143 ;;		_MCP9800_GetLIMIT_Temp
  9144 ;;		_MCP9800_GetHYST_Temp
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148     0CBE                     ___flmul:	
  9149                           ;psect for function ___flmul
  9150                           
  9151     0CBE                     l2963:	
  9152                           ;incstack = 0
  9153                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9154                           
  9155     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  9156     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  9157     0CC0  0823               	movf	___flmul@b+3,w
  9158     0CC1  00AD               	movwf	___flmul@sign
  9159     0CC2                     l2965:
  9160     0CC2  3080               	movlw	128
  9161     0CC3  05AD               	andwf	___flmul@sign,f
  9162     0CC4                     l2967:
  9163     0CC4  0823               	movf	___flmul@b+3,w
  9164     0CC5  00A8               	movwf	??___flmul
  9165     0CC6  0728               	addwf	??___flmul,w
  9166     0CC7  00B3               	movwf	___flmul@bexp
  9167     0CC8                     l2969:
  9168     0CC8  1FA2               	btfss	___flmul@b+2,7
  9169     0CC9  2CCB               	goto	u3711
  9170     0CCA  2CCC               	goto	u3710
  9171     0CCB                     u3711:
  9172     0CCB  2CCD               	goto	l2973
  9173     0CCC                     u3710:
  9174     0CCC                     l2971:
  9175     0CCC  1433               	bsf	___flmul@bexp,0
  9176     0CCD                     l2973:
  9177     0CCD  0833               	movf	___flmul@bexp,w
  9178     0CCE  1903               	btfsc	3,2
  9179     0CCF  2CD1               	goto	u3721
  9180     0CD0  2CD2               	goto	u3720
  9181     0CD1                     u3721:
  9182     0CD1  2CE1               	goto	l2981
  9183     0CD2                     u3720:
  9184     0CD2                     l2975:
  9185     0CD2  0A33               	incf	___flmul@bexp,w
  9186     0CD3  1D03               	btfss	3,2
  9187     0CD4  2CD6               	goto	u3731
  9188     0CD5  2CD7               	goto	u3730
  9189     0CD6                     u3731:
  9190     0CD6  2CDF               	goto	l2979
  9191     0CD7                     u3730:
  9192     0CD7                     l2977:
  9193     0CD7  3000               	movlw	0
  9194     0CD8  00A3               	movwf	___flmul@b+3
  9195     0CD9  3000               	movlw	0
  9196     0CDA  00A2               	movwf	___flmul@b+2
  9197     0CDB  3000               	movlw	0
  9198     0CDC  00A1               	movwf	___flmul@b+1
  9199     0CDD  3000               	movlw	0
  9200     0CDE  00A0               	movwf	___flmul@b
  9201     0CDF                     l2979:
  9202     0CDF  17A2               	bsf	___flmul@b+2,7
  9203     0CE0  2CE9               	goto	l2983
  9204     0CE1                     l2981:
  9205     0CE1  3000               	movlw	0
  9206     0CE2  00A3               	movwf	___flmul@b+3
  9207     0CE3  3000               	movlw	0
  9208     0CE4  00A2               	movwf	___flmul@b+2
  9209     0CE5  3000               	movlw	0
  9210     0CE6  00A1               	movwf	___flmul@b+1
  9211     0CE7  3000               	movlw	0
  9212     0CE8  00A0               	movwf	___flmul@b
  9213     0CE9                     l2983:
  9214     0CE9  0827               	movf	___flmul@a+3,w
  9215     0CEA  3980               	andlw	128
  9216     0CEB  06AD               	xorwf	___flmul@sign,f
  9217     0CEC                     l2985:
  9218     0CEC  0827               	movf	___flmul@a+3,w
  9219     0CED  00A8               	movwf	??___flmul
  9220     0CEE  0728               	addwf	??___flmul,w
  9221     0CEF  00B2               	movwf	___flmul@aexp
  9222     0CF0                     l2987:
  9223     0CF0  1FA6               	btfss	___flmul@a+2,7
  9224     0CF1  2CF3               	goto	u3741
  9225     0CF2  2CF4               	goto	u3740
  9226     0CF3                     u3741:
  9227     0CF3  2CF5               	goto	l2991
  9228     0CF4                     u3740:
  9229     0CF4                     l2989:
  9230     0CF4  1432               	bsf	___flmul@aexp,0
  9231     0CF5                     l2991:
  9232     0CF5  0832               	movf	___flmul@aexp,w
  9233     0CF6  1903               	btfsc	3,2
  9234     0CF7  2CF9               	goto	u3751
  9235     0CF8  2CFA               	goto	u3750
  9236     0CF9                     u3751:
  9237     0CF9  2D09               	goto	l2999
  9238     0CFA                     u3750:
  9239     0CFA                     l2993:
  9240     0CFA  0A32               	incf	___flmul@aexp,w
  9241     0CFB  1D03               	btfss	3,2
  9242     0CFC  2CFE               	goto	u3761
  9243     0CFD  2CFF               	goto	u3760
  9244     0CFE                     u3761:
  9245     0CFE  2D07               	goto	l2997
  9246     0CFF                     u3760:
  9247     0CFF                     l2995:
  9248     0CFF  3000               	movlw	0
  9249     0D00  00A7               	movwf	___flmul@a+3
  9250     0D01  3000               	movlw	0
  9251     0D02  00A6               	movwf	___flmul@a+2
  9252     0D03  3000               	movlw	0
  9253     0D04  00A5               	movwf	___flmul@a+1
  9254     0D05  3000               	movlw	0
  9255     0D06  00A4               	movwf	___flmul@a
  9256     0D07                     l2997:
  9257     0D07  17A6               	bsf	___flmul@a+2,7
  9258     0D08  2D11               	goto	l3001
  9259     0D09                     l2999:
  9260     0D09  3000               	movlw	0
  9261     0D0A  00A7               	movwf	___flmul@a+3
  9262     0D0B  3000               	movlw	0
  9263     0D0C  00A6               	movwf	___flmul@a+2
  9264     0D0D  3000               	movlw	0
  9265     0D0E  00A5               	movwf	___flmul@a+1
  9266     0D0F  3000               	movlw	0
  9267     0D10  00A4               	movwf	___flmul@a
  9268     0D11                     l3001:
  9269     0D11  0832               	movf	___flmul@aexp,w
  9270     0D12  1903               	btfsc	3,2
  9271     0D13  2D15               	goto	u3771
  9272     0D14  2D16               	goto	u3770
  9273     0D15                     u3771:
  9274     0D15  2D1B               	goto	l3005
  9275     0D16                     u3770:
  9276     0D16                     l3003:
  9277     0D16  0833               	movf	___flmul@bexp,w
  9278     0D17  1D03               	btfss	3,2
  9279     0D18  2D1A               	goto	u3781
  9280     0D19  2D1B               	goto	u3780
  9281     0D1A                     u3781:
  9282     0D1A  2D24               	goto	l3009
  9283     0D1B                     u3780:
  9284     0D1B                     l3005:
  9285     0D1B  3000               	movlw	0
  9286     0D1C  00A3               	movwf	?___flmul+3
  9287     0D1D  3000               	movlw	0
  9288     0D1E  00A2               	movwf	?___flmul+2
  9289     0D1F  3000               	movlw	0
  9290     0D20  00A1               	movwf	?___flmul+1
  9291     0D21  3000               	movlw	0
  9292     0D22  00A0               	movwf	?___flmul
  9293     0D23  2FFF               	goto	l761
  9294     0D24                     l3009:
  9295     0D24  0820               	movf	___flmul@b,w
  9296     0D25  00F0               	movwf	__Umul8_16@multiplicand
  9297     0D26  0826               	movf	___flmul@a+2,w
  9298     0D27  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9299     0D2C  0871               	movf	?__Umul8_16+1,w
  9300     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  9301     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  9302     0D2F  00B9               	movwf	___flmul@temp+1
  9303     0D30  0870               	movf	?__Umul8_16,w
  9304     0D31  00B8               	movwf	___flmul@temp
  9305     0D32                     l3011:
  9306     0D32  0838               	movf	___flmul@temp,w
  9307     0D33  00A8               	movwf	??___flmul
  9308     0D34  01A9               	clrf	??___flmul+1
  9309     0D35  01AA               	clrf	??___flmul+2
  9310     0D36  01AB               	clrf	??___flmul+3
  9311     0D37  082B               	movf	??___flmul+3,w
  9312     0D38  00B1               	movwf	___flmul@grs+3
  9313     0D39  082A               	movf	??___flmul+2,w
  9314     0D3A  00B0               	movwf	___flmul@grs+2
  9315     0D3B  0829               	movf	??___flmul+1,w
  9316     0D3C  00AF               	movwf	___flmul@grs+1
  9317     0D3D  0828               	movf	??___flmul,w
  9318     0D3E  00AE               	movwf	___flmul@grs
  9319     0D3F                     l3013:
  9320     0D3F  0839               	movf	___flmul@temp+1,w
  9321     0D40  00A8               	movwf	??___flmul
  9322     0D41  01A9               	clrf	??___flmul+1
  9323     0D42  01AA               	clrf	??___flmul+2
  9324     0D43  01AB               	clrf	??___flmul+3
  9325     0D44  082B               	movf	??___flmul+3,w
  9326     0D45  00B7               	movwf	___flmul@prod+3
  9327     0D46  082A               	movf	??___flmul+2,w
  9328     0D47  00B6               	movwf	___flmul@prod+2
  9329     0D48  0829               	movf	??___flmul+1,w
  9330     0D49  00B5               	movwf	___flmul@prod+1
  9331     0D4A  0828               	movf	??___flmul,w
  9332     0D4B  00B4               	movwf	___flmul@prod
  9333     0D4C  0821               	movf	___flmul@b+1,w
  9334     0D4D  00F0               	movwf	__Umul8_16@multiplicand
  9335     0D4E  0825               	movf	___flmul@a+1,w
  9336     0D4F  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9337     0D54  0871               	movf	?__Umul8_16+1,w
  9338     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  9339     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  9340     0D57  00B9               	movwf	___flmul@temp+1
  9341     0D58  0870               	movf	?__Umul8_16,w
  9342     0D59  00B8               	movwf	___flmul@temp
  9343     0D5A                     l3015:
  9344     0D5A  0838               	movf	___flmul@temp,w
  9345     0D5B  00A8               	movwf	??___flmul
  9346     0D5C  01A9               	clrf	??___flmul+1
  9347     0D5D  01AA               	clrf	??___flmul+2
  9348     0D5E  01AB               	clrf	??___flmul+3
  9349     0D5F  0828               	movf	??___flmul,w
  9350     0D60  07AE               	addwf	___flmul@grs,f
  9351     0D61  0829               	movf	??___flmul+1,w
  9352     0D62  1103               	clrz
  9353     0D63  1803               	skipnc
  9354     0D64  3E01               	addlw	1
  9355     0D65  1903               	skipnz
  9356     0D66  2D68               	goto	u3791
  9357     0D67  07AF               	addwf	___flmul@grs+1,f
  9358     0D68                     u3791:
  9359     0D68  082A               	movf	??___flmul+2,w
  9360     0D69  1103               	clrz
  9361     0D6A  1803               	skipnc
  9362     0D6B  3E01               	addlw	1
  9363     0D6C  1903               	skipnz
  9364     0D6D  2D6F               	goto	u3792
  9365     0D6E  07B0               	addwf	___flmul@grs+2,f
  9366     0D6F                     u3792:
  9367     0D6F  082B               	movf	??___flmul+3,w
  9368     0D70  1103               	clrz
  9369     0D71  1803               	skipnc
  9370     0D72  3E01               	addlw	1
  9371     0D73  1903               	skipnz
  9372     0D74  2D76               	goto	u3793
  9373     0D75  07B1               	addwf	___flmul@grs+3,f
  9374     0D76                     u3793:
  9375     0D76                     l3017:
  9376     0D76  0839               	movf	___flmul@temp+1,w
  9377     0D77  00A8               	movwf	??___flmul
  9378     0D78  01A9               	clrf	??___flmul+1
  9379     0D79  01AA               	clrf	??___flmul+2
  9380     0D7A  01AB               	clrf	??___flmul+3
  9381     0D7B  0828               	movf	??___flmul,w
  9382     0D7C  07B4               	addwf	___flmul@prod,f
  9383     0D7D  0829               	movf	??___flmul+1,w
  9384     0D7E  1103               	clrz
  9385     0D7F  1803               	skipnc
  9386     0D80  3E01               	addlw	1
  9387     0D81  1903               	skipnz
  9388     0D82  2D84               	goto	u3801
  9389     0D83  07B5               	addwf	___flmul@prod+1,f
  9390     0D84                     u3801:
  9391     0D84  082A               	movf	??___flmul+2,w
  9392     0D85  1103               	clrz
  9393     0D86  1803               	skipnc
  9394     0D87  3E01               	addlw	1
  9395     0D88  1903               	skipnz
  9396     0D89  2D8B               	goto	u3802
  9397     0D8A  07B6               	addwf	___flmul@prod+2,f
  9398     0D8B                     u3802:
  9399     0D8B  082B               	movf	??___flmul+3,w
  9400     0D8C  1103               	clrz
  9401     0D8D  1803               	skipnc
  9402     0D8E  3E01               	addlw	1
  9403     0D8F  1903               	skipnz
  9404     0D90  2D92               	goto	u3803
  9405     0D91  07B7               	addwf	___flmul@prod+3,f
  9406     0D92                     u3803:
  9407     0D92  0822               	movf	___flmul@b+2,w
  9408     0D93  00F0               	movwf	__Umul8_16@multiplicand
  9409     0D94  0824               	movf	___flmul@a,w
  9410     0D95  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9411     0D9A  0871               	movf	?__Umul8_16+1,w
  9412     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  9413     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  9414     0D9D  00B9               	movwf	___flmul@temp+1
  9415     0D9E  0870               	movf	?__Umul8_16,w
  9416     0D9F  00B8               	movwf	___flmul@temp
  9417     0DA0                     l3019:
  9418     0DA0  0838               	movf	___flmul@temp,w
  9419     0DA1  00A8               	movwf	??___flmul
  9420     0DA2  01A9               	clrf	??___flmul+1
  9421     0DA3  01AA               	clrf	??___flmul+2
  9422     0DA4  01AB               	clrf	??___flmul+3
  9423     0DA5  0828               	movf	??___flmul,w
  9424     0DA6  07AE               	addwf	___flmul@grs,f
  9425     0DA7  0829               	movf	??___flmul+1,w
  9426     0DA8  1103               	clrz
  9427     0DA9  1803               	skipnc
  9428     0DAA  3E01               	addlw	1
  9429     0DAB  1903               	skipnz
  9430     0DAC  2DAE               	goto	u3811
  9431     0DAD  07AF               	addwf	___flmul@grs+1,f
  9432     0DAE                     u3811:
  9433     0DAE  082A               	movf	??___flmul+2,w
  9434     0DAF  1103               	clrz
  9435     0DB0  1803               	skipnc
  9436     0DB1  3E01               	addlw	1
  9437     0DB2  1903               	skipnz
  9438     0DB3  2DB5               	goto	u3812
  9439     0DB4  07B0               	addwf	___flmul@grs+2,f
  9440     0DB5                     u3812:
  9441     0DB5  082B               	movf	??___flmul+3,w
  9442     0DB6  1103               	clrz
  9443     0DB7  1803               	skipnc
  9444     0DB8  3E01               	addlw	1
  9445     0DB9  1903               	skipnz
  9446     0DBA  2DBC               	goto	u3813
  9447     0DBB  07B1               	addwf	___flmul@grs+3,f
  9448     0DBC                     u3813:
  9449     0DBC                     l3021:
  9450     0DBC  0839               	movf	___flmul@temp+1,w
  9451     0DBD  00A8               	movwf	??___flmul
  9452     0DBE  01A9               	clrf	??___flmul+1
  9453     0DBF  01AA               	clrf	??___flmul+2
  9454     0DC0  01AB               	clrf	??___flmul+3
  9455     0DC1  0828               	movf	??___flmul,w
  9456     0DC2  07B4               	addwf	___flmul@prod,f
  9457     0DC3  0829               	movf	??___flmul+1,w
  9458     0DC4  1103               	clrz
  9459     0DC5  1803               	skipnc
  9460     0DC6  3E01               	addlw	1
  9461     0DC7  1903               	skipnz
  9462     0DC8  2DCA               	goto	u3821
  9463     0DC9  07B5               	addwf	___flmul@prod+1,f
  9464     0DCA                     u3821:
  9465     0DCA  082A               	movf	??___flmul+2,w
  9466     0DCB  1103               	clrz
  9467     0DCC  1803               	skipnc
  9468     0DCD  3E01               	addlw	1
  9469     0DCE  1903               	skipnz
  9470     0DCF  2DD1               	goto	u3822
  9471     0DD0  07B6               	addwf	___flmul@prod+2,f
  9472     0DD1                     u3822:
  9473     0DD1  082B               	movf	??___flmul+3,w
  9474     0DD2  1103               	clrz
  9475     0DD3  1803               	skipnc
  9476     0DD4  3E01               	addlw	1
  9477     0DD5  1903               	skipnz
  9478     0DD6  2DD8               	goto	u3823
  9479     0DD7  07B7               	addwf	___flmul@prod+3,f
  9480     0DD8                     u3823:
  9481     0DD8                     l3023:
  9482     0DD8  3008               	movlw	8
  9483     0DD9  00A8               	movwf	??___flmul
  9484     0DDA                     u3835:
  9485     0DDA  1003               	clrc
  9486     0DDB  0DAE               	rlf	___flmul@grs,f
  9487     0DDC  0DAF               	rlf	___flmul@grs+1,f
  9488     0DDD  0DB0               	rlf	___flmul@grs+2,f
  9489     0DDE  0DB1               	rlf	___flmul@grs+3,f
  9490     0DDF  0BA8               	decfsz	??___flmul,f
  9491     0DE0  2DDA               	goto	u3835
  9492     0DE1                     l3025:
  9493     0DE1  0821               	movf	___flmul@b+1,w
  9494     0DE2  00F0               	movwf	__Umul8_16@multiplicand
  9495     0DE3  0824               	movf	___flmul@a,w
  9496     0DE4  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9497     0DE9  0871               	movf	?__Umul8_16+1,w
  9498     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  9499     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  9500     0DEC  00B9               	movwf	___flmul@temp+1
  9501     0DED  0870               	movf	?__Umul8_16,w
  9502     0DEE  00B8               	movwf	___flmul@temp
  9503     0DEF                     l3027:
  9504     0DEF  0838               	movf	___flmul@temp,w
  9505     0DF0  00A8               	movwf	??___flmul
  9506     0DF1  0839               	movf	___flmul@temp+1,w
  9507     0DF2  00A9               	movwf	??___flmul+1
  9508     0DF3  01AA               	clrf	??___flmul+2
  9509     0DF4  01AB               	clrf	??___flmul+3
  9510     0DF5  0828               	movf	??___flmul,w
  9511     0DF6  07AE               	addwf	___flmul@grs,f
  9512     0DF7  0829               	movf	??___flmul+1,w
  9513     0DF8  1103               	clrz
  9514     0DF9  1803               	skipnc
  9515     0DFA  3E01               	addlw	1
  9516     0DFB  1903               	skipnz
  9517     0DFC  2DFE               	goto	u3841
  9518     0DFD  07AF               	addwf	___flmul@grs+1,f
  9519     0DFE                     u3841:
  9520     0DFE  082A               	movf	??___flmul+2,w
  9521     0DFF  1103               	clrz
  9522     0E00  1803               	skipnc
  9523     0E01  3E01               	addlw	1
  9524     0E02  1903               	skipnz
  9525     0E03  2E05               	goto	u3842
  9526     0E04  07B0               	addwf	___flmul@grs+2,f
  9527     0E05                     u3842:
  9528     0E05  082B               	movf	??___flmul+3,w
  9529     0E06  1103               	clrz
  9530     0E07  1803               	skipnc
  9531     0E08  3E01               	addlw	1
  9532     0E09  1903               	skipnz
  9533     0E0A  2E0C               	goto	u3843
  9534     0E0B  07B1               	addwf	___flmul@grs+3,f
  9535     0E0C                     u3843:
  9536     0E0C                     l3029:
  9537     0E0C  0820               	movf	___flmul@b,w
  9538     0E0D  00F0               	movwf	__Umul8_16@multiplicand
  9539     0E0E  0825               	movf	___flmul@a+1,w
  9540     0E0F  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9541     0E14  0871               	movf	?__Umul8_16+1,w
  9542     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  9543     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  9544     0E17  00B9               	movwf	___flmul@temp+1
  9545     0E18  0870               	movf	?__Umul8_16,w
  9546     0E19  00B8               	movwf	___flmul@temp
  9547     0E1A                     l3031:
  9548     0E1A  0838               	movf	___flmul@temp,w
  9549     0E1B  00A8               	movwf	??___flmul
  9550     0E1C  0839               	movf	___flmul@temp+1,w
  9551     0E1D  00A9               	movwf	??___flmul+1
  9552     0E1E  01AA               	clrf	??___flmul+2
  9553     0E1F  01AB               	clrf	??___flmul+3
  9554     0E20  0828               	movf	??___flmul,w
  9555     0E21  07AE               	addwf	___flmul@grs,f
  9556     0E22  0829               	movf	??___flmul+1,w
  9557     0E23  1103               	clrz
  9558     0E24  1803               	skipnc
  9559     0E25  3E01               	addlw	1
  9560     0E26  1903               	skipnz
  9561     0E27  2E29               	goto	u3851
  9562     0E28  07AF               	addwf	___flmul@grs+1,f
  9563     0E29                     u3851:
  9564     0E29  082A               	movf	??___flmul+2,w
  9565     0E2A  1103               	clrz
  9566     0E2B  1803               	skipnc
  9567     0E2C  3E01               	addlw	1
  9568     0E2D  1903               	skipnz
  9569     0E2E  2E30               	goto	u3852
  9570     0E2F  07B0               	addwf	___flmul@grs+2,f
  9571     0E30                     u3852:
  9572     0E30  082B               	movf	??___flmul+3,w
  9573     0E31  1103               	clrz
  9574     0E32  1803               	skipnc
  9575     0E33  3E01               	addlw	1
  9576     0E34  1903               	skipnz
  9577     0E35  2E37               	goto	u3853
  9578     0E36  07B1               	addwf	___flmul@grs+3,f
  9579     0E37                     u3853:
  9580     0E37                     l3033:
  9581     0E37  3008               	movlw	8
  9582     0E38  00A8               	movwf	??___flmul
  9583     0E39                     u3865:
  9584     0E39  1003               	clrc
  9585     0E3A  0DAE               	rlf	___flmul@grs,f
  9586     0E3B  0DAF               	rlf	___flmul@grs+1,f
  9587     0E3C  0DB0               	rlf	___flmul@grs+2,f
  9588     0E3D  0DB1               	rlf	___flmul@grs+3,f
  9589     0E3E  0BA8               	decfsz	??___flmul,f
  9590     0E3F  2E39               	goto	u3865
  9591     0E40  0820               	movf	___flmul@b,w
  9592     0E41  00F0               	movwf	__Umul8_16@multiplicand
  9593     0E42  0824               	movf	___flmul@a,w
  9594     0E43  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9595     0E48  0871               	movf	?__Umul8_16+1,w
  9596     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  9597     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  9598     0E4B  00B9               	movwf	___flmul@temp+1
  9599     0E4C  0870               	movf	?__Umul8_16,w
  9600     0E4D  00B8               	movwf	___flmul@temp
  9601     0E4E                     l3035:
  9602     0E4E  0838               	movf	___flmul@temp,w
  9603     0E4F  00A8               	movwf	??___flmul
  9604     0E50  0839               	movf	___flmul@temp+1,w
  9605     0E51  00A9               	movwf	??___flmul+1
  9606     0E52  01AA               	clrf	??___flmul+2
  9607     0E53  01AB               	clrf	??___flmul+3
  9608     0E54  0828               	movf	??___flmul,w
  9609     0E55  07AE               	addwf	___flmul@grs,f
  9610     0E56  0829               	movf	??___flmul+1,w
  9611     0E57  1103               	clrz
  9612     0E58  1803               	skipnc
  9613     0E59  3E01               	addlw	1
  9614     0E5A  1903               	skipnz
  9615     0E5B  2E5D               	goto	u3871
  9616     0E5C  07AF               	addwf	___flmul@grs+1,f
  9617     0E5D                     u3871:
  9618     0E5D  082A               	movf	??___flmul+2,w
  9619     0E5E  1103               	clrz
  9620     0E5F  1803               	skipnc
  9621     0E60  3E01               	addlw	1
  9622     0E61  1903               	skipnz
  9623     0E62  2E64               	goto	u3872
  9624     0E63  07B0               	addwf	___flmul@grs+2,f
  9625     0E64                     u3872:
  9626     0E64  082B               	movf	??___flmul+3,w
  9627     0E65  1103               	clrz
  9628     0E66  1803               	skipnc
  9629     0E67  3E01               	addlw	1
  9630     0E68  1903               	skipnz
  9631     0E69  2E6B               	goto	u3873
  9632     0E6A  07B1               	addwf	___flmul@grs+3,f
  9633     0E6B                     u3873:
  9634     0E6B                     l3037:
  9635     0E6B  0821               	movf	___flmul@b+1,w
  9636     0E6C  00F0               	movwf	__Umul8_16@multiplicand
  9637     0E6D  0826               	movf	___flmul@a+2,w
  9638     0E6E  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9639     0E73  0871               	movf	?__Umul8_16+1,w
  9640     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  9641     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  9642     0E76  00B9               	movwf	___flmul@temp+1
  9643     0E77  0870               	movf	?__Umul8_16,w
  9644     0E78  00B8               	movwf	___flmul@temp
  9645     0E79  0838               	movf	___flmul@temp,w
  9646     0E7A  00A8               	movwf	??___flmul
  9647     0E7B  0839               	movf	___flmul@temp+1,w
  9648     0E7C  00A9               	movwf	??___flmul+1
  9649     0E7D  01AA               	clrf	??___flmul+2
  9650     0E7E  01AB               	clrf	??___flmul+3
  9651     0E7F  0828               	movf	??___flmul,w
  9652     0E80  07B4               	addwf	___flmul@prod,f
  9653     0E81  0829               	movf	??___flmul+1,w
  9654     0E82  1103               	clrz
  9655     0E83  1803               	skipnc
  9656     0E84  3E01               	addlw	1
  9657     0E85  1903               	skipnz
  9658     0E86  2E88               	goto	u3881
  9659     0E87  07B5               	addwf	___flmul@prod+1,f
  9660     0E88                     u3881:
  9661     0E88  082A               	movf	??___flmul+2,w
  9662     0E89  1103               	clrz
  9663     0E8A  1803               	skipnc
  9664     0E8B  3E01               	addlw	1
  9665     0E8C  1903               	skipnz
  9666     0E8D  2E8F               	goto	u3882
  9667     0E8E  07B6               	addwf	___flmul@prod+2,f
  9668     0E8F                     u3882:
  9669     0E8F  082B               	movf	??___flmul+3,w
  9670     0E90  1103               	clrz
  9671     0E91  1803               	skipnc
  9672     0E92  3E01               	addlw	1
  9673     0E93  1903               	skipnz
  9674     0E94  2E96               	goto	u3883
  9675     0E95  07B7               	addwf	___flmul@prod+3,f
  9676     0E96                     u3883:
  9677     0E96                     l3039:
  9678     0E96  0822               	movf	___flmul@b+2,w
  9679     0E97  00F0               	movwf	__Umul8_16@multiplicand
  9680     0E98  0825               	movf	___flmul@a+1,w
  9681     0E99  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9682     0E9E  0871               	movf	?__Umul8_16+1,w
  9683     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  9684     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  9685     0EA1  00B9               	movwf	___flmul@temp+1
  9686     0EA2  0870               	movf	?__Umul8_16,w
  9687     0EA3  00B8               	movwf	___flmul@temp
  9688     0EA4                     l3041:
  9689     0EA4  0838               	movf	___flmul@temp,w
  9690     0EA5  00A8               	movwf	??___flmul
  9691     0EA6  0839               	movf	___flmul@temp+1,w
  9692     0EA7  00A9               	movwf	??___flmul+1
  9693     0EA8  01AA               	clrf	??___flmul+2
  9694     0EA9  01AB               	clrf	??___flmul+3
  9695     0EAA  0828               	movf	??___flmul,w
  9696     0EAB  07B4               	addwf	___flmul@prod,f
  9697     0EAC  0829               	movf	??___flmul+1,w
  9698     0EAD  1103               	clrz
  9699     0EAE  1803               	skipnc
  9700     0EAF  3E01               	addlw	1
  9701     0EB0  1903               	skipnz
  9702     0EB1  2EB3               	goto	u3891
  9703     0EB2  07B5               	addwf	___flmul@prod+1,f
  9704     0EB3                     u3891:
  9705     0EB3  082A               	movf	??___flmul+2,w
  9706     0EB4  1103               	clrz
  9707     0EB5  1803               	skipnc
  9708     0EB6  3E01               	addlw	1
  9709     0EB7  1903               	skipnz
  9710     0EB8  2EBA               	goto	u3892
  9711     0EB9  07B6               	addwf	___flmul@prod+2,f
  9712     0EBA                     u3892:
  9713     0EBA  082B               	movf	??___flmul+3,w
  9714     0EBB  1103               	clrz
  9715     0EBC  1803               	skipnc
  9716     0EBD  3E01               	addlw	1
  9717     0EBE  1903               	skipnz
  9718     0EBF  2EC1               	goto	u3893
  9719     0EC0  07B7               	addwf	___flmul@prod+3,f
  9720     0EC1                     u3893:
  9721     0EC1  0822               	movf	___flmul@b+2,w
  9722     0EC2  00F0               	movwf	__Umul8_16@multiplicand
  9723     0EC3  0826               	movf	___flmul@a+2,w
  9724     0EC4  160A  158A  258D  120A  158A  	fcall	__Umul8_16
  9725     0EC9  0871               	movf	?__Umul8_16+1,w
  9726     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  9727     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  9728     0ECC  00B9               	movwf	___flmul@temp+1
  9729     0ECD  0870               	movf	?__Umul8_16,w
  9730     0ECE  00B8               	movwf	___flmul@temp
  9731     0ECF                     l3043:
  9732     0ECF  0838               	movf	___flmul@temp,w
  9733     0ED0  00A8               	movwf	??___flmul
  9734     0ED1  0839               	movf	___flmul@temp+1,w
  9735     0ED2  00A9               	movwf	??___flmul+1
  9736     0ED3  01AA               	clrf	??___flmul+2
  9737     0ED4  01AB               	clrf	??___flmul+3
  9738     0ED5  3008               	movlw	8
  9739     0ED6                     u3905:
  9740     0ED6  1003               	clrc
  9741     0ED7  0DA8               	rlf	??___flmul,f
  9742     0ED8  0DA9               	rlf	??___flmul+1,f
  9743     0ED9  0DAA               	rlf	??___flmul+2,f
  9744     0EDA  0DAB               	rlf	??___flmul+3,f
  9745     0EDB                     u3900:
  9746     0EDB  3EFF               	addlw	-1
  9747     0EDC  1D03               	skipz
  9748     0EDD  2ED6               	goto	u3905
  9749     0EDE  0828               	movf	??___flmul,w
  9750     0EDF  07B4               	addwf	___flmul@prod,f
  9751     0EE0  0829               	movf	??___flmul+1,w
  9752     0EE1  1103               	clrz
  9753     0EE2  1803               	skipnc
  9754     0EE3  3E01               	addlw	1
  9755     0EE4  1903               	skipnz
  9756     0EE5  2EE7               	goto	u3911
  9757     0EE6  07B5               	addwf	___flmul@prod+1,f
  9758     0EE7                     u3911:
  9759     0EE7  082A               	movf	??___flmul+2,w
  9760     0EE8  1103               	clrz
  9761     0EE9  1803               	skipnc
  9762     0EEA  3E01               	addlw	1
  9763     0EEB  1903               	skipnz
  9764     0EEC  2EEE               	goto	u3912
  9765     0EED  07B6               	addwf	___flmul@prod+2,f
  9766     0EEE                     u3912:
  9767     0EEE  082B               	movf	??___flmul+3,w
  9768     0EEF  1103               	clrz
  9769     0EF0  1803               	skipnc
  9770     0EF1  3E01               	addlw	1
  9771     0EF2  1903               	skipnz
  9772     0EF3  2EF5               	goto	u3913
  9773     0EF4  07B7               	addwf	___flmul@prod+3,f
  9774     0EF5                     u3913:
  9775     0EF5                     l3045:
  9776     0EF5  082E               	movf	___flmul@grs,w
  9777     0EF6  00A8               	movwf	??___flmul
  9778     0EF7  082F               	movf	___flmul@grs+1,w
  9779     0EF8  00A9               	movwf	??___flmul+1
  9780     0EF9  0830               	movf	___flmul@grs+2,w
  9781     0EFA  00AA               	movwf	??___flmul+2
  9782     0EFB  0831               	movf	___flmul@grs+3,w
  9783     0EFC  00AB               	movwf	??___flmul+3
  9784     0EFD  3018               	movlw	24
  9785     0EFE                     u3925:
  9786     0EFE  1003               	clrc
  9787     0EFF  0CAB               	rrf	??___flmul+3,f
  9788     0F00  0CAA               	rrf	??___flmul+2,f
  9789     0F01  0CA9               	rrf	??___flmul+1,f
  9790     0F02  0CA8               	rrf	??___flmul,f
  9791     0F03                     u3920:
  9792     0F03  3EFF               	addlw	-1
  9793     0F04  1D03               	skipz
  9794     0F05  2EFE               	goto	u3925
  9795     0F06  0828               	movf	??___flmul,w
  9796     0F07  07B4               	addwf	___flmul@prod,f
  9797     0F08  0829               	movf	??___flmul+1,w
  9798     0F09  1103               	clrz
  9799     0F0A  1803               	skipnc
  9800     0F0B  3E01               	addlw	1
  9801     0F0C  1903               	skipnz
  9802     0F0D  2F0F               	goto	u3931
  9803     0F0E  07B5               	addwf	___flmul@prod+1,f
  9804     0F0F                     u3931:
  9805     0F0F  082A               	movf	??___flmul+2,w
  9806     0F10  1103               	clrz
  9807     0F11  1803               	skipnc
  9808     0F12  3E01               	addlw	1
  9809     0F13  1903               	skipnz
  9810     0F14  2F16               	goto	u3932
  9811     0F15  07B6               	addwf	___flmul@prod+2,f
  9812     0F16                     u3932:
  9813     0F16  082B               	movf	??___flmul+3,w
  9814     0F17  1103               	clrz
  9815     0F18  1803               	skipnc
  9816     0F19  3E01               	addlw	1
  9817     0F1A  1903               	skipnz
  9818     0F1B  2F1D               	goto	u3933
  9819     0F1C  07B7               	addwf	___flmul@prod+3,f
  9820     0F1D                     u3933:
  9821     0F1D                     l3047:
  9822     0F1D  3008               	movlw	8
  9823     0F1E  00A8               	movwf	??___flmul
  9824     0F1F                     u3945:
  9825     0F1F  1003               	clrc
  9826     0F20  0DAE               	rlf	___flmul@grs,f
  9827     0F21  0DAF               	rlf	___flmul@grs+1,f
  9828     0F22  0DB0               	rlf	___flmul@grs+2,f
  9829     0F23  0DB1               	rlf	___flmul@grs+3,f
  9830     0F24  0BA8               	decfsz	??___flmul,f
  9831     0F25  2F1F               	goto	u3945
  9832     0F26                     l3049:
  9833     0F26  0833               	movf	___flmul@bexp,w
  9834     0F27  0732               	addwf	___flmul@aexp,w
  9835     0F28  00A8               	movwf	??___flmul
  9836     0F29  01A9               	clrf	??___flmul+1
  9837     0F2A  0DA9               	rlf	??___flmul+1,f
  9838     0F2B  0828               	movf	??___flmul,w
  9839     0F2C  3E82               	addlw	130
  9840     0F2D  00B8               	movwf	___flmul@temp
  9841     0F2E  0829               	movf	??___flmul+1,w
  9842     0F2F  1803               	skipnc
  9843     0F30  3E01               	addlw	1
  9844     0F31  3EFF               	addlw	255
  9845     0F32  00B9               	movwf	___flmul@temp+1
  9846     0F33  2F51               	goto	l3061
  9847     0F34                     l3051:
  9848     0F34  3001               	movlw	1
  9849     0F35  00A8               	movwf	??___flmul
  9850     0F36                     u3955:
  9851     0F36  1003               	clrc
  9852     0F37  0DB4               	rlf	___flmul@prod,f
  9853     0F38  0DB5               	rlf	___flmul@prod+1,f
  9854     0F39  0DB6               	rlf	___flmul@prod+2,f
  9855     0F3A  0DB7               	rlf	___flmul@prod+3,f
  9856     0F3B  0BA8               	decfsz	??___flmul,f
  9857     0F3C  2F36               	goto	u3955
  9858     0F3D                     l3053:
  9859     0F3D  1FB1               	btfss	___flmul@grs+3,7
  9860     0F3E  2F40               	goto	u3961
  9861     0F3F  2F41               	goto	u3960
  9862     0F40                     u3961:
  9863     0F40  2F42               	goto	l3057
  9864     0F41                     u3960:
  9865     0F41                     l3055:
  9866     0F41  1434               	bsf	___flmul@prod,0
  9867     0F42                     l3057:
  9868     0F42  3001               	movlw	1
  9869     0F43  00A8               	movwf	??___flmul
  9870     0F44                     u3975:
  9871     0F44  1003               	clrc
  9872     0F45  0DAE               	rlf	___flmul@grs,f
  9873     0F46  0DAF               	rlf	___flmul@grs+1,f
  9874     0F47  0DB0               	rlf	___flmul@grs+2,f
  9875     0F48  0DB1               	rlf	___flmul@grs+3,f
  9876     0F49  0BA8               	decfsz	??___flmul,f
  9877     0F4A  2F44               	goto	u3975
  9878     0F4B                     l3059:
  9879     0F4B  30FF               	movlw	255
  9880     0F4C  07B8               	addwf	___flmul@temp,f
  9881     0F4D  1803               	skipnc
  9882     0F4E  0AB9               	incf	___flmul@temp+1,f
  9883     0F4F  30FF               	movlw	255
  9884     0F50  07B9               	addwf	___flmul@temp+1,f
  9885     0F51                     l3061:
  9886     0F51  1FB6               	btfss	___flmul@prod+2,7
  9887     0F52  2F54               	goto	u3981
  9888     0F53  2F55               	goto	u3980
  9889     0F54                     u3981:
  9890     0F54  2F34               	goto	l3051
  9891     0F55                     u3980:
  9892     0F55                     l3063:
  9893     0F55  01B2               	clrf	___flmul@aexp
  9894     0F56                     l3065:
  9895     0F56  1FB1               	btfss	___flmul@grs+3,7
  9896     0F57  2F59               	goto	u3991
  9897     0F58  2F5A               	goto	u3990
  9898     0F59                     u3991:
  9899     0F59  2F76               	goto	l3073
  9900     0F5A                     u3990:
  9901     0F5A                     l3067:
  9902     0F5A  30FF               	movlw	255
  9903     0F5B  052E               	andwf	___flmul@grs,w
  9904     0F5C  00A8               	movwf	??___flmul
  9905     0F5D  30FF               	movlw	255
  9906     0F5E  052F               	andwf	___flmul@grs+1,w
  9907     0F5F  00A9               	movwf	??___flmul+1
  9908     0F60  30FF               	movlw	255
  9909     0F61  0530               	andwf	___flmul@grs+2,w
  9910     0F62  00AA               	movwf	??___flmul+2
  9911     0F63  307F               	movlw	127
  9912     0F64  0531               	andwf	___flmul@grs+3,w
  9913     0F65  00AB               	movwf	??___flmul+3
  9914     0F66  082B               	movf	??___flmul+3,w
  9915     0F67  042A               	iorwf	??___flmul+2,w
  9916     0F68  0429               	iorwf	??___flmul+1,w
  9917     0F69  0428               	iorwf	??___flmul,w
  9918     0F6A  1903               	skipnz
  9919     0F6B  2F6D               	goto	u4001
  9920     0F6C  2F6E               	goto	u4000
  9921     0F6D                     u4001:
  9922     0F6D  2F71               	goto	l767
  9923     0F6E                     u4000:
  9924     0F6E                     l3069:
  9925     0F6E  3001               	movlw	1
  9926     0F6F  00B2               	movwf	___flmul@aexp
  9927     0F70  2F76               	goto	l3073
  9928     0F71                     l767:
  9929     0F71  1C34               	btfss	___flmul@prod,0
  9930     0F72  2F74               	goto	u4011
  9931     0F73  2F75               	goto	u4010
  9932     0F74                     u4011:
  9933     0F74  2F76               	goto	l3073
  9934     0F75                     u4010:
  9935     0F75  2F6E               	goto	l3069
  9936     0F76                     l3073:
  9937     0F76  0832               	movf	___flmul@aexp,w
  9938     0F77  1903               	btfsc	3,2
  9939     0F78  2F7A               	goto	u4021
  9940     0F79  2F7B               	goto	u4020
  9941     0F7A                     u4021:
  9942     0F7A  2FAC               	goto	l3083
  9943     0F7B                     u4020:
  9944     0F7B                     l3075:
  9945     0F7B  3001               	movlw	1
  9946     0F7C  07B4               	addwf	___flmul@prod,f
  9947     0F7D  3000               	movlw	0
  9948     0F7E  1803               	skipnc
  9949     0F7F  3001               	movlw	1
  9950     0F80  07B5               	addwf	___flmul@prod+1,f
  9951     0F81  3000               	movlw	0
  9952     0F82  1803               	skipnc
  9953     0F83  3001               	movlw	1
  9954     0F84  07B6               	addwf	___flmul@prod+2,f
  9955     0F85  3000               	movlw	0
  9956     0F86  1803               	skipnc
  9957     0F87  3001               	movlw	1
  9958     0F88  07B7               	addwf	___flmul@prod+3,f
  9959     0F89                     l3077:
  9960     0F89  1C37               	btfss	___flmul@prod+3,0
  9961     0F8A  2F8C               	goto	u4031
  9962     0F8B  2F8D               	goto	u4030
  9963     0F8C                     u4031:
  9964     0F8C  2FAC               	goto	l3083
  9965     0F8D                     u4030:
  9966     0F8D                     l3079:
  9967     0F8D  0834               	movf	___flmul@prod,w
  9968     0F8E  00A8               	movwf	??___flmul
  9969     0F8F  0835               	movf	___flmul@prod+1,w
  9970     0F90  00A9               	movwf	??___flmul+1
  9971     0F91  0836               	movf	___flmul@prod+2,w
  9972     0F92  00AA               	movwf	??___flmul+2
  9973     0F93  0837               	movf	___flmul@prod+3,w
  9974     0F94  00AB               	movwf	??___flmul+3
  9975     0F95  3001               	movlw	1
  9976     0F96  00AC               	movwf	??___flmul+4
  9977     0F97                     u4045:
  9978     0F97  0D2B               	rlf	??___flmul+3,w
  9979     0F98  0CAB               	rrf	??___flmul+3,f
  9980     0F99  0CAA               	rrf	??___flmul+2,f
  9981     0F9A  0CA9               	rrf	??___flmul+1,f
  9982     0F9B  0CA8               	rrf	??___flmul,f
  9983     0F9C                     u4040:
  9984     0F9C  0BAC               	decfsz	??___flmul+4,f
  9985     0F9D  2F97               	goto	u4045
  9986     0F9E  082B               	movf	??___flmul+3,w
  9987     0F9F  00B7               	movwf	___flmul@prod+3
  9988     0FA0  082A               	movf	??___flmul+2,w
  9989     0FA1  00B6               	movwf	___flmul@prod+2
  9990     0FA2  0829               	movf	??___flmul+1,w
  9991     0FA3  00B5               	movwf	___flmul@prod+1
  9992     0FA4  0828               	movf	??___flmul,w
  9993     0FA5  00B4               	movwf	___flmul@prod
  9994     0FA6                     l3081:
  9995     0FA6  3001               	movlw	1
  9996     0FA7  07B8               	addwf	___flmul@temp,f
  9997     0FA8  1803               	skipnc
  9998     0FA9  0AB9               	incf	___flmul@temp+1,f
  9999     0FAA  3000               	movlw	0
 10000     0FAB  07B9               	addwf	___flmul@temp+1,f
 10001     0FAC                     l3083:
 10002     0FAC  0839               	movf	___flmul@temp+1,w
 10003     0FAD  3A80               	xorlw	128
 10004     0FAE  00FF               	movwf	btemp+1
 10005     0FAF  3080               	movlw	128
 10006     0FB0  027F               	subwf	btemp+1,w
 10007     0FB1  1D03               	skipz
 10008     0FB2  2FB5               	goto	u4055
 10009     0FB3  30FF               	movlw	255
 10010     0FB4  0238               	subwf	___flmul@temp,w
 10011     0FB5                     u4055:
 10012     0FB5  1C03               	skipc
 10013     0FB6  2FB8               	goto	u4051
 10014     0FB7  2FB9               	goto	u4050
 10015     0FB8                     u4051:
 10016     0FB8  2FC4               	goto	l3087
 10017     0FB9                     u4050:
 10018     0FB9                     l3085:
 10019     0FB9  307F               	movlw	127
 10020     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
 10021     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
 10022     0FBC  00B7               	movwf	___flmul@prod+3
 10023     0FBD  3080               	movlw	128
 10024     0FBE  00B6               	movwf	___flmul@prod+2
 10025     0FBF  3000               	movlw	0
 10026     0FC0  00B5               	movwf	___flmul@prod+1
 10027     0FC1  3000               	movlw	0
 10028     0FC2  00B4               	movwf	___flmul@prod
 10029     0FC3  2FF5               	goto	l773
 10030     0FC4                     l3087:
 10031     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
 10032     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
 10033     0FC6  0839               	movf	___flmul@temp+1,w
 10034     0FC7  3A80               	xorlw	128
 10035     0FC8  00FF               	movwf	btemp+1
 10036     0FC9  3080               	movlw	128
 10037     0FCA  027F               	subwf	btemp+1,w
 10038     0FCB  1D03               	skipz
 10039     0FCC  2FCF               	goto	u4065
 10040     0FCD  3001               	movlw	1
 10041     0FCE  0238               	subwf	___flmul@temp,w
 10042     0FCF                     u4065:
 10043     0FCF  1803               	skipnc
 10044     0FD0  2FD2               	goto	u4061
 10045     0FD1  2FD3               	goto	u4060
 10046     0FD2                     u4061:
 10047     0FD2  2FDF               	goto	l3093
 10048     0FD3                     u4060:
 10049     0FD3                     l3089:
 10050     0FD3  3000               	movlw	0
 10051     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
 10052     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
 10053     0FD6  00B7               	movwf	___flmul@prod+3
 10054     0FD7  3000               	movlw	0
 10055     0FD8  00B6               	movwf	___flmul@prod+2
 10056     0FD9  3000               	movlw	0
 10057     0FDA  00B5               	movwf	___flmul@prod+1
 10058     0FDB  3000               	movlw	0
 10059     0FDC  00B4               	movwf	___flmul@prod
 10060     0FDD                     l3091:
 10061     0FDD  01AD               	clrf	___flmul@sign
 10062     0FDE  2FF5               	goto	l773
 10063     0FDF                     l3093:
 10064     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
 10065     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
 10066     0FE1  0838               	movf	___flmul@temp,w
 10067     0FE2  00B3               	movwf	___flmul@bexp
 10068     0FE3  30FF               	movlw	255
 10069     0FE4  05B4               	andwf	___flmul@prod,f
 10070     0FE5  30FF               	movlw	255
 10071     0FE6  05B5               	andwf	___flmul@prod+1,f
 10072     0FE7  307F               	movlw	127
 10073     0FE8  05B6               	andwf	___flmul@prod+2,f
 10074     0FE9  3000               	movlw	0
 10075     0FEA  05B7               	andwf	___flmul@prod+3,f
 10076     0FEB                     l3095:
 10077     0FEB  1C33               	btfss	___flmul@bexp,0
 10078     0FEC  2FEE               	goto	u4071
 10079     0FED  2FEF               	goto	u4070
 10080     0FEE                     u4071:
 10081     0FEE  2FF0               	goto	l3099
 10082     0FEF                     u4070:
 10083     0FEF                     l3097:
 10084     0FEF  17B6               	bsf	___flmul@prod+2,7
 10085     0FF0                     l3099:
 10086     0FF0  0833               	movf	___flmul@bexp,w
 10087     0FF1  00A8               	movwf	??___flmul
 10088     0FF2  1003               	clrc
 10089     0FF3  0C28               	rrf	??___flmul,w
 10090     0FF4  00B7               	movwf	___flmul@prod+3
 10091     0FF5                     l773:
 10092     0FF5  082D               	movf	___flmul@sign,w
 10093     0FF6  04B7               	iorwf	___flmul@prod+3,f
 10094     0FF7                     l3101:
 10095     0FF7  0837               	movf	___flmul@prod+3,w
 10096     0FF8  00A3               	movwf	?___flmul+3
 10097     0FF9  0836               	movf	___flmul@prod+2,w
 10098     0FFA  00A2               	movwf	?___flmul+2
 10099     0FFB  0835               	movf	___flmul@prod+1,w
 10100     0FFC  00A1               	movwf	?___flmul+1
 10101     0FFD  0834               	movf	___flmul@prod,w
 10102     0FFE  00A0               	movwf	?___flmul
 10103     0FFF                     l761:
 10104     0FFF  0008               	return
 10105     1000                     __end_of___flmul:
 10106                           
 10107                           	psect	text51
 10108     1D8D                     __ptext51:	
 10109 ;; *************** function __Umul8_16 *****************
 10110 ;; Defined at:
 10111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  multiplier      1    wreg     unsigned char 
 10114 ;;  multiplicand    1    0[COMMON] unsigned char 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  multiplier      1    8[COMMON] unsigned char 
 10117 ;;  word_mpld       2    6[COMMON] unsigned short 
 10118 ;;  product         2    4[COMMON] unsigned short 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  2    0[COMMON] unsigned int 
 10121 ;; Registers used:
 10122 ;;		wreg, status,2, status,0
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10128 ;;      Params:         2       0       0       0       0
 10129 ;;      Locals:         5       0       0       0       0
 10130 ;;      Temps:          2       0       0       0       0
 10131 ;;      Totals:         9       0       0       0       0
 10132 ;;Total ram usage:        9 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		___flmul
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141     1D8D                     __Umul8_16:	
 10142                           ;psect for function __Umul8_16
 10143                           
 10144                           
 10145                           ;incstack = 0
 10146                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10147                           ;__Umul8_16@multiplier stored from wreg
 10148     1D8D  00F8               	movwf	__Umul8_16@multiplier
 10149     1D8E                     l2683:
 10150     1D8E  01F4               	clrf	__Umul8_16@product
 10151     1D8F  01F5               	clrf	__Umul8_16@product+1
 10152     1D90                     l2685:
 10153     1D90  0870               	movf	__Umul8_16@multiplicand,w
 10154     1D91  00F2               	movwf	??__Umul8_16
 10155     1D92  01F3               	clrf	??__Umul8_16+1
 10156     1D93  0872               	movf	??__Umul8_16,w
 10157     1D94  00F6               	movwf	__Umul8_16@word_mpld
 10158     1D95  0873               	movf	??__Umul8_16+1,w
 10159     1D96  00F7               	movwf	__Umul8_16@word_mpld+1
 10160     1D97                     l2687:
 10161     1D97  1C78               	btfss	__Umul8_16@multiplier,0
 10162     1D98  2D9A               	goto	u3111
 10163     1D99  2D9B               	goto	u3110
 10164     1D9A                     u3111:
 10165     1D9A  2DA1               	goto	l780
 10166     1D9B                     u3110:
 10167     1D9B                     l2689:
 10168     1D9B  0876               	movf	__Umul8_16@word_mpld,w
 10169     1D9C  07F4               	addwf	__Umul8_16@product,f
 10170     1D9D  1803               	skipnc
 10171     1D9E  0AF5               	incf	__Umul8_16@product+1,f
 10172     1D9F  0877               	movf	__Umul8_16@word_mpld+1,w
 10173     1DA0  07F5               	addwf	__Umul8_16@product+1,f
 10174     1DA1                     l780:
 10175     1DA1  3001               	movlw	1
 10176     1DA2                     u3125:
 10177     1DA2  1003               	clrc
 10178     1DA3  0DF6               	rlf	__Umul8_16@word_mpld,f
 10179     1DA4  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10180     1DA5  3EFF               	addlw	-1
 10181     1DA6  1D03               	skipz
 10182     1DA7  2DA2               	goto	u3125
 10183     1DA8  1003               	clrc
 10184     1DA9  0CF8               	rrf	__Umul8_16@multiplier,f
 10185     1DAA                     l2691:
 10186     1DAA  0878               	movf	__Umul8_16@multiplier,w
 10187     1DAB  1D03               	btfss	3,2
 10188     1DAC  2DAE               	goto	u3131
 10189     1DAD  2DAF               	goto	u3130
 10190     1DAE                     u3131:
 10191     1DAE  2D97               	goto	l2687
 10192     1DAF                     u3130:
 10193     1DAF                     l2693:
 10194     1DAF  0875               	movf	__Umul8_16@product+1,w
 10195     1DB0  00F1               	movwf	?__Umul8_16+1
 10196     1DB1  0874               	movf	__Umul8_16@product,w
 10197     1DB2  00F0               	movwf	?__Umul8_16
 10198     1DB3                     l782:
 10199     1DB3  0008               	return
 10200     1DB4                     __end_of__Umul8_16:
 10201                           
 10202                           	psect	text52
 10203     1B93                     __ptext52:	
 10204 ;; *************** function _I2C_Read_Byte *****************
 10205 ;; Defined at:
 10206 ;;		line 60 in file "i2c.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;		None
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;		None
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      unsigned char 
 10213 ;; Registers used:
 10214 ;;		wreg, status,2, status,0, pclath, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10220 ;;      Params:         0       0       0       0       0
 10221 ;;      Locals:         0       0       0       0       0
 10222 ;;      Temps:          0       0       0       0       0
 10223 ;;      Totals:         0       0       0       0       0
 10224 ;;Total ram usage:        0 bytes
 10225 ;; Hardware stack levels used: 1
 10226 ;; Hardware stack levels required when called: 1
 10227 ;; This function calls:
 10228 ;;		_I2C_Master_Wait
 10229 ;; This function is called by:
 10230 ;;		_MCP9800_ReadConfig
 10231 ;;		_MCP9800_ReadTemperature
 10232 ;;		_MCP9800_GetLIMIT_Temp
 10233 ;;		_MCP9800_GetHYST_Temp
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237     1B93                     _I2C_Read_Byte:	
 10238                           ;psect for function _I2C_Read_Byte
 10239                           
 10240     1B93                     l2475:	
 10241                           ;incstack = 0
 10242                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
 10243                           
 10244                           
 10245                           ;i2c.c: 62:     I2C_Master_Wait();
 10246     1B93  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10247     1B98                     l2477:
 10248                           
 10249                           ;i2c.c: 63:     RCEN = 1;
 10250     1B98  1683               	bsf	3,5	;RP0=1, select bank1
 10251     1B99  1303               	bcf	3,6	;RP1=0, select bank1
 10252     1B9A  1591               	bsf	17,3	;volatile
 10253     1B9B                     l63:	
 10254                           ;i2c.c: 64:     while(!SSPIF);
 10255                           
 10256     1B9B  1283               	bcf	3,5	;RP0=0, select bank0
 10257     1B9C  1D8C               	btfss	12,3	;volatile
 10258     1B9D  2B9F               	goto	u2641
 10259     1B9E  2BA0               	goto	u2640
 10260     1B9F                     u2641:
 10261     1B9F  2B9B               	goto	l63
 10262     1BA0                     u2640:
 10263     1BA0                     l65:
 10264                           
 10265                           ;i2c.c: 65:     SSPIF = 0;
 10266     1BA0  118C               	bcf	12,3	;volatile
 10267     1BA1                     l2479:
 10268                           
 10269                           ;i2c.c: 66:     I2C_Master_Wait();
 10270     1BA1  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10271     1BA6                     l2481:
 10272                           
 10273                           ;i2c.c: 67:     return SSPBUF;
 10274     1BA6  1283               	bcf	3,5	;RP0=0, select bank0
 10275     1BA7  1303               	bcf	3,6	;RP1=0, select bank0
 10276     1BA8  0813               	movf	19,w	;volatile
 10277     1BA9                     l66:
 10278     1BA9  0008               	return
 10279     1BAA                     __end_of_I2C_Read_Byte:
 10280                           
 10281                           	psect	text53
 10282     1B12                     __ptext53:	
 10283 ;; *************** function _I2C_NACK *****************
 10284 ;; Defined at:
 10285 ;;		line 44 in file "i2c.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;		None
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      void 
 10292 ;; Registers used:
 10293 ;;		wreg, status,2, status,0, pclath, cstack
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10299 ;;      Params:         0       0       0       0       0
 10300 ;;      Locals:         0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0
 10302 ;;      Totals:         0       0       0       0       0
 10303 ;;Total ram usage:        0 bytes
 10304 ;; Hardware stack levels used: 1
 10305 ;; Hardware stack levels required when called: 1
 10306 ;; This function calls:
 10307 ;;		_I2C_Master_Wait
 10308 ;; This function is called by:
 10309 ;;		_MCP9800_ReadConfig
 10310 ;;		_MCP9800_ReadTemperature
 10311 ;;		_MCP9800_GetLIMIT_Temp
 10312 ;;		_MCP9800_GetHYST_Temp
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316     1B12                     _I2C_NACK:	
 10317                           ;psect for function _I2C_NACK
 10318                           
 10319     1B12                     l2465:	
 10320                           ;incstack = 0
 10321                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
 10322                           
 10323                           
 10324                           ;i2c.c: 46:     ACKDT = 1;
 10325     1B12  1683               	bsf	3,5	;RP0=1, select bank1
 10326     1B13  1303               	bcf	3,6	;RP1=0, select bank1
 10327     1B14  1691               	bsf	17,5	;volatile
 10328     1B15                     l2467:
 10329                           
 10330                           ;i2c.c: 47:     I2C_Master_Wait();
 10331     1B15  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10332     1B1A                     l2469:
 10333                           
 10334                           ;i2c.c: 48:     ACKEN = 1;
 10335     1B1A  1683               	bsf	3,5	;RP0=1, select bank1
 10336     1B1B  1303               	bcf	3,6	;RP1=0, select bank1
 10337     1B1C  1611               	bsf	17,4	;volatile
 10338     1B1D                     l54:
 10339     1B1D  0008               	return
 10340     1B1E                     __end_of_I2C_NACK:
 10341                           
 10342                           	psect	text54
 10343     1B38                     __ptext54:	
 10344 ;; *************** function _I2C_Master_Write *****************
 10345 ;; Defined at:
 10346 ;;		line 51 in file "i2c.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  data            1    wreg     unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  data            1    0[COMMON] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      unsigned char 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0, pclath, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10360 ;;      Params:         0       0       0       0       0
 10361 ;;      Locals:         1       0       0       0       0
 10362 ;;      Temps:          0       0       0       0       0
 10363 ;;      Totals:         1       0       0       0       0
 10364 ;;Total ram usage:        1 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; Hardware stack levels required when called: 1
 10367 ;; This function calls:
 10368 ;;		_I2C_Master_Wait
 10369 ;; This function is called by:
 10370 ;;		_MCP9800_WriteConfig
 10371 ;;		_MCP9800_ReadConfig
 10372 ;;		_MCP9800_SetLIMIT_Temp
 10373 ;;		_MCP9800_SetHYST_Temp
 10374 ;;		_MCP9800_ReadTemperature
 10375 ;;		_MCP9800_GetLIMIT_Temp
 10376 ;;		_MCP9800_GetHYST_Temp
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380     1B38                     _I2C_Master_Write:	
 10381                           ;psect for function _I2C_Master_Write
 10382                           
 10383                           
 10384                           ;incstack = 0
 10385                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10386                           ;I2C_Master_Write@data stored from wreg
 10387     1B38  00F0               	movwf	I2C_Master_Write@data
 10388     1B39                     l2471:
 10389                           
 10390                           ;i2c.c: 51: unsigned char I2C_Master_Write(unsigned char data);i2c.c: 52: {;i2c.c: 53:  
      +                             I2C_Master_Wait();
 10391     1B39  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10392     1B3E                     l2473:
 10393                           
 10394                           ;i2c.c: 54:     SSPBUF = data;
 10395     1B3E  0870               	movf	I2C_Master_Write@data,w
 10396     1B3F  1283               	bcf	3,5	;RP0=0, select bank0
 10397     1B40  1303               	bcf	3,6	;RP1=0, select bank0
 10398     1B41  0093               	movwf	19	;volatile
 10399     1B42                     l57:	
 10400                           ;i2c.c: 55:     while(!SSPIF);
 10401                           
 10402     1B42  1D8C               	btfss	12,3	;volatile
 10403     1B43  2B45               	goto	u2631
 10404     1B44  2B46               	goto	u2630
 10405     1B45                     u2631:
 10406     1B45  2B42               	goto	l57
 10407     1B46                     u2630:
 10408     1B46                     l59:
 10409                           
 10410                           ;i2c.c: 56:     SSPIF = 0;
 10411     1B46  118C               	bcf	12,3	;volatile
 10412     1B47                     l60:	
 10413                           ;i2c.c: 57:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
 10414                           
 10415     1B47  0008               	return
 10416     1B48                     __end_of_I2C_Master_Write:
 10417                           
 10418                           	psect	text55
 10419     1AFD                     __ptext55:	
 10420 ;; *************** function _I2C_Master_Stop *****************
 10421 ;; Defined at:
 10422 ;;		line 31 in file "i2c.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, status,2, status,0, pclath, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10436 ;;      Params:         0       0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0
 10439 ;;      Totals:         0       0       0       0       0
 10440 ;;Total ram usage:        0 bytes
 10441 ;; Hardware stack levels used: 1
 10442 ;; Hardware stack levels required when called: 1
 10443 ;; This function calls:
 10444 ;;		_I2C_Master_Wait
 10445 ;; This function is called by:
 10446 ;;		_MCP9800_WriteConfig
 10447 ;;		_MCP9800_ReadConfig
 10448 ;;		_MCP9800_SetLIMIT_Temp
 10449 ;;		_MCP9800_SetHYST_Temp
 10450 ;;		_MCP9800_ReadTemperature
 10451 ;;		_MCP9800_GetLIMIT_Temp
 10452 ;;		_MCP9800_GetHYST_Temp
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456     1AFD                     _I2C_Master_Stop:	
 10457                           ;psect for function _I2C_Master_Stop
 10458                           
 10459     1AFD                     l2461:	
 10460                           ;incstack = 0
 10461                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10462                           
 10463                           
 10464                           ;i2c.c: 33:     I2C_Master_Wait();
 10465     1AFD  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10466     1B02                     l2463:
 10467                           
 10468                           ;i2c.c: 34:     PEN = 1;
 10469     1B02  1683               	bsf	3,5	;RP0=1, select bank1
 10470     1B03  1303               	bcf	3,6	;RP1=0, select bank1
 10471     1B04  1511               	bsf	17,2	;volatile
 10472     1B05                     l48:
 10473     1B05  0008               	return
 10474     1B06                     __end_of_I2C_Master_Stop:
 10475                           
 10476                           	psect	text56
 10477     1AF4                     __ptext56:	
 10478 ;; *************** function _I2C_Master_Start *****************
 10479 ;; Defined at:
 10480 ;;		line 19 in file "i2c.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;		None
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      void 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2, status,0, pclath, cstack
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10494 ;;      Params:         0       0       0       0       0
 10495 ;;      Locals:         0       0       0       0       0
 10496 ;;      Temps:          0       0       0       0       0
 10497 ;;      Totals:         0       0       0       0       0
 10498 ;;Total ram usage:        0 bytes
 10499 ;; Hardware stack levels used: 1
 10500 ;; Hardware stack levels required when called: 1
 10501 ;; This function calls:
 10502 ;;		_I2C_Master_Wait
 10503 ;; This function is called by:
 10504 ;;		_MCP9800_WriteConfig
 10505 ;;		_MCP9800_ReadConfig
 10506 ;;		_MCP9800_SetLIMIT_Temp
 10507 ;;		_MCP9800_SetHYST_Temp
 10508 ;;		_MCP9800_ReadTemperature
 10509 ;;		_MCP9800_GetLIMIT_Temp
 10510 ;;		_MCP9800_GetHYST_Temp
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514     1AF4                     _I2C_Master_Start:	
 10515                           ;psect for function _I2C_Master_Start
 10516                           
 10517     1AF4                     l2453:	
 10518                           ;incstack = 0
 10519                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10520                           
 10521                           
 10522                           ;i2c.c: 21:     I2C_Master_Wait();
 10523     1AF4  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10524     1AF9                     l2455:
 10525                           
 10526                           ;i2c.c: 22:     SEN = 1;
 10527     1AF9  1683               	bsf	3,5	;RP0=1, select bank1
 10528     1AFA  1303               	bcf	3,6	;RP1=0, select bank1
 10529     1AFB  1411               	bsf	17,0	;volatile
 10530     1AFC                     l42:
 10531     1AFC  0008               	return
 10532     1AFD                     __end_of_I2C_Master_Start:
 10533                           
 10534                           	psect	text57
 10535     1AEB                     __ptext57:	
 10536 ;; *************** function _I2C_Master_RepeatedStart *****************
 10537 ;; Defined at:
 10538 ;;		line 25 in file "i2c.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      void 
 10545 ;; Registers used:
 10546 ;;		wreg, status,2, status,0, pclath, cstack
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10552 ;;      Params:         0       0       0       0       0
 10553 ;;      Locals:         0       0       0       0       0
 10554 ;;      Temps:          0       0       0       0       0
 10555 ;;      Totals:         0       0       0       0       0
 10556 ;;Total ram usage:        0 bytes
 10557 ;; Hardware stack levels used: 1
 10558 ;; Hardware stack levels required when called: 1
 10559 ;; This function calls:
 10560 ;;		_I2C_Master_Wait
 10561 ;; This function is called by:
 10562 ;;		_MCP9800_ReadConfig
 10563 ;;		_MCP9800_ReadTemperature
 10564 ;;		_MCP9800_GetLIMIT_Temp
 10565 ;;		_MCP9800_GetHYST_Temp
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569     1AEB                     _I2C_Master_RepeatedStart:	
 10570                           ;psect for function _I2C_Master_RepeatedStart
 10571                           
 10572     1AEB                     l2457:	
 10573                           ;incstack = 0
 10574                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 10575                           
 10576                           
 10577                           ;i2c.c: 27:     I2C_Master_Wait();
 10578     1AEB  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10579     1AF0                     l2459:
 10580                           
 10581                           ;i2c.c: 28:     RSEN = 1;
 10582     1AF0  1683               	bsf	3,5	;RP0=1, select bank1
 10583     1AF1  1303               	bcf	3,6	;RP1=0, select bank1
 10584     1AF2  1491               	bsf	17,1	;volatile
 10585     1AF3                     l45:
 10586     1AF3  0008               	return
 10587     1AF4                     __end_of_I2C_Master_RepeatedStart:
 10588                           
 10589                           	psect	text58
 10590     1B06                     __ptext58:	
 10591 ;; *************** function _I2C_ACK *****************
 10592 ;; Defined at:
 10593 ;;		line 37 in file "i2c.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;		None
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      void 
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0, pclath, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10607 ;;      Params:         0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0
 10609 ;;      Temps:          0       0       0       0       0
 10610 ;;      Totals:         0       0       0       0       0
 10611 ;;Total ram usage:        0 bytes
 10612 ;; Hardware stack levels used: 1
 10613 ;; Hardware stack levels required when called: 1
 10614 ;; This function calls:
 10615 ;;		_I2C_Master_Wait
 10616 ;; This function is called by:
 10617 ;;		_MCP9800_ReadTemperature
 10618 ;;		_MCP9800_GetLIMIT_Temp
 10619 ;;		_MCP9800_GetHYST_Temp
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623     1B06                     _I2C_ACK:	
 10624                           ;psect for function _I2C_ACK
 10625                           
 10626     1B06                     l3603:	
 10627                           ;incstack = 0
 10628                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
 10629                           
 10630                           
 10631                           ;i2c.c: 39:     ACKDT = 0;
 10632     1B06  1683               	bsf	3,5	;RP0=1, select bank1
 10633     1B07  1303               	bcf	3,6	;RP1=0, select bank1
 10634     1B08  1291               	bcf	17,5	;volatile
 10635     1B09                     l3605:
 10636                           
 10637                           ;i2c.c: 40:     I2C_Master_Wait();
 10638     1B09  160A  158A  231E  160A  158A  	fcall	_I2C_Master_Wait
 10639     1B0E                     l3607:
 10640                           
 10641                           ;i2c.c: 41:     ACKEN = 1;
 10642     1B0E  1683               	bsf	3,5	;RP0=1, select bank1
 10643     1B0F  1303               	bcf	3,6	;RP1=0, select bank1
 10644     1B10  1611               	bsf	17,4	;volatile
 10645     1B11                     l51:
 10646     1B11  0008               	return
 10647     1B12                     __end_of_I2C_ACK:
 10648                           
 10649                           	psect	text59
 10650     1B1E                     __ptext59:	
 10651 ;; *************** function _I2C_Master_Wait *****************
 10652 ;; Defined at:
 10653 ;;		line 14 in file "i2c.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10667 ;;      Params:         0       0       0       0       0
 10668 ;;      Locals:         0       0       0       0       0
 10669 ;;      Temps:          0       0       0       0       0
 10670 ;;      Totals:         0       0       0       0       0
 10671 ;;Total ram usage:        0 bytes
 10672 ;; Hardware stack levels used: 1
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_I2C_Master_Start
 10677 ;;		_I2C_Master_RepeatedStart
 10678 ;;		_I2C_Master_Stop
 10679 ;;		_I2C_ACK
 10680 ;;		_I2C_NACK
 10681 ;;		_I2C_Master_Write
 10682 ;;		_I2C_Read_Byte
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686     1B1E                     _I2C_Master_Wait:	
 10687                           ;psect for function _I2C_Master_Wait
 10688                           
 10689     1B1E                     l2435:	
 10690                           ;incstack = 0
 10691                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10692                           
 10693     1B1E                     l36:	
 10694                           ;i2c.c: 16:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10695                           
 10696     1B1E  1683               	bsf	3,5	;RP0=1, select bank1
 10697     1B1F  1303               	bcf	3,6	;RP1=0, select bank1
 10698     1B20  1914               	btfsc	20,2	;volatile
 10699     1B21  2B23               	goto	u2561
 10700     1B22  2B24               	goto	u2560
 10701     1B23                     u2561:
 10702     1B23  2B1E               	goto	l36
 10703     1B24                     u2560:
 10704     1B24                     l2437:
 10705     1B24  0811               	movf	17,w	;volatile
 10706     1B25  391F               	andlw	31
 10707     1B26  1D03               	btfss	3,2
 10708     1B27  2B29               	goto	u2571
 10709     1B28  2B2A               	goto	u2570
 10710     1B29                     u2571:
 10711     1B29  2B1E               	goto	l36
 10712     1B2A                     u2570:
 10713     1B2A                     l39:
 10714     1B2A  0008               	return
 10715     1B2B                     __end_of_I2C_Master_Wait:
 10716     0002                     ___latbits      equ	2
 10717     007E                     btemp           set	126	;btemp
 10718     007E                     wtemp0          set	126
 10719                           
 10720                           	psect	text6_split_1
 10721     009B                     l3277:
 10722                           
 10723                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 10724     009B  303F               	movlw	63
 10725     009C  1683               	bsf	3,5	;RP0=1, select bank1
 10726     009D  1303               	bcf	3,6	;RP1=0, select bank1
 10727     009E  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10728     009F  3080               	movlw	128
 10729     00A0  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10730     00A1  3000               	movlw	0
 10731     00A2  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10732     00A3  3000               	movlw	0
 10733     00A4  00C8               	movwf	efgtoa@u^(0+128)
 10734     00A5                     l3279:
 10735                           
 10736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 10737     00A5  01AF               	clrf	efgtoa@e^(0+128)
 10738     00A6  01B0               	clrf	(efgtoa@e+1)^(0+128)
 10739     00A7                     l3281:
 10740                           
 10741                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 10742     00A7  0847               	movf	(efgtoa@g+3)^(0+128),w
 10743     00A8  00F3               	movwf	___fleq@ff1+3
 10744     00A9  0846               	movf	(efgtoa@g+2)^(0+128),w
 10745     00AA  00F2               	movwf	___fleq@ff1+2
 10746     00AB  0845               	movf	(efgtoa@g+1)^(0+128),w
 10747     00AC  00F1               	movwf	___fleq@ff1+1
 10748     00AD  0844               	movf	efgtoa@g^(0+128),w
 10749     00AE  00F0               	movwf	___fleq@ff1
 10750     00AF  3000               	movlw	0
 10751     00B0  00F7               	movwf	___fleq@ff2+3
 10752     00B1  3000               	movlw	0
 10753     00B2  00F6               	movwf	___fleq@ff2+2
 10754     00B3  3000               	movlw	0
 10755     00B4  00F5               	movwf	___fleq@ff2+1
 10756     00B5  3000               	movlw	0
 10757     00B6  00F4               	movwf	___fleq@ff2
 10758     00B7  160A  158A  2761  120A  118A  	fcall	___fleq
 10759     00BC  1803               	btfsc	3,0
 10760     00BD  28BF               	goto	u4431
 10761     00BE  28C0               	goto	u4430
 10762     00BF                     u4431:
 10763     00BF  2AD1               	goto	l3307
 10764     00C0                     u4430:
 10765     00C0  28D1               	goto	l3287
 10766     00C1                     l3285:
 10767                           
 10768                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10769     00C1  1683               	bsf	3,5	;RP0=1, select bank1
 10770     00C2  1303               	bcf	3,6	;RP1=0, select bank1
 10771     00C3  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10772     00C4  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10773     00C5  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10774     00C6  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10775     00C7  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10776     00C8  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10777     00C9  0833               	movf	efgtoa@ou^(0+128),w
 10778     00CA  00C8               	movwf	efgtoa@u^(0+128)
 10779                           
 10780                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10781     00CB  3001               	movlw	1
 10782     00CC  07AF               	addwf	efgtoa@e^(0+128),f
 10783     00CD  1803               	skipnc
 10784     00CE  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 10785     00CF  3000               	movlw	0
 10786     00D0  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 10787     00D1                     l3287:
 10788                           
 10789                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10790     00D1  3041               	movlw	65
 10791     00D2  1283               	bcf	3,5	;RP0=0, select bank0
 10792     00D3  1303               	bcf	3,6	;RP1=0, select bank0
 10793     00D4  00A3               	movwf	___flmul@b+3
 10794     00D5  3020               	movlw	32
 10795     00D6  00A2               	movwf	___flmul@b+2
 10796     00D7  3000               	movlw	0
 10797     00D8  00A1               	movwf	___flmul@b+1
 10798     00D9  3000               	movlw	0
 10799     00DA  00A0               	movwf	___flmul@b
 10800     00DB  1683               	bsf	3,5	;RP0=1, select bank1
 10801     00DC  1303               	bcf	3,6	;RP1=0, select bank1
 10802     00DD  084B               	movf	(efgtoa@u+3)^(0+128),w
 10803     00DE  1283               	bcf	3,5	;RP0=0, select bank0
 10804     00DF  1303               	bcf	3,6	;RP1=0, select bank0
 10805     00E0  00A7               	movwf	___flmul@a+3
 10806     00E1  1683               	bsf	3,5	;RP0=1, select bank1
 10807     00E2  1303               	bcf	3,6	;RP1=0, select bank1
 10808     00E3  084A               	movf	(efgtoa@u+2)^(0+128),w
 10809     00E4  1283               	bcf	3,5	;RP0=0, select bank0
 10810     00E5  1303               	bcf	3,6	;RP1=0, select bank0
 10811     00E6  00A6               	movwf	___flmul@a+2
 10812     00E7  1683               	bsf	3,5	;RP0=1, select bank1
 10813     00E8  1303               	bcf	3,6	;RP1=0, select bank1
 10814     00E9  0849               	movf	(efgtoa@u+1)^(0+128),w
 10815     00EA  1283               	bcf	3,5	;RP0=0, select bank0
 10816     00EB  1303               	bcf	3,6	;RP1=0, select bank0
 10817     00EC  00A5               	movwf	___flmul@a+1
 10818     00ED  1683               	bsf	3,5	;RP0=1, select bank1
 10819     00EE  1303               	bcf	3,6	;RP1=0, select bank1
 10820     00EF  0848               	movf	efgtoa@u^(0+128),w
 10821     00F0  1283               	bcf	3,5	;RP0=0, select bank0
 10822     00F1  1303               	bcf	3,6	;RP1=0, select bank0
 10823     00F2  00A4               	movwf	___flmul@a
 10824     00F3  120A  158A  24BE  120A  118A  	fcall	___flmul
 10825     00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10826     00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10827     00FA  0823               	movf	?___flmul+3,w
 10828     00FB  1683               	bsf	3,5	;RP0=1, select bank1
 10829     00FC  1303               	bcf	3,6	;RP1=0, select bank1
 10830     00FD  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10831     00FE  1283               	bcf	3,5	;RP0=0, select bank0
 10832     00FF  1303               	bcf	3,6	;RP1=0, select bank0
 10833     0100  0822               	movf	?___flmul+2,w
 10834     0101  1683               	bsf	3,5	;RP0=1, select bank1
 10835     0102  1303               	bcf	3,6	;RP1=0, select bank1
 10836     0103  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10837     0104  1283               	bcf	3,5	;RP0=0, select bank0
 10838     0105  1303               	bcf	3,6	;RP1=0, select bank0
 10839     0106  0821               	movf	?___flmul+1,w
 10840     0107  1683               	bsf	3,5	;RP0=1, select bank1
 10841     0108  1303               	bcf	3,6	;RP1=0, select bank1
 10842     0109  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10843     010A  1283               	bcf	3,5	;RP0=0, select bank0
 10844     010B  1303               	bcf	3,6	;RP1=0, select bank0
 10845     010C  0820               	movf	?___flmul,w
 10846     010D  1683               	bsf	3,5	;RP0=1, select bank1
 10847     010E  1303               	bcf	3,6	;RP1=0, select bank1
 10848     010F  00B3               	movwf	efgtoa@ou^(0+128)
 10849     0110                     l3289:
 10850     0110  0844               	movf	efgtoa@g^(0+128),w
 10851     0111  1283               	bcf	3,5	;RP0=0, select bank0
 10852     0112  1303               	bcf	3,6	;RP1=0, select bank0
 10853     0113  00CD               	movwf	??_efgtoa
 10854     0114  1683               	bsf	3,5	;RP0=1, select bank1
 10855     0115  1303               	bcf	3,6	;RP1=0, select bank1
 10856     0116  0845               	movf	(efgtoa@g+1)^(0+128),w
 10857     0117  1283               	bcf	3,5	;RP0=0, select bank0
 10858     0118  1303               	bcf	3,6	;RP1=0, select bank0
 10859     0119  00CE               	movwf	??_efgtoa+1
 10860     011A  1683               	bsf	3,5	;RP0=1, select bank1
 10861     011B  1303               	bcf	3,6	;RP1=0, select bank1
 10862     011C  0846               	movf	(efgtoa@g+2)^(0+128),w
 10863     011D  1283               	bcf	3,5	;RP0=0, select bank0
 10864     011E  1303               	bcf	3,6	;RP1=0, select bank0
 10865     011F  00CF               	movwf	??_efgtoa+2
 10866     0120  1683               	bsf	3,5	;RP0=1, select bank1
 10867     0121  1303               	bcf	3,6	;RP1=0, select bank1
 10868     0122  0847               	movf	(efgtoa@g+3)^(0+128),w
 10869     0123  1283               	bcf	3,5	;RP0=0, select bank0
 10870     0124  1303               	bcf	3,6	;RP1=0, select bank0
 10871     0125  00D0               	movwf	??_efgtoa+3
 10872     0126  1683               	bsf	3,5	;RP0=1, select bank1
 10873     0127  1303               	bcf	3,6	;RP1=0, select bank1
 10874     0128  0833               	movf	efgtoa@ou^(0+128),w
 10875     0129  1283               	bcf	3,5	;RP0=0, select bank0
 10876     012A  1303               	bcf	3,6	;RP1=0, select bank0
 10877     012B  02CD               	subwf	??_efgtoa,f
 10878     012C  1683               	bsf	3,5	;RP0=1, select bank1
 10879     012D  1303               	bcf	3,6	;RP1=0, select bank1
 10880     012E  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10881     012F  1C03               	skipc
 10882     0130  0F34               	incfsz	(efgtoa@ou+1)^(0+128),w
 10883     0131  2933               	goto	u4441
 10884     0132  2936               	goto	u4442
 10885     0133                     u4441:
 10886     0133  1283               	bcf	3,5	;RP0=0, select bank0
 10887     0134  1303               	bcf	3,6	;RP1=0, select bank0
 10888     0135  02CE               	subwf	??_efgtoa+1,f
 10889     0136                     u4442:
 10890     0136  1683               	bsf	3,5	;RP0=1, select bank1
 10891     0137  1303               	bcf	3,6	;RP1=0, select bank1
 10892     0138  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10893     0139  1C03               	skipc
 10894     013A  0F35               	incfsz	(efgtoa@ou+2)^(0+128),w
 10895     013B  293D               	goto	u4443
 10896     013C  2940               	goto	u4444
 10897     013D                     u4443:
 10898     013D  1283               	bcf	3,5	;RP0=0, select bank0
 10899     013E  1303               	bcf	3,6	;RP1=0, select bank0
 10900     013F  02CF               	subwf	??_efgtoa+2,f
 10901     0140                     u4444:
 10902     0140  1683               	bsf	3,5	;RP0=1, select bank1
 10903     0141  1303               	bcf	3,6	;RP1=0, select bank1
 10904     0142  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10905     0143  1C03               	skipc
 10906     0144  0F36               	incfsz	(efgtoa@ou+3)^(0+128),w
 10907     0145  2947               	goto	u4445
 10908     0146  294A               	goto	u4446
 10909     0147                     u4445:
 10910     0147  1283               	bcf	3,5	;RP0=0, select bank0
 10911     0148  1303               	bcf	3,6	;RP1=0, select bank0
 10912     0149  02D0               	subwf	??_efgtoa+3,f
 10913     014A                     u4446:
 10914     014A  1683               	bsf	3,5	;RP0=1, select bank1
 10915     014B  1303               	bcf	3,6	;RP1=0, select bank1
 10916     014C  1283               	bcf	3,5	;RP0=0, select bank0
 10917     014D  1303               	bcf	3,6	;RP1=0, select bank0
 10918     014E  0850               	movf	??_efgtoa+3,w
 10919     014F  00F3               	movwf	labs@a+3
 10920     0150  084F               	movf	??_efgtoa+2,w
 10921     0151  00F2               	movwf	labs@a+2
 10922     0152  084E               	movf	??_efgtoa+1,w
 10923     0153  00F1               	movwf	labs@a+1
 10924     0154  084D               	movf	??_efgtoa,w
 10925     0155  00F0               	movwf	labs@a
 10926     0156  160A  158A  237E  120A  118A  	fcall	_labs
 10927     015B  1BF3               	btfsc	?_labs+3,7
 10928     015C  296D               	goto	u4451
 10929     015D  0873               	movf	?_labs+3,w
 10930     015E  1D03               	btfss	3,2
 10931     015F  296E               	goto	u4450
 10932     0160  0872               	movf	?_labs+2,w
 10933     0161  1D03               	btfss	3,2
 10934     0162  296E               	goto	u4450
 10935     0163  0871               	movf	?_labs+1,w
 10936     0164  1D03               	btfss	3,2
 10937     0165  296E               	goto	u4450
 10938     0166  3002               	movlw	2
 10939     0167  0270               	subwf	?_labs,w
 10940     0168  1D03               	skipz
 10941     0169  296A               	goto	u4453
 10942     016A                     u4453:
 10943     016A  1C03               	btfss	3,0
 10944     016B  296D               	goto	u4451
 10945     016C  296E               	goto	u4450
 10946     016D                     u4451:
 10947     016D  28C1               	goto	l3285
 10948     016E                     u4450:
 10949     016E                     l3291:
 10950     016E  1683               	bsf	3,5	;RP0=1, select bank1
 10951     016F  1303               	bcf	3,6	;RP1=0, select bank1
 10952     0170  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10953     0171  1283               	bcf	3,5	;RP0=0, select bank0
 10954     0172  1303               	bcf	3,6	;RP1=0, select bank0
 10955     0173  00BD               	movwf	___flge@ff1+3
 10956     0174  1683               	bsf	3,5	;RP0=1, select bank1
 10957     0175  1303               	bcf	3,6	;RP1=0, select bank1
 10958     0176  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10959     0177  1283               	bcf	3,5	;RP0=0, select bank0
 10960     0178  1303               	bcf	3,6	;RP1=0, select bank0
 10961     0179  00BC               	movwf	___flge@ff1+2
 10962     017A  1683               	bsf	3,5	;RP0=1, select bank1
 10963     017B  1303               	bcf	3,6	;RP1=0, select bank1
 10964     017C  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10965     017D  1283               	bcf	3,5	;RP0=0, select bank0
 10966     017E  1303               	bcf	3,6	;RP1=0, select bank0
 10967     017F  00BB               	movwf	___flge@ff1+1
 10968     0180  1683               	bsf	3,5	;RP0=1, select bank1
 10969     0181  1303               	bcf	3,6	;RP1=0, select bank1
 10970     0182  0833               	movf	efgtoa@ou^(0+128),w
 10971     0183  1283               	bcf	3,5	;RP0=0, select bank0
 10972     0184  1303               	bcf	3,6	;RP1=0, select bank0
 10973     0185  00BA               	movwf	___flge@ff1
 10974     0186  1683               	bsf	3,5	;RP0=1, select bank1
 10975     0187  1303               	bcf	3,6	;RP1=0, select bank1
 10976     0188  0847               	movf	(efgtoa@g+3)^(0+128),w
 10977     0189  1283               	bcf	3,5	;RP0=0, select bank0
 10978     018A  1303               	bcf	3,6	;RP1=0, select bank0
 10979     018B  00C1               	movwf	___flge@ff2+3
 10980     018C  1683               	bsf	3,5	;RP0=1, select bank1
 10981     018D  1303               	bcf	3,6	;RP1=0, select bank1
 10982     018E  0846               	movf	(efgtoa@g+2)^(0+128),w
 10983     018F  1283               	bcf	3,5	;RP0=0, select bank0
 10984     0190  1303               	bcf	3,6	;RP1=0, select bank0
 10985     0191  00C0               	movwf	___flge@ff2+2
 10986     0192  1683               	bsf	3,5	;RP0=1, select bank1
 10987     0193  1303               	bcf	3,6	;RP1=0, select bank1
 10988     0194  0845               	movf	(efgtoa@g+1)^(0+128),w
 10989     0195  1283               	bcf	3,5	;RP0=0, select bank0
 10990     0196  1303               	bcf	3,6	;RP1=0, select bank0
 10991     0197  00BF               	movwf	___flge@ff2+1
 10992     0198  1683               	bsf	3,5	;RP0=1, select bank1
 10993     0199  1303               	bcf	3,6	;RP1=0, select bank1
 10994     019A  0844               	movf	efgtoa@g^(0+128),w
 10995     019B  1283               	bcf	3,5	;RP0=0, select bank0
 10996     019C  1303               	bcf	3,6	;RP1=0, select bank0
 10997     019D  00BE               	movwf	___flge@ff2
 10998     019E  160A  118A  22C2  120A  118A  	fcall	___flge
 10999     01A3  1C03               	btfss	3,0
 11000     01A4  29A6               	goto	u4461
 11001     01A5  29A7               	goto	u4460
 11002     01A6                     u4461:
 11003     01A6  28C1               	goto	l3285
 11004     01A7                     u4460:
 11005     01A7                     l3293:
 11006                           
 11007                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11008     01A7  1683               	bsf	3,5	;RP0=1, select bank1
 11009     01A8  1303               	bcf	3,6	;RP1=0, select bank1
 11010     01A9  0844               	movf	efgtoa@g^(0+128),w
 11011     01AA  1283               	bcf	3,5	;RP0=0, select bank0
 11012     01AB  1303               	bcf	3,6	;RP1=0, select bank0
 11013     01AC  00CD               	movwf	??_efgtoa
 11014     01AD  1683               	bsf	3,5	;RP0=1, select bank1
 11015     01AE  1303               	bcf	3,6	;RP1=0, select bank1
 11016     01AF  0845               	movf	(efgtoa@g+1)^(0+128),w
 11017     01B0  1283               	bcf	3,5	;RP0=0, select bank0
 11018     01B1  1303               	bcf	3,6	;RP1=0, select bank0
 11019     01B2  00CE               	movwf	??_efgtoa+1
 11020     01B3  1683               	bsf	3,5	;RP0=1, select bank1
 11021     01B4  1303               	bcf	3,6	;RP1=0, select bank1
 11022     01B5  0846               	movf	(efgtoa@g+2)^(0+128),w
 11023     01B6  1283               	bcf	3,5	;RP0=0, select bank0
 11024     01B7  1303               	bcf	3,6	;RP1=0, select bank0
 11025     01B8  00CF               	movwf	??_efgtoa+2
 11026     01B9  1683               	bsf	3,5	;RP0=1, select bank1
 11027     01BA  1303               	bcf	3,6	;RP1=0, select bank1
 11028     01BB  0847               	movf	(efgtoa@g+3)^(0+128),w
 11029     01BC  1283               	bcf	3,5	;RP0=0, select bank0
 11030     01BD  1303               	bcf	3,6	;RP1=0, select bank0
 11031     01BE  00D0               	movwf	??_efgtoa+3
 11032     01BF  1683               	bsf	3,5	;RP0=1, select bank1
 11033     01C0  1303               	bcf	3,6	;RP1=0, select bank1
 11034     01C1  0848               	movf	efgtoa@u^(0+128),w
 11035     01C2  1283               	bcf	3,5	;RP0=0, select bank0
 11036     01C3  1303               	bcf	3,6	;RP1=0, select bank0
 11037     01C4  02CD               	subwf	??_efgtoa,f
 11038     01C5  1683               	bsf	3,5	;RP0=1, select bank1
 11039     01C6  1303               	bcf	3,6	;RP1=0, select bank1
 11040     01C7  0849               	movf	(efgtoa@u+1)^(0+128),w
 11041     01C8  1C03               	skipc
 11042     01C9  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 11043     01CA  29CC               	goto	u4471
 11044     01CB  29CF               	goto	u4472
 11045     01CC                     u4471:
 11046     01CC  1283               	bcf	3,5	;RP0=0, select bank0
 11047     01CD  1303               	bcf	3,6	;RP1=0, select bank0
 11048     01CE  02CE               	subwf	??_efgtoa+1,f
 11049     01CF                     u4472:
 11050     01CF  1683               	bsf	3,5	;RP0=1, select bank1
 11051     01D0  1303               	bcf	3,6	;RP1=0, select bank1
 11052     01D1  084A               	movf	(efgtoa@u+2)^(0+128),w
 11053     01D2  1C03               	skipc
 11054     01D3  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 11055     01D4  29D6               	goto	u4473
 11056     01D5  29D9               	goto	u4474
 11057     01D6                     u4473:
 11058     01D6  1283               	bcf	3,5	;RP0=0, select bank0
 11059     01D7  1303               	bcf	3,6	;RP1=0, select bank0
 11060     01D8  02CF               	subwf	??_efgtoa+2,f
 11061     01D9                     u4474:
 11062     01D9  1683               	bsf	3,5	;RP0=1, select bank1
 11063     01DA  1303               	bcf	3,6	;RP1=0, select bank1
 11064     01DB  084B               	movf	(efgtoa@u+3)^(0+128),w
 11065     01DC  1C03               	skipc
 11066     01DD  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 11067     01DE  29E0               	goto	u4475
 11068     01DF  29E3               	goto	u4476
 11069     01E0                     u4475:
 11070     01E0  1283               	bcf	3,5	;RP0=0, select bank0
 11071     01E1  1303               	bcf	3,6	;RP1=0, select bank0
 11072     01E2  02D0               	subwf	??_efgtoa+3,f
 11073     01E3                     u4476:
 11074     01E3  1683               	bsf	3,5	;RP0=1, select bank1
 11075     01E4  1303               	bcf	3,6	;RP1=0, select bank1
 11076     01E5  1283               	bcf	3,5	;RP0=0, select bank0
 11077     01E6  1303               	bcf	3,6	;RP1=0, select bank0
 11078     01E7  0850               	movf	??_efgtoa+3,w
 11079     01E8  00F3               	movwf	labs@a+3
 11080     01E9  084F               	movf	??_efgtoa+2,w
 11081     01EA  00F2               	movwf	labs@a+2
 11082     01EB  084E               	movf	??_efgtoa+1,w
 11083     01EC  00F1               	movwf	labs@a+1
 11084     01ED  084D               	movf	??_efgtoa,w
 11085     01EE  00F0               	movwf	labs@a
 11086     01EF  160A  158A  237E  120A  118A  	fcall	_labs
 11087     01F4  1BF3               	btfsc	?_labs+3,7
 11088     01F5  2A07               	goto	u4480
 11089     01F6  0873               	movf	?_labs+3,w
 11090     01F7  1D03               	btfss	3,2
 11091     01F8  2A06               	goto	u4481
 11092     01F9  0872               	movf	?_labs+2,w
 11093     01FA  1D03               	btfss	3,2
 11094     01FB  2A06               	goto	u4481
 11095     01FC  0871               	movf	?_labs+1,w
 11096     01FD  1D03               	btfss	3,2
 11097     01FE  2A06               	goto	u4481
 11098     01FF  3002               	movlw	2
 11099     0200  0270               	subwf	?_labs,w
 11100     0201  1D03               	skipz
 11101     0202  2A03               	goto	u4483
 11102     0203                     u4483:
 11103     0203  1803               	btfsc	3,0
 11104     0204  2A06               	goto	u4481
 11105     0205  2A07               	goto	u4480
 11106     0206                     u4481:
 11107     0206  2A98               	goto	l3305
 11108     0207                     u4480:
 11109     0207                     l3295:
 11110                           
 11111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11112     0207  1683               	bsf	3,5	;RP0=1, select bank1
 11113     0208  1303               	bcf	3,6	;RP1=0, select bank1
 11114     0209  084B               	movf	(efgtoa@u+3)^(0+128),w
 11115     020A  00C7               	movwf	(efgtoa@g+3)^(0+128)
 11116     020B  084A               	movf	(efgtoa@u+2)^(0+128),w
 11117     020C  00C6               	movwf	(efgtoa@g+2)^(0+128)
 11118     020D  0849               	movf	(efgtoa@u+1)^(0+128),w
 11119     020E  00C5               	movwf	(efgtoa@g+1)^(0+128)
 11120     020F  0848               	movf	efgtoa@u^(0+128),w
 11121     0210  00C4               	movwf	efgtoa@g^(0+128)
 11122                           
 11123                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
 11124     0211  2AD1               	goto	l3307
 11125     0212                     l3297:
 11126                           
 11127                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11128     0212  3041               	movlw	65
 11129     0213  00F3               	movwf	___fldiv@a+3
 11130     0214  3020               	movlw	32
 11131     0215  00F2               	movwf	___fldiv@a+2
 11132     0216  3000               	movlw	0
 11133     0217  00F1               	movwf	___fldiv@a+1
 11134     0218  3000               	movlw	0
 11135     0219  00F0               	movwf	___fldiv@a
 11136     021A  1683               	bsf	3,5	;RP0=1, select bank1
 11137     021B  1303               	bcf	3,6	;RP1=0, select bank1
 11138     021C  084B               	movf	(efgtoa@u+3)^(0+128),w
 11139     021D  00F7               	movwf	___fldiv@b+3
 11140     021E  084A               	movf	(efgtoa@u+2)^(0+128),w
 11141     021F  00F6               	movwf	___fldiv@b+2
 11142     0220  0849               	movf	(efgtoa@u+1)^(0+128),w
 11143     0221  00F5               	movwf	___fldiv@b+1
 11144     0222  0848               	movf	efgtoa@u^(0+128),w
 11145     0223  00F4               	movwf	___fldiv@b
 11146     0224  120A  158A  2092  120A  118A  	fcall	___fldiv
 11147     0229  0873               	movf	?___fldiv+3,w
 11148     022A  1683               	bsf	3,5	;RP0=1, select bank1
 11149     022B  1303               	bcf	3,6	;RP1=0, select bank1
 11150     022C  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11151     022D  0872               	movf	?___fldiv+2,w
 11152     022E  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11153     022F  0871               	movf	?___fldiv+1,w
 11154     0230  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11155     0231  0870               	movf	?___fldiv,w
 11156     0232  00C8               	movwf	efgtoa@u^(0+128)
 11157     0233                     l3299:
 11158                           
 11159                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
 11160     0233  30FF               	movlw	255
 11161     0234  07AF               	addwf	efgtoa@e^(0+128),f
 11162     0235  1803               	skipnc
 11163     0236  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 11164     0237  30FF               	movlw	255
 11165     0238  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 11166     0239                     l3301:
 11167                           
 11168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11169     0239  0844               	movf	efgtoa@g^(0+128),w
 11170     023A  1283               	bcf	3,5	;RP0=0, select bank0
 11171     023B  1303               	bcf	3,6	;RP1=0, select bank0
 11172     023C  00CD               	movwf	??_efgtoa
 11173     023D  1683               	bsf	3,5	;RP0=1, select bank1
 11174     023E  1303               	bcf	3,6	;RP1=0, select bank1
 11175     023F  0845               	movf	(efgtoa@g+1)^(0+128),w
 11176     0240  1283               	bcf	3,5	;RP0=0, select bank0
 11177     0241  1303               	bcf	3,6	;RP1=0, select bank0
 11178     0242  00CE               	movwf	??_efgtoa+1
 11179     0243  1683               	bsf	3,5	;RP0=1, select bank1
 11180     0244  1303               	bcf	3,6	;RP1=0, select bank1
 11181     0245  0846               	movf	(efgtoa@g+2)^(0+128),w
 11182     0246  1283               	bcf	3,5	;RP0=0, select bank0
 11183     0247  1303               	bcf	3,6	;RP1=0, select bank0
 11184     0248  00CF               	movwf	??_efgtoa+2
 11185     0249  1683               	bsf	3,5	;RP0=1, select bank1
 11186     024A  1303               	bcf	3,6	;RP1=0, select bank1
 11187     024B  0847               	movf	(efgtoa@g+3)^(0+128),w
 11188     024C  1283               	bcf	3,5	;RP0=0, select bank0
 11189     024D  1303               	bcf	3,6	;RP1=0, select bank0
 11190     024E  00D0               	movwf	??_efgtoa+3
 11191     024F  1683               	bsf	3,5	;RP0=1, select bank1
 11192     0250  1303               	bcf	3,6	;RP1=0, select bank1
 11193     0251  0848               	movf	efgtoa@u^(0+128),w
 11194     0252  1283               	bcf	3,5	;RP0=0, select bank0
 11195     0253  1303               	bcf	3,6	;RP1=0, select bank0
 11196     0254  02CD               	subwf	??_efgtoa,f
 11197     0255  1683               	bsf	3,5	;RP0=1, select bank1
 11198     0256  1303               	bcf	3,6	;RP1=0, select bank1
 11199     0257  0849               	movf	(efgtoa@u+1)^(0+128),w
 11200     0258  1C03               	skipc
 11201     0259  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 11202     025A  2A5C               	goto	u4491
 11203     025B  2A5F               	goto	u4492
 11204     025C                     u4491:
 11205     025C  1283               	bcf	3,5	;RP0=0, select bank0
 11206     025D  1303               	bcf	3,6	;RP1=0, select bank0
 11207     025E  02CE               	subwf	??_efgtoa+1,f
 11208     025F                     u4492:
 11209     025F  1683               	bsf	3,5	;RP0=1, select bank1
 11210     0260  1303               	bcf	3,6	;RP1=0, select bank1
 11211     0261  084A               	movf	(efgtoa@u+2)^(0+128),w
 11212     0262  1C03               	skipc
 11213     0263  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 11214     0264  2A66               	goto	u4493
 11215     0265  2A69               	goto	u4494
 11216     0266                     u4493:
 11217     0266  1283               	bcf	3,5	;RP0=0, select bank0
 11218     0267  1303               	bcf	3,6	;RP1=0, select bank0
 11219     0268  02CF               	subwf	??_efgtoa+2,f
 11220     0269                     u4494:
 11221     0269  1683               	bsf	3,5	;RP0=1, select bank1
 11222     026A  1303               	bcf	3,6	;RP1=0, select bank1
 11223     026B  084B               	movf	(efgtoa@u+3)^(0+128),w
 11224     026C  1C03               	skipc
 11225     026D  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 11226     026E  2A70               	goto	u4495
 11227     026F  2A73               	goto	u4496
 11228     0270                     u4495:
 11229     0270  1283               	bcf	3,5	;RP0=0, select bank0
 11230     0271  1303               	bcf	3,6	;RP1=0, select bank0
 11231     0272  02D0               	subwf	??_efgtoa+3,f
 11232     0273                     u4496:
 11233     0273  1683               	bsf	3,5	;RP0=1, select bank1
 11234     0274  1303               	bcf	3,6	;RP1=0, select bank1
 11235     0275  1283               	bcf	3,5	;RP0=0, select bank0
 11236     0276  1303               	bcf	3,6	;RP1=0, select bank0
 11237     0277  0850               	movf	??_efgtoa+3,w
 11238     0278  00F3               	movwf	labs@a+3
 11239     0279  084F               	movf	??_efgtoa+2,w
 11240     027A  00F2               	movwf	labs@a+2
 11241     027B  084E               	movf	??_efgtoa+1,w
 11242     027C  00F1               	movwf	labs@a+1
 11243     027D  084D               	movf	??_efgtoa,w
 11244     027E  00F0               	movwf	labs@a
 11245     027F  160A  158A  237E  120A  118A  	fcall	_labs
 11246     0284  1BF3               	btfsc	?_labs+3,7
 11247     0285  2A97               	goto	u4500
 11248     0286  0873               	movf	?_labs+3,w
 11249     0287  1D03               	btfss	3,2
 11250     0288  2A96               	goto	u4501
 11251     0289  0872               	movf	?_labs+2,w
 11252     028A  1D03               	btfss	3,2
 11253     028B  2A96               	goto	u4501
 11254     028C  0871               	movf	?_labs+1,w
 11255     028D  1D03               	btfss	3,2
 11256     028E  2A96               	goto	u4501
 11257     028F  3002               	movlw	2
 11258     0290  0270               	subwf	?_labs,w
 11259     0291  1D03               	skipz
 11260     0292  2A93               	goto	u4503
 11261     0293                     u4503:
 11262     0293  1803               	btfsc	3,0
 11263     0294  2A96               	goto	u4501
 11264     0295  2A97               	goto	u4500
 11265     0296                     u4501:
 11266     0296  2A98               	goto	l3305
 11267     0297                     u4500:
 11268     0297  2A07               	goto	l3295
 11269     0298                     l3305:
 11270                           
 11271                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11272     0298  1683               	bsf	3,5	;RP0=1, select bank1
 11273     0299  1303               	bcf	3,6	;RP1=0, select bank1
 11274     029A  0847               	movf	(efgtoa@g+3)^(0+128),w
 11275     029B  1283               	bcf	3,5	;RP0=0, select bank0
 11276     029C  1303               	bcf	3,6	;RP1=0, select bank0
 11277     029D  00BD               	movwf	___flge@ff1+3
 11278     029E  1683               	bsf	3,5	;RP0=1, select bank1
 11279     029F  1303               	bcf	3,6	;RP1=0, select bank1
 11280     02A0  0846               	movf	(efgtoa@g+2)^(0+128),w
 11281     02A1  1283               	bcf	3,5	;RP0=0, select bank0
 11282     02A2  1303               	bcf	3,6	;RP1=0, select bank0
 11283     02A3  00BC               	movwf	___flge@ff1+2
 11284     02A4  1683               	bsf	3,5	;RP0=1, select bank1
 11285     02A5  1303               	bcf	3,6	;RP1=0, select bank1
 11286     02A6  0845               	movf	(efgtoa@g+1)^(0+128),w
 11287     02A7  1283               	bcf	3,5	;RP0=0, select bank0
 11288     02A8  1303               	bcf	3,6	;RP1=0, select bank0
 11289     02A9  00BB               	movwf	___flge@ff1+1
 11290     02AA  1683               	bsf	3,5	;RP0=1, select bank1
 11291     02AB  1303               	bcf	3,6	;RP1=0, select bank1
 11292     02AC  0844               	movf	efgtoa@g^(0+128),w
 11293     02AD  1283               	bcf	3,5	;RP0=0, select bank0
 11294     02AE  1303               	bcf	3,6	;RP1=0, select bank0
 11295     02AF  00BA               	movwf	___flge@ff1
 11296     02B0  1683               	bsf	3,5	;RP0=1, select bank1
 11297     02B1  1303               	bcf	3,6	;RP1=0, select bank1
 11298     02B2  084B               	movf	(efgtoa@u+3)^(0+128),w
 11299     02B3  1283               	bcf	3,5	;RP0=0, select bank0
 11300     02B4  1303               	bcf	3,6	;RP1=0, select bank0
 11301     02B5  00C1               	movwf	___flge@ff2+3
 11302     02B6  1683               	bsf	3,5	;RP0=1, select bank1
 11303     02B7  1303               	bcf	3,6	;RP1=0, select bank1
 11304     02B8  084A               	movf	(efgtoa@u+2)^(0+128),w
 11305     02B9  1283               	bcf	3,5	;RP0=0, select bank0
 11306     02BA  1303               	bcf	3,6	;RP1=0, select bank0
 11307     02BB  00C0               	movwf	___flge@ff2+2
 11308     02BC  1683               	bsf	3,5	;RP0=1, select bank1
 11309     02BD  1303               	bcf	3,6	;RP1=0, select bank1
 11310     02BE  0849               	movf	(efgtoa@u+1)^(0+128),w
 11311     02BF  1283               	bcf	3,5	;RP0=0, select bank0
 11312     02C0  1303               	bcf	3,6	;RP1=0, select bank0
 11313     02C1  00BF               	movwf	___flge@ff2+1
 11314     02C2  1683               	bsf	3,5	;RP0=1, select bank1
 11315     02C3  1303               	bcf	3,6	;RP1=0, select bank1
 11316     02C4  0848               	movf	efgtoa@u^(0+128),w
 11317     02C5  1283               	bcf	3,5	;RP0=0, select bank0
 11318     02C6  1303               	bcf	3,6	;RP1=0, select bank0
 11319     02C7  00BE               	movwf	___flge@ff2
 11320     02C8  160A  118A  22C2  120A  118A  	fcall	___flge
 11321     02CD  1C03               	btfss	3,0
 11322     02CE  2AD0               	goto	u4511
 11323     02CF  2AD1               	goto	u4510
 11324     02D0                     u4511:
 11325     02D0  2A12               	goto	l3297
 11326     02D1                     u4510:
 11327     02D1                     l3307:
 11328                           
 11329                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 11330     02D1  1283               	bcf	3,5	;RP0=0, select bank0
 11331     02D2  1303               	bcf	3,6	;RP1=0, select bank0
 11332     02D3  084C               	movf	efgtoa@c,w
 11333     02D4  1683               	bsf	3,5	;RP0=1, select bank1
 11334     02D5  1303               	bcf	3,6	;RP1=0, select bank1
 11335     02D6  00A9               	movwf	efgtoa@mode^(0+128)
 11336                           
 11337                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 11338     02D7  0829               	movf	efgtoa@mode^(0+128),w
 11339     02D8  00AA               	movwf	efgtoa@nmode^(0+128)
 11340     02D9                     l3309:
 11341                           
 11342                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 11343     02D9  1BE9               	btfsc	(_prec+1)^(0+128),7
 11344     02DA  2ADC               	goto	u4521
 11345     02DB  2ADD               	goto	u4520
 11346     02DC                     u4521:
 11347     02DC  2AE2               	goto	l3313
 11348     02DD                     u4520:
 11349     02DD                     l3311:
 11350     02DD  0869               	movf	(_prec+1)^(0+128),w
 11351     02DE  00A3               	movwf	(efgtoa@p+1)^(0+128)
 11352     02DF  0868               	movf	_prec^(0+128),w
 11353     02E0  00A2               	movwf	efgtoa@p^(0+128)
 11354     02E1  2AE6               	goto	l899
 11355     02E2                     l3313:
 11356     02E2  3006               	movlw	6
 11357     02E3  00A2               	movwf	efgtoa@p^(0+128)
 11358     02E4  3000               	movlw	0
 11359     02E5  00A3               	movwf	(efgtoa@p^(0+128)+1)
 11360     02E6                     l899:
 11361                           
 11362                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
 11363     02E6  0823               	movf	(efgtoa@p+1)^(0+128),w
 11364     02E7  00AE               	movwf	(efgtoa@m+1)^(0+128)
 11365     02E8  0822               	movf	efgtoa@p^(0+128),w
 11366     02E9  00AD               	movwf	efgtoa@m^(0+128)
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
 11369     02EA  3001               	movlw	1
 11370     02EB  07AD               	addwf	efgtoa@m^(0+128),f
 11371     02EC  1803               	skipnc
 11372     02ED  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 11373     02EE  3000               	movlw	0
 11374     02EF  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 11375     02F0                     l3315:
 11376                           
 11377                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 11378     02F0  3066               	movlw	102
 11379     02F1  062A               	xorwf	efgtoa@nmode^(0+128),w
 11380     02F2  1D03               	btfss	3,2
 11381     02F3  2AF5               	goto	u4531
 11382     02F4  2AF6               	goto	u4530
 11383     02F5                     u4531:
 11384     02F5  2B10               	goto	l3327
 11385     02F6                     u4530:
 11386     02F6                     l3317:
 11387                           
 11388                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 11389     02F6  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
 11390     02F7  2AF9               	goto	u4541
 11391     02F8  2AFA               	goto	u4540
 11392     02F9                     u4541:
 11393     02F9  2B04               	goto	l3323
 11394     02FA                     u4540:
 11395     02FA                     l3319:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 11398     02FA  303F               	movlw	63
 11399     02FB  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11400     02FC  3080               	movlw	128
 11401     02FD  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11402     02FE  3000               	movlw	0
 11403     02FF  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11404     0300  3000               	movlw	0
 11405     0301  00C8               	movwf	efgtoa@u^(0+128)
 11406     0302                     l3321:
 11407                           
 11408                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 11409     0302  01AF               	clrf	efgtoa@e^(0+128)
 11410     0303  01B0               	clrf	(efgtoa@e+1)^(0+128)
 11411     0304                     l3323:
 11412                           
 11413                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 11414     0304  3067               	movlw	103
 11415     0305  0629               	xorwf	efgtoa@mode^(0+128),w
 11416     0306  1903               	btfsc	3,2
 11417     0307  2B09               	goto	u4551
 11418     0308  2B0A               	goto	u4550
 11419     0309                     u4551:
 11420     0309  2B10               	goto	l3327
 11421     030A                     u4550:
 11422     030A                     l3325:
 11423                           
 11424                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 11425     030A  082F               	movf	efgtoa@e^(0+128),w
 11426     030B  07AD               	addwf	efgtoa@m^(0+128),f
 11427     030C  1803               	skipnc
 11428     030D  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 11429     030E  0830               	movf	(efgtoa@e+1)^(0+128),w
 11430     030F  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 11431     0310                     l3327:
 11432                           
 11433                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 11434     0310  01B7               	clrf	efgtoa@i^(0+128)
 11435     0311  01B8               	clrf	(efgtoa@i+1)^(0+128)
 11436     0312                     l3329:
 11437                           
 11438                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 11439     0312  0847               	movf	(efgtoa@g+3)^(0+128),w
 11440     0313  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11441     0314  0846               	movf	(efgtoa@g+2)^(0+128),w
 11442     0315  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11443     0316  0845               	movf	(efgtoa@g+1)^(0+128),w
 11444     0317  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11445     0318  0844               	movf	efgtoa@g^(0+128),w
 11446     0319  00B9               	movwf	efgtoa@h^(0+128)
 11447     031A                     l3331:
 11448                           
 11449                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 11450     031A  084B               	movf	(efgtoa@u+3)^(0+128),w
 11451     031B  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 11452     031C  084A               	movf	(efgtoa@u+2)^(0+128),w
 11453     031D  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 11454     031E  0849               	movf	(efgtoa@u+1)^(0+128),w
 11455     031F  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 11456     0320  0848               	movf	efgtoa@u^(0+128),w
 11457     0321  00B3               	movwf	efgtoa@ou^(0+128)
 11458                           
 11459                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11460     0322  2C1F               	goto	l3343
 11461     0323                     l3333:
 11462                           
 11463                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 11464     0323  1683               	bsf	3,5	;RP0=1, select bank1
 11465     0324  1303               	bcf	3,6	;RP1=0, select bank1
 11466     0325  084B               	movf	(efgtoa@u+3)^(0+128),w
 11467     0326  00F3               	movwf	___fldiv@a+3
 11468     0327  084A               	movf	(efgtoa@u+2)^(0+128),w
 11469     0328  00F2               	movwf	___fldiv@a+2
 11470     0329  0849               	movf	(efgtoa@u+1)^(0+128),w
 11471     032A  00F1               	movwf	___fldiv@a+1
 11472     032B  0848               	movf	efgtoa@u^(0+128),w
 11473     032C  00F0               	movwf	___fldiv@a
 11474     032D  083C               	movf	(efgtoa@h+3)^(0+128),w
 11475     032E  00F7               	movwf	___fldiv@b+3
 11476     032F  083B               	movf	(efgtoa@h+2)^(0+128),w
 11477     0330  00F6               	movwf	___fldiv@b+2
 11478     0331  083A               	movf	(efgtoa@h+1)^(0+128),w
 11479     0332  00F5               	movwf	___fldiv@b+1
 11480     0333  0839               	movf	efgtoa@h^(0+128),w
 11481     0334  00F4               	movwf	___fldiv@b
 11482     0335  120A  158A  2092  120A  118A  	fcall	___fldiv
 11483     033A  0873               	movf	?___fldiv+3,w
 11484     033B  1283               	bcf	3,5	;RP0=0, select bank0
 11485     033C  1303               	bcf	3,6	;RP1=0, select bank0
 11486     033D  00B0               	movwf	floorf@x+3
 11487     033E  0872               	movf	?___fldiv+2,w
 11488     033F  00AF               	movwf	floorf@x+2
 11489     0340  0871               	movf	?___fldiv+1,w
 11490     0341  00AE               	movwf	floorf@x+1
 11491     0342  0870               	movf	?___fldiv,w
 11492     0343  00AD               	movwf	floorf@x
 11493     0344  160A  118A  24C6  120A  118A  	fcall	_floorf
 11494     0349  1283               	bcf	3,5	;RP0=0, select bank0
 11495     034A  1303               	bcf	3,6	;RP1=0, select bank0
 11496     034B  0830               	movf	?_floorf+3,w
 11497     034C  1683               	bsf	3,5	;RP0=1, select bank1
 11498     034D  1303               	bcf	3,6	;RP1=0, select bank1
 11499     034E  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11500     034F  1283               	bcf	3,5	;RP0=0, select bank0
 11501     0350  1303               	bcf	3,6	;RP1=0, select bank0
 11502     0351  082F               	movf	?_floorf+2,w
 11503     0352  1683               	bsf	3,5	;RP0=1, select bank1
 11504     0353  1303               	bcf	3,6	;RP1=0, select bank1
 11505     0354  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11506     0355  1283               	bcf	3,5	;RP0=0, select bank0
 11507     0356  1303               	bcf	3,6	;RP1=0, select bank0
 11508     0357  082E               	movf	?_floorf+1,w
 11509     0358  1683               	bsf	3,5	;RP0=1, select bank1
 11510     0359  1303               	bcf	3,6	;RP1=0, select bank1
 11511     035A  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11512     035B  1283               	bcf	3,5	;RP0=0, select bank0
 11513     035C  1303               	bcf	3,6	;RP1=0, select bank0
 11514     035D  082D               	movf	?_floorf,w
 11515     035E  1683               	bsf	3,5	;RP0=1, select bank1
 11516     035F  1303               	bcf	3,6	;RP1=0, select bank1
 11517     0360  00BD               	movwf	efgtoa@l^(0+128)
 11518     0361                     l3335:
 11519                           
 11520                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 11521     0361  0840               	movf	(efgtoa@l+3)^(0+128),w
 11522     0362  1283               	bcf	3,5	;RP0=0, select bank0
 11523     0363  1303               	bcf	3,6	;RP1=0, select bank0
 11524     0364  00BD               	movwf	___fltol@f1+3
 11525     0365  1683               	bsf	3,5	;RP0=1, select bank1
 11526     0366  1303               	bcf	3,6	;RP1=0, select bank1
 11527     0367  083F               	movf	(efgtoa@l+2)^(0+128),w
 11528     0368  1283               	bcf	3,5	;RP0=0, select bank0
 11529     0369  1303               	bcf	3,6	;RP1=0, select bank0
 11530     036A  00BC               	movwf	___fltol@f1+2
 11531     036B  1683               	bsf	3,5	;RP0=1, select bank1
 11532     036C  1303               	bcf	3,6	;RP1=0, select bank1
 11533     036D  083E               	movf	(efgtoa@l+1)^(0+128),w
 11534     036E  1283               	bcf	3,5	;RP0=0, select bank0
 11535     036F  1303               	bcf	3,6	;RP1=0, select bank0
 11536     0370  00BB               	movwf	___fltol@f1+1
 11537     0371  1683               	bsf	3,5	;RP0=1, select bank1
 11538     0372  1303               	bcf	3,6	;RP1=0, select bank1
 11539     0373  083D               	movf	efgtoa@l^(0+128),w
 11540     0374  1283               	bcf	3,5	;RP0=0, select bank0
 11541     0375  1303               	bcf	3,6	;RP1=0, select bank0
 11542     0376  00BA               	movwf	___fltol@f1
 11543     0377  160A  118A  2119  120A  118A  	fcall	___fltol
 11544     037C  1283               	bcf	3,5	;RP0=0, select bank0
 11545     037D  1303               	bcf	3,6	;RP1=0, select bank0
 11546     037E  083B               	movf	?___fltol+1,w
 11547     037F  1683               	bsf	3,5	;RP0=1, select bank1
 11548     0380  1303               	bcf	3,6	;RP1=0, select bank1
 11549     0381  00AC               	movwf	(efgtoa@d+1)^(0+128)
 11550     0382  1283               	bcf	3,5	;RP0=0, select bank0
 11551     0383  1303               	bcf	3,6	;RP1=0, select bank0
 11552     0384  083A               	movf	?___fltol,w
 11553     0385  1683               	bsf	3,5	;RP0=1, select bank1
 11554     0386  1303               	bcf	3,6	;RP1=0, select bank1
 11555     0387  00AB               	movwf	efgtoa@d^(0+128)
 11556     0388                     l3337:
 11557                           
 11558                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 11559     0388  084B               	movf	(efgtoa@u+3)^(0+128),w
 11560     0389  1283               	bcf	3,5	;RP0=0, select bank0
 11561     038A  1303               	bcf	3,6	;RP1=0, select bank0
 11562     038B  00A7               	movwf	___flmul@a+3
 11563     038C  1683               	bsf	3,5	;RP0=1, select bank1
 11564     038D  1303               	bcf	3,6	;RP1=0, select bank1
 11565     038E  084A               	movf	(efgtoa@u+2)^(0+128),w
 11566     038F  1283               	bcf	3,5	;RP0=0, select bank0
 11567     0390  1303               	bcf	3,6	;RP1=0, select bank0
 11568     0391  00A6               	movwf	___flmul@a+2
 11569     0392  1683               	bsf	3,5	;RP0=1, select bank1
 11570     0393  1303               	bcf	3,6	;RP1=0, select bank1
 11571     0394  0849               	movf	(efgtoa@u+1)^(0+128),w
 11572     0395  1283               	bcf	3,5	;RP0=0, select bank0
 11573     0396  1303               	bcf	3,6	;RP1=0, select bank0
 11574     0397  00A5               	movwf	___flmul@a+1
 11575     0398  1683               	bsf	3,5	;RP0=1, select bank1
 11576     0399  1303               	bcf	3,6	;RP1=0, select bank1
 11577     039A  0848               	movf	efgtoa@u^(0+128),w
 11578     039B  1283               	bcf	3,5	;RP0=0, select bank0
 11579     039C  1303               	bcf	3,6	;RP1=0, select bank0
 11580     039D  00A4               	movwf	___flmul@a
 11581     039E  1683               	bsf	3,5	;RP0=1, select bank1
 11582     039F  1303               	bcf	3,6	;RP1=0, select bank1
 11583     03A0  0840               	movf	(efgtoa@l+3)^(0+128),w
 11584     03A1  1283               	bcf	3,5	;RP0=0, select bank0
 11585     03A2  1303               	bcf	3,6	;RP1=0, select bank0
 11586     03A3  00A3               	movwf	___flmul@b+3
 11587     03A4  1683               	bsf	3,5	;RP0=1, select bank1
 11588     03A5  1303               	bcf	3,6	;RP1=0, select bank1
 11589     03A6  083F               	movf	(efgtoa@l+2)^(0+128),w
 11590     03A7  1283               	bcf	3,5	;RP0=0, select bank0
 11591     03A8  1303               	bcf	3,6	;RP1=0, select bank0
 11592     03A9  00A2               	movwf	___flmul@b+2
 11593     03AA  1683               	bsf	3,5	;RP0=1, select bank1
 11594     03AB  1303               	bcf	3,6	;RP1=0, select bank1
 11595     03AC  083E               	movf	(efgtoa@l+1)^(0+128),w
 11596     03AD  1283               	bcf	3,5	;RP0=0, select bank0
 11597     03AE  1303               	bcf	3,6	;RP1=0, select bank0
 11598     03AF  00A1               	movwf	___flmul@b+1
 11599     03B0  1683               	bsf	3,5	;RP0=1, select bank1
 11600     03B1  1303               	bcf	3,6	;RP1=0, select bank1
 11601     03B2  083D               	movf	efgtoa@l^(0+128),w
 11602     03B3  1283               	bcf	3,5	;RP0=0, select bank0
 11603     03B4  1303               	bcf	3,6	;RP1=0, select bank0
 11604     03B5  00A0               	movwf	___flmul@b
 11605     03B6  120A  158A  24BE  120A  118A  	fcall	___flmul
 11606     03BB  1283               	bcf	3,5	;RP0=0, select bank0
 11607     03BC  1303               	bcf	3,6	;RP1=0, select bank0
 11608     03BD  0823               	movf	?___flmul+3,w
 11609     03BE  00BD               	movwf	___flsub@a+3
 11610     03BF  0822               	movf	?___flmul+2,w
 11611     03C0  00BC               	movwf	___flsub@a+2
 11612     03C1  0821               	movf	?___flmul+1,w
 11613     03C2  00BB               	movwf	___flsub@a+1
 11614     03C3  0820               	movf	?___flmul,w
 11615     03C4  00BA               	movwf	___flsub@a
 11616     03C5  1683               	bsf	3,5	;RP0=1, select bank1
 11617     03C6  1303               	bcf	3,6	;RP1=0, select bank1
 11618     03C7  083C               	movf	(efgtoa@h+3)^(0+128),w
 11619     03C8  1283               	bcf	3,5	;RP0=0, select bank0
 11620     03C9  1303               	bcf	3,6	;RP1=0, select bank0
 11621     03CA  00C1               	movwf	___flsub@b+3
 11622     03CB  1683               	bsf	3,5	;RP0=1, select bank1
 11623     03CC  1303               	bcf	3,6	;RP1=0, select bank1
 11624     03CD  083B               	movf	(efgtoa@h+2)^(0+128),w
 11625     03CE  1283               	bcf	3,5	;RP0=0, select bank0
 11626     03CF  1303               	bcf	3,6	;RP1=0, select bank0
 11627     03D0  00C0               	movwf	___flsub@b+2
 11628     03D1  1683               	bsf	3,5	;RP0=1, select bank1
 11629     03D2  1303               	bcf	3,6	;RP1=0, select bank1
 11630     03D3  083A               	movf	(efgtoa@h+1)^(0+128),w
 11631     03D4  1283               	bcf	3,5	;RP0=0, select bank0
 11632     03D5  1303               	bcf	3,6	;RP1=0, select bank0
 11633     03D6  00BF               	movwf	___flsub@b+1
 11634     03D7  1683               	bsf	3,5	;RP0=1, select bank1
 11635     03D8  1303               	bcf	3,6	;RP1=0, select bank1
 11636     03D9  0839               	movf	efgtoa@h^(0+128),w
 11637     03DA  1283               	bcf	3,5	;RP0=0, select bank0
 11638     03DB  1303               	bcf	3,6	;RP1=0, select bank0
 11639     03DC  00BE               	movwf	___flsub@b
 11640     03DD  160A  158A  251E  120A  118A  	fcall	___flsub
 11641     03E2  1283               	bcf	3,5	;RP0=0, select bank0
 11642     03E3  1303               	bcf	3,6	;RP1=0, select bank0
 11643     03E4  083D               	movf	?___flsub+3,w
 11644     03E5  1683               	bsf	3,5	;RP0=1, select bank1
 11645     03E6  1303               	bcf	3,6	;RP1=0, select bank1
 11646     03E7  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11647     03E8  1283               	bcf	3,5	;RP0=0, select bank0
 11648     03E9  1303               	bcf	3,6	;RP1=0, select bank0
 11649     03EA  083C               	movf	?___flsub+2,w
 11650     03EB  1683               	bsf	3,5	;RP0=1, select bank1
 11651     03EC  1303               	bcf	3,6	;RP1=0, select bank1
 11652     03ED  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11653     03EE  1283               	bcf	3,5	;RP0=0, select bank0
 11654     03EF  1303               	bcf	3,6	;RP1=0, select bank0
 11655     03F0  083B               	movf	?___flsub+1,w
 11656     03F1  1683               	bsf	3,5	;RP0=1, select bank1
 11657     03F2  1303               	bcf	3,6	;RP1=0, select bank1
 11658     03F3  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11659     03F4  1283               	bcf	3,5	;RP0=0, select bank0
 11660     03F5  1303               	bcf	3,6	;RP1=0, select bank0
 11661     03F6  083A               	movf	?___flsub,w
 11662     03F7  1683               	bsf	3,5	;RP0=1, select bank1
 11663     03F8  1303               	bcf	3,6	;RP1=0, select bank1
 11664     03F9  00B9               	movwf	efgtoa@h^(0+128)
 11665     03FA                     l3339:
 11666                           
 11667                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 11668     03FA  3041               	movlw	65
 11669     03FB  00F3               	movwf	___fldiv@a+3
 11670     03FC  3020               	movlw	32
 11671     03FD  00F2               	movwf	___fldiv@a+2
 11672     03FE  3000               	movlw	0
 11673     03FF  00F1               	movwf	___fldiv@a+1
 11674     0400  3000               	movlw	0
 11675     0401  00F0               	movwf	___fldiv@a
 11676     0402  084B               	movf	(efgtoa@u+3)^(0+128),w
 11677     0403  00F7               	movwf	___fldiv@b+3
 11678     0404  084A               	movf	(efgtoa@u+2)^(0+128),w
 11679     0405  00F6               	movwf	___fldiv@b+2
 11680     0406  0849               	movf	(efgtoa@u+1)^(0+128),w
 11681     0407  00F5               	movwf	___fldiv@b+1
 11682     0408  0848               	movf	efgtoa@u^(0+128),w
 11683     0409  00F4               	movwf	___fldiv@b
 11684     040A  120A  158A  2092  120A  118A  	fcall	___fldiv
 11685     040F  0873               	movf	?___fldiv+3,w
 11686     0410  1683               	bsf	3,5	;RP0=1, select bank1
 11687     0411  1303               	bcf	3,6	;RP1=0, select bank1
 11688     0412  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11689     0413  0872               	movf	?___fldiv+2,w
 11690     0414  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11691     0415  0871               	movf	?___fldiv+1,w
 11692     0416  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11693     0417  0870               	movf	?___fldiv,w
 11694     0418  00C8               	movwf	efgtoa@u^(0+128)
 11695     0419                     l3341:
 11696                           
 11697                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
 11698     0419  3001               	movlw	1
 11699     041A  07B7               	addwf	efgtoa@i^(0+128),f
 11700     041B  1803               	skipnc
 11701     041C  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 11702     041D  3000               	movlw	0
 11703     041E  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 11704     041F                     l3343:
 11705                           
 11706                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11707     041F  0838               	movf	(efgtoa@i+1)^(0+128),w
 11708     0420  3A80               	xorlw	128
 11709     0421  1283               	bcf	3,5	;RP0=0, select bank0
 11710     0422  1303               	bcf	3,6	;RP1=0, select bank0
 11711     0423  00CD               	movwf	??_efgtoa
 11712     0424  1683               	bsf	3,5	;RP0=1, select bank1
 11713     0425  1303               	bcf	3,6	;RP1=0, select bank1
 11714     0426  082E               	movf	(efgtoa@m+1)^(0+128),w
 11715     0427  3A80               	xorlw	128
 11716     0428  1283               	bcf	3,5	;RP0=0, select bank0
 11717     0429  1303               	bcf	3,6	;RP1=0, select bank0
 11718     042A  024D               	subwf	??_efgtoa,w
 11719     042B  1D03               	skipz
 11720     042C  2C31               	goto	u4565
 11721     042D  1683               	bsf	3,5	;RP0=1, select bank1
 11722     042E  1303               	bcf	3,6	;RP1=0, select bank1
 11723     042F  082D               	movf	efgtoa@m^(0+128),w
 11724     0430  0237               	subwf	efgtoa@i^(0+128),w
 11725     0431                     u4565:
 11726     0431  1C03               	skipc
 11727     0432  2C34               	goto	u4561
 11728     0433  2C35               	goto	u4560
 11729     0434                     u4561:
 11730     0434  2B23               	goto	l3333
 11731     0435                     u4560:
 11732     0435                     l3345:
 11733                           
 11734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 11735     0435  3040               	movlw	64
 11736     0436  1283               	bcf	3,5	;RP0=0, select bank0
 11737     0437  1303               	bcf	3,6	;RP1=0, select bank0
 11738     0438  00A3               	movwf	___flmul@b+3
 11739     0439  30A0               	movlw	160
 11740     043A  00A2               	movwf	___flmul@b+2
 11741     043B  3000               	movlw	0
 11742     043C  00A1               	movwf	___flmul@b+1
 11743     043D  3000               	movlw	0
 11744     043E  00A0               	movwf	___flmul@b
 11745     043F  1683               	bsf	3,5	;RP0=1, select bank1
 11746     0440  1303               	bcf	3,6	;RP1=0, select bank1
 11747     0441  084B               	movf	(efgtoa@u+3)^(0+128),w
 11748     0442  1283               	bcf	3,5	;RP0=0, select bank0
 11749     0443  1303               	bcf	3,6	;RP1=0, select bank0
 11750     0444  00A7               	movwf	___flmul@a+3
 11751     0445  1683               	bsf	3,5	;RP0=1, select bank1
 11752     0446  1303               	bcf	3,6	;RP1=0, select bank1
 11753     0447  084A               	movf	(efgtoa@u+2)^(0+128),w
 11754     0448  1283               	bcf	3,5	;RP0=0, select bank0
 11755     0449  1303               	bcf	3,6	;RP1=0, select bank0
 11756     044A  00A6               	movwf	___flmul@a+2
 11757     044B  1683               	bsf	3,5	;RP0=1, select bank1
 11758     044C  1303               	bcf	3,6	;RP1=0, select bank1
 11759     044D  0849               	movf	(efgtoa@u+1)^(0+128),w
 11760     044E  1283               	bcf	3,5	;RP0=0, select bank0
 11761     044F  1303               	bcf	3,6	;RP1=0, select bank0
 11762     0450  00A5               	movwf	___flmul@a+1
 11763     0451  1683               	bsf	3,5	;RP0=1, select bank1
 11764     0452  1303               	bcf	3,6	;RP1=0, select bank1
 11765     0453  0848               	movf	efgtoa@u^(0+128),w
 11766     0454  1283               	bcf	3,5	;RP0=0, select bank0
 11767     0455  1303               	bcf	3,6	;RP1=0, select bank0
 11768     0456  00A4               	movwf	___flmul@a
 11769     0457  120A  158A  24BE  120A  118A  	fcall	___flmul
 11770     045C  1283               	bcf	3,5	;RP0=0, select bank0
 11771     045D  1303               	bcf	3,6	;RP1=0, select bank0
 11772     045E  0823               	movf	?___flmul+3,w
 11773     045F  1683               	bsf	3,5	;RP0=1, select bank1
 11774     0460  1303               	bcf	3,6	;RP1=0, select bank1
 11775     0461  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11776     0462  1283               	bcf	3,5	;RP0=0, select bank0
 11777     0463  1303               	bcf	3,6	;RP1=0, select bank0
 11778     0464  0822               	movf	?___flmul+2,w
 11779     0465  1683               	bsf	3,5	;RP0=1, select bank1
 11780     0466  1303               	bcf	3,6	;RP1=0, select bank1
 11781     0467  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11782     0468  1283               	bcf	3,5	;RP0=0, select bank0
 11783     0469  1303               	bcf	3,6	;RP1=0, select bank0
 11784     046A  0821               	movf	?___flmul+1,w
 11785     046B  1683               	bsf	3,5	;RP0=1, select bank1
 11786     046C  1303               	bcf	3,6	;RP1=0, select bank1
 11787     046D  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11788     046E  1283               	bcf	3,5	;RP0=0, select bank0
 11789     046F  1303               	bcf	3,6	;RP1=0, select bank0
 11790     0470  0820               	movf	?___flmul,w
 11791     0471  1683               	bsf	3,5	;RP0=1, select bank1
 11792     0472  1303               	bcf	3,6	;RP1=0, select bank1
 11793     0473  00BD               	movwf	efgtoa@l^(0+128)
 11794     0474                     l3347:
 11795                           
 11796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 11797     0474  083C               	movf	(efgtoa@h+3)^(0+128),w
 11798     0475  1283               	bcf	3,5	;RP0=0, select bank0
 11799     0476  1303               	bcf	3,6	;RP1=0, select bank0
 11800     0477  00BD               	movwf	___flge@ff1+3
 11801     0478  1683               	bsf	3,5	;RP0=1, select bank1
 11802     0479  1303               	bcf	3,6	;RP1=0, select bank1
 11803     047A  083B               	movf	(efgtoa@h+2)^(0+128),w
 11804     047B  1283               	bcf	3,5	;RP0=0, select bank0
 11805     047C  1303               	bcf	3,6	;RP1=0, select bank0
 11806     047D  00BC               	movwf	___flge@ff1+2
 11807     047E  1683               	bsf	3,5	;RP0=1, select bank1
 11808     047F  1303               	bcf	3,6	;RP1=0, select bank1
 11809     0480  083A               	movf	(efgtoa@h+1)^(0+128),w
 11810     0481  1283               	bcf	3,5	;RP0=0, select bank0
 11811     0482  1303               	bcf	3,6	;RP1=0, select bank0
 11812     0483  00BB               	movwf	___flge@ff1+1
 11813     0484  1683               	bsf	3,5	;RP0=1, select bank1
 11814     0485  1303               	bcf	3,6	;RP1=0, select bank1
 11815     0486  0839               	movf	efgtoa@h^(0+128),w
 11816     0487  1283               	bcf	3,5	;RP0=0, select bank0
 11817     0488  1303               	bcf	3,6	;RP1=0, select bank0
 11818     0489  00BA               	movwf	___flge@ff1
 11819     048A  1683               	bsf	3,5	;RP0=1, select bank1
 11820     048B  1303               	bcf	3,6	;RP1=0, select bank1
 11821     048C  0840               	movf	(efgtoa@l+3)^(0+128),w
 11822     048D  1283               	bcf	3,5	;RP0=0, select bank0
 11823     048E  1303               	bcf	3,6	;RP1=0, select bank0
 11824     048F  00C1               	movwf	___flge@ff2+3
 11825     0490  1683               	bsf	3,5	;RP0=1, select bank1
 11826     0491  1303               	bcf	3,6	;RP1=0, select bank1
 11827     0492  083F               	movf	(efgtoa@l+2)^(0+128),w
 11828     0493  1283               	bcf	3,5	;RP0=0, select bank0
 11829     0494  1303               	bcf	3,6	;RP1=0, select bank0
 11830     0495  00C0               	movwf	___flge@ff2+2
 11831     0496  1683               	bsf	3,5	;RP0=1, select bank1
 11832     0497  1303               	bcf	3,6	;RP1=0, select bank1
 11833     0498  083E               	movf	(efgtoa@l+1)^(0+128),w
 11834     0499  1283               	bcf	3,5	;RP0=0, select bank0
 11835     049A  1303               	bcf	3,6	;RP1=0, select bank0
 11836     049B  00BF               	movwf	___flge@ff2+1
 11837     049C  1683               	bsf	3,5	;RP0=1, select bank1
 11838     049D  1303               	bcf	3,6	;RP1=0, select bank1
 11839     049E  083D               	movf	efgtoa@l^(0+128),w
 11840     049F  1283               	bcf	3,5	;RP0=0, select bank0
 11841     04A0  1303               	bcf	3,6	;RP1=0, select bank0
 11842     04A1  00BE               	movwf	___flge@ff2
 11843     04A2  160A  118A  22C2  120A  118A  	fcall	___flge
 11844     04A7  1803               	btfsc	3,0
 11845     04A8  2CAA               	goto	u4571
 11846     04A9  2CAB               	goto	u4570
 11847     04AA                     u4571:
 11848     04AA  2CB6               	goto	l3351
 11849     04AB                     u4570:
 11850     04AB                     l3349:
 11851                           
 11852                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 11853     04AB  3000               	movlw	0
 11854     04AC  1683               	bsf	3,5	;RP0=1, select bank1
 11855     04AD  1303               	bcf	3,6	;RP1=0, select bank1
 11856     04AE  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11857     04AF  3000               	movlw	0
 11858     04B0  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11859     04B1  3000               	movlw	0
 11860     04B2  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11861     04B3  3000               	movlw	0
 11862     04B4  00BD               	movwf	efgtoa@l^(0+128)
 11863                           
 11864                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
 11865     04B5  2CDF               	goto	l3357
 11866     04B6                     l3351:
 11867                           
 11868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 11869     04B6  1683               	bsf	3,5	;RP0=1, select bank1
 11870     04B7  1303               	bcf	3,6	;RP1=0, select bank1
 11871     04B8  083C               	movf	(efgtoa@h+3)^(0+128),w
 11872     04B9  00F3               	movwf	___fleq@ff1+3
 11873     04BA  083B               	movf	(efgtoa@h+2)^(0+128),w
 11874     04BB  00F2               	movwf	___fleq@ff1+2
 11875     04BC  083A               	movf	(efgtoa@h+1)^(0+128),w
 11876     04BD  00F1               	movwf	___fleq@ff1+1
 11877     04BE  0839               	movf	efgtoa@h^(0+128),w
 11878     04BF  00F0               	movwf	___fleq@ff1
 11879     04C0  0840               	movf	(efgtoa@l+3)^(0+128),w
 11880     04C1  00F7               	movwf	___fleq@ff2+3
 11881     04C2  083F               	movf	(efgtoa@l+2)^(0+128),w
 11882     04C3  00F6               	movwf	___fleq@ff2+2
 11883     04C4  083E               	movf	(efgtoa@l+1)^(0+128),w
 11884     04C5  00F5               	movwf	___fleq@ff2+1
 11885     04C6  083D               	movf	efgtoa@l^(0+128),w
 11886     04C7  00F4               	movwf	___fleq@ff2
 11887     04C8  160A  158A  2761  120A  118A  	fcall	___fleq
 11888     04CD  1C03               	btfss	3,0
 11889     04CE  2CD0               	goto	u4581
 11890     04CF  2CD1               	goto	u4580
 11891     04D0                     u4581:
 11892     04D0  2CDF               	goto	l3357
 11893     04D1                     u4580:
 11894     04D1                     l3353:
 11895     04D1  1683               	bsf	3,5	;RP0=1, select bank1
 11896     04D2  1303               	bcf	3,6	;RP1=0, select bank1
 11897     04D3  182B               	btfsc	efgtoa@d^(0+128),0
 11898     04D4  2CD6               	goto	u4591
 11899     04D5  2CD7               	goto	u4590
 11900     04D6                     u4591:
 11901     04D6  2CDF               	goto	l3357
 11902     04D7                     u4590:
 11903     04D7                     l3355:
 11904                           
 11905                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 11906     04D7  3000               	movlw	0
 11907     04D8  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11908     04D9  3000               	movlw	0
 11909     04DA  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11910     04DB  3000               	movlw	0
 11911     04DC  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11912     04DD  3000               	movlw	0
 11913     04DE  00BD               	movwf	efgtoa@l^(0+128)
 11914     04DF                     l3357:
 11915                           
 11916                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 11917     04DF  1683               	bsf	3,5	;RP0=1, select bank1
 11918     04E0  1303               	bcf	3,6	;RP1=0, select bank1
 11919     04E1  0840               	movf	(efgtoa@l+3)^(0+128),w
 11920     04E2  00F3               	movwf	___fladd@b+3
 11921     04E3  083F               	movf	(efgtoa@l+2)^(0+128),w
 11922     04E4  00F2               	movwf	___fladd@b+2
 11923     04E5  083E               	movf	(efgtoa@l+1)^(0+128),w
 11924     04E6  00F1               	movwf	___fladd@b+1
 11925     04E7  083D               	movf	efgtoa@l^(0+128),w
 11926     04E8  00F0               	movwf	___fladd@b
 11927     04E9  0847               	movf	(efgtoa@g+3)^(0+128),w
 11928     04EA  00F7               	movwf	___fladd@a+3
 11929     04EB  0846               	movf	(efgtoa@g+2)^(0+128),w
 11930     04EC  00F6               	movwf	___fladd@a+2
 11931     04ED  0845               	movf	(efgtoa@g+1)^(0+128),w
 11932     04EE  00F5               	movwf	___fladd@a+1
 11933     04EF  0844               	movf	efgtoa@g^(0+128),w
 11934     04F0  00F4               	movwf	___fladd@a
 11935     04F1  120A  158A  2262  120A  118A  	fcall	___fladd
 11936     04F6  0873               	movf	?___fladd+3,w
 11937     04F7  1683               	bsf	3,5	;RP0=1, select bank1
 11938     04F8  1303               	bcf	3,6	;RP1=0, select bank1
 11939     04F9  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11940     04FA  0872               	movf	?___fladd+2,w
 11941     04FB  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11942     04FC  0871               	movf	?___fladd+1,w
 11943     04FD  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11944     04FE  0870               	movf	?___fladd,w
 11945     04FF  00B9               	movwf	efgtoa@h^(0+128)
 11946     0500                     l3359:
 11947                           
 11948                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 11949     0500  083C               	movf	(efgtoa@h+3)^(0+128),w
 11950     0501  1283               	bcf	3,5	;RP0=0, select bank0
 11951     0502  1303               	bcf	3,6	;RP1=0, select bank0
 11952     0503  00BD               	movwf	___flge@ff1+3
 11953     0504  1683               	bsf	3,5	;RP0=1, select bank1
 11954     0505  1303               	bcf	3,6	;RP1=0, select bank1
 11955     0506  083B               	movf	(efgtoa@h+2)^(0+128),w
 11956     0507  1283               	bcf	3,5	;RP0=0, select bank0
 11957     0508  1303               	bcf	3,6	;RP1=0, select bank0
 11958     0509  00BC               	movwf	___flge@ff1+2
 11959     050A  1683               	bsf	3,5	;RP0=1, select bank1
 11960     050B  1303               	bcf	3,6	;RP1=0, select bank1
 11961     050C  083A               	movf	(efgtoa@h+1)^(0+128),w
 11962     050D  1283               	bcf	3,5	;RP0=0, select bank0
 11963     050E  1303               	bcf	3,6	;RP1=0, select bank0
 11964     050F  00BB               	movwf	___flge@ff1+1
 11965     0510  1683               	bsf	3,5	;RP0=1, select bank1
 11966     0511  1303               	bcf	3,6	;RP1=0, select bank1
 11967     0512  0839               	movf	efgtoa@h^(0+128),w
 11968     0513  1283               	bcf	3,5	;RP0=0, select bank0
 11969     0514  1303               	bcf	3,6	;RP1=0, select bank0
 11970     0515  00BA               	movwf	___flge@ff1
 11971     0516  3041               	movlw	65
 11972     0517  00A3               	movwf	___flmul@b+3
 11973     0518  3020               	movlw	32
 11974     0519  00A2               	movwf	___flmul@b+2
 11975     051A  3000               	movlw	0
 11976     051B  00A1               	movwf	___flmul@b+1
 11977     051C  3000               	movlw	0
 11978     051D  00A0               	movwf	___flmul@b
 11979     051E  1683               	bsf	3,5	;RP0=1, select bank1
 11980     051F  1303               	bcf	3,6	;RP1=0, select bank1
 11981     0520  0836               	movf	(efgtoa@ou+3)^(0+128),w
 11982     0521  1283               	bcf	3,5	;RP0=0, select bank0
 11983     0522  1303               	bcf	3,6	;RP1=0, select bank0
 11984     0523  00A7               	movwf	___flmul@a+3
 11985     0524  1683               	bsf	3,5	;RP0=1, select bank1
 11986     0525  1303               	bcf	3,6	;RP1=0, select bank1
 11987     0526  0835               	movf	(efgtoa@ou+2)^(0+128),w
 11988     0527  1283               	bcf	3,5	;RP0=0, select bank0
 11989     0528  1303               	bcf	3,6	;RP1=0, select bank0
 11990     0529  00A6               	movwf	___flmul@a+2
 11991     052A  1683               	bsf	3,5	;RP0=1, select bank1
 11992     052B  1303               	bcf	3,6	;RP1=0, select bank1
 11993     052C  0834               	movf	(efgtoa@ou+1)^(0+128),w
 11994     052D  1283               	bcf	3,5	;RP0=0, select bank0
 11995     052E  1303               	bcf	3,6	;RP1=0, select bank0
 11996     052F  00A5               	movwf	___flmul@a+1
 11997     0530  1683               	bsf	3,5	;RP0=1, select bank1
 11998     0531  1303               	bcf	3,6	;RP1=0, select bank1
 11999     0532  0833               	movf	efgtoa@ou^(0+128),w
 12000     0533  1283               	bcf	3,5	;RP0=0, select bank0
 12001     0534  1303               	bcf	3,6	;RP1=0, select bank0
 12002     0535  00A4               	movwf	___flmul@a
 12003     0536  120A  158A  24BE  120A  118A  	fcall	___flmul
 12004     053B  1283               	bcf	3,5	;RP0=0, select bank0
 12005     053C  1303               	bcf	3,6	;RP1=0, select bank0
 12006     053D  0823               	movf	?___flmul+3,w
 12007     053E  00C1               	movwf	___flge@ff2+3
 12008     053F  0822               	movf	?___flmul+2,w
 12009     0540  00C0               	movwf	___flge@ff2+2
 12010     0541  0821               	movf	?___flmul+1,w
 12011     0542  00BF               	movwf	___flge@ff2+1
 12012     0543  0820               	movf	?___flmul,w
 12013     0544  00BE               	movwf	___flge@ff2
 12014     0545  160A  118A  22C2  120A  118A  	fcall	___flge
 12015     054A  1C03               	btfss	3,0
 12016     054B  2D4D               	goto	u4601
 12017     054C  2D4E               	goto	u4600
 12018     054D                     u4601:
 12019     054D  2DA1               	goto	l909
 12020     054E                     u4600:
 12021     054E                     l3361:
 12022                           
 12023                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
 12024     054E  3001               	movlw	1
 12025     054F  1683               	bsf	3,5	;RP0=1, select bank1
 12026     0550  1303               	bcf	3,6	;RP1=0, select bank1
 12027     0551  07AF               	addwf	efgtoa@e^(0+128),f
 12028     0552  1803               	skipnc
 12029     0553  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 12030     0554  3000               	movlw	0
 12031     0555  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 12032     0556                     l3363:
 12033                           
 12034                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12035     0556  3041               	movlw	65
 12036     0557  1283               	bcf	3,5	;RP0=0, select bank0
 12037     0558  1303               	bcf	3,6	;RP1=0, select bank0
 12038     0559  00A3               	movwf	___flmul@b+3
 12039     055A  3020               	movlw	32
 12040     055B  00A2               	movwf	___flmul@b+2
 12041     055C  3000               	movlw	0
 12042     055D  00A1               	movwf	___flmul@b+1
 12043     055E  3000               	movlw	0
 12044     055F  00A0               	movwf	___flmul@b
 12045     0560  1683               	bsf	3,5	;RP0=1, select bank1
 12046     0561  1303               	bcf	3,6	;RP1=0, select bank1
 12047     0562  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12048     0563  1283               	bcf	3,5	;RP0=0, select bank0
 12049     0564  1303               	bcf	3,6	;RP1=0, select bank0
 12050     0565  00A7               	movwf	___flmul@a+3
 12051     0566  1683               	bsf	3,5	;RP0=1, select bank1
 12052     0567  1303               	bcf	3,6	;RP1=0, select bank1
 12053     0568  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12054     0569  1283               	bcf	3,5	;RP0=0, select bank0
 12055     056A  1303               	bcf	3,6	;RP1=0, select bank0
 12056     056B  00A6               	movwf	___flmul@a+2
 12057     056C  1683               	bsf	3,5	;RP0=1, select bank1
 12058     056D  1303               	bcf	3,6	;RP1=0, select bank1
 12059     056E  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12060     056F  1283               	bcf	3,5	;RP0=0, select bank0
 12061     0570  1303               	bcf	3,6	;RP1=0, select bank0
 12062     0571  00A5               	movwf	___flmul@a+1
 12063     0572  1683               	bsf	3,5	;RP0=1, select bank1
 12064     0573  1303               	bcf	3,6	;RP1=0, select bank1
 12065     0574  0833               	movf	efgtoa@ou^(0+128),w
 12066     0575  1283               	bcf	3,5	;RP0=0, select bank0
 12067     0576  1303               	bcf	3,6	;RP1=0, select bank0
 12068     0577  00A4               	movwf	___flmul@a
 12069     0578  120A  158A  24BE  120A  118A  	fcall	___flmul
 12070     057D  1283               	bcf	3,5	;RP0=0, select bank0
 12071     057E  1303               	bcf	3,6	;RP1=0, select bank0
 12072     057F  0823               	movf	?___flmul+3,w
 12073     0580  1683               	bsf	3,5	;RP0=1, select bank1
 12074     0581  1303               	bcf	3,6	;RP1=0, select bank1
 12075     0582  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 12076     0583  1283               	bcf	3,5	;RP0=0, select bank0
 12077     0584  1303               	bcf	3,6	;RP1=0, select bank0
 12078     0585  0822               	movf	?___flmul+2,w
 12079     0586  1683               	bsf	3,5	;RP0=1, select bank1
 12080     0587  1303               	bcf	3,6	;RP1=0, select bank1
 12081     0588  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 12082     0589  1283               	bcf	3,5	;RP0=0, select bank0
 12083     058A  1303               	bcf	3,6	;RP1=0, select bank0
 12084     058B  0821               	movf	?___flmul+1,w
 12085     058C  1683               	bsf	3,5	;RP0=1, select bank1
 12086     058D  1303               	bcf	3,6	;RP1=0, select bank1
 12087     058E  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 12088     058F  1283               	bcf	3,5	;RP0=0, select bank0
 12089     0590  1303               	bcf	3,6	;RP1=0, select bank0
 12090     0591  0820               	movf	?___flmul,w
 12091     0592  1683               	bsf	3,5	;RP0=1, select bank1
 12092     0593  1303               	bcf	3,6	;RP1=0, select bank1
 12093     0594  00B3               	movwf	efgtoa@ou^(0+128)
 12094     0595                     l3365:
 12095                           
 12096                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12097     0595  3066               	movlw	102
 12098     0596  062A               	xorwf	efgtoa@nmode^(0+128),w
 12099     0597  1D03               	btfss	3,2
 12100     0598  2D9A               	goto	u4611
 12101     0599  2D9B               	goto	u4610
 12102     059A                     u4611:
 12103     059A  2DA1               	goto	l909
 12104     059B                     u4610:
 12105     059B                     l3367:
 12106                           
 12107                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
 12108     059B  3001               	movlw	1
 12109     059C  07AD               	addwf	efgtoa@m^(0+128),f
 12110     059D  1803               	skipnc
 12111     059E  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 12112     059F  3000               	movlw	0
 12113     05A0  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 12114     05A1                     l909:	
 12115                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 767:  }
 12116                           
 12117                           
 12118                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12119     05A1  1683               	bsf	3,5	;RP0=1, select bank1
 12120     05A2  1303               	bcf	3,6	;RP1=0, select bank1
 12121     05A3  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12122     05A4  00CB               	movwf	(efgtoa@u+3)^(0+128)
 12123     05A5  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12124     05A6  00CA               	movwf	(efgtoa@u+2)^(0+128)
 12125     05A7  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12126     05A8  00C9               	movwf	(efgtoa@u+1)^(0+128)
 12127     05A9  0833               	movf	efgtoa@ou^(0+128),w
 12128     05AA  00C8               	movwf	efgtoa@u^(0+128)
 12129                           
 12130                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12131     05AB  0830               	movf	(efgtoa@e+1)^(0+128),w
 12132     05AC  00A1               	movwf	(efgtoa@ne+1)^(0+128)
 12133     05AD  082F               	movf	efgtoa@e^(0+128),w
 12134     05AE  00A0               	movwf	efgtoa@ne^(0+128)
 12135     05AF                     l3369:
 12136                           
 12137                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12138     05AF  01A8               	clrf	efgtoa@pp^(0+128)
 12139     05B0                     l3371:
 12140                           
 12141                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12142     05B0  01A4               	clrf	efgtoa@t^(0+128)
 12143     05B1  01A5               	clrf	(efgtoa@t+1)^(0+128)
 12144     05B2                     l3373:
 12145                           
 12146                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12147     05B2  01B7               	clrf	efgtoa@i^(0+128)
 12148     05B3  01B8               	clrf	(efgtoa@i+1)^(0+128)
 12149                           
 12150                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12151     05B4  2F39               	goto	l3417
 12152     05B5                     l3375:
 12153                           
 12154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12155     05B5  1683               	bsf	3,5	;RP0=1, select bank1
 12156     05B6  1303               	bcf	3,6	;RP1=0, select bank1
 12157     05B7  084B               	movf	(efgtoa@u+3)^(0+128),w
 12158     05B8  00F3               	movwf	___fldiv@a+3
 12159     05B9  084A               	movf	(efgtoa@u+2)^(0+128),w
 12160     05BA  00F2               	movwf	___fldiv@a+2
 12161     05BB  0849               	movf	(efgtoa@u+1)^(0+128),w
 12162     05BC  00F1               	movwf	___fldiv@a+1
 12163     05BD  0848               	movf	efgtoa@u^(0+128),w
 12164     05BE  00F0               	movwf	___fldiv@a
 12165     05BF  083C               	movf	(efgtoa@h+3)^(0+128),w
 12166     05C0  00F7               	movwf	___fldiv@b+3
 12167     05C1  083B               	movf	(efgtoa@h+2)^(0+128),w
 12168     05C2  00F6               	movwf	___fldiv@b+2
 12169     05C3  083A               	movf	(efgtoa@h+1)^(0+128),w
 12170     05C4  00F5               	movwf	___fldiv@b+1
 12171     05C5  0839               	movf	efgtoa@h^(0+128),w
 12172     05C6  00F4               	movwf	___fldiv@b
 12173     05C7  120A  158A  2092  120A  118A  	fcall	___fldiv
 12174     05CC  0873               	movf	?___fldiv+3,w
 12175     05CD  1283               	bcf	3,5	;RP0=0, select bank0
 12176     05CE  1303               	bcf	3,6	;RP1=0, select bank0
 12177     05CF  00B0               	movwf	floorf@x+3
 12178     05D0  0872               	movf	?___fldiv+2,w
 12179     05D1  00AF               	movwf	floorf@x+2
 12180     05D2  0871               	movf	?___fldiv+1,w
 12181     05D3  00AE               	movwf	floorf@x+1
 12182     05D4  0870               	movf	?___fldiv,w
 12183     05D5  00AD               	movwf	floorf@x
 12184     05D6  160A  118A  24C6  120A  118A  	fcall	_floorf
 12185     05DB  1283               	bcf	3,5	;RP0=0, select bank0
 12186     05DC  1303               	bcf	3,6	;RP1=0, select bank0
 12187     05DD  0830               	movf	?_floorf+3,w
 12188     05DE  1683               	bsf	3,5	;RP0=1, select bank1
 12189     05DF  1303               	bcf	3,6	;RP1=0, select bank1
 12190     05E0  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12191     05E1  1283               	bcf	3,5	;RP0=0, select bank0
 12192     05E2  1303               	bcf	3,6	;RP1=0, select bank0
 12193     05E3  082F               	movf	?_floorf+2,w
 12194     05E4  1683               	bsf	3,5	;RP0=1, select bank1
 12195     05E5  1303               	bcf	3,6	;RP1=0, select bank1
 12196     05E6  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12197     05E7  1283               	bcf	3,5	;RP0=0, select bank0
 12198     05E8  1303               	bcf	3,6	;RP1=0, select bank0
 12199     05E9  082E               	movf	?_floorf+1,w
 12200     05EA  1683               	bsf	3,5	;RP0=1, select bank1
 12201     05EB  1303               	bcf	3,6	;RP1=0, select bank1
 12202     05EC  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12203     05ED  1283               	bcf	3,5	;RP0=0, select bank0
 12204     05EE  1303               	bcf	3,6	;RP1=0, select bank0
 12205     05EF  082D               	movf	?_floorf,w
 12206     05F0  1683               	bsf	3,5	;RP0=1, select bank1
 12207     05F1  1303               	bcf	3,6	;RP1=0, select bank1
 12208     05F2  00BD               	movwf	efgtoa@l^(0+128)
 12209                           
 12210                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12211     05F3  0840               	movf	(efgtoa@l+3)^(0+128),w
 12212     05F4  1283               	bcf	3,5	;RP0=0, select bank0
 12213     05F5  1303               	bcf	3,6	;RP1=0, select bank0
 12214     05F6  00BD               	movwf	___fltol@f1+3
 12215     05F7  1683               	bsf	3,5	;RP0=1, select bank1
 12216     05F8  1303               	bcf	3,6	;RP1=0, select bank1
 12217     05F9  083F               	movf	(efgtoa@l+2)^(0+128),w
 12218     05FA  1283               	bcf	3,5	;RP0=0, select bank0
 12219     05FB  1303               	bcf	3,6	;RP1=0, select bank0
 12220     05FC  00BC               	movwf	___fltol@f1+2
 12221     05FD  1683               	bsf	3,5	;RP0=1, select bank1
 12222     05FE  1303               	bcf	3,6	;RP1=0, select bank1
 12223     05FF  083E               	movf	(efgtoa@l+1)^(0+128),w
 12224     0600  1283               	bcf	3,5	;RP0=0, select bank0
 12225     0601  1303               	bcf	3,6	;RP1=0, select bank0
 12226     0602  00BB               	movwf	___fltol@f1+1
 12227     0603  1683               	bsf	3,5	;RP0=1, select bank1
 12228     0604  1303               	bcf	3,6	;RP1=0, select bank1
 12229     0605  083D               	movf	efgtoa@l^(0+128),w
 12230     0606  1283               	bcf	3,5	;RP0=0, select bank0
 12231     0607  1303               	bcf	3,6	;RP1=0, select bank0
 12232     0608  00BA               	movwf	___fltol@f1
 12233     0609  160A  118A  2119  120A  118A  	fcall	___fltol
 12234     060E  1283               	bcf	3,5	;RP0=0, select bank0
 12235     060F  1303               	bcf	3,6	;RP1=0, select bank0
 12236     0610  083B               	movf	?___fltol+1,w
 12237     0611  3A80               	xorlw	128
 12238     0612  00FF               	movwf	btemp+1
 12239     0613  3080               	movlw	128
 12240     0614  027F               	subwf	btemp+1,w
 12241     0615  1D03               	skipz
 12242     0616  2E19               	goto	u4625
 12243     0617  300A               	movlw	10
 12244     0618  023A               	subwf	?___fltol,w
 12245     0619                     u4625:
 12246     0619  1803               	skipnc
 12247     061A  2E1C               	goto	u4621
 12248     061B  2E1D               	goto	u4620
 12249     061C                     u4621:
 12250     061C  2E47               	goto	l3379
 12251     061D                     u4620:
 12252     061D                     l3377:
 12253     061D  1683               	bsf	3,5	;RP0=1, select bank1
 12254     061E  1303               	bcf	3,6	;RP1=0, select bank1
 12255     061F  0840               	movf	(efgtoa@l+3)^(0+128),w
 12256     0620  1283               	bcf	3,5	;RP0=0, select bank0
 12257     0621  1303               	bcf	3,6	;RP1=0, select bank0
 12258     0622  00BD               	movwf	___fltol@f1+3
 12259     0623  1683               	bsf	3,5	;RP0=1, select bank1
 12260     0624  1303               	bcf	3,6	;RP1=0, select bank1
 12261     0625  083F               	movf	(efgtoa@l+2)^(0+128),w
 12262     0626  1283               	bcf	3,5	;RP0=0, select bank0
 12263     0627  1303               	bcf	3,6	;RP1=0, select bank0
 12264     0628  00BC               	movwf	___fltol@f1+2
 12265     0629  1683               	bsf	3,5	;RP0=1, select bank1
 12266     062A  1303               	bcf	3,6	;RP1=0, select bank1
 12267     062B  083E               	movf	(efgtoa@l+1)^(0+128),w
 12268     062C  1283               	bcf	3,5	;RP0=0, select bank0
 12269     062D  1303               	bcf	3,6	;RP1=0, select bank0
 12270     062E  00BB               	movwf	___fltol@f1+1
 12271     062F  1683               	bsf	3,5	;RP0=1, select bank1
 12272     0630  1303               	bcf	3,6	;RP1=0, select bank1
 12273     0631  083D               	movf	efgtoa@l^(0+128),w
 12274     0632  1283               	bcf	3,5	;RP0=0, select bank0
 12275     0633  1303               	bcf	3,6	;RP1=0, select bank0
 12276     0634  00BA               	movwf	___fltol@f1
 12277     0635  160A  118A  2119  120A  118A  	fcall	___fltol
 12278     063A  1283               	bcf	3,5	;RP0=0, select bank0
 12279     063B  1303               	bcf	3,6	;RP1=0, select bank0
 12280     063C  083B               	movf	?___fltol+1,w
 12281     063D  1683               	bsf	3,5	;RP0=1, select bank1
 12282     063E  1303               	bcf	3,6	;RP1=0, select bank1
 12283     063F  00AC               	movwf	(efgtoa@d+1)^(0+128)
 12284     0640  1283               	bcf	3,5	;RP0=0, select bank0
 12285     0641  1303               	bcf	3,6	;RP1=0, select bank0
 12286     0642  083A               	movf	?___fltol,w
 12287     0643  1683               	bsf	3,5	;RP0=1, select bank1
 12288     0644  1303               	bcf	3,6	;RP1=0, select bank1
 12289     0645  00AB               	movwf	efgtoa@d^(0+128)
 12290     0646  2E4D               	goto	l3381
 12291     0647                     l3379:
 12292     0647  3009               	movlw	9
 12293     0648  1683               	bsf	3,5	;RP0=1, select bank1
 12294     0649  1303               	bcf	3,6	;RP1=0, select bank1
 12295     064A  00AB               	movwf	efgtoa@d^(0+128)
 12296     064B  3000               	movlw	0
 12297     064C  00AC               	movwf	(efgtoa@d^(0+128)+1)
 12298     064D                     l3381:
 12299                           
 12300                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12301     064D  0828               	movf	efgtoa@pp^(0+128),w
 12302     064E  1D03               	btfss	3,2
 12303     064F  2E51               	goto	u4631
 12304     0650  2E52               	goto	u4630
 12305     0651                     u4631:
 12306     0651  2E83               	goto	l3401
 12307     0652                     u4630:
 12308     0652                     l3383:
 12309     0652  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
 12310     0653  2E55               	goto	u4641
 12311     0654  2E56               	goto	u4640
 12312     0655                     u4641:
 12313     0655  2E83               	goto	l3401
 12314     0656                     u4640:
 12315     0656                     l3385:
 12316                           
 12317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12318     0656  0842               	movf	efgtoa@n^(0+128),w
 12319     0657  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12320     0658  0084               	movwf	4
 12321     0659  302E               	movlw	46
 12322     065A  1783               	bsf	3,7	;select IRP bank2
 12323     065B  0080               	movwf	0
 12324     065C                     l3387:
 12325     065C  3001               	movlw	1
 12326     065D  07C2               	addwf	efgtoa@n^(0+128),f
 12327     065E  1803               	skipnc
 12328     065F  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12329     0660  3000               	movlw	0
 12330     0661  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12331     0662                     l3389:
 12332                           
 12333                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12334     0662  30FF               	movlw	255
 12335     0663  07B1               	addwf	efgtoa@w^(0+128),f
 12336     0664  1803               	skipnc
 12337     0665  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12338     0666  30FF               	movlw	255
 12339     0667  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12340     0668                     l3391:
 12341                           
 12342                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12343     0668  3001               	movlw	1
 12344     0669  00A8               	movwf	efgtoa@pp^(0+128)
 12345     066A  2E83               	goto	l3401
 12346     066B                     l3393:
 12347                           
 12348                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12349     066B  0842               	movf	efgtoa@n^(0+128),w
 12350     066C  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12351     066D  0084               	movwf	4
 12352     066E  3030               	movlw	48
 12353     066F  1783               	bsf	3,7	;select IRP bank2
 12354     0670  0080               	movwf	0
 12355     0671                     l3395:
 12356     0671  3001               	movlw	1
 12357     0672  07C2               	addwf	efgtoa@n^(0+128),f
 12358     0673  1803               	skipnc
 12359     0674  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12360     0675  3000               	movlw	0
 12361     0676  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12362     0677                     l3397:
 12363                           
 12364                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12365     0677  30FF               	movlw	255
 12366     0678  07B1               	addwf	efgtoa@w^(0+128),f
 12367     0679  1803               	skipnc
 12368     067A  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12369     067B  30FF               	movlw	255
 12370     067C  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12371     067D                     l3399:
 12372                           
 12373                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12374     067D  30FF               	movlw	255
 12375     067E  07A4               	addwf	efgtoa@t^(0+128),f
 12376     067F  1803               	skipnc
 12377     0680  0AA5               	incf	(efgtoa@t+1)^(0+128),f
 12378     0681  30FF               	movlw	255
 12379     0682  07A5               	addwf	(efgtoa@t+1)^(0+128),f
 12380     0683                     l3401:
 12381                           
 12382                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12383     0683  0824               	movf	efgtoa@t^(0+128),w
 12384     0684  0425               	iorwf	(efgtoa@t+1)^(0+128),w
 12385     0685  1D03               	btfss	3,2
 12386     0686  2E88               	goto	u4651
 12387     0687  2E89               	goto	u4650
 12388     0688                     u4651:
 12389     0688  2E6B               	goto	l3393
 12390     0689                     u4650:
 12391     0689                     l3403:
 12392                           
 12393                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12394     0689  0842               	movf	efgtoa@n^(0+128),w
 12395     068A  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12396     068B  0084               	movwf	4
 12397     068C  082B               	movf	efgtoa@d^(0+128),w
 12398     068D  3E30               	addlw	48
 12399     068E  1783               	bsf	3,7	;select IRP bank2
 12400     068F  0080               	movwf	0
 12401     0690                     l3405:
 12402     0690  3001               	movlw	1
 12403     0691  07C2               	addwf	efgtoa@n^(0+128),f
 12404     0692  1803               	skipnc
 12405     0693  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12406     0694  3000               	movlw	0
 12407     0695  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12408     0696                     l3407:
 12409                           
 12410                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12411     0696  30FF               	movlw	255
 12412     0697  07B1               	addwf	efgtoa@w^(0+128),f
 12413     0698  1803               	skipnc
 12414     0699  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12415     069A  30FF               	movlw	255
 12416     069B  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12417     069C                     l3409:
 12418                           
 12419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12420     069C  084B               	movf	(efgtoa@u+3)^(0+128),w
 12421     069D  1283               	bcf	3,5	;RP0=0, select bank0
 12422     069E  1303               	bcf	3,6	;RP1=0, select bank0
 12423     069F  00A7               	movwf	___flmul@a+3
 12424     06A0  1683               	bsf	3,5	;RP0=1, select bank1
 12425     06A1  1303               	bcf	3,6	;RP1=0, select bank1
 12426     06A2  084A               	movf	(efgtoa@u+2)^(0+128),w
 12427     06A3  1283               	bcf	3,5	;RP0=0, select bank0
 12428     06A4  1303               	bcf	3,6	;RP1=0, select bank0
 12429     06A5  00A6               	movwf	___flmul@a+2
 12430     06A6  1683               	bsf	3,5	;RP0=1, select bank1
 12431     06A7  1303               	bcf	3,6	;RP1=0, select bank1
 12432     06A8  0849               	movf	(efgtoa@u+1)^(0+128),w
 12433     06A9  1283               	bcf	3,5	;RP0=0, select bank0
 12434     06AA  1303               	bcf	3,6	;RP1=0, select bank0
 12435     06AB  00A5               	movwf	___flmul@a+1
 12436     06AC  1683               	bsf	3,5	;RP0=1, select bank1
 12437     06AD  1303               	bcf	3,6	;RP1=0, select bank1
 12438     06AE  0848               	movf	efgtoa@u^(0+128),w
 12439     06AF  1283               	bcf	3,5	;RP0=0, select bank0
 12440     06B0  1303               	bcf	3,6	;RP1=0, select bank0
 12441     06B1  00A4               	movwf	___flmul@a
 12442     06B2  1683               	bsf	3,5	;RP0=1, select bank1
 12443     06B3  1303               	bcf	3,6	;RP1=0, select bank1
 12444     06B4  0840               	movf	(efgtoa@l+3)^(0+128),w
 12445     06B5  1283               	bcf	3,5	;RP0=0, select bank0
 12446     06B6  1303               	bcf	3,6	;RP1=0, select bank0
 12447     06B7  00A3               	movwf	___flmul@b+3
 12448     06B8  1683               	bsf	3,5	;RP0=1, select bank1
 12449     06B9  1303               	bcf	3,6	;RP1=0, select bank1
 12450     06BA  083F               	movf	(efgtoa@l+2)^(0+128),w
 12451     06BB  1283               	bcf	3,5	;RP0=0, select bank0
 12452     06BC  1303               	bcf	3,6	;RP1=0, select bank0
 12453     06BD  00A2               	movwf	___flmul@b+2
 12454     06BE  1683               	bsf	3,5	;RP0=1, select bank1
 12455     06BF  1303               	bcf	3,6	;RP1=0, select bank1
 12456     06C0  083E               	movf	(efgtoa@l+1)^(0+128),w
 12457     06C1  1283               	bcf	3,5	;RP0=0, select bank0
 12458     06C2  1303               	bcf	3,6	;RP1=0, select bank0
 12459     06C3  00A1               	movwf	___flmul@b+1
 12460     06C4  1683               	bsf	3,5	;RP0=1, select bank1
 12461     06C5  1303               	bcf	3,6	;RP1=0, select bank1
 12462     06C6  083D               	movf	efgtoa@l^(0+128),w
 12463     06C7  1283               	bcf	3,5	;RP0=0, select bank0
 12464     06C8  1303               	bcf	3,6	;RP1=0, select bank0
 12465     06C9  00A0               	movwf	___flmul@b
 12466     06CA  120A  158A  24BE  120A  118A  	fcall	___flmul
 12467     06CF  1283               	bcf	3,5	;RP0=0, select bank0
 12468     06D0  1303               	bcf	3,6	;RP1=0, select bank0
 12469     06D1  0823               	movf	?___flmul+3,w
 12470     06D2  00BD               	movwf	___flsub@a+3
 12471     06D3  0822               	movf	?___flmul+2,w
 12472     06D4  00BC               	movwf	___flsub@a+2
 12473     06D5  0821               	movf	?___flmul+1,w
 12474     06D6  00BB               	movwf	___flsub@a+1
 12475     06D7  0820               	movf	?___flmul,w
 12476     06D8  00BA               	movwf	___flsub@a
 12477     06D9  1683               	bsf	3,5	;RP0=1, select bank1
 12478     06DA  1303               	bcf	3,6	;RP1=0, select bank1
 12479     06DB  083C               	movf	(efgtoa@h+3)^(0+128),w
 12480     06DC  1283               	bcf	3,5	;RP0=0, select bank0
 12481     06DD  1303               	bcf	3,6	;RP1=0, select bank0
 12482     06DE  00C1               	movwf	___flsub@b+3
 12483     06DF  1683               	bsf	3,5	;RP0=1, select bank1
 12484     06E0  1303               	bcf	3,6	;RP1=0, select bank1
 12485     06E1  083B               	movf	(efgtoa@h+2)^(0+128),w
 12486     06E2  1283               	bcf	3,5	;RP0=0, select bank0
 12487     06E3  1303               	bcf	3,6	;RP1=0, select bank0
 12488     06E4  00C0               	movwf	___flsub@b+2
 12489     06E5  1683               	bsf	3,5	;RP0=1, select bank1
 12490     06E6  1303               	bcf	3,6	;RP1=0, select bank1
 12491     06E7  083A               	movf	(efgtoa@h+1)^(0+128),w
 12492     06E8  1283               	bcf	3,5	;RP0=0, select bank0
 12493     06E9  1303               	bcf	3,6	;RP1=0, select bank0
 12494     06EA  00BF               	movwf	___flsub@b+1
 12495     06EB  1683               	bsf	3,5	;RP0=1, select bank1
 12496     06EC  1303               	bcf	3,6	;RP1=0, select bank1
 12497     06ED  0839               	movf	efgtoa@h^(0+128),w
 12498     06EE  1283               	bcf	3,5	;RP0=0, select bank0
 12499     06EF  1303               	bcf	3,6	;RP1=0, select bank0
 12500     06F0  00BE               	movwf	___flsub@b
 12501     06F1  160A  158A  251E  120A  118A  	fcall	___flsub
 12502     06F6  1283               	bcf	3,5	;RP0=0, select bank0
 12503     06F7  1303               	bcf	3,6	;RP1=0, select bank0
 12504     06F8  083D               	movf	?___flsub+3,w
 12505     06F9  1683               	bsf	3,5	;RP0=1, select bank1
 12506     06FA  1303               	bcf	3,6	;RP1=0, select bank1
 12507     06FB  00BC               	movwf	(efgtoa@h+3)^(0+128)
 12508     06FC  1283               	bcf	3,5	;RP0=0, select bank0
 12509     06FD  1303               	bcf	3,6	;RP1=0, select bank0
 12510     06FE  083C               	movf	?___flsub+2,w
 12511     06FF  1683               	bsf	3,5	;RP0=1, select bank1
 12512     0700  1303               	bcf	3,6	;RP1=0, select bank1
 12513     0701  00BB               	movwf	(efgtoa@h+2)^(0+128)
 12514     0702  1283               	bcf	3,5	;RP0=0, select bank0
 12515     0703  1303               	bcf	3,6	;RP1=0, select bank0
 12516     0704  083B               	movf	?___flsub+1,w
 12517     0705  1683               	bsf	3,5	;RP0=1, select bank1
 12518     0706  1303               	bcf	3,6	;RP1=0, select bank1
 12519     0707  00BA               	movwf	(efgtoa@h+1)^(0+128)
 12520     0708  1283               	bcf	3,5	;RP0=0, select bank0
 12521     0709  1303               	bcf	3,6	;RP1=0, select bank0
 12522     070A  083A               	movf	?___flsub,w
 12523     070B  1683               	bsf	3,5	;RP0=1, select bank1
 12524     070C  1303               	bcf	3,6	;RP1=0, select bank1
 12525     070D  00B9               	movwf	efgtoa@h^(0+128)
 12526     070E                     l3411:
 12527                           
 12528                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12529     070E  3041               	movlw	65
 12530     070F  00F3               	movwf	___fldiv@a+3
 12531     0710  3020               	movlw	32
 12532     0711  00F2               	movwf	___fldiv@a+2
 12533     0712  3000               	movlw	0
 12534     0713  00F1               	movwf	___fldiv@a+1
 12535     0714  3000               	movlw	0
 12536     0715  00F0               	movwf	___fldiv@a
 12537     0716  084B               	movf	(efgtoa@u+3)^(0+128),w
 12538     0717  00F7               	movwf	___fldiv@b+3
 12539     0718  084A               	movf	(efgtoa@u+2)^(0+128),w
 12540     0719  00F6               	movwf	___fldiv@b+2
 12541     071A  0849               	movf	(efgtoa@u+1)^(0+128),w
 12542     071B  00F5               	movwf	___fldiv@b+1
 12543     071C  0848               	movf	efgtoa@u^(0+128),w
 12544     071D  00F4               	movwf	___fldiv@b
 12545     071E  120A  158A  2092  120A  118A  	fcall	___fldiv
 12546     0723  0873               	movf	?___fldiv+3,w
 12547     0724  1683               	bsf	3,5	;RP0=1, select bank1
 12548     0725  1303               	bcf	3,6	;RP1=0, select bank1
 12549     0726  00CB               	movwf	(efgtoa@u+3)^(0+128)
 12550     0727  0872               	movf	?___fldiv+2,w
 12551     0728  00CA               	movwf	(efgtoa@u+2)^(0+128)
 12552     0729  0871               	movf	?___fldiv+1,w
 12553     072A  00C9               	movwf	(efgtoa@u+1)^(0+128)
 12554     072B  0870               	movf	?___fldiv,w
 12555     072C  00C8               	movwf	efgtoa@u^(0+128)
 12556     072D                     l3413:
 12557                           
 12558                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12559     072D  30FF               	movlw	255
 12560     072E  07A0               	addwf	efgtoa@ne^(0+128),f
 12561     072F  1803               	skipnc
 12562     0730  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
 12563     0731  30FF               	movlw	255
 12564     0732  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
 12565     0733                     l3415:
 12566                           
 12567                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12568     0733  3001               	movlw	1
 12569     0734  07B7               	addwf	efgtoa@i^(0+128),f
 12570     0735  1803               	skipnc
 12571     0736  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 12572     0737  3000               	movlw	0
 12573     0738  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 12574     0739                     l3417:
 12575                           
 12576                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12577     0739  0838               	movf	(efgtoa@i+1)^(0+128),w
 12578     073A  3A80               	xorlw	128
 12579     073B  1283               	bcf	3,5	;RP0=0, select bank0
 12580     073C  1303               	bcf	3,6	;RP1=0, select bank0
 12581     073D  00CD               	movwf	??_efgtoa
 12582     073E  1683               	bsf	3,5	;RP0=1, select bank1
 12583     073F  1303               	bcf	3,6	;RP1=0, select bank1
 12584     0740  082E               	movf	(efgtoa@m+1)^(0+128),w
 12585     0741  3A80               	xorlw	128
 12586     0742  1283               	bcf	3,5	;RP0=0, select bank0
 12587     0743  1303               	bcf	3,6	;RP1=0, select bank0
 12588     0744  024D               	subwf	??_efgtoa,w
 12589     0745  1D03               	skipz
 12590     0746  2F4B               	goto	u4665
 12591     0747  1683               	bsf	3,5	;RP0=1, select bank1
 12592     0748  1303               	bcf	3,6	;RP1=0, select bank1
 12593     0749  082D               	movf	efgtoa@m^(0+128),w
 12594     074A  0237               	subwf	efgtoa@i^(0+128),w
 12595     074B                     u4665:
 12596     074B  1803               	skipnc
 12597     074C  2F4E               	goto	u4661
 12598     074D  2F4F               	goto	u4660
 12599     074E                     u4661:
 12600     074E  2F5E               	goto	l3421
 12601     074F                     u4660:
 12602     074F                     l3419:
 12603     074F  1683               	bsf	3,5	;RP0=1, select bank1
 12604     0750  1303               	bcf	3,6	;RP1=0, select bank1
 12605     0751  0843               	movf	(efgtoa@n+1)^(0+128),w
 12606     0752  3A80               	xorlw	128
 12607     0753  00FF               	movwf	btemp+1
 12608     0754  3080               	movlw	128
 12609     0755  027F               	subwf	btemp+1,w
 12610     0756  1D03               	skipz
 12611     0757  2F5A               	goto	u4675
 12612     0758  304B               	movlw	75
 12613     0759  0242               	subwf	efgtoa@n^(0+128),w
 12614     075A                     u4675:
 12615     075A  1C03               	skipc
 12616     075B  2F5D               	goto	u4671
 12617     075C  2F5E               	goto	u4670
 12618     075D                     u4671:
 12619     075D  2DB5               	goto	l3375
 12620     075E                     u4670:
 12621     075E                     l3421:
 12622                           
 12623                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12624     075E  304F               	movlw	79
 12625     075F  1683               	bsf	3,5	;RP0=1, select bank1
 12626     0760  1303               	bcf	3,6	;RP1=0, select bank1
 12627     0761  00B7               	movwf	efgtoa@i^(0+128)
 12628     0762  3000               	movlw	0
 12629     0763  00B8               	movwf	(efgtoa@i^(0+128)+1)
 12630     0764                     l3423:
 12631                           
 12632                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12633     0764  0837               	movf	efgtoa@i^(0+128),w
 12634     0765  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12635     0766  0084               	movwf	4
 12636     0767  1783               	bsf	3,7	;select IRP bank2
 12637     0768  0180               	clrf	0
 12638     0769                     l3425:
 12639                           
 12640                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12641     0769  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 12642     076A  1283               	bcf	3,5	;RP0=0, select bank0
 12643     076B  1303               	bcf	3,6	;RP1=0, select bank0
 12644     076C  00CD               	movwf	??_efgtoa
 12645     076D  1683               	bsf	3,5	;RP0=1, select bank1
 12646     076E  1303               	bcf	3,6	;RP1=0, select bank1
 12647     076F  0842               	movf	efgtoa@n^(0+128),w
 12648     0770  1283               	bcf	3,5	;RP0=0, select bank0
 12649     0771  1303               	bcf	3,6	;RP1=0, select bank0
 12650     0772  02CD               	subwf	??_efgtoa,f
 12651     0773  1683               	bsf	3,5	;RP0=1, select bank1
 12652     0774  1303               	bcf	3,6	;RP1=0, select bank1
 12653     0775  0837               	movf	efgtoa@i^(0+128),w
 12654     0776  1283               	bcf	3,5	;RP0=0, select bank0
 12655     0777  1303               	bcf	3,6	;RP1=0, select bank0
 12656     0778  074D               	addwf	??_efgtoa,w
 12657     0779  00F0               	movwf	memcpy@d1
 12658     077A  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 12659     077B  00F1               	movwf	memcpy@s1
 12660     077C  1683               	bsf	3,5	;RP0=1, select bank1
 12661     077D  1303               	bcf	3,6	;RP1=0, select bank1
 12662     077E  0843               	movf	(efgtoa@n+1)^(0+128),w
 12663     077F  00F3               	movwf	memcpy@n+1
 12664     0780  0842               	movf	efgtoa@n^(0+128),w
 12665     0781  00F2               	movwf	memcpy@n
 12666     0782  160A  158A  24FD  120A  118A  	fcall	_memcpy
 12667     0787                     l3427:
 12668                           
 12669                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12670     0787  1683               	bsf	3,5	;RP0=1, select bank1
 12671     0788  1303               	bcf	3,6	;RP1=0, select bank1
 12672     0789  0842               	movf	efgtoa@n^(0+128),w
 12673     078A  0237               	subwf	efgtoa@i^(0+128),w
 12674     078B  00C2               	movwf	efgtoa@n^(0+128)
 12675     078C  0843               	movf	(efgtoa@n+1)^(0+128),w
 12676     078D  1C03               	skipc
 12677     078E  0A43               	incf	(efgtoa@n+1)^(0+128),w
 12678     078F  0238               	subwf	(efgtoa@i+1)^(0+128),w
 12679     0790  00C3               	movwf	(efgtoa@n+1)^(0+128)
 12680     0791                     l3429:
 12681                           
 12682                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12683     0791  0841               	movf	efgtoa@sign^(0+128),w
 12684     0792  1D03               	btfss	3,2
 12685     0793  2F95               	goto	u4681
 12686     0794  2F97               	goto	u4680
 12687     0795                     u4681:
 12688     0795  3001               	movlw	1
 12689     0796  2F98               	goto	u4690
 12690     0797                     u4680:
 12691     0797  3000               	movlw	0
 12692     0798                     u4690:
 12693     0798  1283               	bcf	3,5	;RP0=0, select bank0
 12694     0799  1303               	bcf	3,6	;RP1=0, select bank0
 12695     079A  00CD               	movwf	??_efgtoa
 12696     079B  01CE               	clrf	??_efgtoa+1
 12697     079C  084D               	movf	??_efgtoa,w
 12698     079D  1683               	bsf	3,5	;RP0=1, select bank1
 12699     079E  1303               	bcf	3,6	;RP1=0, select bank1
 12700     079F  00B7               	movwf	efgtoa@i^(0+128)
 12701     07A0  1283               	bcf	3,5	;RP0=0, select bank0
 12702     07A1  1303               	bcf	3,6	;RP1=0, select bank0
 12703     07A2  084E               	movf	??_efgtoa+1,w
 12704     07A3  1683               	bsf	3,5	;RP0=1, select bank1
 12705     07A4  1303               	bcf	3,6	;RP1=0, select bank1
 12706     07A5  00B8               	movwf	(efgtoa@i+1)^(0+128)
 12707     07A6                     l3431:
 12708                           
 12709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 12710     07A6  0841               	movf	efgtoa@sign^(0+128),w
 12711     07A7  1903               	btfsc	3,2
 12712     07A8  2FAA               	goto	u4701
 12713     07A9  2FAB               	goto	u4700
 12714     07AA                     u4701:
 12715     07AA  2FB7               	goto	l3435
 12716     07AB                     u4700:
 12717     07AB                     l3433:
 12718                           
 12719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 12720     07AB  30FF               	movlw	255
 12721     07AC  07C2               	addwf	efgtoa@n^(0+128),f
 12722     07AD  1803               	skipnc
 12723     07AE  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12724     07AF  30FF               	movlw	255
 12725     07B0  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12726     07B1  0842               	movf	efgtoa@n^(0+128),w
 12727     07B2  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12728     07B3  0084               	movwf	4
 12729     07B4  0841               	movf	efgtoa@sign^(0+128),w
 12730     07B5  1783               	bsf	3,7	;select IRP bank2
 12731     07B6  0080               	movwf	0
 12732     07B7                     l3435:
 12733                           
 12734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 12735     07B7  0837               	movf	efgtoa@i^(0+128),w
 12736     07B8  02B1               	subwf	efgtoa@w^(0+128),f
 12737     07B9  0838               	movf	(efgtoa@i+1)^(0+128),w
 12738     07BA  1C03               	skipc
 12739     07BB  03B2               	decf	(efgtoa@w+1)^(0+128),f
 12740     07BC  02B2               	subwf	(efgtoa@w+1)^(0+128),f
 12741     07BD                     l3437:
 12742                           
 12743                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          int) pad(fp, &dbuf[n], w);
 12744     07BD  1283               	bcf	3,5	;RP0=0, select bank0
 12745     07BE  1303               	bcf	3,6	;RP1=0, select bank0
 12746     07BF  0846               	movf	efgtoa@fp,w
 12747     07C0  00A8               	movwf	pad@fp
 12748     07C1  0847               	movf	efgtoa@fp+1,w
 12749     07C2  00A9               	movwf	pad@fp+1
 12750     07C3  1683               	bsf	3,5	;RP0=1, select bank1
 12751     07C4  1303               	bcf	3,6	;RP1=0, select bank1
 12752     07C5  0842               	movf	efgtoa@n^(0+128),w
 12753     07C6  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12754     07C7  1283               	bcf	3,5	;RP0=0, select bank0
 12755     07C8  1303               	bcf	3,6	;RP1=0, select bank0
 12756     07C9  00AA               	movwf	pad@buf
 12757     07CA  1683               	bsf	3,5	;RP0=1, select bank1
 12758     07CB  1303               	bcf	3,6	;RP1=0, select bank1
 12759     07CC  0832               	movf	(efgtoa@w+1)^(0+128),w
 12760     07CD  1283               	bcf	3,5	;RP0=0, select bank0
 12761     07CE  1303               	bcf	3,6	;RP1=0, select bank0
 12762     07CF  00AC               	movwf	pad@p+1
 12763     07D0  1683               	bsf	3,5	;RP0=1, select bank1
 12764     07D1  1303               	bcf	3,6	;RP1=0, select bank1
 12765     07D2  0831               	movf	efgtoa@w^(0+128),w
 12766     07D3  1283               	bcf	3,5	;RP0=0, select bank0
 12767     07D4  1303               	bcf	3,6	;RP1=0, select bank0
 12768     07D5  00AB               	movwf	pad@p
 12769     07D6  160A  158A  27AF  120A  118A  	fcall	_pad
 12770     07DB  1283               	bcf	3,5	;RP0=0, select bank0
 12771     07DC  1303               	bcf	3,6	;RP1=0, select bank0
 12772     07DD  0829               	movf	?_pad+1,w
 12773     07DE  00C7               	movwf	?_efgtoa+1
 12774     07DF  0828               	movf	?_pad,w
 12775     07E0  00C6               	movwf	?_efgtoa
 12776     07E1                     l883:
 12777     07E1  0008               	return
 12778     07E2                     __end_of_efgtoa:

Data Sizes:
    Strings     83
    Constant    0
    Data        0
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     68      77
    BANK3            96      0      24
    BANK2            96      0      80

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> displayString(BANK3[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> displayString(BANK3[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    printToLCD@string	PTR const unsigned char  size(2) Largest target is 17
		 -> displayString(BANK3[16]), STR_1(CODE[14]), STR_3(CODE[15]), STR_4(CODE[17]), 
		 -> STR_5(CODE[16]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S765$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> displayString(BANK3[16]), 

    S765$source	PTR const unsigned char  size(1) Largest target is 0

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    snprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), 

    snprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> displayString(BANK3[16]), 

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_6(CODE[4]), STR_9(CODE[4]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _floorf->___fldiv
    _initializeHardware->_initializeLCD
    _initializeLCD->_clearLCD
    _MCP9800_Init->_MCP9800_WriteConfig
    _printToLCD->_sendDataToLCD
    _moveCursorToPosition->_sendCommandToLCD
    _configureOneShotMode->_MCP9800_SetConfigResolution
    _configureInterruptMode->_MCP9800_SetHYST_Temp
    _configureInterruptMode->_MCP9800_SetLIMIT_Temp
    _configureComparatorMode->_MCP9800_SetHYST_Temp
    _configureComparatorMode->_MCP9800_SetLIMIT_Temp
    _configureContinuousConversionMode->_MCP9800_SetConfigResolution
    _MCP9800_SetConfigShutdown->_MCP9800_ReadConfig
    _MCP9800_SetConfigShutdown->_MCP9800_WriteConfig
    _MCP9800_SetConfigResolution->_MCP9800_ReadConfig
    _MCP9800_SetConfigResolution->_MCP9800_WriteConfig
    _MCP9800_SetConfigOneShot->_MCP9800_ReadConfig
    _MCP9800_SetConfigOneShot->_MCP9800_WriteConfig
    _MCP9800_SetLIMIT_Temp->_I2C_Master_Write
    _MCP9800_SetHYST_Temp->_I2C_Master_Write
    _MCP9800_SetConfigFaultQueue->_MCP9800_ReadConfig
    _MCP9800_SetConfigFaultQueue->_MCP9800_WriteConfig
    _MCP9800_SetConfigCompIntMode->_MCP9800_ReadConfig
    _MCP9800_SetConfigCompIntMode->_MCP9800_WriteConfig
    _MCP9800_SetConfigAlertPolarity->_MCP9800_ReadConfig
    _MCP9800_SetConfigAlertPolarity->_MCP9800_WriteConfig
    _MCP9800_WriteConfig->_I2C_Master_Write
    _MCP9800_ReadConfig->_I2C_Master_Write
    _clearLCD->_sendCommandToLCD
    _MCP9800_ReadTemperature->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _MCP9800_ReadTemperature->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   19860
                                             77 BANK0      3     3      0
                                             60 BANK1      8     8      0
            _MCP9800_ReadTemperature
                           ___xxtofl
                           _clearLCD
                  _handleButtonPress
                 _initializeHardware
               _moveCursorToPosition
                         _printToLCD
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            27    19      8   12805
                                             58 BANK0     19    19      0
                                             52 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4   12352
                                             57 BANK0      1     1      0
                                             48 BANK1      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4   12218
                                             49 BANK0      8     8      0
                                             44 BANK1      4     0      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     276
                                              6 COMMON     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   11194
                                             38 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     1      2      77
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     842
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               3     1      2      91
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     331
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4      69
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     137
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2039
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1990
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     192
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1132
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _initializeHardware                                   0     0      0     116
                       _MCP9800_Init
                      _initializeLCD
 ---------------------------------------------------------------------------------
 (2) _initializeLCD                                        2     2      0      58
                                              4 COMMON     2     2      0
                           _clearLCD
                   _sendCommandToLCD
 ---------------------------------------------------------------------------------
 (2) _MCP9800_Init                                         0     0      0      58
                    _I2C_Master_Init
                _MCP9800_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleButtonPress                                    0     0      0    3974
                           _clearLCD
            _configureComparatorMode
             _configureInterruptMode
               _configureOneShotMode
               _moveCursorToPosition
                         _printToLCD
 ---------------------------------------------------------------------------------
 (1) _printToLCD                                           2     0      2      79
                                              2 COMMON     2     0      2
                      _sendDataToLCD
 ---------------------------------------------------------------------------------
 (2) _sendDataToLCD                                        2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _moveCursorToPosition                                 1     1      0     174
                                              2 COMMON     1     1      0
                   _sendCommandToLCD
 ---------------------------------------------------------------------------------
 (2) _configureOneShotMode                                 2     2      0     492
                                              5 COMMON     2     2      0
           _MCP9800_SetConfigOneShot
        _MCP9800_SetConfigResolution
          _MCP9800_SetConfigShutdown
 ---------------------------------------------------------------------------------
 (2) _configureInterruptMode                               0     0      0    1600
     _MCP9800_SetConfigAlertPolarity
       _MCP9800_SetConfigCompIntMode
        _MCP9800_SetConfigFaultQueue
        _MCP9800_SetConfigResolution
          _MCP9800_SetConfigShutdown
               _MCP9800_SetHYST_Temp
              _MCP9800_SetLIMIT_Temp
  _configureContinuousConversionMode
 ---------------------------------------------------------------------------------
 (2) _configureComparatorMode                              0     0      0    1600
     _MCP9800_SetConfigAlertPolarity
       _MCP9800_SetConfigCompIntMode
        _MCP9800_SetConfigFaultQueue
        _MCP9800_SetConfigResolution
          _MCP9800_SetConfigShutdown
               _MCP9800_SetHYST_Temp
              _MCP9800_SetLIMIT_Temp
  _configureContinuousConversionMode
 ---------------------------------------------------------------------------------
 (3) _configureContinuousConversionMode                    2     2      0     492
                                              5 COMMON     2     2      0
           _MCP9800_SetConfigOneShot
        _MCP9800_SetConfigResolution
          _MCP9800_SetConfigShutdown
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetConfigShutdown                            2     2      0     164
                                              2 COMMON     2     2      0
                 _MCP9800_ReadConfig
                _MCP9800_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetConfigResolution                          3     3      0     164
                                              2 COMMON     3     3      0
                 _MCP9800_ReadConfig
                _MCP9800_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetConfigOneShot                             2     2      0     164
                                              2 COMMON     2     2      0
                 _MCP9800_ReadConfig
                _MCP9800_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetLIMIT_Temp                                8     6      2     144
                                              1 COMMON     8     6      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetHYST_Temp                                 8     6      2     144
                                              1 COMMON     8     6      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetConfigFaultQueue                          3     3      0     164
                                              2 COMMON     3     3      0
                 _MCP9800_ReadConfig
                _MCP9800_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetConfigCompIntMode                         2     2      0     164
                                              2 COMMON     2     2      0
                 _MCP9800_ReadConfig
                _MCP9800_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _MCP9800_SetConfigAlertPolarity                       2     2      0     164
                                              2 COMMON     2     2      0
                 _MCP9800_ReadConfig
                _MCP9800_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _MCP9800_WriteConfig                                  1     1      0      58
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _MCP9800_ReadConfig                                   1     1      0      52
                                              1 COMMON     1     1      0
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _clearLCD                                             2     2      0      29
                                              2 COMMON     2     2      0
                   _sendCommandToLCD
 ---------------------------------------------------------------------------------
 (2) _sendCommandToLCD                                     2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MCP9800_ReadTemperature                              6     4      2    2297
                                             36 BANK0      6     4      2
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     340
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     235
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    1624
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCP9800_ReadTemperature
     _I2C_ACK
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_NACK
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   ___xxtofl
   _clearLCD
     _sendCommandToLCD
   _handleButtonPress
     _clearLCD
     _configureComparatorMode
       _MCP9800_SetConfigAlertPolarity
         _MCP9800_ReadConfig
           _I2C_Master_RepeatedStart
           _I2C_Master_Start
           _I2C_Master_Stop
           _I2C_Master_Write
           _I2C_NACK
           _I2C_Read_Byte
         _MCP9800_WriteConfig
           _I2C_Master_Start
           _I2C_Master_Stop
           _I2C_Master_Write
       _MCP9800_SetConfigCompIntMode
         _MCP9800_ReadConfig
         _MCP9800_WriteConfig
       _MCP9800_SetConfigFaultQueue
         _MCP9800_ReadConfig
         _MCP9800_WriteConfig
       _MCP9800_SetConfigResolution
         _MCP9800_ReadConfig
         _MCP9800_WriteConfig
       _MCP9800_SetConfigShutdown
         _MCP9800_ReadConfig
         _MCP9800_WriteConfig
       _MCP9800_SetHYST_Temp
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
       _MCP9800_SetLIMIT_Temp
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
       _configureContinuousConversionMode
         _MCP9800_SetConfigOneShot
           _MCP9800_ReadConfig
           _MCP9800_WriteConfig
         _MCP9800_SetConfigResolution
         _MCP9800_SetConfigShutdown
     _configureInterruptMode
       _MCP9800_SetConfigAlertPolarity
       _MCP9800_SetConfigCompIntMode
       _MCP9800_SetConfigFaultQueue
       _MCP9800_SetConfigResolution
       _MCP9800_SetConfigShutdown
       _MCP9800_SetHYST_Temp
       _MCP9800_SetLIMIT_Temp
       _configureContinuousConversionMode
     _configureOneShotMode
       _MCP9800_SetConfigOneShot
       _MCP9800_SetConfigResolution
       _MCP9800_SetConfigShutdown
     _moveCursorToPosition
       _sendCommandToLCD
     _printToLCD
       _sendDataToLCD
   _initializeHardware
     _MCP9800_Init
       _I2C_Master_Init
       _MCP9800_WriteConfig
     _initializeLCD
       _clearLCD
       _sendCommandToLCD
   _moveCursorToPosition
   _printToLCD
   _snprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     80      80    100.0%
BANK1               80     68      77     96.2%
BANK3               96      0      24     25.0%
BANK2               96      0      80     83.3%
STACK                0      0       0      0.0%
DATA                 0      0     275      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Nov 17 11:22:58 2024

                             ___fldiv@aexp 002C                               ___fldiv@bexp 002B  
                                        pc 0002                      ?_MCP9800_SetHYST_Temp 0071  
                             ___fldiv@sign 0024                                         l33 1B37  
                                       l42 1AFC                                         l51 1B11  
                                       l36 1B1E                                         l60 1B47  
                                       l45 1AF3                                         l54 1B1D  
                                       l39 1B2A                                         l63 1B9B  
                                       l48 1B05                                         l57 1B42  
                                       l65 1BA0                                         l66 1BA9  
                                       l59 1B46                                         l83 1DDE  
                                       l92 1C37                                         l86 1B57  
                                       l89 1C1E                                         l98 1D8C  
                                       fsr 0004                        ___wmul@multiplicand 0072  
                      __Umul8_16@word_mpld 0076                                        l106 1CFC  
                                      l131 1CDC                                        l134 1E37  
                                      l160 1CBE                                        l128 080B  
                                      l163 1CA2                                        l173 1BD7  
                                      l181 1F60                                        l157 1BEE  
                                      l261 10DD                                        l263 10FB  
                                      l168 1BC0                                        l272 1C6B  
                                      l193 0891                                        l178 1C05  
                                      l266 1118                                        l258 1B69  
                                      l187 1F23                                        l275 1EAA  
                                      l364 1D4E                                        l269 1C86  
                                      l533 1F7D                                        l278 1EE6  
                                      l534 1F99                                        l550 1365  
                                      l542 12E0                                        l366 1D66  
                                      l711 1D41                                        l721 08E7  
                                      l545 134C                                        l554 000D  
                                      l811 1473                                        l723 0A61  
                                      l539 1FAE                                        l707 0CB1  
                                      l708 0CBD                                        l660 0A8E  
                                      l565 1179                                        l805 1434  
                                      l558 118E                                        l806 1445  
                                      l830 1411                                        l807 14C5  
                                      l743 0A4D                                        l671 0B17  
                                      l568 118E                                        l761 0FFF  
                                      l745 0A59                                        l737 09DB  
                                      l665 0ABF                                        l818 148F  
                                      l690 0C30                                        l819 149B  
                                      l780 1DA1                                        l932 10BC  
                                      l773 0FF5                                        l669 0B3E  
                                      l909 05A1                                        l941 1737  
                                      l782 1DB3                                        l686 0C0A  
                                      l678 0CBD                                        l767 0F71  
                                      l696 0C53                                        l872 1FFF  
                                      l880 164D                                        l952 17FF  
                                      l699 0C91                                        l883 07E1  
                                      l868 1FB7                                        l982 15CC  
                                      l959 1E6E                                        l992 1B92  
                                      l969 009A                                        l977 1513  
                                      l978 15D4                                        l995 1D0F  
                                      l899 02E6                                        l998 1D1D  
                                      _RA0 0028                                        _RA1 0029  
                                      _RA2 002A                      __end_of_sendDataToLCD 1C38  
                                      _PEN 048A           __end_of_MCP9800_SetConfigOneShot 1BEF  
                                      _SEN 0488                            __end_of_I2C_ACK 1B12  
                                      _pad 1FAF                                        fsr0 0004  
                                      indf 0000            MCP9800_SetLIMIT_Temp@temp_value 0071  
                             ___flmul@aexp 0032                               ___flmul@bexp 0033  
     MCP9800_SetConfigAlertPolarity@config 0073                               ___flmul@sign 002D  
                             ___flmul@temp 0038                               ___flmul@prod 0034  
      MCP9800_SetLIMIT_Temp@temp_raw_value 0077                               ___fltol@exp1 0043  
                                     l1010 12C1                                       l1021 1069  
                                     l1033 1B7D                                       l1018 1E09  
                                     l1027 1C50                                       l3001 0D11  
                                     l3011 0D32                                       l3003 0D16  
                                     l3101 0FF7                                       l3021 0DBC  
                                     l3013 0D3F                                       l3005 0D1B  
                                     l3031 0E1A                                       l3023 0DD8  
                                     l3015 0D5A                                       l3111 1FC9  
                                     l3041 0EA4                                       l3033 0E37  
                                     l3025 0DE1                                       l3017 0D76  
                                     l3009 0D24                                       l3201 1BD9  
                                     l3121 002E                                       l3113 1FD1  
                                     l3105 1FAF                                       l3051 0F34  
                                     l3043 0ECF                                       l3035 0E4E  
                                     l3027 0DEF                                       l3019 0DA0  
                                     l3203 1BDF                                       l3211 1CA4  
                                     l3123 0045                                       l3115 1FDF  
                                     l3107 1FB5                                       l3053 0F3D  
                                     l3061 0F51                                       l3045 0EF5  
                                     l3037 0E6B                                       l3029 0E0C  
                                     l3205 1BE4                                       l3213 1CAA  
                                     l3221 1BFB                                       l2501 0A83  
                                     l3125 004B                                       l3133 006E  
                                     l3109 1FBA                                       l3301 0239  
                                     l3063 0F55                                       l3055 0F41  
                                     l3047 0F1D                                       l3039 0E96  
                                     l3207 1BE6                                       l3215 1CAC  
                                     l3223 1BFD                                       l2511 0A98  
                                     l2503 0A84                                       l3135 0074  
                                     l3127 0064                                       l3119 000E  
                                     l3151 1B83                                       l3143 1C38  
                                     l3311 02DD                                       l3231 15F0  
                                     l3081 0FA6                                       l3073 0F76  
                                     l3065 0F56                                       l3057 0F42  
                                     l3049 0F26                                       l3209 1BE8  
                                     l3225 1BFF                                       l3217 1BF0  
                                     l2601 0B7A                                       l2521 0AA7  
                                     l2513 0A99                                       l2505 0A86  
                                     l3129 0069                                       l3161 1512  
                                     l2441 122E                                       l3145 1C3A  
                                     l3401 0683                                       l3321 0302  
                                     l3313 02E2                                       l3305 0298  
                                     l3241 163A                                       l3233 1617  
                                     l2435 1B1E                                       l3091 0FDD  
                                     l3075 0F7B                                       l3083 0FAC  
                                     l3067 0F5A                                       l3059 0F4B  
                                     l3219 1BF6                                       l2611 0BA3  
                                     l2603 0B7E                                       l2531 0AC5  
                                     l2523 0AAC                                       l2515 0A9D  
                                     l2507 0A90                                       l3139 0096  
                                     l3171 1561                                       l3163 1519  
                                     l3155 14C6                                       l3147 1B7E  
                                     l2443 1234                                       l3411 070E  
                                     l3403 0689                                       l3331 031A  
                                     l3323 0304                                       l3315 02F0  
                                     l3307 02D1                                       l3251 1662  
                                     l3243 163F                                       l3235 161B  
                                     l3227 15D5                                       l2437 1B24  
                                     l2453 1AF4                                       l2461 1AFD  
                                     l3093 0FDF                                       l3085 0FB9  
                                     l3077 0F89                                       l3069 0F6E  
                                     l3501 1BCD                                       l2613 0BE3  
                                     l2621 0BFC                                       l2605 0B7F  
                                     l2541 0AD1                                       l2533 0AC9  
                                     l2525 0AB4                                       l2517 0AA1  
                                     l2509 0A92                                       l3181 15C4  
                                     l3173 1578                                       l3165 1533  
                                     l3157 14E6                                       l3149 1B82  
                                     l2445 123B                                       l2701 1DF4  
                                     l3421 075E                                       l3413 072D  
                                     l3405 0690                                       l3341 0419  
                                     l3333 0323                                       l3325 030A  
                                     l3317 02F6                                       l3309 02D9  
                                     l3253 1669                                       l3245 1644  
                                     l3237 1632                                       l3229 15D8  
                                     l2455 1AF9                                       l2463 1B02  
                                     l2471 1B39                                       l3095 0FEB  
                                     l3087 0FC4                                       l3079 0F8D  
                                     l3503 1BCF                                       l3511 1F3E  
                                     l2631 0C2B                                       l2623 0C12  
                                     l2615 0BE5                                       l2607 0B8A  
                                     l2551 0ADB                                       l2543 0AD3  
                                     l2535 0ACB                                       l2527 0AB5  
                                     l2519 0AA2                                       l3175 1589  
                                     l3159 1505                                       l3191 1D09  
                                     l2447 1253                                       l2439 1228  
                                     l2703 1DFC                                       l2711 1B77  
                                     l3431 07A6                                       l3423 0764  
                                     l3415 0733                                       l3407 0696  
                                     l3351 04B6                                       l3335 0361  
                                     l3343 041F                                       l3319 02FA  
                                     l3327 0310                                       l3255 1679  
                                     l3263 16AD                                       l3247 1649  
                                     l3239 1636                                       l2457 1AEB  
                                     l2473 1B3E                                       l2465 1B12  
                                     l2481 1BA6                                       l3097 0FEF  
                                     l3089 0FD3                                       l2801 1167  
                                     l3193 1C07                                       l3505 1BD1  
                                     l3521 1F5B                                       l3513 1F43  
                                     l2641 0C3F                                       l2633 0C2F  
                                     l2625 0C17                                       l2617 0BE8  
                                     l2609 0B8D                                       l2561 0AE5  
                                     l2553 0ADD                                       l2545 0AD5  
                                     l2537 0ACD                                       l2529 0AB7  
                                     l3177 15A2                                       l3169 1548  
                                     l3185 1CFD                                       l2449 1285  
                                     l2705 1B6A                                       l3433 07AB  
                                     l3425 0769                                       l3409 069C  
                                     l3417 0739                                       l3361 054E  
                                     l3353 04D1                                       l3345 0435  
                                     l3337 0388                                       l3329 0312  
                                     l3281 00A7                                       l3265 16C4  
                                     l3257 1683                                       l3249 164F  
                                     l3441 106A                                       l3603 1B06  
                                     l2459 1AF0                                       l2467 1B15  
                                     l2475 1B93                                       l3099 0FF0  
                                     l2811 1183                                       l3195 1C0A  
                                     l2715 1CC0                                       l3531 1F0C  
                                     l3523 1EE7                                       l3515 1F49  
                                     l3507 1F24                                       l3611 1DB8  
                                     l2651 0C50                                       l2635 0C34  
                                     l2643 0C41                                       l2619 0BED  
                                     l2571 0B1B                                       l2563 0AE7  
                                     l2555 0ADF                                       l2547 0AD7  
                                     l2539 0ACF                                       l2491 0A6C  
                                     l3179 15AB                                       l3187 1D02  
                                     l2707 1B6D                                       l3435 07B7  
                                     l3427 0787                                       l3419 074F  
                                     l3371 05B0                                       l3363 0556  
                                     l3355 04D7                                       l3347 0474  
                                     l3339 03FA                                       l3291 016E  
                                     l3267 16CB                                       l3259 168B  
                                     l2731 1D5C                                       l2723 1D42  
                                     l3451 10A2                                       l3443 106C  
                                     l3605 1B09                                       l2469 1B1A  
                                     l2477 1B98                                       l3197 1C0C  
                                     l2717 1E0A                                       l3533 1F12  
                                     l3525 1EF5                                       l3517 1F4F  
                                     l3509 1F32                                       l3541 1C63  
                                     l3461 1B2F                                       l3621 1DCD  
                                     l3613 1DB9                                       l2901 098C  
                                     l2821 0896                                       l2741 1F91  
                                     l2661 0C6F                                       l2637 0C38  
                                     l2629 0C20                                       l2645 0C45  
                                     l2581 0B36                                       l2573 0B24  
                                     l2557 0AE1                                       l2549 0AD9  
                                     l2565 0AE9                                       l2493 0A70  
                                     l2485 0A62                                       l2813 1D1E  
                                     l3189 1D07                                       l2709 1B6F  
                                     l3437 07BD                                       l3429 0791  
                                     l3381 064D                                       l3373 05B2  
                                     l3365 0595                                       l3357 04DF  
                                     l3349 04AB                                       l3293 01A7  
                                     l3285 00C1                                       l3269 16DB  
                                     l3277 009B                                       l2733 1D62  
                                     l2725 1D44                                       l3445 107B  
                                     l3453 10A7                                       l3607 1B0E  
                                     l2479 1BA1                                       l2807 116E  
                                     l3199 1C14                                       l3471 1B4E  
                                     l2719 1E36                                       l3535 1F18  
                                     l3527 1F01                                       l3519 1F55  
                                     l3631 1D76                                       l3463 1B33  
                                     l3623 1DD3                                       l3615 1DBC  
                                     l2911 09A7                                       l2903 098E  
                                     l2831 08A6                                       l2823 0898  
                                     l2743 1FAB                                       l2751 12D8  
                                     l2671 0CA8                                       l2663 0C8F  
                                     l2655 0C58                                       l2647 0C46  
                                     l2639 0C3A                                       l2591 0B50  
                                     l2575 0B26                                       l2583 0B38  
                                     l2567 0AEA                                       l2559 0AE3  
                                     l2495 0A71                                       l2487 0A64  
                                     l2815 1D22                                       l3391 0668  
                                     l3383 0652                                       l3375 05B5  
                                     l3367 059B                                       l3359 0500  
                                     l3295 0207                                       l3287 00D1  
                                     l3279 00A5                                       l2727 1D48  
                                     l3455 10B8                                       l3447 107F  
                                     l3551 1703                                       l3543 16E6  
                                     l3711 1E68                                       l3703 1E38  
                                     l2809 117E                                       l3481 1C88  
                                     l3537 1F1E                                       l3529 1F06  
                                     l3641 1CF0                                       l3473 1C20  
                                     l3633 1D7C                                       l3465 1B35  
                                     l3625 1DD9                                       l3617 1DBE  
                                     l3609 1DB4                                       l2921 09BF  
                                     l2913 09AB                                       l2905 0994  
                                     l2841 08BE                                       l2833 08AB  
                                     l2825 089C                                       l2745 1FAD  
                                     l2737 1F61                                       l2761 1328  
                                     l2753 12F4                                       l2681 0CBC  
                                     l2673 0CA9                                       l2665 0C96  
                                     l2657 0C5D                                       l2649 0C4A  
                                     l2593 0B67                                       l2585 0B42  
                                     l2577 0B2A                                       l2569 0B01  
                                     l2497 0A76                                       l2489 0A66  
                                     l3393 066B                                       l3385 0656  
                                     l3377 061D                                       l3369 05AF  
                                     l3297 0212                                       l3289 0110  
                                     l2729 1D55                                       l3449 108D  
                                     l3561 1734                                       l3553 1711  
                                     l3545 16F7                                       l3705 1E3E  
                                     l2691 1DAA                                       l2683 1D8E  
                                     l3715 080C                                       l3491 1BB6  
                                     l3483 1C8E                                       l3539 1C51  
                                     l3643 1CF6                                       l3635 1CDE  
                                     l3475 1C23                                       l3627 1D67  
                                     l3731 10D3                                       l3467 1B36  
                                     l3459 1B2B                                       l3651 0805  
                                     l3619 1DC7                                       l3723 1B58  
                                     l2931 09E0                                       l2923 09C0  
                                     l2915 09AC                                       l2907 099C  
                                     l2851 08CF                                       l2843 08C1  
                                     l2835 08B3                                       l2827 08A0  
                                     l2819 0892                                       l2739 1F75  
                                     l2763 1362                                       l2755 12FC  
                                     l2771 000B                                       l2675 0CAD  
                                     l2667 0C9B                                       l2659 0C6B  
                                     l2595 0B6B                                       l2587 0B47  
                                     l2579 0B2B                                       l2499 0A7B  
                                     l3395 0671                                       l3387 065C  
                                     l3379 0647                                       l3299 0233  
                                     l3571 1754                                       l3563 173A  
                                     l3555 1715                                       l3547 16FB  
                                     l3707 1E43                                       l2693 1DAF  
                                     l2685 1D90                                       l3661 1413  
                                     l3717 0847                                       l3469 1B48  
                                     l3493 1BB8                                       l3485 1C90  
                                     l3653 1C6C                                       l3637 1CE4  
                                     l3477 1C25                                       l3629 1D68  
                                     l3733 10E1                                       l3725 1B5F  
                                     l2933 09E5                                       l2941 0A16  
                                     l2925 09C4                                       l2917 09B5  
                                     l2909 099E                                       l2861 08EF  
                                     l2853 08D4                                       l2845 08C5  
                                     l2837 08B4                                       l2829 08A1  
                                     l2765 1364                                       l2757 1300  
                                     l2749 12C2                                       l2773 000D  
                                     l2677 0CAF                                       l2669 0CA3  
                                     l2597 0B6F                                       l3397 0677  
                                     l3389 0662                                       l3581 1796  
                                     l3573 176C                                       l3557 1724  
                                     l3549 16FF                                       l3709 1E5A  
                                     l3741 1366                                       l3821 11B7  
                                     ?_pad 0028                                       l2687 1D97  
                                     l2791 114B                                       l2783 112D  
                                     l3663 1418                                       l3719 0856  
                                     l3495 1BBA                                       l3487 1BAB  
                                     l3655 1C7E                                       l3639 1CEA  
                                     l3479 1C2D                                       l3735 10F1  
                                     l3727 10BD                                       l2951 0A4C  
                                     l2943 0A23                                       l2935 09F3  
                                     l2927 09D8                                       l2919 09BB  
                                     l2871 090B                                       l2863 08FB  
                                     l2855 08DC                                       l2847 08C9  
                                     l2839 08B6                                       l2759 1324  
                                     l2679 0CB8                                       l2599 0B78  
                                     l3399 067D                                       l3591 17D5  
                                     l3567 173C                                       l3559 172B  
                                     l3751 1382                                       l3743 1371  
                                     l3831 1207                                       l3823 11BC  
                                     l3815 118F                                       l2689 1D9B  
                                     l2793 114F                                       l2785 1140  
                                     l2777 1119                                       l3681 146A  
                                     l3673 1448                                       l3665 141C  
                                     l3489 1BB1                                       l3497 1BC2  
                                     l3657 1E6F                                       l3737 10FF  
                                     l3729 10C3                                       l3649 0800  
                                     l2953 0A51                                       l2945 0A31  
                                     l2937 09F7                                       l2881 0936  
                                     l2865 08FD                                       l2857 08DD  
                                     l2849 08CA                                       l2769 0003  
                                     l2697 1DDF                                       l3577 1784  
                                     l3569 1747                                       l3761 13C3  
                                     l3753 138D                                       l3833 120D  
                                     l3825 11D2                                       l3817 119F  
                                     l2971 0CCC                                       l2963 0CBE  
                                     l2787 1141                                       l2779 1124  
                                     l3691 149D                                       l3683 147A  
                                     l3675 1453                                       l3667 142C  
                                     l3499 1BC8                                       l3659 1EAB  
                                     l3739 110F                                       l2955 0A55  
                                     l2947 0A40                                       l2939 0A10  
                                     l2891 095B                                       l2883 093E  
                                     l2875 0914                                       l2859 08DF  
                                     l2699 1DE4                                       l3587 17C4  
                                     l3579 178C                                       l3595 17D8  
                                     l3771 1406                                       l3763 13CB  
                                     l3755 139B                                       l3747 1376  
                                     l3835 1216                                       l3827 11EA  
                                     l3819 11A8                                       l2981 0CE1  
                                     l2973 0CCD                                       l2965 0CC2  
                                     l2789 1149                                       l3693 14B3  
                                     l3685 1485                                       l3677 145A  
                                     l3669 143C                                       l2957 0A57  
                                     l2949 0A44                                       l2893 095C  
                                     l2885 0940                                       l2877 0926  
                                     l2869 0906                                       l3597 17F4  
                                     l3589 17CF                                       l3765 13D1  
                                     l3757 139E                                       l3749 137A  
                                     l3829 11F0                                       l2991 0CF5  
                                     l2983 0CE9                                       l2975 0CD2  
                                     l2967 0CC4                                       l2799 1157  
                                     l3695 14B8                                       l3687 1489  
                                     l3679 145C                                       l2887 0945  
                                     l2895 0965                                       l2879 092E  
                                     l3599 17FB                                       l3767 13EF  
                                     l3759 13A8                                       l2993 0CFA  
                                     l2985 0CEC                                       l2977 0CD7  
                                     l2969 0CC8                                       l3697 14BC  
                                     l3689 1493                                       l2897 0977  
                                     l2889 0957                                       l3769 1400  
                                     l2995 0CFF                                       l2987 0CF0  
                                     l2979 0CDF                                       l3699 14BD  
                                     l2899 0978                                       l2997 0D07  
                                     l2989 0CF4                                       l2999 0D09  
                                     STR_1 1040                                       STR_2 104E  
                                     STR_3 1031                                       STR_4 1010  
                                     STR_5 1021                                       STR_6 105B  
                                     STR_9 105F                                       u3000 0C50  
                                     u3001 0C4F                                       u3010 0C57  
                                     u3011 0C56                                       u3100 0CBC  
                                     u3020 0C5D                                       u3101 0CBB  
                                     u3021 0C5C                                       u3110 1D9B  
                                     u3030 0C6F                                       u3111 1D9A  
                                     u3031 0C6E                                       u4000 0F6E  
                                     u3200 1F75                                       u3040 0C80  
                                     u4001 0F6D                                       u3201 1F74  
                                     u3130 1DAF                                       u4010 0F75  
                                     u3210 1F91                                       u3050 0C8F  
                                     u3131 1DAE                                       u4011 0F74  
                                     u3211 1F90                                       u3051 0C8E  
                                     u4020 0F7B                                       u3220 1FAB  
                                     u3300 000B                                       u3060 0C96  
                                     u4100 003C                                       u3140 1E09  
                                     u3125 1DA2                                       u4021 0F7A  
                                     u3221 1FAA                                       u3301 000A  
                                     u3061 0C95                                       u3045 0C7B  
                                     u3141 1E08                                       u4030 0F8D  
                                     u3310 1124                                       u3230 12D8  
                                     u3070 0C9B                                       u4110 004B  
                                     u3150 1B77                                       u4031 0F8C  
                                     u3311 1123                                       u3231 12D7  
                                     u3071 0C9A                                       u4111 004A  
                                     u3151 1B76                                       u4040 0F9C  
                                     u3400 1183                                       u3320 113B  
                                     u3240 12F4                                       u3080 0CA8  
                                     u4120 0059                                       u4200 14F4  
                                     u2600 1253                                       u3160 1D48  
                                     u5000 1E68                                       u3401 1182  
                                     u3225 1FA7                                       u3241 12F3  
                                     u3081 0CA7                                       u4105 0037  
                                     u2601 1252                                       u3161 1D47  
                                     u5001 1E67                                       u4050 0FB9  
                                     u3330 114F                                       u5010 10C3  
                                     u3410 08A0                                       u3250 1300  
                                     u3090 0CAD                                       u4130 0064  
                                     u4210 1512                                       u2610 1285  
                                     u4051 0FB8                                       u3331 114E  
                                     u5011 10C2                                       u3411 089F  
                                     u3251 12FF                                       u3091 0CAC  
                                     u4131 0063                                       u4211 1511  
                                     u2611 1284                                       u4060 0FD3  
                                     u3340 1156                                       u5020 10E1  
                                     u3420 08A6                                       u2700 0AA7  
                                     u4140 0074                                       u4300 15B9  
                                     u4220 1519                                       u2620 12A6  
                                     u4061 0FD2                                       u4045 0F97  
                                     u3341 1155                                       u3325 1136  
                                     u5021 10E0                                       u3421 08A5  
                                     u3261 130F                                       u2701 0AA6  
                                     u4141 0073                                       u4125 0054  
                                     u4221 1518                                       u4205 14EF  
                                     u2630 1B46                                       u4070 0FEF  
                                     u5030 10FF                                       u3430 08AB  
                                     u3270 1328                                       u3262 1310  
                                     u2710 0AAC                                       u4150 0082  
                                     u4310 15C4                                       u4230 1529  
                                     u3190 1D62                                       u2631 1B45  
                                     u4071 0FEE                                       u4055 0FB5  
                                     u5031 10FE                                       u3431 08AA  
                                     u3271 1327                                       u3263 1315  
                                     u2711 0AAB                                       u4311 15C3  
                                     u4215 150E                                       u2615 1281  
                                     u3191 1D61                                       u3175 1D4F  
                                     u2560 1B24                                       u2640 1BA0  
                                     u3360 1166                                       u3520 095B  
                                     u3440 08C9                                       u3264 1316  
                                     u2800 0B3E                                       u2720 0AC5  
                                     u4160 008E                                       u4240 1547  
                                     u4320 1D1D                                       u4080 1FB5  
                                     u4400 1669                                       u5040 1371  
                                     u2561 1B23                                       u2641 1B9F  
                                     u4065 0FCF                                       u3361 1165  
                                     u3521 095A                                       u3505 0947  
                                     u3441 08C8                                       u3281 1337  
                                     u3265 131B                                       u2801 0B3D  
                                     u2721 0AC4                                       u4161 008C  
                                     u4305 15B4                                       u4241 1546  
                                     u4321 1D1C                                       u4081 1FB4  
                                     u4401 1668                                       u3185 1D56  
                                     u5041 1370                                       u2570 1B2A  
                                     u3370 116D                                       u4330 1BE4  
                                     u3610 09BF                                       u3450 08CF  
                                     u3290 1362                                       u3282 1338  
                                     u3266 131C                                       u2810 0B42  
                                     u2730 0AC9                                       u2650 0A70  
                                     u4170 008F                                       u4250 1556  
                                     u4090 1FDF                                       u4410 16C4  
                                     u5050 138D                                       u2571 1B29  
                                     u3371 116C                                       u3355 1158  
                                     u4331 1BE3                                       u3611 09BE  
                                     u3515 0950                                       u3451 08CE  
                                     u3291 1361                                       u3283 133D  
                                     u2811 0B41                                       u2731 0AC8  
                                     u2651 0A6F                                       u4155 007D  
                                     u4235 1524                                       u4091 1FDE  
                                     u4411 16C1                                       u5051 138C  
                                     u3700 0A55                                       u3620 09C4  
                                     u3540 0977                                       u3460 08D4  
                                     u3284 133E                                       u2900 0BD0  
                                     u2820 0B47                                       u2740 0B01  
                                     u2660 0A76                                       u4260 1561  
                                     u2580 122E                                       u4180 1C50  
                                     u4500 0297                                       u4420 16CB  
                                     u5060 13CB                                       u3701 0A54  
                                     u3621 09C3                                       u3605 09AE  
                                     u3541 0976                                       u3461 08D3  
                                     u3285 1343                                       u2901 0BD1  
                                     u2821 0B46                                       u2741 0B00  
                                     u2661 0A75                                       u4261 1560  
                                     u2581 122D                                       u4181 1C4F  
                                     u4501 0296                                       u4421 16CA  
                                     u5061 13CA                                       u5117 11B0  
                                     u3710 0CCC                                       u3390 117E  
                                     u4350 1BFB                                       u3630 09D8  
                                     u3550 098C                                       u3470 08EF  
                                     u3286 1344                                       u2910 0BED  
                                     u2902 0BD6                                       u2750 0B0A  
                                     u2670 0A7B                                       u4190 1B82  
                                     u2590 1234                                       u4510 02D1  
                                     u4430 00C0                                       u5070 13D1  
                                     u3711 0CCB                                       u3391 117D  
                                     u5207 1C19                                       u4351 1BFA  
                                     u3631 09D7                                       u3535 095E  
                                     u3471 08EE                                       u3295 135E  
                                     u2911 0BEC                                       u2903 0BD7  
                                     u2831 0B59                                       u2751 0B08  
                                     u2671 0A7A                                       u4271 156A  
                                     u4255 1551                                       u4191 1B81  
                                     u2591 1233                                       u4095 1FDB  
                                     u4511 02D0                                       u4503 0293  
                                     u4431 00BF                                       u5071 13D0  
                                     u5127 121E                                       u3720 0CD2  
                                     u3640 09DF                                       u3560 0994  
                                     u3480 090B                                       u2920 0C12  
                                     u2840 0B6B                                       u2832 0B60  
                                     u2760 0B0B                                       u2680 0A98  
                                     u4280 1597                                       u4272 1571  
                                     u4600 054E                                       u4520 02DD  
                                     u4360 1617                                       u5080 13EF  
                                     u3801 0D84                                       u3721 0CD1  
                                     u3385 1170                                       u4345 1CB0  
                                     u5137 1DC2                                       u3641 09DE  
                                     u3561 0993                                       u3545 0973  
                                     u3481 090A                                       u2921 0C11  
                                     u2841 0B6A                                       u2833 0B67  
                                     u2745 0AFD                                       u2681 0A97  
                                     u4273 1578                                       u4601 054D  
                                     u4521 02DC                                       u4441 0133  
                                     u4361 1616                                       u5081 13EE  
                                     u3802 0D8B                                       u3730 0CD7  
                                     u3650 09E5                                       u3570 099C  
                                     u3490 0945                                       u2930 0C17  
                                     u2850 0B6F                                       u2770 0B1B  
                                     u2690 0AA1                                       u4290 15A2  
                                     u4610 059B                                       u4530 02F6  
                                     u4450 016E                                       u4442 0136  
                                     u4370 163F                                       u3811 0DAE  
                                     u3803 0D92                                       u3731 0CD6  
                                     u5147 1C28                                       u3651 09E4  
                                     u3571 099B                                       u3555 097F  
                                     u3491 0944                                       u2931 0C16  
                                     u2851 0B6E                                       u2771 0B1A  
                                     u2691 0AA0                                       u4291 15A1  
                                     u4611 059A                                       u4531 02F5  
                                     u4451 016D                                       u4443 013D  
                                     u4371 163E                                       u3900 0EDB  
                                     u3812 0DB5                                       u3740 0CF4  
                                     u3660 09F7                                       u3556 0980  
                                     u2860 0B7E                                       u2780 0B2A  
                                     u4700 07AB                                       u4620 061D  
                                     u4540 02FA                                       u4460 01A7  
                                     u4444 0140                                       u4380 1644  
                                     u3821 0DCA                                       u3813 0DBC  
                                     u3741 0CF3                                       u5157 1C32  
                                     u3661 09F6                                       u3557 0985  
                                     u2861 0B7D                                       u2781 0B29  
                                     u4285 1592                                       u4701 07AA  
                                     u4621 061C                                       u4541 02F9  
                                     u4461 01A6                                       u4453 016A  
                                     u4445 0147                                       u4381 1643  
                                     u5085 13EB                                       u3822 0DD1  
                                     u3750 0CFA                                       u3670 0A06  
                                     u3590 09AB                                       u3558 0986  
                                     u2950 0C2F                                       u4630 0652  
                                     u4550 030A                                       u4446 014A  
                                     u4390 1662                                       u4710 107B  
                                     u3911 0EE7                                       u3823 0DD8  
                                     u3751 0CF9                                       u5167 1C82  
                                     u3591 09AA                                       u3559 098B  
                                     u2951 0C2E                                       u4631 0651  
                                     u4551 0309                                       u4471 01CC  
                                     u4391 1661                                       u4711 107A  
                                     u3920 0F03                                       u3912 0EEE  
                                     u3760 0CFF                                       u3680 0A23  
                                     u2960 0C34                                       u2880 0BA3  
                                     u4640 0656                                       u4560 0435  
                                     u4480 0207                                       u4472 01CF  
                                     u4720 10B8                                       u4800 1753  
                                     u3913 0EF5                                       u3905 0ED6  
                                     u3841 0DFE                                       u3761 0CFE  
                                     u5177 1C67                                       u3681 0A22  
                                     u3585 09A0                                       u2961 0C33  
                                     u2945 0C24                                       u2881 0BA2  
                                     u4641 0655                                       u4625 0619  
                                     u4561 0434                                       u4481 0206  
                                     u4473 01D6                                       u4721 10B7  
                                     u4801 1752                                       u3842 0E05  
                                     u3770 0D16                                       u4810 1D8C  
                                     u3690 0A40                                       u2970 0C3F  
                                     u4650 0689                                       u4570 04AB  
                                     u4474 01D9                                       u3931 0F0F  
                                     u3851 0E29                                       u3843 0E0C  
                                     u3835 0DDA                                       u3771 0D15  
                                     u5187 1B52                                       u4811 1D8B  
                                     u3691 0A3F                                       u3675 0A01  
                                     u2971 0C3E                                       u2891 0BBC  
                                     u2883 0B9F                                       u2875 0B83  
                                     u2795 0B2F                                       u4651 0688  
                                     u4571 04AA                                       u4491 025C  
                                     u4483 0203                                       u4475 01E0  
                                     u3932 0F16                                       u3852 0E30  
                                     u3780 0D1B                                       u4900 1459  
                                     u4740 1BB6                                       u4820 1CE4  
                                     u2980 0C45                                       u2892 0BBD  
                                     u4660 074F                                       u4580 04D1  
                                     u4492 025F                                       u4476 01E3  
                                     _RCEN 048B                                       u3933 0F1D  
                                     u3925 0EFE                                       u3853 0E37  
                                     u3781 0D1A                                       u4901 1458  
                                     u5197 1C0F                                       u4741 1BB5  
                                     u4821 1CE3                                       u3685 0A1F  
                                     u2981 0C44                                       u2893 0BC2  
                                     u4661 074E                                       u4581 04D0  
                                     u4565 0431                                       u4493 0266  
                                     u4750 1BCD                                       u4830 1CEA  
                                     u2990 0C4A                                       u2894 0BC3  
                                     u4670 075E                                       u4590 04D7  
                                     u4494 0269                                       u3871 0E5D  
                                     u3791 0D68                                       u4751 1BCC  
                                     u4735 1C94                                       u4831 1CE9  
                                     u3695 0A3C                                       u2991 0C49  
                                     u2895 0BC8                                       u4671 075D  
                                     u4591 04D6                                       u4495 0270  
                                     u3960 0F41                                       u3872 0E64  
                                     u3792 0D6F                                       u4920 1479  
                                     u4840 1CF0                                       u2896 0BC9  
                                     u4680 0797                                       u4496 0273  
                                     u3961 0F40                                       u3945 0F1F  
                                     u3881 0E88                                       u3873 0E6B  
                                     u3865 0E39                                       u3793 0D76  
                                     u4921 1478                                       u4841 1CEF  
                                     u4681 0795                                       u4665 074B  
                                     u3882 0E8F                                       u4850 1CF6  
                                     u4690 0798                                       u3955 0F36  
                                     u3891 0EB3                                       u3883 0E96  
                                     u4915 146B                                       u4851 1CF5  
                                     u4675 075A                                       u3980 0F55  
                                     u3892 0EBA                                       u4940 1489  
                                     u4860 1418                                       u4780 16F7  
                                     u3981 0F54                                       u3893 0EC1  
                                     u4941 1488                                       u4861 1417  
                                     u4765 1F36                                       u4781 16F6  
                                     u3990 0F5A                                       u4950 148F  
                                     u4870 141C                                       u4790 1711  
                                     u3991 0F59                                       u3975 0F44  
                                     u4951 148E                                       u4935 147E  
                                     u4871 141B                                       u4775 1EF9  
                                     u4791 1710                                       u4960 1493  
                                     u4880 143C                                       u4961 1492  
                                     u4881 143B                                       u4970 14A8  
                                     u4980 14B8                                       u4981 14B7  
                                     u4990 14BC                                       u4991 14BB  
                                     u4975 14A3                                       u4895 144B  
                                     _RSEN 0489                           __end_of_I2C_NACK 1B1E  
                                     _dbuf 0110           __end_of_I2C_Master_RepeatedStart 1AF4  
                                     _labs 1B7E                                       _main 118F  
                                     _prec 00E8                                       _nout 00E4  
                                     pad@i 002D                                       pad@p 002B  
                                     btemp 007E                              ___fpclassifyf 000E  
                             _snprintf$802 005D                                       start 0000  
                    ?_moveCursorToPosition 0070                            ___fldiv@new_exp 0025  
       MCP9800_ReadTemperature@temperature 0046                                      ??_pad 007D  
                         ?_I2C_Master_Init 0070                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                              ___fltol@sign1 0042  
                                    ?_labs 0070                            __end_of___fladd 0CBE  
                                    ?_main 0070                                      _ACKEN 048C  
                                    _ACKDT 048D                            __end_of___fldiv 0A62  
                          __end_of___flneg 000E                            __end_of___flmul 1000  
                          __end_of___flsub 1D42                            __end_of___fltol 118F  
                             vfpfcnvrt@fmt 00CE                                      _PORTB 0006  
                                    _TRISB 0086                                      _SSPIF 0063  
           MCP9800_ReadConfig@config_value 0071                       __end_of_MCP9800_Init 080C  
                        sendDataToLCD@data 0071                                      _flags 00EC  
                      read_prec_or_width@c 0078                                      _errno 00EA  
                      read_prec_or_width@n 0079                                      _fputc 1228  
                                    _fputs 1DDF                                      labs@a 0070  
                                    pad@fp 0028                                      _width 00E6  
                                    _putch 1069                                      pclath 000A  
           MCP9800_SetConfigOneShot@enable 0072             MCP9800_SetConfigOneShot@config 0073  
                  ?_configureInterruptMode 0070                                      status 0003  
                                    wtemp0 007E                             ?___fpclassifyf 0070  
                          __initialization 07E2                     ??_MCP9800_SetHYST_Temp 0073  
                             __end_of_labs 1B93                               __end_of_main 1228  
                                ??_I2C_ACK 0070                                     ??_labs 0074  
                                   ??_main 006D                 __end_of_read_prec_or_width 10BD  
                        ?_I2C_Master_Start 0070                          ?_I2C_Master_Write 0070  
                 _MCP9800_SetConfigOneShot 1BD8                         ??_I2C_Master_Start 0070  
                                   _ADCON1 009F                         ??_I2C_Master_Write 0070  
                                   ?_fputc 0070                    _MCP9800_ReadTemperature 080C  
                                   ?_fputs 0020                 __end_of_MCP9800_ReadConfig 1E38  
           __end_of_configureInterruptMode 1EE7                                     ?_putch 0070  
                                   _SSPADD 0093                                     _TRISC3 043B  
                                   _TRISC4 043C                                     _SSPCON 0014  
                                   _SSPBUF 0013                     ??_moveCursorToPosition 0072  
                         _sendCommandToLCD 1C06                           __end_of___xxtofl 14C6  
                        _handleButtonPress 10BD                           __end_of_clearLCD 1B58  
                       ?_handleButtonPress 0070                   _I2C_Master_RepeatedStart 1AEB  
                             vfprintf@cfmt 0059                                     ___flge 12C2  
                                   ___fleq 1F61                              _I2C_Read_Byte 1B93  
                                ??___fladd 0020                                     ___wmul 1D42  
                                ??___fldiv 0078                                  ??___flneg 0074  
                  ??_MCP9800_SetLIMIT_Temp 0073                                  ??___flmul 0028  
                                ??___flsub 007E                                  ??___fltol 003E  
                                   _efgtoa 15D5                        _MCP9800_WriteConfig 1CBF  
                                   _floorf 14C6                        ??_handleButtonPress 0079  
                                   _memcpy 1CFD                       read_prec_or_width@ap 0077  
                                   pad@buf 002A                                     _strcpy 1C38  
                                   _strlen 1B6A                                  ?_I2C_NACK 0070  
                                   fputc@c 0070                                     fputs@c 0025  
                                   fputs@i 0026                                     fputs@s 0020  
                          ___fpclassifyf@e 0020                            ___fpclassifyf@u 0022  
                          ___fpclassifyf@x 0070                                     putch@c 0070  
                         __end_of_vfprintf 1E6F                           __end_of_snprintf 1412  
                     ?_MCP9800_WriteConfig 0070        __end_of_MCP9800_SetConfigFaultQueue 1CA3  
              _MCP9800_SetConfigFaultQueue 1C87                                 ___flge@ff1 003A  
                               ___flge@ff2 003E                            ??___fpclassifyf 0074  
                __end_of_handleButtonPress 1119                               ___xxtofl@arg 007A  
                             ___xxtofl@exp 0079                               ___xxtofl@val 0070  
                               ___fleq@ff1 0070                                 ___fleq@ff2 0074  
                  __end_of__initialization 07FC                                 ___flneg@f1 0070  
                 ?_configureComparatorMode 0070                                 ___fltol@f1 003A  
                         printToLCD@string 0072                             ?_I2C_Read_Byte 0070  
         MCP9800_SetConfigCompIntMode@mode 0072                             __pcstackCOMMON 0070  
                            __end_of_fputc 12C2               __end_of_configureOneShotMode 1C87  
                            __end_of_fputs 1E0A                              __end_of_putch 106A  
                               ??_I2C_NACK 0070          MCP9800_SetConfigResolution@config 0074  
                ??_MCP9800_ReadTemperature 007E                   MCP9800_SetLIMIT_Temp@lsb 0076  
                 MCP9800_SetLIMIT_Temp@msb 0075                      ??_MCP9800_WriteConfig 0071  
                                  ??_fputc 0074                                    ??_fputs 0023  
                                  ??_putch 0070                                 __pbssBANK1 00E4  
                               __pbssBANK2 0110                                 __pbssBANK3 0190  
                        __end_of__Umul8_16 1DB4                                 _efgtoa$899 00A6  
                            _initializeLCD 1DB4                                 __pmaintext 118F  
                             _MCP9800_Init 0800                                    ?___flge 003A  
                                  ?___fleq 0070                                    ?___wmul 0070  
                                  ?_efgtoa 0046                                    _I2C_ACK 1B06  
                                  ?_floorf 002D                                    ?_memcpy 0070  
                                  _ACKSTAT 048E                                    ?_strcpy 0070  
                                  ?_strlen 0070                                  ?___xxtofl 0070  
                                ?_clearLCD 0070     __end_of_MCP9800_SetConfigAlertPolarity 1BC1  
           _MCP9800_SetConfigAlertPolarity 1BAA        __end_of_MCP9800_SetConfigResolution 1CBF  
              _MCP9800_SetConfigResolution 1CA3                                    _SSPCON2 0091  
                                  _SSPSTAT 0094                                 __stringtab 1000  
                          ??_I2C_Read_Byte 0070                             ?_initializeLCD 0070  
                                  ___fladd 0A62                                    ___fldiv 0892  
                                  ___flneg 0003                                    ___flmul 0CBE  
                                  ___flsub 1D1E                                    ___fltol 1119  
               __end_of_initializeHardware 1B6A                                  ?_vfprintf 00D0  
          MCP9800_ReadTemperature@temp_lsb 0049            MCP9800_ReadTemperature@temp_msb 0048  
                                ?_snprintf 00D4                 ??_MCP9800_SetConfigOneShot 0072  
                                  __ptext1 1366                                    __ptext2 1E38  
                                  __ptext3 16E6                                    __ptext4 106A  
                                  __ptext5 1D42                                    __ptext6 15D5  
                                  __ptext7 1C38                                    __ptext8 1FAF  
                                  __ptext9 1B6A                   __end_of_sendCommandToLCD 1C1F  
                    read_prec_or_width@fmt 0076                                 ??___xxtofl 0074  
                               ??_clearLCD 0072                                    efgtoa@c 004C  
                                  efgtoa@d 00AB                                    efgtoa@e 00AF  
                                  efgtoa@f 0048                                    efgtoa@g 00C4  
                                  efgtoa@h 00B9                                    efgtoa@i 00B7  
                                  efgtoa@l 00BD                                    efgtoa@m 00AD  
                                  efgtoa@n 00C2                                    efgtoa@p 00A2  
                                  efgtoa@t 00A4                                    efgtoa@u 00C8  
                                  efgtoa@w 00B1         MCP9800_SetHYST_Temp@temp_raw_value 0077  
                                  clrloop0 1AE4                       end_of_initialization 07FC  
                                  floorf@e 003B                                    floorf@m 0037  
                                  floorf@u 003D                                    floorf@x 002D  
               ??_I2C_Master_RepeatedStart 0070                       _configureOneShotMode 1C6C  
                                  memcpy@d 0075                                    memcpy@n 0072  
                                  memcpy@s 0076                                    fputc@fp 0072  
                                  fputs@fp 0021                         _read_prec_or_width 106A  
                       _MCP9800_ReadConfig 1E0A                          __end_of_vfpfcnvrt 1800  
                               efgtoa@mode 00A9                                 efgtoa@sign 00C1  
              moveCursorToPosition@address 0072                        ?_read_prec_or_width 0076  
                                  psplit$0 110047                           vfpfcnvrt@convarg 0053  
                               ??_vfprintf 007E                                 ??_snprintf 005A  
                                  strcpy@d 0072                                    strlen@a 0072  
                                  strlen@s 0070              __end_of_MCP9800_SetLIMIT_Temp 1F61  
                      ?_MCP9800_ReadConfig 0070                                 _printToLCD 1D67  
                                _PORTCbits 0007                                ___fladd@grs 007B  
                            _sendDataToLCD 1C1F                              ___xxtofl@sign 0078  
                                _TRISAbits 0085                                  _TRISCbits 0087  
     __end_of_MCP9800_SetConfigCompIntMode 1BD8               _MCP9800_SetConfigCompIntMode 1BC1  
                     ??_read_prec_or_width 0078                                ___fldiv@grs 0027  
                              ___fldiv@rem 0020                      ?_configureOneShotMode 0070  
                     ??_MCP9800_ReadConfig 0071                                ___flmul@grs 002E  
                          ??_initializeLCD 0074                             __end_of___flge 1366  
                           __end_of___fleq 1FAF                                vfpfcnvrt@ap 00CF  
                              vfpfcnvrt@cp 0058                                vfpfcnvrt@fp 00CC  
                           __end_of___wmul 1D67                             __end_of_efgtoa 07E2  
                           __end_of_floorf 15D5                             __end_of_memcpy 1D1E  
                               floorf@F521 0190                             ?_sendDataToLCD 0070  
                           __end_of_strcpy 1C51                             __end_of_strlen 1B7E  
                      start_initialization 07E2                                __end_of_pad 2000  
                        pnum$text6_split_1 0047          MCP9800_SetConfigFaultQueue@config 0074  
            ?_MCP9800_SetConfigCompIntMode 0070                          ??_I2C_Master_Init 0070  
                        ??_I2C_Master_Wait 0070                 ?_MCP9800_SetConfigShutdown 0070  
                        ??_I2C_Master_Stop 0070                      __end_of___fpclassifyf 009B  
                 MCP9800_WriteConfig@value 0071                                vfprintf@fmt 00D2  
                                 ??___flge 0042                                   ??___fleq 0078  
           MCP9800_SetHYST_Temp@temp_value 0071                                   ??___wmul 0074  
                                 ??_efgtoa 004D                                  __Umul8_16 1D8D  
                                 ?_I2C_ACK 0070                    sendCommandToLCD@command 0071  
                                 ??_floorf 0031                                   ??_memcpy 0074  
                              ?_printToLCD 0072                                   ??_strcpy 0072  
                                 ??_strlen 0072                                  ___fladd@a 0074  
                                ___fladd@b 0070                __end_of_MCP9800_WriteConfig 1CDD  
                                ___fldiv@a 0070                                  ___fldiv@b 0074  
                 ??_configureInterruptMode 0079                                  ___flmul@a 0024  
                                ___flmul@b 0020                                  ___flsub@a 003A  
                                ___flsub@b 003E                                  ___latbits 0002  
                            __pcstackBANK0 0020                              __pcstackBANK1 00A0  
                              snprintf@cnt 0060                                snprintf@fmt 00D7  
                   ??_configureOneShotMode 0075          __end_of_MCP9800_SetConfigShutdown 1C06  
                  MCP9800_SetHYST_Temp@lsb 0076                    MCP9800_SetHYST_Temp@msb 0075  
                         _I2C_Master_Start 1AF4                           _I2C_Master_Write 1B38  
         ??_MCP9800_SetConfigAlertPolarity 0072            ?_MCP9800_SetConfigAlertPolarity 0070  
                                _main$1258 00E0                                   ?___fladd 0070  
                                 ?___fldiv 0070                                   ?___flneg 0070  
                                 ?___flmul 0020                                   ?___flsub 003A  
                                 ?___fltol 003A                                 ?__Umul8_16 0070  
                          ??_sendDataToLCD 0070                       I2C_Master_Write@data 0070  
                                __pstrings 1000                   ?_MCP9800_ReadTemperature 0044  
                                 _I2C_NACK 1B12                          ?_sendCommandToLCD 0070  
                       ??_sendCommandToLCD 0070            MCP9800_SetConfigShutdown@enable 0072  
                       _initializeHardware 1B58            MCP9800_SetConfigShutdown@config 0073  
    MCP9800_SetConfigResolution@resolution 0073                        ?_initializeHardware 0070  
                           ___wmul@product 0074             ??_MCP9800_SetConfigCompIntMode 0072  
                                clear_ram0 1AE3                      __end_of_I2C_Read_Byte 1BAA  
                  _configureComparatorMode 1E6F                                  _vfpfcnvrt 16E6  
   MCP9800_SetConfigFaultQueue@fault_queue 0073                       ??_initializeHardware 0076  
                              __stringbase 100F                          ___wmul@multiplier 0070  
   MCP9800_SetConfigAlertPolarity@polarity 0072               __end_of_MCP9800_SetHYST_Temp 1F24  
                               vfpfcnvrt@c 0057  __end_of_configureContinuousConversionMode 1C6C  
      ??_configureContinuousConversionMode 0075         ?_configureContinuousConversionMode 0070  
        _configureContinuousConversionMode 1C51               ?_MCP9800_SetConfigFaultQueue 0070  
                ?_MCP9800_SetConfigOneShot 0070                                  memcpy@tmp 0074  
                               vfprintf@ap 00D3                                 vfprintf@fp 00D0  
          __end_of_MCP9800_ReadTemperature 0892                                ??__Umul8_16 0072  
                ?_I2C_Master_RepeatedStart 0070                                 ?_vfpfcnvrt 00CC  
                               snprintf@ap 005F                         __end_of__stringtab 1010  
                       ___fpclassifyf@F465 0194                      _MCP9800_SetLIMIT_Temp 1F24  
             __end_of_moveCursorToPosition 1CFD                            _I2C_Master_Init 1B2B  
                                 ___xxtofl 1412                            _I2C_Master_Wait 1B1E  
                          _I2C_Master_Stop 1AFD                                   _clearLCD 1B48  
       MCP9800_SetConfigCompIntMode@config 0073                                   __ptext10 1DDF  
                                 __ptext11 1228                                   __ptext20 12C2  
                                 __ptext12 1069                                   __ptext21 1F61  
                                 __ptext13 1CFD                                   __ptext30 1CDD  
                                 __ptext22 0892                                   __ptext14 1B7E  
                                 __ptext31 1C6C                                   __ptext23 1B58  
                                 __ptext15 14C6                                   __ptext40 1C87  
                                 __ptext32 1EAB                                   __ptext24 1DB4  
                                 __ptext16 000E                                   __ptext41 1BC1  
                                 __ptext33 1E6F                                   __ptext25 0800  
                                 __ptext17 1D1E                                   __ptext50 0CBE  
                                 __ptext42 1BAA                                   __ptext34 1C51  
                                 __ptext26 1B2B                                   __ptext18 0A62  
                                 __ptext51 1D8D                                   __ptext43 1CBF  
                                 __ptext35 1BEF                                   __ptext27 10BD  
                                 __ptext19 0003                                   __ptext52 1B93  
                                 __ptext44 1E0A                                   __ptext36 1CA3  
                                 __ptext28 1D67                                   __ptext53 1B12  
                                 __ptext45 1B48                                   __ptext37 1BD8  
                                 __ptext29 1C1F                                   __ptext54 1B38  
                                 __ptext46 1C06                                   __ptext38 1F24  
                                 __ptext55 1AFD                                   __ptext47 080C  
                                 __ptext39 1EE7                                   __ptext56 1AF4  
                                 __ptext48 1412                                   __ptext57 1AEB  
                                 __ptext49 1119                                   __ptext58 1B06  
                                 __ptext59 1B1E                                 strcpy@dest 0070  
              ??_MCP9800_SetConfigShutdown 0072                                  pnum$text6 0011  
            ??_MCP9800_SetConfigFaultQueue 0072                     _configureInterruptMode 1EAB  
                    __end_of_initializeLCD 1DDF                                   efgtoa@fp 0046  
                                 efgtoa@ne 00A0                              ?_MCP9800_Init 0070  
                                 efgtoa@pp 00A8                                   efgtoa@ou 00B3  
                ??_configureComparatorMode 0079                                   _vfprintf 1E38  
                                 _snprintf 1366                                   main@temp 00DC  
                             ??_printToLCD 0074                   __end_of_I2C_Master_Start 1AFD  
                 __end_of_I2C_Master_Write 1B48                                   memcpy@d1 0070  
                                 memcpy@s1 0071               ?_MCP9800_SetConfigResolution 0070  
                                snprintf@f 0062                                  snprintf@n 00D5  
                                snprintf@s 00D4                                  strcpy@src 0071  
                       __end_of_printToLCD 1D8D                                  stringcode 100A  
                           ??_MCP9800_Init 0072                                efgtoa@nmode 00AA  
                     _MCP9800_SetHYST_Temp 1EE7                    __end_of_I2C_Master_Init 1B38  
                  __end_of_I2C_Master_Wait 1B2B                    __end_of_I2C_Master_Stop 1B06  
                              ??_vfpfcnvrt 0051                  _MCP9800_SetConfigShutdown 1BEF  
                   ?_MCP9800_SetLIMIT_Temp 0071                     __Umul8_16@multiplicand 0070  
                                 stringdir 100A                                   stringtab 1000  
          __end_of_configureComparatorMode 1EAB                              ___fladd@signs 0078  
                            _displayString 0198              ??_MCP9800_SetConfigResolution 0072  
                             ___fladd@aexp 0079                               ___fladd@bexp 007A  
                     __Umul8_16@multiplier 0078                       _moveCursorToPosition 1CDD  
                        __Umul8_16@product 0074  
