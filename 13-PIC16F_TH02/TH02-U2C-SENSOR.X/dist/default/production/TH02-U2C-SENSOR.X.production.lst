

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 10 16:16:06 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    43                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=3
    44                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2,group=2
    58                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2,group=2
    59                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2,group=2
    60                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2,group=2
    61                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2,group=2
    62                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2,group=2
    63                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2,group=2
    64                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    65                           	dabs	1,0x7E,2
    66     0000                     
    67                           ; Generated 12/10/2023 GMT
    68                           ; 
    69                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F877A Definitions
    99                           ; 
   100                           ; SFR Addresses
   101     0004                     fsr             equ	4
   102     0004                     fsr0            equ	4
   103     0000                     indf            equ	0
   104     0000                     indf0           equ	0
   105     0002                     pc              equ	2
   106     0002                     pcl             equ	2
   107     000A                     pclath          equ	10
   108     0003                     status          equ	3
   109     0000                     INDF            equ	0	;# 
   110     0001                     TMR0            equ	1	;# 
   111     0002                     PCL             equ	2	;# 
   112     0003                     STATUS          equ	3	;# 
   113     0004                     FSR             equ	4	;# 
   114     0005                     PORTA           equ	5	;# 
   115     0006                     PORTB           equ	6	;# 
   116     0007                     PORTC           equ	7	;# 
   117     0008                     PORTD           equ	8	;# 
   118     0009                     PORTE           equ	9	;# 
   119     000A                     PCLATH          equ	10	;# 
   120     000B                     INTCON          equ	11	;# 
   121     000C                     PIR1            equ	12	;# 
   122     000D                     PIR2            equ	13	;# 
   123     000E                     TMR1            equ	14	;# 
   124     000E                     TMR1L           equ	14	;# 
   125     000F                     TMR1H           equ	15	;# 
   126     0010                     T1CON           equ	16	;# 
   127     0011                     TMR2            equ	17	;# 
   128     0012                     T2CON           equ	18	;# 
   129     0013                     SSPBUF          equ	19	;# 
   130     0014                     SSPCON          equ	20	;# 
   131     0015                     CCPR1           equ	21	;# 
   132     0015                     CCPR1L          equ	21	;# 
   133     0016                     CCPR1H          equ	22	;# 
   134     0017                     CCP1CON         equ	23	;# 
   135     0018                     RCSTA           equ	24	;# 
   136     0019                     TXREG           equ	25	;# 
   137     001A                     RCREG           equ	26	;# 
   138     001B                     CCPR2           equ	27	;# 
   139     001B                     CCPR2L          equ	27	;# 
   140     001C                     CCPR2H          equ	28	;# 
   141     001D                     CCP2CON         equ	29	;# 
   142     001E                     ADRESH          equ	30	;# 
   143     001F                     ADCON0          equ	31	;# 
   144     0081                     OPTION_REG      equ	129	;# 
   145     0085                     TRISA           equ	133	;# 
   146     0086                     TRISB           equ	134	;# 
   147     0087                     TRISC           equ	135	;# 
   148     0088                     TRISD           equ	136	;# 
   149     0089                     TRISE           equ	137	;# 
   150     008C                     PIE1            equ	140	;# 
   151     008D                     PIE2            equ	141	;# 
   152     008E                     PCON            equ	142	;# 
   153     0091                     SSPCON2         equ	145	;# 
   154     0092                     PR2             equ	146	;# 
   155     0093                     SSPADD          equ	147	;# 
   156     0094                     SSPSTAT         equ	148	;# 
   157     0098                     TXSTA           equ	152	;# 
   158     0099                     SPBRG           equ	153	;# 
   159     009C                     CMCON           equ	156	;# 
   160     009D                     CVRCON          equ	157	;# 
   161     009E                     ADRESL          equ	158	;# 
   162     009F                     ADCON1          equ	159	;# 
   163     010C                     EEDATA          equ	268	;# 
   164     010D                     EEADR           equ	269	;# 
   165     010E                     EEDATH          equ	270	;# 
   166     010F                     EEADRH          equ	271	;# 
   167     018C                     EECON1          equ	396	;# 
   168     018D                     EECON2          equ	397	;# 
   169     0000                     INDF            equ	0	;# 
   170     0001                     TMR0            equ	1	;# 
   171     0002                     PCL             equ	2	;# 
   172     0003                     STATUS          equ	3	;# 
   173     0004                     FSR             equ	4	;# 
   174     0005                     PORTA           equ	5	;# 
   175     0006                     PORTB           equ	6	;# 
   176     0007                     PORTC           equ	7	;# 
   177     0008                     PORTD           equ	8	;# 
   178     0009                     PORTE           equ	9	;# 
   179     000A                     PCLATH          equ	10	;# 
   180     000B                     INTCON          equ	11	;# 
   181     000C                     PIR1            equ	12	;# 
   182     000D                     PIR2            equ	13	;# 
   183     000E                     TMR1            equ	14	;# 
   184     000E                     TMR1L           equ	14	;# 
   185     000F                     TMR1H           equ	15	;# 
   186     0010                     T1CON           equ	16	;# 
   187     0011                     TMR2            equ	17	;# 
   188     0012                     T2CON           equ	18	;# 
   189     0013                     SSPBUF          equ	19	;# 
   190     0014                     SSPCON          equ	20	;# 
   191     0015                     CCPR1           equ	21	;# 
   192     0015                     CCPR1L          equ	21	;# 
   193     0016                     CCPR1H          equ	22	;# 
   194     0017                     CCP1CON         equ	23	;# 
   195     0018                     RCSTA           equ	24	;# 
   196     0019                     TXREG           equ	25	;# 
   197     001A                     RCREG           equ	26	;# 
   198     001B                     CCPR2           equ	27	;# 
   199     001B                     CCPR2L          equ	27	;# 
   200     001C                     CCPR2H          equ	28	;# 
   201     001D                     CCP2CON         equ	29	;# 
   202     001E                     ADRESH          equ	30	;# 
   203     001F                     ADCON0          equ	31	;# 
   204     0081                     OPTION_REG      equ	129	;# 
   205     0085                     TRISA           equ	133	;# 
   206     0086                     TRISB           equ	134	;# 
   207     0087                     TRISC           equ	135	;# 
   208     0088                     TRISD           equ	136	;# 
   209     0089                     TRISE           equ	137	;# 
   210     008C                     PIE1            equ	140	;# 
   211     008D                     PIE2            equ	141	;# 
   212     008E                     PCON            equ	142	;# 
   213     0091                     SSPCON2         equ	145	;# 
   214     0092                     PR2             equ	146	;# 
   215     0093                     SSPADD          equ	147	;# 
   216     0094                     SSPSTAT         equ	148	;# 
   217     0098                     TXSTA           equ	152	;# 
   218     0099                     SPBRG           equ	153	;# 
   219     009C                     CMCON           equ	156	;# 
   220     009D                     CVRCON          equ	157	;# 
   221     009E                     ADRESL          equ	158	;# 
   222     009F                     ADCON1          equ	159	;# 
   223     010C                     EEDATA          equ	268	;# 
   224     010D                     EEADR           equ	269	;# 
   225     010E                     EEDATH          equ	270	;# 
   226     010F                     EEADRH          equ	271	;# 
   227     018C                     EECON1          equ	396	;# 
   228     018D                     EECON2          equ	397	;# 
   229     0000                     INDF            equ	0	;# 
   230     0001                     TMR0            equ	1	;# 
   231     0002                     PCL             equ	2	;# 
   232     0003                     STATUS          equ	3	;# 
   233     0004                     FSR             equ	4	;# 
   234     0005                     PORTA           equ	5	;# 
   235     0006                     PORTB           equ	6	;# 
   236     0007                     PORTC           equ	7	;# 
   237     0008                     PORTD           equ	8	;# 
   238     0009                     PORTE           equ	9	;# 
   239     000A                     PCLATH          equ	10	;# 
   240     000B                     INTCON          equ	11	;# 
   241     000C                     PIR1            equ	12	;# 
   242     000D                     PIR2            equ	13	;# 
   243     000E                     TMR1            equ	14	;# 
   244     000E                     TMR1L           equ	14	;# 
   245     000F                     TMR1H           equ	15	;# 
   246     0010                     T1CON           equ	16	;# 
   247     0011                     TMR2            equ	17	;# 
   248     0012                     T2CON           equ	18	;# 
   249     0013                     SSPBUF          equ	19	;# 
   250     0014                     SSPCON          equ	20	;# 
   251     0015                     CCPR1           equ	21	;# 
   252     0015                     CCPR1L          equ	21	;# 
   253     0016                     CCPR1H          equ	22	;# 
   254     0017                     CCP1CON         equ	23	;# 
   255     0018                     RCSTA           equ	24	;# 
   256     0019                     TXREG           equ	25	;# 
   257     001A                     RCREG           equ	26	;# 
   258     001B                     CCPR2           equ	27	;# 
   259     001B                     CCPR2L          equ	27	;# 
   260     001C                     CCPR2H          equ	28	;# 
   261     001D                     CCP2CON         equ	29	;# 
   262     001E                     ADRESH          equ	30	;# 
   263     001F                     ADCON0          equ	31	;# 
   264     0081                     OPTION_REG      equ	129	;# 
   265     0085                     TRISA           equ	133	;# 
   266     0086                     TRISB           equ	134	;# 
   267     0087                     TRISC           equ	135	;# 
   268     0088                     TRISD           equ	136	;# 
   269     0089                     TRISE           equ	137	;# 
   270     008C                     PIE1            equ	140	;# 
   271     008D                     PIE2            equ	141	;# 
   272     008E                     PCON            equ	142	;# 
   273     0091                     SSPCON2         equ	145	;# 
   274     0092                     PR2             equ	146	;# 
   275     0093                     SSPADD          equ	147	;# 
   276     0094                     SSPSTAT         equ	148	;# 
   277     0098                     TXSTA           equ	152	;# 
   278     0099                     SPBRG           equ	153	;# 
   279     009C                     CMCON           equ	156	;# 
   280     009D                     CVRCON          equ	157	;# 
   281     009E                     ADRESL          equ	158	;# 
   282     009F                     ADCON1          equ	159	;# 
   283     010C                     EEDATA          equ	268	;# 
   284     010D                     EEADR           equ	269	;# 
   285     010E                     EEDATH          equ	270	;# 
   286     010F                     EEADRH          equ	271	;# 
   287     018C                     EECON1          equ	396	;# 
   288     018D                     EECON2          equ	397	;# 
   289     0000                     INDF            equ	0	;# 
   290     0001                     TMR0            equ	1	;# 
   291     0002                     PCL             equ	2	;# 
   292     0003                     STATUS          equ	3	;# 
   293     0004                     FSR             equ	4	;# 
   294     0005                     PORTA           equ	5	;# 
   295     0006                     PORTB           equ	6	;# 
   296     0007                     PORTC           equ	7	;# 
   297     0008                     PORTD           equ	8	;# 
   298     0009                     PORTE           equ	9	;# 
   299     000A                     PCLATH          equ	10	;# 
   300     000B                     INTCON          equ	11	;# 
   301     000C                     PIR1            equ	12	;# 
   302     000D                     PIR2            equ	13	;# 
   303     000E                     TMR1            equ	14	;# 
   304     000E                     TMR1L           equ	14	;# 
   305     000F                     TMR1H           equ	15	;# 
   306     0010                     T1CON           equ	16	;# 
   307     0011                     TMR2            equ	17	;# 
   308     0012                     T2CON           equ	18	;# 
   309     0013                     SSPBUF          equ	19	;# 
   310     0014                     SSPCON          equ	20	;# 
   311     0015                     CCPR1           equ	21	;# 
   312     0015                     CCPR1L          equ	21	;# 
   313     0016                     CCPR1H          equ	22	;# 
   314     0017                     CCP1CON         equ	23	;# 
   315     0018                     RCSTA           equ	24	;# 
   316     0019                     TXREG           equ	25	;# 
   317     001A                     RCREG           equ	26	;# 
   318     001B                     CCPR2           equ	27	;# 
   319     001B                     CCPR2L          equ	27	;# 
   320     001C                     CCPR2H          equ	28	;# 
   321     001D                     CCP2CON         equ	29	;# 
   322     001E                     ADRESH          equ	30	;# 
   323     001F                     ADCON0          equ	31	;# 
   324     0081                     OPTION_REG      equ	129	;# 
   325     0085                     TRISA           equ	133	;# 
   326     0086                     TRISB           equ	134	;# 
   327     0087                     TRISC           equ	135	;# 
   328     0088                     TRISD           equ	136	;# 
   329     0089                     TRISE           equ	137	;# 
   330     008C                     PIE1            equ	140	;# 
   331     008D                     PIE2            equ	141	;# 
   332     008E                     PCON            equ	142	;# 
   333     0091                     SSPCON2         equ	145	;# 
   334     0092                     PR2             equ	146	;# 
   335     0093                     SSPADD          equ	147	;# 
   336     0094                     SSPSTAT         equ	148	;# 
   337     0098                     TXSTA           equ	152	;# 
   338     0099                     SPBRG           equ	153	;# 
   339     009C                     CMCON           equ	156	;# 
   340     009D                     CVRCON          equ	157	;# 
   341     009E                     ADRESL          equ	158	;# 
   342     009F                     ADCON1          equ	159	;# 
   343     010C                     EEDATA          equ	268	;# 
   344     010D                     EEADR           equ	269	;# 
   345     010E                     EEDATH          equ	270	;# 
   346     010F                     EEADRH          equ	271	;# 
   347     018C                     EECON1          equ	396	;# 
   348     018D                     EECON2          equ	397	;# 
   349     0000                     INDF            equ	0	;# 
   350     0001                     TMR0            equ	1	;# 
   351     0002                     PCL             equ	2	;# 
   352     0003                     STATUS          equ	3	;# 
   353     0004                     FSR             equ	4	;# 
   354     0005                     PORTA           equ	5	;# 
   355     0006                     PORTB           equ	6	;# 
   356     0007                     PORTC           equ	7	;# 
   357     0008                     PORTD           equ	8	;# 
   358     0009                     PORTE           equ	9	;# 
   359     000A                     PCLATH          equ	10	;# 
   360     000B                     INTCON          equ	11	;# 
   361     000C                     PIR1            equ	12	;# 
   362     000D                     PIR2            equ	13	;# 
   363     000E                     TMR1            equ	14	;# 
   364     000E                     TMR1L           equ	14	;# 
   365     000F                     TMR1H           equ	15	;# 
   366     0010                     T1CON           equ	16	;# 
   367     0011                     TMR2            equ	17	;# 
   368     0012                     T2CON           equ	18	;# 
   369     0013                     SSPBUF          equ	19	;# 
   370     0014                     SSPCON          equ	20	;# 
   371     0015                     CCPR1           equ	21	;# 
   372     0015                     CCPR1L          equ	21	;# 
   373     0016                     CCPR1H          equ	22	;# 
   374     0017                     CCP1CON         equ	23	;# 
   375     0018                     RCSTA           equ	24	;# 
   376     0019                     TXREG           equ	25	;# 
   377     001A                     RCREG           equ	26	;# 
   378     001B                     CCPR2           equ	27	;# 
   379     001B                     CCPR2L          equ	27	;# 
   380     001C                     CCPR2H          equ	28	;# 
   381     001D                     CCP2CON         equ	29	;# 
   382     001E                     ADRESH          equ	30	;# 
   383     001F                     ADCON0          equ	31	;# 
   384     0081                     OPTION_REG      equ	129	;# 
   385     0085                     TRISA           equ	133	;# 
   386     0086                     TRISB           equ	134	;# 
   387     0087                     TRISC           equ	135	;# 
   388     0088                     TRISD           equ	136	;# 
   389     0089                     TRISE           equ	137	;# 
   390     008C                     PIE1            equ	140	;# 
   391     008D                     PIE2            equ	141	;# 
   392     008E                     PCON            equ	142	;# 
   393     0091                     SSPCON2         equ	145	;# 
   394     0092                     PR2             equ	146	;# 
   395     0093                     SSPADD          equ	147	;# 
   396     0094                     SSPSTAT         equ	148	;# 
   397     0098                     TXSTA           equ	152	;# 
   398     0099                     SPBRG           equ	153	;# 
   399     009C                     CMCON           equ	156	;# 
   400     009D                     CVRCON          equ	157	;# 
   401     009E                     ADRESL          equ	158	;# 
   402     009F                     ADCON1          equ	159	;# 
   403     010C                     EEDATA          equ	268	;# 
   404     010D                     EEADR           equ	269	;# 
   405     010E                     EEDATH          equ	270	;# 
   406     010F                     EEADRH          equ	271	;# 
   407     018C                     EECON1          equ	396	;# 
   408     018D                     EECON2          equ	397	;# 
   409                           
   410                           	psect	idataBANK1
   411     1A1E                     __pidataBANK1:
   412                           
   413                           ;initializer for __last_rh
   414     1A1E  3457               	retlw	87
   415     1A1F  3404               	retlw	4
   416     1A20  3400               	retlw	0
   417     1A21  3400               	retlw	0
   418                           
   419                           ;initializer for __last_temp
   420     1A22  3403               	retlw	3
   421     1A23  34D9               	retlw	217
   422     1A24  3400               	retlw	0
   423     1A25  3400               	retlw	0
   424     0019                     _TXREG          set	25
   425     0013                     _SSPBUF         set	19
   426     0014                     _SSPCON         set	20
   427     00C4                     _CREN           set	196
   428     00C7                     _SPEN           set	199
   429     0063                     _SSPIF          set	99
   430     0099                     _SPBRG          set	153
   431     0093                     _SSPADD         set	147
   432     0094                     _SSPSTAT        set	148
   433     0091                     _SSPCON2        set	145
   434     04C1                     _TRMT           set	1217
   435     04C5                     _TXEN           set	1221
   436     043F                     _TRISC7         set	1087
   437     043E                     _TRISC6         set	1086
   438     04C4                     _SYNC           set	1220
   439     04C2                     _BRGH           set	1218
   440     04A0                     _BF             set	1184
   441     048B                     _RCEN           set	1163
   442     048E                     _ACKSTAT        set	1166
   443     048C                     _ACKEN          set	1164
   444     048D                     _ACKDT          set	1165
   445     048A                     _PEN            set	1162
   446     0489                     _RSEN           set	1161
   447     0488                     _SEN            set	1160
   448     043C                     _TRISC4         set	1084
   449     043B                     _TRISC3         set	1083
   450                           
   451                           	psect	strings
   452     1800                     __pstrings:
   453     1800                     stringtab:
   454     1800                     __stringtab:
   455                           
   456                           ;	String table - string pointers are 2 bytes each
   457     1800  1BFF               	btfsc	btemp+1,7
   458     1801  280A               	ljmp	stringcode
   459     1802  1383               	bcf	3,7
   460     1803  187F               	btfsc	btemp+1,0
   461     1804  1783               	bsf	3,7
   462     1805  0800               	movf	0,w
   463     1806  0A84               	incf	4,f
   464     1807  1903               	skipnz
   465     1808  0AFF               	incf	btemp+1,f
   466     1809  0008               	return
   467     180A                     stringcode:
   468     180A  087F               	movf	btemp+1,w
   469     180B  397F               	andlw	127
   470     180C  008A               	movwf	10
   471     180D  0804               	movf	4,w
   472     180E  0A84               	incf	4,f
   473     180F  1903               	skipnz
   474     1810  0AFF               	incf	btemp+1,f
   475     1811  0082               	movwf	2
   476     1812                     __stringbase:
   477     1812                     __end_of__stringtab:
   478                           
   479                           	psect	stringtext
   480     1000                     __pstringtext:
   481     1000                     STR_12:
   482     1000  340A               	retlw	10
   483     1001  340D               	retlw	13
   484     1002  3457               	retlw	87	;'W'
   485     1003  3461               	retlw	97	;'a'
   486     1004  3469               	retlw	105	;'i'
   487     1005  3474               	retlw	116	;'t'
   488     1006  3469               	retlw	105	;'i'
   489     1007  346E               	retlw	110	;'n'
   490     1008  3467               	retlw	103	;'g'
   491     1009  3420               	retlw	32	;' '
   492     100A  3431               	retlw	49	;'1'
   493     100B  3430               	retlw	48	;'0'
   494     100C  3420               	retlw	32	;' '
   495     100D  3473               	retlw	115	;'s'
   496     100E  3465               	retlw	101	;'e'
   497     100F  3463               	retlw	99	;'c'
   498     1010  346F               	retlw	111	;'o'
   499     1011  346E               	retlw	110	;'n'
   500     1012  3464               	retlw	100	;'d'
   501     1013  3473               	retlw	115	;'s'
   502     1014  3420               	retlw	32	;' '
   503     1015  3466               	retlw	102	;'f'
   504     1016  346F               	retlw	111	;'o'
   505     1017  3472               	retlw	114	;'r'
   506     1018  3420               	retlw	32	;' '
   507     1019  3474               	retlw	116	;'t'
   508     101A  3468               	retlw	104	;'h'
   509     101B  3465               	retlw	101	;'e'
   510     101C  3420               	retlw	32	;' '
   511     101D  346E               	retlw	110	;'n'
   512     101E  3465               	retlw	101	;'e'
   513     101F  3478               	retlw	120	;'x'
   514     1020  3474               	retlw	116	;'t'
   515     1021  3420               	retlw	32	;' '
   516     1022  346D               	retlw	109	;'m'
   517     1023  3465               	retlw	101	;'e'
   518     1024  3461               	retlw	97	;'a'
   519     1025  3473               	retlw	115	;'s'
   520     1026  3475               	retlw	117	;'u'
   521     1027  3472               	retlw	114	;'r'
   522     1028  3465               	retlw	101	;'e'
   523     1029  346D               	retlw	109	;'m'
   524     102A  3465               	retlw	101	;'e'
   525     102B  346E               	retlw	110	;'n'
   526     102C  3474               	retlw	116	;'t'
   527     102D  342E               	retlw	46	;'.'
   528     102E  342E               	retlw	46	;'.'
   529     102F  342E               	retlw	46	;'.'
   530     1030  340A               	retlw	10
   531     1031  340D               	retlw	13
   532     1032  3400               	retlw	0
   533     1033                     STR_13:
   534     1033  340A               	retlw	10
   535     1034  340D               	retlw	13
   536     1035  342A               	retlw	42	;'*'
   537     1036  342A               	retlw	42	;'*'
   538     1037  342A               	retlw	42	;'*'
   539     1038  342A               	retlw	42	;'*'
   540     1039  342A               	retlw	42	;'*'
   541     103A  342A               	retlw	42	;'*'
   542     103B  342A               	retlw	42	;'*'
   543     103C  342A               	retlw	42	;'*'
   544     103D  342A               	retlw	42	;'*'
   545     103E  342A               	retlw	42	;'*'
   546     103F  342A               	retlw	42	;'*'
   547     1040  342A               	retlw	42	;'*'
   548     1041  342D               	retlw	45	;'-'
   549     1042  342D               	retlw	45	;'-'
   550     1043  342D               	retlw	45	;'-'
   551     1044  342D               	retlw	45	;'-'
   552     1045  342D               	retlw	45	;'-'
   553     1046  342D               	retlw	45	;'-'
   554     1047  342D               	retlw	45	;'-'
   555     1048  342D               	retlw	45	;'-'
   556     1049  342D               	retlw	45	;'-'
   557     104A  342D               	retlw	45	;'-'
   558     104B  342D               	retlw	45	;'-'
   559     104C  342D               	retlw	45	;'-'
   560     104D  342D               	retlw	45	;'-'
   561     104E  342D               	retlw	45	;'-'
   562     104F  342D               	retlw	45	;'-'
   563     1050  342D               	retlw	45	;'-'
   564     1051  342D               	retlw	45	;'-'
   565     1052  342D               	retlw	45	;'-'
   566     1053  342A               	retlw	42	;'*'
   567     1054  342A               	retlw	42	;'*'
   568     1055  342A               	retlw	42	;'*'
   569     1056  342A               	retlw	42	;'*'
   570     1057  342A               	retlw	42	;'*'
   571     1058  342A               	retlw	42	;'*'
   572     1059  342A               	retlw	42	;'*'
   573     105A  342A               	retlw	42	;'*'
   574     105B  342A               	retlw	42	;'*'
   575     105C  342A               	retlw	42	;'*'
   576     105D  342A               	retlw	42	;'*'
   577     105E  342A               	retlw	42	;'*'
   578     105F  340A               	retlw	10
   579     1060  340D               	retlw	13
   580     1061  3400               	retlw	0
   581     1062                     STR_10:
   582     1062  3448               	retlw	72	;'H'
   583     1063  3475               	retlw	117	;'u'
   584     1064  346D               	retlw	109	;'m'
   585     1065  3469               	retlw	105	;'i'
   586     1066  3464               	retlw	100	;'d'
   587     1067  3469               	retlw	105	;'i'
   588     1068  3474               	retlw	116	;'t'
   589     1069  3479               	retlw	121	;'y'
   590     106A  3420               	retlw	32	;' '
   591     106B  3428               	retlw	40	;'('
   592     106C  3443               	retlw	67	;'C'
   593     106D  346F               	retlw	111	;'o'
   594     106E  346D               	retlw	109	;'m'
   595     106F  3470               	retlw	112	;'p'
   596     1070  3465               	retlw	101	;'e'
   597     1071  346E               	retlw	110	;'n'
   598     1072  3473               	retlw	115	;'s'
   599     1073  3461               	retlw	97	;'a'
   600     1074  3474               	retlw	116	;'t'
   601     1075  3465               	retlw	101	;'e'
   602     1076  3464               	retlw	100	;'d'
   603     1077  3429               	retlw	41	;')'
   604     1078  343A               	retlw	58	;':'
   605     1079  3420               	retlw	32	;' '
   606     107A  3425               	retlw	37	;'%'
   607     107B  3464               	retlw	100	;'d'
   608     107C  342E               	retlw	46	;'.'
   609     107D  3425               	retlw	37	;'%'
   610     107E  3430               	retlw	48	;'0'
   611     107F  3431               	retlw	49	;'1'
   612     1080  3464               	retlw	100	;'d'
   613     1081  3420               	retlw	32	;' '
   614     1082  3425               	retlw	37	;'%'
   615     1083  3425               	retlw	37	;'%'
   616     1084  340A               	retlw	10
   617     1085  340D               	retlw	13
   618     1086  3400               	retlw	0
   619     1087                     STR_2:
   620     1087  3453               	retlw	83	;'S'
   621     1088  3474               	retlw	116	;'t'
   622     1089  3461               	retlw	97	;'a'
   623     108A  3472               	retlw	114	;'r'
   624     108B  3474               	retlw	116	;'t'
   625     108C  3469               	retlw	105	;'i'
   626     108D  346E               	retlw	110	;'n'
   627     108E  3467               	retlw	103	;'g'
   628     108F  3420               	retlw	32	;' '
   629     1090  3454               	retlw	84	;'T'
   630     1091  3465               	retlw	101	;'e'
   631     1092  346D               	retlw	109	;'m'
   632     1093  3470               	retlw	112	;'p'
   633     1094  3465               	retlw	101	;'e'
   634     1095  3472               	retlw	114	;'r'
   635     1096  3461               	retlw	97	;'a'
   636     1097  3474               	retlw	116	;'t'
   637     1098  3475               	retlw	117	;'u'
   638     1099  3472               	retlw	114	;'r'
   639     109A  3465               	retlw	101	;'e'
   640     109B  3420               	retlw	32	;' '
   641     109C  3443               	retlw	67	;'C'
   642     109D  346F               	retlw	111	;'o'
   643     109E  346E               	retlw	110	;'n'
   644     109F  3476               	retlw	118	;'v'
   645     10A0  3465               	retlw	101	;'e'
   646     10A1  3472               	retlw	114	;'r'
   647     10A2  3473               	retlw	115	;'s'
   648     10A3  3469               	retlw	105	;'i'
   649     10A4  346F               	retlw	111	;'o'
   650     10A5  346E               	retlw	110	;'n'
   651     10A6  342E               	retlw	46	;'.'
   652     10A7  342E               	retlw	46	;'.'
   653     10A8  342E               	retlw	46	;'.'
   654     10A9  340A               	retlw	10
   655     10AA  340D               	retlw	13
   656     10AB  3400               	retlw	0
   657     10AC                     STR_4:
   658     10AC  3453               	retlw	83	;'S'
   659     10AD  3474               	retlw	116	;'t'
   660     10AE  3461               	retlw	97	;'a'
   661     10AF  3472               	retlw	114	;'r'
   662     10B0  3474               	retlw	116	;'t'
   663     10B1  3469               	retlw	105	;'i'
   664     10B2  346E               	retlw	110	;'n'
   665     10B3  3467               	retlw	103	;'g'
   666     10B4  3420               	retlw	32	;' '
   667     10B5  3448               	retlw	72	;'H'
   668     10B6  3475               	retlw	117	;'u'
   669     10B7  346D               	retlw	109	;'m'
   670     10B8  3469               	retlw	105	;'i'
   671     10B9  3464               	retlw	100	;'d'
   672     10BA  3469               	retlw	105	;'i'
   673     10BB  3474               	retlw	116	;'t'
   674     10BC  3479               	retlw	121	;'y'
   675     10BD  3420               	retlw	32	;' '
   676     10BE  3443               	retlw	67	;'C'
   677     10BF  346F               	retlw	111	;'o'
   678     10C0  346E               	retlw	110	;'n'
   679     10C1  3476               	retlw	118	;'v'
   680     10C2  3465               	retlw	101	;'e'
   681     10C3  3472               	retlw	114	;'r'
   682     10C4  3473               	retlw	115	;'s'
   683     10C5  3469               	retlw	105	;'i'
   684     10C6  346F               	retlw	111	;'o'
   685     10C7  346E               	retlw	110	;'n'
   686     10C8  342E               	retlw	46	;'.'
   687     10C9  342E               	retlw	46	;'.'
   688     10CA  342E               	retlw	46	;'.'
   689     10CB  340A               	retlw	10
   690     10CC  340D               	retlw	13
   691     10CD  3400               	retlw	0
   692     10CE                     STR_3:
   693     10CE  3454               	retlw	84	;'T'
   694     10CF  3465               	retlw	101	;'e'
   695     10D0  346D               	retlw	109	;'m'
   696     10D1  3470               	retlw	112	;'p'
   697     10D2  3465               	retlw	101	;'e'
   698     10D3  3472               	retlw	114	;'r'
   699     10D4  3461               	retlw	97	;'a'
   700     10D5  3474               	retlw	116	;'t'
   701     10D6  3475               	retlw	117	;'u'
   702     10D7  3472               	retlw	114	;'r'
   703     10D8  3465               	retlw	101	;'e'
   704     10D9  3420               	retlw	32	;' '
   705     10DA  3443               	retlw	67	;'C'
   706     10DB  346F               	retlw	111	;'o'
   707     10DC  346E               	retlw	110	;'n'
   708     10DD  3476               	retlw	118	;'v'
   709     10DE  3465               	retlw	101	;'e'
   710     10DF  3472               	retlw	114	;'r'
   711     10E0  3473               	retlw	115	;'s'
   712     10E1  3469               	retlw	105	;'i'
   713     10E2  346F               	retlw	111	;'o'
   714     10E3  346E               	retlw	110	;'n'
   715     10E4  3420               	retlw	32	;' '
   716     10E5  3454               	retlw	84	;'T'
   717     10E6  3469               	retlw	105	;'i'
   718     10E7  346D               	retlw	109	;'m'
   719     10E8  3465               	retlw	101	;'e'
   720     10E9  346F               	retlw	111	;'o'
   721     10EA  3475               	retlw	117	;'u'
   722     10EB  3474               	retlw	116	;'t'
   723     10EC  340A               	retlw	10
   724     10ED  340D               	retlw	13
   725     10EE  3400               	retlw	0
   726     10EF                     STR_11:
   727     10EF  3448               	retlw	72	;'H'
   728     10F0  3475               	retlw	117	;'u'
   729     10F1  346D               	retlw	109	;'m'
   730     10F2  3469               	retlw	105	;'i'
   731     10F3  3464               	retlw	100	;'d'
   732     10F4  3469               	retlw	105	;'i'
   733     10F5  3474               	retlw	116	;'t'
   734     10F6  3479               	retlw	121	;'y'
   735     10F7  3420               	retlw	32	;' '
   736     10F8  3428               	retlw	40	;'('
   737     10F9  3443               	retlw	67	;'C'
   738     10FA  346F               	retlw	111	;'o'
   739     10FB  346D               	retlw	109	;'m'
   740     10FC  3470               	retlw	112	;'p'
   741     10FD  3465               	retlw	101	;'e'
   742     10FE  346E               	retlw	110	;'n'
   743     10FF  3473               	retlw	115	;'s'
   744     1100  3461               	retlw	97	;'a'
   745     1101  3474               	retlw	116	;'t'
   746     1102  3465               	retlw	101	;'e'
   747     1103  3464               	retlw	100	;'d'
   748     1104  3429               	retlw	41	;')'
   749     1105  343A               	retlw	58	;':'
   750     1106  3420               	retlw	32	;' '
   751     1107  3445               	retlw	69	;'E'
   752     1108  3472               	retlw	114	;'r'
   753     1109  3472               	retlw	114	;'r'
   754     110A  346F               	retlw	111	;'o'
   755     110B  3472               	retlw	114	;'r'
   756     110C  340A               	retlw	10
   757     110D  340D               	retlw	13
   758     110E  3400               	retlw	0
   759     110F                     STR_5:
   760     110F  3448               	retlw	72	;'H'
   761     1110  3475               	retlw	117	;'u'
   762     1111  346D               	retlw	109	;'m'
   763     1112  3469               	retlw	105	;'i'
   764     1113  3464               	retlw	100	;'d'
   765     1114  3469               	retlw	105	;'i'
   766     1115  3474               	retlw	116	;'t'
   767     1116  3479               	retlw	121	;'y'
   768     1117  3420               	retlw	32	;' '
   769     1118  3443               	retlw	67	;'C'
   770     1119  346F               	retlw	111	;'o'
   771     111A  346E               	retlw	110	;'n'
   772     111B  3476               	retlw	118	;'v'
   773     111C  3465               	retlw	101	;'e'
   774     111D  3472               	retlw	114	;'r'
   775     111E  3473               	retlw	115	;'s'
   776     111F  3469               	retlw	105	;'i'
   777     1120  346F               	retlw	111	;'o'
   778     1121  346E               	retlw	110	;'n'
   779     1122  3420               	retlw	32	;' '
   780     1123  3454               	retlw	84	;'T'
   781     1124  3469               	retlw	105	;'i'
   782     1125  346D               	retlw	109	;'m'
   783     1126  3465               	retlw	101	;'e'
   784     1127  346F               	retlw	111	;'o'
   785     1128  3475               	retlw	117	;'u'
   786     1129  3474               	retlw	116	;'t'
   787     112A  340A               	retlw	10
   788     112B  340D               	retlw	13
   789     112C  3400               	retlw	0
   790     112D                     STR_8:
   791     112D  3448               	retlw	72	;'H'
   792     112E  3475               	retlw	117	;'u'
   793     112F  346D               	retlw	109	;'m'
   794     1130  3469               	retlw	105	;'i'
   795     1131  3464               	retlw	100	;'d'
   796     1132  3469               	retlw	105	;'i'
   797     1133  3474               	retlw	116	;'t'
   798     1134  3479               	retlw	121	;'y'
   799     1135  3420               	retlw	32	;' '
   800     1136  3428               	retlw	40	;'('
   801     1137  3452               	retlw	82	;'R'
   802     1138  3461               	retlw	97	;'a'
   803     1139  3477               	retlw	119	;'w'
   804     113A  3429               	retlw	41	;')'
   805     113B  343A               	retlw	58	;':'
   806     113C  3420               	retlw	32	;' '
   807     113D  3425               	retlw	37	;'%'
   808     113E  3464               	retlw	100	;'d'
   809     113F  342E               	retlw	46	;'.'
   810     1140  3425               	retlw	37	;'%'
   811     1141  3430               	retlw	48	;'0'
   812     1142  3431               	retlw	49	;'1'
   813     1143  3464               	retlw	100	;'d'
   814     1144  3420               	retlw	32	;' '
   815     1145  3425               	retlw	37	;'%'
   816     1146  3425               	retlw	37	;'%'
   817     1147  340A               	retlw	10
   818     1148  340D               	retlw	13
   819     1149  3400               	retlw	0
   820     114A                     STR_1:
   821     114A  3454               	retlw	84	;'T'
   822     114B  3448               	retlw	72	;'H'
   823     114C  3430               	retlw	48	;'0'
   824     114D  3432               	retlw	50	;'2'
   825     114E  3420               	retlw	32	;' '
   826     114F  3453               	retlw	83	;'S'
   827     1150  3465               	retlw	101	;'e'
   828     1151  346E               	retlw	110	;'n'
   829     1152  3473               	retlw	115	;'s'
   830     1153  346F               	retlw	111	;'o'
   831     1154  3472               	retlw	114	;'r'
   832     1155  3420               	retlw	32	;' '
   833     1156  3449               	retlw	73	;'I'
   834     1157  346E               	retlw	110	;'n'
   835     1158  3469               	retlw	105	;'i'
   836     1159  3474               	retlw	116	;'t'
   837     115A  3469               	retlw	105	;'i'
   838     115B  3461               	retlw	97	;'a'
   839     115C  346C               	retlw	108	;'l'
   840     115D  3469               	retlw	105	;'i'
   841     115E  347A               	retlw	122	;'z'
   842     115F  3461               	retlw	97	;'a'
   843     1160  3474               	retlw	116	;'t'
   844     1161  3469               	retlw	105	;'i'
   845     1162  346F               	retlw	111	;'o'
   846     1163  346E               	retlw	110	;'n'
   847     1164  340A               	retlw	10
   848     1165  340D               	retlw	13
   849     1166  3400               	retlw	0
   850     1167                     STR_6:
   851     1167  3454               	retlw	84	;'T'
   852     1168  3465               	retlw	101	;'e'
   853     1169  346D               	retlw	109	;'m'
   854     116A  3470               	retlw	112	;'p'
   855     116B  3465               	retlw	101	;'e'
   856     116C  3472               	retlw	114	;'r'
   857     116D  3461               	retlw	97	;'a'
   858     116E  3474               	retlw	116	;'t'
   859     116F  3475               	retlw	117	;'u'
   860     1170  3472               	retlw	114	;'r'
   861     1171  3465               	retlw	101	;'e'
   862     1172  343A               	retlw	58	;':'
   863     1173  3420               	retlw	32	;' '
   864     1174  3425               	retlw	37	;'%'
   865     1175  3464               	retlw	100	;'d'
   866     1176  342E               	retlw	46	;'.'
   867     1177  3425               	retlw	37	;'%'
   868     1178  3430               	retlw	48	;'0'
   869     1179  3431               	retlw	49	;'1'
   870     117A  3464               	retlw	100	;'d'
   871     117B  3420               	retlw	32	;' '
   872     117C  3443               	retlw	67	;'C'
   873     117D  340A               	retlw	10
   874     117E  340D               	retlw	13
   875     117F  3400               	retlw	0
   876     1180                     STR_9:
   877     1180  3448               	retlw	72	;'H'
   878     1181  3475               	retlw	117	;'u'
   879     1182  346D               	retlw	109	;'m'
   880     1183  3469               	retlw	105	;'i'
   881     1184  3464               	retlw	100	;'d'
   882     1185  3469               	retlw	105	;'i'
   883     1186  3474               	retlw	116	;'t'
   884     1187  3479               	retlw	121	;'y'
   885     1188  3420               	retlw	32	;' '
   886     1189  3428               	retlw	40	;'('
   887     118A  3452               	retlw	82	;'R'
   888     118B  3461               	retlw	97	;'a'
   889     118C  3477               	retlw	119	;'w'
   890     118D  3429               	retlw	41	;')'
   891     118E  343A               	retlw	58	;':'
   892     118F  3420               	retlw	32	;' '
   893     1190  3445               	retlw	69	;'E'
   894     1191  3472               	retlw	114	;'r'
   895     1192  3472               	retlw	114	;'r'
   896     1193  346F               	retlw	111	;'o'
   897     1194  3472               	retlw	114	;'r'
   898     1195  340A               	retlw	10
   899     1196  340D               	retlw	13
   900     1197  3400               	retlw	0
   901     1198                     STR_7:
   902     1198  3454               	retlw	84	;'T'
   903     1199  3465               	retlw	101	;'e'
   904     119A  346D               	retlw	109	;'m'
   905     119B  3470               	retlw	112	;'p'
   906     119C  3465               	retlw	101	;'e'
   907     119D  3472               	retlw	114	;'r'
   908     119E  3461               	retlw	97	;'a'
   909     119F  3474               	retlw	116	;'t'
   910     11A0  3475               	retlw	117	;'u'
   911     11A1  3472               	retlw	114	;'r'
   912     11A2  3465               	retlw	101	;'e'
   913     11A3  343A               	retlw	58	;':'
   914     11A4  3420               	retlw	32	;' '
   915     11A5  3445               	retlw	69	;'E'
   916     11A6  3472               	retlw	114	;'r'
   917     11A7  3472               	retlw	114	;'r'
   918     11A8  346F               	retlw	111	;'o'
   919     11A9  3472               	retlw	114	;'r'
   920     11AA  340A               	retlw	10
   921     11AB  340D               	retlw	13
   922     11AC  3400               	retlw	0
   923                           
   924                           	psect	cinit
   925     07DC                     start_initialization:	
   926                           ; #config settings
   927                           
   928     07DC                     __initialization:
   929                           
   930                           ; Initialize objects allocated to BANK1
   931     07DC  1383               	bcf	3,7	;select IRP bank0
   932     07DD  30E0               	movlw	low (__pdataBANK1+8)
   933     07DE  00FD               	movwf	btemp+-1
   934     07DF  301A               	movlw	high __pidataBANK1
   935     07E0  00FE               	movwf	btemp
   936     07E1  301E               	movlw	low __pidataBANK1
   937     07E2  00FF               	movwf	btemp+1
   938     07E3  30D8               	movlw	low __pdataBANK1
   939     07E4  0084               	movwf	4
   940     07E5  160A  158A  22AA  120A  118A  	fcall	init_ram0
   941                           
   942                           ; Clear objects allocated to BANK2
   943     07EA  1783               	bsf	3,7	;select IRP bank2
   944     07EB  3010               	movlw	low __pbssBANK2
   945     07EC  0084               	movwf	4
   946     07ED  3030               	movlw	low (__pbssBANK2+32)
   947     07EE  160A  158A  2216  120A  118A  	fcall	clear_ram0
   948                           
   949                           ; Clear objects allocated to BANK1
   950     07F3  1383               	bcf	3,7	;select IRP bank0
   951     07F4  30C6               	movlw	low __pbssBANK1
   952     07F5  0084               	movwf	4
   953     07F6  30D8               	movlw	low (__pbssBANK1+18)
   954     07F7  160A  158A  2216  120A  118A  	fcall	clear_ram0
   955     07FC                     end_of_initialization:	
   956                           ;End of C runtime variable initialization code
   957                           
   958     07FC                     __end_of__initialization:
   959     07FC  0183               	clrf	3
   960     07FD  120A  158A  2B74   	ljmp	_main	;jump to C main() function
   961                           
   962                           	psect	bssBANK1
   963     00C6                     __pbssBANK1:
   964     00C6                     floorf@F521:
   965     00C6                     	ds	4
   966     00CA                     ceilf@F521:
   967     00CA                     	ds	4
   968     00CE                     _nout:
   969     00CE                     	ds	2
   970     00D0                     _width:
   971     00D0                     	ds	2
   972     00D2                     _prec:
   973     00D2                     	ds	2
   974     00D4                     _errno:
   975     00D4                     	ds	2
   976     00D6                     _flags:
   977     00D6                     	ds	1
   978     00D7                     _last_conversion_type:
   979     00D7                     	ds	1
   980                           
   981                           	psect	dataBANK1
   982     00D8                     __pdataBANK1:
   983     00D8                     __last_rh:
   984     00D8                     	ds	4
   985     00DC                     __last_temp:
   986     00DC                     	ds	4
   987                           
   988                           	psect	bssBANK2
   989     0110                     __pbssBANK2:
   990     0110                     _dbuf:
   991     0110                     	ds	32
   992                           
   993                           	psect	inittext
   994     1AA6                     init_fetch0:	
   995                           ;	Called with low address in FSR and high address in W
   996                           
   997     1AA6  087E               	movf	btemp,w
   998     1AA7  008A               	movwf	10
   999     1AA8  087F               	movf	btemp+1,w
  1000     1AA9  0082               	movwf	2
  1001     1AAA                     init_ram0:	
  1002                           ;Called with:
  1003                           ;	high address of idata address in btemp 
  1004                           ;	low address of idata address in btemp+1 
  1005                           ;	low address of data in FSR
  1006                           ;	high address + 1 of data in btemp-1
  1007                           
  1008     1AAA  160A  158A  22A6  160A  158A  	fcall	init_fetch0
  1009     1AAF  0080               	movwf	0
  1010     1AB0  0A84               	incf	4,f
  1011     1AB1  0804               	movf	4,w
  1012     1AB2  067D               	xorwf	btemp+-1,w
  1013     1AB3  1903               	btfsc	3,2
  1014     1AB4  3400               	retlw	0
  1015     1AB5  0AFF               	incf	btemp+1,f
  1016     1AB6  1903               	btfsc	3,2
  1017     1AB7  0AFE               	incf	btemp,f
  1018     1AB8  2AAA               	goto	init_ram0
  1019                           
  1020                           	psect	clrtext
  1021     1A16                     clear_ram0:	
  1022                           ;	Called with FSR containing the base address, and
  1023                           ;	W with the last address+1
  1024                           
  1025     1A16  0064               	clrwdt	;clear the watchdog before getting into this loop
  1026     1A17                     clrloop0:
  1027     1A17  0180               	clrf	0	;clear RAM location pointed to by FSR
  1028     1A18  0A84               	incf	4,f	;increment pointer
  1029     1A19  0604               	xorwf	4,w	;XOR with final address
  1030     1A1A  1903               	btfsc	3,2	;have we reached the end yet?
  1031     1A1B  3400               	retlw	0	;all done for this memory range, return
  1032     1A1C  0604               	xorwf	4,w	;XOR again to restore value
  1033     1A1D  2A17               	goto	clrloop0	;do the next byte
  1034                           
  1035                           	psect	cstackBANK3
  1036     0190                     __pcstackBANK3:
  1037     0190                     main@displayText:
  1038                           
  1039                           ; 64 bytes @ 0x0
  1040     0190                     	ds	64
  1041     01D0                     main@tempRaw:
  1042                           
  1043                           ; 2 bytes @ 0x40
  1044     01D0                     	ds	2
  1045     01D2                     main@humRaw:
  1046                           
  1047                           ; 2 bytes @ 0x42
  1048     01D2                     	ds	2
  1049     01D4                     main@humComp:
  1050                           
  1051                           ; 2 bytes @ 0x44
  1052     01D4                     	ds	2
  1053     01D6                     _main$1024:
  1054                           
  1055                           ; 2 bytes @ 0x46
  1056     01D6                     	ds	2
  1057     01D8                     _main$1025:
  1058                           
  1059                           ; 2 bytes @ 0x48
  1060     01D8                     	ds	2
  1061                           
  1062                           	psect	cstackBANK1
  1063     00A0                     __pcstackBANK1:
  1064     00A0                     ___fltol@sign1:
  1065     00A0                     ??_floorf:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068     00A0                     ??_ceilf:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071                           
  1072                           ; 1 bytes @ 0x0
  1073     00A0                     	ds	1
  1074     00A1                     ___fltol@exp1:
  1075                           
  1076                           ; 1 bytes @ 0x1
  1077     00A1                     	ds	1
  1078     00A2                     ?_TH02_GetCompensatedRH:
  1079                           
  1080                           ; 2 bytes @ 0x2
  1081     00A2                     	ds	2
  1082     00A4                     _TH02_GetCompensatedRH$1023:
  1083                           
  1084                           ; 4 bytes @ 0x4
  1085     00A4                     	ds	2
  1086     00A6                     ceilf@m:
  1087     00A6                     floorf@m:	
  1088                           ; 4 bytes @ 0x6
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x6
  1092     00A6                     	ds	2
  1093     00A8                     TH02_GetCompensatedRH@round_flag:
  1094                           
  1095                           ; 1 bytes @ 0x8
  1096     00A8                     	ds	1
  1097     00A9                     TH02_GetCompensatedRH@ret:
  1098                           
  1099                           ; 2 bytes @ 0x9
  1100     00A9                     	ds	1
  1101     00AA                     ceilf@e:
  1102     00AA                     floorf@e:	
  1103                           ; 2 bytes @ 0xA
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0xA
  1107     00AA                     	ds	1
  1108     00AB                     _TH02_GetCompensatedRH$1021:
  1109                           
  1110                           ; 4 bytes @ 0xB
  1111     00AB                     	ds	1
  1112     00AC                     ceilf@u:
  1113     00AC                     floorf@u:	
  1114                           ; 4 bytes @ 0xC
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0xC
  1118     00AC                     	ds	3
  1119     00AF                     _TH02_GetCompensatedRH$1022:
  1120                           
  1121                           ; 4 bytes @ 0xF
  1122     00AF                     	ds	1
  1123     00B0                     ?_roundInt:
  1124     00B0                     roundInt@value:	
  1125                           ; 2 bytes @ 0x10
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x10
  1129     00B0                     	ds	3
  1130     00B3                     TH02_GetCompensatedRH@rhlinear:
  1131                           
  1132                           ; 4 bytes @ 0x13
  1133     00B3                     	ds	1
  1134     00B4                     ?_TH02_GetConversionValue:
  1135                           
  1136                           ; 2 bytes @ 0x14
  1137     00B4                     	ds	2
  1138     00B6                     ??_TH02_GetConversionValue:
  1139                           
  1140                           ; 1 bytes @ 0x16
  1141     00B6                     	ds	1
  1142     00B7                     TH02_GetCompensatedRH@rhvalue:
  1143                           
  1144                           ; 4 bytes @ 0x17
  1145     00B7                     	ds	1
  1146     00B8                     TH02_GetConversionValue@msb:
  1147                           
  1148                           ; 2 bytes @ 0x18
  1149     00B8                     	ds	2
  1150     00BA                     TH02_GetConversionValue@lsb:
  1151                           
  1152                           ; 2 bytes @ 0x1A
  1153     00BA                     	ds	2
  1154     00BC                     TH02_GetConversionValue@config:
  1155                           
  1156                           ; 1 bytes @ 0x1C
  1157     00BC                     	ds	1
  1158     00BD                     TH02_GetConversionValue@ret:
  1159                           
  1160                           ; 2 bytes @ 0x1D
  1161     00BD                     	ds	2
  1162     00BF                     TH02_GetConversionValue@result:
  1163                           
  1164                           ; 4 bytes @ 0x1F
  1165     00BF                     	ds	4
  1166     00C3                     ??_main:
  1167                           
  1168                           ; 1 bytes @ 0x23
  1169     00C3                     	ds	3
  1170                           
  1171                           	psect	cstackCOMMON
  1172     0070                     __pcstackCOMMON:
  1173     0070                     ?_putch:
  1174     0070                     ?_I2C_Master_Init:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177     0070                     ?_I2C_Master_Wait:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180     0070                     ?_I2C_Master_Start:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0070                     ?_I2C_Master_RepeatedStart:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186     0070                     ?_I2C_Master_Stop:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189     0070                     ?_I2C_ACK:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192     0070                     ?_I2C_NACK:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195     0070                     ?_I2C_Master_Write:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198     0070                     ?_I2C_Read_Byte:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201     0070                     ?_UART_TX_Init:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204     0070                     ?_UART_TX_Empty:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207     0070                     ?_UART_Write:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210     0070                     ?_TH02_WaitForReady:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213     0070                     ?_main:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216     0070                     ?___flge:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0070                     ?__Umul8_16:	
  1220                           ; 1 bit 
  1221                           
  1222     0070                     ?_fputc:	
  1223                           ; 2 bytes @ 0x0
  1224                           
  1225     0070                     ?_strlen:	
  1226                           ; 2 bytes @ 0x0
  1227                           
  1228     0070                     ?___wmul:	
  1229                           ; 2 bytes @ 0x0
  1230                           
  1231     0070                     ?___awdiv:	
  1232                           ; 2 bytes @ 0x0
  1233                           
  1234     0070                     ?___awmod:	
  1235                           ; 2 bytes @ 0x0
  1236                           
  1237     0070                     ?___lmul:	
  1238                           ; 2 bytes @ 0x0
  1239                           
  1240     0070                     ?___aldiv:	
  1241                           ; 4 bytes @ 0x0
  1242                           
  1243     0070                     ?___xxtofl:	
  1244                           ; 4 bytes @ 0x0
  1245                           
  1246     0070                     I2C_Master_Write@data:	
  1247                           ; 4 bytes @ 0x0
  1248                           
  1249     0070                     UART_Write@data:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252     0070                     __Umul8_16@multiplicand:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255     0070                     putch@c:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258     0070                     strlen@s:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261     0070                     ___wmul@multiplier:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264     0070                     ___awdiv@divisor:	
  1265                           ; 2 bytes @ 0x0
  1266                           
  1267     0070                     ___awmod@divisor:	
  1268                           ; 2 bytes @ 0x0
  1269                           
  1270     0070                     fputc@c:	
  1271                           ; 2 bytes @ 0x0
  1272                           
  1273     0070                     ___lmul@multiplier:	
  1274                           ; 2 bytes @ 0x0
  1275                           
  1276     0070                     ___aldiv@divisor:	
  1277                           ; 4 bytes @ 0x0
  1278                           
  1279     0070                     ___flge@ff1:	
  1280                           ; 4 bytes @ 0x0
  1281                           
  1282     0070                     ___xxtofl@val:	
  1283                           ; 4 bytes @ 0x0
  1284                           
  1285     0070                     ??_putch:	
  1286                           ; 4 bytes @ 0x0
  1287                           
  1288     0070                     ??_I2C_Master_Init:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     ??_I2C_Master_Wait:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294     0070                     ??_I2C_Master_Start:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297     0070                     ??_I2C_Master_RepeatedStart:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300     0070                     ??_I2C_Master_Stop:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303     0070                     ??_I2C_ACK:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306     0070                     ??_I2C_NACK:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309     0070                     ??_I2C_Master_Write:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312     0070                     ??_I2C_Read_Byte:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315     0070                     ??_UART_TX_Init:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318     0070                     ??_UART_TX_Empty:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321     0070                     ??_UART_Write:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0x0
  1326     0070                     	ds	1
  1327     0071                     ?_UART_Write_Text:
  1328     0071                     ?_TH02_WriteRegister:	
  1329                           ; 1 bytes @ 0x1
  1330                           
  1331     0071                     ?_TH02_ReadRegister:	
  1332                           ; 1 bytes @ 0x1
  1333                           
  1334     0071                     TH02_WriteRegister@value:	
  1335                           ; 1 bytes @ 0x1
  1336                           
  1337     0071                     TH02_ReadRegister@value:	
  1338                           ; 1 bytes @ 0x1
  1339                           
  1340     0071                     UART_Write_Text@text:	
  1341                           ; 1 bytes @ 0x1
  1342                           
  1343                           
  1344                           ; 2 bytes @ 0x1
  1345     0071                     	ds	1
  1346     0072                     TH02_WriteRegister@reg:
  1347     0072                     TH02_ReadRegister@reg:	
  1348                           ; 1 bytes @ 0x2
  1349                           
  1350     0072                     strlen@a:	
  1351                           ; 1 bytes @ 0x2
  1352                           
  1353     0072                     ___wmul@multiplicand:	
  1354                           ; 1 bytes @ 0x2
  1355                           
  1356     0072                     ___awdiv@dividend:	
  1357                           ; 2 bytes @ 0x2
  1358                           
  1359     0072                     ___awmod@dividend:	
  1360                           ; 2 bytes @ 0x2
  1361                           
  1362     0072                     fputc@fp:	
  1363                           ; 2 bytes @ 0x2
  1364                           
  1365     0072                     ??__Umul8_16:	
  1366                           ; 2 bytes @ 0x2
  1367                           
  1368     0072                     ??_strlen:	
  1369                           ; 1 bytes @ 0x2
  1370                           
  1371     0072                     ??_TH02_WriteRegister:	
  1372                           ; 1 bytes @ 0x2
  1373                           
  1374     0072                     ??_TH02_ReadRegister:	
  1375                           ; 1 bytes @ 0x2
  1376                           
  1377                           
  1378                           ; 1 bytes @ 0x2
  1379     0072                     	ds	1
  1380     0073                     ?_TH02_StartTempConversion:
  1381     0073                     ?_TH02_StartRHConversion:	
  1382                           ; 1 bytes @ 0x3
  1383                           
  1384     0073                     TH02_StartTempConversion@heater:	
  1385                           ; 1 bytes @ 0x3
  1386                           
  1387     0073                     TH02_StartRHConversion@heater:	
  1388                           ; 1 bytes @ 0x3
  1389                           
  1390     0073                     ??_UART_Write_Text:	
  1391                           ; 1 bytes @ 0x3
  1392                           
  1393     0073                     ??_TH02_WaitForReady:	
  1394                           ; 1 bytes @ 0x3
  1395                           
  1396                           
  1397                           ; 1 bytes @ 0x3
  1398     0073                     	ds	1
  1399     0074                     TH02_StartTempConversion@fastmode:
  1400     0074                     TH02_StartRHConversion@fastmode:	
  1401                           ; 1 bytes @ 0x4
  1402                           
  1403     0074                     ___awdiv@counter:	
  1404                           ; 1 bytes @ 0x4
  1405                           
  1406     0074                     ___awmod@counter:	
  1407                           ; 1 bytes @ 0x4
  1408                           
  1409     0074                     ___wmul@product:	
  1410                           ; 1 bytes @ 0x4
  1411                           
  1412     0074                     __Umul8_16@product:	
  1413                           ; 2 bytes @ 0x4
  1414                           
  1415     0074                     ___lmul@multiplicand:	
  1416                           ; 2 bytes @ 0x4
  1417                           
  1418     0074                     ___aldiv@dividend:	
  1419                           ; 4 bytes @ 0x4
  1420                           
  1421     0074                     ___flge@ff2:	
  1422                           ; 4 bytes @ 0x4
  1423                           
  1424     0074                     ??_fputc:	
  1425                           ; 4 bytes @ 0x4
  1426                           
  1427     0074                     ??_TH02_StartTempConversion:	
  1428                           ; 1 bytes @ 0x4
  1429                           
  1430     0074                     ??_TH02_StartRHConversion:	
  1431                           ; 1 bytes @ 0x4
  1432                           
  1433     0074                     ??___wmul:	
  1434                           ; 1 bytes @ 0x4
  1435                           
  1436     0074                     ??___awdiv:	
  1437                           ; 1 bytes @ 0x4
  1438                           
  1439     0074                     ??___awmod:	
  1440                           ; 1 bytes @ 0x4
  1441                           
  1442     0074                     ??___xxtofl:	
  1443                           ; 1 bytes @ 0x4
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x4
  1447     0074                     	ds	1
  1448     0075                     TH02_StartTempConversion@config:
  1449     0075                     TH02_StartRHConversion@config:	
  1450                           ; 1 bytes @ 0x5
  1451                           
  1452     0075                     TH02_WaitForReady@time_out:	
  1453                           ; 1 bytes @ 0x5
  1454                           
  1455     0075                     ___awdiv@sign:	
  1456                           ; 1 bytes @ 0x5
  1457                           
  1458     0075                     ___awmod@sign:	
  1459                           ; 1 bytes @ 0x5
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x5
  1463     0075                     	ds	1
  1464     0076                     ?_abs:
  1465     0076                     ?_read_prec_or_width:	
  1466                           ; 2 bytes @ 0x6
  1467                           
  1468     0076                     TH02_WaitForReady@status:	
  1469                           ; 2 bytes @ 0x6
  1470                           
  1471     0076                     read_prec_or_width@fmt:	
  1472                           ; 1 bytes @ 0x6
  1473                           
  1474     0076                     ___awdiv@quotient:	
  1475                           ; 1 bytes @ 0x6
  1476                           
  1477     0076                     __Umul8_16@word_mpld:	
  1478                           ; 2 bytes @ 0x6
  1479                           
  1480     0076                     abs@a:	
  1481                           ; 2 bytes @ 0x6
  1482                           
  1483                           
  1484                           ; 2 bytes @ 0x6
  1485     0076                     	ds	1
  1486     0077                     read_prec_or_width@ap:
  1487                           
  1488                           ; 1 bytes @ 0x7
  1489     0077                     	ds	1
  1490     0078                     __Umul8_16@multiplier:
  1491     0078                     ___xxtofl@sign:	
  1492                           ; 1 bytes @ 0x8
  1493                           
  1494     0078                     ??_abs:	
  1495                           ; 1 bytes @ 0x8
  1496                           
  1497     0078                     ??___lmul:	
  1498                           ; 1 bytes @ 0x8
  1499                           
  1500     0078                     ??___aldiv:	
  1501                           ; 1 bytes @ 0x8
  1502                           
  1503     0078                     ??___flge:	
  1504                           ; 1 bytes @ 0x8
  1505                           
  1506     0078                     ??_read_prec_or_width:	
  1507                           ; 1 bytes @ 0x8
  1508                           
  1509                           
  1510                           ; 1 bytes @ 0x8
  1511     0078                     	ds	1
  1512     0079                     ___xxtofl@exp:
  1513     0079                     ___lmul@product:	
  1514                           ; 1 bytes @ 0x9
  1515                           
  1516                           
  1517                           ; 4 bytes @ 0x9
  1518     0079                     	ds	1
  1519     007A                     read_prec_or_width@c:
  1520     007A                     ___xxtofl@arg:	
  1521                           ; 1 bytes @ 0xA
  1522                           
  1523                           
  1524                           ; 4 bytes @ 0xA
  1525     007A                     	ds	1
  1526     007B                     read_prec_or_width@n:
  1527                           
  1528                           ; 2 bytes @ 0xB
  1529     007B                     	ds	2
  1530     007D                     ??_pad:
  1531                           
  1532                           ; 1 bytes @ 0xD
  1533     007D                     	ds	1
  1534     007E                     ??_vfprintf:
  1535     007E                     ??_roundInt:	
  1536                           ; 1 bytes @ 0xE
  1537                           
  1538     007E                     ??_TH02_GetCompensatedRH:	
  1539                           ; 1 bytes @ 0xE
  1540                           
  1541     007E                     ??___flsub:	
  1542                           ; 1 bytes @ 0xE
  1543                           
  1544     007E                     ??_dtoa:	
  1545                           ; 1 bytes @ 0xE
  1546                           
  1547                           
  1548                           	psect	cstackBANK0
  1549     0020                     __pcstackBANK0:	
  1550                           ; 1 bytes @ 0xE
  1551                           
  1552     0020                     ?_fputs:
  1553     0020                     ?___fldiv:	
  1554                           ; 2 bytes @ 0x0
  1555                           
  1556     0020                     ___aldiv@counter:	
  1557                           ; 4 bytes @ 0x0
  1558                           
  1559     0020                     fputs@s:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562     0020                     ___fldiv@a:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565                           
  1566                           ; 4 bytes @ 0x0
  1567     0020                     	ds	1
  1568     0021                     ___aldiv@sign:
  1569     0021                     fputs@fp:	
  1570                           ; 1 bytes @ 0x1
  1571                           
  1572                           
  1573                           ; 2 bytes @ 0x1
  1574     0021                     	ds	1
  1575     0022                     ___aldiv@quotient:
  1576                           
  1577                           ; 4 bytes @ 0x2
  1578     0022                     	ds	1
  1579     0023                     ??_fputs:
  1580                           
  1581                           ; 1 bytes @ 0x3
  1582     0023                     	ds	1
  1583     0024                     ___fldiv@b:
  1584                           
  1585                           ; 4 bytes @ 0x4
  1586     0024                     	ds	1
  1587     0025                     fputs@c:
  1588                           
  1589                           ; 1 bytes @ 0x5
  1590     0025                     	ds	1
  1591     0026                     fputs@i:
  1592                           
  1593                           ; 2 bytes @ 0x6
  1594     0026                     	ds	2
  1595     0028                     ?_pad:
  1596     0028                     pad@fp:	
  1597                           ; 2 bytes @ 0x8
  1598                           
  1599     0028                     ??___fldiv:	
  1600                           ; 2 bytes @ 0x8
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x8
  1604     0028                     	ds	2
  1605     002A                     pad@buf:
  1606                           
  1607                           ; 1 bytes @ 0xA
  1608     002A                     	ds	1
  1609     002B                     pad@p:
  1610                           
  1611                           ; 2 bytes @ 0xB
  1612     002B                     	ds	2
  1613     002D                     pad@i:
  1614     002D                     ___fldiv@rem:	
  1615                           ; 2 bytes @ 0xD
  1616                           
  1617                           
  1618                           ; 4 bytes @ 0xD
  1619     002D                     	ds	2
  1620     002F                     ?_dtoa:
  1621     002F                     dtoa@fp:	
  1622                           ; 2 bytes @ 0xF
  1623                           
  1624                           
  1625                           ; 2 bytes @ 0xF
  1626     002F                     	ds	2
  1627     0031                     ___fldiv@sign:
  1628     0031                     dtoa@d:	
  1629                           ; 1 bytes @ 0x11
  1630                           
  1631                           
  1632                           ; 2 bytes @ 0x11
  1633     0031                     	ds	1
  1634     0032                     ___fldiv@new_exp:
  1635                           
  1636                           ; 2 bytes @ 0x12
  1637     0032                     	ds	1
  1638     0033                     _dtoa$738:
  1639                           
  1640                           ; 2 bytes @ 0x13
  1641     0033                     	ds	1
  1642     0034                     ___fldiv@grs:
  1643                           
  1644                           ; 4 bytes @ 0x14
  1645     0034                     	ds	1
  1646     0035                     dtoa@p:
  1647                           
  1648                           ; 1 bytes @ 0x15
  1649     0035                     	ds	1
  1650     0036                     dtoa@w:
  1651                           
  1652                           ; 2 bytes @ 0x16
  1653     0036                     	ds	2
  1654     0038                     ___fldiv@bexp:
  1655     0038                     dtoa@s:	
  1656                           ; 1 bytes @ 0x18
  1657                           
  1658                           
  1659                           ; 1 bytes @ 0x18
  1660     0038                     	ds	1
  1661     0039                     ___fldiv@aexp:
  1662     0039                     dtoa@i:	
  1663                           ; 1 bytes @ 0x19
  1664                           
  1665                           
  1666                           ; 2 bytes @ 0x19
  1667     0039                     	ds	1
  1668     003A                     ?___flmul:
  1669     003A                     ___flmul@b:	
  1670                           ; 4 bytes @ 0x1A
  1671                           
  1672                           
  1673                           ; 4 bytes @ 0x1A
  1674     003A                     	ds	1
  1675     003B                     ?_vfpfcnvrt:
  1676     003B                     vfpfcnvrt@fp:	
  1677                           ; 2 bytes @ 0x1B
  1678                           
  1679                           
  1680                           ; 2 bytes @ 0x1B
  1681     003B                     	ds	2
  1682     003D                     vfpfcnvrt@fmt:
  1683                           
  1684                           ; 1 bytes @ 0x1D
  1685     003D                     	ds	1
  1686     003E                     vfpfcnvrt@ap:
  1687     003E                     ___flmul@a:	
  1688                           ; 1 bytes @ 0x1E
  1689                           
  1690                           
  1691                           ; 4 bytes @ 0x1E
  1692     003E                     	ds	1
  1693     003F                     ??_vfpfcnvrt:
  1694                           
  1695                           ; 1 bytes @ 0x1F
  1696     003F                     	ds	3
  1697     0042                     ??___flmul:
  1698                           
  1699                           ; 1 bytes @ 0x22
  1700     0042                     	ds	1
  1701     0043                     vfpfcnvrt@convarg:
  1702                           
  1703                           ; 4 bytes @ 0x23
  1704     0043                     	ds	4
  1705     0047                     ___flmul@sign:
  1706     0047                     vfpfcnvrt@done:	
  1707                           ; 1 bytes @ 0x27
  1708                           
  1709                           
  1710                           ; 1 bytes @ 0x27
  1711     0047                     	ds	1
  1712     0048                     vfpfcnvrt@cp:
  1713     0048                     ___flmul@grs:	
  1714                           ; 2 bytes @ 0x28
  1715                           
  1716                           
  1717                           ; 4 bytes @ 0x28
  1718     0048                     	ds	2
  1719     004A                     ?_vfprintf:
  1720     004A                     vfprintf@fp:	
  1721                           ; 2 bytes @ 0x2A
  1722                           
  1723                           
  1724                           ; 2 bytes @ 0x2A
  1725     004A                     	ds	2
  1726     004C                     ___flmul@aexp:
  1727     004C                     vfprintf@fmt:	
  1728                           ; 1 bytes @ 0x2C
  1729                           
  1730                           
  1731                           ; 2 bytes @ 0x2C
  1732     004C                     	ds	1
  1733     004D                     ___flmul@bexp:
  1734                           
  1735                           ; 1 bytes @ 0x2D
  1736     004D                     	ds	1
  1737     004E                     vfprintf@ap:
  1738     004E                     ___flmul@prod:	
  1739                           ; 1 bytes @ 0x2E
  1740                           
  1741                           
  1742                           ; 4 bytes @ 0x2E
  1743     004E                     	ds	1
  1744     004F                     vfprintf@cfmt:
  1745                           
  1746                           ; 2 bytes @ 0x2F
  1747     004F                     	ds	2
  1748     0051                     ?_snprintf:
  1749     0051                     snprintf@s:	
  1750                           ; 2 bytes @ 0x31
  1751                           
  1752                           
  1753                           ; 1 bytes @ 0x31
  1754     0051                     	ds	1
  1755     0052                     ___flmul@temp:
  1756     0052                     snprintf@n:	
  1757                           ; 2 bytes @ 0x32
  1758                           
  1759                           
  1760                           ; 2 bytes @ 0x32
  1761     0052                     	ds	2
  1762     0054                     ?___fladd:
  1763     0054                     snprintf@fmt:	
  1764                           ; 4 bytes @ 0x34
  1765                           
  1766     0054                     ___fladd@b:	
  1767                           ; 2 bytes @ 0x34
  1768                           
  1769                           
  1770                           ; 4 bytes @ 0x34
  1771     0054                     	ds	4
  1772     0058                     ___fladd@a:
  1773                           
  1774                           ; 4 bytes @ 0x38
  1775     0058                     	ds	2
  1776     005A                     ??_snprintf:
  1777                           
  1778                           ; 1 bytes @ 0x3A
  1779     005A                     	ds	2
  1780     005C                     ??___fladd:
  1781                           
  1782                           ; 1 bytes @ 0x3C
  1783     005C                     	ds	1
  1784     005D                     _snprintf$691:
  1785                           
  1786                           ; 2 bytes @ 0x3D
  1787     005D                     	ds	2
  1788     005F                     snprintf@ap:
  1789                           
  1790                           ; 1 bytes @ 0x3F
  1791     005F                     	ds	1
  1792     0060                     snprintf@cnt:
  1793                           
  1794                           ; 2 bytes @ 0x40
  1795     0060                     	ds	2
  1796     0062                     snprintf@f:
  1797                           
  1798                           ; 11 bytes @ 0x42
  1799     0062                     	ds	2
  1800     0064                     ___fladd@signs:
  1801                           
  1802                           ; 1 bytes @ 0x44
  1803     0064                     	ds	1
  1804     0065                     ___fladd@aexp:
  1805                           
  1806                           ; 1 bytes @ 0x45
  1807     0065                     	ds	1
  1808     0066                     ___fladd@bexp:
  1809                           
  1810                           ; 1 bytes @ 0x46
  1811     0066                     	ds	1
  1812     0067                     ___fladd@grs:
  1813                           
  1814                           ; 1 bytes @ 0x47
  1815     0067                     	ds	1
  1816     0068                     ?_floorf:
  1817     0068                     ?_ceilf:	
  1818                           ; 4 bytes @ 0x48
  1819                           
  1820     0068                     ?___fltol:	
  1821                           ; 4 bytes @ 0x48
  1822                           
  1823     0068                     ?___flsub:	
  1824                           ; 4 bytes @ 0x48
  1825                           
  1826     0068                     ___fltol@f1:	
  1827                           ; 4 bytes @ 0x48
  1828                           
  1829     0068                     ___flsub@a:	
  1830                           ; 4 bytes @ 0x48
  1831                           
  1832     0068                     ceilf@x:	
  1833                           ; 4 bytes @ 0x48
  1834                           
  1835     0068                     floorf@x:	
  1836                           ; 4 bytes @ 0x48
  1837                           
  1838                           
  1839                           ; 4 bytes @ 0x48
  1840     0068                     	ds	4
  1841     006C                     ___flsub@b:
  1842     006C                     ??___fltol:	
  1843                           ; 4 bytes @ 0x4C
  1844                           
  1845                           
  1846                           ; 1 bytes @ 0x4C
  1847     006C                     	ds	4
  1848                           
  1849                           	psect	maintext
  1850     0B74                     __pmaintext:	
  1851 ;;
  1852 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1853 ;;
  1854 ;; *************** function _main *****************
  1855 ;; Defined at:
  1856 ;;		line 8 in file "main.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  displayText    64    0[BANK3 ] unsigned char [64]
  1861 ;;  humComp         2   68[BANK3 ] short 
  1862 ;;  humRaw          2   66[BANK3 ] short 
  1863 ;;  tempRaw         2   64[BANK3 ] short 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : B00/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       0       0      74       0
  1875 ;;      Temps:          0       0       3       0       0
  1876 ;;      Totals:         0       0       3      74       0
  1877 ;;Total ram usage:       77 bytes
  1878 ;; Hardware stack levels required when called: 8
  1879 ;; This function calls:
  1880 ;;		_I2C_Master_Init
  1881 ;;		_TH02_GetCompensatedRH
  1882 ;;		_TH02_GetConversionValue
  1883 ;;		_TH02_StartRHConversion
  1884 ;;		_TH02_StartTempConversion
  1885 ;;		_TH02_WaitForReady
  1886 ;;		_UART_TX_Init
  1887 ;;		_UART_Write_Text
  1888 ;;		___awdiv
  1889 ;;		___awmod
  1890 ;;		_abs
  1891 ;;		_snprintf
  1892 ;; This function is called by:
  1893 ;;		Startup code after reset
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897     0B74                     _main:	
  1898                           ;psect for function _main
  1899                           
  1900     0B74                     l3608:	
  1901                           ;incstack = 0
  1902                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1903                           
  1904                           
  1905                           ;main.c: 9:     char displayText[64];;main.c: 10:     int16_t tempRaw, humRaw, humComp;;
      +                          main.c: 13:     I2C_Master_Init();
  1906     0B74  160A  158A  2259  120A  158A  	fcall	_I2C_Master_Init
  1907                           
  1908                           ;main.c: 14:     UART_TX_Init();
  1909     0B79  160A  158A  2294  120A  158A  	fcall	_UART_TX_Init
  1910     0B7E                     l3610:
  1911                           
  1912                           ;main.c: 15:     UART_Write_Text("TH02 Sensor Initialization\n\r");
  1913     0B7E  304A               	movlw	low (STR_1| (0+32768))
  1914     0B7F  00F1               	movwf	UART_Write_Text@text
  1915     0B80  3091               	movlw	high (STR_1| (0+32768))
  1916     0B81  00F2               	movwf	UART_Write_Text@text+1
  1917     0B82  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  1918     0B87                     l3612:
  1919                           
  1920                           ;main.c: 19:         UART_Write_Text("Starting Temperature Conversion...\n\r");
  1921     0B87  3087               	movlw	low (STR_2| (0+32768))
  1922     0B88  00F1               	movwf	UART_Write_Text@text
  1923     0B89  3090               	movlw	high (STR_2| (0+32768))
  1924     0B8A  00F2               	movwf	UART_Write_Text@text+1
  1925     0B8B  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  1926     0B90                     l3614:
  1927                           
  1928                           ;main.c: 20:         TH02_StartTempConversion(0, 0);
  1929     0B90  01F3               	clrf	TH02_StartTempConversion@heater
  1930     0B91  3000               	movlw	0
  1931     0B92  160A  118A  21AF  120A  158A  	fcall	_TH02_StartTempConversion
  1932     0B97                     l3616:
  1933                           
  1934                           ;main.c: 22:         if (TH02_WaitForReady() == 0) {
  1935     0B97  160A  158A  2375  120A  158A  	fcall	_TH02_WaitForReady
  1936     0B9C  3A00               	xorlw	0
  1937     0B9D  1D03               	skipz
  1938     0B9E  2BA0               	goto	u5561
  1939     0B9F  2BA1               	goto	u5560
  1940     0BA0                     u5561:
  1941     0BA0  2BB3               	goto	l3620
  1942     0BA1                     u5560:
  1943     0BA1                     l3618:
  1944                           
  1945                           ;main.c: 23:             tempRaw = TH02_GetConversionValue();
  1946     0BA1  120A  158A  2016  120A  158A  	fcall	_TH02_GetConversionValue
  1947     0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  1948     0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  1949     0BA8  0835               	movf	(?_TH02_GetConversionValue+1)^(0+128),w
  1950     0BA9  1683               	bsf	3,5	;RP0=1, select bank3
  1951     0BAA  1703               	bsf	3,6	;RP1=1, select bank3
  1952     0BAB  00D1               	movwf	(main@tempRaw+1)^(0+384)
  1953     0BAC  1683               	bsf	3,5	;RP0=1, select bank1
  1954     0BAD  1303               	bcf	3,6	;RP1=0, select bank1
  1955     0BAE  0834               	movf	?_TH02_GetConversionValue^(0+128),w
  1956     0BAF  1683               	bsf	3,5	;RP0=1, select bank3
  1957     0BB0  1703               	bsf	3,6	;RP1=1, select bank3
  1958     0BB1  00D0               	movwf	main@tempRaw^(0+384)
  1959                           
  1960                           ;main.c: 24:             } else {
  1961     0BB2  2BC2               	goto	l3624
  1962     0BB3                     l3620:
  1963                           
  1964                           ;main.c: 25:             UART_Write_Text("Temperature Conversion Timeout\n\r");
  1965     0BB3  30CE               	movlw	low (STR_3| (0+32768))
  1966     0BB4  00F1               	movwf	UART_Write_Text@text
  1967     0BB5  3090               	movlw	high (STR_3| (0+32768))
  1968     0BB6  00F2               	movwf	UART_Write_Text@text+1
  1969     0BB7  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  1970     0BBC                     l3622:
  1971                           
  1972                           ;main.c: 26:             tempRaw = 12345;
  1973     0BBC  3039               	movlw	57
  1974     0BBD  1683               	bsf	3,5	;RP0=1, select bank3
  1975     0BBE  1703               	bsf	3,6	;RP1=1, select bank3
  1976     0BBF  00D0               	movwf	main@tempRaw^(0+384)
  1977     0BC0  3030               	movlw	48
  1978     0BC1  00D1               	movwf	(main@tempRaw^(0+384)+1)
  1979     0BC2                     l3624:
  1980                           
  1981                           ;main.c: 30:         UART_Write_Text("Starting Humidity Conversion...\n\r");
  1982     0BC2  30AC               	movlw	low (STR_4| (0+32768))
  1983     0BC3  00F1               	movwf	UART_Write_Text@text
  1984     0BC4  3090               	movlw	high (STR_4| (0+32768))
  1985     0BC5  00F2               	movwf	UART_Write_Text@text+1
  1986     0BC6  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  1987     0BCB                     l3626:
  1988                           
  1989                           ;main.c: 31:         TH02_StartRHConversion(0, 0);
  1990     0BCB  01F3               	clrf	TH02_StartRHConversion@heater
  1991     0BCC  3000               	movlw	0
  1992     0BCD  160A  158A  22CD  120A  158A  	fcall	_TH02_StartRHConversion
  1993     0BD2                     l3628:
  1994                           
  1995                           ;main.c: 33:         if (TH02_WaitForReady() == 0) {
  1996     0BD2  160A  158A  2375  120A  158A  	fcall	_TH02_WaitForReady
  1997     0BD7  3A00               	xorlw	0
  1998     0BD8  1D03               	skipz
  1999     0BD9  2BDB               	goto	u5571
  2000     0BDA  2BDC               	goto	u5570
  2001     0BDB                     u5571:
  2002     0BDB  2C00               	goto	l3634
  2003     0BDC                     u5570:
  2004     0BDC                     l3630:
  2005                           
  2006                           ;main.c: 34:             humRaw = TH02_GetConversionValue();
  2007     0BDC  120A  158A  2016  120A  158A  	fcall	_TH02_GetConversionValue
  2008     0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  2009     0BE2  1303               	bcf	3,6	;RP1=0, select bank1
  2010     0BE3  0835               	movf	(?_TH02_GetConversionValue+1)^(0+128),w
  2011     0BE4  1683               	bsf	3,5	;RP0=1, select bank3
  2012     0BE5  1703               	bsf	3,6	;RP1=1, select bank3
  2013     0BE6  00D3               	movwf	(main@humRaw+1)^(0+384)
  2014     0BE7  1683               	bsf	3,5	;RP0=1, select bank1
  2015     0BE8  1303               	bcf	3,6	;RP1=0, select bank1
  2016     0BE9  0834               	movf	?_TH02_GetConversionValue^(0+128),w
  2017     0BEA  1683               	bsf	3,5	;RP0=1, select bank3
  2018     0BEB  1703               	bsf	3,6	;RP1=1, select bank3
  2019     0BEC  00D2               	movwf	main@humRaw^(0+384)
  2020     0BED                     l3632:
  2021                           
  2022                           ;main.c: 35:             humComp = TH02_GetCompensatedRH(1);
  2023     0BED  3001               	movlw	1
  2024     0BEE  120A  118A  244A  120A  158A  	fcall	_TH02_GetCompensatedRH
  2025     0BF3  1683               	bsf	3,5	;RP0=1, select bank1
  2026     0BF4  1303               	bcf	3,6	;RP1=0, select bank1
  2027     0BF5  0823               	movf	(?_TH02_GetCompensatedRH+1)^(0+128),w
  2028     0BF6  1683               	bsf	3,5	;RP0=1, select bank3
  2029     0BF7  1703               	bsf	3,6	;RP1=1, select bank3
  2030     0BF8  00D5               	movwf	(main@humComp+1)^(0+384)
  2031     0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  2032     0BFA  1303               	bcf	3,6	;RP1=0, select bank1
  2033     0BFB  0822               	movf	?_TH02_GetCompensatedRH^(0+128),w
  2034     0BFC  1683               	bsf	3,5	;RP0=1, select bank3
  2035     0BFD  1703               	bsf	3,6	;RP1=1, select bank3
  2036     0BFE  00D4               	movwf	main@humComp^(0+384)
  2037                           
  2038                           ;main.c: 36:         } else {
  2039     0BFF  2C13               	goto	l3640
  2040     0C00                     l3634:
  2041                           
  2042                           ;main.c: 37:             UART_Write_Text("Humidity Conversion Timeout\n\r");
  2043     0C00  300F               	movlw	low (STR_5| (0+32768))
  2044     0C01  00F1               	movwf	UART_Write_Text@text
  2045     0C02  3091               	movlw	high (STR_5| (0+32768))
  2046     0C03  00F2               	movwf	UART_Write_Text@text+1
  2047     0C04  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  2048     0C09                     l3636:
  2049                           
  2050                           ;main.c: 38:             humRaw = 12345;
  2051     0C09  3039               	movlw	57
  2052     0C0A  1683               	bsf	3,5	;RP0=1, select bank3
  2053     0C0B  1703               	bsf	3,6	;RP1=1, select bank3
  2054     0C0C  00D2               	movwf	main@humRaw^(0+384)
  2055     0C0D  3030               	movlw	48
  2056     0C0E  00D3               	movwf	(main@humRaw^(0+384)+1)
  2057     0C0F                     l3638:
  2058                           
  2059                           ;main.c: 39:             humComp = 12345;
  2060     0C0F  3039               	movlw	57
  2061     0C10  00D4               	movwf	main@humComp^(0+384)
  2062     0C11  3030               	movlw	48
  2063     0C12  00D5               	movwf	(main@humComp^(0+384)+1)
  2064     0C13                     l3640:
  2065                           
  2066                           ;main.c: 43:         if (tempRaw != 12345) {
  2067     0C13  3039               	movlw	57
  2068     0C14  0650               	xorwf	main@tempRaw^(0+384),w
  2069     0C15  3030               	movlw	48
  2070     0C16  1903               	skipnz
  2071     0C17  0651               	xorwf	(main@tempRaw+1)^(0+384),w
  2072     0C18  1903               	btfsc	3,2
  2073     0C19  2C1B               	goto	u5581
  2074     0C1A  2C1C               	goto	u5580
  2075     0C1B                     u5581:
  2076     0C1B  2C75               	goto	l3646
  2077     0C1C                     u5580:
  2078     0C1C                     l3642:
  2079                           
  2080                           ;main.c: 44:             snprintf(displayText, sizeof(displayText), "Temperature: %d.%01
      +                          d C\n\r", tempRaw / 10, abs(tempRaw % 10));
  2081     0C1C  300A               	movlw	10
  2082     0C1D  00F0               	movwf	___awdiv@divisor
  2083     0C1E  3000               	movlw	0
  2084     0C1F  00F1               	movwf	___awdiv@divisor+1
  2085     0C20  0851               	movf	(main@tempRaw+1)^(0+384),w
  2086     0C21  00F3               	movwf	___awdiv@dividend+1
  2087     0C22  0850               	movf	main@tempRaw^(0+384),w
  2088     0C23  00F2               	movwf	___awdiv@dividend
  2089     0C24  160A  158A  251F  120A  158A  	fcall	___awdiv
  2090     0C29  0871               	movf	?___awdiv+1,w
  2091     0C2A  1683               	bsf	3,5	;RP0=1, select bank3
  2092     0C2B  1703               	bsf	3,6	;RP1=1, select bank3
  2093     0C2C  00D7               	movwf	(_main$1024+1)^(0+384)
  2094     0C2D  0870               	movf	?___awdiv,w
  2095     0C2E  00D6               	movwf	_main$1024^(0+384)
  2096                           
  2097                           ;main.c: 44:             snprintf(displayText, sizeof(displayText), "Temperature: %d.%01
      +                          d C\n\r", tempRaw / 10, abs(tempRaw % 10));
  2098     0C2F  300A               	movlw	10
  2099     0C30  00F0               	movwf	___awmod@divisor
  2100     0C31  3000               	movlw	0
  2101     0C32  00F1               	movwf	___awmod@divisor+1
  2102     0C33  0851               	movf	(main@tempRaw+1)^(0+384),w
  2103     0C34  00F3               	movwf	___awmod@dividend+1
  2104     0C35  0850               	movf	main@tempRaw^(0+384),w
  2105     0C36  00F2               	movwf	___awmod@dividend
  2106     0C37  160A  158A  24C8  120A  158A  	fcall	___awmod
  2107     0C3C  0871               	movf	?___awmod+1,w
  2108     0C3D  00F7               	movwf	abs@a+1
  2109     0C3E  0870               	movf	?___awmod,w
  2110     0C3F  00F6               	movwf	abs@a
  2111     0C40  160A  158A  2283  120A  158A  	fcall	_abs
  2112     0C45  0877               	movf	?_abs+1,w
  2113     0C46  1683               	bsf	3,5	;RP0=1, select bank3
  2114     0C47  1703               	bsf	3,6	;RP1=1, select bank3
  2115     0C48  00D9               	movwf	(_main$1025+1)^(0+384)
  2116     0C49  0876               	movf	?_abs,w
  2117     0C4A  00D8               	movwf	_main$1025^(0+384)
  2118     0C4B                     l3644:
  2119                           
  2120                           ;main.c: 44:             snprintf(displayText, sizeof(displayText), "Temperature: %d.%01
      +                          d C\n\r", tempRaw / 10, abs(tempRaw % 10));
  2121     0C4B  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2122     0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  2123     0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  2124     0C4E  00D1               	movwf	snprintf@s
  2125     0C4F  3040               	movlw	64
  2126     0C50  00D2               	movwf	snprintf@n
  2127     0C51  3000               	movlw	0
  2128     0C52  00D3               	movwf	snprintf@n+1
  2129     0C53  3067               	movlw	low (STR_6| (0+32768))
  2130     0C54  00D4               	movwf	snprintf@fmt
  2131     0C55  3091               	movlw	high (STR_6| (0+32768))
  2132     0C56  00D5               	movwf	snprintf@fmt+1
  2133     0C57  1683               	bsf	3,5	;RP0=1, select bank3
  2134     0C58  1703               	bsf	3,6	;RP1=1, select bank3
  2135     0C59  0857               	movf	(_main$1024+1)^(0+384),w
  2136     0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  2137     0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  2138     0C5C  00D7               	movwf	?_snprintf+6
  2139     0C5D  1683               	bsf	3,5	;RP0=1, select bank3
  2140     0C5E  1703               	bsf	3,6	;RP1=1, select bank3
  2141     0C5F  0856               	movf	_main$1024^(0+384),w
  2142     0C60  1283               	bcf	3,5	;RP0=0, select bank0
  2143     0C61  1303               	bcf	3,6	;RP1=0, select bank0
  2144     0C62  00D6               	movwf	?_snprintf+5
  2145     0C63  1683               	bsf	3,5	;RP0=1, select bank3
  2146     0C64  1703               	bsf	3,6	;RP1=1, select bank3
  2147     0C65  0859               	movf	(_main$1025+1)^(0+384),w
  2148     0C66  1283               	bcf	3,5	;RP0=0, select bank0
  2149     0C67  1303               	bcf	3,6	;RP1=0, select bank0
  2150     0C68  00D9               	movwf	?_snprintf+8
  2151     0C69  1683               	bsf	3,5	;RP0=1, select bank3
  2152     0C6A  1703               	bsf	3,6	;RP1=1, select bank3
  2153     0C6B  0858               	movf	_main$1025^(0+384),w
  2154     0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  2155     0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  2156     0C6E  00D8               	movwf	?_snprintf+7
  2157     0C6F  160A  158A  2659  120A  158A  	fcall	_snprintf
  2158                           
  2159                           ;main.c: 45:         } else {
  2160     0C74  2C86               	goto	l217
  2161     0C75                     l3646:
  2162                           
  2163                           ;main.c: 46:         snprintf(displayText, sizeof(displayText), "Temperature: Error\n\r"
      +                          );
  2164     0C75  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2165     0C76  1283               	bcf	3,5	;RP0=0, select bank0
  2166     0C77  1303               	bcf	3,6	;RP1=0, select bank0
  2167     0C78  00D1               	movwf	snprintf@s
  2168     0C79  3040               	movlw	64
  2169     0C7A  00D2               	movwf	snprintf@n
  2170     0C7B  3000               	movlw	0
  2171     0C7C  00D3               	movwf	snprintf@n+1
  2172     0C7D  3098               	movlw	low (STR_7| (0+32768))
  2173     0C7E  00D4               	movwf	snprintf@fmt
  2174     0C7F  3091               	movlw	high (STR_7| (0+32768))
  2175     0C80  00D5               	movwf	snprintf@fmt+1
  2176     0C81  160A  158A  2659  120A  158A  	fcall	_snprintf
  2177     0C86                     l217:	
  2178                           ;main.c: 47:         }
  2179                           
  2180                           
  2181                           ;main.c: 48:         UART_Write_Text(displayText);
  2182     0C86  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2183     0C87  00F1               	movwf	UART_Write_Text@text
  2184     0C88  3001               	movlw	1
  2185     0C89  00F2               	movwf	UART_Write_Text@text+1
  2186     0C8A  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  2187     0C8F                     l3648:
  2188                           
  2189                           ;main.c: 51:         if (humRaw != 12345) {
  2190     0C8F  3039               	movlw	57
  2191     0C90  1683               	bsf	3,5	;RP0=1, select bank3
  2192     0C91  1703               	bsf	3,6	;RP1=1, select bank3
  2193     0C92  0652               	xorwf	main@humRaw^(0+384),w
  2194     0C93  3030               	movlw	48
  2195     0C94  1903               	skipnz
  2196     0C95  0653               	xorwf	(main@humRaw+1)^(0+384),w
  2197     0C96  1903               	btfsc	3,2
  2198     0C97  2C99               	goto	u5591
  2199     0C98  2C9A               	goto	u5590
  2200     0C99                     u5591:
  2201     0C99  2CF3               	goto	l3654
  2202     0C9A                     u5590:
  2203     0C9A                     l3650:
  2204                           
  2205                           ;main.c: 52:         snprintf(displayText, sizeof(displayText), "Humidity (Raw): %d.%01d
      +                           %%\n\r", humRaw / 10, abs(humRaw % 10));
  2206     0C9A  300A               	movlw	10
  2207     0C9B  00F0               	movwf	___awdiv@divisor
  2208     0C9C  3000               	movlw	0
  2209     0C9D  00F1               	movwf	___awdiv@divisor+1
  2210     0C9E  0853               	movf	(main@humRaw+1)^(0+384),w
  2211     0C9F  00F3               	movwf	___awdiv@dividend+1
  2212     0CA0  0852               	movf	main@humRaw^(0+384),w
  2213     0CA1  00F2               	movwf	___awdiv@dividend
  2214     0CA2  160A  158A  251F  120A  158A  	fcall	___awdiv
  2215     0CA7  0871               	movf	?___awdiv+1,w
  2216     0CA8  1683               	bsf	3,5	;RP0=1, select bank3
  2217     0CA9  1703               	bsf	3,6	;RP1=1, select bank3
  2218     0CAA  00D7               	movwf	(_main$1024+1)^(0+384)
  2219     0CAB  0870               	movf	?___awdiv,w
  2220     0CAC  00D6               	movwf	_main$1024^(0+384)
  2221                           
  2222                           ;main.c: 52:         snprintf(displayText, sizeof(displayText), "Humidity (Raw): %d.%01d
      +                           %%\n\r", humRaw / 10, abs(humRaw % 10));
  2223     0CAD  300A               	movlw	10
  2224     0CAE  00F0               	movwf	___awmod@divisor
  2225     0CAF  3000               	movlw	0
  2226     0CB0  00F1               	movwf	___awmod@divisor+1
  2227     0CB1  0853               	movf	(main@humRaw+1)^(0+384),w
  2228     0CB2  00F3               	movwf	___awmod@dividend+1
  2229     0CB3  0852               	movf	main@humRaw^(0+384),w
  2230     0CB4  00F2               	movwf	___awmod@dividend
  2231     0CB5  160A  158A  24C8  120A  158A  	fcall	___awmod
  2232     0CBA  0871               	movf	?___awmod+1,w
  2233     0CBB  00F7               	movwf	abs@a+1
  2234     0CBC  0870               	movf	?___awmod,w
  2235     0CBD  00F6               	movwf	abs@a
  2236     0CBE  160A  158A  2283  120A  158A  	fcall	_abs
  2237     0CC3  0877               	movf	?_abs+1,w
  2238     0CC4  1683               	bsf	3,5	;RP0=1, select bank3
  2239     0CC5  1703               	bsf	3,6	;RP1=1, select bank3
  2240     0CC6  00D9               	movwf	(_main$1025+1)^(0+384)
  2241     0CC7  0876               	movf	?_abs,w
  2242     0CC8  00D8               	movwf	_main$1025^(0+384)
  2243     0CC9                     l3652:
  2244                           
  2245                           ;main.c: 52:         snprintf(displayText, sizeof(displayText), "Humidity (Raw): %d.%01d
      +                           %%\n\r", humRaw / 10, abs(humRaw % 10));
  2246     0CC9  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2247     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2249     0CCC  00D1               	movwf	snprintf@s
  2250     0CCD  3040               	movlw	64
  2251     0CCE  00D2               	movwf	snprintf@n
  2252     0CCF  3000               	movlw	0
  2253     0CD0  00D3               	movwf	snprintf@n+1
  2254     0CD1  302D               	movlw	low (STR_8| (0+32768))
  2255     0CD2  00D4               	movwf	snprintf@fmt
  2256     0CD3  3091               	movlw	high (STR_8| (0+32768))
  2257     0CD4  00D5               	movwf	snprintf@fmt+1
  2258     0CD5  1683               	bsf	3,5	;RP0=1, select bank3
  2259     0CD6  1703               	bsf	3,6	;RP1=1, select bank3
  2260     0CD7  0857               	movf	(_main$1024+1)^(0+384),w
  2261     0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  2262     0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  2263     0CDA  00D7               	movwf	?_snprintf+6
  2264     0CDB  1683               	bsf	3,5	;RP0=1, select bank3
  2265     0CDC  1703               	bsf	3,6	;RP1=1, select bank3
  2266     0CDD  0856               	movf	_main$1024^(0+384),w
  2267     0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  2268     0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  2269     0CE0  00D6               	movwf	?_snprintf+5
  2270     0CE1  1683               	bsf	3,5	;RP0=1, select bank3
  2271     0CE2  1703               	bsf	3,6	;RP1=1, select bank3
  2272     0CE3  0859               	movf	(_main$1025+1)^(0+384),w
  2273     0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  2274     0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  2275     0CE6  00D9               	movwf	?_snprintf+8
  2276     0CE7  1683               	bsf	3,5	;RP0=1, select bank3
  2277     0CE8  1703               	bsf	3,6	;RP1=1, select bank3
  2278     0CE9  0858               	movf	_main$1025^(0+384),w
  2279     0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  2280     0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  2281     0CEC  00D8               	movwf	?_snprintf+7
  2282     0CED  160A  158A  2659  120A  158A  	fcall	_snprintf
  2283                           
  2284                           ;main.c: 53:         } else {
  2285     0CF2  2D04               	goto	l219
  2286     0CF3                     l3654:
  2287                           
  2288                           ;main.c: 54:         snprintf(displayText, sizeof(displayText), "Humidity (Raw): Error\n
      +                          \r");
  2289     0CF3  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2290     0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  2291     0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  2292     0CF6  00D1               	movwf	snprintf@s
  2293     0CF7  3040               	movlw	64
  2294     0CF8  00D2               	movwf	snprintf@n
  2295     0CF9  3000               	movlw	0
  2296     0CFA  00D3               	movwf	snprintf@n+1
  2297     0CFB  3080               	movlw	low (STR_9| (0+32768))
  2298     0CFC  00D4               	movwf	snprintf@fmt
  2299     0CFD  3091               	movlw	high (STR_9| (0+32768))
  2300     0CFE  00D5               	movwf	snprintf@fmt+1
  2301     0CFF  160A  158A  2659  120A  158A  	fcall	_snprintf
  2302     0D04                     l219:	
  2303                           ;main.c: 55:         }
  2304                           
  2305                           
  2306                           ;main.c: 56:         UART_Write_Text(displayText);
  2307     0D04  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2308     0D05  00F1               	movwf	UART_Write_Text@text
  2309     0D06  3001               	movlw	1
  2310     0D07  00F2               	movwf	UART_Write_Text@text+1
  2311     0D08  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  2312     0D0D                     l3656:
  2313                           
  2314                           ;main.c: 59:         if (humComp != 12345) {
  2315     0D0D  3039               	movlw	57
  2316     0D0E  1683               	bsf	3,5	;RP0=1, select bank3
  2317     0D0F  1703               	bsf	3,6	;RP1=1, select bank3
  2318     0D10  0654               	xorwf	main@humComp^(0+384),w
  2319     0D11  3030               	movlw	48
  2320     0D12  1903               	skipnz
  2321     0D13  0655               	xorwf	(main@humComp+1)^(0+384),w
  2322     0D14  1903               	btfsc	3,2
  2323     0D15  2D17               	goto	u5601
  2324     0D16  2D18               	goto	u5600
  2325     0D17                     u5601:
  2326     0D17  2D71               	goto	l3662
  2327     0D18                     u5600:
  2328     0D18                     l3658:
  2329                           
  2330                           ;main.c: 60:         snprintf(displayText, sizeof(displayText), "Humidity (Compensated):
      +                           %d.%01d %%\n\r", humComp / 10, abs(humComp % 10));
  2331     0D18  300A               	movlw	10
  2332     0D19  00F0               	movwf	___awdiv@divisor
  2333     0D1A  3000               	movlw	0
  2334     0D1B  00F1               	movwf	___awdiv@divisor+1
  2335     0D1C  0855               	movf	(main@humComp+1)^(0+384),w
  2336     0D1D  00F3               	movwf	___awdiv@dividend+1
  2337     0D1E  0854               	movf	main@humComp^(0+384),w
  2338     0D1F  00F2               	movwf	___awdiv@dividend
  2339     0D20  160A  158A  251F  120A  158A  	fcall	___awdiv
  2340     0D25  0871               	movf	?___awdiv+1,w
  2341     0D26  1683               	bsf	3,5	;RP0=1, select bank3
  2342     0D27  1703               	bsf	3,6	;RP1=1, select bank3
  2343     0D28  00D7               	movwf	(_main$1024+1)^(0+384)
  2344     0D29  0870               	movf	?___awdiv,w
  2345     0D2A  00D6               	movwf	_main$1024^(0+384)
  2346                           
  2347                           ;main.c: 60:         snprintf(displayText, sizeof(displayText), "Humidity (Compensated):
      +                           %d.%01d %%\n\r", humComp / 10, abs(humComp % 10));
  2348     0D2B  300A               	movlw	10
  2349     0D2C  00F0               	movwf	___awmod@divisor
  2350     0D2D  3000               	movlw	0
  2351     0D2E  00F1               	movwf	___awmod@divisor+1
  2352     0D2F  0855               	movf	(main@humComp+1)^(0+384),w
  2353     0D30  00F3               	movwf	___awmod@dividend+1
  2354     0D31  0854               	movf	main@humComp^(0+384),w
  2355     0D32  00F2               	movwf	___awmod@dividend
  2356     0D33  160A  158A  24C8  120A  158A  	fcall	___awmod
  2357     0D38  0871               	movf	?___awmod+1,w
  2358     0D39  00F7               	movwf	abs@a+1
  2359     0D3A  0870               	movf	?___awmod,w
  2360     0D3B  00F6               	movwf	abs@a
  2361     0D3C  160A  158A  2283  120A  158A  	fcall	_abs
  2362     0D41  0877               	movf	?_abs+1,w
  2363     0D42  1683               	bsf	3,5	;RP0=1, select bank3
  2364     0D43  1703               	bsf	3,6	;RP1=1, select bank3
  2365     0D44  00D9               	movwf	(_main$1025+1)^(0+384)
  2366     0D45  0876               	movf	?_abs,w
  2367     0D46  00D8               	movwf	_main$1025^(0+384)
  2368     0D47                     l3660:
  2369                           
  2370                           ;main.c: 60:         snprintf(displayText, sizeof(displayText), "Humidity (Compensated):
      +                           %d.%01d %%\n\r", humComp / 10, abs(humComp % 10));
  2371     0D47  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2372     0D48  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0D49  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0D4A  00D1               	movwf	snprintf@s
  2375     0D4B  3040               	movlw	64
  2376     0D4C  00D2               	movwf	snprintf@n
  2377     0D4D  3000               	movlw	0
  2378     0D4E  00D3               	movwf	snprintf@n+1
  2379     0D4F  3062               	movlw	low (STR_10| (0+32768))
  2380     0D50  00D4               	movwf	snprintf@fmt
  2381     0D51  3090               	movlw	high (STR_10| (0+32768))
  2382     0D52  00D5               	movwf	snprintf@fmt+1
  2383     0D53  1683               	bsf	3,5	;RP0=1, select bank3
  2384     0D54  1703               	bsf	3,6	;RP1=1, select bank3
  2385     0D55  0857               	movf	(_main$1024+1)^(0+384),w
  2386     0D56  1283               	bcf	3,5	;RP0=0, select bank0
  2387     0D57  1303               	bcf	3,6	;RP1=0, select bank0
  2388     0D58  00D7               	movwf	?_snprintf+6
  2389     0D59  1683               	bsf	3,5	;RP0=1, select bank3
  2390     0D5A  1703               	bsf	3,6	;RP1=1, select bank3
  2391     0D5B  0856               	movf	_main$1024^(0+384),w
  2392     0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  2393     0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  2394     0D5E  00D6               	movwf	?_snprintf+5
  2395     0D5F  1683               	bsf	3,5	;RP0=1, select bank3
  2396     0D60  1703               	bsf	3,6	;RP1=1, select bank3
  2397     0D61  0859               	movf	(_main$1025+1)^(0+384),w
  2398     0D62  1283               	bcf	3,5	;RP0=0, select bank0
  2399     0D63  1303               	bcf	3,6	;RP1=0, select bank0
  2400     0D64  00D9               	movwf	?_snprintf+8
  2401     0D65  1683               	bsf	3,5	;RP0=1, select bank3
  2402     0D66  1703               	bsf	3,6	;RP1=1, select bank3
  2403     0D67  0858               	movf	_main$1025^(0+384),w
  2404     0D68  1283               	bcf	3,5	;RP0=0, select bank0
  2405     0D69  1303               	bcf	3,6	;RP1=0, select bank0
  2406     0D6A  00D8               	movwf	?_snprintf+7
  2407     0D6B  160A  158A  2659  120A  158A  	fcall	_snprintf
  2408                           
  2409                           ;main.c: 61:         } else {
  2410     0D70  2D82               	goto	l221
  2411     0D71                     l3662:
  2412                           
  2413                           ;main.c: 62:         snprintf(displayText, sizeof(displayText), "Humidity (Compensated):
      +                           Error\n\r");
  2414     0D71  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2415     0D72  1283               	bcf	3,5	;RP0=0, select bank0
  2416     0D73  1303               	bcf	3,6	;RP1=0, select bank0
  2417     0D74  00D1               	movwf	snprintf@s
  2418     0D75  3040               	movlw	64
  2419     0D76  00D2               	movwf	snprintf@n
  2420     0D77  3000               	movlw	0
  2421     0D78  00D3               	movwf	snprintf@n+1
  2422     0D79  30EF               	movlw	low (STR_11| (0+32768))
  2423     0D7A  00D4               	movwf	snprintf@fmt
  2424     0D7B  3090               	movlw	high (STR_11| (0+32768))
  2425     0D7C  00D5               	movwf	snprintf@fmt+1
  2426     0D7D  160A  158A  2659  120A  158A  	fcall	_snprintf
  2427     0D82                     l221:	
  2428                           ;main.c: 63:         }
  2429                           
  2430                           
  2431                           ;main.c: 64:         UART_Write_Text(displayText);
  2432     0D82  3090               	movlw	(low (main@displayText| (0+256)))& (0+255)
  2433     0D83  00F1               	movwf	UART_Write_Text@text
  2434     0D84  3001               	movlw	1
  2435     0D85  00F2               	movwf	UART_Write_Text@text+1
  2436     0D86  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  2437                           
  2438                           ;main.c: 65:         UART_Write_Text("\n\rWaiting 10 seconds for the next measurement...
      +                          \n\r");
  2439     0D8B  3000               	movlw	low (STR_12| (0+32768))
  2440     0D8C  00F1               	movwf	UART_Write_Text@text
  2441     0D8D  3090               	movlw	high (STR_12| (0+32768))
  2442     0D8E  00F2               	movwf	UART_Write_Text@text+1
  2443     0D8F  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  2444                           
  2445                           ;main.c: 66:         UART_Write_Text("\n\r************------------------************\n\r
      +                          ");
  2446     0D94  3033               	movlw	low (STR_13| (0+32768))
  2447     0D95  00F1               	movwf	UART_Write_Text@text
  2448     0D96  3090               	movlw	high (STR_13| (0+32768))
  2449     0D97  00F2               	movwf	UART_Write_Text@text+1
  2450     0D98  160A  158A  2328  120A  158A  	fcall	_UART_Write_Text
  2451     0D9D                     l3664:
  2452                           
  2453                           ;main.c: 68:         _delay((unsigned long)((10000)*(16000000/4000.0)));
  2454     0D9D  30CB               	movlw	203
  2455     0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  2456     0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  2457     0DA0  00C5               	movwf	(??_main^(0+128)+2)
  2458     0DA1  30EC               	movlw	236
  2459     0DA2  00C4               	movwf	(??_main^(0+128)+1)
  2460     0DA3  3083               	movlw	131
  2461     0DA4  00C3               	movwf	??_main^(0+128)
  2462     0DA5                     u5617:
  2463     0DA5  0BC3               	decfsz	??_main^(0+128),f
  2464     0DA6  2DA5               	goto	u5617
  2465     0DA7  0BC4               	decfsz	(??_main^(0+128)+1),f
  2466     0DA8  2DA5               	goto	u5617
  2467     0DA9  0BC5               	decfsz	(??_main^(0+128)+2),f
  2468     0DAA  2DA5               	goto	u5617
  2469     0DAB  2DAC               	nop2
  2470     0DAC  2B87               	goto	l3612
  2471     0DAD  120A  118A  2800   	ljmp	start
  2472     0DB0                     __end_of_main:
  2473                           
  2474                           	psect	text1
  2475     1E59                     __ptext1:	
  2476 ;; *************** function _snprintf *****************
  2477 ;; Defined at:
  2478 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_snprintf.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  s               1   49[BANK0 ] PTR unsigned char 
  2481 ;;		 -> main@displayText(64), 
  2482 ;;  n               2   50[BANK0 ] unsigned int 
  2483 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  2484 ;;		 -> STR_11(32), STR_10(37), STR_9(24), STR_8(29), 
  2485 ;;		 -> STR_7(21), STR_6(25), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  f              11   66[BANK0 ] struct _IO_FILE
  2488 ;;  cnt             2   64[BANK0 ] int 
  2489 ;;  ap              1   63[BANK0 ] PTR void [1]
  2490 ;;		 -> ?_snprintf(2), 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  2   49[BANK0 ] int 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         0       9       0       0       0
  2501 ;;      Locals:         0      16       0       0       0
  2502 ;;      Temps:          0       3       0       0       0
  2503 ;;      Totals:         0      28       0       0       0
  2504 ;;Total ram usage:       28 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 7
  2507 ;; This function calls:
  2508 ;;		_vfprintf
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514     1E59                     _snprintf:	
  2515                           ;psect for function _snprintf
  2516                           
  2517     1E59                     l3574:	
  2518                           ;incstack = 0
  2519                           ; Regs used in _snprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2520                           
  2521     1E59  3080               	movlw	128
  2522     1E5A  1283               	bcf	3,5	;RP0=0, select bank0
  2523     1E5B  1303               	bcf	3,6	;RP1=0, select bank0
  2524     1E5C  0253               	subwf	snprintf@n+1,w
  2525     1E5D  3000               	movlw	0
  2526     1E5E  1903               	skipnz
  2527     1E5F  0252               	subwf	snprintf@n,w
  2528     1E60  1C03               	skipc
  2529     1E61  2E63               	goto	u5511
  2530     1E62  2E64               	goto	u5510
  2531     1E63                     u5511:
  2532     1E63  2E6B               	goto	l3580
  2533     1E64                     u5510:
  2534     1E64                     l3576:
  2535     1E64  304B               	movlw	75
  2536     1E65  1683               	bsf	3,5	;RP0=1, select bank1
  2537     1E66  1303               	bcf	3,6	;RP1=0, select bank1
  2538     1E67  00D4               	movwf	_errno^(0+128)
  2539     1E68  3000               	movlw	0
  2540     1E69  00D5               	movwf	(_errno^(0+128)+1)
  2541     1E6A  2EDA               	goto	l809
  2542     1E6B                     l3580:
  2543     1E6B  3056               	movlw	(low ((?_snprintf| 0+5)))& (0+255)
  2544     1E6C  00DF               	movwf	snprintf@ap
  2545     1E6D                     l3582:
  2546     1E6D  0851               	movf	snprintf@s,w
  2547     1E6E  00E2               	movwf	snprintf@f
  2548     1E6F  3001               	movlw	1
  2549     1E70  00E3               	movwf	snprintf@f+1
  2550     1E71                     l3584:
  2551     1E71  3000               	movlw	0
  2552     1E72  0253               	subwf	snprintf@n+1,w
  2553     1E73  3002               	movlw	2
  2554     1E74  1903               	skipnz
  2555     1E75  0252               	subwf	snprintf@n,w
  2556     1E76  1C03               	skipc
  2557     1E77  2E79               	goto	u5521
  2558     1E78  2E7A               	goto	u5520
  2559     1E79                     u5521:
  2560     1E79  2E85               	goto	l3590
  2561     1E7A                     u5520:
  2562     1E7A                     l3586:
  2563     1E7A  0852               	movf	snprintf@n,w
  2564     1E7B  3EFF               	addlw	255
  2565     1E7C  00EB               	movwf	snprintf@f+9
  2566     1E7D  0853               	movf	snprintf@n+1,w
  2567     1E7E  1803               	skipnc
  2568     1E7F  3E01               	addlw	1
  2569     1E80  3EFF               	addlw	255
  2570     1E81  00EC               	movwf	snprintf@f+10
  2571     1E82                     l3588:
  2572     1E82  01E4               	clrf	snprintf@f+2
  2573     1E83  01E5               	clrf	snprintf@f+3
  2574     1E84  2E8D               	goto	l3592
  2575     1E85                     l3590:
  2576     1E85  3001               	movlw	1
  2577     1E86  00EB               	movwf	snprintf@f+9
  2578     1E87  3000               	movlw	0
  2579     1E88  00EC               	movwf	snprintf@f+10
  2580     1E89  3001               	movlw	1
  2581     1E8A  00E4               	movwf	snprintf@f+2
  2582     1E8B  3000               	movlw	0
  2583     1E8C  00E5               	movwf	snprintf@f+3
  2584     1E8D                     l3592:
  2585     1E8D  3062               	movlw	low snprintf@f
  2586     1E8E  00CA               	movwf	vfprintf@fp
  2587     1E8F  3000               	movlw	high snprintf@f
  2588     1E90  00CB               	movwf	vfprintf@fp+1
  2589     1E91  0854               	movf	snprintf@fmt,w
  2590     1E92  00CC               	movwf	vfprintf@fmt
  2591     1E93  0855               	movf	snprintf@fmt+1,w
  2592     1E94  00CD               	movwf	vfprintf@fmt+1
  2593     1E95  305F               	movlw	(low (snprintf@ap| 0))& (0+255)
  2594     1E96  00CE               	movwf	vfprintf@ap
  2595     1E97  160A  158A  23FA  160A  158A  	fcall	_vfprintf
  2596     1E9C  1283               	bcf	3,5	;RP0=0, select bank0
  2597     1E9D  1303               	bcf	3,6	;RP1=0, select bank0
  2598     1E9E  084B               	movf	?_vfprintf+1,w
  2599     1E9F  00E1               	movwf	snprintf@cnt+1
  2600     1EA0  084A               	movf	?_vfprintf,w
  2601     1EA1  00E0               	movwf	snprintf@cnt
  2602     1EA2                     l3594:
  2603     1EA2  0852               	movf	snprintf@n,w
  2604     1EA3  0453               	iorwf	snprintf@n+1,w
  2605     1EA4  1903               	btfsc	3,2
  2606     1EA5  2EA7               	goto	u5531
  2607     1EA6  2EA8               	goto	u5530
  2608     1EA7                     u5531:
  2609     1EA7  2EDA               	goto	l809
  2610     1EA8                     u5530:
  2611     1EA8                     l3596:
  2612     1EA8  1BE1               	btfsc	snprintf@cnt+1,7
  2613     1EA9  2EAB               	goto	u5541
  2614     1EAA  2EAC               	goto	u5540
  2615     1EAB                     u5541:
  2616     1EAB  2EDA               	goto	l809
  2617     1EAC                     u5540:
  2618     1EAC                     l3598:
  2619     1EAC  0852               	movf	snprintf@n,w
  2620     1EAD  3EFF               	addlw	255
  2621     1EAE  00DA               	movwf	??_snprintf
  2622     1EAF  0853               	movf	snprintf@n+1,w
  2623     1EB0  1803               	skipnc
  2624     1EB1  3E01               	addlw	1
  2625     1EB2  3EFF               	addlw	255
  2626     1EB3  00DB               	movwf	??_snprintf+1
  2627     1EB4  0861               	movf	snprintf@cnt+1,w
  2628     1EB5  3A80               	xorlw	128
  2629     1EB6  00DC               	movwf	??_snprintf+2
  2630     1EB7  085B               	movf	??_snprintf+1,w
  2631     1EB8  3A80               	xorlw	128
  2632     1EB9  025C               	subwf	??_snprintf+2,w
  2633     1EBA  1D03               	skipz
  2634     1EBB  2EBE               	goto	u5555
  2635     1EBC  085A               	movf	??_snprintf,w
  2636     1EBD  0260               	subwf	snprintf@cnt,w
  2637     1EBE                     u5555:
  2638     1EBE  1C03               	skipc
  2639     1EBF  2EC1               	goto	u5551
  2640     1EC0  2EC2               	goto	u5550
  2641     1EC1                     u5551:
  2642     1EC1  2ECD               	goto	l3602
  2643     1EC2                     u5550:
  2644     1EC2                     l3600:
  2645     1EC2  1283               	bcf	3,5	;RP0=0, select bank0
  2646     1EC3  1303               	bcf	3,6	;RP1=0, select bank0
  2647     1EC4  0852               	movf	snprintf@n,w
  2648     1EC5  3EFF               	addlw	255
  2649     1EC6  00DD               	movwf	_snprintf$691
  2650     1EC7  0853               	movf	snprintf@n+1,w
  2651     1EC8  1803               	skipnc
  2652     1EC9  3E01               	addlw	1
  2653     1ECA  3EFF               	addlw	255
  2654     1ECB  00DE               	movwf	_snprintf$691+1
  2655     1ECC  2ED3               	goto	l3604
  2656     1ECD                     l3602:
  2657     1ECD  1283               	bcf	3,5	;RP0=0, select bank0
  2658     1ECE  1303               	bcf	3,6	;RP1=0, select bank0
  2659     1ECF  0861               	movf	snprintf@cnt+1,w
  2660     1ED0  00DE               	movwf	_snprintf$691+1
  2661     1ED1  0860               	movf	snprintf@cnt,w
  2662     1ED2  00DD               	movwf	_snprintf$691
  2663     1ED3                     l3604:
  2664     1ED3  085D               	movf	_snprintf$691,w
  2665     1ED4  0751               	addwf	snprintf@s,w
  2666     1ED5  00DA               	movwf	??_snprintf
  2667     1ED6  085A               	movf	??_snprintf,w
  2668     1ED7  0084               	movwf	4
  2669     1ED8  1783               	bsf	3,7	;select IRP bank2
  2670     1ED9  0180               	clrf	0
  2671     1EDA                     l809:
  2672     1EDA  0008               	return
  2673     1EDB                     __end_of_snprintf:
  2674                           
  2675                           	psect	text2
  2676     1BFA                     __ptext2:	
  2677 ;; *************** function _vfprintf *****************
  2678 ;; Defined at:
  2679 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  2682 ;;		 -> snprintf@f(11), 
  2683 ;;  fmt             2   44[BANK0 ] PTR const unsigned char 
  2684 ;;		 -> STR_11(32), STR_10(37), STR_9(24), STR_8(29), 
  2685 ;;		 -> STR_7(21), STR_6(25), 
  2686 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2687 ;;		 -> snprintf@ap(1), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  cfmt            2   47[BANK0 ] PTR unsigned char 
  2690 ;;		 -> STR_11(32), STR_10(37), STR_9(24), STR_8(29), 
  2691 ;;		 -> STR_7(21), STR_6(25), 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  2   42[BANK0 ] int 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         0       5       0       0       0
  2702 ;;      Locals:         0       2       0       0       0
  2703 ;;      Temps:          0       0       0       0       0
  2704 ;;      Totals:         0       7       0       0       0
  2705 ;;Total ram usage:        7 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 6
  2708 ;; This function calls:
  2709 ;;		_vfpfcnvrt
  2710 ;; This function is called by:
  2711 ;;		_snprintf
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715     1BFA                     _vfprintf:	
  2716                           ;psect for function _vfprintf
  2717                           
  2718     1BFA                     l3416:	
  2719                           ;incstack = 0
  2720 ;; using string table level
  2721                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2722                           
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2725     1BFA  1283               	bcf	3,5	;RP0=0, select bank0
  2726     1BFB  1303               	bcf	3,6	;RP1=0, select bank0
  2727     1BFC  084C               	movf	vfprintf@fmt,w
  2728     1BFD  00CF               	movwf	vfprintf@cfmt
  2729     1BFE  084D               	movf	vfprintf@fmt+1,w
  2730     1BFF  00D0               	movwf	vfprintf@cfmt+1
  2731     1C00                     l3418:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2734     1C00  1683               	bsf	3,5	;RP0=1, select bank1
  2735     1C01  1303               	bcf	3,6	;RP1=0, select bank1
  2736     1C02  01CE               	clrf	_nout^(0+128)
  2737     1C03  01CF               	clrf	(_nout+1)^(0+128)
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2740     1C04  2C20               	goto	l3422
  2741     1C05                     l3420:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2744     1C05  084A               	movf	vfprintf@fp,w
  2745     1C06  00BB               	movwf	vfpfcnvrt@fp
  2746     1C07  084B               	movf	vfprintf@fp+1,w
  2747     1C08  00BC               	movwf	vfpfcnvrt@fp+1
  2748     1C09  304F               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2749     1C0A  00BD               	movwf	vfpfcnvrt@fmt
  2750     1C0B  084E               	movf	vfprintf@ap,w
  2751     1C0C  00BE               	movwf	vfpfcnvrt@ap
  2752     1C0D  160A  118A  26C7  160A  158A  	fcall	_vfpfcnvrt
  2753     1C12  1283               	bcf	3,5	;RP0=0, select bank0
  2754     1C13  1303               	bcf	3,6	;RP1=0, select bank0
  2755     1C14  083B               	movf	?_vfpfcnvrt,w
  2756     1C15  1683               	bsf	3,5	;RP0=1, select bank1
  2757     1C16  1303               	bcf	3,6	;RP1=0, select bank1
  2758     1C17  07CE               	addwf	_nout^(0+128),f
  2759     1C18  1803               	skipnc
  2760     1C19  0ACF               	incf	(_nout+1)^(0+128),f
  2761     1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  2762     1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  2763     1C1C  083C               	movf	?_vfpfcnvrt+1,w
  2764     1C1D  1683               	bsf	3,5	;RP0=1, select bank1
  2765     1C1E  1303               	bcf	3,6	;RP1=0, select bank1
  2766     1C1F  07CF               	addwf	(_nout+1)^(0+128),f
  2767     1C20                     l3422:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2770     1C20  1283               	bcf	3,5	;RP0=0, select bank0
  2771     1C21  1303               	bcf	3,6	;RP1=0, select bank0
  2772     1C22  0850               	movf	vfprintf@cfmt+1,w
  2773     1C23  00FF               	movwf	btemp+1
  2774     1C24  084F               	movf	vfprintf@cfmt,w
  2775     1C25  0084               	movwf	4
  2776     1C26  160A  158A  2000  160A  158A  	fcall	stringtab
  2777     1C2B  3A00               	xorlw	0
  2778     1C2C  1D03               	skipz
  2779     1C2D  2C2F               	goto	u5321
  2780     1C2E  2C30               	goto	u5320
  2781     1C2F                     u5321:
  2782     1C2F  2C05               	goto	l3420
  2783     1C30                     u5320:
  2784     1C30                     l3424:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  2787     1C30  1683               	bsf	3,5	;RP0=1, select bank1
  2788     1C31  1303               	bcf	3,6	;RP1=0, select bank1
  2789     1C32  084F               	movf	(_nout+1)^(0+128),w
  2790     1C33  1283               	bcf	3,5	;RP0=0, select bank0
  2791     1C34  1303               	bcf	3,6	;RP1=0, select bank0
  2792     1C35  00CB               	movwf	?_vfprintf+1
  2793     1C36  1683               	bsf	3,5	;RP0=1, select bank1
  2794     1C37  1303               	bcf	3,6	;RP1=0, select bank1
  2795     1C38  084E               	movf	_nout^(0+128),w
  2796     1C39  1283               	bcf	3,5	;RP0=0, select bank0
  2797     1C3A  1303               	bcf	3,6	;RP1=0, select bank0
  2798     1C3B  00CA               	movwf	?_vfprintf
  2799     1C3C                     l891:
  2800     1C3C  0008               	return
  2801     1C3D                     __end_of_vfprintf:
  2802                           
  2803                           	psect	text3
  2804     16C7                     __ptext3:	
  2805 ;; *************** function _vfpfcnvrt *****************
  2806 ;; Defined at:
  2807 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2810 ;;		 -> snprintf@f(11), 
  2811 ;;  fmt             1   29[BANK0 ] PTR PTR unsigned char 
  2812 ;;		 -> vfprintf@cfmt(2), 
  2813 ;;  ap              1   30[BANK0 ] PTR PTR void 
  2814 ;;		 -> snprintf@ap(1), 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  convarg         4   35[BANK0 ] struct .
  2817 ;;  cp              2   40[BANK0 ] PTR unsigned char 
  2818 ;;		 -> STR_11(32), STR_10(37), STR_9(24), STR_8(29), 
  2819 ;;		 -> STR_7(21), STR_6(25), 
  2820 ;;  done            1   39[BANK0 ] _Bool 
  2821 ;;  c               1    0        unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  2   27[BANK0 ] int 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         0       4       0       0       0
  2832 ;;      Locals:         0       7       0       0       0
  2833 ;;      Temps:          0       4       0       0       0
  2834 ;;      Totals:         0      15       0       0       0
  2835 ;;Total ram usage:       15 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 5
  2838 ;; This function calls:
  2839 ;;		_dtoa
  2840 ;;		_fputc
  2841 ;;		_read_prec_or_width
  2842 ;; This function is called by:
  2843 ;;		_vfprintf
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847     16C7                     _vfpfcnvrt:	
  2848                           ;psect for function _vfpfcnvrt
  2849                           
  2850     16C7                     l2890:	
  2851                           ;incstack = 0
  2852 ;; using string table level
  2853                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2854                           
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2857     16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2858     16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2859     16C9  083D               	movf	vfpfcnvrt@fmt,w
  2860     16CA  0084               	movwf	4
  2861     16CB  1383               	bcf	3,7	;select IRP bank0
  2862     16CC  0800               	movf	0,w
  2863     16CD  00BF               	movwf	??_vfpfcnvrt
  2864     16CE  0A84               	incf	4,f
  2865     16CF  0800               	movf	0,w
  2866     16D0  00C0               	movwf	??_vfpfcnvrt+1
  2867     16D1  0840               	movf	??_vfpfcnvrt+1,w
  2868     16D2  00FF               	movwf	btemp+1
  2869     16D3  083F               	movf	??_vfpfcnvrt,w
  2870     16D4  0084               	movwf	4
  2871     16D5  160A  158A  2000  160A  118A  	fcall	stringtab
  2872     16DA  3A25               	xorlw	37
  2873     16DB  1D03               	skipz
  2874     16DC  2EDE               	goto	u4231
  2875     16DD  2EDF               	goto	u4230
  2876     16DE                     u4231:
  2877     16DE  2FD4               	goto	l2946
  2878     16DF                     u4230:
  2879     16DF                     l2892:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2882     16DF  083D               	movf	vfpfcnvrt@fmt,w
  2883     16E0  0084               	movwf	4
  2884     16E1  3001               	movlw	1
  2885     16E2  1383               	bcf	3,7	;select IRP bank0
  2886     16E3  0780               	addwf	0,f
  2887     16E4  0A84               	incf	4,f
  2888     16E5  1803               	skipnc
  2889     16E6  0A80               	incf	0,f
  2890     16E7                     l2894:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2893     16E7  1683               	bsf	3,5	;RP0=1, select bank1
  2894     16E8  1303               	bcf	3,6	;RP1=0, select bank1
  2895     16E9  01D0               	clrf	_width^(0+128)
  2896     16EA  01D1               	clrf	(_width+1)^(0+128)
  2897     16EB  3000               	movlw	0
  2898     16EC  00D6               	movwf	_flags^(0+128)
  2899     16ED                     l2896:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2902     16ED  30FF               	movlw	255
  2903     16EE  00D2               	movwf	_prec^(0+128)
  2904     16EF  30FF               	movlw	255
  2905     16F0  00D3               	movwf	(_prec^(0+128)+1)
  2906     16F1                     l2898:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2909     16F1  1283               	bcf	3,5	;RP0=0, select bank0
  2910     16F2  1303               	bcf	3,6	;RP1=0, select bank0
  2911     16F3  01C7               	clrf	vfpfcnvrt@done
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2914     16F4  2F1B               	goto	l2906
  2915     16F5                     l876:	
  2916                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  2917                           
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2920     16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2921     16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2922     16F7  14D6               	bsf	_flags^(0+128),1
  2923     16F8                     l2900:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2926     16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2927     16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2928     16FA  083D               	movf	vfpfcnvrt@fmt,w
  2929     16FB  0084               	movwf	4
  2930     16FC  3001               	movlw	1
  2931     16FD  1383               	bcf	3,7	;select IRP bank0
  2932     16FE  0780               	addwf	0,f
  2933     16FF  0A84               	incf	4,f
  2934     1700  1803               	skipnc
  2935     1701  0A80               	incf	0,f
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2938     1702  2F1B               	goto	l2906
  2939     1703                     l878:	
  2940                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  2941                           
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2944     1703  3001               	movlw	1
  2945     1704  00C7               	movwf	vfpfcnvrt@done
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2948     1705  2F1B               	goto	l2906
  2949     1706                     l2904:
  2950     1706  083D               	movf	vfpfcnvrt@fmt,w
  2951     1707  0084               	movwf	4
  2952     1708  1383               	bcf	3,7	;select IRP bank0
  2953     1709  0800               	movf	0,w
  2954     170A  00BF               	movwf	??_vfpfcnvrt
  2955     170B  0A84               	incf	4,f
  2956     170C  0800               	movf	0,w
  2957     170D  00C0               	movwf	??_vfpfcnvrt+1
  2958     170E  0840               	movf	??_vfpfcnvrt+1,w
  2959     170F  00FF               	movwf	btemp+1
  2960     1710  083F               	movf	??_vfpfcnvrt,w
  2961     1711  0084               	movwf	4
  2962     1712  160A  158A  2000  160A  118A  	fcall	stringtab
  2963                           
  2964                           ; Switch size 1, requested type "simple"
  2965                           ; Number of cases is 1, Range of values is 48 to 48
  2966                           ; switch strategies available:
  2967                           ; Name         Instructions Cycles
  2968                           ; simple_byte            4     3 (average)
  2969                           ; direct_byte           14    11 (fixed)
  2970                           ; jumptable            263     9 (fixed)
  2971                           ;	Chosen strategy is simple_byte
  2972     1717  3A30               	xorlw	48	; case 48
  2973     1718  1903               	skipnz
  2974     1719  2EF5               	goto	l876
  2975     171A  2F03               	goto	l878
  2976     171B                     l2906:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2979     171B  0847               	movf	vfpfcnvrt@done,w
  2980     171C  1903               	btfsc	3,2
  2981     171D  2F1F               	goto	u4241
  2982     171E  2F20               	goto	u4240
  2983     171F                     u4241:
  2984     171F  2F06               	goto	l2904
  2985     1720                     u4240:
  2986     1720                     l2908:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2989     1720  083D               	movf	vfpfcnvrt@fmt,w
  2990     1721  00F6               	movwf	read_prec_or_width@fmt
  2991     1722  083E               	movf	vfpfcnvrt@ap,w
  2992     1723  00F7               	movwf	read_prec_or_width@ap
  2993     1724  160A  158A  25EC  160A  118A  	fcall	_read_prec_or_width
  2994     1729  0877               	movf	?_read_prec_or_width+1,w
  2995     172A  1683               	bsf	3,5	;RP0=1, select bank1
  2996     172B  1303               	bcf	3,6	;RP1=0, select bank1
  2997     172C  00D1               	movwf	(_width+1)^(0+128)
  2998     172D  0876               	movf	?_read_prec_or_width,w
  2999     172E  00D0               	movwf	_width^(0+128)
  3000     172F                     l2910:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  3003     172F  1FD1               	btfss	(_width+1)^(0+128),7
  3004     1730  2F32               	goto	u4251
  3005     1731  2F33               	goto	u4250
  3006     1732                     u4251:
  3007     1732  2F39               	goto	l2916
  3008     1733                     u4250:
  3009     1733                     l2912:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  3012     1733  1456               	bsf	_flags^(0+128),0
  3013     1734                     l2914:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  3016     1734  09D0               	comf	_width^(0+128),f
  3017     1735  09D1               	comf	(_width+1)^(0+128),f
  3018     1736  0AD0               	incf	_width^(0+128),f
  3019     1737  1903               	skipnz
  3020     1738  0AD1               	incf	(_width+1)^(0+128),f
  3021     1739                     l2916:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3024     1739  1283               	bcf	3,5	;RP0=0, select bank0
  3025     173A  1303               	bcf	3,6	;RP1=0, select bank0
  3026     173B  083D               	movf	vfpfcnvrt@fmt,w
  3027     173C  0084               	movwf	4
  3028     173D  1383               	bcf	3,7	;select IRP bank0
  3029     173E  0800               	movf	0,w
  3030     173F  00C8               	movwf	vfpfcnvrt@cp
  3031     1740  0A84               	incf	4,f
  3032     1741  0800               	movf	0,w
  3033     1742  0384               	decf	4,f
  3034     1743  00C9               	movwf	vfpfcnvrt@cp+1
  3035     1744                     l2918:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3038     1744  0849               	movf	vfpfcnvrt@cp+1,w
  3039     1745  00FF               	movwf	btemp+1
  3040     1746  0848               	movf	vfpfcnvrt@cp,w
  3041     1747  0084               	movwf	4
  3042     1748  160A  158A  2000  160A  118A  	fcall	stringtab
  3043     174D  3A64               	xorlw	100
  3044     174E  1903               	skipnz
  3045     174F  2F51               	goto	u4261
  3046     1750  2F52               	goto	u4260
  3047     1751                     u4261:
  3048     1751  2F60               	goto	l2922
  3049     1752                     u4260:
  3050     1752                     l2920:
  3051     1752  0849               	movf	vfpfcnvrt@cp+1,w
  3052     1753  00FF               	movwf	btemp+1
  3053     1754  0848               	movf	vfpfcnvrt@cp,w
  3054     1755  0084               	movwf	4
  3055     1756  160A  158A  2000  160A  118A  	fcall	stringtab
  3056     175B  3A69               	xorlw	105
  3057     175C  1D03               	skipz
  3058     175D  2F5F               	goto	u4271
  3059     175E  2F60               	goto	u4270
  3060     175F                     u4271:
  3061     175F  2F97               	goto	l2930
  3062     1760                     u4270:
  3063     1760                     l2922:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3066     1760  083E               	movf	vfpfcnvrt@ap,w
  3067     1761  0084               	movwf	4
  3068     1762  1383               	bcf	3,7	;select IRP bank0
  3069     1763  0800               	movf	0,w
  3070     1764  00FF               	movwf	btemp+1
  3071     1765  3002               	movlw	2
  3072     1766  0780               	addwf	0,f
  3073     1767  087F               	movf	btemp+1,w
  3074     1768  0084               	movwf	4
  3075     1769  0800               	movf	0,w
  3076     176A  00C3               	movwf	vfpfcnvrt@convarg
  3077     176B  0A84               	incf	4,f
  3078     176C  0800               	movf	0,w
  3079     176D  00C4               	movwf	vfpfcnvrt@convarg+1
  3080     176E                     l2924:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3083     176E  3001               	movlw	1
  3084     176F  00BF               	movwf	??_vfpfcnvrt
  3085     1770  083F               	movf	??_vfpfcnvrt,w
  3086     1771  0748               	addwf	vfpfcnvrt@cp,w
  3087     1772  00C1               	movwf	??_vfpfcnvrt+2
  3088     1773  0849               	movf	vfpfcnvrt@cp+1,w
  3089     1774  00C0               	movwf	??_vfpfcnvrt+1
  3090     1775  1803               	skipnc
  3091     1776  0AC0               	incf	??_vfpfcnvrt+1,f
  3092     1777  1BBF               	btfsc	??_vfpfcnvrt,7
  3093     1778  03C0               	decf	??_vfpfcnvrt+1,f
  3094     1779  0840               	movf	??_vfpfcnvrt+1,w
  3095     177A  00C2               	movwf	??_vfpfcnvrt+3
  3096     177B  083D               	movf	vfpfcnvrt@fmt,w
  3097     177C  0084               	movwf	4
  3098     177D  0841               	movf	??_vfpfcnvrt+2,w
  3099     177E  0080               	movwf	0
  3100     177F  0842               	movf	??_vfpfcnvrt+3,w
  3101     1780  0A84               	incf	4,f
  3102     1781  0080               	movwf	0
  3103     1782  0384               	decf	4,f
  3104     1783                     l2926:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  3107     1783  083B               	movf	vfpfcnvrt@fp,w
  3108     1784  00AF               	movwf	dtoa@fp
  3109     1785  083C               	movf	vfpfcnvrt@fp+1,w
  3110     1786  00B0               	movwf	dtoa@fp+1
  3111     1787  0844               	movf	vfpfcnvrt@convarg+1,w
  3112     1788  00B2               	movwf	dtoa@d+1
  3113     1789  0843               	movf	vfpfcnvrt@convarg,w
  3114     178A  00B1               	movwf	dtoa@d
  3115     178B  160A  118A  23B7  160A  118A  	fcall	_dtoa
  3116     1790  1283               	bcf	3,5	;RP0=0, select bank0
  3117     1791  1303               	bcf	3,6	;RP1=0, select bank0
  3118     1792  0830               	movf	?_dtoa+1,w
  3119     1793  00BC               	movwf	?_vfpfcnvrt+1
  3120     1794  082F               	movf	?_dtoa,w
  3121     1795  00BB               	movwf	?_vfpfcnvrt
  3122     1796  2FFF               	goto	l884
  3123     1797                     l2930:
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  3126     1797  083D               	movf	vfpfcnvrt@fmt,w
  3127     1798  0084               	movwf	4
  3128     1799  1383               	bcf	3,7	;select IRP bank0
  3129     179A  0800               	movf	0,w
  3130     179B  00BF               	movwf	??_vfpfcnvrt
  3131     179C  0A84               	incf	4,f
  3132     179D  0800               	movf	0,w
  3133     179E  00C0               	movwf	??_vfpfcnvrt+1
  3134     179F  0840               	movf	??_vfpfcnvrt+1,w
  3135     17A0  00FF               	movwf	btemp+1
  3136     17A1  083F               	movf	??_vfpfcnvrt,w
  3137     17A2  0084               	movwf	4
  3138     17A3  160A  158A  2000  160A  118A  	fcall	stringtab
  3139     17A8  3A25               	xorlw	37
  3140     17A9  1D03               	skipz
  3141     17AA  2FAC               	goto	u4281
  3142     17AB  2FAD               	goto	u4280
  3143     17AC                     u4281:
  3144     17AC  2FC9               	goto	l2940
  3145     17AD                     u4280:
  3146     17AD                     l2932:
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  3149     17AD  083D               	movf	vfpfcnvrt@fmt,w
  3150     17AE  0084               	movwf	4
  3151     17AF  3001               	movlw	1
  3152     17B0  1383               	bcf	3,7	;select IRP bank0
  3153     17B1  0780               	addwf	0,f
  3154     17B2  0A84               	incf	4,f
  3155     17B3  1803               	skipnc
  3156     17B4  0A80               	incf	0,f
  3157     17B5                     l2934:
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  3160     17B5  3025               	movlw	37
  3161     17B6  00F0               	movwf	fputc@c
  3162     17B7  3000               	movlw	0
  3163     17B8  00F1               	movwf	fputc@c+1
  3164     17B9  083B               	movf	vfpfcnvrt@fp,w
  3165     17BA  00F2               	movwf	fputc@fp
  3166     17BB  083C               	movf	vfpfcnvrt@fp+1,w
  3167     17BC  00F3               	movwf	fputc@fp+1
  3168     17BD  160A  118A  21C7  160A  118A  	fcall	_fputc
  3169     17C2                     l2936:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  3172     17C2  3001               	movlw	1
  3173     17C3  1283               	bcf	3,5	;RP0=0, select bank0
  3174     17C4  1303               	bcf	3,6	;RP1=0, select bank0
  3175     17C5  00BB               	movwf	?_vfpfcnvrt
  3176     17C6  3000               	movlw	0
  3177     17C7  00BC               	movwf	?_vfpfcnvrt+1
  3178     17C8  2FFF               	goto	l884
  3179     17C9                     l2940:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3182     17C9  083D               	movf	vfpfcnvrt@fmt,w
  3183     17CA  0084               	movwf	4
  3184     17CB  3001               	movlw	1
  3185     17CC  1383               	bcf	3,7	;select IRP bank0
  3186     17CD  0780               	addwf	0,f
  3187     17CE  0A84               	incf	4,f
  3188     17CF  1803               	skipnc
  3189     17D0  0A80               	incf	0,f
  3190     17D1                     l2942:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  3193     17D1  01BB               	clrf	?_vfpfcnvrt
  3194     17D2  01BC               	clrf	?_vfpfcnvrt+1
  3195     17D3  2FFF               	goto	l884
  3196     17D4                     l2946:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3199     17D4  083D               	movf	vfpfcnvrt@fmt,w
  3200     17D5  0084               	movwf	4
  3201     17D6  1383               	bcf	3,7	;select IRP bank0
  3202     17D7  0800               	movf	0,w
  3203     17D8  00BF               	movwf	??_vfpfcnvrt
  3204     17D9  0A84               	incf	4,f
  3205     17DA  0800               	movf	0,w
  3206     17DB  00C0               	movwf	??_vfpfcnvrt+1
  3207     17DC  0840               	movf	??_vfpfcnvrt+1,w
  3208     17DD  00FF               	movwf	btemp+1
  3209     17DE  083F               	movf	??_vfpfcnvrt,w
  3210     17DF  0084               	movwf	4
  3211     17E0  160A  158A  2000  160A  118A  	fcall	stringtab
  3212     17E5  00C1               	movwf	??_vfpfcnvrt+2
  3213     17E6  01C2               	clrf	??_vfpfcnvrt+3
  3214     17E7  0841               	movf	??_vfpfcnvrt+2,w
  3215     17E8  00F0               	movwf	fputc@c
  3216     17E9  0842               	movf	??_vfpfcnvrt+3,w
  3217     17EA  00F1               	movwf	fputc@c+1
  3218     17EB  083B               	movf	vfpfcnvrt@fp,w
  3219     17EC  00F2               	movwf	fputc@fp
  3220     17ED  083C               	movf	vfpfcnvrt@fp+1,w
  3221     17EE  00F3               	movwf	fputc@fp+1
  3222     17EF  160A  118A  21C7  160A  118A  	fcall	_fputc
  3223     17F4                     l2948:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  3226     17F4  1283               	bcf	3,5	;RP0=0, select bank0
  3227     17F5  1303               	bcf	3,6	;RP1=0, select bank0
  3228     17F6  083D               	movf	vfpfcnvrt@fmt,w
  3229     17F7  0084               	movwf	4
  3230     17F8  3001               	movlw	1
  3231     17F9  1383               	bcf	3,7	;select IRP bank0
  3232     17FA  0780               	addwf	0,f
  3233     17FB  0A84               	incf	4,f
  3234     17FC  1803               	skipnc
  3235     17FD  0A80               	incf	0,f
  3236     17FE  2FC2               	goto	l2936
  3237     17FF                     l884:
  3238     17FF  0008               	return
  3239     1800                     __end_of_vfpfcnvrt:
  3240                           
  3241                           	psect	text4
  3242     1DEC                     __ptext4:	
  3243 ;; *************** function _read_prec_or_width *****************
  3244 ;; Defined at:
  3245 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  3248 ;;		 -> vfprintf@cfmt(2), 
  3249 ;;  ap              1    7[COMMON] PTR PTR void [1]
  3250 ;;		 -> snprintf@ap(1), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  c               1   10[COMMON] unsigned char 
  3253 ;;  n               2   11[COMMON] int 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  2    6[COMMON] int 
  3256 ;; Registers used:
  3257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         2       0       0       0       0
  3264 ;;      Locals:         3       0       0       0       0
  3265 ;;      Temps:          2       0       0       0       0
  3266 ;;      Totals:         7       0       0       0       0
  3267 ;;Total ram usage:        7 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; Hardware stack levels required when called: 1
  3270 ;; This function calls:
  3271 ;;		___wmul
  3272 ;; This function is called by:
  3273 ;;		_vfpfcnvrt
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277     1DEC                     _read_prec_or_width:	
  3278                           ;psect for function _read_prec_or_width
  3279                           
  3280     1DEC                     l2498:	
  3281                           ;incstack = 0
  3282                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3283                           
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3286     1DEC  01FB               	clrf	read_prec_or_width@n
  3287     1DED  01FC               	clrf	read_prec_or_width@n+1
  3288     1DEE                     l2500:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3291     1DEE  0876               	movf	read_prec_or_width@fmt,w
  3292     1DEF  0084               	movwf	4
  3293     1DF0  1383               	bcf	3,7	;select IRP bank0
  3294     1DF1  0800               	movf	0,w
  3295     1DF2  00F8               	movwf	??_read_prec_or_width
  3296     1DF3  0A84               	incf	4,f
  3297     1DF4  0800               	movf	0,w
  3298     1DF5  00F9               	movwf	??_read_prec_or_width+1
  3299     1DF6  0879               	movf	??_read_prec_or_width+1,w
  3300     1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3301     1DF8  1303               	bcf	3,6	;RP1=0, select bank0
  3302     1DF9  00FF               	movwf	btemp+1
  3303     1DFA  0878               	movf	??_read_prec_or_width,w
  3304     1DFB  0084               	movwf	4
  3305     1DFC  160A  158A  2000  160A  158A  	fcall	stringtab
  3306     1E01  3A2A               	xorlw	42
  3307     1E02  1D03               	skipz
  3308     1E03  2E05               	goto	u3281
  3309     1E04  2E06               	goto	u3280
  3310     1E05                     u3281:
  3311     1E05  2E39               	goto	l2510
  3312     1E06                     u3280:
  3313     1E06                     l2502:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3316     1E06  0876               	movf	read_prec_or_width@fmt,w
  3317     1E07  0084               	movwf	4
  3318     1E08  3001               	movlw	1
  3319     1E09  1383               	bcf	3,7	;select IRP bank0
  3320     1E0A  0780               	addwf	0,f
  3321     1E0B  0A84               	incf	4,f
  3322     1E0C  1803               	skipnc
  3323     1E0D  0A80               	incf	0,f
  3324     1E0E                     l2504:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3327     1E0E  0877               	movf	read_prec_or_width@ap,w
  3328     1E0F  0084               	movwf	4
  3329     1E10  0800               	movf	0,w
  3330     1E11  00FF               	movwf	btemp+1
  3331     1E12  3002               	movlw	2
  3332     1E13  0780               	addwf	0,f
  3333     1E14  087F               	movf	btemp+1,w
  3334     1E15  0084               	movwf	4
  3335     1E16  0800               	movf	0,w
  3336     1E17  00FB               	movwf	read_prec_or_width@n
  3337     1E18  0A84               	incf	4,f
  3338     1E19  0800               	movf	0,w
  3339     1E1A  00FC               	movwf	read_prec_or_width@n+1
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3342     1E1B  2E54               	goto	l2512
  3343     1E1C                     l2506:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3346     1E1C  087C               	movf	read_prec_or_width@n+1,w
  3347     1E1D  00F1               	movwf	___wmul@multiplier+1
  3348     1E1E  087B               	movf	read_prec_or_width@n,w
  3349     1E1F  00F0               	movwf	___wmul@multiplier
  3350     1E20  300A               	movlw	10
  3351     1E21  00F2               	movwf	___wmul@multiplicand
  3352     1E22  3000               	movlw	0
  3353     1E23  00F3               	movwf	___wmul@multiplicand+1
  3354     1E24  120A  118A  2003  160A  158A  	fcall	___wmul
  3355     1E29  087A               	movf	read_prec_or_width@c,w
  3356     1E2A  0770               	addwf	?___wmul,w
  3357     1E2B  00FB               	movwf	read_prec_or_width@n
  3358     1E2C  3000               	movlw	0
  3359     1E2D  1803               	skipnc
  3360     1E2E  3001               	movlw	1
  3361     1E2F  0771               	addwf	?___wmul+1,w
  3362     1E30  00FC               	movwf	read_prec_or_width@n+1
  3363     1E31                     l2508:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3366     1E31  0876               	movf	read_prec_or_width@fmt,w
  3367     1E32  0084               	movwf	4
  3368     1E33  3001               	movlw	1
  3369     1E34  1383               	bcf	3,7	;select IRP bank0
  3370     1E35  0780               	addwf	0,f
  3371     1E36  0A84               	incf	4,f
  3372     1E37  1803               	skipnc
  3373     1E38  0A80               	incf	0,f
  3374     1E39                     l2510:
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3377     1E39  0876               	movf	read_prec_or_width@fmt,w
  3378     1E3A  0084               	movwf	4
  3379     1E3B  1383               	bcf	3,7	;select IRP bank0
  3380     1E3C  0800               	movf	0,w
  3381     1E3D  00F8               	movwf	??_read_prec_or_width
  3382     1E3E  0A84               	incf	4,f
  3383     1E3F  0800               	movf	0,w
  3384     1E40  00F9               	movwf	??_read_prec_or_width+1
  3385     1E41  0879               	movf	??_read_prec_or_width+1,w
  3386     1E42  1283               	bcf	3,5	;RP0=0, select bank0
  3387     1E43  1303               	bcf	3,6	;RP1=0, select bank0
  3388     1E44  00FF               	movwf	btemp+1
  3389     1E45  0878               	movf	??_read_prec_or_width,w
  3390     1E46  0084               	movwf	4
  3391     1E47  160A  158A  2000  160A  158A  	fcall	stringtab
  3392     1E4C  3ED0               	addlw	208
  3393     1E4D  00FA               	movwf	read_prec_or_width@c
  3394     1E4E  300A               	movlw	10
  3395     1E4F  027A               	subwf	read_prec_or_width@c,w
  3396     1E50  1C03               	skipc
  3397     1E51  2E53               	goto	u3291
  3398     1E52  2E54               	goto	u3290
  3399     1E53                     u3291:
  3400     1E53  2E1C               	goto	l2506
  3401     1E54                     u3290:
  3402     1E54                     l2512:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3405     1E54  087C               	movf	read_prec_or_width@n+1,w
  3406     1E55  00F7               	movwf	?_read_prec_or_width+1
  3407     1E56  087B               	movf	read_prec_or_width@n,w
  3408     1E57  00F6               	movwf	?_read_prec_or_width
  3409     1E58                     l869:
  3410     1E58  0008               	return
  3411     1E59                     __end_of_read_prec_or_width:
  3412                           
  3413                           	psect	text5
  3414     0003                     __ptext5:	
  3415 ;; *************** function ___wmul *****************
  3416 ;; Defined at:
  3417 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  multiplier      2    0[COMMON] unsigned int 
  3420 ;;  multiplicand    2    2[COMMON] unsigned int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  product         2    4[COMMON] unsigned int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2    0[COMMON] unsigned int 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         4       0       0       0       0
  3433 ;;      Locals:         2       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0
  3435 ;;      Totals:         6       0       0       0       0
  3436 ;;Total ram usage:        6 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_read_prec_or_width
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445     0003                     ___wmul:	
  3446                           ;psect for function ___wmul
  3447                           
  3448     0003                     l2334:	
  3449                           ;incstack = 0
  3450                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3451                           
  3452     0003  01F4               	clrf	___wmul@product
  3453     0004  01F5               	clrf	___wmul@product+1
  3454     0005                     l2336:
  3455     0005  1C70               	btfss	___wmul@multiplier,0
  3456     0006  2808               	goto	u2891
  3457     0007  2809               	goto	u2890
  3458     0008                     u2891:
  3459     0008  280F               	goto	l310
  3460     0009                     u2890:
  3461     0009                     l2338:
  3462     0009  0872               	movf	___wmul@multiplicand,w
  3463     000A  07F4               	addwf	___wmul@product,f
  3464     000B  1803               	skipnc
  3465     000C  0AF5               	incf	___wmul@product+1,f
  3466     000D  0873               	movf	___wmul@multiplicand+1,w
  3467     000E  07F5               	addwf	___wmul@product+1,f
  3468     000F                     l310:
  3469     000F  3001               	movlw	1
  3470     0010                     u2905:
  3471     0010  1003               	clrc
  3472     0011  0DF2               	rlf	___wmul@multiplicand,f
  3473     0012  0DF3               	rlf	___wmul@multiplicand+1,f
  3474     0013  3EFF               	addlw	-1
  3475     0014  1D03               	skipz
  3476     0015  2810               	goto	u2905
  3477     0016                     l2340:
  3478     0016  3001               	movlw	1
  3479     0017                     u2915:
  3480     0017  1003               	clrc
  3481     0018  0CF1               	rrf	___wmul@multiplier+1,f
  3482     0019  0CF0               	rrf	___wmul@multiplier,f
  3483     001A  3EFF               	addlw	-1
  3484     001B  1D03               	skipz
  3485     001C  2817               	goto	u2915
  3486     001D                     l2342:
  3487     001D  0870               	movf	___wmul@multiplier,w
  3488     001E  0471               	iorwf	___wmul@multiplier+1,w
  3489     001F  1D03               	btfss	3,2
  3490     0020  2822               	goto	u2921
  3491     0021  2823               	goto	u2920
  3492     0022                     u2921:
  3493     0022  2805               	goto	l2336
  3494     0023                     u2920:
  3495     0023                     l2344:
  3496     0023  0875               	movf	___wmul@product+1,w
  3497     0024  00F1               	movwf	?___wmul+1
  3498     0025  0874               	movf	___wmul@product,w
  3499     0026  00F0               	movwf	?___wmul
  3500     0027                     l312:
  3501     0027  0008               	return
  3502     0028                     __end_of___wmul:
  3503                           
  3504                           	psect	text6
  3505     13B7                     __ptext6:	
  3506 ;; *************** function _dtoa *****************
  3507 ;; Defined at:
  3508 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  3511 ;;		 -> snprintf@f(11), 
  3512 ;;  d               2   17[BANK0 ] int 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  i               2   25[BANK0 ] int 
  3515 ;;  w               2   22[BANK0 ] int 
  3516 ;;  s               1   24[BANK0 ] unsigned char 
  3517 ;;  p               1   21[BANK0 ] _Bool 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  2   15[BANK0 ] int 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         0       4       0       0       0
  3528 ;;      Locals:         0       8       0       0       0
  3529 ;;      Temps:          0       0       0       0       0
  3530 ;;      Totals:         0      12       0       0       0
  3531 ;;Total ram usage:       12 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 4
  3534 ;; This function calls:
  3535 ;;		___awdiv
  3536 ;;		___awmod
  3537 ;;		_abs
  3538 ;;		_pad
  3539 ;; This function is called by:
  3540 ;;		_vfpfcnvrt
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544     13B7                     _dtoa:	
  3545                           ;psect for function _dtoa
  3546                           
  3547     13B7                     l2452:	
  3548                           ;incstack = 0
  3549                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3550                           
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
  3553     13B7  3001               	movlw	1
  3554     13B8  1283               	bcf	3,5	;RP0=0, select bank0
  3555     13B9  1303               	bcf	3,6	;RP1=0, select bank0
  3556     13BA  00B5               	movwf	dtoa@p
  3557     13BB                     l2454:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  3560     13BB  1BB2               	btfsc	dtoa@d+1,7
  3561     13BC  2BBE               	goto	u3181
  3562     13BD  2BC0               	goto	u3180
  3563     13BE                     u3181:
  3564     13BE  3001               	movlw	1
  3565     13BF  2BC1               	goto	u3190
  3566     13C0                     u3180:
  3567     13C0  3000               	movlw	0
  3568     13C1                     u3190:
  3569     13C1  00B8               	movwf	dtoa@s
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  3572     13C2  1683               	bsf	3,5	;RP0=1, select bank1
  3573     13C3  1303               	bcf	3,6	;RP1=0, select bank1
  3574     13C4  0851               	movf	(_width+1)^(0+128),w
  3575     13C5  1283               	bcf	3,5	;RP0=0, select bank0
  3576     13C6  1303               	bcf	3,6	;RP1=0, select bank0
  3577     13C7  00B7               	movwf	dtoa@w+1
  3578     13C8  1683               	bsf	3,5	;RP0=1, select bank1
  3579     13C9  1303               	bcf	3,6	;RP1=0, select bank1
  3580     13CA  0850               	movf	_width^(0+128),w
  3581     13CB  1283               	bcf	3,5	;RP0=0, select bank0
  3582     13CC  1303               	bcf	3,6	;RP1=0, select bank0
  3583     13CD  00B6               	movwf	dtoa@w
  3584     13CE                     l2456:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  3587     13CE  0838               	movf	dtoa@s,w
  3588     13CF  1903               	btfsc	3,2
  3589     13D0  2BD2               	goto	u3201
  3590     13D1  2BD3               	goto	u3200
  3591     13D2                     u3201:
  3592     13D2  2BE9               	goto	l848
  3593     13D3                     u3200:
  3594     13D3                     l2458:
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  3597     13D3  30FF               	movlw	255
  3598     13D4  07B6               	addwf	dtoa@w,f
  3599     13D5  1803               	skipnc
  3600     13D6  0AB7               	incf	dtoa@w+1,f
  3601     13D7  30FF               	movlw	255
  3602     13D8  07B7               	addwf	dtoa@w+1,f
  3603     13D9                     l2460:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  3606     13D9  0838               	movf	dtoa@s,w
  3607     13DA  1D03               	btfss	3,2
  3608     13DB  2BDD               	goto	u3211
  3609     13DC  2BDE               	goto	u3210
  3610     13DD                     u3211:
  3611     13DD  2BE3               	goto	l2464
  3612     13DE                     u3210:
  3613     13DE                     l2462:
  3614     13DE  302B               	movlw	43
  3615     13DF  00B3               	movwf	_dtoa$738
  3616     13E0  3000               	movlw	0
  3617     13E1  00B4               	movwf	_dtoa$738+1
  3618     13E2  2BE7               	goto	l852
  3619     13E3                     l2464:
  3620     13E3  302D               	movlw	45
  3621     13E4  00B3               	movwf	_dtoa$738
  3622     13E5  3000               	movlw	0
  3623     13E6  00B4               	movwf	_dtoa$738+1
  3624     13E7                     l852:
  3625     13E7  0833               	movf	_dtoa$738,w
  3626     13E8  00B8               	movwf	dtoa@s
  3627     13E9                     l848:	
  3628                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  3629                           
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  3632     13E9  301F               	movlw	31
  3633     13EA  00B9               	movwf	dtoa@i
  3634     13EB  3000               	movlw	0
  3635     13EC  00BA               	movwf	dtoa@i+1
  3636     13ED                     l2466:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  3639     13ED  1283               	bcf	3,5	;RP0=0, select bank2
  3640     13EE  1703               	bsf	3,6	;RP1=1, select bank2
  3641     13EF  01AF               	clrf	(_dbuf^(0+256)+31)
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3644     13F0  2C31               	goto	l2478
  3645     13F1                     l2468:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  3648     13F1  30FF               	movlw	255
  3649     13F2  1283               	bcf	3,5	;RP0=0, select bank0
  3650     13F3  07B9               	addwf	dtoa@i,f
  3651     13F4  1803               	skipnc
  3652     13F5  0ABA               	incf	dtoa@i+1,f
  3653     13F6  30FF               	movlw	255
  3654     13F7  07BA               	addwf	dtoa@i+1,f
  3655     13F8                     l2470:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3658     13F8  0839               	movf	dtoa@i,w
  3659     13F9  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3660     13FA  0084               	movwf	4
  3661     13FB  300A               	movlw	10
  3662     13FC  00F0               	movwf	___awmod@divisor
  3663     13FD  3000               	movlw	0
  3664     13FE  00F1               	movwf	___awmod@divisor+1
  3665     13FF  0832               	movf	dtoa@d+1,w
  3666     1400  00F3               	movwf	___awmod@dividend+1
  3667     1401  0831               	movf	dtoa@d,w
  3668     1402  00F2               	movwf	___awmod@dividend
  3669     1403  160A  158A  24C8  160A  118A  	fcall	___awmod
  3670     1408  0871               	movf	?___awmod+1,w
  3671     1409  00F7               	movwf	abs@a+1
  3672     140A  0870               	movf	?___awmod,w
  3673     140B  00F6               	movwf	abs@a
  3674     140C  160A  158A  2283  160A  118A  	fcall	_abs
  3675     1411  0876               	movf	?_abs,w
  3676     1412  3E30               	addlw	48
  3677     1413  1783               	bsf	3,7	;select IRP bank2
  3678     1414  0080               	movwf	0
  3679     1415                     l2472:
  3680                           
  3681                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  3682     1415  1283               	bcf	3,5	;RP0=0, select bank0
  3683     1416  1303               	bcf	3,6	;RP1=0, select bank0
  3684     1417  01B5               	clrf	dtoa@p
  3685     1418                     l2474:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  3688     1418  30FF               	movlw	255
  3689     1419  07B6               	addwf	dtoa@w,f
  3690     141A  1803               	skipnc
  3691     141B  0AB7               	incf	dtoa@w+1,f
  3692     141C  30FF               	movlw	255
  3693     141D  07B7               	addwf	dtoa@w+1,f
  3694     141E                     l2476:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  3697     141E  300A               	movlw	10
  3698     141F  00F0               	movwf	___awdiv@divisor
  3699     1420  3000               	movlw	0
  3700     1421  00F1               	movwf	___awdiv@divisor+1
  3701     1422  0832               	movf	dtoa@d+1,w
  3702     1423  00F3               	movwf	___awdiv@dividend+1
  3703     1424  0831               	movf	dtoa@d,w
  3704     1425  00F2               	movwf	___awdiv@dividend
  3705     1426  160A  158A  251F  160A  118A  	fcall	___awdiv
  3706     142B  0871               	movf	?___awdiv+1,w
  3707     142C  1283               	bcf	3,5	;RP0=0, select bank0
  3708     142D  1303               	bcf	3,6	;RP1=0, select bank0
  3709     142E  00B2               	movwf	dtoa@d+1
  3710     142F  0870               	movf	?___awdiv,w
  3711     1430  00B1               	movwf	dtoa@d
  3712     1431                     l2478:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3715     1431  1303               	bcf	3,6	;RP1=0, select bank0
  3716     1432  083A               	movf	dtoa@i+1,w
  3717     1433  3A80               	xorlw	128
  3718     1434  00FF               	movwf	btemp+1
  3719     1435  3080               	movlw	128
  3720     1436  027F               	subwf	btemp+1,w
  3721     1437  1D03               	skipz
  3722     1438  2C3B               	goto	u3225
  3723     1439  3001               	movlw	1
  3724     143A  0239               	subwf	dtoa@i,w
  3725     143B                     u3225:
  3726     143B  1C03               	skipc
  3727     143C  2C3E               	goto	u3221
  3728     143D  2C3F               	goto	u3220
  3729     143E                     u3221:
  3730     143E  2C5F               	goto	l2488
  3731     143F                     u3220:
  3732     143F                     l2480:
  3733     143F  1283               	bcf	3,5	;RP0=0, select bank0
  3734     1440  1303               	bcf	3,6	;RP1=0, select bank0
  3735     1441  0831               	movf	dtoa@d,w
  3736     1442  0432               	iorwf	dtoa@d+1,w
  3737     1443  1D03               	btfss	3,2
  3738     1444  2C46               	goto	u3231
  3739     1445  2C47               	goto	u3230
  3740     1446                     u3231:
  3741     1446  2BF1               	goto	l2468
  3742     1447                     u3230:
  3743     1447                     l2482:
  3744     1447  0835               	movf	dtoa@p,w
  3745     1448  1D03               	btfss	3,2
  3746     1449  2C4B               	goto	u3241
  3747     144A  2C4C               	goto	u3240
  3748     144B                     u3241:
  3749     144B  2BF1               	goto	l2468
  3750     144C                     u3240:
  3751     144C                     l2484:
  3752     144C  0837               	movf	dtoa@w+1,w
  3753     144D  3A80               	xorlw	128
  3754     144E  00FF               	movwf	btemp+1
  3755     144F  3080               	movlw	128
  3756     1450  027F               	subwf	btemp+1,w
  3757     1451  1D03               	skipz
  3758     1452  2C55               	goto	u3255
  3759     1453  3001               	movlw	1
  3760     1454  0236               	subwf	dtoa@w,w
  3761     1455                     u3255:
  3762     1455  1C03               	skipc
  3763     1456  2C58               	goto	u3251
  3764     1457  2C59               	goto	u3250
  3765     1458                     u3251:
  3766     1458  2C5F               	goto	l2488
  3767     1459                     u3250:
  3768     1459                     l2486:
  3769     1459  1683               	bsf	3,5	;RP0=1, select bank1
  3770     145A  1303               	bcf	3,6	;RP1=0, select bank1
  3771     145B  18D6               	btfsc	_flags^(0+128),1
  3772     145C  2C5E               	goto	u3261
  3773     145D  2C5F               	goto	u3260
  3774     145E                     u3261:
  3775     145E  2BF1               	goto	l2468
  3776     145F                     u3260:
  3777     145F                     l2488:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  3780     145F  1283               	bcf	3,5	;RP0=0, select bank0
  3781     1460  1303               	bcf	3,6	;RP1=0, select bank0
  3782     1461  0838               	movf	dtoa@s,w
  3783     1462  1903               	btfsc	3,2
  3784     1463  2C65               	goto	u3271
  3785     1464  2C66               	goto	u3270
  3786     1465                     u3271:
  3787     1465  2C72               	goto	l2494
  3788     1466                     u3270:
  3789     1466                     l2490:
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  3792     1466  30FF               	movlw	255
  3793     1467  07B9               	addwf	dtoa@i,f
  3794     1468  1803               	skipnc
  3795     1469  0ABA               	incf	dtoa@i+1,f
  3796     146A  30FF               	movlw	255
  3797     146B  07BA               	addwf	dtoa@i+1,f
  3798     146C                     l2492:
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  3801     146C  0839               	movf	dtoa@i,w
  3802     146D  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3803     146E  0084               	movwf	4
  3804     146F  0838               	movf	dtoa@s,w
  3805     1470  1783               	bsf	3,7	;select IRP bank2
  3806     1471  0080               	movwf	0
  3807     1472                     l2494:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
  3810     1472  082F               	movf	dtoa@fp,w
  3811     1473  00A8               	movwf	pad@fp
  3812     1474  0830               	movf	dtoa@fp+1,w
  3813     1475  00A9               	movwf	pad@fp+1
  3814     1476  0839               	movf	dtoa@i,w
  3815     1477  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3816     1478  00AA               	movwf	pad@buf
  3817     1479  0837               	movf	dtoa@w+1,w
  3818     147A  00AC               	movwf	pad@p+1
  3819     147B  0836               	movf	dtoa@w,w
  3820     147C  00AB               	movwf	pad@p
  3821     147D  160A  158A  2582  160A  118A  	fcall	_pad
  3822     1482  1283               	bcf	3,5	;RP0=0, select bank0
  3823     1483  1303               	bcf	3,6	;RP1=0, select bank0
  3824     1484  0829               	movf	?_pad+1,w
  3825     1485  00B0               	movwf	?_dtoa+1
  3826     1486  0828               	movf	?_pad,w
  3827     1487  00AF               	movwf	?_dtoa
  3828     1488                     l861:
  3829     1488  0008               	return
  3830     1489                     __end_of_dtoa:
  3831                           
  3832                           	psect	text7
  3833     1D82                     __ptext7:	
  3834 ;; *************** function _pad *****************
  3835 ;; Defined at:
  3836 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  3839 ;;		 -> snprintf@f(11), 
  3840 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  3841 ;;		 -> dbuf(32), 
  3842 ;;  p               2   11[BANK0 ] int 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  i               2   13[BANK0 ] int 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  2    8[BANK0 ] int 
  3847 ;; Registers used:
  3848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3854 ;;      Params:         0       5       0       0       0
  3855 ;;      Locals:         0       2       0       0       0
  3856 ;;      Temps:          1       0       0       0       0
  3857 ;;      Totals:         1       7       0       0       0
  3858 ;;Total ram usage:        8 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; Hardware stack levels required when called: 3
  3861 ;; This function calls:
  3862 ;;		_fputc
  3863 ;;		_fputs
  3864 ;;		_strlen
  3865 ;; This function is called by:
  3866 ;;		_dtoa
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870     1D82                     _pad:	
  3871                           ;psect for function _pad
  3872                           
  3873     1D82                     l2430:	
  3874                           ;incstack = 0
  3875                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3876                           
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
  3879     1D82  1683               	bsf	3,5	;RP0=1, select bank1
  3880     1D83  1303               	bcf	3,6	;RP1=0, select bank1
  3881     1D84  1C56               	btfss	_flags^(0+128),0
  3882     1D85  2D87               	goto	u3121
  3883     1D86  2D88               	goto	u3120
  3884     1D87                     u3121:
  3885     1D87  2D95               	goto	l2434
  3886     1D88                     u3120:
  3887     1D88                     l2432:
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3890     1D88  1283               	bcf	3,5	;RP0=0, select bank0
  3891     1D89  1303               	bcf	3,6	;RP1=0, select bank0
  3892     1D8A  082A               	movf	pad@buf,w
  3893     1D8B  00A0               	movwf	fputs@s
  3894     1D8C  0828               	movf	pad@fp,w
  3895     1D8D  00A1               	movwf	fputs@fp
  3896     1D8E  0829               	movf	pad@fp+1,w
  3897     1D8F  00A2               	movwf	fputs@fp+1
  3898     1D90  160A  158A  239D  160A  158A  	fcall	_fputs
  3899     1D95                     l2434:
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3902     1D95  1283               	bcf	3,5	;RP0=0, select bank0
  3903     1D96  1303               	bcf	3,6	;RP1=0, select bank0
  3904     1D97  1FAC               	btfss	pad@p+1,7
  3905     1D98  2D9A               	goto	u3131
  3906     1D99  2D9B               	goto	u3130
  3907     1D9A                     u3131:
  3908     1D9A  2D9D               	goto	l840
  3909     1D9B                     u3130:
  3910     1D9B                     l2436:
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3913     1D9B  01AB               	clrf	pad@p
  3914     1D9C  01AC               	clrf	pad@p+1
  3915     1D9D                     l840:	
  3916                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  3917                           
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3920     1D9D  01AD               	clrf	pad@i
  3921     1D9E  01AE               	clrf	pad@i+1
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3924     1D9F  2DB7               	goto	l2442
  3925     1DA0                     l2438:
  3926                           
  3927                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3928     1DA0  3020               	movlw	32
  3929     1DA1  00F0               	movwf	fputc@c
  3930     1DA2  3000               	movlw	0
  3931     1DA3  00F1               	movwf	fputc@c+1
  3932     1DA4  1283               	bcf	3,5	;RP0=0, select bank0
  3933     1DA5  1303               	bcf	3,6	;RP1=0, select bank0
  3934     1DA6  0828               	movf	pad@fp,w
  3935     1DA7  00F2               	movwf	fputc@fp
  3936     1DA8  0829               	movf	pad@fp+1,w
  3937     1DA9  00F3               	movwf	fputc@fp+1
  3938     1DAA  160A  118A  21C7  160A  158A  	fcall	_fputc
  3939     1DAF                     l2440:
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3942     1DAF  3001               	movlw	1
  3943     1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  3944     1DB1  1303               	bcf	3,6	;RP1=0, select bank0
  3945     1DB2  07AD               	addwf	pad@i,f
  3946     1DB3  1803               	skipnc
  3947     1DB4  0AAE               	incf	pad@i+1,f
  3948     1DB5  3000               	movlw	0
  3949     1DB6  07AE               	addwf	pad@i+1,f
  3950     1DB7                     l2442:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3953     1DB7  082E               	movf	pad@i+1,w
  3954     1DB8  3A80               	xorlw	128
  3955     1DB9  00FD               	movwf	??_pad
  3956     1DBA  082C               	movf	pad@p+1,w
  3957     1DBB  3A80               	xorlw	128
  3958     1DBC  027D               	subwf	??_pad,w
  3959     1DBD  1D03               	skipz
  3960     1DBE  2DC1               	goto	u3145
  3961     1DBF  082B               	movf	pad@p,w
  3962     1DC0  022D               	subwf	pad@i,w
  3963     1DC1                     u3145:
  3964     1DC1  1C03               	skipc
  3965     1DC2  2DC4               	goto	u3141
  3966     1DC3  2DC5               	goto	u3140
  3967     1DC4                     u3141:
  3968     1DC4  2DA0               	goto	l2438
  3969     1DC5                     u3140:
  3970     1DC5                     l843:
  3971                           
  3972                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3973     1DC5  1683               	bsf	3,5	;RP0=1, select bank1
  3974     1DC6  1303               	bcf	3,6	;RP1=0, select bank1
  3975     1DC7  1856               	btfsc	_flags^(0+128),0
  3976     1DC8  2DCA               	goto	u3151
  3977     1DC9  2DCB               	goto	u3150
  3978     1DCA                     u3151:
  3979     1DCA  2DD8               	goto	l844
  3980     1DCB                     u3150:
  3981     1DCB                     l2444:
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3984     1DCB  1283               	bcf	3,5	;RP0=0, select bank0
  3985     1DCC  1303               	bcf	3,6	;RP1=0, select bank0
  3986     1DCD  082A               	movf	pad@buf,w
  3987     1DCE  00A0               	movwf	fputs@s
  3988     1DCF  0828               	movf	pad@fp,w
  3989     1DD0  00A1               	movwf	fputs@fp
  3990     1DD1  0829               	movf	pad@fp+1,w
  3991     1DD2  00A2               	movwf	fputs@fp+1
  3992     1DD3  160A  158A  239D  160A  158A  	fcall	_fputs
  3993     1DD8                     l844:	
  3994                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 220:     }
  3995                           
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
  3998     1DD8  1283               	bcf	3,5	;RP0=0, select bank0
  3999     1DD9  1303               	bcf	3,6	;RP1=0, select bank0
  4000     1DDA  082A               	movf	pad@buf,w
  4001     1DDB  00F0               	movwf	strlen@s
  4002     1DDC  160A  158A  22B9  160A  158A  	fcall	_strlen
  4003     1DE1  1283               	bcf	3,5	;RP0=0, select bank0
  4004     1DE2  1303               	bcf	3,6	;RP1=0, select bank0
  4005     1DE3  082B               	movf	pad@p,w
  4006     1DE4  0770               	addwf	?_strlen,w
  4007     1DE5  00A8               	movwf	?_pad
  4008     1DE6  082C               	movf	pad@p+1,w
  4009     1DE7  1803               	skipnc
  4010     1DE8  0A2C               	incf	pad@p+1,w
  4011     1DE9  0771               	addwf	?_strlen+1,w
  4012     1DEA  00A9               	movwf	?_pad+1
  4013     1DEB                     l845:
  4014     1DEB  0008               	return
  4015     1DEC                     __end_of_pad:
  4016                           
  4017                           	psect	text8
  4018     1AB9                     __ptext8:	
  4019 ;; *************** function _strlen *****************
  4020 ;; Defined at:
  4021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  s               1    0[COMMON] PTR const unsigned char 
  4024 ;;		 -> dbuf(32), 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  a               1    2[COMMON] PTR const unsigned char 
  4027 ;;		 -> dbuf(32), 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  2    0[COMMON] unsigned int 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         2       0       0       0       0
  4038 ;;      Locals:         1       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0
  4040 ;;      Totals:         3       0       0       0       0
  4041 ;;Total ram usage:        3 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_pad
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050     1AB9                     _strlen:	
  4051                           ;psect for function _strlen
  4052                           
  4053     1AB9                     l2316:	
  4054                           ;incstack = 0
  4055                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  4056                           
  4057     1AB9  0870               	movf	strlen@s,w
  4058     1ABA  00F2               	movwf	strlen@a
  4059     1ABB  2ABE               	goto	l2320
  4060     1ABC                     l2318:
  4061     1ABC  3001               	movlw	1
  4062     1ABD  07F0               	addwf	strlen@s,f
  4063     1ABE                     l2320:
  4064     1ABE  0870               	movf	strlen@s,w
  4065     1ABF  0084               	movwf	4
  4066     1AC0  1783               	bsf	3,7	;select IRP bank2
  4067     1AC1  0800               	movf	0,w
  4068     1AC2  1D03               	btfss	3,2
  4069     1AC3  2AC5               	goto	u2871
  4070     1AC4  2AC6               	goto	u2870
  4071     1AC5                     u2871:
  4072     1AC5  2ABC               	goto	l2318
  4073     1AC6                     u2870:
  4074     1AC6                     l2322:
  4075     1AC6  0872               	movf	strlen@a,w
  4076     1AC7  0270               	subwf	strlen@s,w
  4077     1AC8  00F0               	movwf	?_strlen
  4078     1AC9  01F1               	clrf	?_strlen+1
  4079     1ACA  1BF0               	btfsc	?_strlen,7
  4080     1ACB  03F1               	decf	?_strlen+1,f
  4081     1ACC                     l922:
  4082     1ACC  0008               	return
  4083     1ACD                     __end_of_strlen:
  4084                           
  4085                           	psect	text9
  4086     1B9D                     __ptext9:	
  4087 ;; *************** function _fputs *****************
  4088 ;; Defined at:
  4089 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  4092 ;;		 -> dbuf(32), 
  4093 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  4094 ;;		 -> snprintf@f(11), 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  i               2    6[BANK0 ] int 
  4097 ;;  c               1    5[BANK0 ] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2    0[BANK0 ] int 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4107 ;;      Params:         0       3       0       0       0
  4108 ;;      Locals:         0       3       0       0       0
  4109 ;;      Temps:          0       2       0       0       0
  4110 ;;      Totals:         0       8       0       0       0
  4111 ;;Total ram usage:        8 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 2
  4114 ;; This function calls:
  4115 ;;		_fputc
  4116 ;; This function is called by:
  4117 ;;		_pad
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121     1B9D                     _fputs:	
  4122                           ;psect for function _fputs
  4123                           
  4124     1B9D                     l2308:	
  4125                           ;incstack = 0
  4126                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4127                           
  4128     1B9D  1283               	bcf	3,5	;RP0=0, select bank0
  4129     1B9E  1303               	bcf	3,6	;RP1=0, select bank0
  4130     1B9F  01A6               	clrf	fputs@i
  4131     1BA0  01A7               	clrf	fputs@i+1
  4132     1BA1  2BBA               	goto	l2314
  4133     1BA2                     l2310:
  4134     1BA2  0825               	movf	fputs@c,w
  4135     1BA3  00A3               	movwf	??_fputs
  4136     1BA4  01A4               	clrf	??_fputs+1
  4137     1BA5  0823               	movf	??_fputs,w
  4138     1BA6  00F0               	movwf	fputc@c
  4139     1BA7  0824               	movf	??_fputs+1,w
  4140     1BA8  00F1               	movwf	fputc@c+1
  4141     1BA9  0821               	movf	fputs@fp,w
  4142     1BAA  00F2               	movwf	fputc@fp
  4143     1BAB  0822               	movf	fputs@fp+1,w
  4144     1BAC  00F3               	movwf	fputc@fp+1
  4145     1BAD  160A  118A  21C7  160A  158A  	fcall	_fputc
  4146     1BB2                     l2312:
  4147     1BB2  3001               	movlw	1
  4148     1BB3  1283               	bcf	3,5	;RP0=0, select bank0
  4149     1BB4  1303               	bcf	3,6	;RP1=0, select bank0
  4150     1BB5  07A6               	addwf	fputs@i,f
  4151     1BB6  1803               	skipnc
  4152     1BB7  0AA7               	incf	fputs@i+1,f
  4153     1BB8  3000               	movlw	0
  4154     1BB9  07A7               	addwf	fputs@i+1,f
  4155     1BBA                     l2314:
  4156     1BBA  0826               	movf	fputs@i,w
  4157     1BBB  0720               	addwf	fputs@s,w
  4158     1BBC  00A3               	movwf	??_fputs
  4159     1BBD  0823               	movf	??_fputs,w
  4160     1BBE  0084               	movwf	4
  4161     1BBF  1783               	bsf	3,7	;select IRP bank2
  4162     1BC0  0800               	movf	0,w
  4163     1BC1  00A5               	movwf	fputs@c
  4164     1BC2  0825               	movf	fputs@c,w
  4165     1BC3  1D03               	btfss	3,2
  4166     1BC4  2BC6               	goto	u2861
  4167     1BC5  2BC7               	goto	u2860
  4168     1BC6                     u2861:
  4169     1BC6  2BA2               	goto	l2310
  4170     1BC7                     u2860:
  4171     1BC7                     l913:
  4172     1BC7  0008               	return
  4173     1BC8                     __end_of_fputs:
  4174                           
  4175                           	psect	text10
  4176     11C7                     __ptext10:	
  4177 ;; *************** function _fputc *****************
  4178 ;; Defined at:
  4179 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  c               2    0[COMMON] int 
  4182 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  4183 ;;		 -> snprintf@f(11), 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  2    0[COMMON] int 
  4188 ;; Registers used:
  4189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         4       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          9       0       0       0       0
  4198 ;;      Totals:        13       0       0       0       0
  4199 ;;Total ram usage:       13 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 1
  4202 ;; This function calls:
  4203 ;;		_putch
  4204 ;; This function is called by:
  4205 ;;		_pad
  4206 ;;		_vfpfcnvrt
  4207 ;;		_fputs
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211     11C7                     _fputc:	
  4212                           ;psect for function _fputc
  4213                           
  4214     11C7                     l2294:	
  4215                           ;incstack = 0
  4216                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4217                           
  4218     11C7  0872               	movf	fputc@fp,w
  4219     11C8  0473               	iorwf	fputc@fp+1,w
  4220     11C9  1903               	btfsc	3,2
  4221     11CA  29CC               	goto	u2811
  4222     11CB  29CD               	goto	u2810
  4223     11CC                     u2811:
  4224     11CC  29D3               	goto	l2298
  4225     11CD                     u2810:
  4226     11CD                     l2296:
  4227     11CD  0872               	movf	fputc@fp,w
  4228     11CE  0473               	iorwf	fputc@fp+1,w
  4229     11CF  1D03               	btfss	3,2
  4230     11D0  29D2               	goto	u2821
  4231     11D1  29D3               	goto	u2820
  4232     11D2                     u2821:
  4233     11D2  29DA               	goto	l2300
  4234     11D3                     u2820:
  4235     11D3                     l2298:
  4236     11D3  0870               	movf	fputc@c,w
  4237     11D4  120A  158A  2000  160A  118A  	fcall	_putch
  4238     11D9  2A60               	goto	l905
  4239     11DA                     l2300:
  4240     11DA  0872               	movf	fputc@fp,w
  4241     11DB  3E09               	addlw	9
  4242     11DC  00F4               	movwf	??_fputc
  4243     11DD  0873               	movf	fputc@fp+1,w
  4244     11DE  1803               	skipnc
  4245     11DF  3E01               	addlw	1
  4246     11E0  3E00               	addlw	0
  4247     11E1  00F5               	movwf	??_fputc+1
  4248     11E2  0874               	movf	??_fputc,w
  4249     11E3  0084               	movwf	4
  4250     11E4  1783               	bsf	3,7
  4251     11E5  1C75               	btfss	??_fputc+1,0
  4252     11E6  1383               	bcf	3,7
  4253     11E7  0800               	movf	0,w
  4254     11E8  00F6               	movwf	??_fputc+2
  4255     11E9  0A84               	incf	4,f
  4256     11EA  0800               	movf	0,w
  4257     11EB  00F7               	movwf	??_fputc+3
  4258     11EC  0876               	movf	??_fputc+2,w
  4259     11ED  0477               	iorwf	??_fputc+3,w
  4260     11EE  1903               	btfsc	3,2
  4261     11EF  29F1               	goto	u2831
  4262     11F0  29F2               	goto	u2830
  4263     11F1                     u2831:
  4264     11F1  2A24               	goto	l2304
  4265     11F2                     u2830:
  4266     11F2                     l2302:
  4267     11F2  0872               	movf	fputc@fp,w
  4268     11F3  3E09               	addlw	9
  4269     11F4  00F4               	movwf	??_fputc
  4270     11F5  0873               	movf	fputc@fp+1,w
  4271     11F6  1803               	skipnc
  4272     11F7  3E01               	addlw	1
  4273     11F8  3E00               	addlw	0
  4274     11F9  00F5               	movwf	??_fputc+1
  4275     11FA  0874               	movf	??_fputc,w
  4276     11FB  0084               	movwf	4
  4277     11FC  1783               	bsf	3,7
  4278     11FD  1C75               	btfss	??_fputc+1,0
  4279     11FE  1383               	bcf	3,7
  4280     11FF  0800               	movf	0,w
  4281     1200  00F6               	movwf	??_fputc+2
  4282     1201  0A84               	incf	4,f
  4283     1202  0800               	movf	0,w
  4284     1203  00F7               	movwf	??_fputc+3
  4285     1204  0872               	movf	fputc@fp,w
  4286     1205  3E02               	addlw	2
  4287     1206  00F8               	movwf	??_fputc+4
  4288     1207  0873               	movf	fputc@fp+1,w
  4289     1208  1803               	skipnc
  4290     1209  3E01               	addlw	1
  4291     120A  3E00               	addlw	0
  4292     120B  00F9               	movwf	??_fputc+5
  4293     120C  0878               	movf	??_fputc+4,w
  4294     120D  0084               	movwf	4
  4295     120E  1783               	bsf	3,7
  4296     120F  1C79               	btfss	??_fputc+5,0
  4297     1210  1383               	bcf	3,7
  4298     1211  0800               	movf	0,w
  4299     1212  00FA               	movwf	??_fputc+6
  4300     1213  0A84               	incf	4,f
  4301     1214  0800               	movf	0,w
  4302     1215  00FB               	movwf	??_fputc+7
  4303     1216  087B               	movf	??_fputc+7,w
  4304     1217  3A80               	xorlw	128
  4305     1218  00FC               	movwf	??_fputc+8
  4306     1219  0877               	movf	??_fputc+3,w
  4307     121A  3A80               	xorlw	128
  4308     121B  027C               	subwf	??_fputc+8,w
  4309     121C  1D03               	skipz
  4310     121D  2A20               	goto	u2845
  4311     121E  0876               	movf	??_fputc+2,w
  4312     121F  027A               	subwf	??_fputc+6,w
  4313     1220                     u2845:
  4314     1220  1803               	skipnc
  4315     1221  2A23               	goto	u2841
  4316     1222  2A24               	goto	u2840
  4317     1223                     u2841:
  4318     1223  2A60               	goto	l905
  4319     1224                     u2840:
  4320     1224                     l2304:
  4321     1224  0872               	movf	fputc@fp,w
  4322     1225  0084               	movwf	4
  4323     1226  1783               	bsf	3,7
  4324     1227  1C73               	btfss	fputc@fp+1,0
  4325     1228  1383               	bcf	3,7
  4326     1229  0800               	movf	0,w
  4327     122A  00F4               	movwf	??_fputc
  4328     122B  0A84               	incf	4,f
  4329     122C  0800               	movf	0,w
  4330     122D  00F5               	movwf	??_fputc+1
  4331     122E  0872               	movf	fputc@fp,w
  4332     122F  3E02               	addlw	2
  4333     1230  00F6               	movwf	??_fputc+2
  4334     1231  0873               	movf	fputc@fp+1,w
  4335     1232  1803               	skipnc
  4336     1233  3E01               	addlw	1
  4337     1234  3E00               	addlw	0
  4338     1235  00F7               	movwf	??_fputc+3
  4339     1236  0876               	movf	??_fputc+2,w
  4340     1237  0084               	movwf	4
  4341     1238  1783               	bsf	3,7
  4342     1239  1C77               	btfss	??_fputc+3,0
  4343     123A  1383               	bcf	3,7
  4344     123B  0800               	movf	0,w
  4345     123C  0774               	addwf	??_fputc,w
  4346     123D  00F9               	movwf	??_fputc+5
  4347     123E  0875               	movf	??_fputc+1,w
  4348     123F  00F8               	movwf	??_fputc+4
  4349     1240  1803               	skipnc
  4350     1241  0AF8               	incf	??_fputc+4,f
  4351     1242  1F80               	btfss	0,7
  4352     1243  2A45               	goto	u2850
  4353     1244  03F8               	decf	??_fputc+4,f
  4354     1245                     u2850:
  4355     1245  0878               	movf	??_fputc+4,w
  4356     1246  00FA               	movwf	??_fputc+6
  4357     1247  0879               	movf	??_fputc+5,w
  4358     1248  0084               	movwf	4
  4359     1249  1783               	bsf	3,7
  4360     124A  1C7A               	btfss	??_fputc+6,0
  4361     124B  1383               	bcf	3,7
  4362     124C  0870               	movf	fputc@c,w
  4363     124D  0080               	movwf	0
  4364     124E  0872               	movf	fputc@fp,w
  4365     124F  3E02               	addlw	2
  4366     1250  00F4               	movwf	??_fputc
  4367     1251  0873               	movf	fputc@fp+1,w
  4368     1252  1803               	skipnc
  4369     1253  3E01               	addlw	1
  4370     1254  3E00               	addlw	0
  4371     1255  00F5               	movwf	??_fputc+1
  4372     1256  0874               	movf	??_fputc,w
  4373     1257  0084               	movwf	4
  4374     1258  1783               	bsf	3,7
  4375     1259  1C75               	btfss	??_fputc+1,0
  4376     125A  1383               	bcf	3,7
  4377     125B  3001               	movlw	1
  4378     125C  0780               	addwf	0,f
  4379     125D  0A84               	incf	4,f
  4380     125E  1803               	skipnc
  4381     125F  0A80               	incf	0,f
  4382     1260                     l905:
  4383     1260  0008               	return
  4384     1261                     __end_of_fputc:
  4385                           
  4386                           	psect	text11
  4387     0800                     __ptext11:	
  4388 ;; *************** function _putch *****************
  4389 ;; Defined at:
  4390 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  c               1    wreg     unsigned char 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  c               1    0[COMMON] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         0       0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0
  4407 ;;      Totals:         0       0       0       0       0
  4408 ;;Total ram usage:        0 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_fputc
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417     0800                     _putch:	
  4418                           ;psect for function _putch
  4419                           
  4420     0800                     l916:	
  4421                           ;incstack = 0
  4422                           ; Regs used in _putch: [wreg]
  4423                           
  4424     0800  0008               	return
  4425     0801                     __end_of_putch:
  4426                           
  4427                           	psect	text12
  4428     1A83                     __ptext12:	
  4429 ;; *************** function _abs *****************
  4430 ;; Defined at:
  4431 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  a               2    6[COMMON] int 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2    6[COMMON] int 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         2       0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0
  4447 ;;      Temps:          2       0       0       0       0
  4448 ;;      Totals:         4       0       0       0       0
  4449 ;;Total ram usage:        4 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;;		_dtoa
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459     1A83                     _abs:	
  4460                           ;psect for function _abs
  4461                           
  4462     1A83                     l2326:	
  4463                           ;incstack = 0
  4464                           ; Regs used in _abs: [wreg+status,2+status,0]
  4465                           
  4466     1A83  1BF7               	btfsc	abs@a+1,7
  4467     1A84  2A86               	goto	u2881
  4468     1A85  2A87               	goto	u2880
  4469     1A86                     u2881:
  4470     1A86  2A88               	goto	l2330
  4471     1A87                     u2880:
  4472     1A87                     l2328:
  4473     1A87  2A93               	goto	l773
  4474     1A88                     l2330:
  4475     1A88  0976               	comf	abs@a,w
  4476     1A89  00F8               	movwf	??_abs
  4477     1A8A  0977               	comf	abs@a+1,w
  4478     1A8B  00F9               	movwf	??_abs+1
  4479     1A8C  0AF8               	incf	??_abs,f
  4480     1A8D  1903               	skipnz
  4481     1A8E  0AF9               	incf	??_abs+1,f
  4482     1A8F  0878               	movf	??_abs,w
  4483     1A90  00F6               	movwf	?_abs
  4484     1A91  0879               	movf	??_abs+1,w
  4485     1A92  00F7               	movwf	?_abs+1
  4486     1A93                     l773:
  4487     1A93  0008               	return
  4488     1A94                     __end_of_abs:
  4489                           
  4490                           	psect	text13
  4491     1CC8                     __ptext13:	
  4492 ;; *************** function ___awmod *****************
  4493 ;; Defined at:
  4494 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  divisor         2    0[COMMON] int 
  4497 ;;  dividend        2    2[COMMON] int 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  sign            1    5[COMMON] unsigned char 
  4500 ;;  counter         1    4[COMMON] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  2    0[COMMON] int 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         4       0       0       0       0
  4511 ;;      Locals:         2       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0
  4513 ;;      Totals:         6       0       0       0       0
  4514 ;;Total ram usage:        6 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;;		_dtoa
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524     1CC8                     ___awmod:	
  4525                           ;psect for function ___awmod
  4526                           
  4527     1CC8                     l2392:	
  4528                           ;incstack = 0
  4529                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4530                           
  4531     1CC8  01F5               	clrf	___awmod@sign
  4532     1CC9                     l2394:
  4533     1CC9  1FF3               	btfss	___awmod@dividend+1,7
  4534     1CCA  2CCC               	goto	u3031
  4535     1CCB  2CCD               	goto	u3030
  4536     1CCC                     u3031:
  4537     1CCC  2CD4               	goto	l2400
  4538     1CCD                     u3030:
  4539     1CCD                     l2396:
  4540     1CCD  09F2               	comf	___awmod@dividend,f
  4541     1CCE  09F3               	comf	___awmod@dividend+1,f
  4542     1CCF  0AF2               	incf	___awmod@dividend,f
  4543     1CD0  1903               	skipnz
  4544     1CD1  0AF3               	incf	___awmod@dividend+1,f
  4545     1CD2                     l2398:
  4546     1CD2  3001               	movlw	1
  4547     1CD3  00F5               	movwf	___awmod@sign
  4548     1CD4                     l2400:
  4549     1CD4  1FF1               	btfss	___awmod@divisor+1,7
  4550     1CD5  2CD7               	goto	u3041
  4551     1CD6  2CD8               	goto	u3040
  4552     1CD7                     u3041:
  4553     1CD7  2CDD               	goto	l2404
  4554     1CD8                     u3040:
  4555     1CD8                     l2402:
  4556     1CD8  09F0               	comf	___awmod@divisor,f
  4557     1CD9  09F1               	comf	___awmod@divisor+1,f
  4558     1CDA  0AF0               	incf	___awmod@divisor,f
  4559     1CDB  1903               	skipnz
  4560     1CDC  0AF1               	incf	___awmod@divisor+1,f
  4561     1CDD                     l2404:
  4562     1CDD  0870               	movf	___awmod@divisor,w
  4563     1CDE  0471               	iorwf	___awmod@divisor+1,w
  4564     1CDF  1903               	btfsc	3,2
  4565     1CE0  2CE2               	goto	u3051
  4566     1CE1  2CE3               	goto	u3050
  4567     1CE2                     u3051:
  4568     1CE2  2D10               	goto	l2422
  4569     1CE3                     u3050:
  4570     1CE3                     l2406:
  4571     1CE3  3001               	movlw	1
  4572     1CE4  00F4               	movwf	___awmod@counter
  4573     1CE5  2CEF               	goto	l2412
  4574     1CE6                     l2408:
  4575     1CE6  3001               	movlw	1
  4576     1CE7                     u3065:
  4577     1CE7  1003               	clrc
  4578     1CE8  0DF0               	rlf	___awmod@divisor,f
  4579     1CE9  0DF1               	rlf	___awmod@divisor+1,f
  4580     1CEA  3EFF               	addlw	-1
  4581     1CEB  1D03               	skipz
  4582     1CEC  2CE7               	goto	u3065
  4583     1CED                     l2410:
  4584     1CED  3001               	movlw	1
  4585     1CEE  07F4               	addwf	___awmod@counter,f
  4586     1CEF                     l2412:
  4587     1CEF  1FF1               	btfss	___awmod@divisor+1,7
  4588     1CF0  2CF2               	goto	u3071
  4589     1CF1  2CF3               	goto	u3070
  4590     1CF2                     u3071:
  4591     1CF2  2CE6               	goto	l2408
  4592     1CF3                     u3070:
  4593     1CF3                     l2414:
  4594     1CF3  0871               	movf	___awmod@divisor+1,w
  4595     1CF4  0273               	subwf	___awmod@dividend+1,w
  4596     1CF5  1D03               	skipz
  4597     1CF6  2CF9               	goto	u3085
  4598     1CF7  0870               	movf	___awmod@divisor,w
  4599     1CF8  0272               	subwf	___awmod@dividend,w
  4600     1CF9                     u3085:
  4601     1CF9  1C03               	skipc
  4602     1CFA  2CFC               	goto	u3081
  4603     1CFB  2CFD               	goto	u3080
  4604     1CFC                     u3081:
  4605     1CFC  2D03               	goto	l2418
  4606     1CFD                     u3080:
  4607     1CFD                     l2416:
  4608     1CFD  0870               	movf	___awmod@divisor,w
  4609     1CFE  02F2               	subwf	___awmod@dividend,f
  4610     1CFF  0871               	movf	___awmod@divisor+1,w
  4611     1D00  1C03               	skipc
  4612     1D01  03F3               	decf	___awmod@dividend+1,f
  4613     1D02  02F3               	subwf	___awmod@dividend+1,f
  4614     1D03                     l2418:
  4615     1D03  3001               	movlw	1
  4616     1D04                     u3095:
  4617     1D04  1003               	clrc
  4618     1D05  0CF1               	rrf	___awmod@divisor+1,f
  4619     1D06  0CF0               	rrf	___awmod@divisor,f
  4620     1D07  3EFF               	addlw	-1
  4621     1D08  1D03               	skipz
  4622     1D09  2D04               	goto	u3095
  4623     1D0A                     l2420:
  4624     1D0A  3001               	movlw	1
  4625     1D0B  02F4               	subwf	___awmod@counter,f
  4626     1D0C  1D03               	btfss	3,2
  4627     1D0D  2D0F               	goto	u3101
  4628     1D0E  2D10               	goto	u3100
  4629     1D0F                     u3101:
  4630     1D0F  2CF3               	goto	l2414
  4631     1D10                     u3100:
  4632     1D10                     l2422:
  4633     1D10  0875               	movf	___awmod@sign,w
  4634     1D11  1903               	btfsc	3,2
  4635     1D12  2D14               	goto	u3111
  4636     1D13  2D15               	goto	u3110
  4637     1D14                     u3111:
  4638     1D14  2D1A               	goto	l2426
  4639     1D15                     u3110:
  4640     1D15                     l2424:
  4641     1D15  09F2               	comf	___awmod@dividend,f
  4642     1D16  09F3               	comf	___awmod@dividend+1,f
  4643     1D17  0AF2               	incf	___awmod@dividend,f
  4644     1D18  1903               	skipnz
  4645     1D19  0AF3               	incf	___awmod@dividend+1,f
  4646     1D1A                     l2426:
  4647     1D1A  0873               	movf	___awmod@dividend+1,w
  4648     1D1B  00F1               	movwf	?___awmod+1
  4649     1D1C  0872               	movf	___awmod@dividend,w
  4650     1D1D  00F0               	movwf	?___awmod
  4651     1D1E                     l476:
  4652     1D1E  0008               	return
  4653     1D1F                     __end_of___awmod:
  4654                           
  4655                           	psect	text14
  4656     1D1F                     __ptext14:	
  4657 ;; *************** function ___awdiv *****************
  4658 ;; Defined at:
  4659 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  divisor         2    0[COMMON] int 
  4662 ;;  dividend        2    2[COMMON] int 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  quotient        2    6[COMMON] int 
  4665 ;;  sign            1    5[COMMON] unsigned char 
  4666 ;;  counter         1    4[COMMON] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  2    0[COMMON] int 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4676 ;;      Params:         4       0       0       0       0
  4677 ;;      Locals:         4       0       0       0       0
  4678 ;;      Temps:          0       0       0       0       0
  4679 ;;      Totals:         8       0       0       0       0
  4680 ;;Total ram usage:        8 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;;		_dtoa
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690     1D1F                     ___awdiv:	
  4691                           ;psect for function ___awdiv
  4692                           
  4693     1D1F                     l2348:	
  4694                           ;incstack = 0
  4695                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4696                           
  4697     1D1F  01F5               	clrf	___awdiv@sign
  4698     1D20                     l2350:
  4699     1D20  1FF1               	btfss	___awdiv@divisor+1,7
  4700     1D21  2D23               	goto	u2931
  4701     1D22  2D24               	goto	u2930
  4702     1D23                     u2931:
  4703     1D23  2D2B               	goto	l2356
  4704     1D24                     u2930:
  4705     1D24                     l2352:
  4706     1D24  09F0               	comf	___awdiv@divisor,f
  4707     1D25  09F1               	comf	___awdiv@divisor+1,f
  4708     1D26  0AF0               	incf	___awdiv@divisor,f
  4709     1D27  1903               	skipnz
  4710     1D28  0AF1               	incf	___awdiv@divisor+1,f
  4711     1D29                     l2354:
  4712     1D29  3001               	movlw	1
  4713     1D2A  00F5               	movwf	___awdiv@sign
  4714     1D2B                     l2356:
  4715     1D2B  1FF3               	btfss	___awdiv@dividend+1,7
  4716     1D2C  2D2E               	goto	u2941
  4717     1D2D  2D2F               	goto	u2940
  4718     1D2E                     u2941:
  4719     1D2E  2D36               	goto	l2362
  4720     1D2F                     u2940:
  4721     1D2F                     l2358:
  4722     1D2F  09F2               	comf	___awdiv@dividend,f
  4723     1D30  09F3               	comf	___awdiv@dividend+1,f
  4724     1D31  0AF2               	incf	___awdiv@dividend,f
  4725     1D32  1903               	skipnz
  4726     1D33  0AF3               	incf	___awdiv@dividend+1,f
  4727     1D34                     l2360:
  4728     1D34  3001               	movlw	1
  4729     1D35  06F5               	xorwf	___awdiv@sign,f
  4730     1D36                     l2362:
  4731     1D36  01F6               	clrf	___awdiv@quotient
  4732     1D37  01F7               	clrf	___awdiv@quotient+1
  4733     1D38                     l2364:
  4734     1D38  0870               	movf	___awdiv@divisor,w
  4735     1D39  0471               	iorwf	___awdiv@divisor+1,w
  4736     1D3A  1903               	btfsc	3,2
  4737     1D3B  2D3D               	goto	u2951
  4738     1D3C  2D3E               	goto	u2950
  4739     1D3D                     u2951:
  4740     1D3D  2D73               	goto	l2384
  4741     1D3E                     u2950:
  4742     1D3E                     l2366:
  4743     1D3E  3001               	movlw	1
  4744     1D3F  00F4               	movwf	___awdiv@counter
  4745     1D40  2D4A               	goto	l2372
  4746     1D41                     l2368:
  4747     1D41  3001               	movlw	1
  4748     1D42                     u2965:
  4749     1D42  1003               	clrc
  4750     1D43  0DF0               	rlf	___awdiv@divisor,f
  4751     1D44  0DF1               	rlf	___awdiv@divisor+1,f
  4752     1D45  3EFF               	addlw	-1
  4753     1D46  1D03               	skipz
  4754     1D47  2D42               	goto	u2965
  4755     1D48                     l2370:
  4756     1D48  3001               	movlw	1
  4757     1D49  07F4               	addwf	___awdiv@counter,f
  4758     1D4A                     l2372:
  4759     1D4A  1FF1               	btfss	___awdiv@divisor+1,7
  4760     1D4B  2D4D               	goto	u2971
  4761     1D4C  2D4E               	goto	u2970
  4762     1D4D                     u2971:
  4763     1D4D  2D41               	goto	l2368
  4764     1D4E                     u2970:
  4765     1D4E                     l2374:
  4766     1D4E  3001               	movlw	1
  4767     1D4F                     u2985:
  4768     1D4F  1003               	clrc
  4769     1D50  0DF6               	rlf	___awdiv@quotient,f
  4770     1D51  0DF7               	rlf	___awdiv@quotient+1,f
  4771     1D52  3EFF               	addlw	-1
  4772     1D53  1D03               	skipz
  4773     1D54  2D4F               	goto	u2985
  4774     1D55  0871               	movf	___awdiv@divisor+1,w
  4775     1D56  0273               	subwf	___awdiv@dividend+1,w
  4776     1D57  1D03               	skipz
  4777     1D58  2D5B               	goto	u2995
  4778     1D59  0870               	movf	___awdiv@divisor,w
  4779     1D5A  0272               	subwf	___awdiv@dividend,w
  4780     1D5B                     u2995:
  4781     1D5B  1C03               	skipc
  4782     1D5C  2D5E               	goto	u2991
  4783     1D5D  2D5F               	goto	u2990
  4784     1D5E                     u2991:
  4785     1D5E  2D66               	goto	l2380
  4786     1D5F                     u2990:
  4787     1D5F                     l2376:
  4788     1D5F  0870               	movf	___awdiv@divisor,w
  4789     1D60  02F2               	subwf	___awdiv@dividend,f
  4790     1D61  0871               	movf	___awdiv@divisor+1,w
  4791     1D62  1C03               	skipc
  4792     1D63  03F3               	decf	___awdiv@dividend+1,f
  4793     1D64  02F3               	subwf	___awdiv@dividend+1,f
  4794     1D65                     l2378:
  4795     1D65  1476               	bsf	___awdiv@quotient,0
  4796     1D66                     l2380:
  4797     1D66  3001               	movlw	1
  4798     1D67                     u3005:
  4799     1D67  1003               	clrc
  4800     1D68  0CF1               	rrf	___awdiv@divisor+1,f
  4801     1D69  0CF0               	rrf	___awdiv@divisor,f
  4802     1D6A  3EFF               	addlw	-1
  4803     1D6B  1D03               	skipz
  4804     1D6C  2D67               	goto	u3005
  4805     1D6D                     l2382:
  4806     1D6D  3001               	movlw	1
  4807     1D6E  02F4               	subwf	___awdiv@counter,f
  4808     1D6F  1D03               	btfss	3,2
  4809     1D70  2D72               	goto	u3011
  4810     1D71  2D73               	goto	u3010
  4811     1D72                     u3011:
  4812     1D72  2D4E               	goto	l2374
  4813     1D73                     u3010:
  4814     1D73                     l2384:
  4815     1D73  0875               	movf	___awdiv@sign,w
  4816     1D74  1903               	btfsc	3,2
  4817     1D75  2D77               	goto	u3021
  4818     1D76  2D78               	goto	u3020
  4819     1D77                     u3021:
  4820     1D77  2D7D               	goto	l2388
  4821     1D78                     u3020:
  4822     1D78                     l2386:
  4823     1D78  09F6               	comf	___awdiv@quotient,f
  4824     1D79  09F7               	comf	___awdiv@quotient+1,f
  4825     1D7A  0AF6               	incf	___awdiv@quotient,f
  4826     1D7B  1903               	skipnz
  4827     1D7C  0AF7               	incf	___awdiv@quotient+1,f
  4828     1D7D                     l2388:
  4829     1D7D  0877               	movf	___awdiv@quotient+1,w
  4830     1D7E  00F1               	movwf	?___awdiv+1
  4831     1D7F  0876               	movf	___awdiv@quotient,w
  4832     1D80  00F0               	movwf	?___awdiv
  4833     1D81                     l463:
  4834     1D81  0008               	return
  4835     1D82                     __end_of___awdiv:
  4836                           
  4837                           	psect	text15
  4838     1B28                     __ptext15:	
  4839 ;; *************** function _UART_Write_Text *****************
  4840 ;; Defined at:
  4841 ;;		line 34 in file "uart.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  text            2    1[COMMON] PTR const unsigned char 
  4844 ;;		 -> STR_13(47), STR_12(51), main@displayText(64), STR_5(30), 
  4845 ;;		 -> STR_4(34), STR_3(33), STR_2(37), STR_1(29), 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4857 ;;      Params:         2       0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0
  4860 ;;      Totals:         2       0       0       0       0
  4861 ;;Total ram usage:        2 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 2
  4864 ;; This function calls:
  4865 ;;		_UART_Write
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871     1B28                     _UART_Write_Text:	
  4872                           ;psect for function _UART_Write_Text
  4873                           
  4874     1B28                     l3440:	
  4875                           ;incstack = 0
  4876                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4877                           
  4878                           
  4879                           ;uart.c: 35:     while (*text != '\0') {
  4880     1B28  2B3D               	goto	l3446
  4881     1B29                     l3442:
  4882                           
  4883                           ;uart.c: 36:     UART_Write(*text++);
  4884     1B29  0872               	movf	UART_Write_Text@text+1,w
  4885     1B2A  00FF               	movwf	btemp+1
  4886     1B2B  0871               	movf	UART_Write_Text@text,w
  4887     1B2C  0084               	movwf	4
  4888     1B2D  160A  158A  2000  160A  158A  	fcall	stringtab
  4889     1B32  160A  158A  2273  160A  158A  	fcall	_UART_Write
  4890     1B37                     l3444:
  4891     1B37  3001               	movlw	1
  4892     1B38  07F1               	addwf	UART_Write_Text@text,f
  4893     1B39  1803               	skipnc
  4894     1B3A  0AF2               	incf	UART_Write_Text@text+1,f
  4895     1B3B  3000               	movlw	0
  4896     1B3C  07F2               	addwf	UART_Write_Text@text+1,f
  4897     1B3D                     l3446:
  4898                           
  4899                           ;uart.c: 35:     while (*text != '\0') {
  4900     1B3D  0872               	movf	UART_Write_Text@text+1,w
  4901     1B3E  1283               	bcf	3,5	;RP0=0, select bank0
  4902     1B3F  1303               	bcf	3,6	;RP1=0, select bank0
  4903     1B40  00FF               	movwf	btemp+1
  4904     1B41  0871               	movf	UART_Write_Text@text,w
  4905     1B42  0084               	movwf	4
  4906     1B43  160A  158A  2000  160A  158A  	fcall	stringtab
  4907     1B48  3A00               	xorlw	0
  4908     1B49  1D03               	skipz
  4909     1B4A  2B4C               	goto	u5331
  4910     1B4B  2B4D               	goto	u5330
  4911     1B4C                     u5331:
  4912     1B4C  2B29               	goto	l3442
  4913     1B4D                     u5330:
  4914     1B4D                     l107:
  4915     1B4D  0008               	return
  4916     1B4E                     __end_of_UART_Write_Text:
  4917                           
  4918                           	psect	text16
  4919     1A73                     __ptext16:	
  4920 ;; *************** function _UART_Write *****************
  4921 ;; Defined at:
  4922 ;;		line 29 in file "uart.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  data            1    wreg     unsigned char 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  data            1    0[COMMON] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, pclath, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4936 ;;      Params:         0       0       0       0       0
  4937 ;;      Locals:         1       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0
  4939 ;;      Totals:         1       0       0       0       0
  4940 ;;Total ram usage:        1 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 1
  4943 ;; This function calls:
  4944 ;;		_UART_TX_Empty
  4945 ;; This function is called by:
  4946 ;;		_UART_Write_Text
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950     1A73                     _UART_Write:	
  4951                           ;psect for function _UART_Write
  4952                           
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in _UART_Write: [wreg+pclath+cstack]
  4956                           ;UART_Write@data stored from wreg
  4957     1A73  00F0               	movwf	UART_Write@data
  4958     1A74                     l2960:
  4959     1A74                     l2962:	
  4960                           ;uart.c: 30:     while (!UART_TX_Empty());
  4961                           
  4962     1A74  160A  158A  2210  160A  158A  	fcall	_UART_TX_Empty
  4963     1A79  3A00               	xorlw	0
  4964     1A7A  1903               	skipnz
  4965     1A7B  2A7D               	goto	u4291
  4966     1A7C  2A7E               	goto	u4290
  4967     1A7D                     u4291:
  4968     1A7D  2A74               	goto	l2962
  4969     1A7E                     u4290:
  4970     1A7E                     l2964:
  4971                           
  4972                           ;uart.c: 31:     TXREG = data;
  4973     1A7E  0870               	movf	UART_Write@data,w
  4974     1A7F  1283               	bcf	3,5	;RP0=0, select bank0
  4975     1A80  1303               	bcf	3,6	;RP1=0, select bank0
  4976     1A81  0099               	movwf	25	;volatile
  4977     1A82                     l101:
  4978     1A82  0008               	return
  4979     1A83                     __end_of_UART_Write:
  4980                           
  4981                           	psect	text17
  4982     1A10                     __ptext17:	
  4983 ;; *************** function _UART_TX_Empty *****************
  4984 ;; Defined at:
  4985 ;;		line 25 in file "uart.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      unsigned char 
  4992 ;; Registers used:
  4993 ;;		wreg
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4999 ;;      Params:         0       0       0       0       0
  5000 ;;      Locals:         0       0       0       0       0
  5001 ;;      Temps:          0       0       0       0       0
  5002 ;;      Totals:         0       0       0       0       0
  5003 ;;Total ram usage:        0 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_UART_Write
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012     1A10                     _UART_TX_Empty:	
  5013                           ;psect for function _UART_TX_Empty
  5014                           
  5015     1A10                     l2558:	
  5016                           ;incstack = 0
  5017                           ; Regs used in _UART_TX_Empty: [wreg]
  5018                           
  5019                           
  5020                           ;uart.c: 26:     return TRMT;
  5021     1A10  3000               	movlw	0
  5022     1A11  1683               	bsf	3,5	;RP0=1, select bank1
  5023     1A12  1303               	bcf	3,6	;RP1=0, select bank1
  5024     1A13  1898               	btfsc	24,1	;volatile
  5025     1A14  3001               	movlw	1
  5026     1A15                     l95:
  5027     1A15  0008               	return
  5028     1A16                     __end_of_UART_TX_Empty:
  5029                           
  5030                           	psect	text18
  5031     1A94                     __ptext18:	
  5032 ;; *************** function _UART_TX_Init *****************
  5033 ;; Defined at:
  5034 ;;		line 3 in file "uart.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		None
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5048 ;;      Params:         0       0       0       0       0
  5049 ;;      Locals:         0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0
  5051 ;;      Totals:         0       0       0       0       0
  5052 ;;Total ram usage:        0 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061     1A94                     _UART_TX_Init:	
  5062                           ;psect for function _UART_TX_Init
  5063                           
  5064     1A94                     l3438:	
  5065                           ;incstack = 0
  5066                           ; Regs used in _UART_TX_Init: []
  5067                           
  5068                           
  5069                           ;uart.c: 8:     BRGH = 1;
  5070     1A94  1683               	bsf	3,5	;RP0=1, select bank1
  5071     1A95  1303               	bcf	3,6	;RP1=0, select bank1
  5072     1A96  1518               	bsf	24,2	;volatile
  5073                           
  5074                           ;uart.c: 9:     SPBRG = 103;
  5075     1A97  3067               	movlw	103
  5076     1A98  0099               	movwf	25	;volatile
  5077                           
  5078                           ;uart.c: 12:     SYNC = 0;
  5079     1A99  1218               	bcf	24,4	;volatile
  5080                           
  5081                           ;uart.c: 13:     SPEN = 1;
  5082     1A9A  1283               	bcf	3,5	;RP0=0, select bank0
  5083     1A9B  1303               	bcf	3,6	;RP1=0, select bank0
  5084     1A9C  1798               	bsf	24,7	;volatile
  5085                           
  5086                           ;uart.c: 16:     TRISC6 = 0;
  5087     1A9D  1683               	bsf	3,5	;RP0=1, select bank1
  5088     1A9E  1303               	bcf	3,6	;RP1=0, select bank1
  5089     1A9F  1307               	bcf	7,6	;volatile
  5090                           
  5091                           ;uart.c: 17:     TRISC7 = 1;
  5092     1AA0  1787               	bsf	7,7	;volatile
  5093                           
  5094                           ;uart.c: 20:     TXEN = 1;
  5095     1AA1  1698               	bsf	24,5	;volatile
  5096                           
  5097                           ;uart.c: 22:     CREN = 1;
  5098     1AA2  1283               	bcf	3,5	;RP0=0, select bank0
  5099     1AA3  1303               	bcf	3,6	;RP1=0, select bank0
  5100     1AA4  1618               	bsf	24,4	;volatile
  5101     1AA5                     l92:
  5102     1AA5  0008               	return
  5103     1AA6                     __end_of_UART_TX_Init:
  5104                           
  5105                           	psect	text19
  5106     1B75                     __ptext19:	
  5107 ;; *************** function _TH02_WaitForReady *****************
  5108 ;; Defined at:
  5109 ;;		line 47 in file "TH02.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  status          1    6[COMMON] unsigned char 
  5114 ;;  time_out        1    5[COMMON] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      unsigned char 
  5117 ;; Registers used:
  5118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5124 ;;      Params:         0       0       0       0       0
  5125 ;;      Locals:         2       0       0       0       0
  5126 ;;      Temps:          2       0       0       0       0
  5127 ;;      Totals:         4       0       0       0       0
  5128 ;;Total ram usage:        4 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 3
  5131 ;; This function calls:
  5132 ;;		_TH02_ReadRegister
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138     1B75                     _TH02_WaitForReady:	
  5139                           ;psect for function _TH02_WaitForReady
  5140                           
  5141     1B75                     l3476:	
  5142                           ;incstack = 0
  5143                           ; Regs used in _TH02_WaitForReady: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5144                           
  5145                           
  5146                           ;TH02.c: 48:     uint8_t status;;TH02.c: 49:     uint8_t time_out = 0;
  5147     1B75  01F5               	clrf	TH02_WaitForReady@time_out
  5148                           
  5149                           ;TH02.c: 52:     while (time_out <= 100) {
  5150     1B76  2B95               	goto	l3490
  5151     1B77                     l3478:
  5152                           
  5153                           ;TH02.c: 53:         if (TH02_ReadRegister(0, &status) == 0) {
  5154     1B77  3076               	movlw	(low (TH02_WaitForReady@status| 0))& (0+255)
  5155     1B78  00F1               	movwf	TH02_ReadRegister@value
  5156     1B79  3000               	movlw	0
  5157     1B7A  160A  158A  243D  160A  158A  	fcall	_TH02_ReadRegister
  5158     1B7F  3A00               	xorlw	0
  5159     1B80  1D03               	skipz
  5160     1B81  2B83               	goto	u5381
  5161     1B82  2B84               	goto	u5380
  5162     1B83                     u5381:
  5163     1B83  2B8A               	goto	l3486
  5164     1B84                     u5380:
  5165     1B84                     l3480:
  5166                           
  5167                           ;TH02.c: 55:             if ((status & 0x01) == 0) {
  5168     1B84  1876               	btfsc	TH02_WaitForReady@status,0
  5169     1B85  2B87               	goto	u5391
  5170     1B86  2B88               	goto	u5390
  5171     1B87                     u5391:
  5172     1B87  2B8A               	goto	l3486
  5173     1B88                     u5390:
  5174     1B88                     l3482:
  5175                           
  5176                           ;TH02.c: 56:                 return 0;
  5177     1B88  3000               	movlw	0
  5178     1B89  2B9C               	goto	l162
  5179     1B8A                     l3486:
  5180                           
  5181                           ;TH02.c: 60:         time_out++;
  5182     1B8A  3001               	movlw	1
  5183     1B8B  07F5               	addwf	TH02_WaitForReady@time_out,f
  5184     1B8C                     l3488:
  5185                           
  5186                           ;TH02.c: 61:         _delay((unsigned long)((1)*(16000000/4000.0)));
  5187     1B8C  3006               	movlw	6
  5188     1B8D  00F4               	movwf	??_TH02_WaitForReady+1
  5189     1B8E  3030               	movlw	48
  5190     1B8F  00F3               	movwf	??_TH02_WaitForReady
  5191     1B90                     u5627:
  5192     1B90  0BF3               	decfsz	??_TH02_WaitForReady,f
  5193     1B91  2B90               	goto	u5627
  5194     1B92  0BF4               	decfsz	??_TH02_WaitForReady+1,f
  5195     1B93  2B90               	goto	u5627
  5196     1B94  0000               	nop
  5197     1B95                     l3490:
  5198                           
  5199                           ;TH02.c: 52:     while (time_out <= 100) {
  5200     1B95  3065               	movlw	101
  5201     1B96  0275               	subwf	TH02_WaitForReady@time_out,w
  5202     1B97  1C03               	skipc
  5203     1B98  2B9A               	goto	u5401
  5204     1B99  2B9B               	goto	u5400
  5205     1B9A                     u5401:
  5206     1B9A  2B77               	goto	l3478
  5207     1B9B                     u5400:
  5208     1B9B                     l3492:
  5209                           
  5210                           ;TH02.c: 64:     return 1;
  5211     1B9B  3001               	movlw	1
  5212     1B9C                     l162:
  5213     1B9C  0008               	return
  5214     1B9D                     __end_of_TH02_WaitForReady:
  5215                           
  5216                           	psect	text20
  5217     11AF                     __ptext20:	
  5218 ;; *************** function _TH02_StartTempConversion *****************
  5219 ;; Defined at:
  5220 ;;		line 33 in file "TH02.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  fastmode        1    wreg     unsigned char 
  5223 ;;  heater          1    3[COMMON] unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  fastmode        1    4[COMMON] unsigned char 
  5226 ;;  config          1    5[COMMON] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      unsigned char 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5236 ;;      Params:         1       0       0       0       0
  5237 ;;      Locals:         2       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0
  5239 ;;      Totals:         3       0       0       0       0
  5240 ;;Total ram usage:        3 bytes
  5241 ;; Hardware stack levels used: 1
  5242 ;; Hardware stack levels required when called: 3
  5243 ;; This function calls:
  5244 ;;		_TH02_WriteRegister
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250     11AF                     _TH02_StartTempConversion:	
  5251                           ;psect for function _TH02_StartTempConversion
  5252                           
  5253                           
  5254                           ;incstack = 0
  5255                           ; Regs used in _TH02_StartTempConversion: [wreg+status,2+status,0+pclath+cstack]
  5256                           ;TH02_StartTempConversion@fastmode stored from wreg
  5257     11AF  00F4               	movwf	TH02_StartTempConversion@fastmode
  5258     11B0                     l3448:
  5259                           
  5260                           ;TH02.c: 34:     uint8_t config = 0x01 | 0x10;
  5261     11B0  3011               	movlw	17
  5262     11B1  00F5               	movwf	TH02_StartTempConversion@config
  5263     11B2                     l3450:
  5264                           
  5265                           ;TH02.c: 35:     if (fastmode) config |= 0x20;
  5266     11B2  0874               	movf	TH02_StartTempConversion@fastmode,w
  5267     11B3  1903               	btfsc	3,2
  5268     11B4  29B6               	goto	u5341
  5269     11B5  29B7               	goto	u5340
  5270     11B6                     u5341:
  5271     11B6  29B8               	goto	l3454
  5272     11B7                     u5340:
  5273     11B7                     l3452:
  5274     11B7  16F5               	bsf	TH02_StartTempConversion@config,5
  5275     11B8                     l3454:
  5276                           
  5277                           ;TH02.c: 36:     if (heater) config |= 0x02;
  5278     11B8  0873               	movf	TH02_StartTempConversion@heater,w
  5279     11B9  1903               	btfsc	3,2
  5280     11BA  29BC               	goto	u5351
  5281     11BB  29BD               	goto	u5350
  5282     11BC                     u5351:
  5283     11BC  29BE               	goto	l3458
  5284     11BD                     u5350:
  5285     11BD                     l3456:
  5286     11BD  14F5               	bsf	TH02_StartTempConversion@config,1
  5287     11BE                     l3458:
  5288                           
  5289                           ;TH02.c: 37:     return TH02_WriteRegister(3, config);;	Return value of _TH02_StartTempC
      +                          onversion is never used
  5290     11BE  0875               	movf	TH02_StartTempConversion@config,w
  5291     11BF  00F1               	movwf	TH02_WriteRegister@value
  5292     11C0  3003               	movlw	3
  5293     11C1  160A  158A  23C8  160A  118A  	fcall	_TH02_WriteRegister
  5294     11C6                     l150:
  5295     11C6  0008               	return
  5296     11C7                     __end_of_TH02_StartTempConversion:
  5297                           
  5298                           	psect	text21
  5299     1ACD                     __ptext21:	
  5300 ;; *************** function _TH02_StartRHConversion *****************
  5301 ;; Defined at:
  5302 ;;		line 40 in file "TH02.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  fastmode        1    wreg     unsigned char 
  5305 ;;  heater          1    3[COMMON] unsigned char 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  fastmode        1    4[COMMON] unsigned char 
  5308 ;;  config          1    5[COMMON] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      unsigned char 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0, pclath, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         1       0       0       0       0
  5319 ;;      Locals:         2       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0
  5321 ;;      Totals:         3       0       0       0       0
  5322 ;;Total ram usage:        3 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 3
  5325 ;; This function calls:
  5326 ;;		_TH02_WriteRegister
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332     1ACD                     _TH02_StartRHConversion:	
  5333                           ;psect for function _TH02_StartRHConversion
  5334                           
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in _TH02_StartRHConversion: [wreg+status,2+status,0+pclath+cstack]
  5338                           ;TH02_StartRHConversion@fastmode stored from wreg
  5339     1ACD  00F4               	movwf	TH02_StartRHConversion@fastmode
  5340     1ACE                     l3462:
  5341                           
  5342                           ;TH02.c: 41:     uint8_t config = 0x01;
  5343     1ACE  3001               	movlw	1
  5344     1ACF  00F5               	movwf	TH02_StartRHConversion@config
  5345     1AD0                     l3464:
  5346                           
  5347                           ;TH02.c: 42:     if (fastmode) config |= 0x20;
  5348     1AD0  0874               	movf	TH02_StartRHConversion@fastmode,w
  5349     1AD1  1903               	btfsc	3,2
  5350     1AD2  2AD4               	goto	u5361
  5351     1AD3  2AD5               	goto	u5360
  5352     1AD4                     u5361:
  5353     1AD4  2AD6               	goto	l3468
  5354     1AD5                     u5360:
  5355     1AD5                     l3466:
  5356     1AD5  16F5               	bsf	TH02_StartRHConversion@config,5
  5357     1AD6                     l3468:
  5358                           
  5359                           ;TH02.c: 43:     if (heater) config |= 0x02;
  5360     1AD6  0873               	movf	TH02_StartRHConversion@heater,w
  5361     1AD7  1903               	btfsc	3,2
  5362     1AD8  2ADA               	goto	u5371
  5363     1AD9  2ADB               	goto	u5370
  5364     1ADA                     u5371:
  5365     1ADA  2ADC               	goto	l3472
  5366     1ADB                     u5370:
  5367     1ADB                     l3470:
  5368     1ADB  14F5               	bsf	TH02_StartRHConversion@config,1
  5369     1ADC                     l3472:
  5370                           
  5371                           ;TH02.c: 44:     return TH02_WriteRegister(3, config);;	Return value of _TH02_StartRHCon
      +                          version is never used
  5372     1ADC  0875               	movf	TH02_StartRHConversion@config,w
  5373     1ADD  00F1               	movwf	TH02_WriteRegister@value
  5374     1ADE  3003               	movlw	3
  5375     1ADF  160A  158A  23C8  160A  158A  	fcall	_TH02_WriteRegister
  5376     1AE4                     l155:
  5377     1AE4  0008               	return
  5378     1AE5                     __end_of_TH02_StartRHConversion:
  5379                           
  5380                           	psect	text22
  5381     1BC8                     __ptext22:	
  5382 ;; *************** function _TH02_WriteRegister *****************
  5383 ;; Defined at:
  5384 ;;		line 10 in file "TH02.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  reg             1    wreg     unsigned char 
  5387 ;;  value           1    1[COMMON] unsigned char 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  reg             1    2[COMMON] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      unsigned char 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0, pclath, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5399 ;;      Params:         1       0       0       0       0
  5400 ;;      Locals:         1       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0
  5402 ;;      Totals:         2       0       0       0       0
  5403 ;;Total ram usage:        2 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 2
  5406 ;; This function calls:
  5407 ;;		_I2C_Master_Start
  5408 ;;		_I2C_Master_Stop
  5409 ;;		_I2C_Master_Write
  5410 ;; This function is called by:
  5411 ;;		_TH02_StartTempConversion
  5412 ;;		_TH02_StartRHConversion
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416     1BC8                     _TH02_WriteRegister:	
  5417                           ;psect for function _TH02_WriteRegister
  5418                           
  5419                           
  5420                           ;incstack = 0
  5421                           ; Regs used in _TH02_WriteRegister: [wreg+status,2+status,0+pclath+cstack]
  5422                           ;TH02_WriteRegister@reg stored from wreg
  5423     1BC8  00F2               	movwf	TH02_WriteRegister@reg
  5424     1BC9                     l2966:
  5425                           
  5426                           ;TH02.c: 11:     I2C_Master_Start();
  5427     1BC9  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Start
  5428                           
  5429                           ;TH02.c: 12:     if (I2C_Master_Write(0x40 << 1) != 0) return 1;
  5430     1BCE  3080               	movlw	128
  5431     1BCF  120A  158A  2001  160A  158A  	fcall	_I2C_Master_Write
  5432     1BD4  3A00               	xorlw	0
  5433     1BD5  1903               	skipnz
  5434     1BD6  2BD8               	goto	u4301
  5435     1BD7  2BD9               	goto	u4300
  5436     1BD8                     u4301:
  5437     1BD8  2BDB               	goto	l2972
  5438     1BD9                     u4300:
  5439     1BD9                     l2968:
  5440     1BD9  3001               	movlw	1
  5441     1BDA  2BF9               	goto	l137
  5442     1BDB                     l2972:
  5443                           
  5444                           ;TH02.c: 13:     if (I2C_Master_Write(reg) != 0) return 1;
  5445     1BDB  0872               	movf	TH02_WriteRegister@reg,w
  5446     1BDC  120A  158A  2001  160A  158A  	fcall	_I2C_Master_Write
  5447     1BE1  3A00               	xorlw	0
  5448     1BE2  1903               	skipnz
  5449     1BE3  2BE5               	goto	u4311
  5450     1BE4  2BE6               	goto	u4310
  5451     1BE5                     u4311:
  5452     1BE5  2BE7               	goto	l2978
  5453     1BE6                     u4310:
  5454     1BE6  2BD9               	goto	l2968
  5455     1BE7                     l2978:
  5456                           
  5457                           ;TH02.c: 14:     if (I2C_Master_Write(value) != 0) return 1;
  5458     1BE7  0871               	movf	TH02_WriteRegister@value,w
  5459     1BE8  120A  158A  2001  160A  158A  	fcall	_I2C_Master_Write
  5460     1BED  3A00               	xorlw	0
  5461     1BEE  1903               	skipnz
  5462     1BEF  2BF1               	goto	u4321
  5463     1BF0  2BF2               	goto	u4320
  5464     1BF1                     u4321:
  5465     1BF1  2BF3               	goto	l2984
  5466     1BF2                     u4320:
  5467     1BF2  2BD9               	goto	l2968
  5468     1BF3                     l2984:
  5469                           
  5470                           ;TH02.c: 15:     I2C_Master_Stop();
  5471     1BF3  160A  158A  2238  160A  158A  	fcall	_I2C_Master_Stop
  5472     1BF8                     l2986:
  5473                           
  5474                           ;TH02.c: 16:     return 0;
  5475     1BF8  3000               	movlw	0
  5476     1BF9                     l137:
  5477     1BF9  0008               	return
  5478     1BFA                     __end_of_TH02_WriteRegister:
  5479                           
  5480                           	psect	text23
  5481     0816                     __ptext23:	
  5482 ;; *************** function _TH02_GetConversionValue *****************
  5483 ;; Defined at:
  5484 ;;		line 104 in file "TH02.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  result          4   31[BANK1 ] long 
  5489 ;;  ret             2   29[BANK1 ] short 
  5490 ;;  lsb             2   26[BANK1 ] unsigned short 
  5491 ;;  msb             2   24[BANK1 ] unsigned short 
  5492 ;;  config          1   28[BANK1 ] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  2   20[BANK1 ] short 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5502 ;;      Params:         0       0       2       0       0
  5503 ;;      Locals:         0       0      11       0       0
  5504 ;;      Temps:          0       0       2       0       0
  5505 ;;      Totals:         0       0      15       0       0
  5506 ;;Total ram usage:       15 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; Hardware stack levels required when called: 3
  5509 ;; This function calls:
  5510 ;;		_I2C_ACK
  5511 ;;		_I2C_Master_RepeatedStart
  5512 ;;		_I2C_Master_Start
  5513 ;;		_I2C_Master_Stop
  5514 ;;		_I2C_Master_Write
  5515 ;;		_I2C_NACK
  5516 ;;		_I2C_Read_Byte
  5517 ;;		_TH02_ReadRegister
  5518 ;;		___aldiv
  5519 ;;		___fldiv
  5520 ;;		___lmul
  5521 ;;		___xxtofl
  5522 ;;		_roundInt
  5523 ;; This function is called by:
  5524 ;;		_main
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528     0816                     _TH02_GetConversionValue:	
  5529                           ;psect for function _TH02_GetConversionValue
  5530                           
  5531     0816                     l3516:	
  5532                           ;incstack = 0
  5533                           ; Regs used in _TH02_GetConversionValue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  5534                           
  5535     0816  1683               	bsf	3,5	;RP0=1, select bank1
  5536     0817  1303               	bcf	3,6	;RP1=0, select bank1
  5537     0818  01BA               	clrf	TH02_GetConversionValue@lsb^(0+128)
  5538     0819  01BB               	clrf	(TH02_GetConversionValue@lsb+1)^(0+128)
  5539     081A                     l3518:
  5540     081A                     l3520:
  5541                           
  5542                           ;TH02.c: 107:     int16_t ret = 12345;
  5543     081A  3039               	movlw	57
  5544     081B  00BD               	movwf	TH02_GetConversionValue@ret^(0+128)
  5545     081C  3030               	movlw	48
  5546     081D  00BE               	movwf	(TH02_GetConversionValue@ret^(0+128)+1)
  5547     081E                     l3522:
  5548                           
  5549                           ;TH02.c: 108:     uint8_t config;;TH02.c: 111:     I2C_Master_Start();
  5550     081E  160A  158A  222F  120A  158A  	fcall	_I2C_Master_Start
  5551     0823                     l3524:
  5552                           
  5553                           ;TH02.c: 112:     if (I2C_Master_Write((0x40 << 1)) != 0) {
  5554     0823  3080               	movlw	128
  5555     0824  120A  158A  2001  120A  158A  	fcall	_I2C_Master_Write
  5556     0829  3A00               	xorlw	0
  5557     082A  1903               	skipnz
  5558     082B  282D               	goto	u5441
  5559     082C  282E               	goto	u5440
  5560     082D                     u5441:
  5561     082D  283A               	goto	l3532
  5562     082E                     u5440:
  5563     082E                     l3526:
  5564                           
  5565                           ;TH02.c: 113:         I2C_Master_Stop();
  5566     082E  160A  158A  2238  120A  158A  	fcall	_I2C_Master_Stop
  5567     0833                     l3528:
  5568                           
  5569                           ;TH02.c: 114:         return ret;
  5570     0833  3039               	movlw	57
  5571     0834  1683               	bsf	3,5	;RP0=1, select bank1
  5572     0835  1303               	bcf	3,6	;RP1=0, select bank1
  5573     0836  00B4               	movwf	?_TH02_GetConversionValue^(0+128)
  5574     0837  3030               	movlw	48
  5575     0838  00B5               	movwf	(?_TH02_GetConversionValue^(0+128)+1)
  5576     0839  29A9               	goto	l179
  5577     083A                     l3532:
  5578                           
  5579                           ;TH02.c: 118:     if (I2C_Master_Write(1) != 0) {
  5580     083A  3001               	movlw	1
  5581     083B  120A  158A  2001  120A  158A  	fcall	_I2C_Master_Write
  5582     0840  3A00               	xorlw	0
  5583     0841  1903               	skipnz
  5584     0842  2844               	goto	u5451
  5585     0843  2845               	goto	u5450
  5586     0844                     u5451:
  5587     0844  2846               	goto	l3540
  5588     0845                     u5450:
  5589     0845  282E               	goto	l3526
  5590     0846                     l3540:
  5591                           
  5592                           ;TH02.c: 124:     I2C_Master_RepeatedStart();
  5593     0846  160A  158A  2226  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5594                           
  5595                           ;TH02.c: 125:     if (I2C_Master_Write((0x40 << 1) | 0x01) != 0) {
  5596     084B  3081               	movlw	129
  5597     084C  120A  158A  2001  120A  158A  	fcall	_I2C_Master_Write
  5598     0851  3A00               	xorlw	0
  5599     0852  1903               	skipnz
  5600     0853  2855               	goto	u5461
  5601     0854  2856               	goto	u5460
  5602     0855                     u5461:
  5603     0855  2857               	goto	l3548
  5604     0856                     u5460:
  5605     0856  282E               	goto	l3526
  5606     0857                     l3548:
  5607                           
  5608                           ;TH02.c: 131:     msb = I2C_Read_Byte();
  5609     0857  160A  158A  22E5  120A  158A  	fcall	_I2C_Read_Byte
  5610     085C  1683               	bsf	3,5	;RP0=1, select bank1
  5611     085D  1303               	bcf	3,6	;RP1=0, select bank1
  5612     085E  00B6               	movwf	??_TH02_GetConversionValue^(0+128)
  5613     085F  01B7               	clrf	(??_TH02_GetConversionValue^(0+128)+1)
  5614     0860  0836               	movf	??_TH02_GetConversionValue^(0+128),w
  5615     0861  00B8               	movwf	TH02_GetConversionValue@msb^(0+128)
  5616     0862  0837               	movf	(??_TH02_GetConversionValue+1)^(0+128),w
  5617     0863  00B9               	movwf	(TH02_GetConversionValue@msb+1)^(0+128)
  5618                           
  5619                           ;TH02.c: 132:     I2C_ACK();
  5620     0864  160A  158A  2241  120A  158A  	fcall	_I2C_ACK
  5621                           
  5622                           ;TH02.c: 133:     lsb = I2C_Read_Byte();
  5623     0869  160A  158A  22E5  120A  158A  	fcall	_I2C_Read_Byte
  5624     086E  1683               	bsf	3,5	;RP0=1, select bank1
  5625     086F  1303               	bcf	3,6	;RP1=0, select bank1
  5626     0870  00B6               	movwf	??_TH02_GetConversionValue^(0+128)
  5627     0871  01B7               	clrf	(??_TH02_GetConversionValue^(0+128)+1)
  5628     0872  0836               	movf	??_TH02_GetConversionValue^(0+128),w
  5629     0873  00BA               	movwf	TH02_GetConversionValue@lsb^(0+128)
  5630     0874  0837               	movf	(??_TH02_GetConversionValue+1)^(0+128),w
  5631     0875  00BB               	movwf	(TH02_GetConversionValue@lsb+1)^(0+128)
  5632                           
  5633                           ;TH02.c: 134:     I2C_NACK();
  5634     0876  160A  158A  224D  120A  158A  	fcall	_I2C_NACK
  5635                           
  5636                           ;TH02.c: 135:     I2C_Master_Stop();
  5637     087B  160A  158A  2238  120A  158A  	fcall	_I2C_Master_Stop
  5638     0880                     l3550:
  5639                           
  5640                           ;TH02.c: 138:     result = ((uint16_t)msb << 8) | lsb;
  5641     0880  1683               	bsf	3,5	;RP0=1, select bank1
  5642     0881  1303               	bcf	3,6	;RP1=0, select bank1
  5643     0882  0838               	movf	TH02_GetConversionValue@msb^(0+128),w
  5644     0883  00B7               	movwf	(??_TH02_GetConversionValue^(0+128)+1)
  5645     0884  01B6               	clrf	??_TH02_GetConversionValue^(0+128)
  5646     0885  083A               	movf	TH02_GetConversionValue@lsb^(0+128),w
  5647     0886  0436               	iorwf	??_TH02_GetConversionValue^(0+128),w
  5648     0887  00BF               	movwf	TH02_GetConversionValue@result^(0+128)
  5649     0888  083B               	movf	(TH02_GetConversionValue@lsb+1)^(0+128),w
  5650     0889  0437               	iorwf	(??_TH02_GetConversionValue+1)^(0+128),w
  5651     088A  00C0               	movwf	(TH02_GetConversionValue@result+1)^(0+128)
  5652     088B  01C1               	clrf	(TH02_GetConversionValue@result+2)^(0+128)
  5653     088C  01C2               	clrf	(TH02_GetConversionValue@result+3)^(0+128)
  5654     088D                     l3552:
  5655                           
  5656                           ;TH02.c: 141:     if (TH02_ReadRegister(3, &config) == 0) {
  5657     088D  30BC               	movlw	(low (TH02_GetConversionValue@config| 0))& (0+255)
  5658     088E  00F1               	movwf	TH02_ReadRegister@value
  5659     088F  3003               	movlw	3
  5660     0890  160A  158A  243D  120A  158A  	fcall	_TH02_ReadRegister
  5661     0895  3A00               	xorlw	0
  5662     0896  1D03               	skipz
  5663     0897  2899               	goto	u5471
  5664     0898  289A               	goto	u5470
  5665     0899                     u5471:
  5666     0899  29A3               	goto	l3570
  5667     089A                     u5470:
  5668     089A                     l3554:
  5669                           
  5670                           ;TH02.c: 142:         if (config & 0x10) {
  5671     089A  1683               	bsf	3,5	;RP0=1, select bank1
  5672     089B  1303               	bcf	3,6	;RP1=0, select bank1
  5673     089C  1E3C               	btfss	TH02_GetConversionValue@config^(0+128),4
  5674     089D  289F               	goto	u5481
  5675     089E  28A0               	goto	u5480
  5676     089F                     u5481:
  5677     089F  28FC               	goto	l3562
  5678     08A0                     u5480:
  5679     08A0                     l3556:
  5680                           
  5681                           ;TH02.c: 144:             result >>= 2;
  5682     08A0  3002               	movlw	2
  5683     08A1  00B6               	movwf	??_TH02_GetConversionValue^(0+128)
  5684     08A2                     u5495:
  5685     08A2  0D42               	rlf	(TH02_GetConversionValue@result+3)^(0+128),w
  5686     08A3  0CC2               	rrf	(TH02_GetConversionValue@result+3)^(0+128),f
  5687     08A4  0CC1               	rrf	(TH02_GetConversionValue@result+2)^(0+128),f
  5688     08A5  0CC0               	rrf	(TH02_GetConversionValue@result+1)^(0+128),f
  5689     08A6  0CBF               	rrf	TH02_GetConversionValue@result^(0+128),f
  5690     08A7  0BB6               	decfsz	(??_TH02_GetConversionValue^(0+128))& (0+127),f
  5691     08A8  28A2               	goto	u5495
  5692     08A9                     l3558:
  5693                           
  5694                           ;TH02.c: 145:             result *= 100;
  5695     08A9  3000               	movlw	0
  5696     08AA  00F3               	movwf	___lmul@multiplier+3
  5697     08AB  3000               	movlw	0
  5698     08AC  00F2               	movwf	___lmul@multiplier+2
  5699     08AD  3000               	movlw	0
  5700     08AE  00F1               	movwf	___lmul@multiplier+1
  5701     08AF  3064               	movlw	100
  5702     08B0  00F0               	movwf	___lmul@multiplier
  5703     08B1  0842               	movf	(TH02_GetConversionValue@result+3)^(0+128),w
  5704     08B2  00F7               	movwf	___lmul@multiplicand+3
  5705     08B3  0841               	movf	(TH02_GetConversionValue@result+2)^(0+128),w
  5706     08B4  00F6               	movwf	___lmul@multiplicand+2
  5707     08B5  0840               	movf	(TH02_GetConversionValue@result+1)^(0+128),w
  5708     08B6  00F5               	movwf	___lmul@multiplicand+1
  5709     08B7  083F               	movf	TH02_GetConversionValue@result^(0+128),w
  5710     08B8  00F4               	movwf	___lmul@multiplicand
  5711     08B9  160A  158A  2482  120A  158A  	fcall	___lmul
  5712     08BE  0873               	movf	?___lmul+3,w
  5713     08BF  1683               	bsf	3,5	;RP0=1, select bank1
  5714     08C0  1303               	bcf	3,6	;RP1=0, select bank1
  5715     08C1  00C2               	movwf	(TH02_GetConversionValue@result+3)^(0+128)
  5716     08C2  0872               	movf	?___lmul+2,w
  5717     08C3  00C1               	movwf	(TH02_GetConversionValue@result+2)^(0+128)
  5718     08C4  0871               	movf	?___lmul+1,w
  5719     08C5  00C0               	movwf	(TH02_GetConversionValue@result+1)^(0+128)
  5720     08C6  0870               	movf	?___lmul,w
  5721     08C7  00BF               	movwf	TH02_GetConversionValue@result^(0+128)
  5722     08C8                     l3560:
  5723                           
  5724                           ;TH02.c: 146:             result /= 32;
  5725     08C8  3000               	movlw	0
  5726     08C9  00F3               	movwf	___aldiv@divisor+3
  5727     08CA  3000               	movlw	0
  5728     08CB  00F2               	movwf	___aldiv@divisor+2
  5729     08CC  3000               	movlw	0
  5730     08CD  00F1               	movwf	___aldiv@divisor+1
  5731     08CE  3020               	movlw	32
  5732     08CF  00F0               	movwf	___aldiv@divisor
  5733     08D0  0842               	movf	(TH02_GetConversionValue@result+3)^(0+128),w
  5734     08D1  00F7               	movwf	___aldiv@dividend+3
  5735     08D2  0841               	movf	(TH02_GetConversionValue@result+2)^(0+128),w
  5736     08D3  00F6               	movwf	___aldiv@dividend+2
  5737     08D4  0840               	movf	(TH02_GetConversionValue@result+1)^(0+128),w
  5738     08D5  00F5               	movwf	___aldiv@dividend+1
  5739     08D6  083F               	movf	TH02_GetConversionValue@result^(0+128),w
  5740     08D7  00F4               	movwf	___aldiv@dividend
  5741     08D8  160A  158A  2767  120A  158A  	fcall	___aldiv
  5742     08DD  0873               	movf	?___aldiv+3,w
  5743     08DE  1683               	bsf	3,5	;RP0=1, select bank1
  5744     08DF  1303               	bcf	3,6	;RP1=0, select bank1
  5745     08E0  00C2               	movwf	(TH02_GetConversionValue@result+3)^(0+128)
  5746     08E1  0872               	movf	?___aldiv+2,w
  5747     08E2  00C1               	movwf	(TH02_GetConversionValue@result+2)^(0+128)
  5748     08E3  0871               	movf	?___aldiv+1,w
  5749     08E4  00C0               	movwf	(TH02_GetConversionValue@result+1)^(0+128)
  5750     08E5  0870               	movf	?___aldiv,w
  5751     08E6  00BF               	movwf	TH02_GetConversionValue@result^(0+128)
  5752                           
  5753                           ;TH02.c: 147:             result -= 5000;
  5754     08E7  3078               	movlw	120
  5755     08E8  07BF               	addwf	TH02_GetConversionValue@result^(0+128),f
  5756     08E9  30EC               	movlw	236
  5757     08EA  1803               	skipnc
  5758     08EB  30ED               	movlw	237
  5759     08EC  07C0               	addwf	(TH02_GetConversionValue@result+1)^(0+128),f
  5760     08ED  30FF               	movlw	255
  5761     08EE  1C03               	skipc
  5762     08EF  07C1               	addwf	(TH02_GetConversionValue@result+2)^(0+128),f
  5763     08F0  30FF               	movlw	255
  5764     08F1  1C03               	skipc
  5765     08F2  07C2               	addwf	(TH02_GetConversionValue@result+3)^(0+128),f
  5766                           
  5767                           ;TH02.c: 148:             _last_temp = result;
  5768     08F3  0842               	movf	(TH02_GetConversionValue@result+3)^(0+128),w
  5769     08F4  00DF               	movwf	(__last_temp+3)^(0+128)
  5770     08F5  0841               	movf	(TH02_GetConversionValue@result+2)^(0+128),w
  5771     08F6  00DE               	movwf	(__last_temp+2)^(0+128)
  5772     08F7  0840               	movf	(TH02_GetConversionValue@result+1)^(0+128),w
  5773     08F8  00DD               	movwf	(__last_temp+1)^(0+128)
  5774     08F9  083F               	movf	TH02_GetConversionValue@result^(0+128),w
  5775     08FA  00DC               	movwf	__last_temp^(0+128)
  5776                           
  5777                           ;TH02.c: 149:             } else {
  5778     08FB  2957               	goto	l3568
  5779     08FC                     l3562:
  5780                           
  5781                           ;TH02.c: 151:             result >>= 4;
  5782     08FC  3004               	movlw	4
  5783     08FD  00B6               	movwf	??_TH02_GetConversionValue^(0+128)
  5784     08FE                     u5505:
  5785     08FE  0D42               	rlf	(TH02_GetConversionValue@result+3)^(0+128),w
  5786     08FF  0CC2               	rrf	(TH02_GetConversionValue@result+3)^(0+128),f
  5787     0900  0CC1               	rrf	(TH02_GetConversionValue@result+2)^(0+128),f
  5788     0901  0CC0               	rrf	(TH02_GetConversionValue@result+1)^(0+128),f
  5789     0902  0CBF               	rrf	TH02_GetConversionValue@result^(0+128),f
  5790     0903  0BB6               	decfsz	(??_TH02_GetConversionValue^(0+128))& (0+127),f
  5791     0904  28FE               	goto	u5505
  5792     0905                     l3564:
  5793                           
  5794                           ;TH02.c: 152:             result *= 100;
  5795     0905  3000               	movlw	0
  5796     0906  00F3               	movwf	___lmul@multiplier+3
  5797     0907  3000               	movlw	0
  5798     0908  00F2               	movwf	___lmul@multiplier+2
  5799     0909  3000               	movlw	0
  5800     090A  00F1               	movwf	___lmul@multiplier+1
  5801     090B  3064               	movlw	100
  5802     090C  00F0               	movwf	___lmul@multiplier
  5803     090D  0842               	movf	(TH02_GetConversionValue@result+3)^(0+128),w
  5804     090E  00F7               	movwf	___lmul@multiplicand+3
  5805     090F  0841               	movf	(TH02_GetConversionValue@result+2)^(0+128),w
  5806     0910  00F6               	movwf	___lmul@multiplicand+2
  5807     0911  0840               	movf	(TH02_GetConversionValue@result+1)^(0+128),w
  5808     0912  00F5               	movwf	___lmul@multiplicand+1
  5809     0913  083F               	movf	TH02_GetConversionValue@result^(0+128),w
  5810     0914  00F4               	movwf	___lmul@multiplicand
  5811     0915  160A  158A  2482  120A  158A  	fcall	___lmul
  5812     091A  0873               	movf	?___lmul+3,w
  5813     091B  1683               	bsf	3,5	;RP0=1, select bank1
  5814     091C  1303               	bcf	3,6	;RP1=0, select bank1
  5815     091D  00C2               	movwf	(TH02_GetConversionValue@result+3)^(0+128)
  5816     091E  0872               	movf	?___lmul+2,w
  5817     091F  00C1               	movwf	(TH02_GetConversionValue@result+2)^(0+128)
  5818     0920  0871               	movf	?___lmul+1,w
  5819     0921  00C0               	movwf	(TH02_GetConversionValue@result+1)^(0+128)
  5820     0922  0870               	movf	?___lmul,w
  5821     0923  00BF               	movwf	TH02_GetConversionValue@result^(0+128)
  5822     0924                     l3566:
  5823                           
  5824                           ;TH02.c: 153:             result /= 16;
  5825     0924  3000               	movlw	0
  5826     0925  00F3               	movwf	___aldiv@divisor+3
  5827     0926  3000               	movlw	0
  5828     0927  00F2               	movwf	___aldiv@divisor+2
  5829     0928  3000               	movlw	0
  5830     0929  00F1               	movwf	___aldiv@divisor+1
  5831     092A  3010               	movlw	16
  5832     092B  00F0               	movwf	___aldiv@divisor
  5833     092C  0842               	movf	(TH02_GetConversionValue@result+3)^(0+128),w
  5834     092D  00F7               	movwf	___aldiv@dividend+3
  5835     092E  0841               	movf	(TH02_GetConversionValue@result+2)^(0+128),w
  5836     092F  00F6               	movwf	___aldiv@dividend+2
  5837     0930  0840               	movf	(TH02_GetConversionValue@result+1)^(0+128),w
  5838     0931  00F5               	movwf	___aldiv@dividend+1
  5839     0932  083F               	movf	TH02_GetConversionValue@result^(0+128),w
  5840     0933  00F4               	movwf	___aldiv@dividend
  5841     0934  160A  158A  2767  120A  158A  	fcall	___aldiv
  5842     0939  0873               	movf	?___aldiv+3,w
  5843     093A  1683               	bsf	3,5	;RP0=1, select bank1
  5844     093B  1303               	bcf	3,6	;RP1=0, select bank1
  5845     093C  00C2               	movwf	(TH02_GetConversionValue@result+3)^(0+128)
  5846     093D  0872               	movf	?___aldiv+2,w
  5847     093E  00C1               	movwf	(TH02_GetConversionValue@result+2)^(0+128)
  5848     093F  0871               	movf	?___aldiv+1,w
  5849     0940  00C0               	movwf	(TH02_GetConversionValue@result+1)^(0+128)
  5850     0941  0870               	movf	?___aldiv,w
  5851     0942  00BF               	movwf	TH02_GetConversionValue@result^(0+128)
  5852                           
  5853                           ;TH02.c: 154:             result -= 2400;
  5854     0943  30A0               	movlw	160
  5855     0944  07BF               	addwf	TH02_GetConversionValue@result^(0+128),f
  5856     0945  30F6               	movlw	246
  5857     0946  1803               	skipnc
  5858     0947  30F7               	movlw	247
  5859     0948  07C0               	addwf	(TH02_GetConversionValue@result+1)^(0+128),f
  5860     0949  30FF               	movlw	255
  5861     094A  1C03               	skipc
  5862     094B  07C1               	addwf	(TH02_GetConversionValue@result+2)^(0+128),f
  5863     094C  30FF               	movlw	255
  5864     094D  1C03               	skipc
  5865     094E  07C2               	addwf	(TH02_GetConversionValue@result+3)^(0+128),f
  5866                           
  5867                           ;TH02.c: 155:             _last_rh = result;
  5868     094F  0842               	movf	(TH02_GetConversionValue@result+3)^(0+128),w
  5869     0950  00DB               	movwf	(__last_rh+3)^(0+128)
  5870     0951  0841               	movf	(TH02_GetConversionValue@result+2)^(0+128),w
  5871     0952  00DA               	movwf	(__last_rh+2)^(0+128)
  5872     0953  0840               	movf	(TH02_GetConversionValue@result+1)^(0+128),w
  5873     0954  00D9               	movwf	(__last_rh+1)^(0+128)
  5874     0955  083F               	movf	TH02_GetConversionValue@result^(0+128),w
  5875     0956  00D8               	movwf	__last_rh^(0+128)
  5876     0957                     l3568:
  5877                           
  5878                           ;TH02.c: 159:         ret = roundInt(result / 10.0f);
  5879     0957  3041               	movlw	65
  5880     0958  1283               	bcf	3,5	;RP0=0, select bank0
  5881     0959  1303               	bcf	3,6	;RP1=0, select bank0
  5882     095A  00A3               	movwf	___fldiv@a+3
  5883     095B  3020               	movlw	32
  5884     095C  00A2               	movwf	___fldiv@a+2
  5885     095D  3000               	movlw	0
  5886     095E  00A1               	movwf	___fldiv@a+1
  5887     095F  3000               	movlw	0
  5888     0960  00A0               	movwf	___fldiv@a
  5889     0961  1683               	bsf	3,5	;RP0=1, select bank1
  5890     0962  1303               	bcf	3,6	;RP1=0, select bank1
  5891     0963  0842               	movf	(TH02_GetConversionValue@result+3)^(0+128),w
  5892     0964  00F3               	movwf	___xxtofl@val+3
  5893     0965  0841               	movf	(TH02_GetConversionValue@result+2)^(0+128),w
  5894     0966  00F2               	movwf	___xxtofl@val+2
  5895     0967  0840               	movf	(TH02_GetConversionValue@result+1)^(0+128),w
  5896     0968  00F1               	movwf	___xxtofl@val+1
  5897     0969  083F               	movf	TH02_GetConversionValue@result^(0+128),w
  5898     096A  00F0               	movwf	___xxtofl@val
  5899     096B  3001               	movlw	1
  5900     096C  160A  118A  2303  120A  158A  	fcall	___xxtofl
  5901     0971  0873               	movf	?___xxtofl+3,w
  5902     0972  1283               	bcf	3,5	;RP0=0, select bank0
  5903     0973  1303               	bcf	3,6	;RP1=0, select bank0
  5904     0974  00A7               	movwf	___fldiv@b+3
  5905     0975  0872               	movf	?___xxtofl+2,w
  5906     0976  00A6               	movwf	___fldiv@b+2
  5907     0977  0871               	movf	?___xxtofl+1,w
  5908     0978  00A5               	movwf	___fldiv@b+1
  5909     0979  0870               	movf	?___xxtofl,w
  5910     097A  00A4               	movwf	___fldiv@b
  5911     097B  120A  158A  21AA  120A  158A  	fcall	___fldiv
  5912     0980  1283               	bcf	3,5	;RP0=0, select bank0
  5913     0981  1303               	bcf	3,6	;RP1=0, select bank0
  5914     0982  0823               	movf	?___fldiv+3,w
  5915     0983  1683               	bsf	3,5	;RP0=1, select bank1
  5916     0984  1303               	bcf	3,6	;RP1=0, select bank1
  5917     0985  00B3               	movwf	(roundInt@value+3)^(0+128)
  5918     0986  1283               	bcf	3,5	;RP0=0, select bank0
  5919     0987  1303               	bcf	3,6	;RP1=0, select bank0
  5920     0988  0822               	movf	?___fldiv+2,w
  5921     0989  1683               	bsf	3,5	;RP0=1, select bank1
  5922     098A  1303               	bcf	3,6	;RP1=0, select bank1
  5923     098B  00B2               	movwf	(roundInt@value+2)^(0+128)
  5924     098C  1283               	bcf	3,5	;RP0=0, select bank0
  5925     098D  1303               	bcf	3,6	;RP1=0, select bank0
  5926     098E  0821               	movf	?___fldiv+1,w
  5927     098F  1683               	bsf	3,5	;RP0=1, select bank1
  5928     0990  1303               	bcf	3,6	;RP1=0, select bank1
  5929     0991  00B1               	movwf	(roundInt@value+1)^(0+128)
  5930     0992  1283               	bcf	3,5	;RP0=0, select bank0
  5931     0993  1303               	bcf	3,6	;RP1=0, select bank0
  5932     0994  0820               	movf	?___fldiv,w
  5933     0995  1683               	bsf	3,5	;RP0=1, select bank1
  5934     0996  1303               	bcf	3,6	;RP1=0, select bank1
  5935     0997  00B0               	movwf	roundInt@value^(0+128)
  5936     0998  120A  118A  2028  120A  158A  	fcall	_roundInt
  5937     099D  1683               	bsf	3,5	;RP0=1, select bank1
  5938     099E  1303               	bcf	3,6	;RP1=0, select bank1
  5939     099F  0831               	movf	(?_roundInt+1)^(0+128),w
  5940     09A0  00BE               	movwf	(TH02_GetConversionValue@ret+1)^(0+128)
  5941     09A1  0830               	movf	?_roundInt^(0+128),w
  5942     09A2  00BD               	movwf	TH02_GetConversionValue@ret^(0+128)
  5943     09A3                     l3570:
  5944                           
  5945                           ;TH02.c: 162:     return ret;
  5946     09A3  1683               	bsf	3,5	;RP0=1, select bank1
  5947     09A4  1303               	bcf	3,6	;RP1=0, select bank1
  5948     09A5  083E               	movf	(TH02_GetConversionValue@ret+1)^(0+128),w
  5949     09A6  00B5               	movwf	(?_TH02_GetConversionValue+1)^(0+128)
  5950     09A7  083D               	movf	TH02_GetConversionValue@ret^(0+128),w
  5951     09A8  00B4               	movwf	?_TH02_GetConversionValue^(0+128)
  5952     09A9                     l179:
  5953     09A9  0008               	return
  5954     09AA                     __end_of_TH02_GetConversionValue:
  5955                           
  5956                           	psect	text24
  5957     0028                     __ptext24:	
  5958 ;; *************** function _roundInt *****************
  5959 ;; Defined at:
  5960 ;;		line 67 in file "TH02.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  value           4   16[BANK1 ] float 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  2   16[BANK1 ] short 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5974 ;;      Params:         0       0       4       0       0
  5975 ;;      Locals:         0       0       0       0       0
  5976 ;;      Temps:          0       0       0       0       0
  5977 ;;      Totals:         0       0       4       0       0
  5978 ;;Total ram usage:        4 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 1
  5981 ;; This function calls:
  5982 ;;		___fladd
  5983 ;;		___flge
  5984 ;;		___fltol
  5985 ;;		_ceilf
  5986 ;;		_floorf
  5987 ;; This function is called by:
  5988 ;;		_TH02_GetConversionValue
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992     0028                     _roundInt:	
  5993                           ;psect for function _roundInt
  5994                           
  5995     0028                     l3018:	
  5996                           ;incstack = 0
  5997                           ; Regs used in _roundInt: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5998                           
  5999                           
  6000                           ;TH02.c: 68:     if (value >= 0.0f) {
  6001     0028  1683               	bsf	3,5	;RP0=1, select bank1
  6002     0029  1303               	bcf	3,6	;RP1=0, select bank1
  6003     002A  0833               	movf	(roundInt@value+3)^(0+128),w
  6004     002B  00F3               	movwf	___flge@ff1+3
  6005     002C  0832               	movf	(roundInt@value+2)^(0+128),w
  6006     002D  00F2               	movwf	___flge@ff1+2
  6007     002E  0831               	movf	(roundInt@value+1)^(0+128),w
  6008     002F  00F1               	movwf	___flge@ff1+1
  6009     0030  0830               	movf	roundInt@value^(0+128),w
  6010     0031  00F0               	movwf	___flge@ff1
  6011     0032  3000               	movlw	0
  6012     0033  00F7               	movwf	___flge@ff2+3
  6013     0034  3000               	movlw	0
  6014     0035  00F6               	movwf	___flge@ff2+2
  6015     0036  3000               	movlw	0
  6016     0037  00F5               	movwf	___flge@ff2+1
  6017     0038  3000               	movlw	0
  6018     0039  00F4               	movwf	___flge@ff2
  6019     003A  160A  118A  2261  120A  118A  	fcall	___flge
  6020     003F  1C03               	btfss	3,0
  6021     0040  2842               	goto	u4361
  6022     0041  2843               	goto	u4360
  6023     0042                     u4361:
  6024     0042  2892               	goto	l3022
  6025     0043                     u4360:
  6026     0043                     l3020:
  6027                           
  6028                           ;TH02.c: 69:         value = floorf(value + 0.5f);
  6029     0043  303F               	movlw	63
  6030     0044  1283               	bcf	3,5	;RP0=0, select bank0
  6031     0045  1303               	bcf	3,6	;RP1=0, select bank0
  6032     0046  00D7               	movwf	___fladd@b+3
  6033     0047  3000               	movlw	0
  6034     0048  00D6               	movwf	___fladd@b+2
  6035     0049  3000               	movlw	0
  6036     004A  00D5               	movwf	___fladd@b+1
  6037     004B  3000               	movlw	0
  6038     004C  00D4               	movwf	___fladd@b
  6039     004D  1683               	bsf	3,5	;RP0=1, select bank1
  6040     004E  1303               	bcf	3,6	;RP1=0, select bank1
  6041     004F  0833               	movf	(roundInt@value+3)^(0+128),w
  6042     0050  1283               	bcf	3,5	;RP0=0, select bank0
  6043     0051  1303               	bcf	3,6	;RP1=0, select bank0
  6044     0052  00DB               	movwf	___fladd@a+3
  6045     0053  1683               	bsf	3,5	;RP0=1, select bank1
  6046     0054  1303               	bcf	3,6	;RP1=0, select bank1
  6047     0055  0832               	movf	(roundInt@value+2)^(0+128),w
  6048     0056  1283               	bcf	3,5	;RP0=0, select bank0
  6049     0057  1303               	bcf	3,6	;RP1=0, select bank0
  6050     0058  00DA               	movwf	___fladd@a+2
  6051     0059  1683               	bsf	3,5	;RP0=1, select bank1
  6052     005A  1303               	bcf	3,6	;RP1=0, select bank1
  6053     005B  0831               	movf	(roundInt@value+1)^(0+128),w
  6054     005C  1283               	bcf	3,5	;RP0=0, select bank0
  6055     005D  1303               	bcf	3,6	;RP1=0, select bank0
  6056     005E  00D9               	movwf	___fladd@a+1
  6057     005F  1683               	bsf	3,5	;RP0=1, select bank1
  6058     0060  1303               	bcf	3,6	;RP1=0, select bank1
  6059     0061  0830               	movf	roundInt@value^(0+128),w
  6060     0062  1283               	bcf	3,5	;RP0=0, select bank0
  6061     0063  1303               	bcf	3,6	;RP1=0, select bank0
  6062     0064  00D8               	movwf	___fladd@a
  6063     0065  120A  158A  25B0  120A  118A  	fcall	___fladd
  6064     006A  1283               	bcf	3,5	;RP0=0, select bank0
  6065     006B  1303               	bcf	3,6	;RP1=0, select bank0
  6066     006C  0857               	movf	?___fladd+3,w
  6067     006D  00EB               	movwf	floorf@x+3
  6068     006E  0856               	movf	?___fladd+2,w
  6069     006F  00EA               	movwf	floorf@x+2
  6070     0070  0855               	movf	?___fladd+1,w
  6071     0071  00E9               	movwf	floorf@x+1
  6072     0072  0854               	movf	?___fladd,w
  6073     0073  00E8               	movwf	floorf@x
  6074     0074  160A  118A  25A8  120A  118A  	fcall	_floorf
  6075     0079  1283               	bcf	3,5	;RP0=0, select bank0
  6076     007A  1303               	bcf	3,6	;RP1=0, select bank0
  6077     007B  086B               	movf	?_floorf+3,w
  6078     007C  1683               	bsf	3,5	;RP0=1, select bank1
  6079     007D  1303               	bcf	3,6	;RP1=0, select bank1
  6080     007E  00B3               	movwf	(roundInt@value+3)^(0+128)
  6081     007F  1283               	bcf	3,5	;RP0=0, select bank0
  6082     0080  1303               	bcf	3,6	;RP1=0, select bank0
  6083     0081  086A               	movf	?_floorf+2,w
  6084     0082  1683               	bsf	3,5	;RP0=1, select bank1
  6085     0083  1303               	bcf	3,6	;RP1=0, select bank1
  6086     0084  00B2               	movwf	(roundInt@value+2)^(0+128)
  6087     0085  1283               	bcf	3,5	;RP0=0, select bank0
  6088     0086  1303               	bcf	3,6	;RP1=0, select bank0
  6089     0087  0869               	movf	?_floorf+1,w
  6090     0088  1683               	bsf	3,5	;RP0=1, select bank1
  6091     0089  1303               	bcf	3,6	;RP1=0, select bank1
  6092     008A  00B1               	movwf	(roundInt@value+1)^(0+128)
  6093     008B  1283               	bcf	3,5	;RP0=0, select bank0
  6094     008C  1303               	bcf	3,6	;RP1=0, select bank0
  6095     008D  0868               	movf	?_floorf,w
  6096     008E  1683               	bsf	3,5	;RP0=1, select bank1
  6097     008F  1303               	bcf	3,6	;RP1=0, select bank1
  6098     0090  00B0               	movwf	roundInt@value^(0+128)
  6099                           
  6100                           ;TH02.c: 70:         } else {
  6101     0091  28E0               	goto	l3024
  6102     0092                     l3022:
  6103                           
  6104                           ;TH02.c: 71:         value = ceilf(value - 0.5f);
  6105     0092  30BF               	movlw	191
  6106     0093  1283               	bcf	3,5	;RP0=0, select bank0
  6107     0094  1303               	bcf	3,6	;RP1=0, select bank0
  6108     0095  00D7               	movwf	___fladd@b+3
  6109     0096  3000               	movlw	0
  6110     0097  00D6               	movwf	___fladd@b+2
  6111     0098  3000               	movlw	0
  6112     0099  00D5               	movwf	___fladd@b+1
  6113     009A  3000               	movlw	0
  6114     009B  00D4               	movwf	___fladd@b
  6115     009C  1683               	bsf	3,5	;RP0=1, select bank1
  6116     009D  1303               	bcf	3,6	;RP1=0, select bank1
  6117     009E  0833               	movf	(roundInt@value+3)^(0+128),w
  6118     009F  1283               	bcf	3,5	;RP0=0, select bank0
  6119     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  6120     00A1  00DB               	movwf	___fladd@a+3
  6121     00A2  1683               	bsf	3,5	;RP0=1, select bank1
  6122     00A3  1303               	bcf	3,6	;RP1=0, select bank1
  6123     00A4  0832               	movf	(roundInt@value+2)^(0+128),w
  6124     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6125     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  6126     00A7  00DA               	movwf	___fladd@a+2
  6127     00A8  1683               	bsf	3,5	;RP0=1, select bank1
  6128     00A9  1303               	bcf	3,6	;RP1=0, select bank1
  6129     00AA  0831               	movf	(roundInt@value+1)^(0+128),w
  6130     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  6131     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  6132     00AD  00D9               	movwf	___fladd@a+1
  6133     00AE  1683               	bsf	3,5	;RP0=1, select bank1
  6134     00AF  1303               	bcf	3,6	;RP1=0, select bank1
  6135     00B0  0830               	movf	roundInt@value^(0+128),w
  6136     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  6137     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  6138     00B3  00D8               	movwf	___fladd@a
  6139     00B4  120A  158A  25B0  120A  118A  	fcall	___fladd
  6140     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  6141     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  6142     00BB  0857               	movf	?___fladd+3,w
  6143     00BC  00EB               	movwf	ceilf@x+3
  6144     00BD  0856               	movf	?___fladd+2,w
  6145     00BE  00EA               	movwf	ceilf@x+2
  6146     00BF  0855               	movf	?___fladd+1,w
  6147     00C0  00E9               	movwf	ceilf@x+1
  6148     00C1  0854               	movf	?___fladd,w
  6149     00C2  00E8               	movwf	ceilf@x
  6150     00C3  160A  118A  2489  120A  118A  	fcall	_ceilf
  6151     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  6152     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  6153     00CA  086B               	movf	?_ceilf+3,w
  6154     00CB  1683               	bsf	3,5	;RP0=1, select bank1
  6155     00CC  1303               	bcf	3,6	;RP1=0, select bank1
  6156     00CD  00B3               	movwf	(roundInt@value+3)^(0+128)
  6157     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  6158     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  6159     00D0  086A               	movf	?_ceilf+2,w
  6160     00D1  1683               	bsf	3,5	;RP0=1, select bank1
  6161     00D2  1303               	bcf	3,6	;RP1=0, select bank1
  6162     00D3  00B2               	movwf	(roundInt@value+2)^(0+128)
  6163     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  6164     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  6165     00D6  0869               	movf	?_ceilf+1,w
  6166     00D7  1683               	bsf	3,5	;RP0=1, select bank1
  6167     00D8  1303               	bcf	3,6	;RP1=0, select bank1
  6168     00D9  00B1               	movwf	(roundInt@value+1)^(0+128)
  6169     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  6170     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  6171     00DC  0868               	movf	?_ceilf,w
  6172     00DD  1683               	bsf	3,5	;RP0=1, select bank1
  6173     00DE  1303               	bcf	3,6	;RP1=0, select bank1
  6174     00DF  00B0               	movwf	roundInt@value^(0+128)
  6175     00E0                     l3024:
  6176                           
  6177                           ;TH02.c: 73:     return (int16_t)value;
  6178     00E0  0833               	movf	(roundInt@value+3)^(0+128),w
  6179     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  6180     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  6181     00E3  00EB               	movwf	___fltol@f1+3
  6182     00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6183     00E5  1303               	bcf	3,6	;RP1=0, select bank1
  6184     00E6  0832               	movf	(roundInt@value+2)^(0+128),w
  6185     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  6186     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  6187     00E9  00EA               	movwf	___fltol@f1+2
  6188     00EA  1683               	bsf	3,5	;RP0=1, select bank1
  6189     00EB  1303               	bcf	3,6	;RP1=0, select bank1
  6190     00EC  0831               	movf	(roundInt@value+1)^(0+128),w
  6191     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  6192     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  6193     00EF  00E9               	movwf	___fltol@f1+1
  6194     00F0  1683               	bsf	3,5	;RP0=1, select bank1
  6195     00F1  1303               	bcf	3,6	;RP1=0, select bank1
  6196     00F2  0830               	movf	roundInt@value^(0+128),w
  6197     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  6198     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  6199     00F5  00E8               	movwf	___fltol@f1
  6200     00F6  160A  158A  26DB  120A  118A  	fcall	___fltol
  6201     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6202     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  6203     00FD  0869               	movf	?___fltol+1,w
  6204     00FE  1683               	bsf	3,5	;RP0=1, select bank1
  6205     00FF  1303               	bcf	3,6	;RP1=0, select bank1
  6206     0100  00B1               	movwf	(?_roundInt+1)^(0+128)
  6207     0101  1283               	bcf	3,5	;RP0=0, select bank0
  6208     0102  1303               	bcf	3,6	;RP1=0, select bank0
  6209     0103  0868               	movf	?___fltol,w
  6210     0104  1683               	bsf	3,5	;RP0=1, select bank1
  6211     0105  1303               	bcf	3,6	;RP1=0, select bank1
  6212     0106  00B0               	movwf	?_roundInt^(0+128)
  6213     0107                     l168:
  6214     0107  0008               	return
  6215     0108                     __end_of_roundInt:
  6216                           
  6217                           	psect	text25
  6218     15A8                     __ptext25:	
  6219 ;; *************** function _floorf *****************
  6220 ;; Defined at:
  6221 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  x               4   72[BANK0 ] float 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  u               4   12[BANK1 ] struct .
  6226 ;;  m               4    6[BANK1 ] unsigned long 
  6227 ;;  e               2   10[BANK1 ] int 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  4   72[BANK0 ] float 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0, btemp+1
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6237 ;;      Params:         0       4       0       0       0
  6238 ;;      Locals:         0       0      10       0       0
  6239 ;;      Temps:          0       0       6       0       0
  6240 ;;      Totals:         0       4      16       0       0
  6241 ;;Total ram usage:       20 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_roundInt
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250     15A8                     _floorf:	
  6251                           ;psect for function _floorf
  6252                           
  6253     15A8                     l2562:	
  6254                           ;incstack = 0
  6255                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  6256                           
  6257     15A8  1683               	bsf	3,5	;RP0=1, select bank1
  6258     15A9  1303               	bcf	3,6	;RP1=0, select bank1
  6259     15AA  0849               	movf	(floorf@F521+3)^(0+128),w
  6260     15AB  00AF               	movwf	(floorf@u+3)^(0+128)
  6261     15AC  0848               	movf	(floorf@F521+2)^(0+128),w
  6262     15AD  00AE               	movwf	(floorf@u+2)^(0+128)
  6263     15AE  0847               	movf	(floorf@F521+1)^(0+128),w
  6264     15AF  00AD               	movwf	(floorf@u+1)^(0+128)
  6265     15B0  0846               	movf	floorf@F521^(0+128),w
  6266     15B1  00AC               	movwf	floorf@u^(0+128)
  6267     15B2  1283               	bcf	3,5	;RP0=0, select bank0
  6268     15B3  1303               	bcf	3,6	;RP1=0, select bank0
  6269     15B4  086B               	movf	floorf@x+3,w
  6270     15B5  1683               	bsf	3,5	;RP0=1, select bank1
  6271     15B6  1303               	bcf	3,6	;RP1=0, select bank1
  6272     15B7  00AF               	movwf	(floorf@u+3)^(0+128)
  6273     15B8  1283               	bcf	3,5	;RP0=0, select bank0
  6274     15B9  1303               	bcf	3,6	;RP1=0, select bank0
  6275     15BA  086A               	movf	floorf@x+2,w
  6276     15BB  1683               	bsf	3,5	;RP0=1, select bank1
  6277     15BC  1303               	bcf	3,6	;RP1=0, select bank1
  6278     15BD  00AE               	movwf	(floorf@u+2)^(0+128)
  6279     15BE  1283               	bcf	3,5	;RP0=0, select bank0
  6280     15BF  1303               	bcf	3,6	;RP1=0, select bank0
  6281     15C0  0869               	movf	floorf@x+1,w
  6282     15C1  1683               	bsf	3,5	;RP0=1, select bank1
  6283     15C2  1303               	bcf	3,6	;RP1=0, select bank1
  6284     15C3  00AD               	movwf	(floorf@u+1)^(0+128)
  6285     15C4  1283               	bcf	3,5	;RP0=0, select bank0
  6286     15C5  1303               	bcf	3,6	;RP1=0, select bank0
  6287     15C6  0868               	movf	floorf@x,w
  6288     15C7  1683               	bsf	3,5	;RP0=1, select bank1
  6289     15C8  1303               	bcf	3,6	;RP1=0, select bank1
  6290     15C9  00AC               	movwf	floorf@u^(0+128)
  6291     15CA                     l2564:
  6292     15CA  082C               	movf	floorf@u^(0+128),w
  6293     15CB  00A0               	movwf	??_floorf^(0+128)
  6294     15CC  082D               	movf	(floorf@u+1)^(0+128),w
  6295     15CD  00A1               	movwf	(??_floorf^(0+128)+1)
  6296     15CE  082E               	movf	(floorf@u+2)^(0+128),w
  6297     15CF  00A2               	movwf	(??_floorf^(0+128)+2)
  6298     15D0  082F               	movf	(floorf@u+3)^(0+128),w
  6299     15D1  00A3               	movwf	(??_floorf^(0+128)+3)
  6300     15D2  3017               	movlw	23
  6301     15D3                     u3335:
  6302     15D3  1003               	clrc
  6303     15D4  0CA3               	rrf	(??_floorf^(0+128)+3),f
  6304     15D5  0CA2               	rrf	(??_floorf^(0+128)+2),f
  6305     15D6  0CA1               	rrf	(??_floorf^(0+128)+1),f
  6306     15D7  0CA0               	rrf	??_floorf^(0+128),f
  6307     15D8                     u3330:
  6308     15D8  3EFF               	addlw	-1
  6309     15D9  1D03               	skipz
  6310     15DA  2DD3               	goto	u3335
  6311     15DB  30FF               	movlw	255
  6312     15DC  0520               	andwf	??_floorf^(0+128),w
  6313     15DD  00A4               	movwf	(??_floorf+4)^(0+128)
  6314     15DE  3000               	movlw	0
  6315     15DF  0521               	andwf	(??_floorf+1)^(0+128),w
  6316     15E0  00A5               	movwf	(??_floorf+5)^(0+128)
  6317     15E1  0824               	movf	(??_floorf+4)^(0+128),w
  6318     15E2  3E81               	addlw	129
  6319     15E3  00AA               	movwf	floorf@e^(0+128)
  6320     15E4  0825               	movf	(??_floorf+5)^(0+128),w
  6321     15E5  1803               	skipnc
  6322     15E6  3E01               	addlw	1
  6323     15E7  3EFF               	addlw	255
  6324     15E8  00AB               	movwf	(floorf@e+1)^(0+128)
  6325     15E9                     l2566:
  6326     15E9  082B               	movf	(floorf@e+1)^(0+128),w
  6327     15EA  3A80               	xorlw	128
  6328     15EB  00FF               	movwf	btemp+1
  6329     15EC  3080               	movlw	128
  6330     15ED  027F               	subwf	btemp+1,w
  6331     15EE  1D03               	skipz
  6332     15EF  2DF2               	goto	u3345
  6333     15F0  3017               	movlw	23
  6334     15F1  022A               	subwf	floorf@e^(0+128),w
  6335     15F2                     u3345:
  6336     15F2  1C03               	skipc
  6337     15F3  2DF5               	goto	u3341
  6338     15F4  2DF6               	goto	u3340
  6339     15F5                     u3341:
  6340     15F5  2DF7               	goto	l791
  6341     15F6                     u3340:
  6342     15F6                     l2568:
  6343     15F6  2EC6               	goto	l792
  6344     15F7                     l791:
  6345     15F7  1683               	bsf	3,5	;RP0=1, select bank1
  6346     15F8  1303               	bcf	3,6	;RP1=0, select bank1
  6347     15F9  1BAB               	btfsc	(floorf@e+1)^(0+128),7
  6348     15FA  2DFC               	goto	u3351
  6349     15FB  2DFD               	goto	u3350
  6350     15FC                     u3351:
  6351     15FC  2E6D               	goto	l2582
  6352     15FD                     u3350:
  6353     15FD                     l2570:
  6354     15FD  0A2A               	incf	floorf@e^(0+128),w
  6355     15FE  00FF               	movwf	btemp+1
  6356     15FF  30FF               	movlw	255
  6357     1600  00A0               	movwf	??_floorf^(0+128)
  6358     1601  30FF               	movlw	255
  6359     1602  00A1               	movwf	(??_floorf^(0+128)+1)
  6360     1603  307F               	movlw	127
  6361     1604  00A2               	movwf	(??_floorf^(0+128)+2)
  6362     1605  3000               	movlw	0
  6363     1606  00A3               	movwf	(??_floorf^(0+128)+3)
  6364     1607  2E0D               	goto	u3360
  6365     1608                     u3365:
  6366     1608  0D23               	rlf	(??_floorf^(0+128)+3),w
  6367     1609  0CA3               	rrf	(??_floorf^(0+128)+3),f
  6368     160A  0CA2               	rrf	(??_floorf^(0+128)+2),f
  6369     160B  0CA1               	rrf	(??_floorf^(0+128)+1),f
  6370     160C  0CA0               	rrf	??_floorf^(0+128),f
  6371     160D                     u3360:
  6372     160D  0BFF               	decfsz	btemp+1,f
  6373     160E  2E08               	goto	u3365
  6374     160F  0823               	movf	(??_floorf+3)^(0+128),w
  6375     1610  00A9               	movwf	(floorf@m+3)^(0+128)
  6376     1611  0822               	movf	(??_floorf+2)^(0+128),w
  6377     1612  00A8               	movwf	(floorf@m+2)^(0+128)
  6378     1613  0821               	movf	(??_floorf+1)^(0+128),w
  6379     1614  00A7               	movwf	(floorf@m+1)^(0+128)
  6380     1615  0820               	movf	??_floorf^(0+128),w
  6381     1616  00A6               	movwf	floorf@m^(0+128)
  6382     1617                     l2572:
  6383     1617  0826               	movf	floorf@m^(0+128),w
  6384     1618  052C               	andwf	floorf@u^(0+128),w
  6385     1619  00A0               	movwf	??_floorf^(0+128)
  6386     161A  0827               	movf	(floorf@m+1)^(0+128),w
  6387     161B  052D               	andwf	(floorf@u+1)^(0+128),w
  6388     161C  00A1               	movwf	(??_floorf^(0+128)+1)
  6389     161D  0828               	movf	(floorf@m+2)^(0+128),w
  6390     161E  052E               	andwf	(floorf@u+2)^(0+128),w
  6391     161F  00A2               	movwf	(??_floorf^(0+128)+2)
  6392     1620  0829               	movf	(floorf@m+3)^(0+128),w
  6393     1621  052F               	andwf	(floorf@u+3)^(0+128),w
  6394     1622  00A3               	movwf	(??_floorf^(0+128)+3)
  6395     1623  0823               	movf	(??_floorf+3)^(0+128),w
  6396     1624  0422               	iorwf	(??_floorf+2)^(0+128),w
  6397     1625  0421               	iorwf	(??_floorf+1)^(0+128),w
  6398     1626  0420               	iorwf	??_floorf^(0+128),w
  6399     1627  1D03               	skipz
  6400     1628  2E2A               	goto	u3371
  6401     1629  2E2B               	goto	u3370
  6402     162A                     u3371:
  6403     162A  2E2C               	goto	l2576
  6404     162B                     u3370:
  6405     162B  2DF6               	goto	l2568
  6406     162C                     l2576:
  6407     162C  082C               	movf	floorf@u^(0+128),w
  6408     162D  00A0               	movwf	??_floorf^(0+128)
  6409     162E  082D               	movf	(floorf@u+1)^(0+128),w
  6410     162F  00A1               	movwf	(??_floorf^(0+128)+1)
  6411     1630  082E               	movf	(floorf@u+2)^(0+128),w
  6412     1631  00A2               	movwf	(??_floorf^(0+128)+2)
  6413     1632  082F               	movf	(floorf@u+3)^(0+128),w
  6414     1633  00A3               	movwf	(??_floorf^(0+128)+3)
  6415     1634  301F               	movlw	31
  6416     1635                     u3385:
  6417     1635  1003               	clrc
  6418     1636  0CA3               	rrf	(??_floorf^(0+128)+3),f
  6419     1637  0CA2               	rrf	(??_floorf^(0+128)+2),f
  6420     1638  0CA1               	rrf	(??_floorf^(0+128)+1),f
  6421     1639  0CA0               	rrf	??_floorf^(0+128),f
  6422     163A                     u3380:
  6423     163A  3EFF               	addlw	-1
  6424     163B  1D03               	skipz
  6425     163C  2E35               	goto	u3385
  6426     163D  0823               	movf	(??_floorf+3)^(0+128),w
  6427     163E  0422               	iorwf	(??_floorf+2)^(0+128),w
  6428     163F  0421               	iorwf	(??_floorf+1)^(0+128),w
  6429     1640  0420               	iorwf	??_floorf^(0+128),w
  6430     1641  1903               	skipnz
  6431     1642  2E44               	goto	u3391
  6432     1643  2E45               	goto	u3390
  6433     1644                     u3391:
  6434     1644  2E5C               	goto	l2580
  6435     1645                     u3390:
  6436     1645                     l2578:
  6437     1645  0826               	movf	floorf@m^(0+128),w
  6438     1646  07AC               	addwf	floorf@u^(0+128),f
  6439     1647  0827               	movf	(floorf@m+1)^(0+128),w
  6440     1648  1103               	clrz
  6441     1649  1803               	skipnc
  6442     164A  3E01               	addlw	1
  6443     164B  1903               	skipnz
  6444     164C  2E4E               	goto	u3401
  6445     164D  07AD               	addwf	(floorf@u+1)^(0+128),f
  6446     164E                     u3401:
  6447     164E  0828               	movf	(floorf@m+2)^(0+128),w
  6448     164F  1103               	clrz
  6449     1650  1803               	skipnc
  6450     1651  3E01               	addlw	1
  6451     1652  1903               	skipnz
  6452     1653  2E55               	goto	u3402
  6453     1654  07AE               	addwf	(floorf@u+2)^(0+128),f
  6454     1655                     u3402:
  6455     1655  0829               	movf	(floorf@m+3)^(0+128),w
  6456     1656  1103               	clrz
  6457     1657  1803               	skipnc
  6458     1658  3E01               	addlw	1
  6459     1659  1903               	skipnz
  6460     165A  2E5C               	goto	u3403
  6461     165B  07AF               	addwf	(floorf@u+3)^(0+128),f
  6462     165C                     u3403:
  6463     165C                     l2580:
  6464     165C  0926               	comf	floorf@m^(0+128),w
  6465     165D  00A0               	movwf	??_floorf^(0+128)
  6466     165E  0927               	comf	(floorf@m+1)^(0+128),w
  6467     165F  00A1               	movwf	(??_floorf^(0+128)+1)
  6468     1660  0928               	comf	(floorf@m+2)^(0+128),w
  6469     1661  00A2               	movwf	(??_floorf^(0+128)+2)
  6470     1662  0929               	comf	(floorf@m+3)^(0+128),w
  6471     1663  00A3               	movwf	(??_floorf^(0+128)+3)
  6472     1664  0820               	movf	??_floorf^(0+128),w
  6473     1665  05AC               	andwf	floorf@u^(0+128),f
  6474     1666  0821               	movf	(??_floorf+1)^(0+128),w
  6475     1667  05AD               	andwf	(floorf@u+1)^(0+128),f
  6476     1668  0822               	movf	(??_floorf+2)^(0+128),w
  6477     1669  05AE               	andwf	(floorf@u+2)^(0+128),f
  6478     166A  0823               	movf	(??_floorf+3)^(0+128),w
  6479     166B  05AF               	andwf	(floorf@u+3)^(0+128),f
  6480     166C  2EB0               	goto	l796
  6481     166D                     l2582:
  6482     166D  082C               	movf	floorf@u^(0+128),w
  6483     166E  00A0               	movwf	??_floorf^(0+128)
  6484     166F  082D               	movf	(floorf@u+1)^(0+128),w
  6485     1670  00A1               	movwf	(??_floorf^(0+128)+1)
  6486     1671  082E               	movf	(floorf@u+2)^(0+128),w
  6487     1672  00A2               	movwf	(??_floorf^(0+128)+2)
  6488     1673  082F               	movf	(floorf@u+3)^(0+128),w
  6489     1674  00A3               	movwf	(??_floorf^(0+128)+3)
  6490     1675  301F               	movlw	31
  6491     1676                     u3415:
  6492     1676  1003               	clrc
  6493     1677  0CA3               	rrf	(??_floorf^(0+128)+3),f
  6494     1678  0CA2               	rrf	(??_floorf^(0+128)+2),f
  6495     1679  0CA1               	rrf	(??_floorf^(0+128)+1),f
  6496     167A  0CA0               	rrf	??_floorf^(0+128),f
  6497     167B                     u3410:
  6498     167B  3EFF               	addlw	-1
  6499     167C  1D03               	skipz
  6500     167D  2E76               	goto	u3415
  6501     167E  0823               	movf	(??_floorf+3)^(0+128),w
  6502     167F  0422               	iorwf	(??_floorf+2)^(0+128),w
  6503     1680  0421               	iorwf	(??_floorf+1)^(0+128),w
  6504     1681  0420               	iorwf	??_floorf^(0+128),w
  6505     1682  1D03               	skipz
  6506     1683  2E85               	goto	u3421
  6507     1684  2E86               	goto	u3420
  6508     1685                     u3421:
  6509     1685  2E8F               	goto	l2586
  6510     1686                     u3420:
  6511     1686                     l2584:
  6512     1686  3000               	movlw	0
  6513     1687  00AF               	movwf	(floorf@u+3)^(0+128)
  6514     1688  3000               	movlw	0
  6515     1689  00AE               	movwf	(floorf@u+2)^(0+128)
  6516     168A  3000               	movlw	0
  6517     168B  00AD               	movwf	(floorf@u+1)^(0+128)
  6518     168C  3000               	movlw	0
  6519     168D  00AC               	movwf	floorf@u^(0+128)
  6520     168E  2EB0               	goto	l796
  6521     168F                     l2586:
  6522     168F  082C               	movf	floorf@u^(0+128),w
  6523     1690  00A0               	movwf	??_floorf^(0+128)
  6524     1691  082D               	movf	(floorf@u+1)^(0+128),w
  6525     1692  00A1               	movwf	(??_floorf^(0+128)+1)
  6526     1693  082E               	movf	(floorf@u+2)^(0+128),w
  6527     1694  00A2               	movwf	(??_floorf^(0+128)+2)
  6528     1695  082F               	movf	(floorf@u+3)^(0+128),w
  6529     1696  00A3               	movwf	(??_floorf^(0+128)+3)
  6530     1697  3001               	movlw	1
  6531     1698                     u3435:
  6532     1698  1003               	clrc
  6533     1699  0DA0               	rlf	??_floorf^(0+128),f
  6534     169A  0DA1               	rlf	(??_floorf^(0+128)+1),f
  6535     169B  0DA2               	rlf	(??_floorf^(0+128)+2),f
  6536     169C  0DA3               	rlf	(??_floorf^(0+128)+3),f
  6537     169D                     u3430:
  6538     169D  3EFF               	addlw	-1
  6539     169E  1D03               	skipz
  6540     169F  2E98               	goto	u3435
  6541     16A0  0823               	movf	(??_floorf+3)^(0+128),w
  6542     16A1  0422               	iorwf	(??_floorf+2)^(0+128),w
  6543     16A2  0421               	iorwf	(??_floorf+1)^(0+128),w
  6544     16A3  0420               	iorwf	??_floorf^(0+128),w
  6545     16A4  1903               	skipnz
  6546     16A5  2EA7               	goto	u3441
  6547     16A6  2EA8               	goto	u3440
  6548     16A7                     u3441:
  6549     16A7  2EB0               	goto	l796
  6550     16A8                     u3440:
  6551     16A8                     l2588:
  6552     16A8  30BF               	movlw	191
  6553     16A9  00AF               	movwf	(floorf@u+3)^(0+128)
  6554     16AA  3080               	movlw	128
  6555     16AB  00AE               	movwf	(floorf@u+2)^(0+128)
  6556     16AC  3000               	movlw	0
  6557     16AD  00AD               	movwf	(floorf@u+1)^(0+128)
  6558     16AE  3000               	movlw	0
  6559     16AF  00AC               	movwf	floorf@u^(0+128)
  6560     16B0                     l796:
  6561     16B0  082F               	movf	(floorf@u+3)^(0+128),w
  6562     16B1  1283               	bcf	3,5	;RP0=0, select bank0
  6563     16B2  1303               	bcf	3,6	;RP1=0, select bank0
  6564     16B3  00EB               	movwf	?_floorf+3
  6565     16B4  1683               	bsf	3,5	;RP0=1, select bank1
  6566     16B5  1303               	bcf	3,6	;RP1=0, select bank1
  6567     16B6  082E               	movf	(floorf@u+2)^(0+128),w
  6568     16B7  1283               	bcf	3,5	;RP0=0, select bank0
  6569     16B8  1303               	bcf	3,6	;RP1=0, select bank0
  6570     16B9  00EA               	movwf	?_floorf+2
  6571     16BA  1683               	bsf	3,5	;RP0=1, select bank1
  6572     16BB  1303               	bcf	3,6	;RP1=0, select bank1
  6573     16BC  082D               	movf	(floorf@u+1)^(0+128),w
  6574     16BD  1283               	bcf	3,5	;RP0=0, select bank0
  6575     16BE  1303               	bcf	3,6	;RP1=0, select bank0
  6576     16BF  00E9               	movwf	?_floorf+1
  6577     16C0  1683               	bsf	3,5	;RP0=1, select bank1
  6578     16C1  1303               	bcf	3,6	;RP1=0, select bank1
  6579     16C2  082C               	movf	floorf@u^(0+128),w
  6580     16C3  1283               	bcf	3,5	;RP0=0, select bank0
  6581     16C4  1303               	bcf	3,6	;RP1=0, select bank0
  6582     16C5  00E8               	movwf	?_floorf
  6583     16C6                     l792:
  6584     16C6  0008               	return
  6585     16C7                     __end_of_floorf:
  6586                           
  6587                           	psect	text26
  6588     1489                     __ptext26:	
  6589 ;; *************** function _ceilf *****************
  6590 ;; Defined at:
  6591 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\ceilf.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  x               4   72[BANK0 ] float 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  u               4   12[BANK1 ] struct .
  6596 ;;  m               4    6[BANK1 ] unsigned long 
  6597 ;;  e               2   10[BANK1 ] int 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  4   72[BANK0 ] float 
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0, btemp+1
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6607 ;;      Params:         0       4       0       0       0
  6608 ;;      Locals:         0       0      10       0       0
  6609 ;;      Temps:          0       0       6       0       0
  6610 ;;      Totals:         0       4      16       0       0
  6611 ;;Total ram usage:       20 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_roundInt
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620     1489                     _ceilf:	
  6621                           ;psect for function _ceilf
  6622                           
  6623     1489                     l2592:	
  6624                           ;incstack = 0
  6625                           ; Regs used in _ceilf: [wreg+status,2+status,0+btemp+1]
  6626                           
  6627     1489  1683               	bsf	3,5	;RP0=1, select bank1
  6628     148A  1303               	bcf	3,6	;RP1=0, select bank1
  6629     148B  084D               	movf	(ceilf@F521+3)^(0+128),w
  6630     148C  00AF               	movwf	(ceilf@u+3)^(0+128)
  6631     148D  084C               	movf	(ceilf@F521+2)^(0+128),w
  6632     148E  00AE               	movwf	(ceilf@u+2)^(0+128)
  6633     148F  084B               	movf	(ceilf@F521+1)^(0+128),w
  6634     1490  00AD               	movwf	(ceilf@u+1)^(0+128)
  6635     1491  084A               	movf	ceilf@F521^(0+128),w
  6636     1492  00AC               	movwf	ceilf@u^(0+128)
  6637     1493  1283               	bcf	3,5	;RP0=0, select bank0
  6638     1494  1303               	bcf	3,6	;RP1=0, select bank0
  6639     1495  086B               	movf	ceilf@x+3,w
  6640     1496  1683               	bsf	3,5	;RP0=1, select bank1
  6641     1497  1303               	bcf	3,6	;RP1=0, select bank1
  6642     1498  00AF               	movwf	(ceilf@u+3)^(0+128)
  6643     1499  1283               	bcf	3,5	;RP0=0, select bank0
  6644     149A  1303               	bcf	3,6	;RP1=0, select bank0
  6645     149B  086A               	movf	ceilf@x+2,w
  6646     149C  1683               	bsf	3,5	;RP0=1, select bank1
  6647     149D  1303               	bcf	3,6	;RP1=0, select bank1
  6648     149E  00AE               	movwf	(ceilf@u+2)^(0+128)
  6649     149F  1283               	bcf	3,5	;RP0=0, select bank0
  6650     14A0  1303               	bcf	3,6	;RP1=0, select bank0
  6651     14A1  0869               	movf	ceilf@x+1,w
  6652     14A2  1683               	bsf	3,5	;RP0=1, select bank1
  6653     14A3  1303               	bcf	3,6	;RP1=0, select bank1
  6654     14A4  00AD               	movwf	(ceilf@u+1)^(0+128)
  6655     14A5  1283               	bcf	3,5	;RP0=0, select bank0
  6656     14A6  1303               	bcf	3,6	;RP1=0, select bank0
  6657     14A7  0868               	movf	ceilf@x,w
  6658     14A8  1683               	bsf	3,5	;RP0=1, select bank1
  6659     14A9  1303               	bcf	3,6	;RP1=0, select bank1
  6660     14AA  00AC               	movwf	ceilf@u^(0+128)
  6661     14AB                     l2594:
  6662     14AB  082C               	movf	ceilf@u^(0+128),w
  6663     14AC  00A0               	movwf	??_ceilf^(0+128)
  6664     14AD  082D               	movf	(ceilf@u+1)^(0+128),w
  6665     14AE  00A1               	movwf	(??_ceilf^(0+128)+1)
  6666     14AF  082E               	movf	(ceilf@u+2)^(0+128),w
  6667     14B0  00A2               	movwf	(??_ceilf^(0+128)+2)
  6668     14B1  082F               	movf	(ceilf@u+3)^(0+128),w
  6669     14B2  00A3               	movwf	(??_ceilf^(0+128)+3)
  6670     14B3  3017               	movlw	23
  6671     14B4                     u3455:
  6672     14B4  1003               	clrc
  6673     14B5  0CA3               	rrf	(??_ceilf^(0+128)+3),f
  6674     14B6  0CA2               	rrf	(??_ceilf^(0+128)+2),f
  6675     14B7  0CA1               	rrf	(??_ceilf^(0+128)+1),f
  6676     14B8  0CA0               	rrf	??_ceilf^(0+128),f
  6677     14B9                     u3450:
  6678     14B9  3EFF               	addlw	-1
  6679     14BA  1D03               	skipz
  6680     14BB  2CB4               	goto	u3455
  6681     14BC  30FF               	movlw	255
  6682     14BD  0520               	andwf	??_ceilf^(0+128),w
  6683     14BE  00A4               	movwf	(??_ceilf+4)^(0+128)
  6684     14BF  3000               	movlw	0
  6685     14C0  0521               	andwf	(??_ceilf+1)^(0+128),w
  6686     14C1  00A5               	movwf	(??_ceilf+5)^(0+128)
  6687     14C2  0824               	movf	(??_ceilf+4)^(0+128),w
  6688     14C3  3E81               	addlw	129
  6689     14C4  00AA               	movwf	ceilf@e^(0+128)
  6690     14C5  0825               	movf	(??_ceilf+5)^(0+128),w
  6691     14C6  1803               	skipnc
  6692     14C7  3E01               	addlw	1
  6693     14C8  3EFF               	addlw	255
  6694     14C9  00AB               	movwf	(ceilf@e+1)^(0+128)
  6695     14CA                     l2596:
  6696     14CA  082B               	movf	(ceilf@e+1)^(0+128),w
  6697     14CB  3A80               	xorlw	128
  6698     14CC  00FF               	movwf	btemp+1
  6699     14CD  3080               	movlw	128
  6700     14CE  027F               	subwf	btemp+1,w
  6701     14CF  1D03               	skipz
  6702     14D0  2CD3               	goto	u3465
  6703     14D1  3017               	movlw	23
  6704     14D2  022A               	subwf	ceilf@e^(0+128),w
  6705     14D3                     u3465:
  6706     14D3  1C03               	skipc
  6707     14D4  2CD6               	goto	u3461
  6708     14D5  2CD7               	goto	u3460
  6709     14D6                     u3461:
  6710     14D6  2CD8               	goto	l778
  6711     14D7                     u3460:
  6712     14D7                     l2598:
  6713     14D7  2DA7               	goto	l779
  6714     14D8                     l778:
  6715     14D8  1683               	bsf	3,5	;RP0=1, select bank1
  6716     14D9  1303               	bcf	3,6	;RP1=0, select bank1
  6717     14DA  1BAB               	btfsc	(ceilf@e+1)^(0+128),7
  6718     14DB  2CDD               	goto	u3471
  6719     14DC  2CDE               	goto	u3470
  6720     14DD                     u3471:
  6721     14DD  2D4E               	goto	l2612
  6722     14DE                     u3470:
  6723     14DE                     l2600:
  6724     14DE  0A2A               	incf	ceilf@e^(0+128),w
  6725     14DF  00FF               	movwf	btemp+1
  6726     14E0  30FF               	movlw	255
  6727     14E1  00A0               	movwf	??_ceilf^(0+128)
  6728     14E2  30FF               	movlw	255
  6729     14E3  00A1               	movwf	(??_ceilf^(0+128)+1)
  6730     14E4  307F               	movlw	127
  6731     14E5  00A2               	movwf	(??_ceilf^(0+128)+2)
  6732     14E6  3000               	movlw	0
  6733     14E7  00A3               	movwf	(??_ceilf^(0+128)+3)
  6734     14E8  2CEE               	goto	u3480
  6735     14E9                     u3485:
  6736     14E9  0D23               	rlf	(??_ceilf^(0+128)+3),w
  6737     14EA  0CA3               	rrf	(??_ceilf^(0+128)+3),f
  6738     14EB  0CA2               	rrf	(??_ceilf^(0+128)+2),f
  6739     14EC  0CA1               	rrf	(??_ceilf^(0+128)+1),f
  6740     14ED  0CA0               	rrf	??_ceilf^(0+128),f
  6741     14EE                     u3480:
  6742     14EE  0BFF               	decfsz	btemp+1,f
  6743     14EF  2CE9               	goto	u3485
  6744     14F0  0823               	movf	(??_ceilf+3)^(0+128),w
  6745     14F1  00A9               	movwf	(ceilf@m+3)^(0+128)
  6746     14F2  0822               	movf	(??_ceilf+2)^(0+128),w
  6747     14F3  00A8               	movwf	(ceilf@m+2)^(0+128)
  6748     14F4  0821               	movf	(??_ceilf+1)^(0+128),w
  6749     14F5  00A7               	movwf	(ceilf@m+1)^(0+128)
  6750     14F6  0820               	movf	??_ceilf^(0+128),w
  6751     14F7  00A6               	movwf	ceilf@m^(0+128)
  6752     14F8                     l2602:
  6753     14F8  0826               	movf	ceilf@m^(0+128),w
  6754     14F9  052C               	andwf	ceilf@u^(0+128),w
  6755     14FA  00A0               	movwf	??_ceilf^(0+128)
  6756     14FB  0827               	movf	(ceilf@m+1)^(0+128),w
  6757     14FC  052D               	andwf	(ceilf@u+1)^(0+128),w
  6758     14FD  00A1               	movwf	(??_ceilf^(0+128)+1)
  6759     14FE  0828               	movf	(ceilf@m+2)^(0+128),w
  6760     14FF  052E               	andwf	(ceilf@u+2)^(0+128),w
  6761     1500  00A2               	movwf	(??_ceilf^(0+128)+2)
  6762     1501  0829               	movf	(ceilf@m+3)^(0+128),w
  6763     1502  052F               	andwf	(ceilf@u+3)^(0+128),w
  6764     1503  00A3               	movwf	(??_ceilf^(0+128)+3)
  6765     1504  0823               	movf	(??_ceilf+3)^(0+128),w
  6766     1505  0422               	iorwf	(??_ceilf+2)^(0+128),w
  6767     1506  0421               	iorwf	(??_ceilf+1)^(0+128),w
  6768     1507  0420               	iorwf	??_ceilf^(0+128),w
  6769     1508  1D03               	skipz
  6770     1509  2D0B               	goto	u3491
  6771     150A  2D0C               	goto	u3490
  6772     150B                     u3491:
  6773     150B  2D0D               	goto	l2606
  6774     150C                     u3490:
  6775     150C  2CD7               	goto	l2598
  6776     150D                     l2606:
  6777     150D  082C               	movf	ceilf@u^(0+128),w
  6778     150E  00A0               	movwf	??_ceilf^(0+128)
  6779     150F  082D               	movf	(ceilf@u+1)^(0+128),w
  6780     1510  00A1               	movwf	(??_ceilf^(0+128)+1)
  6781     1511  082E               	movf	(ceilf@u+2)^(0+128),w
  6782     1512  00A2               	movwf	(??_ceilf^(0+128)+2)
  6783     1513  082F               	movf	(ceilf@u+3)^(0+128),w
  6784     1514  00A3               	movwf	(??_ceilf^(0+128)+3)
  6785     1515  301F               	movlw	31
  6786     1516                     u3505:
  6787     1516  1003               	clrc
  6788     1517  0CA3               	rrf	(??_ceilf^(0+128)+3),f
  6789     1518  0CA2               	rrf	(??_ceilf^(0+128)+2),f
  6790     1519  0CA1               	rrf	(??_ceilf^(0+128)+1),f
  6791     151A  0CA0               	rrf	??_ceilf^(0+128),f
  6792     151B                     u3500:
  6793     151B  3EFF               	addlw	-1
  6794     151C  1D03               	skipz
  6795     151D  2D16               	goto	u3505
  6796     151E  0823               	movf	(??_ceilf+3)^(0+128),w
  6797     151F  0422               	iorwf	(??_ceilf+2)^(0+128),w
  6798     1520  0421               	iorwf	(??_ceilf+1)^(0+128),w
  6799     1521  0420               	iorwf	??_ceilf^(0+128),w
  6800     1522  1D03               	skipz
  6801     1523  2D25               	goto	u3511
  6802     1524  2D26               	goto	u3510
  6803     1525                     u3511:
  6804     1525  2D3D               	goto	l2610
  6805     1526                     u3510:
  6806     1526                     l2608:
  6807     1526  0826               	movf	ceilf@m^(0+128),w
  6808     1527  07AC               	addwf	ceilf@u^(0+128),f
  6809     1528  0827               	movf	(ceilf@m+1)^(0+128),w
  6810     1529  1103               	clrz
  6811     152A  1803               	skipnc
  6812     152B  3E01               	addlw	1
  6813     152C  1903               	skipnz
  6814     152D  2D2F               	goto	u3521
  6815     152E  07AD               	addwf	(ceilf@u+1)^(0+128),f
  6816     152F                     u3521:
  6817     152F  0828               	movf	(ceilf@m+2)^(0+128),w
  6818     1530  1103               	clrz
  6819     1531  1803               	skipnc
  6820     1532  3E01               	addlw	1
  6821     1533  1903               	skipnz
  6822     1534  2D36               	goto	u3522
  6823     1535  07AE               	addwf	(ceilf@u+2)^(0+128),f
  6824     1536                     u3522:
  6825     1536  0829               	movf	(ceilf@m+3)^(0+128),w
  6826     1537  1103               	clrz
  6827     1538  1803               	skipnc
  6828     1539  3E01               	addlw	1
  6829     153A  1903               	skipnz
  6830     153B  2D3D               	goto	u3523
  6831     153C  07AF               	addwf	(ceilf@u+3)^(0+128),f
  6832     153D                     u3523:
  6833     153D                     l2610:
  6834     153D  0926               	comf	ceilf@m^(0+128),w
  6835     153E  00A0               	movwf	??_ceilf^(0+128)
  6836     153F  0927               	comf	(ceilf@m+1)^(0+128),w
  6837     1540  00A1               	movwf	(??_ceilf^(0+128)+1)
  6838     1541  0928               	comf	(ceilf@m+2)^(0+128),w
  6839     1542  00A2               	movwf	(??_ceilf^(0+128)+2)
  6840     1543  0929               	comf	(ceilf@m+3)^(0+128),w
  6841     1544  00A3               	movwf	(??_ceilf^(0+128)+3)
  6842     1545  0820               	movf	??_ceilf^(0+128),w
  6843     1546  05AC               	andwf	ceilf@u^(0+128),f
  6844     1547  0821               	movf	(??_ceilf+1)^(0+128),w
  6845     1548  05AD               	andwf	(ceilf@u+1)^(0+128),f
  6846     1549  0822               	movf	(??_ceilf+2)^(0+128),w
  6847     154A  05AE               	andwf	(ceilf@u+2)^(0+128),f
  6848     154B  0823               	movf	(??_ceilf+3)^(0+128),w
  6849     154C  05AF               	andwf	(ceilf@u+3)^(0+128),f
  6850     154D  2D91               	goto	l783
  6851     154E                     l2612:
  6852     154E  082C               	movf	ceilf@u^(0+128),w
  6853     154F  00A0               	movwf	??_ceilf^(0+128)
  6854     1550  082D               	movf	(ceilf@u+1)^(0+128),w
  6855     1551  00A1               	movwf	(??_ceilf^(0+128)+1)
  6856     1552  082E               	movf	(ceilf@u+2)^(0+128),w
  6857     1553  00A2               	movwf	(??_ceilf^(0+128)+2)
  6858     1554  082F               	movf	(ceilf@u+3)^(0+128),w
  6859     1555  00A3               	movwf	(??_ceilf^(0+128)+3)
  6860     1556  301F               	movlw	31
  6861     1557                     u3535:
  6862     1557  1003               	clrc
  6863     1558  0CA3               	rrf	(??_ceilf^(0+128)+3),f
  6864     1559  0CA2               	rrf	(??_ceilf^(0+128)+2),f
  6865     155A  0CA1               	rrf	(??_ceilf^(0+128)+1),f
  6866     155B  0CA0               	rrf	??_ceilf^(0+128),f
  6867     155C                     u3530:
  6868     155C  3EFF               	addlw	-1
  6869     155D  1D03               	skipz
  6870     155E  2D57               	goto	u3535
  6871     155F  0823               	movf	(??_ceilf+3)^(0+128),w
  6872     1560  0422               	iorwf	(??_ceilf+2)^(0+128),w
  6873     1561  0421               	iorwf	(??_ceilf+1)^(0+128),w
  6874     1562  0420               	iorwf	??_ceilf^(0+128),w
  6875     1563  1903               	skipnz
  6876     1564  2D66               	goto	u3541
  6877     1565  2D67               	goto	u3540
  6878     1566                     u3541:
  6879     1566  2D70               	goto	l2616
  6880     1567                     u3540:
  6881     1567                     l2614:
  6882     1567  3080               	movlw	128
  6883     1568  00AF               	movwf	(ceilf@u+3)^(0+128)
  6884     1569  3000               	movlw	0
  6885     156A  00AE               	movwf	(ceilf@u+2)^(0+128)
  6886     156B  3000               	movlw	0
  6887     156C  00AD               	movwf	(ceilf@u+1)^(0+128)
  6888     156D  3000               	movlw	0
  6889     156E  00AC               	movwf	ceilf@u^(0+128)
  6890     156F  2D91               	goto	l783
  6891     1570                     l2616:
  6892     1570  082C               	movf	ceilf@u^(0+128),w
  6893     1571  00A0               	movwf	??_ceilf^(0+128)
  6894     1572  082D               	movf	(ceilf@u+1)^(0+128),w
  6895     1573  00A1               	movwf	(??_ceilf^(0+128)+1)
  6896     1574  082E               	movf	(ceilf@u+2)^(0+128),w
  6897     1575  00A2               	movwf	(??_ceilf^(0+128)+2)
  6898     1576  082F               	movf	(ceilf@u+3)^(0+128),w
  6899     1577  00A3               	movwf	(??_ceilf^(0+128)+3)
  6900     1578  3001               	movlw	1
  6901     1579                     u3555:
  6902     1579  1003               	clrc
  6903     157A  0DA0               	rlf	??_ceilf^(0+128),f
  6904     157B  0DA1               	rlf	(??_ceilf^(0+128)+1),f
  6905     157C  0DA2               	rlf	(??_ceilf^(0+128)+2),f
  6906     157D  0DA3               	rlf	(??_ceilf^(0+128)+3),f
  6907     157E                     u3550:
  6908     157E  3EFF               	addlw	-1
  6909     157F  1D03               	skipz
  6910     1580  2D79               	goto	u3555
  6911     1581  0823               	movf	(??_ceilf+3)^(0+128),w
  6912     1582  0422               	iorwf	(??_ceilf+2)^(0+128),w
  6913     1583  0421               	iorwf	(??_ceilf+1)^(0+128),w
  6914     1584  0420               	iorwf	??_ceilf^(0+128),w
  6915     1585  1903               	skipnz
  6916     1586  2D88               	goto	u3561
  6917     1587  2D89               	goto	u3560
  6918     1588                     u3561:
  6919     1588  2D91               	goto	l783
  6920     1589                     u3560:
  6921     1589                     l2618:
  6922     1589  303F               	movlw	63
  6923     158A  00AF               	movwf	(ceilf@u+3)^(0+128)
  6924     158B  3080               	movlw	128
  6925     158C  00AE               	movwf	(ceilf@u+2)^(0+128)
  6926     158D  3000               	movlw	0
  6927     158E  00AD               	movwf	(ceilf@u+1)^(0+128)
  6928     158F  3000               	movlw	0
  6929     1590  00AC               	movwf	ceilf@u^(0+128)
  6930     1591                     l783:
  6931     1591  082F               	movf	(ceilf@u+3)^(0+128),w
  6932     1592  1283               	bcf	3,5	;RP0=0, select bank0
  6933     1593  1303               	bcf	3,6	;RP1=0, select bank0
  6934     1594  00EB               	movwf	?_ceilf+3
  6935     1595  1683               	bsf	3,5	;RP0=1, select bank1
  6936     1596  1303               	bcf	3,6	;RP1=0, select bank1
  6937     1597  082E               	movf	(ceilf@u+2)^(0+128),w
  6938     1598  1283               	bcf	3,5	;RP0=0, select bank0
  6939     1599  1303               	bcf	3,6	;RP1=0, select bank0
  6940     159A  00EA               	movwf	?_ceilf+2
  6941     159B  1683               	bsf	3,5	;RP0=1, select bank1
  6942     159C  1303               	bcf	3,6	;RP1=0, select bank1
  6943     159D  082D               	movf	(ceilf@u+1)^(0+128),w
  6944     159E  1283               	bcf	3,5	;RP0=0, select bank0
  6945     159F  1303               	bcf	3,6	;RP1=0, select bank0
  6946     15A0  00E9               	movwf	?_ceilf+1
  6947     15A1  1683               	bsf	3,5	;RP0=1, select bank1
  6948     15A2  1303               	bcf	3,6	;RP1=0, select bank1
  6949     15A3  082C               	movf	ceilf@u^(0+128),w
  6950     15A4  1283               	bcf	3,5	;RP0=0, select bank0
  6951     15A5  1303               	bcf	3,6	;RP1=0, select bank0
  6952     15A6  00E8               	movwf	?_ceilf
  6953     15A7                     l779:
  6954     15A7  0008               	return
  6955     15A8                     __end_of_ceilf:
  6956                           
  6957                           	psect	text27
  6958     1261                     __ptext27:	
  6959 ;; *************** function ___flge *****************
  6960 ;; Defined at:
  6961 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  ff1             4    0[COMMON] float 
  6964 ;;  ff2             4    4[COMMON] float 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;		None
  6967 ;; Return value:  Size  Location     Type
  6968 ;;		None               void
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6976 ;;      Params:         8       0       0       0       0
  6977 ;;      Locals:         0       0       0       0       0
  6978 ;;      Temps:          4       0       0       0       0
  6979 ;;      Totals:        12       0       0       0       0
  6980 ;;Total ram usage:       12 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_roundInt
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989     1261                     ___flge:	
  6990                           ;psect for function ___flge
  6991                           
  6992     1261                     l2622:	
  6993                           ;incstack = 0
  6994                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6995                           
  6996     1261  3000               	movlw	0
  6997     1262  0570               	andwf	___flge@ff1,w
  6998     1263  00F8               	movwf	??___flge
  6999     1264  3000               	movlw	0
  7000     1265  0571               	andwf	___flge@ff1+1,w
  7001     1266  00F9               	movwf	??___flge+1
  7002     1267  3080               	movlw	128
  7003     1268  0572               	andwf	___flge@ff1+2,w
  7004     1269  00FA               	movwf	??___flge+2
  7005     126A  307F               	movlw	127
  7006     126B  0573               	andwf	___flge@ff1+3,w
  7007     126C  00FB               	movwf	??___flge+3
  7008     126D  087B               	movf	??___flge+3,w
  7009     126E  047A               	iorwf	??___flge+2,w
  7010     126F  0479               	iorwf	??___flge+1,w
  7011     1270  0478               	iorwf	??___flge,w
  7012     1271  1D03               	skipz
  7013     1272  2A74               	goto	u3571
  7014     1273  2A75               	goto	u3570
  7015     1274                     u3571:
  7016     1274  2A7D               	goto	l488
  7017     1275                     u3570:
  7018     1275                     l2624:
  7019     1275  3000               	movlw	0
  7020     1276  00F3               	movwf	___flge@ff1+3
  7021     1277  3000               	movlw	0
  7022     1278  00F2               	movwf	___flge@ff1+2
  7023     1279  3000               	movlw	0
  7024     127A  00F1               	movwf	___flge@ff1+1
  7025     127B  3000               	movlw	0
  7026     127C  00F0               	movwf	___flge@ff1
  7027     127D                     l488:
  7028     127D  3000               	movlw	0
  7029     127E  0574               	andwf	___flge@ff2,w
  7030     127F  00F8               	movwf	??___flge
  7031     1280  3000               	movlw	0
  7032     1281  0575               	andwf	___flge@ff2+1,w
  7033     1282  00F9               	movwf	??___flge+1
  7034     1283  3080               	movlw	128
  7035     1284  0576               	andwf	___flge@ff2+2,w
  7036     1285  00FA               	movwf	??___flge+2
  7037     1286  307F               	movlw	127
  7038     1287  0577               	andwf	___flge@ff2+3,w
  7039     1288  00FB               	movwf	??___flge+3
  7040     1289  087B               	movf	??___flge+3,w
  7041     128A  047A               	iorwf	??___flge+2,w
  7042     128B  0479               	iorwf	??___flge+1,w
  7043     128C  0478               	iorwf	??___flge,w
  7044     128D  1D03               	skipz
  7045     128E  2A90               	goto	u3581
  7046     128F  2A91               	goto	u3580
  7047     1290                     u3581:
  7048     1290  2A99               	goto	l2628
  7049     1291                     u3580:
  7050     1291                     l2626:
  7051     1291  3000               	movlw	0
  7052     1292  00F7               	movwf	___flge@ff2+3
  7053     1293  3000               	movlw	0
  7054     1294  00F6               	movwf	___flge@ff2+2
  7055     1295  3000               	movlw	0
  7056     1296  00F5               	movwf	___flge@ff2+1
  7057     1297  3000               	movlw	0
  7058     1298  00F4               	movwf	___flge@ff2
  7059     1299                     l2628:
  7060     1299  1FF3               	btfss	___flge@ff1+3,7
  7061     129A  2A9C               	goto	u3591
  7062     129B  2A9D               	goto	u3590
  7063     129C                     u3591:
  7064     129C  2AC1               	goto	l2632
  7065     129D                     u3590:
  7066     129D                     l2630:
  7067     129D  3000               	movlw	0
  7068     129E  00F8               	movwf	??___flge
  7069     129F  3000               	movlw	0
  7070     12A0  00F9               	movwf	??___flge+1
  7071     12A1  3000               	movlw	0
  7072     12A2  00FA               	movwf	??___flge+2
  7073     12A3  3080               	movlw	128
  7074     12A4  00FB               	movwf	??___flge+3
  7075     12A5  0870               	movf	___flge@ff1,w
  7076     12A6  02F8               	subwf	??___flge,f
  7077     12A7  0871               	movf	___flge@ff1+1,w
  7078     12A8  1C03               	skipc
  7079     12A9  0F71               	incfsz	___flge@ff1+1,w
  7080     12AA  2AAC               	goto	u3601
  7081     12AB  2AAD               	goto	u3602
  7082     12AC                     u3601:
  7083     12AC  02F9               	subwf	??___flge+1,f
  7084     12AD                     u3602:
  7085     12AD  0872               	movf	___flge@ff1+2,w
  7086     12AE  1C03               	skipc
  7087     12AF  0F72               	incfsz	___flge@ff1+2,w
  7088     12B0  2AB2               	goto	u3603
  7089     12B1  2AB3               	goto	u3604
  7090     12B2                     u3603:
  7091     12B2  02FA               	subwf	??___flge+2,f
  7092     12B3                     u3604:
  7093     12B3  0873               	movf	___flge@ff1+3,w
  7094     12B4  1C03               	skipc
  7095     12B5  0F73               	incfsz	___flge@ff1+3,w
  7096     12B6  2AB8               	goto	u3605
  7097     12B7  2AB9               	goto	u3606
  7098     12B8                     u3605:
  7099     12B8  02FB               	subwf	??___flge+3,f
  7100     12B9                     u3606:
  7101     12B9  087B               	movf	??___flge+3,w
  7102     12BA  00F3               	movwf	___flge@ff1+3
  7103     12BB  087A               	movf	??___flge+2,w
  7104     12BC  00F2               	movwf	___flge@ff1+2
  7105     12BD  0879               	movf	??___flge+1,w
  7106     12BE  00F1               	movwf	___flge@ff1+1
  7107     12BF  0878               	movf	??___flge,w
  7108     12C0  00F0               	movwf	___flge@ff1
  7109     12C1                     l2632:
  7110     12C1  1FF7               	btfss	___flge@ff2+3,7
  7111     12C2  2AC4               	goto	u3611
  7112     12C3  2AC5               	goto	u3610
  7113     12C4                     u3611:
  7114     12C4  2AE9               	goto	l491
  7115     12C5                     u3610:
  7116     12C5                     l2634:
  7117     12C5  3000               	movlw	0
  7118     12C6  00F8               	movwf	??___flge
  7119     12C7  3000               	movlw	0
  7120     12C8  00F9               	movwf	??___flge+1
  7121     12C9  3000               	movlw	0
  7122     12CA  00FA               	movwf	??___flge+2
  7123     12CB  3080               	movlw	128
  7124     12CC  00FB               	movwf	??___flge+3
  7125     12CD  0874               	movf	___flge@ff2,w
  7126     12CE  02F8               	subwf	??___flge,f
  7127     12CF  0875               	movf	___flge@ff2+1,w
  7128     12D0  1C03               	skipc
  7129     12D1  0F75               	incfsz	___flge@ff2+1,w
  7130     12D2  2AD4               	goto	u3621
  7131     12D3  2AD5               	goto	u3622
  7132     12D4                     u3621:
  7133     12D4  02F9               	subwf	??___flge+1,f
  7134     12D5                     u3622:
  7135     12D5  0876               	movf	___flge@ff2+2,w
  7136     12D6  1C03               	skipc
  7137     12D7  0F76               	incfsz	___flge@ff2+2,w
  7138     12D8  2ADA               	goto	u3623
  7139     12D9  2ADB               	goto	u3624
  7140     12DA                     u3623:
  7141     12DA  02FA               	subwf	??___flge+2,f
  7142     12DB                     u3624:
  7143     12DB  0877               	movf	___flge@ff2+3,w
  7144     12DC  1C03               	skipc
  7145     12DD  0F77               	incfsz	___flge@ff2+3,w
  7146     12DE  2AE0               	goto	u3625
  7147     12DF  2AE1               	goto	u3626
  7148     12E0                     u3625:
  7149     12E0  02FB               	subwf	??___flge+3,f
  7150     12E1                     u3626:
  7151     12E1  087B               	movf	??___flge+3,w
  7152     12E2  00F7               	movwf	___flge@ff2+3
  7153     12E3  087A               	movf	??___flge+2,w
  7154     12E4  00F6               	movwf	___flge@ff2+2
  7155     12E5  0879               	movf	??___flge+1,w
  7156     12E6  00F5               	movwf	___flge@ff2+1
  7157     12E7  0878               	movf	??___flge,w
  7158     12E8  00F4               	movwf	___flge@ff2
  7159     12E9                     l491:
  7160     12E9  3080               	movlw	128
  7161     12EA  06F3               	xorwf	___flge@ff1+3,f
  7162     12EB  3080               	movlw	128
  7163     12EC  06F7               	xorwf	___flge@ff2+3,f
  7164     12ED  0877               	movf	___flge@ff2+3,w
  7165     12EE  0273               	subwf	___flge@ff1+3,w
  7166     12EF  1D03               	skipz
  7167     12F0  2AFB               	goto	u3635
  7168     12F1  0876               	movf	___flge@ff2+2,w
  7169     12F2  0272               	subwf	___flge@ff1+2,w
  7170     12F3  1D03               	skipz
  7171     12F4  2AFB               	goto	u3635
  7172     12F5  0875               	movf	___flge@ff2+1,w
  7173     12F6  0271               	subwf	___flge@ff1+1,w
  7174     12F7  1D03               	skipz
  7175     12F8  2AFB               	goto	u3635
  7176     12F9  0874               	movf	___flge@ff2,w
  7177     12FA  0270               	subwf	___flge@ff1,w
  7178     12FB                     u3635:
  7179     12FB  1803               	skipnc
  7180     12FC  2AFE               	goto	u3631
  7181     12FD  2AFF               	goto	u3630
  7182     12FE                     u3631:
  7183     12FE  2B01               	goto	l2638
  7184     12FF                     u3630:
  7185     12FF                     l2636:
  7186     12FF  1003               	clrc
  7187     1300  2B02               	goto	l496
  7188     1301                     l2638:
  7189     1301  1403               	setc
  7190     1302                     l496:
  7191     1302  0008               	return
  7192     1303                     __end_of___flge:
  7193                           
  7194                           	psect	text28
  7195     1C82                     __ptext28:	
  7196 ;; *************** function ___lmul *****************
  7197 ;; Defined at:
  7198 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  multiplier      4    0[COMMON] unsigned long 
  7201 ;;  multiplicand    4    4[COMMON] unsigned long 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  product         4    9[COMMON] unsigned long 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  4    0[COMMON] unsigned long 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7213 ;;      Params:         8       0       0       0       0
  7214 ;;      Locals:         4       0       0       0       0
  7215 ;;      Temps:          1       0       0       0       0
  7216 ;;      Totals:        13       0       0       0       0
  7217 ;;Total ram usage:       13 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_TH02_GetConversionValue
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226     1C82                     ___lmul:	
  7227                           ;psect for function ___lmul
  7228                           
  7229     1C82                     l3028:	
  7230                           ;incstack = 0
  7231                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7232                           
  7233     1C82  3000               	movlw	0
  7234     1C83  00FC               	movwf	___lmul@product+3
  7235     1C84  3000               	movlw	0
  7236     1C85  00FB               	movwf	___lmul@product+2
  7237     1C86  3000               	movlw	0
  7238     1C87  00FA               	movwf	___lmul@product+1
  7239     1C88  3000               	movlw	0
  7240     1C89  00F9               	movwf	___lmul@product
  7241     1C8A                     l3030:
  7242     1C8A  1C70               	btfss	___lmul@multiplier,0
  7243     1C8B  2C8D               	goto	u4371
  7244     1C8C  2C8E               	goto	u4370
  7245     1C8D                     u4371:
  7246     1C8D  2CA5               	goto	l3034
  7247     1C8E                     u4370:
  7248     1C8E                     l3032:
  7249     1C8E  0874               	movf	___lmul@multiplicand,w
  7250     1C8F  07F9               	addwf	___lmul@product,f
  7251     1C90  0875               	movf	___lmul@multiplicand+1,w
  7252     1C91  1103               	clrz
  7253     1C92  1803               	skipnc
  7254     1C93  3E01               	addlw	1
  7255     1C94  1903               	skipnz
  7256     1C95  2C97               	goto	u4381
  7257     1C96  07FA               	addwf	___lmul@product+1,f
  7258     1C97                     u4381:
  7259     1C97  0876               	movf	___lmul@multiplicand+2,w
  7260     1C98  1103               	clrz
  7261     1C99  1803               	skipnc
  7262     1C9A  3E01               	addlw	1
  7263     1C9B  1903               	skipnz
  7264     1C9C  2C9E               	goto	u4382
  7265     1C9D  07FB               	addwf	___lmul@product+2,f
  7266     1C9E                     u4382:
  7267     1C9E  0877               	movf	___lmul@multiplicand+3,w
  7268     1C9F  1103               	clrz
  7269     1CA0  1803               	skipnc
  7270     1CA1  3E01               	addlw	1
  7271     1CA2  1903               	skipnz
  7272     1CA3  2CA5               	goto	u4383
  7273     1CA4  07FC               	addwf	___lmul@product+3,f
  7274     1CA5                     u4383:
  7275     1CA5                     l3034:
  7276     1CA5  3001               	movlw	1
  7277     1CA6  00F8               	movwf	??___lmul
  7278     1CA7                     u4395:
  7279     1CA7  1003               	clrc
  7280     1CA8  0DF4               	rlf	___lmul@multiplicand,f
  7281     1CA9  0DF5               	rlf	___lmul@multiplicand+1,f
  7282     1CAA  0DF6               	rlf	___lmul@multiplicand+2,f
  7283     1CAB  0DF7               	rlf	___lmul@multiplicand+3,f
  7284     1CAC  0BF8               	decfsz	??___lmul,f
  7285     1CAD  2CA7               	goto	u4395
  7286     1CAE                     l3036:
  7287     1CAE  3001               	movlw	1
  7288     1CAF                     u4405:
  7289     1CAF  1003               	clrc
  7290     1CB0  0CF3               	rrf	___lmul@multiplier+3,f
  7291     1CB1  0CF2               	rrf	___lmul@multiplier+2,f
  7292     1CB2  0CF1               	rrf	___lmul@multiplier+1,f
  7293     1CB3  0CF0               	rrf	___lmul@multiplier,f
  7294     1CB4  3EFF               	addlw	-1
  7295     1CB5  1D03               	skipz
  7296     1CB6  2CAF               	goto	u4405
  7297     1CB7  0873               	movf	___lmul@multiplier+3,w
  7298     1CB8  0472               	iorwf	___lmul@multiplier+2,w
  7299     1CB9  0471               	iorwf	___lmul@multiplier+1,w
  7300     1CBA  0470               	iorwf	___lmul@multiplier,w
  7301     1CBB  1D03               	skipz
  7302     1CBC  2CBE               	goto	u4411
  7303     1CBD  2CBF               	goto	u4410
  7304     1CBE                     u4411:
  7305     1CBE  2C8A               	goto	l3030
  7306     1CBF                     u4410:
  7307     1CBF                     l3038:
  7308     1CBF  087C               	movf	___lmul@product+3,w
  7309     1CC0  00F3               	movwf	?___lmul+3
  7310     1CC1  087B               	movf	___lmul@product+2,w
  7311     1CC2  00F2               	movwf	?___lmul+2
  7312     1CC3  087A               	movf	___lmul@product+1,w
  7313     1CC4  00F1               	movwf	?___lmul+1
  7314     1CC5  0879               	movf	___lmul@product,w
  7315     1CC6  00F0               	movwf	?___lmul
  7316     1CC7                     l324:
  7317     1CC7  0008               	return
  7318     1CC8                     __end_of___lmul:
  7319                           
  7320                           	psect	text29
  7321     1F67                     __ptext29:	
  7322 ;; *************** function ___aldiv *****************
  7323 ;; Defined at:
  7324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  divisor         4    0[COMMON] long 
  7327 ;;  dividend        4    4[COMMON] long 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  quotient        4    2[BANK0 ] long 
  7330 ;;  sign            1    1[BANK0 ] unsigned char 
  7331 ;;  counter         1    0[BANK0 ] unsigned char 
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  4    0[COMMON] long 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7341 ;;      Params:         8       0       0       0       0
  7342 ;;      Locals:         0       6       0       0       0
  7343 ;;      Temps:          1       0       0       0       0
  7344 ;;      Totals:         9       6       0       0       0
  7345 ;;Total ram usage:       15 bytes
  7346 ;; Hardware stack levels used: 1
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_TH02_GetConversionValue
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354     1F67                     ___aldiv:	
  7355                           ;psect for function ___aldiv
  7356                           
  7357     1F67                     l3042:	
  7358                           ;incstack = 0
  7359                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7360                           
  7361     1F67  1283               	bcf	3,5	;RP0=0, select bank0
  7362     1F68  1303               	bcf	3,6	;RP1=0, select bank0
  7363     1F69  01A1               	clrf	___aldiv@sign
  7364     1F6A                     l3044:
  7365     1F6A  1FF3               	btfss	___aldiv@divisor+3,7
  7366     1F6B  2F6D               	goto	u4421
  7367     1F6C  2F6E               	goto	u4420
  7368     1F6D                     u4421:
  7369     1F6D  2F7B               	goto	l375
  7370     1F6E                     u4420:
  7371     1F6E                     l3046:
  7372     1F6E  09F0               	comf	___aldiv@divisor,f
  7373     1F6F  09F1               	comf	___aldiv@divisor+1,f
  7374     1F70  09F2               	comf	___aldiv@divisor+2,f
  7375     1F71  09F3               	comf	___aldiv@divisor+3,f
  7376     1F72  0AF0               	incf	___aldiv@divisor,f
  7377     1F73  1903               	skipnz
  7378     1F74  0AF1               	incf	___aldiv@divisor+1,f
  7379     1F75  1903               	skipnz
  7380     1F76  0AF2               	incf	___aldiv@divisor+2,f
  7381     1F77  1903               	skipnz
  7382     1F78  0AF3               	incf	___aldiv@divisor+3,f
  7383     1F79  3001               	movlw	1
  7384     1F7A  00A1               	movwf	___aldiv@sign
  7385     1F7B                     l375:
  7386     1F7B  1FF7               	btfss	___aldiv@dividend+3,7
  7387     1F7C  2F7E               	goto	u4431
  7388     1F7D  2F7F               	goto	u4430
  7389     1F7E                     u4431:
  7390     1F7E  2F8C               	goto	l3052
  7391     1F7F                     u4430:
  7392     1F7F                     l3048:
  7393     1F7F  09F4               	comf	___aldiv@dividend,f
  7394     1F80  09F5               	comf	___aldiv@dividend+1,f
  7395     1F81  09F6               	comf	___aldiv@dividend+2,f
  7396     1F82  09F7               	comf	___aldiv@dividend+3,f
  7397     1F83  0AF4               	incf	___aldiv@dividend,f
  7398     1F84  1903               	skipnz
  7399     1F85  0AF5               	incf	___aldiv@dividend+1,f
  7400     1F86  1903               	skipnz
  7401     1F87  0AF6               	incf	___aldiv@dividend+2,f
  7402     1F88  1903               	skipnz
  7403     1F89  0AF7               	incf	___aldiv@dividend+3,f
  7404     1F8A                     l3050:
  7405     1F8A  3001               	movlw	1
  7406     1F8B  06A1               	xorwf	___aldiv@sign,f
  7407     1F8C                     l3052:
  7408     1F8C  3000               	movlw	0
  7409     1F8D  00A5               	movwf	___aldiv@quotient+3
  7410     1F8E  3000               	movlw	0
  7411     1F8F  00A4               	movwf	___aldiv@quotient+2
  7412     1F90  3000               	movlw	0
  7413     1F91  00A3               	movwf	___aldiv@quotient+1
  7414     1F92  3000               	movlw	0
  7415     1F93  00A2               	movwf	___aldiv@quotient
  7416     1F94                     l3054:
  7417     1F94  0873               	movf	___aldiv@divisor+3,w
  7418     1F95  0472               	iorwf	___aldiv@divisor+2,w
  7419     1F96  0471               	iorwf	___aldiv@divisor+1,w
  7420     1F97  0470               	iorwf	___aldiv@divisor,w
  7421     1F98  1903               	skipnz
  7422     1F99  2F9B               	goto	u4441
  7423     1F9A  2F9C               	goto	u4440
  7424     1F9B                     u4441:
  7425     1F9B  2FE7               	goto	l3074
  7426     1F9C                     u4440:
  7427     1F9C                     l3056:
  7428     1F9C  3001               	movlw	1
  7429     1F9D  00A0               	movwf	___aldiv@counter
  7430     1F9E  2FAA               	goto	l3060
  7431     1F9F                     l3058:
  7432     1F9F  3001               	movlw	1
  7433     1FA0  00F8               	movwf	??___aldiv
  7434     1FA1                     u4455:
  7435     1FA1  1003               	clrc
  7436     1FA2  0DF0               	rlf	___aldiv@divisor,f
  7437     1FA3  0DF1               	rlf	___aldiv@divisor+1,f
  7438     1FA4  0DF2               	rlf	___aldiv@divisor+2,f
  7439     1FA5  0DF3               	rlf	___aldiv@divisor+3,f
  7440     1FA6  0BF8               	decfsz	??___aldiv,f
  7441     1FA7  2FA1               	goto	u4455
  7442     1FA8  3001               	movlw	1
  7443     1FA9  07A0               	addwf	___aldiv@counter,f
  7444     1FAA                     l3060:
  7445     1FAA  1FF3               	btfss	___aldiv@divisor+3,7
  7446     1FAB  2FAD               	goto	u4461
  7447     1FAC  2FAE               	goto	u4460
  7448     1FAD                     u4461:
  7449     1FAD  2F9F               	goto	l3058
  7450     1FAE                     u4460:
  7451     1FAE                     l3062:
  7452     1FAE  3001               	movlw	1
  7453     1FAF  00F8               	movwf	??___aldiv
  7454     1FB0                     u4475:
  7455     1FB0  1003               	clrc
  7456     1FB1  0DA2               	rlf	___aldiv@quotient,f
  7457     1FB2  0DA3               	rlf	___aldiv@quotient+1,f
  7458     1FB3  0DA4               	rlf	___aldiv@quotient+2,f
  7459     1FB4  0DA5               	rlf	___aldiv@quotient+3,f
  7460     1FB5  0BF8               	decfsz	??___aldiv,f
  7461     1FB6  2FB0               	goto	u4475
  7462     1FB7                     l3064:
  7463     1FB7  0873               	movf	___aldiv@divisor+3,w
  7464     1FB8  0277               	subwf	___aldiv@dividend+3,w
  7465     1FB9  1D03               	skipz
  7466     1FBA  2FC5               	goto	u4485
  7467     1FBB  0872               	movf	___aldiv@divisor+2,w
  7468     1FBC  0276               	subwf	___aldiv@dividend+2,w
  7469     1FBD  1D03               	skipz
  7470     1FBE  2FC5               	goto	u4485
  7471     1FBF  0871               	movf	___aldiv@divisor+1,w
  7472     1FC0  0275               	subwf	___aldiv@dividend+1,w
  7473     1FC1  1D03               	skipz
  7474     1FC2  2FC5               	goto	u4485
  7475     1FC3  0870               	movf	___aldiv@divisor,w
  7476     1FC4  0274               	subwf	___aldiv@dividend,w
  7477     1FC5                     u4485:
  7478     1FC5  1C03               	skipc
  7479     1FC6  2FC8               	goto	u4481
  7480     1FC7  2FC9               	goto	u4480
  7481     1FC8                     u4481:
  7482     1FC8  2FD8               	goto	l3070
  7483     1FC9                     u4480:
  7484     1FC9                     l3066:
  7485     1FC9  0870               	movf	___aldiv@divisor,w
  7486     1FCA  02F4               	subwf	___aldiv@dividend,f
  7487     1FCB  0871               	movf	___aldiv@divisor+1,w
  7488     1FCC  1C03               	skipc
  7489     1FCD  0F71               	incfsz	___aldiv@divisor+1,w
  7490     1FCE  02F5               	subwf	___aldiv@dividend+1,f
  7491     1FCF  0872               	movf	___aldiv@divisor+2,w
  7492     1FD0  1C03               	skipc
  7493     1FD1  0F72               	incfsz	___aldiv@divisor+2,w
  7494     1FD2  02F6               	subwf	___aldiv@dividend+2,f
  7495     1FD3  0873               	movf	___aldiv@divisor+3,w
  7496     1FD4  1C03               	skipc
  7497     1FD5  0F73               	incfsz	___aldiv@divisor+3,w
  7498     1FD6  02F7               	subwf	___aldiv@dividend+3,f
  7499     1FD7                     l3068:
  7500     1FD7  1422               	bsf	___aldiv@quotient,0
  7501     1FD8                     l3070:
  7502     1FD8  3001               	movlw	1
  7503     1FD9                     u4495:
  7504     1FD9  1003               	clrc
  7505     1FDA  0CF3               	rrf	___aldiv@divisor+3,f
  7506     1FDB  0CF2               	rrf	___aldiv@divisor+2,f
  7507     1FDC  0CF1               	rrf	___aldiv@divisor+1,f
  7508     1FDD  0CF0               	rrf	___aldiv@divisor,f
  7509     1FDE  3EFF               	addlw	-1
  7510     1FDF  1D03               	skipz
  7511     1FE0  2FD9               	goto	u4495
  7512     1FE1                     l3072:
  7513     1FE1  3001               	movlw	1
  7514     1FE2  02A0               	subwf	___aldiv@counter,f
  7515     1FE3  1D03               	btfss	3,2
  7516     1FE4  2FE6               	goto	u4501
  7517     1FE5  2FE7               	goto	u4500
  7518     1FE6                     u4501:
  7519     1FE6  2FAE               	goto	l3062
  7520     1FE7                     u4500:
  7521     1FE7                     l3074:
  7522     1FE7  0821               	movf	___aldiv@sign,w
  7523     1FE8  1903               	btfsc	3,2
  7524     1FE9  2FEB               	goto	u4511
  7525     1FEA  2FEC               	goto	u4510
  7526     1FEB                     u4511:
  7527     1FEB  2FF7               	goto	l3078
  7528     1FEC                     u4510:
  7529     1FEC                     l3076:
  7530     1FEC  09A2               	comf	___aldiv@quotient,f
  7531     1FED  09A3               	comf	___aldiv@quotient+1,f
  7532     1FEE  09A4               	comf	___aldiv@quotient+2,f
  7533     1FEF  09A5               	comf	___aldiv@quotient+3,f
  7534     1FF0  0AA2               	incf	___aldiv@quotient,f
  7535     1FF1  1903               	skipnz
  7536     1FF2  0AA3               	incf	___aldiv@quotient+1,f
  7537     1FF3  1903               	skipnz
  7538     1FF4  0AA4               	incf	___aldiv@quotient+2,f
  7539     1FF5  1903               	skipnz
  7540     1FF6  0AA5               	incf	___aldiv@quotient+3,f
  7541     1FF7                     l3078:
  7542     1FF7  0825               	movf	___aldiv@quotient+3,w
  7543     1FF8  00F3               	movwf	?___aldiv+3
  7544     1FF9  0824               	movf	___aldiv@quotient+2,w
  7545     1FFA  00F2               	movwf	?___aldiv+2
  7546     1FFB  0823               	movf	___aldiv@quotient+1,w
  7547     1FFC  00F1               	movwf	?___aldiv+1
  7548     1FFD  0822               	movf	___aldiv@quotient,w
  7549     1FFE  00F0               	movwf	?___aldiv
  7550     1FFF                     l385:
  7551     1FFF  0008               	return
  7552     2000                     __end_of___aldiv:
  7553                           
  7554                           	psect	text30
  7555     1C3D                     __ptext30:	
  7556 ;; *************** function _TH02_ReadRegister *****************
  7557 ;; Defined at:
  7558 ;;		line 19 in file "TH02.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  reg             1    wreg     unsigned char 
  7561 ;;  value           1    1[COMMON] PTR unsigned char 
  7562 ;;		 -> TH02_GetConversionValue@config(1), TH02_WaitForReady@status(1), 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  reg             1    2[COMMON] unsigned char 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      unsigned char 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7574 ;;      Params:         1       0       0       0       0
  7575 ;;      Locals:         1       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0
  7577 ;;      Totals:         2       0       0       0       0
  7578 ;;Total ram usage:        2 bytes
  7579 ;; Hardware stack levels used: 1
  7580 ;; Hardware stack levels required when called: 2
  7581 ;; This function calls:
  7582 ;;		_I2C_Master_RepeatedStart
  7583 ;;		_I2C_Master_Start
  7584 ;;		_I2C_Master_Stop
  7585 ;;		_I2C_Master_Write
  7586 ;;		_I2C_NACK
  7587 ;;		_I2C_Read_Byte
  7588 ;; This function is called by:
  7589 ;;		_TH02_WaitForReady
  7590 ;;		_TH02_GetConversionValue
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594     1C3D                     _TH02_ReadRegister:	
  7595                           ;psect for function _TH02_ReadRegister
  7596                           
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _TH02_ReadRegister: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7600                           ;TH02_ReadRegister@reg stored from wreg
  7601     1C3D  00F2               	movwf	TH02_ReadRegister@reg
  7602     1C3E                     l2990:
  7603                           
  7604                           ;TH02.c: 20:     I2C_Master_Start();
  7605     1C3E  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Start
  7606                           
  7607                           ;TH02.c: 21:     if (I2C_Master_Write(0x40 << 1) != 0) return 1;
  7608     1C43  3080               	movlw	128
  7609     1C44  120A  158A  2001  160A  158A  	fcall	_I2C_Master_Write
  7610     1C49  3A00               	xorlw	0
  7611     1C4A  1903               	skipnz
  7612     1C4B  2C4D               	goto	u4331
  7613     1C4C  2C4E               	goto	u4330
  7614     1C4D                     u4331:
  7615     1C4D  2C50               	goto	l2996
  7616     1C4E                     u4330:
  7617     1C4E                     l2992:
  7618     1C4E  3001               	movlw	1
  7619     1C4F  2C81               	goto	l143
  7620     1C50                     l2996:
  7621                           
  7622                           ;TH02.c: 22:     if (I2C_Master_Write(reg) != 0) return 1;
  7623     1C50  0872               	movf	TH02_ReadRegister@reg,w
  7624     1C51  120A  158A  2001  160A  158A  	fcall	_I2C_Master_Write
  7625     1C56  3A00               	xorlw	0
  7626     1C57  1903               	skipnz
  7627     1C58  2C5A               	goto	u4341
  7628     1C59  2C5B               	goto	u4340
  7629     1C5A                     u4341:
  7630     1C5A  2C5C               	goto	l3002
  7631     1C5B                     u4340:
  7632     1C5B  2C4E               	goto	l2992
  7633     1C5C                     l3002:
  7634                           
  7635                           ;TH02.c: 24:     I2C_Master_RepeatedStart();
  7636     1C5C  160A  158A  2226  160A  158A  	fcall	_I2C_Master_RepeatedStart
  7637                           
  7638                           ;TH02.c: 25:     if (I2C_Master_Write((0x40 << 1) | 0x01) != 0) return 1;
  7639     1C61  3081               	movlw	129
  7640     1C62  120A  158A  2001  160A  158A  	fcall	_I2C_Master_Write
  7641     1C67  3A00               	xorlw	0
  7642     1C68  1903               	skipnz
  7643     1C69  2C6B               	goto	u4351
  7644     1C6A  2C6C               	goto	u4350
  7645     1C6B                     u4351:
  7646     1C6B  2C6D               	goto	l3008
  7647     1C6C                     u4350:
  7648     1C6C  2C4E               	goto	l2992
  7649     1C6D                     l3008:
  7650                           
  7651                           ;TH02.c: 27:     *value = I2C_Read_Byte();
  7652     1C6D  0871               	movf	TH02_ReadRegister@value,w
  7653     1C6E  0084               	movwf	4
  7654     1C6F  160A  158A  22E5  160A  158A  	fcall	_I2C_Read_Byte
  7655     1C74  1383               	bcf	3,7	;select IRP bank0
  7656     1C75  0080               	movwf	0
  7657     1C76                     l3010:
  7658                           
  7659                           ;TH02.c: 28:     I2C_NACK();
  7660     1C76  160A  158A  224D  160A  158A  	fcall	_I2C_NACK
  7661     1C7B                     l3012:
  7662                           
  7663                           ;TH02.c: 29:     I2C_Master_Stop();
  7664     1C7B  160A  158A  2238  160A  158A  	fcall	_I2C_Master_Stop
  7665     1C80                     l3014:
  7666                           
  7667                           ;TH02.c: 30:     return 0;
  7668     1C80  3000               	movlw	0
  7669     1C81                     l143:
  7670     1C81  0008               	return
  7671     1C82                     __end_of_TH02_ReadRegister:
  7672                           
  7673                           	psect	text31
  7674     1AE5                     __ptext31:	
  7675 ;; *************** function _I2C_Read_Byte *****************
  7676 ;; Defined at:
  7677 ;;		line 53 in file "i2c.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      unsigned char 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0, pclath, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7691 ;;      Params:         0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0
  7694 ;;      Totals:         0       0       0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used: 1
  7697 ;; Hardware stack levels required when called: 1
  7698 ;; This function calls:
  7699 ;;		_I2C_Master_Wait
  7700 ;; This function is called by:
  7701 ;;		_TH02_ReadRegister
  7702 ;;		_TH02_GetConversionValue
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706     1AE5                     _I2C_Read_Byte:	
  7707                           ;psect for function _I2C_Read_Byte
  7708                           
  7709     1AE5                     l2542:	
  7710                           ;incstack = 0
  7711                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  7712                           
  7713                           
  7714                           ;i2c.c: 54:     I2C_Master_Wait();
  7715     1AE5  160A  158A  2266  160A  158A  	fcall	_I2C_Master_Wait
  7716     1AEA                     l2544:
  7717                           
  7718                           ;i2c.c: 55:     RCEN = 1;
  7719     1AEA  1683               	bsf	3,5	;RP0=1, select bank1
  7720     1AEB  1303               	bcf	3,6	;RP1=0, select bank1
  7721     1AEC  1591               	bsf	17,3	;volatile
  7722     1AED                     l65:	
  7723                           ;i2c.c: 56:     while (!SSPIF);
  7724                           
  7725     1AED  1283               	bcf	3,5	;RP0=0, select bank0
  7726     1AEE  1D8C               	btfss	12,3	;volatile
  7727     1AEF  2AF1               	goto	u3311
  7728     1AF0  2AF2               	goto	u3310
  7729     1AF1                     u3311:
  7730     1AF1  2AED               	goto	l65
  7731     1AF2                     u3310:
  7732     1AF2                     l67:
  7733                           
  7734                           ;i2c.c: 57:     SSPIF = 0;
  7735     1AF2  118C               	bcf	12,3	;volatile
  7736     1AF3                     l2546:
  7737                           
  7738                           ;i2c.c: 58:     I2C_Master_Wait();
  7739     1AF3  160A  158A  2266  160A  158A  	fcall	_I2C_Master_Wait
  7740     1AF8                     l2548:
  7741                           
  7742                           ;i2c.c: 60:     if (!BF) return 0;
  7743     1AF8  1683               	bsf	3,5	;RP0=1, select bank1
  7744     1AF9  1303               	bcf	3,6	;RP1=0, select bank1
  7745     1AFA  1814               	btfsc	20,0	;volatile
  7746     1AFB  2AFD               	goto	u3321
  7747     1AFC  2AFE               	goto	u3320
  7748     1AFD                     u3321:
  7749     1AFD  2B00               	goto	l2554
  7750     1AFE                     u3320:
  7751     1AFE                     l2550:
  7752     1AFE  3000               	movlw	0
  7753     1AFF  2B03               	goto	l69
  7754     1B00                     l2554:
  7755                           
  7756                           ;i2c.c: 61:     return SSPBUF;
  7757     1B00  1283               	bcf	3,5	;RP0=0, select bank0
  7758     1B01  1303               	bcf	3,6	;RP1=0, select bank0
  7759     1B02  0813               	movf	19,w	;volatile
  7760     1B03                     l69:
  7761     1B03  0008               	return
  7762     1B04                     __end_of_I2C_Read_Byte:
  7763                           
  7764                           	psect	text32
  7765     1A4D                     __ptext32:	
  7766 ;; *************** function _I2C_NACK *****************
  7767 ;; Defined at:
  7768 ;;		line 39 in file "i2c.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0, pclath, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7782 ;;      Params:         0       0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0
  7785 ;;      Totals:         0       0       0       0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used: 1
  7788 ;; Hardware stack levels required when called: 1
  7789 ;; This function calls:
  7790 ;;		_I2C_Master_Wait
  7791 ;; This function is called by:
  7792 ;;		_TH02_ReadRegister
  7793 ;;		_TH02_GetConversionValue
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797     1A4D                     _I2C_NACK:	
  7798                           ;psect for function _I2C_NACK
  7799                           
  7800     1A4D                     l2528:	
  7801                           ;incstack = 0
  7802                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  7803                           
  7804                           
  7805                           ;i2c.c: 40:     ACKDT = 1;
  7806     1A4D  1683               	bsf	3,5	;RP0=1, select bank1
  7807     1A4E  1303               	bcf	3,6	;RP1=0, select bank1
  7808     1A4F  1691               	bsf	17,5	;volatile
  7809     1A50                     l2530:
  7810                           
  7811                           ;i2c.c: 41:     I2C_Master_Wait();
  7812     1A50  160A  158A  2266  160A  158A  	fcall	_I2C_Master_Wait
  7813     1A55                     l2532:
  7814                           
  7815                           ;i2c.c: 42:     ACKEN = 1;
  7816     1A55  1683               	bsf	3,5	;RP0=1, select bank1
  7817     1A56  1303               	bcf	3,6	;RP1=0, select bank1
  7818     1A57  1611               	bsf	17,4	;volatile
  7819     1A58                     l56:
  7820     1A58  0008               	return
  7821     1A59                     __end_of_I2C_NACK:
  7822                           
  7823                           	psect	text33
  7824     0801                     __ptext33:	
  7825 ;; *************** function _I2C_Master_Write *****************
  7826 ;; Defined at:
  7827 ;;		line 45 in file "i2c.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  data            1    wreg     unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  data            1    0[COMMON] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      unsigned char 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0, pclath, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         0       0       0       0       0
  7842 ;;      Locals:         1       0       0       0       0
  7843 ;;      Temps:          0       0       0       0       0
  7844 ;;      Totals:         1       0       0       0       0
  7845 ;;Total ram usage:        1 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 1
  7848 ;; This function calls:
  7849 ;;		_I2C_Master_Wait
  7850 ;; This function is called by:
  7851 ;;		_TH02_WriteRegister
  7852 ;;		_TH02_ReadRegister
  7853 ;;		_TH02_GetConversionValue
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857     0801                     _I2C_Master_Write:	
  7858                           ;psect for function _I2C_Master_Write
  7859                           
  7860                           
  7861                           ;incstack = 0
  7862                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7863                           ;I2C_Master_Write@data stored from wreg
  7864     0801  00F0               	movwf	I2C_Master_Write@data
  7865     0802                     l2534:
  7866                           
  7867                           ;i2c.c: 46:     I2C_Master_Wait();
  7868     0802  160A  158A  2266  120A  158A  	fcall	_I2C_Master_Wait
  7869     0807                     l2536:
  7870                           
  7871                           ;i2c.c: 47:     SSPBUF = data;
  7872     0807  0870               	movf	I2C_Master_Write@data,w
  7873     0808  1283               	bcf	3,5	;RP0=0, select bank0
  7874     0809  1303               	bcf	3,6	;RP1=0, select bank0
  7875     080A  0093               	movwf	19	;volatile
  7876     080B                     l59:	
  7877                           ;i2c.c: 48:     while(!SSPIF);
  7878                           
  7879     080B  1D8C               	btfss	12,3	;volatile
  7880     080C  280E               	goto	u3301
  7881     080D  280F               	goto	u3300
  7882     080E                     u3301:
  7883     080E  280B               	goto	l59
  7884     080F                     u3300:
  7885     080F                     l61:
  7886                           
  7887                           ;i2c.c: 49:     SSPIF = 0;
  7888     080F  118C               	bcf	12,3	;volatile
  7889     0810                     l2538:
  7890                           
  7891                           ;i2c.c: 50:     return ACKSTAT;
  7892     0810  3000               	movlw	0
  7893     0811  1683               	bsf	3,5	;RP0=1, select bank1
  7894     0812  1303               	bcf	3,6	;RP1=0, select bank1
  7895     0813  1B11               	btfsc	17,6	;volatile
  7896     0814  3001               	movlw	1
  7897     0815                     l62:
  7898     0815  0008               	return
  7899     0816                     __end_of_I2C_Master_Write:
  7900                           
  7901                           	psect	text34
  7902     1A38                     __ptext34:	
  7903 ;; *************** function _I2C_Master_Stop *****************
  7904 ;; Defined at:
  7905 ;;		line 28 in file "i2c.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, pclath, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7919 ;;      Params:         0       0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0
  7922 ;;      Totals:         0       0       0       0       0
  7923 ;;Total ram usage:        0 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; Hardware stack levels required when called: 1
  7926 ;; This function calls:
  7927 ;;		_I2C_Master_Wait
  7928 ;; This function is called by:
  7929 ;;		_TH02_WriteRegister
  7930 ;;		_TH02_ReadRegister
  7931 ;;		_TH02_GetConversionValue
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935     1A38                     _I2C_Master_Stop:	
  7936                           ;psect for function _I2C_Master_Stop
  7937                           
  7938     1A38                     l2524:	
  7939                           ;incstack = 0
  7940                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7941                           
  7942                           
  7943                           ;i2c.c: 29:     I2C_Master_Wait();
  7944     1A38  160A  158A  2266  160A  158A  	fcall	_I2C_Master_Wait
  7945     1A3D                     l2526:
  7946                           
  7947                           ;i2c.c: 30:     PEN = 1;
  7948     1A3D  1683               	bsf	3,5	;RP0=1, select bank1
  7949     1A3E  1303               	bcf	3,6	;RP1=0, select bank1
  7950     1A3F  1511               	bsf	17,2	;volatile
  7951     1A40                     l50:
  7952     1A40  0008               	return
  7953     1A41                     __end_of_I2C_Master_Stop:
  7954                           
  7955                           	psect	text35
  7956     1A2F                     __ptext35:	
  7957 ;; *************** function _I2C_Master_Start *****************
  7958 ;; Defined at:
  7959 ;;		line 18 in file "i2c.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0, pclath, cstack
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7973 ;;      Params:         0       0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0
  7976 ;;      Totals:         0       0       0       0       0
  7977 ;;Total ram usage:        0 bytes
  7978 ;; Hardware stack levels used: 1
  7979 ;; Hardware stack levels required when called: 1
  7980 ;; This function calls:
  7981 ;;		_I2C_Master_Wait
  7982 ;; This function is called by:
  7983 ;;		_TH02_WriteRegister
  7984 ;;		_TH02_ReadRegister
  7985 ;;		_TH02_GetConversionValue
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989     1A2F                     _I2C_Master_Start:	
  7990                           ;psect for function _I2C_Master_Start
  7991                           
  7992     1A2F                     l2516:	
  7993                           ;incstack = 0
  7994                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7995                           
  7996                           
  7997                           ;i2c.c: 19:     I2C_Master_Wait();
  7998     1A2F  160A  158A  2266  160A  158A  	fcall	_I2C_Master_Wait
  7999     1A34                     l2518:
  8000                           
  8001                           ;i2c.c: 20:     SEN = 1;
  8002     1A34  1683               	bsf	3,5	;RP0=1, select bank1
  8003     1A35  1303               	bcf	3,6	;RP1=0, select bank1
  8004     1A36  1411               	bsf	17,0	;volatile
  8005     1A37                     l44:
  8006     1A37  0008               	return
  8007     1A38                     __end_of_I2C_Master_Start:
  8008                           
  8009                           	psect	text36
  8010     1A26                     __ptext36:	
  8011 ;; *************** function _I2C_Master_RepeatedStart *****************
  8012 ;; Defined at:
  8013 ;;		line 23 in file "i2c.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8027 ;;      Params:         0       0       0       0       0
  8028 ;;      Locals:         0       0       0       0       0
  8029 ;;      Temps:          0       0       0       0       0
  8030 ;;      Totals:         0       0       0       0       0
  8031 ;;Total ram usage:        0 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; Hardware stack levels required when called: 1
  8034 ;; This function calls:
  8035 ;;		_I2C_Master_Wait
  8036 ;; This function is called by:
  8037 ;;		_TH02_ReadRegister
  8038 ;;		_TH02_GetConversionValue
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042     1A26                     _I2C_Master_RepeatedStart:	
  8043                           ;psect for function _I2C_Master_RepeatedStart
  8044                           
  8045     1A26                     l2520:	
  8046                           ;incstack = 0
  8047                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  8048                           
  8049                           
  8050                           ;i2c.c: 24:     I2C_Master_Wait();
  8051     1A26  160A  158A  2266  160A  158A  	fcall	_I2C_Master_Wait
  8052     1A2B                     l2522:
  8053                           
  8054                           ;i2c.c: 25:     RSEN = 1;
  8055     1A2B  1683               	bsf	3,5	;RP0=1, select bank1
  8056     1A2C  1303               	bcf	3,6	;RP1=0, select bank1
  8057     1A2D  1491               	bsf	17,1	;volatile
  8058     1A2E                     l47:
  8059     1A2E  0008               	return
  8060     1A2F                     __end_of_I2C_Master_RepeatedStart:
  8061                           
  8062                           	psect	text37
  8063     1A41                     __ptext37:	
  8064 ;; *************** function _I2C_ACK *****************
  8065 ;; Defined at:
  8066 ;;		line 33 in file "i2c.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0, pclath, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8080 ;;      Params:         0       0       0       0       0
  8081 ;;      Locals:         0       0       0       0       0
  8082 ;;      Temps:          0       0       0       0       0
  8083 ;;      Totals:         0       0       0       0       0
  8084 ;;Total ram usage:        0 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 1
  8087 ;; This function calls:
  8088 ;;		_I2C_Master_Wait
  8089 ;; This function is called by:
  8090 ;;		_TH02_GetConversionValue
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094     1A41                     _I2C_ACK:	
  8095                           ;psect for function _I2C_ACK
  8096                           
  8097     1A41                     l2954:	
  8098                           ;incstack = 0
  8099                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  8100                           
  8101                           
  8102                           ;i2c.c: 34:     ACKDT = 0;
  8103     1A41  1683               	bsf	3,5	;RP0=1, select bank1
  8104     1A42  1303               	bcf	3,6	;RP1=0, select bank1
  8105     1A43  1291               	bcf	17,5	;volatile
  8106     1A44                     l2956:
  8107                           
  8108                           ;i2c.c: 35:     I2C_Master_Wait();
  8109     1A44  160A  158A  2266  160A  158A  	fcall	_I2C_Master_Wait
  8110     1A49                     l2958:
  8111                           
  8112                           ;i2c.c: 36:     ACKEN = 1;
  8113     1A49  1683               	bsf	3,5	;RP0=1, select bank1
  8114     1A4A  1303               	bcf	3,6	;RP1=0, select bank1
  8115     1A4B  1611               	bsf	17,4	;volatile
  8116     1A4C                     l53:
  8117     1A4C  0008               	return
  8118     1A4D                     __end_of_I2C_ACK:
  8119                           
  8120                           	psect	text38
  8121     1A66                     __ptext38:	
  8122 ;; *************** function _I2C_Master_Wait *****************
  8123 ;; Defined at:
  8124 ;;		line 14 in file "i2c.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;		None
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8138 ;;      Params:         0       0       0       0       0
  8139 ;;      Locals:         0       0       0       0       0
  8140 ;;      Temps:          0       0       0       0       0
  8141 ;;      Totals:         0       0       0       0       0
  8142 ;;Total ram usage:        0 bytes
  8143 ;; Hardware stack levels used: 1
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_I2C_Master_Start
  8148 ;;		_I2C_Master_RepeatedStart
  8149 ;;		_I2C_Master_Stop
  8150 ;;		_I2C_ACK
  8151 ;;		_I2C_NACK
  8152 ;;		_I2C_Master_Write
  8153 ;;		_I2C_Read_Byte
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157     1A66                     _I2C_Master_Wait:	
  8158                           ;psect for function _I2C_Master_Wait
  8159                           
  8160     1A66                     l2448:	
  8161                           ;incstack = 0
  8162                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8163                           
  8164     1A66                     l38:	
  8165                           ;i2c.c: 15:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8166                           
  8167     1A66  1683               	bsf	3,5	;RP0=1, select bank1
  8168     1A67  1303               	bcf	3,6	;RP1=0, select bank1
  8169     1A68  1914               	btfsc	20,2	;volatile
  8170     1A69  2A6B               	goto	u3161
  8171     1A6A  2A6C               	goto	u3160
  8172     1A6B                     u3161:
  8173     1A6B  2A66               	goto	l38
  8174     1A6C                     u3160:
  8175     1A6C                     l2450:
  8176     1A6C  0811               	movf	17,w	;volatile
  8177     1A6D  391F               	andlw	31
  8178     1A6E  1D03               	btfss	3,2
  8179     1A6F  2A71               	goto	u3171
  8180     1A70  2A72               	goto	u3170
  8181     1A71                     u3171:
  8182     1A71  2A66               	goto	l38
  8183     1A72                     u3170:
  8184     1A72                     l41:
  8185     1A72  0008               	return
  8186     1A73                     __end_of_I2C_Master_Wait:
  8187                           
  8188                           	psect	text39
  8189     044A                     __ptext39:	
  8190 ;; *************** function _TH02_GetCompensatedRH *****************
  8191 ;; Defined at:
  8192 ;;		line 76 in file "TH02.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;  round_flag      1    wreg     unsigned char 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  round_flag      1    8[BANK1 ] unsigned char 
  8197 ;;  rhvalue         4   23[BANK1 ] float 
  8198 ;;  rhlinear        4   19[BANK1 ] float 
  8199 ;;  ret             2    9[BANK1 ] short 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  2    2[BANK1 ] short 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8209 ;;      Params:         0       0       2       0       0
  8210 ;;      Locals:         0       0      23       0       0
  8211 ;;      Temps:          0       0       0       0       0
  8212 ;;      Totals:         0       0      25       0       0
  8213 ;;Total ram usage:       25 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; Hardware stack levels required when called: 2
  8216 ;; This function calls:
  8217 ;;		___fladd
  8218 ;;		___fldiv
  8219 ;;		___flmul
  8220 ;;		___flsub
  8221 ;;		___fltol
  8222 ;;		___xxtofl
  8223 ;; This function is called by:
  8224 ;;		_main
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228     044A                     _TH02_GetCompensatedRH:	
  8229                           ;psect for function _TH02_GetCompensatedRH
  8230                           
  8231                           
  8232                           ;incstack = 0
  8233                           ; Regs used in _TH02_GetCompensatedRH: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8234                           ;TH02_GetCompensatedRH@round_flag stored from wreg
  8235     044A  1683               	bsf	3,5	;RP0=1, select bank1
  8236     044B  1303               	bcf	3,6	;RP1=0, select bank1
  8237     044C  00A8               	movwf	TH02_GetCompensatedRH@round_flag^(0+128)
  8238     044D                     l3496:
  8239                           
  8240                           ;TH02.c: 77:     float rhvalue, rhlinear;;TH02.c: 78:     int16_t ret = 12345;
  8241     044D  3039               	movlw	57
  8242     044E  00A9               	movwf	TH02_GetCompensatedRH@ret^(0+128)
  8243     044F  3030               	movlw	48
  8244     0450  00AA               	movwf	(TH02_GetCompensatedRH@ret^(0+128)+1)
  8245     0451                     l3498:
  8246                           
  8247                           ;TH02.c: 80:     if (_last_rh != 1111) {
  8248     0451  3057               	movlw	87
  8249     0452  0658               	xorwf	__last_rh^(0+128),w
  8250     0453  3004               	movlw	4
  8251     0454  1903               	skipnz
  8252     0455  0659               	xorwf	(__last_rh+1)^(0+128),w
  8253     0456  045A               	iorwf	(__last_rh+2)^(0+128),w
  8254     0457  045B               	iorwf	(__last_rh+3)^(0+128),w
  8255     0458  1903               	btfsc	3,2
  8256     0459  2C5B               	goto	u5411
  8257     045A  2C5C               	goto	u5410
  8258     045B                     u5411:
  8259     045B  2FD5               	goto	l3512
  8260     045C                     u5410:
  8261     045C                     l3500:
  8262                           
  8263                           ;TH02.c: 81:         rhvalue = (float)_last_rh / 100.0f;
  8264     045C  3042               	movlw	66
  8265     045D  1283               	bcf	3,5	;RP0=0, select bank0
  8266     045E  1303               	bcf	3,6	;RP1=0, select bank0
  8267     045F  00A3               	movwf	___fldiv@a+3
  8268     0460  30C8               	movlw	200
  8269     0461  00A2               	movwf	___fldiv@a+2
  8270     0462  3000               	movlw	0
  8271     0463  00A1               	movwf	___fldiv@a+1
  8272     0464  3000               	movlw	0
  8273     0465  00A0               	movwf	___fldiv@a
  8274     0466  1683               	bsf	3,5	;RP0=1, select bank1
  8275     0467  1303               	bcf	3,6	;RP1=0, select bank1
  8276     0468  085B               	movf	(__last_rh+3)^(0+128),w
  8277     0469  00F3               	movwf	___xxtofl@val+3
  8278     046A  085A               	movf	(__last_rh+2)^(0+128),w
  8279     046B  00F2               	movwf	___xxtofl@val+2
  8280     046C  0859               	movf	(__last_rh+1)^(0+128),w
  8281     046D  00F1               	movwf	___xxtofl@val+1
  8282     046E  0858               	movf	__last_rh^(0+128),w
  8283     046F  00F0               	movwf	___xxtofl@val
  8284     0470  3001               	movlw	1
  8285     0471  160A  118A  2303  120A  118A  	fcall	___xxtofl
  8286     0476  0873               	movf	?___xxtofl+3,w
  8287     0477  1283               	bcf	3,5	;RP0=0, select bank0
  8288     0478  1303               	bcf	3,6	;RP1=0, select bank0
  8289     0479  00A7               	movwf	___fldiv@b+3
  8290     047A  0872               	movf	?___xxtofl+2,w
  8291     047B  00A6               	movwf	___fldiv@b+2
  8292     047C  0871               	movf	?___xxtofl+1,w
  8293     047D  00A5               	movwf	___fldiv@b+1
  8294     047E  0870               	movf	?___xxtofl,w
  8295     047F  00A4               	movwf	___fldiv@b
  8296     0480  120A  158A  21AA  120A  118A  	fcall	___fldiv
  8297     0485  1283               	bcf	3,5	;RP0=0, select bank0
  8298     0486  1303               	bcf	3,6	;RP1=0, select bank0
  8299     0487  0823               	movf	?___fldiv+3,w
  8300     0488  1683               	bsf	3,5	;RP0=1, select bank1
  8301     0489  1303               	bcf	3,6	;RP1=0, select bank1
  8302     048A  00BA               	movwf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128)
  8303     048B  1283               	bcf	3,5	;RP0=0, select bank0
  8304     048C  1303               	bcf	3,6	;RP1=0, select bank0
  8305     048D  0822               	movf	?___fldiv+2,w
  8306     048E  1683               	bsf	3,5	;RP0=1, select bank1
  8307     048F  1303               	bcf	3,6	;RP1=0, select bank1
  8308     0490  00B9               	movwf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128)
  8309     0491  1283               	bcf	3,5	;RP0=0, select bank0
  8310     0492  1303               	bcf	3,6	;RP1=0, select bank0
  8311     0493  0821               	movf	?___fldiv+1,w
  8312     0494  1683               	bsf	3,5	;RP0=1, select bank1
  8313     0495  1303               	bcf	3,6	;RP1=0, select bank1
  8314     0496  00B8               	movwf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128)
  8315     0497  1283               	bcf	3,5	;RP0=0, select bank0
  8316     0498  1303               	bcf	3,6	;RP1=0, select bank0
  8317     0499  0820               	movf	?___fldiv,w
  8318     049A  1683               	bsf	3,5	;RP0=1, select bank1
  8319     049B  1303               	bcf	3,6	;RP1=0, select bank1
  8320     049C  00B7               	movwf	TH02_GetCompensatedRH@rhvalue^(0+128)
  8321                           
  8322                           ;TH02.c: 83:         rhlinear = rhvalue - ((rhvalue * rhvalue) * -0.00393f +
  8323     049D  083A               	movf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128),w
  8324     049E  1283               	bcf	3,5	;RP0=0, select bank0
  8325     049F  1303               	bcf	3,6	;RP1=0, select bank0
  8326     04A0  00BD               	movwf	___flmul@b+3
  8327     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  8328     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  8329     04A3  0839               	movf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128),w
  8330     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  8331     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  8332     04A6  00BC               	movwf	___flmul@b+2
  8333     04A7  1683               	bsf	3,5	;RP0=1, select bank1
  8334     04A8  1303               	bcf	3,6	;RP1=0, select bank1
  8335     04A9  0838               	movf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128),w
  8336     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  8337     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  8338     04AC  00BB               	movwf	___flmul@b+1
  8339     04AD  1683               	bsf	3,5	;RP0=1, select bank1
  8340     04AE  1303               	bcf	3,6	;RP1=0, select bank1
  8341     04AF  0837               	movf	TH02_GetCompensatedRH@rhvalue^(0+128),w
  8342     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  8343     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  8344     04B2  00BA               	movwf	___flmul@b
  8345     04B3  1683               	bsf	3,5	;RP0=1, select bank1
  8346     04B4  1303               	bcf	3,6	;RP1=0, select bank1
  8347     04B5  083A               	movf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128),w
  8348     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  8349     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  8350     04B8  00C1               	movwf	___flmul@a+3
  8351     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  8352     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  8353     04BB  0839               	movf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128),w
  8354     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  8355     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  8356     04BE  00C0               	movwf	___flmul@a+2
  8357     04BF  1683               	bsf	3,5	;RP0=1, select bank1
  8358     04C0  1303               	bcf	3,6	;RP1=0, select bank1
  8359     04C1  0838               	movf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128),w
  8360     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  8361     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  8362     04C4  00BF               	movwf	___flmul@a+1
  8363     04C5  1683               	bsf	3,5	;RP0=1, select bank1
  8364     04C6  1303               	bcf	3,6	;RP1=0, select bank1
  8365     04C7  0837               	movf	TH02_GetCompensatedRH@rhvalue^(0+128),w
  8366     04C8  1283               	bcf	3,5	;RP0=0, select bank0
  8367     04C9  1303               	bcf	3,6	;RP1=0, select bank0
  8368     04CA  00BE               	movwf	___flmul@a
  8369     04CB  120A  118A  2108  120A  118A  	fcall	___flmul
  8370     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  8371     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  8372     04D2  083D               	movf	?___flmul+3,w
  8373     04D3  1683               	bsf	3,5	;RP0=1, select bank1
  8374     04D4  1303               	bcf	3,6	;RP1=0, select bank1
  8375     04D5  00AE               	movwf	(_TH02_GetCompensatedRH$1021+3)^(0+128)
  8376     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  8377     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  8378     04D8  083C               	movf	?___flmul+2,w
  8379     04D9  1683               	bsf	3,5	;RP0=1, select bank1
  8380     04DA  1303               	bcf	3,6	;RP1=0, select bank1
  8381     04DB  00AD               	movwf	(_TH02_GetCompensatedRH$1021+2)^(0+128)
  8382     04DC  1283               	bcf	3,5	;RP0=0, select bank0
  8383     04DD  1303               	bcf	3,6	;RP1=0, select bank0
  8384     04DE  083B               	movf	?___flmul+1,w
  8385     04DF  1683               	bsf	3,5	;RP0=1, select bank1
  8386     04E0  1303               	bcf	3,6	;RP1=0, select bank1
  8387     04E1  00AC               	movwf	(_TH02_GetCompensatedRH$1021+1)^(0+128)
  8388     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  8389     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  8390     04E4  083A               	movf	?___flmul,w
  8391     04E5  1683               	bsf	3,5	;RP0=1, select bank1
  8392     04E6  1303               	bcf	3,6	;RP1=0, select bank1
  8393     04E7  00AB               	movwf	_TH02_GetCompensatedRH$1021^(0+128)
  8394                           
  8395                           ;TH02.c: 83:         rhlinear = rhvalue - ((rhvalue * rhvalue) * -0.00393f +
  8396     04E8  303E               	movlw	62
  8397     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  8398     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  8399     04EB  00BD               	movwf	___flmul@b+3
  8400     04EC  30CD               	movlw	205
  8401     04ED  00BC               	movwf	___flmul@b+2
  8402     04EE  3035               	movlw	53
  8403     04EF  00BB               	movwf	___flmul@b+1
  8404     04F0  30A8               	movlw	168
  8405     04F1  00BA               	movwf	___flmul@b
  8406     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  8407     04F3  1303               	bcf	3,6	;RP1=0, select bank1
  8408     04F4  083A               	movf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128),w
  8409     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  8410     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  8411     04F7  00C1               	movwf	___flmul@a+3
  8412     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  8413     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  8414     04FA  0839               	movf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128),w
  8415     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  8416     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  8417     04FD  00C0               	movwf	___flmul@a+2
  8418     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  8419     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  8420     0500  0838               	movf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128),w
  8421     0501  1283               	bcf	3,5	;RP0=0, select bank0
  8422     0502  1303               	bcf	3,6	;RP1=0, select bank0
  8423     0503  00BF               	movwf	___flmul@a+1
  8424     0504  1683               	bsf	3,5	;RP0=1, select bank1
  8425     0505  1303               	bcf	3,6	;RP1=0, select bank1
  8426     0506  0837               	movf	TH02_GetCompensatedRH@rhvalue^(0+128),w
  8427     0507  1283               	bcf	3,5	;RP0=0, select bank0
  8428     0508  1303               	bcf	3,6	;RP1=0, select bank0
  8429     0509  00BE               	movwf	___flmul@a
  8430     050A  120A  118A  2108  120A  118A  	fcall	___flmul
  8431     050F  1283               	bcf	3,5	;RP0=0, select bank0
  8432     0510  1303               	bcf	3,6	;RP1=0, select bank0
  8433     0511  083D               	movf	?___flmul+3,w
  8434     0512  00D7               	movwf	___fladd@b+3
  8435     0513  083C               	movf	?___flmul+2,w
  8436     0514  00D6               	movwf	___fladd@b+2
  8437     0515  083B               	movf	?___flmul+1,w
  8438     0516  00D5               	movwf	___fladd@b+1
  8439     0517  083A               	movf	?___flmul,w
  8440     0518  00D4               	movwf	___fladd@b
  8441     0519  30BB               	movlw	187
  8442     051A  00BD               	movwf	___flmul@b+3
  8443     051B  3080               	movlw	128
  8444     051C  00BC               	movwf	___flmul@b+2
  8445     051D  30C7               	movlw	199
  8446     051E  00BB               	movwf	___flmul@b+1
  8447     051F  303B               	movlw	59
  8448     0520  00BA               	movwf	___flmul@b
  8449     0521  1683               	bsf	3,5	;RP0=1, select bank1
  8450     0522  1303               	bcf	3,6	;RP1=0, select bank1
  8451     0523  082E               	movf	(_TH02_GetCompensatedRH$1021+3)^(0+128),w
  8452     0524  1283               	bcf	3,5	;RP0=0, select bank0
  8453     0525  1303               	bcf	3,6	;RP1=0, select bank0
  8454     0526  00C1               	movwf	___flmul@a+3
  8455     0527  1683               	bsf	3,5	;RP0=1, select bank1
  8456     0528  1303               	bcf	3,6	;RP1=0, select bank1
  8457     0529  082D               	movf	(_TH02_GetCompensatedRH$1021+2)^(0+128),w
  8458     052A  1283               	bcf	3,5	;RP0=0, select bank0
  8459     052B  1303               	bcf	3,6	;RP1=0, select bank0
  8460     052C  00C0               	movwf	___flmul@a+2
  8461     052D  1683               	bsf	3,5	;RP0=1, select bank1
  8462     052E  1303               	bcf	3,6	;RP1=0, select bank1
  8463     052F  082C               	movf	(_TH02_GetCompensatedRH$1021+1)^(0+128),w
  8464     0530  1283               	bcf	3,5	;RP0=0, select bank0
  8465     0531  1303               	bcf	3,6	;RP1=0, select bank0
  8466     0532  00BF               	movwf	___flmul@a+1
  8467     0533  1683               	bsf	3,5	;RP0=1, select bank1
  8468     0534  1303               	bcf	3,6	;RP1=0, select bank1
  8469     0535  082B               	movf	_TH02_GetCompensatedRH$1021^(0+128),w
  8470     0536  1283               	bcf	3,5	;RP0=0, select bank0
  8471     0537  1303               	bcf	3,6	;RP1=0, select bank0
  8472     0538  00BE               	movwf	___flmul@a
  8473     0539  120A  118A  2108  120A  118A  	fcall	___flmul
  8474     053E  1283               	bcf	3,5	;RP0=0, select bank0
  8475     053F  1303               	bcf	3,6	;RP1=0, select bank0
  8476     0540  083D               	movf	?___flmul+3,w
  8477     0541  00DB               	movwf	___fladd@a+3
  8478     0542  083C               	movf	?___flmul+2,w
  8479     0543  00DA               	movwf	___fladd@a+2
  8480     0544  083B               	movf	?___flmul+1,w
  8481     0545  00D9               	movwf	___fladd@a+1
  8482     0546  083A               	movf	?___flmul,w
  8483     0547  00D8               	movwf	___fladd@a
  8484     0548  120A  158A  25B0  120A  118A  	fcall	___fladd
  8485     054D  1283               	bcf	3,5	;RP0=0, select bank0
  8486     054E  1303               	bcf	3,6	;RP1=0, select bank0
  8487     054F  0857               	movf	?___fladd+3,w
  8488     0550  1683               	bsf	3,5	;RP0=1, select bank1
  8489     0551  1303               	bcf	3,6	;RP1=0, select bank1
  8490     0552  00B2               	movwf	(_TH02_GetCompensatedRH$1022+3)^(0+128)
  8491     0553  1283               	bcf	3,5	;RP0=0, select bank0
  8492     0554  1303               	bcf	3,6	;RP1=0, select bank0
  8493     0555  0856               	movf	?___fladd+2,w
  8494     0556  1683               	bsf	3,5	;RP0=1, select bank1
  8495     0557  1303               	bcf	3,6	;RP1=0, select bank1
  8496     0558  00B1               	movwf	(_TH02_GetCompensatedRH$1022+2)^(0+128)
  8497     0559  1283               	bcf	3,5	;RP0=0, select bank0
  8498     055A  1303               	bcf	3,6	;RP1=0, select bank0
  8499     055B  0855               	movf	?___fladd+1,w
  8500     055C  1683               	bsf	3,5	;RP0=1, select bank1
  8501     055D  1303               	bcf	3,6	;RP1=0, select bank1
  8502     055E  00B0               	movwf	(_TH02_GetCompensatedRH$1022+1)^(0+128)
  8503     055F  1283               	bcf	3,5	;RP0=0, select bank0
  8504     0560  1303               	bcf	3,6	;RP1=0, select bank0
  8505     0561  0854               	movf	?___fladd,w
  8506     0562  1683               	bsf	3,5	;RP0=1, select bank1
  8507     0563  1303               	bcf	3,6	;RP1=0, select bank1
  8508     0564  00AF               	movwf	_TH02_GetCompensatedRH$1022^(0+128)
  8509                           
  8510                           ;TH02.c: 83:         rhlinear = rhvalue - ((rhvalue * rhvalue) * -0.00393f +
  8511     0565  30C0               	movlw	192
  8512     0566  1283               	bcf	3,5	;RP0=0, select bank0
  8513     0567  1303               	bcf	3,6	;RP1=0, select bank0
  8514     0568  00D7               	movwf	___fladd@b+3
  8515     0569  3099               	movlw	153
  8516     056A  00D6               	movwf	___fladd@b+2
  8517     056B  3019               	movlw	25
  8518     056C  00D5               	movwf	___fladd@b+1
  8519     056D  30CE               	movlw	206
  8520     056E  00D4               	movwf	___fladd@b
  8521     056F  1683               	bsf	3,5	;RP0=1, select bank1
  8522     0570  1303               	bcf	3,6	;RP1=0, select bank1
  8523     0571  0832               	movf	(_TH02_GetCompensatedRH$1022+3)^(0+128),w
  8524     0572  1283               	bcf	3,5	;RP0=0, select bank0
  8525     0573  1303               	bcf	3,6	;RP1=0, select bank0
  8526     0574  00DB               	movwf	___fladd@a+3
  8527     0575  1683               	bsf	3,5	;RP0=1, select bank1
  8528     0576  1303               	bcf	3,6	;RP1=0, select bank1
  8529     0577  0831               	movf	(_TH02_GetCompensatedRH$1022+2)^(0+128),w
  8530     0578  1283               	bcf	3,5	;RP0=0, select bank0
  8531     0579  1303               	bcf	3,6	;RP1=0, select bank0
  8532     057A  00DA               	movwf	___fladd@a+2
  8533     057B  1683               	bsf	3,5	;RP0=1, select bank1
  8534     057C  1303               	bcf	3,6	;RP1=0, select bank1
  8535     057D  0830               	movf	(_TH02_GetCompensatedRH$1022+1)^(0+128),w
  8536     057E  1283               	bcf	3,5	;RP0=0, select bank0
  8537     057F  1303               	bcf	3,6	;RP1=0, select bank0
  8538     0580  00D9               	movwf	___fladd@a+1
  8539     0581  1683               	bsf	3,5	;RP0=1, select bank1
  8540     0582  1303               	bcf	3,6	;RP1=0, select bank1
  8541     0583  082F               	movf	_TH02_GetCompensatedRH$1022^(0+128),w
  8542     0584  1283               	bcf	3,5	;RP0=0, select bank0
  8543     0585  1303               	bcf	3,6	;RP1=0, select bank0
  8544     0586  00D8               	movwf	___fladd@a
  8545     0587  120A  158A  25B0  120A  118A  	fcall	___fladd
  8546     058C  1283               	bcf	3,5	;RP0=0, select bank0
  8547     058D  1303               	bcf	3,6	;RP1=0, select bank0
  8548     058E  0857               	movf	?___fladd+3,w
  8549     058F  1683               	bsf	3,5	;RP0=1, select bank1
  8550     0590  1303               	bcf	3,6	;RP1=0, select bank1
  8551     0591  00A7               	movwf	(_TH02_GetCompensatedRH$1023+3)^(0+128)
  8552     0592  1283               	bcf	3,5	;RP0=0, select bank0
  8553     0593  1303               	bcf	3,6	;RP1=0, select bank0
  8554     0594  0856               	movf	?___fladd+2,w
  8555     0595  1683               	bsf	3,5	;RP0=1, select bank1
  8556     0596  1303               	bcf	3,6	;RP1=0, select bank1
  8557     0597  00A6               	movwf	(_TH02_GetCompensatedRH$1023+2)^(0+128)
  8558     0598  1283               	bcf	3,5	;RP0=0, select bank0
  8559     0599  1303               	bcf	3,6	;RP1=0, select bank0
  8560     059A  0855               	movf	?___fladd+1,w
  8561     059B  1683               	bsf	3,5	;RP0=1, select bank1
  8562     059C  1303               	bcf	3,6	;RP1=0, select bank1
  8563     059D  00A5               	movwf	(_TH02_GetCompensatedRH$1023+1)^(0+128)
  8564     059E  1283               	bcf	3,5	;RP0=0, select bank0
  8565     059F  1303               	bcf	3,6	;RP1=0, select bank0
  8566     05A0  0854               	movf	?___fladd,w
  8567     05A1  1683               	bsf	3,5	;RP0=1, select bank1
  8568     05A2  1303               	bcf	3,6	;RP1=0, select bank1
  8569     05A3  00A4               	movwf	_TH02_GetCompensatedRH$1023^(0+128)
  8570                           
  8571                           ;TH02.c: 83:         rhlinear = rhvalue - ((rhvalue * rhvalue) * -0.00393f +
  8572     05A4  0827               	movf	(_TH02_GetCompensatedRH$1023+3)^(0+128),w
  8573     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  8574     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  8575     05A7  00EB               	movwf	___flsub@a+3
  8576     05A8  1683               	bsf	3,5	;RP0=1, select bank1
  8577     05A9  1303               	bcf	3,6	;RP1=0, select bank1
  8578     05AA  0826               	movf	(_TH02_GetCompensatedRH$1023+2)^(0+128),w
  8579     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  8580     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  8581     05AD  00EA               	movwf	___flsub@a+2
  8582     05AE  1683               	bsf	3,5	;RP0=1, select bank1
  8583     05AF  1303               	bcf	3,6	;RP1=0, select bank1
  8584     05B0  0825               	movf	(_TH02_GetCompensatedRH$1023+1)^(0+128),w
  8585     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  8586     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  8587     05B3  00E9               	movwf	___flsub@a+1
  8588     05B4  1683               	bsf	3,5	;RP0=1, select bank1
  8589     05B5  1303               	bcf	3,6	;RP1=0, select bank1
  8590     05B6  0824               	movf	_TH02_GetCompensatedRH$1023^(0+128),w
  8591     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  8592     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  8593     05B9  00E8               	movwf	___flsub@a
  8594     05BA  1683               	bsf	3,5	;RP0=1, select bank1
  8595     05BB  1303               	bcf	3,6	;RP1=0, select bank1
  8596     05BC  083A               	movf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128),w
  8597     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  8598     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  8599     05BF  00EF               	movwf	___flsub@b+3
  8600     05C0  1683               	bsf	3,5	;RP0=1, select bank1
  8601     05C1  1303               	bcf	3,6	;RP1=0, select bank1
  8602     05C2  0839               	movf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128),w
  8603     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  8604     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  8605     05C5  00EE               	movwf	___flsub@b+2
  8606     05C6  1683               	bsf	3,5	;RP0=1, select bank1
  8607     05C7  1303               	bcf	3,6	;RP1=0, select bank1
  8608     05C8  0838               	movf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128),w
  8609     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  8610     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  8611     05CB  00ED               	movwf	___flsub@b+1
  8612     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  8613     05CD  1303               	bcf	3,6	;RP1=0, select bank1
  8614     05CE  0837               	movf	TH02_GetCompensatedRH@rhvalue^(0+128),w
  8615     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  8616     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  8617     05D1  00EC               	movwf	___flsub@b
  8618     05D2  160A  158A  2304  120A  118A  	fcall	___flsub
  8619     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  8620     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  8621     05D9  086B               	movf	?___flsub+3,w
  8622     05DA  1683               	bsf	3,5	;RP0=1, select bank1
  8623     05DB  1303               	bcf	3,6	;RP1=0, select bank1
  8624     05DC  00B6               	movwf	(TH02_GetCompensatedRH@rhlinear+3)^(0+128)
  8625     05DD  1283               	bcf	3,5	;RP0=0, select bank0
  8626     05DE  1303               	bcf	3,6	;RP1=0, select bank0
  8627     05DF  086A               	movf	?___flsub+2,w
  8628     05E0  1683               	bsf	3,5	;RP0=1, select bank1
  8629     05E1  1303               	bcf	3,6	;RP1=0, select bank1
  8630     05E2  00B5               	movwf	(TH02_GetCompensatedRH@rhlinear+2)^(0+128)
  8631     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  8632     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  8633     05E5  0869               	movf	?___flsub+1,w
  8634     05E6  1683               	bsf	3,5	;RP0=1, select bank1
  8635     05E7  1303               	bcf	3,6	;RP1=0, select bank1
  8636     05E8  00B4               	movwf	(TH02_GetCompensatedRH@rhlinear+1)^(0+128)
  8637     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  8638     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  8639     05EB  0868               	movf	?___flsub,w
  8640     05EC  1683               	bsf	3,5	;RP0=1, select bank1
  8641     05ED  1303               	bcf	3,6	;RP1=0, select bank1
  8642     05EE  00B3               	movwf	TH02_GetCompensatedRH@rhlinear^(0+128)
  8643     05EF                     l3502:
  8644                           
  8645                           ;TH02.c: 87:         if (_last_temp != 55555) {
  8646     05EF  3003               	movlw	3
  8647     05F0  065C               	xorwf	__last_temp^(0+128),w
  8648     05F1  30D9               	movlw	217
  8649     05F2  1903               	skipnz
  8650     05F3  065D               	xorwf	(__last_temp+1)^(0+128),w
  8651     05F4  045E               	iorwf	(__last_temp+2)^(0+128),w
  8652     05F5  045F               	iorwf	(__last_temp+3)^(0+128),w
  8653     05F6  1903               	btfsc	3,2
  8654     05F7  2DF9               	goto	u5421
  8655     05F8  2DFA               	goto	u5420
  8656     05F9                     u5421:
  8657     05F9  2F14               	goto	l172
  8658     05FA                     u5420:
  8659     05FA                     l3504:
  8660                           
  8661                           ;TH02.c: 88:             rhlinear += ((_last_temp / 100.0f) - 30.0f) *
  8662     05FA  1683               	bsf	3,5	;RP0=1, select bank1
  8663     05FB  1303               	bcf	3,6	;RP1=0, select bank1
  8664     05FC  0836               	movf	(TH02_GetCompensatedRH@rhlinear+3)^(0+128),w
  8665     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  8666     05FE  1303               	bcf	3,6	;RP1=0, select bank0
  8667     05FF  00C1               	movwf	___flmul@a+3
  8668     0600  1683               	bsf	3,5	;RP0=1, select bank1
  8669     0601  1303               	bcf	3,6	;RP1=0, select bank1
  8670     0602  0835               	movf	(TH02_GetCompensatedRH@rhlinear+2)^(0+128),w
  8671     0603  1283               	bcf	3,5	;RP0=0, select bank0
  8672     0604  1303               	bcf	3,6	;RP1=0, select bank0
  8673     0605  00C0               	movwf	___flmul@a+2
  8674     0606  1683               	bsf	3,5	;RP0=1, select bank1
  8675     0607  1303               	bcf	3,6	;RP1=0, select bank1
  8676     0608  0834               	movf	(TH02_GetCompensatedRH@rhlinear+1)^(0+128),w
  8677     0609  1283               	bcf	3,5	;RP0=0, select bank0
  8678     060A  1303               	bcf	3,6	;RP1=0, select bank0
  8679     060B  00BF               	movwf	___flmul@a+1
  8680     060C  1683               	bsf	3,5	;RP0=1, select bank1
  8681     060D  1303               	bcf	3,6	;RP1=0, select bank1
  8682     060E  0833               	movf	TH02_GetCompensatedRH@rhlinear^(0+128),w
  8683     060F  1283               	bcf	3,5	;RP0=0, select bank0
  8684     0610  1303               	bcf	3,6	;RP1=0, select bank0
  8685     0611  00BE               	movwf	___flmul@a
  8686     0612  303B               	movlw	59
  8687     0613  00BD               	movwf	___flmul@b+3
  8688     0614  301B               	movlw	27
  8689     0615  00BC               	movwf	___flmul@b+2
  8690     0616  3052               	movlw	82
  8691     0617  00BB               	movwf	___flmul@b+1
  8692     0618  3000               	movlw	0
  8693     0619  00BA               	movwf	___flmul@b
  8694     061A  120A  118A  2108  120A  118A  	fcall	___flmul
  8695     061F  1283               	bcf	3,5	;RP0=0, select bank0
  8696     0620  1303               	bcf	3,6	;RP1=0, select bank0
  8697     0621  083D               	movf	?___flmul+3,w
  8698     0622  00DB               	movwf	___fladd@a+3
  8699     0623  083C               	movf	?___flmul+2,w
  8700     0624  00DA               	movwf	___fladd@a+2
  8701     0625  083B               	movf	?___flmul+1,w
  8702     0626  00D9               	movwf	___fladd@a+1
  8703     0627  083A               	movf	?___flmul,w
  8704     0628  00D8               	movwf	___fladd@a
  8705     0629  303E               	movlw	62
  8706     062A  00D7               	movwf	___fladd@b+3
  8707     062B  304A               	movlw	74
  8708     062C  00D6               	movwf	___fladd@b+2
  8709     062D  3009               	movlw	9
  8710     062E  00D5               	movwf	___fladd@b+1
  8711     062F  3003               	movlw	3
  8712     0630  00D4               	movwf	___fladd@b
  8713     0631  120A  158A  25B0  120A  118A  	fcall	___fladd
  8714     0636  1283               	bcf	3,5	;RP0=0, select bank0
  8715     0637  1303               	bcf	3,6	;RP1=0, select bank0
  8716     0638  0857               	movf	?___fladd+3,w
  8717     0639  1683               	bsf	3,5	;RP0=1, select bank1
  8718     063A  1303               	bcf	3,6	;RP1=0, select bank1
  8719     063B  00AE               	movwf	(_TH02_GetCompensatedRH$1021+3)^(0+128)
  8720     063C  1283               	bcf	3,5	;RP0=0, select bank0
  8721     063D  1303               	bcf	3,6	;RP1=0, select bank0
  8722     063E  0856               	movf	?___fladd+2,w
  8723     063F  1683               	bsf	3,5	;RP0=1, select bank1
  8724     0640  1303               	bcf	3,6	;RP1=0, select bank1
  8725     0641  00AD               	movwf	(_TH02_GetCompensatedRH$1021+2)^(0+128)
  8726     0642  1283               	bcf	3,5	;RP0=0, select bank0
  8727     0643  1303               	bcf	3,6	;RP1=0, select bank0
  8728     0644  0855               	movf	?___fladd+1,w
  8729     0645  1683               	bsf	3,5	;RP0=1, select bank1
  8730     0646  1303               	bcf	3,6	;RP1=0, select bank1
  8731     0647  00AC               	movwf	(_TH02_GetCompensatedRH$1021+1)^(0+128)
  8732     0648  1283               	bcf	3,5	;RP0=0, select bank0
  8733     0649  1303               	bcf	3,6	;RP1=0, select bank0
  8734     064A  0854               	movf	?___fladd,w
  8735     064B  1683               	bsf	3,5	;RP0=1, select bank1
  8736     064C  1303               	bcf	3,6	;RP1=0, select bank1
  8737     064D  00AB               	movwf	_TH02_GetCompensatedRH$1021^(0+128)
  8738                           
  8739                           ;TH02.c: 88:             rhlinear += ((_last_temp / 100.0f) - 30.0f) *
  8740     064E  085F               	movf	(__last_temp+3)^(0+128),w
  8741     064F  00F3               	movwf	___xxtofl@val+3
  8742     0650  085E               	movf	(__last_temp+2)^(0+128),w
  8743     0651  00F2               	movwf	___xxtofl@val+2
  8744     0652  085D               	movf	(__last_temp+1)^(0+128),w
  8745     0653  00F1               	movwf	___xxtofl@val+1
  8746     0654  085C               	movf	__last_temp^(0+128),w
  8747     0655  00F0               	movwf	___xxtofl@val
  8748     0656  3001               	movlw	1
  8749     0657  160A  118A  2303  120A  118A  	fcall	___xxtofl
  8750     065C  0873               	movf	?___xxtofl+3,w
  8751     065D  1283               	bcf	3,5	;RP0=0, select bank0
  8752     065E  1303               	bcf	3,6	;RP1=0, select bank0
  8753     065F  00A7               	movwf	___fldiv@b+3
  8754     0660  0872               	movf	?___xxtofl+2,w
  8755     0661  00A6               	movwf	___fldiv@b+2
  8756     0662  0871               	movf	?___xxtofl+1,w
  8757     0663  00A5               	movwf	___fldiv@b+1
  8758     0664  0870               	movf	?___xxtofl,w
  8759     0665  00A4               	movwf	___fldiv@b
  8760     0666  3042               	movlw	66
  8761     0667  00A3               	movwf	___fldiv@a+3
  8762     0668  30C8               	movlw	200
  8763     0669  00A2               	movwf	___fldiv@a+2
  8764     066A  3000               	movlw	0
  8765     066B  00A1               	movwf	___fldiv@a+1
  8766     066C  3000               	movlw	0
  8767     066D  00A0               	movwf	___fldiv@a
  8768     066E  120A  158A  21AA  120A  118A  	fcall	___fldiv
  8769     0673  1283               	bcf	3,5	;RP0=0, select bank0
  8770     0674  1303               	bcf	3,6	;RP1=0, select bank0
  8771     0675  0823               	movf	?___fldiv+3,w
  8772     0676  00DB               	movwf	___fladd@a+3
  8773     0677  0822               	movf	?___fldiv+2,w
  8774     0678  00DA               	movwf	___fladd@a+2
  8775     0679  0821               	movf	?___fldiv+1,w
  8776     067A  00D9               	movwf	___fladd@a+1
  8777     067B  0820               	movf	?___fldiv,w
  8778     067C  00D8               	movwf	___fladd@a
  8779     067D  30C1               	movlw	193
  8780     067E  00D7               	movwf	___fladd@b+3
  8781     067F  30F0               	movlw	240
  8782     0680  00D6               	movwf	___fladd@b+2
  8783     0681  3000               	movlw	0
  8784     0682  00D5               	movwf	___fladd@b+1
  8785     0683  3000               	movlw	0
  8786     0684  00D4               	movwf	___fladd@b
  8787     0685  120A  158A  25B0  120A  118A  	fcall	___fladd
  8788     068A  1283               	bcf	3,5	;RP0=0, select bank0
  8789     068B  1303               	bcf	3,6	;RP1=0, select bank0
  8790     068C  0857               	movf	?___fladd+3,w
  8791     068D  00C1               	movwf	___flmul@a+3
  8792     068E  0856               	movf	?___fladd+2,w
  8793     068F  00C0               	movwf	___flmul@a+2
  8794     0690  0855               	movf	?___fladd+1,w
  8795     0691  00BF               	movwf	___flmul@a+1
  8796     0692  0854               	movf	?___fladd,w
  8797     0693  00BE               	movwf	___flmul@a
  8798     0694  1683               	bsf	3,5	;RP0=1, select bank1
  8799     0695  1303               	bcf	3,6	;RP1=0, select bank1
  8800     0696  082E               	movf	(_TH02_GetCompensatedRH$1021+3)^(0+128),w
  8801     0697  1283               	bcf	3,5	;RP0=0, select bank0
  8802     0698  1303               	bcf	3,6	;RP1=0, select bank0
  8803     0699  00BD               	movwf	___flmul@b+3
  8804     069A  1683               	bsf	3,5	;RP0=1, select bank1
  8805     069B  1303               	bcf	3,6	;RP1=0, select bank1
  8806     069C  082D               	movf	(_TH02_GetCompensatedRH$1021+2)^(0+128),w
  8807     069D  1283               	bcf	3,5	;RP0=0, select bank0
  8808     069E  1303               	bcf	3,6	;RP1=0, select bank0
  8809     069F  00BC               	movwf	___flmul@b+2
  8810     06A0  1683               	bsf	3,5	;RP0=1, select bank1
  8811     06A1  1303               	bcf	3,6	;RP1=0, select bank1
  8812     06A2  082C               	movf	(_TH02_GetCompensatedRH$1021+1)^(0+128),w
  8813     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  8814     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  8815     06A5  00BB               	movwf	___flmul@b+1
  8816     06A6  1683               	bsf	3,5	;RP0=1, select bank1
  8817     06A7  1303               	bcf	3,6	;RP1=0, select bank1
  8818     06A8  082B               	movf	_TH02_GetCompensatedRH$1021^(0+128),w
  8819     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  8820     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  8821     06AB  00BA               	movwf	___flmul@b
  8822     06AC  120A  118A  2108  120A  118A  	fcall	___flmul
  8823     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  8824     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  8825     06B3  083D               	movf	?___flmul+3,w
  8826     06B4  1683               	bsf	3,5	;RP0=1, select bank1
  8827     06B5  1303               	bcf	3,6	;RP1=0, select bank1
  8828     06B6  00B2               	movwf	(_TH02_GetCompensatedRH$1022+3)^(0+128)
  8829     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  8830     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  8831     06B9  083C               	movf	?___flmul+2,w
  8832     06BA  1683               	bsf	3,5	;RP0=1, select bank1
  8833     06BB  1303               	bcf	3,6	;RP1=0, select bank1
  8834     06BC  00B1               	movwf	(_TH02_GetCompensatedRH$1022+2)^(0+128)
  8835     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  8836     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  8837     06BF  083B               	movf	?___flmul+1,w
  8838     06C0  1683               	bsf	3,5	;RP0=1, select bank1
  8839     06C1  1303               	bcf	3,6	;RP1=0, select bank1
  8840     06C2  00B0               	movwf	(_TH02_GetCompensatedRH$1022+1)^(0+128)
  8841     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  8842     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  8843     06C5  083A               	movf	?___flmul,w
  8844     06C6  1683               	bsf	3,5	;RP0=1, select bank1
  8845     06C7  1303               	bcf	3,6	;RP1=0, select bank1
  8846     06C8  00AF               	movwf	_TH02_GetCompensatedRH$1022^(0+128)
  8847                           
  8848                           ;TH02.c: 88:             rhlinear += ((_last_temp / 100.0f) - 30.0f) *
  8849     06C9  0832               	movf	(_TH02_GetCompensatedRH$1022+3)^(0+128),w
  8850     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  8851     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  8852     06CC  00D7               	movwf	___fladd@b+3
  8853     06CD  1683               	bsf	3,5	;RP0=1, select bank1
  8854     06CE  1303               	bcf	3,6	;RP1=0, select bank1
  8855     06CF  0831               	movf	(_TH02_GetCompensatedRH$1022+2)^(0+128),w
  8856     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  8857     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  8858     06D2  00D6               	movwf	___fladd@b+2
  8859     06D3  1683               	bsf	3,5	;RP0=1, select bank1
  8860     06D4  1303               	bcf	3,6	;RP1=0, select bank1
  8861     06D5  0830               	movf	(_TH02_GetCompensatedRH$1022+1)^(0+128),w
  8862     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  8863     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  8864     06D8  00D5               	movwf	___fladd@b+1
  8865     06D9  1683               	bsf	3,5	;RP0=1, select bank1
  8866     06DA  1303               	bcf	3,6	;RP1=0, select bank1
  8867     06DB  082F               	movf	_TH02_GetCompensatedRH$1022^(0+128),w
  8868     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  8869     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  8870     06DE  00D4               	movwf	___fladd@b
  8871     06DF  1683               	bsf	3,5	;RP0=1, select bank1
  8872     06E0  1303               	bcf	3,6	;RP1=0, select bank1
  8873     06E1  0836               	movf	(TH02_GetCompensatedRH@rhlinear+3)^(0+128),w
  8874     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  8875     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  8876     06E4  00DB               	movwf	___fladd@a+3
  8877     06E5  1683               	bsf	3,5	;RP0=1, select bank1
  8878     06E6  1303               	bcf	3,6	;RP1=0, select bank1
  8879     06E7  0835               	movf	(TH02_GetCompensatedRH@rhlinear+2)^(0+128),w
  8880     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  8881     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  8882     06EA  00DA               	movwf	___fladd@a+2
  8883     06EB  1683               	bsf	3,5	;RP0=1, select bank1
  8884     06EC  1303               	bcf	3,6	;RP1=0, select bank1
  8885     06ED  0834               	movf	(TH02_GetCompensatedRH@rhlinear+1)^(0+128),w
  8886     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  8887     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  8888     06F0  00D9               	movwf	___fladd@a+1
  8889     06F1  1683               	bsf	3,5	;RP0=1, select bank1
  8890     06F2  1303               	bcf	3,6	;RP1=0, select bank1
  8891     06F3  0833               	movf	TH02_GetCompensatedRH@rhlinear^(0+128),w
  8892     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  8893     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  8894     06F6  00D8               	movwf	___fladd@a
  8895     06F7  120A  158A  25B0  120A  118A  	fcall	___fladd
  8896     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  8897     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  8898     06FE  0857               	movf	?___fladd+3,w
  8899     06FF  1683               	bsf	3,5	;RP0=1, select bank1
  8900     0700  1303               	bcf	3,6	;RP1=0, select bank1
  8901     0701  00B6               	movwf	(TH02_GetCompensatedRH@rhlinear+3)^(0+128)
  8902     0702  1283               	bcf	3,5	;RP0=0, select bank0
  8903     0703  1303               	bcf	3,6	;RP1=0, select bank0
  8904     0704  0856               	movf	?___fladd+2,w
  8905     0705  1683               	bsf	3,5	;RP0=1, select bank1
  8906     0706  1303               	bcf	3,6	;RP1=0, select bank1
  8907     0707  00B5               	movwf	(TH02_GetCompensatedRH@rhlinear+2)^(0+128)
  8908     0708  1283               	bcf	3,5	;RP0=0, select bank0
  8909     0709  1303               	bcf	3,6	;RP1=0, select bank0
  8910     070A  0855               	movf	?___fladd+1,w
  8911     070B  1683               	bsf	3,5	;RP0=1, select bank1
  8912     070C  1303               	bcf	3,6	;RP1=0, select bank1
  8913     070D  00B4               	movwf	(TH02_GetCompensatedRH@rhlinear+1)^(0+128)
  8914     070E  1283               	bcf	3,5	;RP0=0, select bank0
  8915     070F  1303               	bcf	3,6	;RP1=0, select bank0
  8916     0710  0854               	movf	?___fladd,w
  8917     0711  1683               	bsf	3,5	;RP0=1, select bank1
  8918     0712  1303               	bcf	3,6	;RP1=0, select bank1
  8919     0713  00B3               	movwf	TH02_GetCompensatedRH@rhlinear^(0+128)
  8920     0714                     l172:	
  8921                           ;TH02.c: 90:             }
  8922                           
  8923                           
  8924                           ;TH02.c: 92:         rhvalue = rhlinear * 100.0f;
  8925     0714  3042               	movlw	66
  8926     0715  1283               	bcf	3,5	;RP0=0, select bank0
  8927     0716  1303               	bcf	3,6	;RP1=0, select bank0
  8928     0717  00BD               	movwf	___flmul@b+3
  8929     0718  30C8               	movlw	200
  8930     0719  00BC               	movwf	___flmul@b+2
  8931     071A  3000               	movlw	0
  8932     071B  00BB               	movwf	___flmul@b+1
  8933     071C  3000               	movlw	0
  8934     071D  00BA               	movwf	___flmul@b
  8935     071E  1683               	bsf	3,5	;RP0=1, select bank1
  8936     071F  1303               	bcf	3,6	;RP1=0, select bank1
  8937     0720  0836               	movf	(TH02_GetCompensatedRH@rhlinear+3)^(0+128),w
  8938     0721  1283               	bcf	3,5	;RP0=0, select bank0
  8939     0722  1303               	bcf	3,6	;RP1=0, select bank0
  8940     0723  00C1               	movwf	___flmul@a+3
  8941     0724  1683               	bsf	3,5	;RP0=1, select bank1
  8942     0725  1303               	bcf	3,6	;RP1=0, select bank1
  8943     0726  0835               	movf	(TH02_GetCompensatedRH@rhlinear+2)^(0+128),w
  8944     0727  1283               	bcf	3,5	;RP0=0, select bank0
  8945     0728  1303               	bcf	3,6	;RP1=0, select bank0
  8946     0729  00C0               	movwf	___flmul@a+2
  8947     072A  1683               	bsf	3,5	;RP0=1, select bank1
  8948     072B  1303               	bcf	3,6	;RP1=0, select bank1
  8949     072C  0834               	movf	(TH02_GetCompensatedRH@rhlinear+1)^(0+128),w
  8950     072D  1283               	bcf	3,5	;RP0=0, select bank0
  8951     072E  1303               	bcf	3,6	;RP1=0, select bank0
  8952     072F  00BF               	movwf	___flmul@a+1
  8953     0730  1683               	bsf	3,5	;RP0=1, select bank1
  8954     0731  1303               	bcf	3,6	;RP1=0, select bank1
  8955     0732  0833               	movf	TH02_GetCompensatedRH@rhlinear^(0+128),w
  8956     0733  1283               	bcf	3,5	;RP0=0, select bank0
  8957     0734  1303               	bcf	3,6	;RP1=0, select bank0
  8958     0735  00BE               	movwf	___flmul@a
  8959     0736  120A  118A  2108  120A  118A  	fcall	___flmul
  8960     073B  1283               	bcf	3,5	;RP0=0, select bank0
  8961     073C  1303               	bcf	3,6	;RP1=0, select bank0
  8962     073D  083D               	movf	?___flmul+3,w
  8963     073E  1683               	bsf	3,5	;RP0=1, select bank1
  8964     073F  1303               	bcf	3,6	;RP1=0, select bank1
  8965     0740  00BA               	movwf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128)
  8966     0741  1283               	bcf	3,5	;RP0=0, select bank0
  8967     0742  1303               	bcf	3,6	;RP1=0, select bank0
  8968     0743  083C               	movf	?___flmul+2,w
  8969     0744  1683               	bsf	3,5	;RP0=1, select bank1
  8970     0745  1303               	bcf	3,6	;RP1=0, select bank1
  8971     0746  00B9               	movwf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128)
  8972     0747  1283               	bcf	3,5	;RP0=0, select bank0
  8973     0748  1303               	bcf	3,6	;RP1=0, select bank0
  8974     0749  083B               	movf	?___flmul+1,w
  8975     074A  1683               	bsf	3,5	;RP0=1, select bank1
  8976     074B  1303               	bcf	3,6	;RP1=0, select bank1
  8977     074C  00B8               	movwf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128)
  8978     074D  1283               	bcf	3,5	;RP0=0, select bank0
  8979     074E  1303               	bcf	3,6	;RP1=0, select bank0
  8980     074F  083A               	movf	?___flmul,w
  8981     0750  1683               	bsf	3,5	;RP0=1, select bank1
  8982     0751  1303               	bcf	3,6	;RP1=0, select bank1
  8983     0752  00B7               	movwf	TH02_GetCompensatedRH@rhvalue^(0+128)
  8984     0753                     l3506:
  8985                           
  8986                           ;TH02.c: 94:         if (round_flag) {
  8987     0753  0828               	movf	TH02_GetCompensatedRH@round_flag^(0+128),w
  8988     0754  1903               	btfsc	3,2
  8989     0755  2F57               	goto	u5431
  8990     0756  2F58               	goto	u5430
  8991     0757                     u5431:
  8992     0757  2FAE               	goto	l3510
  8993     0758                     u5430:
  8994     0758                     l3508:
  8995                           
  8996                           ;TH02.c: 95:             ret = (int16_t)((rhvalue + 5.0f) / 10.0f);
  8997     0758  083A               	movf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128),w
  8998     0759  1283               	bcf	3,5	;RP0=0, select bank0
  8999     075A  1303               	bcf	3,6	;RP1=0, select bank0
  9000     075B  00DB               	movwf	___fladd@a+3
  9001     075C  1683               	bsf	3,5	;RP0=1, select bank1
  9002     075D  1303               	bcf	3,6	;RP1=0, select bank1
  9003     075E  0839               	movf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128),w
  9004     075F  1283               	bcf	3,5	;RP0=0, select bank0
  9005     0760  1303               	bcf	3,6	;RP1=0, select bank0
  9006     0761  00DA               	movwf	___fladd@a+2
  9007     0762  1683               	bsf	3,5	;RP0=1, select bank1
  9008     0763  1303               	bcf	3,6	;RP1=0, select bank1
  9009     0764  0838               	movf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128),w
  9010     0765  1283               	bcf	3,5	;RP0=0, select bank0
  9011     0766  1303               	bcf	3,6	;RP1=0, select bank0
  9012     0767  00D9               	movwf	___fladd@a+1
  9013     0768  1683               	bsf	3,5	;RP0=1, select bank1
  9014     0769  1303               	bcf	3,6	;RP1=0, select bank1
  9015     076A  0837               	movf	TH02_GetCompensatedRH@rhvalue^(0+128),w
  9016     076B  1283               	bcf	3,5	;RP0=0, select bank0
  9017     076C  1303               	bcf	3,6	;RP1=0, select bank0
  9018     076D  00D8               	movwf	___fladd@a
  9019     076E  3040               	movlw	64
  9020     076F  00D7               	movwf	___fladd@b+3
  9021     0770  30A0               	movlw	160
  9022     0771  00D6               	movwf	___fladd@b+2
  9023     0772  3000               	movlw	0
  9024     0773  00D5               	movwf	___fladd@b+1
  9025     0774  3000               	movlw	0
  9026     0775  00D4               	movwf	___fladd@b
  9027     0776  120A  158A  25B0  120A  118A  	fcall	___fladd
  9028     077B  1283               	bcf	3,5	;RP0=0, select bank0
  9029     077C  1303               	bcf	3,6	;RP1=0, select bank0
  9030     077D  0857               	movf	?___fladd+3,w
  9031     077E  00A7               	movwf	___fldiv@b+3
  9032     077F  0856               	movf	?___fladd+2,w
  9033     0780  00A6               	movwf	___fldiv@b+2
  9034     0781  0855               	movf	?___fladd+1,w
  9035     0782  00A5               	movwf	___fldiv@b+1
  9036     0783  0854               	movf	?___fladd,w
  9037     0784  00A4               	movwf	___fldiv@b
  9038     0785  3041               	movlw	65
  9039     0786  00A3               	movwf	___fldiv@a+3
  9040     0787  3020               	movlw	32
  9041     0788  00A2               	movwf	___fldiv@a+2
  9042     0789  3000               	movlw	0
  9043     078A  00A1               	movwf	___fldiv@a+1
  9044     078B  3000               	movlw	0
  9045     078C  00A0               	movwf	___fldiv@a
  9046     078D  120A  158A  21AA  120A  118A  	fcall	___fldiv
  9047     0792  1283               	bcf	3,5	;RP0=0, select bank0
  9048     0793  1303               	bcf	3,6	;RP1=0, select bank0
  9049     0794  0823               	movf	?___fldiv+3,w
  9050     0795  00EB               	movwf	___fltol@f1+3
  9051     0796  0822               	movf	?___fldiv+2,w
  9052     0797  00EA               	movwf	___fltol@f1+2
  9053     0798  0821               	movf	?___fldiv+1,w
  9054     0799  00E9               	movwf	___fltol@f1+1
  9055     079A  0820               	movf	?___fldiv,w
  9056     079B  00E8               	movwf	___fltol@f1
  9057     079C  160A  158A  26DB  120A  118A  	fcall	___fltol
  9058     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  9059     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  9060     07A3  0869               	movf	?___fltol+1,w
  9061     07A4  1683               	bsf	3,5	;RP0=1, select bank1
  9062     07A5  1303               	bcf	3,6	;RP1=0, select bank1
  9063     07A6  00AA               	movwf	(TH02_GetCompensatedRH@ret+1)^(0+128)
  9064     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  9065     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  9066     07A9  0868               	movf	?___fltol,w
  9067     07AA  1683               	bsf	3,5	;RP0=1, select bank1
  9068     07AB  1303               	bcf	3,6	;RP1=0, select bank1
  9069     07AC  00A9               	movwf	TH02_GetCompensatedRH@ret^(0+128)
  9070                           
  9071                           ;TH02.c: 96:             } else {
  9072     07AD  2FD5               	goto	l3512
  9073     07AE                     l3510:
  9074                           
  9075                           ;TH02.c: 97:             ret = (int16_t)rhvalue;
  9076     07AE  083A               	movf	(TH02_GetCompensatedRH@rhvalue+3)^(0+128),w
  9077     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  9078     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  9079     07B1  00EB               	movwf	___fltol@f1+3
  9080     07B2  1683               	bsf	3,5	;RP0=1, select bank1
  9081     07B3  1303               	bcf	3,6	;RP1=0, select bank1
  9082     07B4  0839               	movf	(TH02_GetCompensatedRH@rhvalue+2)^(0+128),w
  9083     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  9084     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  9085     07B7  00EA               	movwf	___fltol@f1+2
  9086     07B8  1683               	bsf	3,5	;RP0=1, select bank1
  9087     07B9  1303               	bcf	3,6	;RP1=0, select bank1
  9088     07BA  0838               	movf	(TH02_GetCompensatedRH@rhvalue+1)^(0+128),w
  9089     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  9090     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  9091     07BD  00E9               	movwf	___fltol@f1+1
  9092     07BE  1683               	bsf	3,5	;RP0=1, select bank1
  9093     07BF  1303               	bcf	3,6	;RP1=0, select bank1
  9094     07C0  0837               	movf	TH02_GetCompensatedRH@rhvalue^(0+128),w
  9095     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  9096     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  9097     07C3  00E8               	movwf	___fltol@f1
  9098     07C4  160A  158A  26DB  120A  118A  	fcall	___fltol
  9099     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  9100     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  9101     07CB  0869               	movf	?___fltol+1,w
  9102     07CC  1683               	bsf	3,5	;RP0=1, select bank1
  9103     07CD  1303               	bcf	3,6	;RP1=0, select bank1
  9104     07CE  00AA               	movwf	(TH02_GetCompensatedRH@ret+1)^(0+128)
  9105     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  9106     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  9107     07D1  0868               	movf	?___fltol,w
  9108     07D2  1683               	bsf	3,5	;RP0=1, select bank1
  9109     07D3  1303               	bcf	3,6	;RP1=0, select bank1
  9110     07D4  00A9               	movwf	TH02_GetCompensatedRH@ret^(0+128)
  9111     07D5                     l3512:
  9112                           
  9113                           ;TH02.c: 101:     return ret;
  9114     07D5  1683               	bsf	3,5	;RP0=1, select bank1
  9115     07D6  1303               	bcf	3,6	;RP1=0, select bank1
  9116     07D7  082A               	movf	(TH02_GetCompensatedRH@ret+1)^(0+128),w
  9117     07D8  00A3               	movwf	(?_TH02_GetCompensatedRH+1)^(0+128)
  9118     07D9  0829               	movf	TH02_GetCompensatedRH@ret^(0+128),w
  9119     07DA  00A2               	movwf	?_TH02_GetCompensatedRH^(0+128)
  9120     07DB                     l175:
  9121     07DB  0008               	return
  9122     07DC                     __end_of_TH02_GetCompensatedRH:
  9123                           
  9124                           	psect	text40
  9125     1303                     __ptext40:	
  9126 ;; *************** function ___xxtofl *****************
  9127 ;; Defined at:
  9128 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;  sign            1    wreg     unsigned char 
  9131 ;;  val             4    0[COMMON] long 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  sign            1    8[COMMON] unsigned char 
  9134 ;;  arg             4   10[COMMON] unsigned long 
  9135 ;;  exp             1    9[COMMON] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  4    0[COMMON] unsigned char 
  9138 ;; Registers used:
  9139 ;;		wreg, status,2, status,0
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9145 ;;      Params:         4       0       0       0       0
  9146 ;;      Locals:         6       0       0       0       0
  9147 ;;      Temps:          4       0       0       0       0
  9148 ;;      Totals:        14       0       0       0       0
  9149 ;;Total ram usage:       14 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; This function calls:
  9152 ;;		Nothing
  9153 ;; This function is called by:
  9154 ;;		_TH02_GetCompensatedRH
  9155 ;;		_TH02_GetConversionValue
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159     1303                     ___xxtofl:	
  9160                           ;psect for function ___xxtofl
  9161                           
  9162                           
  9163                           ;incstack = 0
  9164                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9165                           ;___xxtofl@sign stored from wreg
  9166     1303  00F8               	movwf	___xxtofl@sign
  9167     1304                     l3374:
  9168     1304  0878               	movf	___xxtofl@sign,w
  9169     1305  1903               	btfsc	3,2
  9170     1306  2B08               	goto	u5181
  9171     1307  2B09               	goto	u5180
  9172     1308                     u5181:
  9173     1308  2B1D               	goto	l3380
  9174     1309                     u5180:
  9175     1309                     l3376:
  9176     1309  1FF3               	btfss	___xxtofl@val+3,7
  9177     130A  2B0C               	goto	u5191
  9178     130B  2B0D               	goto	u5190
  9179     130C                     u5191:
  9180     130C  2B1D               	goto	l3380
  9181     130D                     u5190:
  9182     130D                     l3378:
  9183     130D  0970               	comf	___xxtofl@val,w
  9184     130E  00FA               	movwf	___xxtofl@arg
  9185     130F  0971               	comf	___xxtofl@val+1,w
  9186     1310  00FB               	movwf	___xxtofl@arg+1
  9187     1311  0972               	comf	___xxtofl@val+2,w
  9188     1312  00FC               	movwf	___xxtofl@arg+2
  9189     1313  0973               	comf	___xxtofl@val+3,w
  9190     1314  00FD               	movwf	___xxtofl@arg+3
  9191     1315  0AFA               	incf	___xxtofl@arg,f
  9192     1316  1903               	skipnz
  9193     1317  0AFB               	incf	___xxtofl@arg+1,f
  9194     1318  1903               	skipnz
  9195     1319  0AFC               	incf	___xxtofl@arg+2,f
  9196     131A  1903               	skipnz
  9197     131B  0AFD               	incf	___xxtofl@arg+3,f
  9198     131C  2B25               	goto	l751
  9199     131D                     l3380:
  9200     131D  0873               	movf	___xxtofl@val+3,w
  9201     131E  00FD               	movwf	___xxtofl@arg+3
  9202     131F  0872               	movf	___xxtofl@val+2,w
  9203     1320  00FC               	movwf	___xxtofl@arg+2
  9204     1321  0871               	movf	___xxtofl@val+1,w
  9205     1322  00FB               	movwf	___xxtofl@arg+1
  9206     1323  0870               	movf	___xxtofl@val,w
  9207     1324  00FA               	movwf	___xxtofl@arg
  9208     1325                     l751:
  9209     1325  0873               	movf	___xxtofl@val+3,w
  9210     1326  0472               	iorwf	___xxtofl@val+2,w
  9211     1327  0471               	iorwf	___xxtofl@val+1,w
  9212     1328  0470               	iorwf	___xxtofl@val,w
  9213     1329  1D03               	skipz
  9214     132A  2B2C               	goto	u5201
  9215     132B  2B2D               	goto	u5200
  9216     132C                     u5201:
  9217     132C  2B36               	goto	l752
  9218     132D                     u5200:
  9219     132D                     l3382:
  9220     132D  3000               	movlw	0
  9221     132E  00F3               	movwf	?___xxtofl+3
  9222     132F  3000               	movlw	0
  9223     1330  00F2               	movwf	?___xxtofl+2
  9224     1331  3000               	movlw	0
  9225     1332  00F1               	movwf	?___xxtofl+1
  9226     1333  3000               	movlw	0
  9227     1334  00F0               	movwf	?___xxtofl
  9228     1335  2BB6               	goto	l753
  9229     1336                     l752:
  9230     1336  3096               	movlw	150
  9231     1337  00F9               	movwf	___xxtofl@exp
  9232     1338  2B44               	goto	l3388
  9233     1339                     l3386:
  9234     1339  3001               	movlw	1
  9235     133A  07F9               	addwf	___xxtofl@exp,f
  9236     133B  3001               	movlw	1
  9237     133C                     u5215:
  9238     133C  1003               	clrc
  9239     133D  0CFD               	rrf	___xxtofl@arg+3,f
  9240     133E  0CFC               	rrf	___xxtofl@arg+2,f
  9241     133F  0CFB               	rrf	___xxtofl@arg+1,f
  9242     1340  0CFA               	rrf	___xxtofl@arg,f
  9243     1341  3EFF               	addlw	-1
  9244     1342  1D03               	skipz
  9245     1343  2B3C               	goto	u5215
  9246     1344                     l3388:
  9247     1344  30FE               	movlw	254
  9248     1345  057D               	andwf	___xxtofl@arg+3,w
  9249     1346  1D03               	btfss	3,2
  9250     1347  2B49               	goto	u5221
  9251     1348  2B4A               	goto	u5220
  9252     1349                     u5221:
  9253     1349  2B39               	goto	l3386
  9254     134A                     u5220:
  9255     134A  2B64               	goto	l757
  9256     134B                     l3390:
  9257     134B  3001               	movlw	1
  9258     134C  07F9               	addwf	___xxtofl@exp,f
  9259     134D                     l3392:
  9260     134D  3001               	movlw	1
  9261     134E  07FA               	addwf	___xxtofl@arg,f
  9262     134F  3000               	movlw	0
  9263     1350  1803               	skipnc
  9264     1351  3001               	movlw	1
  9265     1352  07FB               	addwf	___xxtofl@arg+1,f
  9266     1353  3000               	movlw	0
  9267     1354  1803               	skipnc
  9268     1355  3001               	movlw	1
  9269     1356  07FC               	addwf	___xxtofl@arg+2,f
  9270     1357  3000               	movlw	0
  9271     1358  1803               	skipnc
  9272     1359  3001               	movlw	1
  9273     135A  07FD               	addwf	___xxtofl@arg+3,f
  9274     135B                     l3394:
  9275     135B  3001               	movlw	1
  9276     135C                     u5235:
  9277     135C  1003               	clrc
  9278     135D  0CFD               	rrf	___xxtofl@arg+3,f
  9279     135E  0CFC               	rrf	___xxtofl@arg+2,f
  9280     135F  0CFB               	rrf	___xxtofl@arg+1,f
  9281     1360  0CFA               	rrf	___xxtofl@arg,f
  9282     1361  3EFF               	addlw	-1
  9283     1362  1D03               	skipz
  9284     1363  2B5C               	goto	u5235
  9285     1364                     l757:
  9286     1364  30FF               	movlw	255
  9287     1365  057D               	andwf	___xxtofl@arg+3,w
  9288     1366  1D03               	btfss	3,2
  9289     1367  2B69               	goto	u5241
  9290     1368  2B6A               	goto	u5240
  9291     1369                     u5241:
  9292     1369  2B4B               	goto	l3390
  9293     136A                     u5240:
  9294     136A  2B76               	goto	l3398
  9295     136B                     l3396:
  9296     136B  3001               	movlw	1
  9297     136C  02F9               	subwf	___xxtofl@exp,f
  9298     136D  3001               	movlw	1
  9299     136E  00F4               	movwf	??___xxtofl
  9300     136F                     u5255:
  9301     136F  1003               	clrc
  9302     1370  0DFA               	rlf	___xxtofl@arg,f
  9303     1371  0DFB               	rlf	___xxtofl@arg+1,f
  9304     1372  0DFC               	rlf	___xxtofl@arg+2,f
  9305     1373  0DFD               	rlf	___xxtofl@arg+3,f
  9306     1374  0BF4               	decfsz	??___xxtofl,f
  9307     1375  2B6F               	goto	u5255
  9308     1376                     l3398:
  9309     1376  1BFC               	btfsc	___xxtofl@arg+2,7
  9310     1377  2B79               	goto	u5261
  9311     1378  2B7A               	goto	u5260
  9312     1379                     u5261:
  9313     1379  2B80               	goto	l764
  9314     137A                     u5260:
  9315     137A                     l3400:
  9316     137A  3002               	movlw	2
  9317     137B  0279               	subwf	___xxtofl@exp,w
  9318     137C  1803               	skipnc
  9319     137D  2B7F               	goto	u5271
  9320     137E  2B80               	goto	u5270
  9321     137F                     u5271:
  9322     137F  2B6B               	goto	l3396
  9323     1380                     u5270:
  9324     1380                     l764:
  9325     1380  1879               	btfsc	___xxtofl@exp,0
  9326     1381  2B83               	goto	u5281
  9327     1382  2B84               	goto	u5280
  9328     1383                     u5281:
  9329     1383  2B8C               	goto	l765
  9330     1384                     u5280:
  9331     1384                     l3402:
  9332     1384  30FF               	movlw	255
  9333     1385  05FA               	andwf	___xxtofl@arg,f
  9334     1386  30FF               	movlw	255
  9335     1387  05FB               	andwf	___xxtofl@arg+1,f
  9336     1388  307F               	movlw	127
  9337     1389  05FC               	andwf	___xxtofl@arg+2,f
  9338     138A  30FF               	movlw	255
  9339     138B  05FD               	andwf	___xxtofl@arg+3,f
  9340     138C                     l765:
  9341     138C  1003               	clrc
  9342     138D  0CF9               	rrf	___xxtofl@exp,f
  9343     138E                     l3404:
  9344     138E  0879               	movf	___xxtofl@exp,w
  9345     138F  00F4               	movwf	??___xxtofl
  9346     1390  01F5               	clrf	??___xxtofl+1
  9347     1391  01F6               	clrf	??___xxtofl+2
  9348     1392  01F7               	clrf	??___xxtofl+3
  9349     1393  3018               	movlw	24
  9350     1394                     u5295:
  9351     1394  1003               	clrc
  9352     1395  0DF4               	rlf	??___xxtofl,f
  9353     1396  0DF5               	rlf	??___xxtofl+1,f
  9354     1397  0DF6               	rlf	??___xxtofl+2,f
  9355     1398  0DF7               	rlf	??___xxtofl+3,f
  9356     1399                     u5290:
  9357     1399  3EFF               	addlw	-1
  9358     139A  1D03               	skipz
  9359     139B  2B94               	goto	u5295
  9360     139C  0874               	movf	??___xxtofl,w
  9361     139D  04FA               	iorwf	___xxtofl@arg,f
  9362     139E  0875               	movf	??___xxtofl+1,w
  9363     139F  04FB               	iorwf	___xxtofl@arg+1,f
  9364     13A0  0876               	movf	??___xxtofl+2,w
  9365     13A1  04FC               	iorwf	___xxtofl@arg+2,f
  9366     13A2  0877               	movf	??___xxtofl+3,w
  9367     13A3  04FD               	iorwf	___xxtofl@arg+3,f
  9368     13A4                     l3406:
  9369     13A4  0878               	movf	___xxtofl@sign,w
  9370     13A5  1903               	btfsc	3,2
  9371     13A6  2BA8               	goto	u5301
  9372     13A7  2BA9               	goto	u5300
  9373     13A8                     u5301:
  9374     13A8  2BAE               	goto	l3412
  9375     13A9                     u5300:
  9376     13A9                     l3408:
  9377     13A9  1FF3               	btfss	___xxtofl@val+3,7
  9378     13AA  2BAC               	goto	u5311
  9379     13AB  2BAD               	goto	u5310
  9380     13AC                     u5311:
  9381     13AC  2BAE               	goto	l3412
  9382     13AD                     u5310:
  9383     13AD                     l3410:
  9384     13AD  17FD               	bsf	___xxtofl@arg+3,7
  9385     13AE                     l3412:
  9386     13AE  087D               	movf	___xxtofl@arg+3,w
  9387     13AF  00F3               	movwf	?___xxtofl+3
  9388     13B0  087C               	movf	___xxtofl@arg+2,w
  9389     13B1  00F2               	movwf	?___xxtofl+2
  9390     13B2  087B               	movf	___xxtofl@arg+1,w
  9391     13B3  00F1               	movwf	?___xxtofl+1
  9392     13B4  087A               	movf	___xxtofl@arg,w
  9393     13B5  00F0               	movwf	?___xxtofl
  9394     13B6                     l753:
  9395     13B6  0008               	return
  9396     13B7                     __end_of___xxtofl:
  9397                           
  9398                           	psect	text41
  9399     1EDB                     __ptext41:	
  9400 ;; *************** function ___fltol *****************
  9401 ;; Defined at:
  9402 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  f1              4   72[BANK0 ] unsigned char 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  exp1            1    1[BANK1 ] unsigned char 
  9407 ;;  sign1           1    0[BANK1 ] unsigned char 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  4   72[BANK0 ] long 
  9410 ;; Registers used:
  9411 ;;		wreg, status,2, status,0
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9417 ;;      Params:         0       4       0       0       0
  9418 ;;      Locals:         0       0       2       0       0
  9419 ;;      Temps:          0       4       0       0       0
  9420 ;;      Totals:         0       8       2       0       0
  9421 ;;Total ram usage:       10 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_roundInt
  9427 ;;		_TH02_GetCompensatedRH
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431     1EDB                     ___fltol:	
  9432                           ;psect for function ___fltol
  9433                           
  9434     1EDB                     l2642:	
  9435                           ;incstack = 0
  9436                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9437                           
  9438     1EDB  1003               	clrc
  9439     1EDC  1283               	bcf	3,5	;RP0=0, select bank0
  9440     1EDD  1303               	bcf	3,6	;RP1=0, select bank0
  9441     1EDE  0D6A               	rlf	___fltol@f1+2,w
  9442     1EDF  0D6B               	rlf	___fltol@f1+3,w
  9443     1EE0  1683               	bsf	3,5	;RP0=1, select bank1
  9444     1EE1  1303               	bcf	3,6	;RP1=0, select bank1
  9445     1EE2  00A1               	movwf	___fltol@exp1^(0+128)
  9446     1EE3  0821               	movf	___fltol@exp1^(0+128),w
  9447     1EE4  1D03               	btfss	3,2
  9448     1EE5  2EE7               	goto	u3641
  9449     1EE6  2EE8               	goto	u3640
  9450     1EE7                     u3641:
  9451     1EE7  2EF3               	goto	l2648
  9452     1EE8                     u3640:
  9453     1EE8                     l2644:
  9454     1EE8  3000               	movlw	0
  9455     1EE9  1283               	bcf	3,5	;RP0=0, select bank0
  9456     1EEA  1303               	bcf	3,6	;RP1=0, select bank0
  9457     1EEB  00EB               	movwf	?___fltol+3
  9458     1EEC  3000               	movlw	0
  9459     1EED  00EA               	movwf	?___fltol+2
  9460     1EEE  3000               	movlw	0
  9461     1EEF  00E9               	movwf	?___fltol+1
  9462     1EF0  3000               	movlw	0
  9463     1EF1  00E8               	movwf	?___fltol
  9464     1EF2  2F66               	goto	l504
  9465     1EF3                     l2648:
  9466     1EF3  1283               	bcf	3,5	;RP0=0, select bank0
  9467     1EF4  1303               	bcf	3,6	;RP1=0, select bank0
  9468     1EF5  0868               	movf	___fltol@f1,w
  9469     1EF6  00EC               	movwf	??___fltol
  9470     1EF7  0869               	movf	___fltol@f1+1,w
  9471     1EF8  00ED               	movwf	??___fltol+1
  9472     1EF9  086A               	movf	___fltol@f1+2,w
  9473     1EFA  00EE               	movwf	??___fltol+2
  9474     1EFB  086B               	movf	___fltol@f1+3,w
  9475     1EFC  00EF               	movwf	??___fltol+3
  9476     1EFD  301F               	movlw	31
  9477     1EFE                     u3655:
  9478     1EFE  1003               	clrc
  9479     1EFF  0CEF               	rrf	??___fltol+3,f
  9480     1F00  0CEE               	rrf	??___fltol+2,f
  9481     1F01  0CED               	rrf	??___fltol+1,f
  9482     1F02  0CEC               	rrf	??___fltol,f
  9483     1F03                     u3650:
  9484     1F03  3EFF               	addlw	-1
  9485     1F04  1D03               	skipz
  9486     1F05  2EFE               	goto	u3655
  9487     1F06  086C               	movf	??___fltol,w
  9488     1F07  1683               	bsf	3,5	;RP0=1, select bank1
  9489     1F08  1303               	bcf	3,6	;RP1=0, select bank1
  9490     1F09  00A0               	movwf	___fltol@sign1^(0+128)
  9491     1F0A                     l2650:
  9492     1F0A  1283               	bcf	3,5	;RP0=0, select bank0
  9493     1F0B  1303               	bcf	3,6	;RP1=0, select bank0
  9494     1F0C  17EA               	bsf	___fltol@f1+2,7
  9495     1F0D                     l2652:
  9496     1F0D  30FF               	movlw	255
  9497     1F0E  05E8               	andwf	___fltol@f1,f
  9498     1F0F  30FF               	movlw	255
  9499     1F10  05E9               	andwf	___fltol@f1+1,f
  9500     1F11  30FF               	movlw	255
  9501     1F12  05EA               	andwf	___fltol@f1+2,f
  9502     1F13  3000               	movlw	0
  9503     1F14  05EB               	andwf	___fltol@f1+3,f
  9504     1F15                     l2654:
  9505     1F15  3096               	movlw	150
  9506     1F16  1683               	bsf	3,5	;RP0=1, select bank1
  9507     1F17  1303               	bcf	3,6	;RP1=0, select bank1
  9508     1F18  02A1               	subwf	___fltol@exp1^(0+128),f
  9509     1F19                     l2656:
  9510     1F19  1FA1               	btfss	___fltol@exp1^(0+128),7
  9511     1F1A  2F1C               	goto	u3661
  9512     1F1B  2F1D               	goto	u3660
  9513     1F1C                     u3661:
  9514     1F1C  2F39               	goto	l2666
  9515     1F1D                     u3660:
  9516     1F1D                     l2658:
  9517     1F1D  0821               	movf	___fltol@exp1^(0+128),w
  9518     1F1E  3A80               	xorlw	128
  9519     1F1F  3E97               	addlw	151
  9520     1F20  1803               	skipnc
  9521     1F21  2F23               	goto	u3671
  9522     1F22  2F24               	goto	u3670
  9523     1F23                     u3671:
  9524     1F23  2F25               	goto	l2664
  9525     1F24                     u3670:
  9526     1F24  2EE8               	goto	l2644
  9527     1F25                     l2664:
  9528     1F25  3001               	movlw	1
  9529     1F26                     u3685:
  9530     1F26  1003               	clrc
  9531     1F27  1283               	bcf	3,5	;RP0=0, select bank0
  9532     1F28  1303               	bcf	3,6	;RP1=0, select bank0
  9533     1F29  0CEB               	rrf	___fltol@f1+3,f
  9534     1F2A  0CEA               	rrf	___fltol@f1+2,f
  9535     1F2B  0CE9               	rrf	___fltol@f1+1,f
  9536     1F2C  0CE8               	rrf	___fltol@f1,f
  9537     1F2D  3EFF               	addlw	-1
  9538     1F2E  1D03               	skipz
  9539     1F2F  2F26               	goto	u3685
  9540     1F30  3001               	movlw	1
  9541     1F31  1683               	bsf	3,5	;RP0=1, select bank1
  9542     1F32  1303               	bcf	3,6	;RP1=0, select bank1
  9543     1F33  07A1               	addwf	___fltol@exp1^(0+128),f
  9544     1F34  1D03               	btfss	3,2
  9545     1F35  2F37               	goto	u3691
  9546     1F36  2F38               	goto	u3690
  9547     1F37                     u3691:
  9548     1F37  2F25               	goto	l2664
  9549     1F38                     u3690:
  9550     1F38  2F54               	goto	l2674
  9551     1F39                     l2666:
  9552     1F39  3020               	movlw	32
  9553     1F3A  0221               	subwf	___fltol@exp1^(0+128),w
  9554     1F3B  1C03               	skipc
  9555     1F3C  2F3E               	goto	u3701
  9556     1F3D  2F3F               	goto	u3700
  9557     1F3E                     u3701:
  9558     1F3E  2F4F               	goto	l511
  9559     1F3F                     u3700:
  9560     1F3F  2EE8               	goto	l2644
  9561     1F40                     l2672:
  9562     1F40  3001               	movlw	1
  9563     1F41  1283               	bcf	3,5	;RP0=0, select bank0
  9564     1F42  1303               	bcf	3,6	;RP1=0, select bank0
  9565     1F43  00EC               	movwf	??___fltol
  9566     1F44                     u3715:
  9567     1F44  1003               	clrc
  9568     1F45  0DE8               	rlf	___fltol@f1,f
  9569     1F46  0DE9               	rlf	___fltol@f1+1,f
  9570     1F47  0DEA               	rlf	___fltol@f1+2,f
  9571     1F48  0DEB               	rlf	___fltol@f1+3,f
  9572     1F49  0BEC               	decfsz	??___fltol,f
  9573     1F4A  2F44               	goto	u3715
  9574     1F4B  3001               	movlw	1
  9575     1F4C  1683               	bsf	3,5	;RP0=1, select bank1
  9576     1F4D  1303               	bcf	3,6	;RP1=0, select bank1
  9577     1F4E  02A1               	subwf	___fltol@exp1^(0+128),f
  9578     1F4F                     l511:
  9579     1F4F  0821               	movf	___fltol@exp1^(0+128),w
  9580     1F50  1D03               	btfss	3,2
  9581     1F51  2F53               	goto	u3721
  9582     1F52  2F54               	goto	u3720
  9583     1F53                     u3721:
  9584     1F53  2F40               	goto	l2672
  9585     1F54                     u3720:
  9586     1F54                     l2674:
  9587     1F54  0820               	movf	___fltol@sign1^(0+128),w
  9588     1F55  1903               	btfsc	3,2
  9589     1F56  2F58               	goto	u3731
  9590     1F57  2F59               	goto	u3730
  9591     1F58                     u3731:
  9592     1F58  2F66               	goto	l514
  9593     1F59                     u3730:
  9594     1F59                     l2676:
  9595     1F59  1283               	bcf	3,5	;RP0=0, select bank0
  9596     1F5A  1303               	bcf	3,6	;RP1=0, select bank0
  9597     1F5B  09E8               	comf	___fltol@f1,f
  9598     1F5C  09E9               	comf	___fltol@f1+1,f
  9599     1F5D  09EA               	comf	___fltol@f1+2,f
  9600     1F5E  09EB               	comf	___fltol@f1+3,f
  9601     1F5F  0AE8               	incf	___fltol@f1,f
  9602     1F60  1903               	skipnz
  9603     1F61  0AE9               	incf	___fltol@f1+1,f
  9604     1F62  1903               	skipnz
  9605     1F63  0AEA               	incf	___fltol@f1+2,f
  9606     1F64  1903               	skipnz
  9607     1F65  0AEB               	incf	___fltol@f1+3,f
  9608     1F66                     l514:
  9609     1F66                     l504:
  9610     1F66  0008               	return
  9611     1F67                     __end_of___fltol:
  9612                           
  9613                           	psect	text42
  9614     1B04                     __ptext42:	
  9615 ;; *************** function ___flsub *****************
  9616 ;; Defined at:
  9617 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  a               4   72[BANK0 ] long 
  9620 ;;  b               4   76[BANK0 ] long 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;		None
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  4   72[BANK0 ] long 
  9625 ;; Registers used:
  9626 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9632 ;;      Params:         0       8       0       0       0
  9633 ;;      Locals:         0       0       0       0       0
  9634 ;;      Temps:          0       0       0       0       0
  9635 ;;      Totals:         0       8       0       0       0
  9636 ;;Total ram usage:        8 bytes
  9637 ;; Hardware stack levels used: 1
  9638 ;; Hardware stack levels required when called: 1
  9639 ;; This function calls:
  9640 ;;		___fladd
  9641 ;; This function is called by:
  9642 ;;		_TH02_GetCompensatedRH
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646     1B04                     ___flsub:	
  9647                           ;psect for function ___flsub
  9648                           
  9649     1B04                     l3082:	
  9650                           ;incstack = 0
  9651                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9652                           
  9653     1B04  3080               	movlw	128
  9654     1B05  1283               	bcf	3,5	;RP0=0, select bank0
  9655     1B06  1303               	bcf	3,6	;RP1=0, select bank0
  9656     1B07  06EB               	xorwf	___flsub@a+3,f
  9657     1B08                     l3084:
  9658     1B08  086F               	movf	___flsub@b+3,w
  9659     1B09  00D7               	movwf	___fladd@b+3
  9660     1B0A  086E               	movf	___flsub@b+2,w
  9661     1B0B  00D6               	movwf	___fladd@b+2
  9662     1B0C  086D               	movf	___flsub@b+1,w
  9663     1B0D  00D5               	movwf	___fladd@b+1
  9664     1B0E  086C               	movf	___flsub@b,w
  9665     1B0F  00D4               	movwf	___fladd@b
  9666     1B10  086B               	movf	___flsub@a+3,w
  9667     1B11  00DB               	movwf	___fladd@a+3
  9668     1B12  086A               	movf	___flsub@a+2,w
  9669     1B13  00DA               	movwf	___fladd@a+2
  9670     1B14  0869               	movf	___flsub@a+1,w
  9671     1B15  00D9               	movwf	___fladd@a+1
  9672     1B16  0868               	movf	___flsub@a,w
  9673     1B17  00D8               	movwf	___fladd@a
  9674     1B18  120A  158A  25B0  160A  158A  	fcall	___fladd
  9675     1B1D  1283               	bcf	3,5	;RP0=0, select bank0
  9676     1B1E  1303               	bcf	3,6	;RP1=0, select bank0
  9677     1B1F  0857               	movf	?___fladd+3,w
  9678     1B20  00EB               	movwf	?___flsub+3
  9679     1B21  0856               	movf	?___fladd+2,w
  9680     1B22  00EA               	movwf	?___flsub+2
  9681     1B23  0855               	movf	?___fladd+1,w
  9682     1B24  00E9               	movwf	?___flsub+1
  9683     1B25  0854               	movf	?___fladd,w
  9684     1B26  00E8               	movwf	?___flsub
  9685     1B27                     l657:
  9686     1B27  0008               	return
  9687     1B28                     __end_of___flsub:
  9688                           
  9689                           	psect	text43
  9690     0DB0                     __ptext43:	
  9691 ;; *************** function ___fladd *****************
  9692 ;; Defined at:
  9693 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  b               4   52[BANK0 ] long 
  9696 ;;  a               4   56[BANK0 ] long 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  grs             1   71[BANK0 ] unsigned char 
  9699 ;;  bexp            1   70[BANK0 ] unsigned char 
  9700 ;;  aexp            1   69[BANK0 ] unsigned char 
  9701 ;;  signs           1   68[BANK0 ] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  4   52[BANK0 ] unsigned char 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0, btemp+1
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9711 ;;      Params:         0       8       0       0       0
  9712 ;;      Locals:         0       4       0       0       0
  9713 ;;      Temps:          0       8       0       0       0
  9714 ;;      Totals:         0      20       0       0       0
  9715 ;;Total ram usage:       20 bytes
  9716 ;; Hardware stack levels used: 1
  9717 ;; This function calls:
  9718 ;;		Nothing
  9719 ;; This function is called by:
  9720 ;;		_roundInt
  9721 ;;		_TH02_GetCompensatedRH
  9722 ;;		___flsub
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726     0DB0                     ___fladd:	
  9727                           ;psect for function ___fladd
  9728                           
  9729     0DB0                     l2678:	
  9730                           ;incstack = 0
  9731                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9732                           
  9733     0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  9734     0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  9735     0DB2  0857               	movf	___fladd@b+3,w
  9736     0DB3  00E4               	movwf	___fladd@signs
  9737     0DB4                     l2680:
  9738     0DB4  3080               	movlw	128
  9739     0DB5  05E4               	andwf	___fladd@signs,f
  9740     0DB6                     l2682:
  9741     0DB6  0857               	movf	___fladd@b+3,w
  9742     0DB7  00DC               	movwf	??___fladd
  9743     0DB8  075C               	addwf	??___fladd,w
  9744     0DB9  00E6               	movwf	___fladd@bexp
  9745     0DBA                     l2684:
  9746     0DBA  1FD6               	btfss	___fladd@b+2,7
  9747     0DBB  2DBD               	goto	u3741
  9748     0DBC  2DBE               	goto	u3740
  9749     0DBD                     u3741:
  9750     0DBD  2DBF               	goto	l2688
  9751     0DBE                     u3740:
  9752     0DBE                     l2686:
  9753     0DBE  1466               	bsf	___fladd@bexp,0
  9754     0DBF                     l2688:
  9755     0DBF  0866               	movf	___fladd@bexp,w
  9756     0DC0  1903               	btfsc	3,2
  9757     0DC1  2DC3               	goto	u3751
  9758     0DC2  2DC4               	goto	u3750
  9759     0DC3                     u3751:
  9760     0DC3  2DD4               	goto	l2698
  9761     0DC4                     u3750:
  9762     0DC4                     l2690:
  9763     0DC4  0A66               	incf	___fladd@bexp,w
  9764     0DC5  1D03               	btfss	3,2
  9765     0DC6  2DC8               	goto	u3761
  9766     0DC7  2DC9               	goto	u3760
  9767     0DC8                     u3761:
  9768     0DC8  2DD1               	goto	l2694
  9769     0DC9                     u3760:
  9770     0DC9                     l2692:
  9771     0DC9  3000               	movlw	0
  9772     0DCA  00D7               	movwf	___fladd@b+3
  9773     0DCB  3000               	movlw	0
  9774     0DCC  00D6               	movwf	___fladd@b+2
  9775     0DCD  3000               	movlw	0
  9776     0DCE  00D5               	movwf	___fladd@b+1
  9777     0DCF  3000               	movlw	0
  9778     0DD0  00D4               	movwf	___fladd@b
  9779     0DD1                     l2694:
  9780     0DD1  17D6               	bsf	___fladd@b+2,7
  9781     0DD2                     l2696:
  9782     0DD2  01D7               	clrf	___fladd@b+3
  9783     0DD3  2DDC               	goto	l606
  9784     0DD4                     l2698:
  9785     0DD4  3000               	movlw	0
  9786     0DD5  00D7               	movwf	___fladd@b+3
  9787     0DD6  3000               	movlw	0
  9788     0DD7  00D6               	movwf	___fladd@b+2
  9789     0DD8  3000               	movlw	0
  9790     0DD9  00D5               	movwf	___fladd@b+1
  9791     0DDA  3000               	movlw	0
  9792     0DDB  00D4               	movwf	___fladd@b
  9793     0DDC                     l606:
  9794     0DDC  085B               	movf	___fladd@a+3,w
  9795     0DDD  00E5               	movwf	___fladd@aexp
  9796     0DDE                     l2700:
  9797     0DDE  3080               	movlw	128
  9798     0DDF  05E5               	andwf	___fladd@aexp,f
  9799     0DE0                     l2702:
  9800     0DE0  0865               	movf	___fladd@aexp,w
  9801     0DE1  0664               	xorwf	___fladd@signs,w
  9802     0DE2  1903               	skipnz
  9803     0DE3  2DE5               	goto	u3771
  9804     0DE4  2DE6               	goto	u3770
  9805     0DE5                     u3771:
  9806     0DE5  2DE7               	goto	l2706
  9807     0DE6                     u3770:
  9808     0DE6                     l2704:
  9809     0DE6  1764               	bsf	___fladd@signs,6
  9810     0DE7                     l2706:
  9811     0DE7  085B               	movf	___fladd@a+3,w
  9812     0DE8  00DC               	movwf	??___fladd
  9813     0DE9  075C               	addwf	??___fladd,w
  9814     0DEA  00E5               	movwf	___fladd@aexp
  9815     0DEB                     l2708:
  9816     0DEB  1FDA               	btfss	___fladd@a+2,7
  9817     0DEC  2DEE               	goto	u3781
  9818     0DED  2DEF               	goto	u3780
  9819     0DEE                     u3781:
  9820     0DEE  2DF0               	goto	l2712
  9821     0DEF                     u3780:
  9822     0DEF                     l2710:
  9823     0DEF  1465               	bsf	___fladd@aexp,0
  9824     0DF0                     l2712:
  9825     0DF0  0865               	movf	___fladd@aexp,w
  9826     0DF1  1903               	btfsc	3,2
  9827     0DF2  2DF4               	goto	u3791
  9828     0DF3  2DF5               	goto	u3790
  9829     0DF4                     u3791:
  9830     0DF4  2E05               	goto	l2722
  9831     0DF5                     u3790:
  9832     0DF5                     l2714:
  9833     0DF5  0A65               	incf	___fladd@aexp,w
  9834     0DF6  1D03               	btfss	3,2
  9835     0DF7  2DF9               	goto	u3801
  9836     0DF8  2DFA               	goto	u3800
  9837     0DF9                     u3801:
  9838     0DF9  2E02               	goto	l2718
  9839     0DFA                     u3800:
  9840     0DFA                     l2716:
  9841     0DFA  3000               	movlw	0
  9842     0DFB  00DB               	movwf	___fladd@a+3
  9843     0DFC  3000               	movlw	0
  9844     0DFD  00DA               	movwf	___fladd@a+2
  9845     0DFE  3000               	movlw	0
  9846     0DFF  00D9               	movwf	___fladd@a+1
  9847     0E00  3000               	movlw	0
  9848     0E01  00D8               	movwf	___fladd@a
  9849     0E02                     l2718:
  9850     0E02  17DA               	bsf	___fladd@a+2,7
  9851     0E03                     l2720:
  9852     0E03  01DB               	clrf	___fladd@a+3
  9853     0E04  2E0D               	goto	l611
  9854     0E05                     l2722:
  9855     0E05  3000               	movlw	0
  9856     0E06  00DB               	movwf	___fladd@a+3
  9857     0E07  3000               	movlw	0
  9858     0E08  00DA               	movwf	___fladd@a+2
  9859     0E09  3000               	movlw	0
  9860     0E0A  00D9               	movwf	___fladd@a+1
  9861     0E0B  3000               	movlw	0
  9862     0E0C  00D8               	movwf	___fladd@a
  9863     0E0D                     l611:
  9864     0E0D  0866               	movf	___fladd@bexp,w
  9865     0E0E  0265               	subwf	___fladd@aexp,w
  9866     0E0F  1803               	skipnc
  9867     0E10  2E12               	goto	u3811
  9868     0E11  2E13               	goto	u3810
  9869     0E12                     u3811:
  9870     0E12  2E37               	goto	l2758
  9871     0E13                     u3810:
  9872     0E13                     l2724:
  9873     0E13  1F64               	btfss	___fladd@signs,6
  9874     0E14  2E16               	goto	u3821
  9875     0E15  2E17               	goto	u3820
  9876     0E16                     u3821:
  9877     0E16  2E19               	goto	l2728
  9878     0E17                     u3820:
  9879     0E17                     l2726:
  9880     0E17  3080               	movlw	128
  9881     0E18  06E4               	xorwf	___fladd@signs,f
  9882     0E19                     l2728:
  9883     0E19  0866               	movf	___fladd@bexp,w
  9884     0E1A  00E7               	movwf	___fladd@grs
  9885     0E1B                     l2730:
  9886     0E1B  0865               	movf	___fladd@aexp,w
  9887     0E1C  00E6               	movwf	___fladd@bexp
  9888     0E1D                     l2732:
  9889     0E1D  0867               	movf	___fladd@grs,w
  9890     0E1E  00E5               	movwf	___fladd@aexp
  9891     0E1F                     l2734:
  9892     0E1F  0854               	movf	___fladd@b,w
  9893     0E20  00E7               	movwf	___fladd@grs
  9894     0E21                     l2736:
  9895     0E21  0858               	movf	___fladd@a,w
  9896     0E22  00D4               	movwf	___fladd@b
  9897     0E23                     l2738:
  9898     0E23  0867               	movf	___fladd@grs,w
  9899     0E24  00D8               	movwf	___fladd@a
  9900     0E25                     l2740:
  9901     0E25  0855               	movf	___fladd@b+1,w
  9902     0E26  00E7               	movwf	___fladd@grs
  9903     0E27                     l2742:
  9904     0E27  0859               	movf	___fladd@a+1,w
  9905     0E28  00D5               	movwf	___fladd@b+1
  9906     0E29                     l2744:
  9907     0E29  0867               	movf	___fladd@grs,w
  9908     0E2A  00D9               	movwf	___fladd@a+1
  9909     0E2B                     l2746:
  9910     0E2B  0856               	movf	___fladd@b+2,w
  9911     0E2C  00E7               	movwf	___fladd@grs
  9912     0E2D                     l2748:
  9913     0E2D  085A               	movf	___fladd@a+2,w
  9914     0E2E  00D6               	movwf	___fladd@b+2
  9915     0E2F                     l2750:
  9916     0E2F  0867               	movf	___fladd@grs,w
  9917     0E30  00DA               	movwf	___fladd@a+2
  9918     0E31                     l2752:
  9919     0E31  0857               	movf	___fladd@b+3,w
  9920     0E32  00E7               	movwf	___fladd@grs
  9921     0E33                     l2754:
  9922     0E33  085B               	movf	___fladd@a+3,w
  9923     0E34  00D7               	movwf	___fladd@b+3
  9924     0E35                     l2756:
  9925     0E35  0867               	movf	___fladd@grs,w
  9926     0E36  00DB               	movwf	___fladd@a+3
  9927     0E37                     l2758:
  9928     0E37  01E7               	clrf	___fladd@grs
  9929     0E38                     l2760:
  9930     0E38  0865               	movf	___fladd@aexp,w
  9931     0E39  00DC               	movwf	??___fladd
  9932     0E3A  01DD               	clrf	??___fladd+1
  9933     0E3B  085D               	movf	??___fladd+1,w
  9934     0E3C  00DF               	movwf	??___fladd+3
  9935     0E3D  0866               	movf	___fladd@bexp,w
  9936     0E3E  025C               	subwf	??___fladd,w
  9937     0E3F  00DE               	movwf	??___fladd+2
  9938     0E40  1C03               	skipc
  9939     0E41  03DF               	decf	??___fladd+3,f
  9940     0E42  085F               	movf	??___fladd+3,w
  9941     0E43  3A80               	xorlw	128
  9942     0E44  00FF               	movwf	btemp+1
  9943     0E45  3080               	movlw	128
  9944     0E46  027F               	subwf	btemp+1,w
  9945     0E47  1D03               	skipz
  9946     0E48  2E4B               	goto	u3835
  9947     0E49  301A               	movlw	26
  9948     0E4A  025E               	subwf	??___fladd+2,w
  9949     0E4B                     u3835:
  9950     0E4B  1C03               	skipc
  9951     0E4C  2E4E               	goto	u3831
  9952     0E4D  2E4F               	goto	u3830
  9953     0E4E                     u3831:
  9954     0E4E  2E84               	goto	l2776
  9955     0E4F                     u3830:
  9956     0E4F                     l2762:
  9957     0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  9958     0E50  1303               	bcf	3,6	;RP1=0, select bank0
  9959     0E51  0857               	movf	___fladd@b+3,w
  9960     0E52  0456               	iorwf	___fladd@b+2,w
  9961     0E53  0455               	iorwf	___fladd@b+1,w
  9962     0E54  0454               	iorwf	___fladd@b,w
  9963     0E55  1D03               	skipz
  9964     0E56  2E58               	goto	u3841
  9965     0E57  2E5A               	goto	u3840
  9966     0E58                     u3841:
  9967     0E58  3001               	movlw	1
  9968     0E59  2E5B               	goto	u3850
  9969     0E5A                     u3840:
  9970     0E5A  3000               	movlw	0
  9971     0E5B                     u3850:
  9972     0E5B  00E7               	movwf	___fladd@grs
  9973     0E5C  3000               	movlw	0
  9974     0E5D  00D7               	movwf	___fladd@b+3
  9975     0E5E  3000               	movlw	0
  9976     0E5F  00D6               	movwf	___fladd@b+2
  9977     0E60  3000               	movlw	0
  9978     0E61  00D5               	movwf	___fladd@b+1
  9979     0E62  3000               	movlw	0
  9980     0E63  00D4               	movwf	___fladd@b
  9981     0E64  0865               	movf	___fladd@aexp,w
  9982     0E65  00E6               	movwf	___fladd@bexp
  9983     0E66  2E8C               	goto	l615
  9984     0E67                     l617:
  9985     0E67  1C67               	btfss	___fladd@grs,0
  9986     0E68  2E6A               	goto	u3861
  9987     0E69  2E6B               	goto	u3860
  9988     0E6A                     u3861:
  9989     0E6A  2E72               	goto	l2766
  9990     0E6B                     u3860:
  9991     0E6B                     l2764:
  9992     0E6B  0867               	movf	___fladd@grs,w
  9993     0E6C  00DC               	movwf	??___fladd
  9994     0E6D  1003               	clrc
  9995     0E6E  0C5C               	rrf	??___fladd,w
  9996     0E6F  3801               	iorlw	1
  9997     0E70  00E7               	movwf	___fladd@grs
  9998     0E71  2E74               	goto	l2768
  9999     0E72                     l2766:
 10000     0E72  1003               	clrc
 10001     0E73  0CE7               	rrf	___fladd@grs,f
 10002     0E74                     l2768:
 10003     0E74  1C54               	btfss	___fladd@b,0
 10004     0E75  2E77               	goto	u3871
 10005     0E76  2E78               	goto	u3870
 10006     0E77                     u3871:
 10007     0E77  2E79               	goto	l2772
 10008     0E78                     u3870:
 10009     0E78                     l2770:
 10010     0E78  17E7               	bsf	___fladd@grs,7
 10011     0E79                     l2772:
 10012     0E79  3001               	movlw	1
 10013     0E7A  00DC               	movwf	??___fladd
 10014     0E7B                     u3885:
 10015     0E7B  0D57               	rlf	___fladd@b+3,w
 10016     0E7C  0CD7               	rrf	___fladd@b+3,f
 10017     0E7D  0CD6               	rrf	___fladd@b+2,f
 10018     0E7E  0CD5               	rrf	___fladd@b+1,f
 10019     0E7F  0CD4               	rrf	___fladd@b,f
 10020     0E80  0BDC               	decfsz	??___fladd& (0+127),f
 10021     0E81  2E7B               	goto	u3885
 10022     0E82                     l2774:
 10023     0E82  3001               	movlw	1
 10024     0E83  07E6               	addwf	___fladd@bexp,f
 10025     0E84                     l2776:
 10026     0E84  1283               	bcf	3,5	;RP0=0, select bank0
 10027     0E85  1303               	bcf	3,6	;RP1=0, select bank0
 10028     0E86  0865               	movf	___fladd@aexp,w
 10029     0E87  0266               	subwf	___fladd@bexp,w
 10030     0E88  1C03               	skipc
 10031     0E89  2E8B               	goto	u3891
 10032     0E8A  2E8C               	goto	u3890
 10033     0E8B                     u3891:
 10034     0E8B  2E67               	goto	l617
 10035     0E8C                     u3890:
 10036     0E8C                     l615:
 10037     0E8C  1B64               	btfsc	___fladd@signs,6
 10038     0E8D  2E8F               	goto	u3901
 10039     0E8E  2E90               	goto	u3900
 10040     0E8F                     u3901:
 10041     0E8F  2ED7               	goto	l2802
 10042     0E90                     u3900:
 10043     0E90                     l2778:
 10044     0E90  0866               	movf	___fladd@bexp,w
 10045     0E91  1D03               	btfss	3,2
 10046     0E92  2E94               	goto	u3911
 10047     0E93  2E95               	goto	u3910
 10048     0E94                     u3911:
 10049     0E94  2E9E               	goto	l2784
 10050     0E95                     u3910:
 10051     0E95                     l2780:
 10052     0E95  3000               	movlw	0
 10053     0E96  00D7               	movwf	?___fladd+3
 10054     0E97  3000               	movlw	0
 10055     0E98  00D6               	movwf	?___fladd+2
 10056     0E99  3000               	movlw	0
 10057     0E9A  00D5               	movwf	?___fladd+1
 10058     0E9B  3000               	movlw	0
 10059     0E9C  00D4               	movwf	?___fladd
 10060     0E9D  2FFF               	goto	l624
 10061     0E9E                     l2784:
 10062     0E9E  0858               	movf	___fladd@a,w
 10063     0E9F  07D4               	addwf	___fladd@b,f
 10064     0EA0  0859               	movf	___fladd@a+1,w
 10065     0EA1  1103               	clrz
 10066     0EA2  1803               	skipnc
 10067     0EA3  3E01               	addlw	1
 10068     0EA4  1903               	skipnz
 10069     0EA5  2EA7               	goto	u3921
 10070     0EA6  07D5               	addwf	___fladd@b+1,f
 10071     0EA7                     u3921:
 10072     0EA7  085A               	movf	___fladd@a+2,w
 10073     0EA8  1103               	clrz
 10074     0EA9  1803               	skipnc
 10075     0EAA  3E01               	addlw	1
 10076     0EAB  1903               	skipnz
 10077     0EAC  2EAE               	goto	u3922
 10078     0EAD  07D6               	addwf	___fladd@b+2,f
 10079     0EAE                     u3922:
 10080     0EAE  085B               	movf	___fladd@a+3,w
 10081     0EAF  1103               	clrz
 10082     0EB0  1803               	skipnc
 10083     0EB1  3E01               	addlw	1
 10084     0EB2  1903               	skipnz
 10085     0EB3  2EB5               	goto	u3923
 10086     0EB4  07D7               	addwf	___fladd@b+3,f
 10087     0EB5                     u3923:
 10088     0EB5                     l2786:
 10089     0EB5  1C57               	btfss	___fladd@b+3,0
 10090     0EB6  2EB8               	goto	u3931
 10091     0EB7  2EB9               	goto	u3930
 10092     0EB8                     u3931:
 10093     0EB8  2F8B               	goto	l2838
 10094     0EB9                     u3930:
 10095     0EB9                     l2788:
 10096     0EB9  1C67               	btfss	___fladd@grs,0
 10097     0EBA  2EBC               	goto	u3941
 10098     0EBB  2EBD               	goto	u3940
 10099     0EBC                     u3941:
 10100     0EBC  2EC4               	goto	l2792
 10101     0EBD                     u3940:
 10102     0EBD                     l2790:
 10103     0EBD  0867               	movf	___fladd@grs,w
 10104     0EBE  00DC               	movwf	??___fladd
 10105     0EBF  1003               	clrc
 10106     0EC0  0C5C               	rrf	??___fladd,w
 10107     0EC1  3801               	iorlw	1
 10108     0EC2  00E7               	movwf	___fladd@grs
 10109     0EC3  2EC6               	goto	l2794
 10110     0EC4                     l2792:
 10111     0EC4  1003               	clrc
 10112     0EC5  0CE7               	rrf	___fladd@grs,f
 10113     0EC6                     l2794:
 10114     0EC6  1C54               	btfss	___fladd@b,0
 10115     0EC7  2EC9               	goto	u3951
 10116     0EC8  2ECA               	goto	u3950
 10117     0EC9                     u3951:
 10118     0EC9  2ECB               	goto	l2798
 10119     0ECA                     u3950:
 10120     0ECA                     l2796:
 10121     0ECA  17E7               	bsf	___fladd@grs,7
 10122     0ECB                     l2798:
 10123     0ECB  3001               	movlw	1
 10124     0ECC  00DC               	movwf	??___fladd
 10125     0ECD                     u3965:
 10126     0ECD  0D57               	rlf	___fladd@b+3,w
 10127     0ECE  0CD7               	rrf	___fladd@b+3,f
 10128     0ECF  0CD6               	rrf	___fladd@b+2,f
 10129     0ED0  0CD5               	rrf	___fladd@b+1,f
 10130     0ED1  0CD4               	rrf	___fladd@b,f
 10131     0ED2  0BDC               	decfsz	??___fladd& (0+127),f
 10132     0ED3  2ECD               	goto	u3965
 10133     0ED4                     l2800:
 10134     0ED4  3001               	movlw	1
 10135     0ED5  07E6               	addwf	___fladd@bexp,f
 10136     0ED6  2F8B               	goto	l2838
 10137     0ED7                     l2802:
 10138     0ED7  0857               	movf	___fladd@b+3,w
 10139     0ED8  3A80               	xorlw	128
 10140     0ED9  00FF               	movwf	btemp+1
 10141     0EDA  085B               	movf	___fladd@a+3,w
 10142     0EDB  3A80               	xorlw	128
 10143     0EDC  027F               	subwf	btemp+1,w
 10144     0EDD  1D03               	skipz
 10145     0EDE  2EE9               	goto	u3973
 10146     0EDF  085A               	movf	___fladd@a+2,w
 10147     0EE0  0256               	subwf	___fladd@b+2,w
 10148     0EE1  1D03               	skipz
 10149     0EE2  2EE9               	goto	u3973
 10150     0EE3  0859               	movf	___fladd@a+1,w
 10151     0EE4  0255               	subwf	___fladd@b+1,w
 10152     0EE5  1D03               	skipz
 10153     0EE6  2EE9               	goto	u3973
 10154     0EE7  0858               	movf	___fladd@a,w
 10155     0EE8  0254               	subwf	___fladd@b,w
 10156     0EE9                     u3973:
 10157     0EE9  1803               	skipnc
 10158     0EEA  2EEC               	goto	u3971
 10159     0EEB  2EED               	goto	u3970
 10160     0EEC                     u3971:
 10161     0EEC  2F44               	goto	l2814
 10162     0EED                     u3970:
 10163     0EED                     l2804:
 10164     0EED  30FF               	movlw	255
 10165     0EEE  00DC               	movwf	??___fladd
 10166     0EEF  30FF               	movlw	255
 10167     0EF0  00DD               	movwf	??___fladd+1
 10168     0EF1  30FF               	movlw	255
 10169     0EF2  00DE               	movwf	??___fladd+2
 10170     0EF3  30FF               	movlw	255
 10171     0EF4  00DF               	movwf	??___fladd+3
 10172     0EF5  0858               	movf	___fladd@a,w
 10173     0EF6  00E0               	movwf	??___fladd+4
 10174     0EF7  0859               	movf	___fladd@a+1,w
 10175     0EF8  00E1               	movwf	??___fladd+5
 10176     0EF9  085A               	movf	___fladd@a+2,w
 10177     0EFA  00E2               	movwf	??___fladd+6
 10178     0EFB  085B               	movf	___fladd@a+3,w
 10179     0EFC  00E3               	movwf	??___fladd+7
 10180     0EFD  0854               	movf	___fladd@b,w
 10181     0EFE  02E0               	subwf	??___fladd+4,f
 10182     0EFF  0855               	movf	___fladd@b+1,w
 10183     0F00  1C03               	skipc
 10184     0F01  0F55               	incfsz	___fladd@b+1,w
 10185     0F02  2F04               	goto	u3981
 10186     0F03  2F05               	goto	u3982
 10187     0F04                     u3981:
 10188     0F04  02E1               	subwf	??___fladd+5,f
 10189     0F05                     u3982:
 10190     0F05  0856               	movf	___fladd@b+2,w
 10191     0F06  1C03               	skipc
 10192     0F07  0F56               	incfsz	___fladd@b+2,w
 10193     0F08  2F0A               	goto	u3983
 10194     0F09  2F0B               	goto	u3984
 10195     0F0A                     u3983:
 10196     0F0A  02E2               	subwf	??___fladd+6,f
 10197     0F0B                     u3984:
 10198     0F0B  0857               	movf	___fladd@b+3,w
 10199     0F0C  1C03               	skipc
 10200     0F0D  0F57               	incfsz	___fladd@b+3,w
 10201     0F0E  2F10               	goto	u3985
 10202     0F0F  2F11               	goto	u3986
 10203     0F10                     u3985:
 10204     0F10  02E3               	subwf	??___fladd+7,f
 10205     0F11                     u3986:
 10206     0F11  0860               	movf	??___fladd+4,w
 10207     0F12  07DC               	addwf	??___fladd,f
 10208     0F13  0861               	movf	??___fladd+5,w
 10209     0F14  1803               	skipnc
 10210     0F15  0F61               	incfsz	??___fladd+5,w
 10211     0F16  2F18               	goto	u3990
 10212     0F17  2F19               	goto	u3991
 10213     0F18                     u3990:
 10214     0F18  07DD               	addwf	??___fladd+1,f
 10215     0F19                     u3991:
 10216     0F19  0862               	movf	??___fladd+6,w
 10217     0F1A  1803               	skipnc
 10218     0F1B  0F62               	incfsz	??___fladd+6,w
 10219     0F1C  2F1E               	goto	u3992
 10220     0F1D  2F1F               	goto	u3993
 10221     0F1E                     u3992:
 10222     0F1E  07DE               	addwf	??___fladd+2,f
 10223     0F1F                     u3993:
 10224     0F1F  0863               	movf	??___fladd+7,w
 10225     0F20  1803               	skipnc
 10226     0F21  0A63               	incf	??___fladd+7,w
 10227     0F22  07DF               	addwf	??___fladd+3,f
 10228     0F23  085F               	movf	??___fladd+3,w
 10229     0F24  00D7               	movwf	___fladd@b+3
 10230     0F25  085E               	movf	??___fladd+2,w
 10231     0F26  00D6               	movwf	___fladd@b+2
 10232     0F27  085D               	movf	??___fladd+1,w
 10233     0F28  00D5               	movwf	___fladd@b+1
 10234     0F29  085C               	movf	??___fladd,w
 10235     0F2A  00D4               	movwf	___fladd@b
 10236     0F2B                     l2806:
 10237     0F2B  3080               	movlw	128
 10238     0F2C  06E4               	xorwf	___fladd@signs,f
 10239     0F2D                     l2808:
 10240     0F2D  0367               	decf	___fladd@grs,w
 10241     0F2E  3AFF               	xorlw	255
 10242     0F2F  00E7               	movwf	___fladd@grs
 10243     0F30                     l2810:
 10244     0F30  0867               	movf	___fladd@grs,w
 10245     0F31  1D03               	btfss	3,2
 10246     0F32  2F34               	goto	u4001
 10247     0F33  2F35               	goto	u4000
 10248     0F34                     u4001:
 10249     0F34  2F52               	goto	l632
 10250     0F35                     u4000:
 10251     0F35                     l2812:
 10252     0F35  3001               	movlw	1
 10253     0F36  07D4               	addwf	___fladd@b,f
 10254     0F37  3000               	movlw	0
 10255     0F38  1803               	skipnc
 10256     0F39  3001               	movlw	1
 10257     0F3A  07D5               	addwf	___fladd@b+1,f
 10258     0F3B  3000               	movlw	0
 10259     0F3C  1803               	skipnc
 10260     0F3D  3001               	movlw	1
 10261     0F3E  07D6               	addwf	___fladd@b+2,f
 10262     0F3F  3000               	movlw	0
 10263     0F40  1803               	skipnc
 10264     0F41  3001               	movlw	1
 10265     0F42  07D7               	addwf	___fladd@b+3,f
 10266     0F43  2F52               	goto	l632
 10267     0F44                     l2814:
 10268     0F44  0858               	movf	___fladd@a,w
 10269     0F45  02D4               	subwf	___fladd@b,f
 10270     0F46  0859               	movf	___fladd@a+1,w
 10271     0F47  1C03               	skipc
 10272     0F48  0F59               	incfsz	___fladd@a+1,w
 10273     0F49  02D5               	subwf	___fladd@b+1,f
 10274     0F4A  085A               	movf	___fladd@a+2,w
 10275     0F4B  1C03               	skipc
 10276     0F4C  0F5A               	incfsz	___fladd@a+2,w
 10277     0F4D  02D6               	subwf	___fladd@b+2,f
 10278     0F4E  085B               	movf	___fladd@a+3,w
 10279     0F4F  1C03               	skipc
 10280     0F50  0F5B               	incfsz	___fladd@a+3,w
 10281     0F51  02D7               	subwf	___fladd@b+3,f
 10282     0F52                     l632:
 10283     0F52  0857               	movf	___fladd@b+3,w
 10284     0F53  0456               	iorwf	___fladd@b+2,w
 10285     0F54  0455               	iorwf	___fladd@b+1,w
 10286     0F55  0454               	iorwf	___fladd@b,w
 10287     0F56  1D03               	skipz
 10288     0F57  2F59               	goto	u4011
 10289     0F58  2F5A               	goto	u4010
 10290     0F59                     u4011:
 10291     0F59  2F87               	goto	l2836
 10292     0F5A                     u4010:
 10293     0F5A                     l2816:
 10294     0F5A  0867               	movf	___fladd@grs,w
 10295     0F5B  1D03               	btfss	3,2
 10296     0F5C  2F5E               	goto	u4021
 10297     0F5D  2F5F               	goto	u4020
 10298     0F5E                     u4021:
 10299     0F5E  2F87               	goto	l2836
 10300     0F5F                     u4020:
 10301     0F5F                     l2818:
 10302     0F5F  3000               	movlw	0
 10303     0F60  00D7               	movwf	?___fladd+3
 10304     0F61  3000               	movlw	0
 10305     0F62  00D6               	movwf	?___fladd+2
 10306     0F63  3000               	movlw	0
 10307     0F64  00D5               	movwf	?___fladd+1
 10308     0F65  3000               	movlw	0
 10309     0F66  00D4               	movwf	?___fladd
 10310     0F67  2FFF               	goto	l624
 10311     0F68                     l2822:
 10312     0F68  3001               	movlw	1
 10313     0F69  00DC               	movwf	??___fladd
 10314     0F6A                     u4035:
 10315     0F6A  1003               	clrc
 10316     0F6B  0DD4               	rlf	___fladd@b,f
 10317     0F6C  0DD5               	rlf	___fladd@b+1,f
 10318     0F6D  0DD6               	rlf	___fladd@b+2,f
 10319     0F6E  0DD7               	rlf	___fladd@b+3,f
 10320     0F6F  0BDC               	decfsz	??___fladd,f
 10321     0F70  2F6A               	goto	u4035
 10322     0F71                     l2824:
 10323     0F71  1FE7               	btfss	___fladd@grs,7
 10324     0F72  2F74               	goto	u4041
 10325     0F73  2F75               	goto	u4040
 10326     0F74                     u4041:
 10327     0F74  2F76               	goto	l636
 10328     0F75                     u4040:
 10329     0F75                     l2826:
 10330     0F75  1454               	bsf	___fladd@b,0
 10331     0F76                     l636:
 10332     0F76  1C67               	btfss	___fladd@grs,0
 10333     0F77  2F79               	goto	u4051
 10334     0F78  2F7A               	goto	u4050
 10335     0F79                     u4051:
 10336     0F79  2F7E               	goto	l2830
 10337     0F7A                     u4050:
 10338     0F7A                     l2828:
 10339     0F7A  1403               	setc
 10340     0F7B  0D67               	rlf	___fladd@grs,w
 10341     0F7C  00E7               	movwf	___fladd@grs
 10342     0F7D  2F80               	goto	l2832
 10343     0F7E                     l2830:
 10344     0F7E  1003               	clrc
 10345     0F7F  0DE7               	rlf	___fladd@grs,f
 10346     0F80                     l2832:
 10347     0F80  0866               	movf	___fladd@bexp,w
 10348     0F81  1903               	btfsc	3,2
 10349     0F82  2F84               	goto	u4061
 10350     0F83  2F85               	goto	u4060
 10351     0F84                     u4061:
 10352     0F84  2F87               	goto	l2836
 10353     0F85                     u4060:
 10354     0F85                     l2834:
 10355     0F85  3001               	movlw	1
 10356     0F86  02E6               	subwf	___fladd@bexp,f
 10357     0F87                     l2836:
 10358     0F87  1FD6               	btfss	___fladd@b+2,7
 10359     0F88  2F8A               	goto	u4071
 10360     0F89  2F8B               	goto	u4070
 10361     0F8A                     u4071:
 10362     0F8A  2F68               	goto	l2822
 10363     0F8B                     u4070:
 10364     0F8B                     l2838:
 10365     0F8B  01E5               	clrf	___fladd@aexp
 10366     0F8C                     l2840:
 10367     0F8C  1FE7               	btfss	___fladd@grs,7
 10368     0F8D  2F8F               	goto	u4081
 10369     0F8E  2F90               	goto	u4080
 10370     0F8F                     u4081:
 10371     0F8F  2F9E               	goto	l2848
 10372     0F90                     u4080:
 10373     0F90                     l2842:
 10374     0F90  0867               	movf	___fladd@grs,w
 10375     0F91  397F               	andlw	127
 10376     0F92  1903               	btfsc	3,2
 10377     0F93  2F95               	goto	u4091
 10378     0F94  2F96               	goto	u4090
 10379     0F95                     u4091:
 10380     0F95  2F99               	goto	l642
 10381     0F96                     u4090:
 10382     0F96                     l2844:
 10383     0F96  3001               	movlw	1
 10384     0F97  00E5               	movwf	___fladd@aexp
 10385     0F98  2F9E               	goto	l2848
 10386     0F99                     l642:
 10387     0F99  1C54               	btfss	___fladd@b,0
 10388     0F9A  2F9C               	goto	u4101
 10389     0F9B  2F9D               	goto	u4100
 10390     0F9C                     u4101:
 10391     0F9C  2F9E               	goto	l2848
 10392     0F9D                     u4100:
 10393     0F9D  2F96               	goto	l2844
 10394     0F9E                     l2848:
 10395     0F9E  0865               	movf	___fladd@aexp,w
 10396     0F9F  1903               	btfsc	3,2
 10397     0FA0  2FA2               	goto	u4111
 10398     0FA1  2FA3               	goto	u4110
 10399     0FA2                     u4111:
 10400     0FA2  2FD5               	goto	l645
 10401     0FA3                     u4110:
 10402     0FA3                     l2850:
 10403     0FA3  3001               	movlw	1
 10404     0FA4  07D4               	addwf	___fladd@b,f
 10405     0FA5  3000               	movlw	0
 10406     0FA6  1803               	skipnc
 10407     0FA7  3001               	movlw	1
 10408     0FA8  07D5               	addwf	___fladd@b+1,f
 10409     0FA9  3000               	movlw	0
 10410     0FAA  1803               	skipnc
 10411     0FAB  3001               	movlw	1
 10412     0FAC  07D6               	addwf	___fladd@b+2,f
 10413     0FAD  3000               	movlw	0
 10414     0FAE  1803               	skipnc
 10415     0FAF  3001               	movlw	1
 10416     0FB0  07D7               	addwf	___fladd@b+3,f
 10417     0FB1                     l2852:
 10418     0FB1  1C57               	btfss	___fladd@b+3,0
 10419     0FB2  2FB4               	goto	u4121
 10420     0FB3  2FB5               	goto	u4120
 10421     0FB4                     u4121:
 10422     0FB4  2FD5               	goto	l645
 10423     0FB5                     u4120:
 10424     0FB5                     l2854:
 10425     0FB5  0854               	movf	___fladd@b,w
 10426     0FB6  00DC               	movwf	??___fladd
 10427     0FB7  0855               	movf	___fladd@b+1,w
 10428     0FB8  00DD               	movwf	??___fladd+1
 10429     0FB9  0856               	movf	___fladd@b+2,w
 10430     0FBA  00DE               	movwf	??___fladd+2
 10431     0FBB  0857               	movf	___fladd@b+3,w
 10432     0FBC  00DF               	movwf	??___fladd+3
 10433     0FBD  3001               	movlw	1
 10434     0FBE  00E0               	movwf	??___fladd+4
 10435     0FBF                     u4135:
 10436     0FBF  0D5F               	rlf	??___fladd+3,w
 10437     0FC0  0CDF               	rrf	??___fladd+3,f
 10438     0FC1  0CDE               	rrf	??___fladd+2,f
 10439     0FC2  0CDD               	rrf	??___fladd+1,f
 10440     0FC3  0CDC               	rrf	??___fladd,f
 10441     0FC4                     u4130:
 10442     0FC4  0BE0               	decfsz	??___fladd+4,f
 10443     0FC5  2FBF               	goto	u4135
 10444     0FC6  085F               	movf	??___fladd+3,w
 10445     0FC7  00D7               	movwf	___fladd@b+3
 10446     0FC8  085E               	movf	??___fladd+2,w
 10447     0FC9  00D6               	movwf	___fladd@b+2
 10448     0FCA  085D               	movf	??___fladd+1,w
 10449     0FCB  00D5               	movwf	___fladd@b+1
 10450     0FCC  085C               	movf	??___fladd,w
 10451     0FCD  00D4               	movwf	___fladd@b
 10452     0FCE  0A66               	incf	___fladd@bexp,w
 10453     0FCF  1903               	btfsc	3,2
 10454     0FD0  2FD2               	goto	u4141
 10455     0FD1  2FD3               	goto	u4140
 10456     0FD2                     u4141:
 10457     0FD2  2FD5               	goto	l645
 10458     0FD3                     u4140:
 10459     0FD3                     l2856:
 10460     0FD3  3001               	movlw	1
 10461     0FD4  07E6               	addwf	___fladd@bexp,f
 10462     0FD5                     l645:
 10463     0FD5  0A66               	incf	___fladd@bexp,w
 10464     0FD6  1903               	btfsc	3,2
 10465     0FD7  2FD9               	goto	u4151
 10466     0FD8  2FDA               	goto	u4150
 10467     0FD9                     u4151:
 10468     0FD9  2FDF               	goto	l2860
 10469     0FDA                     u4150:
 10470     0FDA                     l2858:
 10471     0FDA  0866               	movf	___fladd@bexp,w
 10472     0FDB  1D03               	btfss	3,2
 10473     0FDC  2FDE               	goto	u4161
 10474     0FDD  2FDF               	goto	u4160
 10475     0FDE                     u4161:
 10476     0FDE  2FED               	goto	l2866
 10477     0FDF                     u4160:
 10478     0FDF                     l2860:
 10479     0FDF  3000               	movlw	0
 10480     0FE0  00D7               	movwf	___fladd@b+3
 10481     0FE1  3000               	movlw	0
 10482     0FE2  00D6               	movwf	___fladd@b+2
 10483     0FE3  3000               	movlw	0
 10484     0FE4  00D5               	movwf	___fladd@b+1
 10485     0FE5  3000               	movlw	0
 10486     0FE6  00D4               	movwf	___fladd@b
 10487     0FE7                     l2862:
 10488     0FE7  0866               	movf	___fladd@bexp,w
 10489     0FE8  1D03               	btfss	3,2
 10490     0FE9  2FEB               	goto	u4171
 10491     0FEA  2FEC               	goto	u4170
 10492     0FEB                     u4171:
 10493     0FEB  2FED               	goto	l2866
 10494     0FEC                     u4170:
 10495     0FEC                     l2864:
 10496     0FEC  01E4               	clrf	___fladd@signs
 10497     0FED                     l2866:
 10498     0FED  1C66               	btfss	___fladd@bexp,0
 10499     0FEE  2FF0               	goto	u4181
 10500     0FEF  2FF1               	goto	u4180
 10501     0FF0                     u4181:
 10502     0FF0  2FF3               	goto	l2870
 10503     0FF1                     u4180:
 10504     0FF1                     l2868:
 10505     0FF1  17D6               	bsf	___fladd@b+2,7
 10506     0FF2  2FF5               	goto	l653
 10507     0FF3                     l2870:
 10508     0FF3  307F               	movlw	127
 10509     0FF4  05D6               	andwf	___fladd@b+2,f
 10510     0FF5                     l653:
 10511     0FF5  0866               	movf	___fladd@bexp,w
 10512     0FF6  00DC               	movwf	??___fladd
 10513     0FF7  1003               	clrc
 10514     0FF8  0C5C               	rrf	??___fladd,w
 10515     0FF9  00D7               	movwf	___fladd@b+3
 10516     0FFA                     l2872:
 10517     0FFA  1FE4               	btfss	___fladd@signs,7
 10518     0FFB  2FFD               	goto	u4191
 10519     0FFC  2FFE               	goto	u4190
 10520     0FFD                     u4191:
 10521     0FFD  2FFF               	goto	l654
 10522     0FFE                     u4190:
 10523     0FFE                     l2874:
 10524     0FFE  17D7               	bsf	___fladd@b+3,7
 10525     0FFF                     l654:
 10526     0FFF                     l624:
 10527     0FFF  0008               	return
 10528     1000                     __end_of___fladd:
 10529                           
 10530                           	psect	text44
 10531     0108                     __ptext44:	
 10532 ;; *************** function ___flmul *****************
 10533 ;; Defined at:
 10534 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  b               4   26[BANK0 ] unsigned char 
 10537 ;;  a               4   30[BANK0 ] unsigned char 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;  prod            4   46[BANK0 ] struct .
 10540 ;;  grs             4   40[BANK0 ] unsigned long 
 10541 ;;  temp            2   50[BANK0 ] struct .
 10542 ;;  bexp            1   45[BANK0 ] unsigned char 
 10543 ;;  aexp            1   44[BANK0 ] unsigned char 
 10544 ;;  sign            1   39[BANK0 ] unsigned char 
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  4   26[BANK0 ] unsigned char 
 10547 ;; Registers used:
 10548 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/0
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10554 ;;      Params:         0       8       0       0       0
 10555 ;;      Locals:         0      13       0       0       0
 10556 ;;      Temps:          0       5       0       0       0
 10557 ;;      Totals:         0      26       0       0       0
 10558 ;;Total ram usage:       26 bytes
 10559 ;; Hardware stack levels used: 1
 10560 ;; Hardware stack levels required when called: 1
 10561 ;; This function calls:
 10562 ;;		__Umul8_16
 10563 ;; This function is called by:
 10564 ;;		_TH02_GetCompensatedRH
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568     0108                     ___flmul:	
 10569                           ;psect for function ___flmul
 10570                           
 10571     0108                     l3232:	
 10572                           ;incstack = 0
 10573                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10574                           
 10575     0108  1283               	bcf	3,5	;RP0=0, select bank0
 10576     0109  1303               	bcf	3,6	;RP1=0, select bank0
 10577     010A  083D               	movf	___flmul@b+3,w
 10578     010B  00C7               	movwf	___flmul@sign
 10579     010C                     l3234:
 10580     010C  3080               	movlw	128
 10581     010D  05C7               	andwf	___flmul@sign,f
 10582     010E                     l3236:
 10583     010E  083D               	movf	___flmul@b+3,w
 10584     010F  00C2               	movwf	??___flmul
 10585     0110  0742               	addwf	??___flmul,w
 10586     0111  00CD               	movwf	___flmul@bexp
 10587     0112                     l3238:
 10588     0112  1FBC               	btfss	___flmul@b+2,7
 10589     0113  2915               	goto	u4811
 10590     0114  2916               	goto	u4810
 10591     0115                     u4811:
 10592     0115  2917               	goto	l3242
 10593     0116                     u4810:
 10594     0116                     l3240:
 10595     0116  144D               	bsf	___flmul@bexp,0
 10596     0117                     l3242:
 10597     0117  084D               	movf	___flmul@bexp,w
 10598     0118  1903               	btfsc	3,2
 10599     0119  291B               	goto	u4821
 10600     011A  291C               	goto	u4820
 10601     011B                     u4821:
 10602     011B  292B               	goto	l3250
 10603     011C                     u4820:
 10604     011C                     l3244:
 10605     011C  0A4D               	incf	___flmul@bexp,w
 10606     011D  1D03               	btfss	3,2
 10607     011E  2920               	goto	u4831
 10608     011F  2921               	goto	u4830
 10609     0120                     u4831:
 10610     0120  2929               	goto	l3248
 10611     0121                     u4830:
 10612     0121                     l3246:
 10613     0121  3000               	movlw	0
 10614     0122  00BD               	movwf	___flmul@b+3
 10615     0123  3000               	movlw	0
 10616     0124  00BC               	movwf	___flmul@b+2
 10617     0125  3000               	movlw	0
 10618     0126  00BB               	movwf	___flmul@b+1
 10619     0127  3000               	movlw	0
 10620     0128  00BA               	movwf	___flmul@b
 10621     0129                     l3248:
 10622     0129  17BC               	bsf	___flmul@b+2,7
 10623     012A  2933               	goto	l3252
 10624     012B                     l3250:
 10625     012B  3000               	movlw	0
 10626     012C  00BD               	movwf	___flmul@b+3
 10627     012D  3000               	movlw	0
 10628     012E  00BC               	movwf	___flmul@b+2
 10629     012F  3000               	movlw	0
 10630     0130  00BB               	movwf	___flmul@b+1
 10631     0131  3000               	movlw	0
 10632     0132  00BA               	movwf	___flmul@b
 10633     0133                     l3252:
 10634     0133  0841               	movf	___flmul@a+3,w
 10635     0134  3980               	andlw	128
 10636     0135  06C7               	xorwf	___flmul@sign,f
 10637     0136                     l3254:
 10638     0136  0841               	movf	___flmul@a+3,w
 10639     0137  00C2               	movwf	??___flmul
 10640     0138  0742               	addwf	??___flmul,w
 10641     0139  00CC               	movwf	___flmul@aexp
 10642     013A                     l3256:
 10643     013A  1FC0               	btfss	___flmul@a+2,7
 10644     013B  293D               	goto	u4841
 10645     013C  293E               	goto	u4840
 10646     013D                     u4841:
 10647     013D  293F               	goto	l3260
 10648     013E                     u4840:
 10649     013E                     l3258:
 10650     013E  144C               	bsf	___flmul@aexp,0
 10651     013F                     l3260:
 10652     013F  084C               	movf	___flmul@aexp,w
 10653     0140  1903               	btfsc	3,2
 10654     0141  2943               	goto	u4851
 10655     0142  2944               	goto	u4850
 10656     0143                     u4851:
 10657     0143  2953               	goto	l3268
 10658     0144                     u4850:
 10659     0144                     l3262:
 10660     0144  0A4C               	incf	___flmul@aexp,w
 10661     0145  1D03               	btfss	3,2
 10662     0146  2948               	goto	u4861
 10663     0147  2949               	goto	u4860
 10664     0148                     u4861:
 10665     0148  2951               	goto	l3266
 10666     0149                     u4860:
 10667     0149                     l3264:
 10668     0149  3000               	movlw	0
 10669     014A  00C1               	movwf	___flmul@a+3
 10670     014B  3000               	movlw	0
 10671     014C  00C0               	movwf	___flmul@a+2
 10672     014D  3000               	movlw	0
 10673     014E  00BF               	movwf	___flmul@a+1
 10674     014F  3000               	movlw	0
 10675     0150  00BE               	movwf	___flmul@a
 10676     0151                     l3266:
 10677     0151  17C0               	bsf	___flmul@a+2,7
 10678     0152  295B               	goto	l3270
 10679     0153                     l3268:
 10680     0153  3000               	movlw	0
 10681     0154  00C1               	movwf	___flmul@a+3
 10682     0155  3000               	movlw	0
 10683     0156  00C0               	movwf	___flmul@a+2
 10684     0157  3000               	movlw	0
 10685     0158  00BF               	movwf	___flmul@a+1
 10686     0159  3000               	movlw	0
 10687     015A  00BE               	movwf	___flmul@a
 10688     015B                     l3270:
 10689     015B  084C               	movf	___flmul@aexp,w
 10690     015C  1903               	btfsc	3,2
 10691     015D  295F               	goto	u4871
 10692     015E  2960               	goto	u4870
 10693     015F                     u4871:
 10694     015F  2965               	goto	l3274
 10695     0160                     u4870:
 10696     0160                     l3272:
 10697     0160  084D               	movf	___flmul@bexp,w
 10698     0161  1D03               	btfss	3,2
 10699     0162  2964               	goto	u4881
 10700     0163  2965               	goto	u4880
 10701     0164                     u4881:
 10702     0164  296E               	goto	l3278
 10703     0165                     u4880:
 10704     0165                     l3274:
 10705     0165  3000               	movlw	0
 10706     0166  00BD               	movwf	?___flmul+3
 10707     0167  3000               	movlw	0
 10708     0168  00BC               	movwf	?___flmul+2
 10709     0169  3000               	movlw	0
 10710     016A  00BB               	movwf	?___flmul+1
 10711     016B  3000               	movlw	0
 10712     016C  00BA               	movwf	?___flmul
 10713     016D  2C49               	goto	l707
 10714     016E                     l3278:
 10715     016E  083A               	movf	___flmul@b,w
 10716     016F  00F0               	movwf	__Umul8_16@multiplicand
 10717     0170  0840               	movf	___flmul@a+2,w
 10718     0171  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 10719     0176  0871               	movf	?__Umul8_16+1,w
 10720     0177  1283               	bcf	3,5	;RP0=0, select bank0
 10721     0178  1303               	bcf	3,6	;RP1=0, select bank0
 10722     0179  00D3               	movwf	___flmul@temp+1
 10723     017A  0870               	movf	?__Umul8_16,w
 10724     017B  00D2               	movwf	___flmul@temp
 10725     017C                     l3280:
 10726     017C  0852               	movf	___flmul@temp,w
 10727     017D  00C2               	movwf	??___flmul
 10728     017E  01C3               	clrf	??___flmul+1
 10729     017F  01C4               	clrf	??___flmul+2
 10730     0180  01C5               	clrf	??___flmul+3
 10731     0181  0845               	movf	??___flmul+3,w
 10732     0182  00CB               	movwf	___flmul@grs+3
 10733     0183  0844               	movf	??___flmul+2,w
 10734     0184  00CA               	movwf	___flmul@grs+2
 10735     0185  0843               	movf	??___flmul+1,w
 10736     0186  00C9               	movwf	___flmul@grs+1
 10737     0187  0842               	movf	??___flmul,w
 10738     0188  00C8               	movwf	___flmul@grs
 10739     0189                     l3282:
 10740     0189  0853               	movf	___flmul@temp+1,w
 10741     018A  00C2               	movwf	??___flmul
 10742     018B  01C3               	clrf	??___flmul+1
 10743     018C  01C4               	clrf	??___flmul+2
 10744     018D  01C5               	clrf	??___flmul+3
 10745     018E  0845               	movf	??___flmul+3,w
 10746     018F  00D1               	movwf	___flmul@prod+3
 10747     0190  0844               	movf	??___flmul+2,w
 10748     0191  00D0               	movwf	___flmul@prod+2
 10749     0192  0843               	movf	??___flmul+1,w
 10750     0193  00CF               	movwf	___flmul@prod+1
 10751     0194  0842               	movf	??___flmul,w
 10752     0195  00CE               	movwf	___flmul@prod
 10753     0196  083B               	movf	___flmul@b+1,w
 10754     0197  00F0               	movwf	__Umul8_16@multiplicand
 10755     0198  083F               	movf	___flmul@a+1,w
 10756     0199  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 10757     019E  0871               	movf	?__Umul8_16+1,w
 10758     019F  1283               	bcf	3,5	;RP0=0, select bank0
 10759     01A0  1303               	bcf	3,6	;RP1=0, select bank0
 10760     01A1  00D3               	movwf	___flmul@temp+1
 10761     01A2  0870               	movf	?__Umul8_16,w
 10762     01A3  00D2               	movwf	___flmul@temp
 10763     01A4                     l3284:
 10764     01A4  0852               	movf	___flmul@temp,w
 10765     01A5  00C2               	movwf	??___flmul
 10766     01A6  01C3               	clrf	??___flmul+1
 10767     01A7  01C4               	clrf	??___flmul+2
 10768     01A8  01C5               	clrf	??___flmul+3
 10769     01A9  0842               	movf	??___flmul,w
 10770     01AA  07C8               	addwf	___flmul@grs,f
 10771     01AB  0843               	movf	??___flmul+1,w
 10772     01AC  1103               	clrz
 10773     01AD  1803               	skipnc
 10774     01AE  3E01               	addlw	1
 10775     01AF  1903               	skipnz
 10776     01B0  29B2               	goto	u4891
 10777     01B1  07C9               	addwf	___flmul@grs+1,f
 10778     01B2                     u4891:
 10779     01B2  0844               	movf	??___flmul+2,w
 10780     01B3  1103               	clrz
 10781     01B4  1803               	skipnc
 10782     01B5  3E01               	addlw	1
 10783     01B6  1903               	skipnz
 10784     01B7  29B9               	goto	u4892
 10785     01B8  07CA               	addwf	___flmul@grs+2,f
 10786     01B9                     u4892:
 10787     01B9  0845               	movf	??___flmul+3,w
 10788     01BA  1103               	clrz
 10789     01BB  1803               	skipnc
 10790     01BC  3E01               	addlw	1
 10791     01BD  1903               	skipnz
 10792     01BE  29C0               	goto	u4893
 10793     01BF  07CB               	addwf	___flmul@grs+3,f
 10794     01C0                     u4893:
 10795     01C0                     l3286:
 10796     01C0  0853               	movf	___flmul@temp+1,w
 10797     01C1  00C2               	movwf	??___flmul
 10798     01C2  01C3               	clrf	??___flmul+1
 10799     01C3  01C4               	clrf	??___flmul+2
 10800     01C4  01C5               	clrf	??___flmul+3
 10801     01C5  0842               	movf	??___flmul,w
 10802     01C6  07CE               	addwf	___flmul@prod,f
 10803     01C7  0843               	movf	??___flmul+1,w
 10804     01C8  1103               	clrz
 10805     01C9  1803               	skipnc
 10806     01CA  3E01               	addlw	1
 10807     01CB  1903               	skipnz
 10808     01CC  29CE               	goto	u4901
 10809     01CD  07CF               	addwf	___flmul@prod+1,f
 10810     01CE                     u4901:
 10811     01CE  0844               	movf	??___flmul+2,w
 10812     01CF  1103               	clrz
 10813     01D0  1803               	skipnc
 10814     01D1  3E01               	addlw	1
 10815     01D2  1903               	skipnz
 10816     01D3  29D5               	goto	u4902
 10817     01D4  07D0               	addwf	___flmul@prod+2,f
 10818     01D5                     u4902:
 10819     01D5  0845               	movf	??___flmul+3,w
 10820     01D6  1103               	clrz
 10821     01D7  1803               	skipnc
 10822     01D8  3E01               	addlw	1
 10823     01D9  1903               	skipnz
 10824     01DA  29DC               	goto	u4903
 10825     01DB  07D1               	addwf	___flmul@prod+3,f
 10826     01DC                     u4903:
 10827     01DC  083C               	movf	___flmul@b+2,w
 10828     01DD  00F0               	movwf	__Umul8_16@multiplicand
 10829     01DE  083E               	movf	___flmul@a,w
 10830     01DF  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 10831     01E4  0871               	movf	?__Umul8_16+1,w
 10832     01E5  1283               	bcf	3,5	;RP0=0, select bank0
 10833     01E6  1303               	bcf	3,6	;RP1=0, select bank0
 10834     01E7  00D3               	movwf	___flmul@temp+1
 10835     01E8  0870               	movf	?__Umul8_16,w
 10836     01E9  00D2               	movwf	___flmul@temp
 10837     01EA                     l3288:
 10838     01EA  0852               	movf	___flmul@temp,w
 10839     01EB  00C2               	movwf	??___flmul
 10840     01EC  01C3               	clrf	??___flmul+1
 10841     01ED  01C4               	clrf	??___flmul+2
 10842     01EE  01C5               	clrf	??___flmul+3
 10843     01EF  0842               	movf	??___flmul,w
 10844     01F0  07C8               	addwf	___flmul@grs,f
 10845     01F1  0843               	movf	??___flmul+1,w
 10846     01F2  1103               	clrz
 10847     01F3  1803               	skipnc
 10848     01F4  3E01               	addlw	1
 10849     01F5  1903               	skipnz
 10850     01F6  29F8               	goto	u4911
 10851     01F7  07C9               	addwf	___flmul@grs+1,f
 10852     01F8                     u4911:
 10853     01F8  0844               	movf	??___flmul+2,w
 10854     01F9  1103               	clrz
 10855     01FA  1803               	skipnc
 10856     01FB  3E01               	addlw	1
 10857     01FC  1903               	skipnz
 10858     01FD  29FF               	goto	u4912
 10859     01FE  07CA               	addwf	___flmul@grs+2,f
 10860     01FF                     u4912:
 10861     01FF  0845               	movf	??___flmul+3,w
 10862     0200  1103               	clrz
 10863     0201  1803               	skipnc
 10864     0202  3E01               	addlw	1
 10865     0203  1903               	skipnz
 10866     0204  2A06               	goto	u4913
 10867     0205  07CB               	addwf	___flmul@grs+3,f
 10868     0206                     u4913:
 10869     0206                     l3290:
 10870     0206  0853               	movf	___flmul@temp+1,w
 10871     0207  00C2               	movwf	??___flmul
 10872     0208  01C3               	clrf	??___flmul+1
 10873     0209  01C4               	clrf	??___flmul+2
 10874     020A  01C5               	clrf	??___flmul+3
 10875     020B  0842               	movf	??___flmul,w
 10876     020C  07CE               	addwf	___flmul@prod,f
 10877     020D  0843               	movf	??___flmul+1,w
 10878     020E  1103               	clrz
 10879     020F  1803               	skipnc
 10880     0210  3E01               	addlw	1
 10881     0211  1903               	skipnz
 10882     0212  2A14               	goto	u4921
 10883     0213  07CF               	addwf	___flmul@prod+1,f
 10884     0214                     u4921:
 10885     0214  0844               	movf	??___flmul+2,w
 10886     0215  1103               	clrz
 10887     0216  1803               	skipnc
 10888     0217  3E01               	addlw	1
 10889     0218  1903               	skipnz
 10890     0219  2A1B               	goto	u4922
 10891     021A  07D0               	addwf	___flmul@prod+2,f
 10892     021B                     u4922:
 10893     021B  0845               	movf	??___flmul+3,w
 10894     021C  1103               	clrz
 10895     021D  1803               	skipnc
 10896     021E  3E01               	addlw	1
 10897     021F  1903               	skipnz
 10898     0220  2A22               	goto	u4923
 10899     0221  07D1               	addwf	___flmul@prod+3,f
 10900     0222                     u4923:
 10901     0222                     l3292:
 10902     0222  3008               	movlw	8
 10903     0223  00C2               	movwf	??___flmul
 10904     0224                     u4935:
 10905     0224  1003               	clrc
 10906     0225  0DC8               	rlf	___flmul@grs,f
 10907     0226  0DC9               	rlf	___flmul@grs+1,f
 10908     0227  0DCA               	rlf	___flmul@grs+2,f
 10909     0228  0DCB               	rlf	___flmul@grs+3,f
 10910     0229  0BC2               	decfsz	??___flmul,f
 10911     022A  2A24               	goto	u4935
 10912     022B                     l3294:
 10913     022B  083B               	movf	___flmul@b+1,w
 10914     022C  00F0               	movwf	__Umul8_16@multiplicand
 10915     022D  083E               	movf	___flmul@a,w
 10916     022E  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 10917     0233  0871               	movf	?__Umul8_16+1,w
 10918     0234  1283               	bcf	3,5	;RP0=0, select bank0
 10919     0235  1303               	bcf	3,6	;RP1=0, select bank0
 10920     0236  00D3               	movwf	___flmul@temp+1
 10921     0237  0870               	movf	?__Umul8_16,w
 10922     0238  00D2               	movwf	___flmul@temp
 10923     0239                     l3296:
 10924     0239  0852               	movf	___flmul@temp,w
 10925     023A  00C2               	movwf	??___flmul
 10926     023B  0853               	movf	___flmul@temp+1,w
 10927     023C  00C3               	movwf	??___flmul+1
 10928     023D  01C4               	clrf	??___flmul+2
 10929     023E  01C5               	clrf	??___flmul+3
 10930     023F  0842               	movf	??___flmul,w
 10931     0240  07C8               	addwf	___flmul@grs,f
 10932     0241  0843               	movf	??___flmul+1,w
 10933     0242  1103               	clrz
 10934     0243  1803               	skipnc
 10935     0244  3E01               	addlw	1
 10936     0245  1903               	skipnz
 10937     0246  2A48               	goto	u4941
 10938     0247  07C9               	addwf	___flmul@grs+1,f
 10939     0248                     u4941:
 10940     0248  0844               	movf	??___flmul+2,w
 10941     0249  1103               	clrz
 10942     024A  1803               	skipnc
 10943     024B  3E01               	addlw	1
 10944     024C  1903               	skipnz
 10945     024D  2A4F               	goto	u4942
 10946     024E  07CA               	addwf	___flmul@grs+2,f
 10947     024F                     u4942:
 10948     024F  0845               	movf	??___flmul+3,w
 10949     0250  1103               	clrz
 10950     0251  1803               	skipnc
 10951     0252  3E01               	addlw	1
 10952     0253  1903               	skipnz
 10953     0254  2A56               	goto	u4943
 10954     0255  07CB               	addwf	___flmul@grs+3,f
 10955     0256                     u4943:
 10956     0256                     l3298:
 10957     0256  083A               	movf	___flmul@b,w
 10958     0257  00F0               	movwf	__Umul8_16@multiplicand
 10959     0258  083F               	movf	___flmul@a+1,w
 10960     0259  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 10961     025E  0871               	movf	?__Umul8_16+1,w
 10962     025F  1283               	bcf	3,5	;RP0=0, select bank0
 10963     0260  1303               	bcf	3,6	;RP1=0, select bank0
 10964     0261  00D3               	movwf	___flmul@temp+1
 10965     0262  0870               	movf	?__Umul8_16,w
 10966     0263  00D2               	movwf	___flmul@temp
 10967     0264                     l3300:
 10968     0264  0852               	movf	___flmul@temp,w
 10969     0265  00C2               	movwf	??___flmul
 10970     0266  0853               	movf	___flmul@temp+1,w
 10971     0267  00C3               	movwf	??___flmul+1
 10972     0268  01C4               	clrf	??___flmul+2
 10973     0269  01C5               	clrf	??___flmul+3
 10974     026A  0842               	movf	??___flmul,w
 10975     026B  07C8               	addwf	___flmul@grs,f
 10976     026C  0843               	movf	??___flmul+1,w
 10977     026D  1103               	clrz
 10978     026E  1803               	skipnc
 10979     026F  3E01               	addlw	1
 10980     0270  1903               	skipnz
 10981     0271  2A73               	goto	u4951
 10982     0272  07C9               	addwf	___flmul@grs+1,f
 10983     0273                     u4951:
 10984     0273  0844               	movf	??___flmul+2,w
 10985     0274  1103               	clrz
 10986     0275  1803               	skipnc
 10987     0276  3E01               	addlw	1
 10988     0277  1903               	skipnz
 10989     0278  2A7A               	goto	u4952
 10990     0279  07CA               	addwf	___flmul@grs+2,f
 10991     027A                     u4952:
 10992     027A  0845               	movf	??___flmul+3,w
 10993     027B  1103               	clrz
 10994     027C  1803               	skipnc
 10995     027D  3E01               	addlw	1
 10996     027E  1903               	skipnz
 10997     027F  2A81               	goto	u4953
 10998     0280  07CB               	addwf	___flmul@grs+3,f
 10999     0281                     u4953:
 11000     0281                     l3302:
 11001     0281  3008               	movlw	8
 11002     0282  00C2               	movwf	??___flmul
 11003     0283                     u4965:
 11004     0283  1003               	clrc
 11005     0284  0DC8               	rlf	___flmul@grs,f
 11006     0285  0DC9               	rlf	___flmul@grs+1,f
 11007     0286  0DCA               	rlf	___flmul@grs+2,f
 11008     0287  0DCB               	rlf	___flmul@grs+3,f
 11009     0288  0BC2               	decfsz	??___flmul,f
 11010     0289  2A83               	goto	u4965
 11011     028A  083A               	movf	___flmul@b,w
 11012     028B  00F0               	movwf	__Umul8_16@multiplicand
 11013     028C  083E               	movf	___flmul@a,w
 11014     028D  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 11015     0292  0871               	movf	?__Umul8_16+1,w
 11016     0293  1283               	bcf	3,5	;RP0=0, select bank0
 11017     0294  1303               	bcf	3,6	;RP1=0, select bank0
 11018     0295  00D3               	movwf	___flmul@temp+1
 11019     0296  0870               	movf	?__Umul8_16,w
 11020     0297  00D2               	movwf	___flmul@temp
 11021     0298                     l3304:
 11022     0298  0852               	movf	___flmul@temp,w
 11023     0299  00C2               	movwf	??___flmul
 11024     029A  0853               	movf	___flmul@temp+1,w
 11025     029B  00C3               	movwf	??___flmul+1
 11026     029C  01C4               	clrf	??___flmul+2
 11027     029D  01C5               	clrf	??___flmul+3
 11028     029E  0842               	movf	??___flmul,w
 11029     029F  07C8               	addwf	___flmul@grs,f
 11030     02A0  0843               	movf	??___flmul+1,w
 11031     02A1  1103               	clrz
 11032     02A2  1803               	skipnc
 11033     02A3  3E01               	addlw	1
 11034     02A4  1903               	skipnz
 11035     02A5  2AA7               	goto	u4971
 11036     02A6  07C9               	addwf	___flmul@grs+1,f
 11037     02A7                     u4971:
 11038     02A7  0844               	movf	??___flmul+2,w
 11039     02A8  1103               	clrz
 11040     02A9  1803               	skipnc
 11041     02AA  3E01               	addlw	1
 11042     02AB  1903               	skipnz
 11043     02AC  2AAE               	goto	u4972
 11044     02AD  07CA               	addwf	___flmul@grs+2,f
 11045     02AE                     u4972:
 11046     02AE  0845               	movf	??___flmul+3,w
 11047     02AF  1103               	clrz
 11048     02B0  1803               	skipnc
 11049     02B1  3E01               	addlw	1
 11050     02B2  1903               	skipnz
 11051     02B3  2AB5               	goto	u4973
 11052     02B4  07CB               	addwf	___flmul@grs+3,f
 11053     02B5                     u4973:
 11054     02B5                     l3306:
 11055     02B5  083B               	movf	___flmul@b+1,w
 11056     02B6  00F0               	movwf	__Umul8_16@multiplicand
 11057     02B7  0840               	movf	___flmul@a+2,w
 11058     02B8  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 11059     02BD  0871               	movf	?__Umul8_16+1,w
 11060     02BE  1283               	bcf	3,5	;RP0=0, select bank0
 11061     02BF  1303               	bcf	3,6	;RP1=0, select bank0
 11062     02C0  00D3               	movwf	___flmul@temp+1
 11063     02C1  0870               	movf	?__Umul8_16,w
 11064     02C2  00D2               	movwf	___flmul@temp
 11065     02C3  0852               	movf	___flmul@temp,w
 11066     02C4  00C2               	movwf	??___flmul
 11067     02C5  0853               	movf	___flmul@temp+1,w
 11068     02C6  00C3               	movwf	??___flmul+1
 11069     02C7  01C4               	clrf	??___flmul+2
 11070     02C8  01C5               	clrf	??___flmul+3
 11071     02C9  0842               	movf	??___flmul,w
 11072     02CA  07CE               	addwf	___flmul@prod,f
 11073     02CB  0843               	movf	??___flmul+1,w
 11074     02CC  1103               	clrz
 11075     02CD  1803               	skipnc
 11076     02CE  3E01               	addlw	1
 11077     02CF  1903               	skipnz
 11078     02D0  2AD2               	goto	u4981
 11079     02D1  07CF               	addwf	___flmul@prod+1,f
 11080     02D2                     u4981:
 11081     02D2  0844               	movf	??___flmul+2,w
 11082     02D3  1103               	clrz
 11083     02D4  1803               	skipnc
 11084     02D5  3E01               	addlw	1
 11085     02D6  1903               	skipnz
 11086     02D7  2AD9               	goto	u4982
 11087     02D8  07D0               	addwf	___flmul@prod+2,f
 11088     02D9                     u4982:
 11089     02D9  0845               	movf	??___flmul+3,w
 11090     02DA  1103               	clrz
 11091     02DB  1803               	skipnc
 11092     02DC  3E01               	addlw	1
 11093     02DD  1903               	skipnz
 11094     02DE  2AE0               	goto	u4983
 11095     02DF  07D1               	addwf	___flmul@prod+3,f
 11096     02E0                     u4983:
 11097     02E0                     l3308:
 11098     02E0  083C               	movf	___flmul@b+2,w
 11099     02E1  00F0               	movwf	__Umul8_16@multiplicand
 11100     02E2  083F               	movf	___flmul@a+1,w
 11101     02E3  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 11102     02E8  0871               	movf	?__Umul8_16+1,w
 11103     02E9  1283               	bcf	3,5	;RP0=0, select bank0
 11104     02EA  1303               	bcf	3,6	;RP1=0, select bank0
 11105     02EB  00D3               	movwf	___flmul@temp+1
 11106     02EC  0870               	movf	?__Umul8_16,w
 11107     02ED  00D2               	movwf	___flmul@temp
 11108     02EE                     l3310:
 11109     02EE  0852               	movf	___flmul@temp,w
 11110     02EF  00C2               	movwf	??___flmul
 11111     02F0  0853               	movf	___flmul@temp+1,w
 11112     02F1  00C3               	movwf	??___flmul+1
 11113     02F2  01C4               	clrf	??___flmul+2
 11114     02F3  01C5               	clrf	??___flmul+3
 11115     02F4  0842               	movf	??___flmul,w
 11116     02F5  07CE               	addwf	___flmul@prod,f
 11117     02F6  0843               	movf	??___flmul+1,w
 11118     02F7  1103               	clrz
 11119     02F8  1803               	skipnc
 11120     02F9  3E01               	addlw	1
 11121     02FA  1903               	skipnz
 11122     02FB  2AFD               	goto	u4991
 11123     02FC  07CF               	addwf	___flmul@prod+1,f
 11124     02FD                     u4991:
 11125     02FD  0844               	movf	??___flmul+2,w
 11126     02FE  1103               	clrz
 11127     02FF  1803               	skipnc
 11128     0300  3E01               	addlw	1
 11129     0301  1903               	skipnz
 11130     0302  2B04               	goto	u4992
 11131     0303  07D0               	addwf	___flmul@prod+2,f
 11132     0304                     u4992:
 11133     0304  0845               	movf	??___flmul+3,w
 11134     0305  1103               	clrz
 11135     0306  1803               	skipnc
 11136     0307  3E01               	addlw	1
 11137     0308  1903               	skipnz
 11138     0309  2B0B               	goto	u4993
 11139     030A  07D1               	addwf	___flmul@prod+3,f
 11140     030B                     u4993:
 11141     030B  083C               	movf	___flmul@b+2,w
 11142     030C  00F0               	movwf	__Umul8_16@multiplicand
 11143     030D  0840               	movf	___flmul@a+2,w
 11144     030E  160A  158A  234E  120A  118A  	fcall	__Umul8_16
 11145     0313  0871               	movf	?__Umul8_16+1,w
 11146     0314  1283               	bcf	3,5	;RP0=0, select bank0
 11147     0315  1303               	bcf	3,6	;RP1=0, select bank0
 11148     0316  00D3               	movwf	___flmul@temp+1
 11149     0317  0870               	movf	?__Umul8_16,w
 11150     0318  00D2               	movwf	___flmul@temp
 11151     0319                     l3312:
 11152     0319  0852               	movf	___flmul@temp,w
 11153     031A  00C2               	movwf	??___flmul
 11154     031B  0853               	movf	___flmul@temp+1,w
 11155     031C  00C3               	movwf	??___flmul+1
 11156     031D  01C4               	clrf	??___flmul+2
 11157     031E  01C5               	clrf	??___flmul+3
 11158     031F  3008               	movlw	8
 11159     0320                     u5005:
 11160     0320  1003               	clrc
 11161     0321  0DC2               	rlf	??___flmul,f
 11162     0322  0DC3               	rlf	??___flmul+1,f
 11163     0323  0DC4               	rlf	??___flmul+2,f
 11164     0324  0DC5               	rlf	??___flmul+3,f
 11165     0325                     u5000:
 11166     0325  3EFF               	addlw	-1
 11167     0326  1D03               	skipz
 11168     0327  2B20               	goto	u5005
 11169     0328  0842               	movf	??___flmul,w
 11170     0329  07CE               	addwf	___flmul@prod,f
 11171     032A  0843               	movf	??___flmul+1,w
 11172     032B  1103               	clrz
 11173     032C  1803               	skipnc
 11174     032D  3E01               	addlw	1
 11175     032E  1903               	skipnz
 11176     032F  2B31               	goto	u5011
 11177     0330  07CF               	addwf	___flmul@prod+1,f
 11178     0331                     u5011:
 11179     0331  0844               	movf	??___flmul+2,w
 11180     0332  1103               	clrz
 11181     0333  1803               	skipnc
 11182     0334  3E01               	addlw	1
 11183     0335  1903               	skipnz
 11184     0336  2B38               	goto	u5012
 11185     0337  07D0               	addwf	___flmul@prod+2,f
 11186     0338                     u5012:
 11187     0338  0845               	movf	??___flmul+3,w
 11188     0339  1103               	clrz
 11189     033A  1803               	skipnc
 11190     033B  3E01               	addlw	1
 11191     033C  1903               	skipnz
 11192     033D  2B3F               	goto	u5013
 11193     033E  07D1               	addwf	___flmul@prod+3,f
 11194     033F                     u5013:
 11195     033F                     l3314:
 11196     033F  0848               	movf	___flmul@grs,w
 11197     0340  00C2               	movwf	??___flmul
 11198     0341  0849               	movf	___flmul@grs+1,w
 11199     0342  00C3               	movwf	??___flmul+1
 11200     0343  084A               	movf	___flmul@grs+2,w
 11201     0344  00C4               	movwf	??___flmul+2
 11202     0345  084B               	movf	___flmul@grs+3,w
 11203     0346  00C5               	movwf	??___flmul+3
 11204     0347  3018               	movlw	24
 11205     0348                     u5025:
 11206     0348  1003               	clrc
 11207     0349  0CC5               	rrf	??___flmul+3,f
 11208     034A  0CC4               	rrf	??___flmul+2,f
 11209     034B  0CC3               	rrf	??___flmul+1,f
 11210     034C  0CC2               	rrf	??___flmul,f
 11211     034D                     u5020:
 11212     034D  3EFF               	addlw	-1
 11213     034E  1D03               	skipz
 11214     034F  2B48               	goto	u5025
 11215     0350  0842               	movf	??___flmul,w
 11216     0351  07CE               	addwf	___flmul@prod,f
 11217     0352  0843               	movf	??___flmul+1,w
 11218     0353  1103               	clrz
 11219     0354  1803               	skipnc
 11220     0355  3E01               	addlw	1
 11221     0356  1903               	skipnz
 11222     0357  2B59               	goto	u5031
 11223     0358  07CF               	addwf	___flmul@prod+1,f
 11224     0359                     u5031:
 11225     0359  0844               	movf	??___flmul+2,w
 11226     035A  1103               	clrz
 11227     035B  1803               	skipnc
 11228     035C  3E01               	addlw	1
 11229     035D  1903               	skipnz
 11230     035E  2B60               	goto	u5032
 11231     035F  07D0               	addwf	___flmul@prod+2,f
 11232     0360                     u5032:
 11233     0360  0845               	movf	??___flmul+3,w
 11234     0361  1103               	clrz
 11235     0362  1803               	skipnc
 11236     0363  3E01               	addlw	1
 11237     0364  1903               	skipnz
 11238     0365  2B67               	goto	u5033
 11239     0366  07D1               	addwf	___flmul@prod+3,f
 11240     0367                     u5033:
 11241     0367                     l3316:
 11242     0367  3008               	movlw	8
 11243     0368  00C2               	movwf	??___flmul
 11244     0369                     u5045:
 11245     0369  1003               	clrc
 11246     036A  0DC8               	rlf	___flmul@grs,f
 11247     036B  0DC9               	rlf	___flmul@grs+1,f
 11248     036C  0DCA               	rlf	___flmul@grs+2,f
 11249     036D  0DCB               	rlf	___flmul@grs+3,f
 11250     036E  0BC2               	decfsz	??___flmul,f
 11251     036F  2B69               	goto	u5045
 11252     0370                     l3318:
 11253     0370  084D               	movf	___flmul@bexp,w
 11254     0371  074C               	addwf	___flmul@aexp,w
 11255     0372  00C2               	movwf	??___flmul
 11256     0373  01C3               	clrf	??___flmul+1
 11257     0374  0DC3               	rlf	??___flmul+1,f
 11258     0375  0842               	movf	??___flmul,w
 11259     0376  3E82               	addlw	130
 11260     0377  00D2               	movwf	___flmul@temp
 11261     0378  0843               	movf	??___flmul+1,w
 11262     0379  1803               	skipnc
 11263     037A  3E01               	addlw	1
 11264     037B  3EFF               	addlw	255
 11265     037C  00D3               	movwf	___flmul@temp+1
 11266     037D  2B9B               	goto	l3330
 11267     037E                     l3320:
 11268     037E  3001               	movlw	1
 11269     037F  00C2               	movwf	??___flmul
 11270     0380                     u5055:
 11271     0380  1003               	clrc
 11272     0381  0DCE               	rlf	___flmul@prod,f
 11273     0382  0DCF               	rlf	___flmul@prod+1,f
 11274     0383  0DD0               	rlf	___flmul@prod+2,f
 11275     0384  0DD1               	rlf	___flmul@prod+3,f
 11276     0385  0BC2               	decfsz	??___flmul,f
 11277     0386  2B80               	goto	u5055
 11278     0387                     l3322:
 11279     0387  1FCB               	btfss	___flmul@grs+3,7
 11280     0388  2B8A               	goto	u5061
 11281     0389  2B8B               	goto	u5060
 11282     038A                     u5061:
 11283     038A  2B8C               	goto	l3326
 11284     038B                     u5060:
 11285     038B                     l3324:
 11286     038B  144E               	bsf	___flmul@prod,0
 11287     038C                     l3326:
 11288     038C  3001               	movlw	1
 11289     038D  00C2               	movwf	??___flmul
 11290     038E                     u5075:
 11291     038E  1003               	clrc
 11292     038F  0DC8               	rlf	___flmul@grs,f
 11293     0390  0DC9               	rlf	___flmul@grs+1,f
 11294     0391  0DCA               	rlf	___flmul@grs+2,f
 11295     0392  0DCB               	rlf	___flmul@grs+3,f
 11296     0393  0BC2               	decfsz	??___flmul,f
 11297     0394  2B8E               	goto	u5075
 11298     0395                     l3328:
 11299     0395  30FF               	movlw	255
 11300     0396  07D2               	addwf	___flmul@temp,f
 11301     0397  1803               	skipnc
 11302     0398  0AD3               	incf	___flmul@temp+1,f
 11303     0399  30FF               	movlw	255
 11304     039A  07D3               	addwf	___flmul@temp+1,f
 11305     039B                     l3330:
 11306     039B  1FD0               	btfss	___flmul@prod+2,7
 11307     039C  2B9E               	goto	u5081
 11308     039D  2B9F               	goto	u5080
 11309     039E                     u5081:
 11310     039E  2B7E               	goto	l3320
 11311     039F                     u5080:
 11312     039F                     l3332:
 11313     039F  01CC               	clrf	___flmul@aexp
 11314     03A0                     l3334:
 11315     03A0  1FCB               	btfss	___flmul@grs+3,7
 11316     03A1  2BA3               	goto	u5091
 11317     03A2  2BA4               	goto	u5090
 11318     03A3                     u5091:
 11319     03A3  2BC0               	goto	l3342
 11320     03A4                     u5090:
 11321     03A4                     l3336:
 11322     03A4  30FF               	movlw	255
 11323     03A5  0548               	andwf	___flmul@grs,w
 11324     03A6  00C2               	movwf	??___flmul
 11325     03A7  30FF               	movlw	255
 11326     03A8  0549               	andwf	___flmul@grs+1,w
 11327     03A9  00C3               	movwf	??___flmul+1
 11328     03AA  30FF               	movlw	255
 11329     03AB  054A               	andwf	___flmul@grs+2,w
 11330     03AC  00C4               	movwf	??___flmul+2
 11331     03AD  307F               	movlw	127
 11332     03AE  054B               	andwf	___flmul@grs+3,w
 11333     03AF  00C5               	movwf	??___flmul+3
 11334     03B0  0845               	movf	??___flmul+3,w
 11335     03B1  0444               	iorwf	??___flmul+2,w
 11336     03B2  0443               	iorwf	??___flmul+1,w
 11337     03B3  0442               	iorwf	??___flmul,w
 11338     03B4  1903               	skipnz
 11339     03B5  2BB7               	goto	u5101
 11340     03B6  2BB8               	goto	u5100
 11341     03B7                     u5101:
 11342     03B7  2BBB               	goto	l713
 11343     03B8                     u5100:
 11344     03B8                     l3338:
 11345     03B8  3001               	movlw	1
 11346     03B9  00CC               	movwf	___flmul@aexp
 11347     03BA  2BC0               	goto	l3342
 11348     03BB                     l713:
 11349     03BB  1C4E               	btfss	___flmul@prod,0
 11350     03BC  2BBE               	goto	u5111
 11351     03BD  2BBF               	goto	u5110
 11352     03BE                     u5111:
 11353     03BE  2BC0               	goto	l3342
 11354     03BF                     u5110:
 11355     03BF  2BB8               	goto	l3338
 11356     03C0                     l3342:
 11357     03C0  084C               	movf	___flmul@aexp,w
 11358     03C1  1903               	btfsc	3,2
 11359     03C2  2BC4               	goto	u5121
 11360     03C3  2BC5               	goto	u5120
 11361     03C4                     u5121:
 11362     03C4  2BF6               	goto	l3352
 11363     03C5                     u5120:
 11364     03C5                     l3344:
 11365     03C5  3001               	movlw	1
 11366     03C6  07CE               	addwf	___flmul@prod,f
 11367     03C7  3000               	movlw	0
 11368     03C8  1803               	skipnc
 11369     03C9  3001               	movlw	1
 11370     03CA  07CF               	addwf	___flmul@prod+1,f
 11371     03CB  3000               	movlw	0
 11372     03CC  1803               	skipnc
 11373     03CD  3001               	movlw	1
 11374     03CE  07D0               	addwf	___flmul@prod+2,f
 11375     03CF  3000               	movlw	0
 11376     03D0  1803               	skipnc
 11377     03D1  3001               	movlw	1
 11378     03D2  07D1               	addwf	___flmul@prod+3,f
 11379     03D3                     l3346:
 11380     03D3  1C51               	btfss	___flmul@prod+3,0
 11381     03D4  2BD6               	goto	u5131
 11382     03D5  2BD7               	goto	u5130
 11383     03D6                     u5131:
 11384     03D6  2BF6               	goto	l3352
 11385     03D7                     u5130:
 11386     03D7                     l3348:
 11387     03D7  084E               	movf	___flmul@prod,w
 11388     03D8  00C2               	movwf	??___flmul
 11389     03D9  084F               	movf	___flmul@prod+1,w
 11390     03DA  00C3               	movwf	??___flmul+1
 11391     03DB  0850               	movf	___flmul@prod+2,w
 11392     03DC  00C4               	movwf	??___flmul+2
 11393     03DD  0851               	movf	___flmul@prod+3,w
 11394     03DE  00C5               	movwf	??___flmul+3
 11395     03DF  3001               	movlw	1
 11396     03E0  00C6               	movwf	??___flmul+4
 11397     03E1                     u5145:
 11398     03E1  0D45               	rlf	??___flmul+3,w
 11399     03E2  0CC5               	rrf	??___flmul+3,f
 11400     03E3  0CC4               	rrf	??___flmul+2,f
 11401     03E4  0CC3               	rrf	??___flmul+1,f
 11402     03E5  0CC2               	rrf	??___flmul,f
 11403     03E6                     u5140:
 11404     03E6  0BC6               	decfsz	??___flmul+4,f
 11405     03E7  2BE1               	goto	u5145
 11406     03E8  0845               	movf	??___flmul+3,w
 11407     03E9  00D1               	movwf	___flmul@prod+3
 11408     03EA  0844               	movf	??___flmul+2,w
 11409     03EB  00D0               	movwf	___flmul@prod+2
 11410     03EC  0843               	movf	??___flmul+1,w
 11411     03ED  00CF               	movwf	___flmul@prod+1
 11412     03EE  0842               	movf	??___flmul,w
 11413     03EF  00CE               	movwf	___flmul@prod
 11414     03F0                     l3350:
 11415     03F0  3001               	movlw	1
 11416     03F1  07D2               	addwf	___flmul@temp,f
 11417     03F2  1803               	skipnc
 11418     03F3  0AD3               	incf	___flmul@temp+1,f
 11419     03F4  3000               	movlw	0
 11420     03F5  07D3               	addwf	___flmul@temp+1,f
 11421     03F6                     l3352:
 11422     03F6  0853               	movf	___flmul@temp+1,w
 11423     03F7  3A80               	xorlw	128
 11424     03F8  00FF               	movwf	btemp+1
 11425     03F9  3080               	movlw	128
 11426     03FA  027F               	subwf	btemp+1,w
 11427     03FB  1D03               	skipz
 11428     03FC  2BFF               	goto	u5155
 11429     03FD  30FF               	movlw	255
 11430     03FE  0252               	subwf	___flmul@temp,w
 11431     03FF                     u5155:
 11432     03FF  1C03               	skipc
 11433     0400  2C02               	goto	u5151
 11434     0401  2C03               	goto	u5150
 11435     0402                     u5151:
 11436     0402  2C0E               	goto	l3356
 11437     0403                     u5150:
 11438     0403                     l3354:
 11439     0403  307F               	movlw	127
 11440     0404  1283               	bcf	3,5	;RP0=0, select bank0
 11441     0405  1303               	bcf	3,6	;RP1=0, select bank0
 11442     0406  00D1               	movwf	___flmul@prod+3
 11443     0407  3080               	movlw	128
 11444     0408  00D0               	movwf	___flmul@prod+2
 11445     0409  3000               	movlw	0
 11446     040A  00CF               	movwf	___flmul@prod+1
 11447     040B  3000               	movlw	0
 11448     040C  00CE               	movwf	___flmul@prod
 11449     040D  2C3F               	goto	l719
 11450     040E                     l3356:
 11451     040E  1283               	bcf	3,5	;RP0=0, select bank0
 11452     040F  1303               	bcf	3,6	;RP1=0, select bank0
 11453     0410  0853               	movf	___flmul@temp+1,w
 11454     0411  3A80               	xorlw	128
 11455     0412  00FF               	movwf	btemp+1
 11456     0413  3080               	movlw	128
 11457     0414  027F               	subwf	btemp+1,w
 11458     0415  1D03               	skipz
 11459     0416  2C19               	goto	u5165
 11460     0417  3001               	movlw	1
 11461     0418  0252               	subwf	___flmul@temp,w
 11462     0419                     u5165:
 11463     0419  1803               	skipnc
 11464     041A  2C1C               	goto	u5161
 11465     041B  2C1D               	goto	u5160
 11466     041C                     u5161:
 11467     041C  2C29               	goto	l3362
 11468     041D                     u5160:
 11469     041D                     l3358:
 11470     041D  3000               	movlw	0
 11471     041E  1283               	bcf	3,5	;RP0=0, select bank0
 11472     041F  1303               	bcf	3,6	;RP1=0, select bank0
 11473     0420  00D1               	movwf	___flmul@prod+3
 11474     0421  3000               	movlw	0
 11475     0422  00D0               	movwf	___flmul@prod+2
 11476     0423  3000               	movlw	0
 11477     0424  00CF               	movwf	___flmul@prod+1
 11478     0425  3000               	movlw	0
 11479     0426  00CE               	movwf	___flmul@prod
 11480     0427                     l3360:
 11481     0427  01C7               	clrf	___flmul@sign
 11482     0428  2C3F               	goto	l719
 11483     0429                     l3362:
 11484     0429  1283               	bcf	3,5	;RP0=0, select bank0
 11485     042A  1303               	bcf	3,6	;RP1=0, select bank0
 11486     042B  0852               	movf	___flmul@temp,w
 11487     042C  00CD               	movwf	___flmul@bexp
 11488     042D  30FF               	movlw	255
 11489     042E  05CE               	andwf	___flmul@prod,f
 11490     042F  30FF               	movlw	255
 11491     0430  05CF               	andwf	___flmul@prod+1,f
 11492     0431  307F               	movlw	127
 11493     0432  05D0               	andwf	___flmul@prod+2,f
 11494     0433  3000               	movlw	0
 11495     0434  05D1               	andwf	___flmul@prod+3,f
 11496     0435                     l3364:
 11497     0435  1C4D               	btfss	___flmul@bexp,0
 11498     0436  2C38               	goto	u5171
 11499     0437  2C39               	goto	u5170
 11500     0438                     u5171:
 11501     0438  2C3A               	goto	l3368
 11502     0439                     u5170:
 11503     0439                     l3366:
 11504     0439  17D0               	bsf	___flmul@prod+2,7
 11505     043A                     l3368:
 11506     043A  084D               	movf	___flmul@bexp,w
 11507     043B  00C2               	movwf	??___flmul
 11508     043C  1003               	clrc
 11509     043D  0C42               	rrf	??___flmul,w
 11510     043E  00D1               	movwf	___flmul@prod+3
 11511     043F                     l719:
 11512     043F  0847               	movf	___flmul@sign,w
 11513     0440  04D1               	iorwf	___flmul@prod+3,f
 11514     0441                     l3370:
 11515     0441  0851               	movf	___flmul@prod+3,w
 11516     0442  00BD               	movwf	?___flmul+3
 11517     0443  0850               	movf	___flmul@prod+2,w
 11518     0444  00BC               	movwf	?___flmul+2
 11519     0445  084F               	movf	___flmul@prod+1,w
 11520     0446  00BB               	movwf	?___flmul+1
 11521     0447  084E               	movf	___flmul@prod,w
 11522     0448  00BA               	movwf	?___flmul
 11523     0449                     l707:
 11524     0449  0008               	return
 11525     044A                     __end_of___flmul:
 11526                           
 11527                           	psect	text45
 11528     1B4E                     __ptext45:	
 11529 ;; *************** function __Umul8_16 *****************
 11530 ;; Defined at:
 11531 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;  multiplier      1    wreg     unsigned char 
 11534 ;;  multiplicand    1    0[COMMON] unsigned char 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  multiplier      1    8[COMMON] unsigned char 
 11537 ;;  word_mpld       2    6[COMMON] unsigned short 
 11538 ;;  product         2    4[COMMON] unsigned short 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  2    0[COMMON] unsigned int 
 11541 ;; Registers used:
 11542 ;;		wreg, status,2, status,0
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11548 ;;      Params:         2       0       0       0       0
 11549 ;;      Locals:         5       0       0       0       0
 11550 ;;      Temps:          2       0       0       0       0
 11551 ;;      Totals:         9       0       0       0       0
 11552 ;;Total ram usage:        9 bytes
 11553 ;; Hardware stack levels used: 1
 11554 ;; This function calls:
 11555 ;;		Nothing
 11556 ;; This function is called by:
 11557 ;;		___flmul
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561     1B4E                     __Umul8_16:	
 11562                           ;psect for function __Umul8_16
 11563                           
 11564                           
 11565                           ;incstack = 0
 11566                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11567                           ;__Umul8_16@multiplier stored from wreg
 11568     1B4E  00F8               	movwf	__Umul8_16@multiplier
 11569     1B4F                     l2876:
 11570     1B4F  01F4               	clrf	__Umul8_16@product
 11571     1B50  01F5               	clrf	__Umul8_16@product+1
 11572     1B51                     l2878:
 11573     1B51  0870               	movf	__Umul8_16@multiplicand,w
 11574     1B52  00F2               	movwf	??__Umul8_16
 11575     1B53  01F3               	clrf	??__Umul8_16+1
 11576     1B54  0872               	movf	??__Umul8_16,w
 11577     1B55  00F6               	movwf	__Umul8_16@word_mpld
 11578     1B56  0873               	movf	??__Umul8_16+1,w
 11579     1B57  00F7               	movwf	__Umul8_16@word_mpld+1
 11580     1B58                     l2880:
 11581     1B58  1C78               	btfss	__Umul8_16@multiplier,0
 11582     1B59  2B5B               	goto	u4201
 11583     1B5A  2B5C               	goto	u4200
 11584     1B5B                     u4201:
 11585     1B5B  2B62               	goto	l726
 11586     1B5C                     u4200:
 11587     1B5C                     l2882:
 11588     1B5C  0876               	movf	__Umul8_16@word_mpld,w
 11589     1B5D  07F4               	addwf	__Umul8_16@product,f
 11590     1B5E  1803               	skipnc
 11591     1B5F  0AF5               	incf	__Umul8_16@product+1,f
 11592     1B60  0877               	movf	__Umul8_16@word_mpld+1,w
 11593     1B61  07F5               	addwf	__Umul8_16@product+1,f
 11594     1B62                     l726:
 11595     1B62  3001               	movlw	1
 11596     1B63                     u4215:
 11597     1B63  1003               	clrc
 11598     1B64  0DF6               	rlf	__Umul8_16@word_mpld,f
 11599     1B65  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11600     1B66  3EFF               	addlw	-1
 11601     1B67  1D03               	skipz
 11602     1B68  2B63               	goto	u4215
 11603     1B69  1003               	clrc
 11604     1B6A  0CF8               	rrf	__Umul8_16@multiplier,f
 11605     1B6B                     l2884:
 11606     1B6B  0878               	movf	__Umul8_16@multiplier,w
 11607     1B6C  1D03               	btfss	3,2
 11608     1B6D  2B6F               	goto	u4221
 11609     1B6E  2B70               	goto	u4220
 11610     1B6F                     u4221:
 11611     1B6F  2B58               	goto	l2880
 11612     1B70                     u4220:
 11613     1B70                     l2886:
 11614     1B70  0875               	movf	__Umul8_16@product+1,w
 11615     1B71  00F1               	movwf	?__Umul8_16+1
 11616     1B72  0874               	movf	__Umul8_16@product,w
 11617     1B73  00F0               	movwf	?__Umul8_16
 11618     1B74                     l728:
 11619     1B74  0008               	return
 11620     1B75                     __end_of__Umul8_16:
 11621                           
 11622                           	psect	text46
 11623     09AA                     __ptext46:	
 11624 ;; *************** function ___fldiv *****************
 11625 ;; Defined at:
 11626 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;  a               4    0[BANK0 ] unsigned int 
 11629 ;;  b               4    4[BANK0 ] unsigned int 
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;  grs             4   20[BANK0 ] unsigned long 
 11632 ;;  rem             4   13[BANK0 ] unsigned long 
 11633 ;;  new_exp         2   18[BANK0 ] short 
 11634 ;;  aexp            1   25[BANK0 ] unsigned char 
 11635 ;;  bexp            1   24[BANK0 ] unsigned char 
 11636 ;;  sign            1   17[BANK0 ] unsigned char 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  4    0[BANK0 ] unsigned char 
 11639 ;; Registers used:
 11640 ;;		wreg, status,2, status,0, btemp+1
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11646 ;;      Params:         0       8       0       0       0
 11647 ;;      Locals:         0      13       0       0       0
 11648 ;;      Temps:          0       5       0       0       0
 11649 ;;      Totals:         0      26       0       0       0
 11650 ;;Total ram usage:       26 bytes
 11651 ;; Hardware stack levels used: 1
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_TH02_GetCompensatedRH
 11656 ;;		_TH02_GetConversionValue
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660     09AA                     ___fldiv:	
 11661                           ;psect for function ___fldiv
 11662                           
 11663     09AA                     l3088:	
 11664                           ;incstack = 0
 11665                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11666                           
 11667     09AA  1283               	bcf	3,5	;RP0=0, select bank0
 11668     09AB  1303               	bcf	3,6	;RP1=0, select bank0
 11669     09AC  0827               	movf	___fldiv@b+3,w
 11670     09AD  00B1               	movwf	___fldiv@sign
 11671     09AE                     l3090:
 11672     09AE  3080               	movlw	128
 11673     09AF  05B1               	andwf	___fldiv@sign,f
 11674     09B0                     l3092:
 11675     09B0  0827               	movf	___fldiv@b+3,w
 11676     09B1  00A8               	movwf	??___fldiv
 11677     09B2  0728               	addwf	??___fldiv,w
 11678     09B3  00B8               	movwf	___fldiv@bexp
 11679     09B4                     l3094:
 11680     09B4  1FA6               	btfss	___fldiv@b+2,7
 11681     09B5  29B7               	goto	u4521
 11682     09B6  29B8               	goto	u4520
 11683     09B7                     u4521:
 11684     09B7  29B9               	goto	l3098
 11685     09B8                     u4520:
 11686     09B8                     l3096:
 11687     09B8  1438               	bsf	___fldiv@bexp,0
 11688     09B9                     l3098:
 11689     09B9  0838               	movf	___fldiv@bexp,w
 11690     09BA  1903               	btfsc	3,2
 11691     09BB  29BD               	goto	u4531
 11692     09BC  29BE               	goto	u4530
 11693     09BD                     u4531:
 11694     09BD  29CE               	goto	l3108
 11695     09BE                     u4530:
 11696     09BE                     l3100:
 11697     09BE  0A38               	incf	___fldiv@bexp,w
 11698     09BF  1D03               	btfss	3,2
 11699     09C0  29C2               	goto	u4541
 11700     09C1  29C3               	goto	u4540
 11701     09C2                     u4541:
 11702     09C2  29CB               	goto	l3104
 11703     09C3                     u4540:
 11704     09C3                     l3102:
 11705     09C3  3000               	movlw	0
 11706     09C4  00A7               	movwf	___fldiv@b+3
 11707     09C5  3000               	movlw	0
 11708     09C6  00A6               	movwf	___fldiv@b+2
 11709     09C7  3000               	movlw	0
 11710     09C8  00A5               	movwf	___fldiv@b+1
 11711     09C9  3000               	movlw	0
 11712     09CA  00A4               	movwf	___fldiv@b
 11713     09CB                     l3104:
 11714     09CB  17A6               	bsf	___fldiv@b+2,7
 11715     09CC                     l3106:
 11716     09CC  01A7               	clrf	___fldiv@b+3
 11717     09CD  29D6               	goto	l3110
 11718     09CE                     l3108:
 11719     09CE  3000               	movlw	0
 11720     09CF  00A7               	movwf	___fldiv@b+3
 11721     09D0  3000               	movlw	0
 11722     09D1  00A6               	movwf	___fldiv@b+2
 11723     09D2  3000               	movlw	0
 11724     09D3  00A5               	movwf	___fldiv@b+1
 11725     09D4  3000               	movlw	0
 11726     09D5  00A4               	movwf	___fldiv@b
 11727     09D6                     l3110:
 11728     09D6  0823               	movf	___fldiv@a+3,w
 11729     09D7  3980               	andlw	128
 11730     09D8  06B1               	xorwf	___fldiv@sign,f
 11731     09D9                     l3112:
 11732     09D9  0823               	movf	___fldiv@a+3,w
 11733     09DA  00A8               	movwf	??___fldiv
 11734     09DB  0728               	addwf	??___fldiv,w
 11735     09DC  00B9               	movwf	___fldiv@aexp
 11736     09DD                     l3114:
 11737     09DD  1FA2               	btfss	___fldiv@a+2,7
 11738     09DE  29E0               	goto	u4551
 11739     09DF  29E1               	goto	u4550
 11740     09E0                     u4551:
 11741     09E0  29E2               	goto	l3118
 11742     09E1                     u4550:
 11743     09E1                     l3116:
 11744     09E1  1439               	bsf	___fldiv@aexp,0
 11745     09E2                     l3118:
 11746     09E2  0839               	movf	___fldiv@aexp,w
 11747     09E3  1903               	btfsc	3,2
 11748     09E4  29E6               	goto	u4561
 11749     09E5  29E7               	goto	u4560
 11750     09E6                     u4561:
 11751     09E6  29F7               	goto	l3128
 11752     09E7                     u4560:
 11753     09E7                     l3120:
 11754     09E7  0A39               	incf	___fldiv@aexp,w
 11755     09E8  1D03               	btfss	3,2
 11756     09E9  29EB               	goto	u4571
 11757     09EA  29EC               	goto	u4570
 11758     09EB                     u4571:
 11759     09EB  29F4               	goto	l3124
 11760     09EC                     u4570:
 11761     09EC                     l3122:
 11762     09EC  3000               	movlw	0
 11763     09ED  00A3               	movwf	___fldiv@a+3
 11764     09EE  3000               	movlw	0
 11765     09EF  00A2               	movwf	___fldiv@a+2
 11766     09F0  3000               	movlw	0
 11767     09F1  00A1               	movwf	___fldiv@a+1
 11768     09F2  3000               	movlw	0
 11769     09F3  00A0               	movwf	___fldiv@a
 11770     09F4                     l3124:
 11771     09F4  17A2               	bsf	___fldiv@a+2,7
 11772     09F5                     l3126:
 11773     09F5  01A3               	clrf	___fldiv@a+3
 11774     09F6  29FF               	goto	l667
 11775     09F7                     l3128:
 11776     09F7  3000               	movlw	0
 11777     09F8  00A3               	movwf	___fldiv@a+3
 11778     09F9  3000               	movlw	0
 11779     09FA  00A2               	movwf	___fldiv@a+2
 11780     09FB  3000               	movlw	0
 11781     09FC  00A1               	movwf	___fldiv@a+1
 11782     09FD  3000               	movlw	0
 11783     09FE  00A0               	movwf	___fldiv@a
 11784     09FF                     l667:
 11785     09FF  0823               	movf	___fldiv@a+3,w
 11786     0A00  0422               	iorwf	___fldiv@a+2,w
 11787     0A01  0421               	iorwf	___fldiv@a+1,w
 11788     0A02  0420               	iorwf	___fldiv@a,w
 11789     0A03  1D03               	skipz
 11790     0A04  2A06               	goto	u4581
 11791     0A05  2A07               	goto	u4580
 11792     0A06                     u4581:
 11793     0A06  2A1E               	goto	l3138
 11794     0A07                     u4580:
 11795     0A07                     l3130:
 11796     0A07  3000               	movlw	0
 11797     0A08  00A7               	movwf	___fldiv@b+3
 11798     0A09  3000               	movlw	0
 11799     0A0A  00A6               	movwf	___fldiv@b+2
 11800     0A0B  3000               	movlw	0
 11801     0A0C  00A5               	movwf	___fldiv@b+1
 11802     0A0D  3000               	movlw	0
 11803     0A0E  00A4               	movwf	___fldiv@b
 11804     0A0F  3080               	movlw	128
 11805     0A10  04A6               	iorwf	___fldiv@b+2,f
 11806     0A11  307F               	movlw	127
 11807     0A12  04A7               	iorwf	___fldiv@b+3,f
 11808     0A13                     l3132:
 11809     0A13  0831               	movf	___fldiv@sign,w
 11810     0A14  04A7               	iorwf	___fldiv@b+3,f
 11811     0A15                     l3134:
 11812     0A15  0827               	movf	___fldiv@b+3,w
 11813     0A16  00A3               	movwf	?___fldiv+3
 11814     0A17  0826               	movf	___fldiv@b+2,w
 11815     0A18  00A2               	movwf	?___fldiv+2
 11816     0A19  0825               	movf	___fldiv@b+1,w
 11817     0A1A  00A1               	movwf	?___fldiv+1
 11818     0A1B  0824               	movf	___fldiv@b,w
 11819     0A1C  00A0               	movwf	?___fldiv
 11820     0A1D  2B73               	goto	l669
 11821     0A1E                     l3138:
 11822     0A1E  0838               	movf	___fldiv@bexp,w
 11823     0A1F  1D03               	btfss	3,2
 11824     0A20  2A22               	goto	u4591
 11825     0A21  2A23               	goto	u4590
 11826     0A22                     u4591:
 11827     0A22  2A2C               	goto	l3144
 11828     0A23                     u4590:
 11829     0A23                     l3140:
 11830     0A23  3000               	movlw	0
 11831     0A24  00A3               	movwf	?___fldiv+3
 11832     0A25  3000               	movlw	0
 11833     0A26  00A2               	movwf	?___fldiv+2
 11834     0A27  3000               	movlw	0
 11835     0A28  00A1               	movwf	?___fldiv+1
 11836     0A29  3000               	movlw	0
 11837     0A2A  00A0               	movwf	?___fldiv
 11838     0A2B  2B73               	goto	l669
 11839     0A2C                     l3144:
 11840     0A2C  0838               	movf	___fldiv@bexp,w
 11841     0A2D  00A8               	movwf	??___fldiv
 11842     0A2E  01A9               	clrf	??___fldiv+1
 11843     0A2F  0829               	movf	??___fldiv+1,w
 11844     0A30  00AB               	movwf	??___fldiv+3
 11845     0A31  0839               	movf	___fldiv@aexp,w
 11846     0A32  0228               	subwf	??___fldiv,w
 11847     0A33  00AA               	movwf	??___fldiv+2
 11848     0A34  1C03               	skipc
 11849     0A35  03AB               	decf	??___fldiv+3,f
 11850     0A36  082A               	movf	??___fldiv+2,w
 11851     0A37  3E7F               	addlw	127
 11852     0A38  00B2               	movwf	___fldiv@new_exp
 11853     0A39  082B               	movf	??___fldiv+3,w
 11854     0A3A  1803               	skipnc
 11855     0A3B  3E01               	addlw	1
 11856     0A3C  3E00               	addlw	0
 11857     0A3D  00B3               	movwf	___fldiv@new_exp+1
 11858     0A3E                     l3146:
 11859     0A3E  0827               	movf	___fldiv@b+3,w
 11860     0A3F  00B0               	movwf	___fldiv@rem+3
 11861     0A40  0826               	movf	___fldiv@b+2,w
 11862     0A41  00AF               	movwf	___fldiv@rem+2
 11863     0A42  0825               	movf	___fldiv@b+1,w
 11864     0A43  00AE               	movwf	___fldiv@rem+1
 11865     0A44  0824               	movf	___fldiv@b,w
 11866     0A45  00AD               	movwf	___fldiv@rem
 11867     0A46                     l3148:
 11868     0A46  3000               	movlw	0
 11869     0A47  00A7               	movwf	___fldiv@b+3
 11870     0A48  3000               	movlw	0
 11871     0A49  00A6               	movwf	___fldiv@b+2
 11872     0A4A  3000               	movlw	0
 11873     0A4B  00A5               	movwf	___fldiv@b+1
 11874     0A4C  3000               	movlw	0
 11875     0A4D  00A4               	movwf	___fldiv@b
 11876     0A4E                     l3150:
 11877     0A4E  3000               	movlw	0
 11878     0A4F  00B7               	movwf	___fldiv@grs+3
 11879     0A50  3000               	movlw	0
 11880     0A51  00B6               	movwf	___fldiv@grs+2
 11881     0A52  3000               	movlw	0
 11882     0A53  00B5               	movwf	___fldiv@grs+1
 11883     0A54  3000               	movlw	0
 11884     0A55  00B4               	movwf	___fldiv@grs
 11885     0A56                     l3152:
 11886     0A56  01B9               	clrf	___fldiv@aexp
 11887     0A57  2AA0               	goto	l3172
 11888     0A58                     l3154:
 11889     0A58  0839               	movf	___fldiv@aexp,w
 11890     0A59  1903               	btfsc	3,2
 11891     0A5A  2A5C               	goto	u4601
 11892     0A5B  2A5D               	goto	u4600
 11893     0A5C                     u4601:
 11894     0A5C  2A7D               	goto	l3164
 11895     0A5D                     u4600:
 11896     0A5D                     l3156:
 11897     0A5D  3001               	movlw	1
 11898     0A5E  00A8               	movwf	??___fldiv
 11899     0A5F                     u4615:
 11900     0A5F  1003               	clrc
 11901     0A60  0DAD               	rlf	___fldiv@rem,f
 11902     0A61  0DAE               	rlf	___fldiv@rem+1,f
 11903     0A62  0DAF               	rlf	___fldiv@rem+2,f
 11904     0A63  0DB0               	rlf	___fldiv@rem+3,f
 11905     0A64  0BA8               	decfsz	??___fldiv,f
 11906     0A65  2A5F               	goto	u4615
 11907     0A66  3001               	movlw	1
 11908     0A67  00A8               	movwf	??___fldiv
 11909     0A68                     u4625:
 11910     0A68  1003               	clrc
 11911     0A69  0DA4               	rlf	___fldiv@b,f
 11912     0A6A  0DA5               	rlf	___fldiv@b+1,f
 11913     0A6B  0DA6               	rlf	___fldiv@b+2,f
 11914     0A6C  0DA7               	rlf	___fldiv@b+3,f
 11915     0A6D  0BA8               	decfsz	??___fldiv,f
 11916     0A6E  2A68               	goto	u4625
 11917     0A6F                     l3158:
 11918     0A6F  1FB7               	btfss	___fldiv@grs+3,7
 11919     0A70  2A72               	goto	u4631
 11920     0A71  2A73               	goto	u4630
 11921     0A72                     u4631:
 11922     0A72  2A74               	goto	l3162
 11923     0A73                     u4630:
 11924     0A73                     l3160:
 11925     0A73  1424               	bsf	___fldiv@b,0
 11926     0A74                     l3162:
 11927     0A74  3001               	movlw	1
 11928     0A75  00A8               	movwf	??___fldiv
 11929     0A76                     u4645:
 11930     0A76  1003               	clrc
 11931     0A77  0DB4               	rlf	___fldiv@grs,f
 11932     0A78  0DB5               	rlf	___fldiv@grs+1,f
 11933     0A79  0DB6               	rlf	___fldiv@grs+2,f
 11934     0A7A  0DB7               	rlf	___fldiv@grs+3,f
 11935     0A7B  0BA8               	decfsz	??___fldiv,f
 11936     0A7C  2A76               	goto	u4645
 11937     0A7D                     l3164:
 11938     0A7D  0823               	movf	___fldiv@a+3,w
 11939     0A7E  0230               	subwf	___fldiv@rem+3,w
 11940     0A7F  1D03               	skipz
 11941     0A80  2A8B               	goto	u4655
 11942     0A81  0822               	movf	___fldiv@a+2,w
 11943     0A82  022F               	subwf	___fldiv@rem+2,w
 11944     0A83  1D03               	skipz
 11945     0A84  2A8B               	goto	u4655
 11946     0A85  0821               	movf	___fldiv@a+1,w
 11947     0A86  022E               	subwf	___fldiv@rem+1,w
 11948     0A87  1D03               	skipz
 11949     0A88  2A8B               	goto	u4655
 11950     0A89  0820               	movf	___fldiv@a,w
 11951     0A8A  022D               	subwf	___fldiv@rem,w
 11952     0A8B                     u4655:
 11953     0A8B  1C03               	skipc
 11954     0A8C  2A8E               	goto	u4651
 11955     0A8D  2A8F               	goto	u4650
 11956     0A8E                     u4651:
 11957     0A8E  2A9E               	goto	l3170
 11958     0A8F                     u4650:
 11959     0A8F                     l3166:
 11960     0A8F  1737               	bsf	___fldiv@grs+3,6
 11961     0A90                     l3168:
 11962     0A90  0820               	movf	___fldiv@a,w
 11963     0A91  02AD               	subwf	___fldiv@rem,f
 11964     0A92  0821               	movf	___fldiv@a+1,w
 11965     0A93  1C03               	skipc
 11966     0A94  0F21               	incfsz	___fldiv@a+1,w
 11967     0A95  02AE               	subwf	___fldiv@rem+1,f
 11968     0A96  0822               	movf	___fldiv@a+2,w
 11969     0A97  1C03               	skipc
 11970     0A98  0F22               	incfsz	___fldiv@a+2,w
 11971     0A99  02AF               	subwf	___fldiv@rem+2,f
 11972     0A9A  0823               	movf	___fldiv@a+3,w
 11973     0A9B  1C03               	skipc
 11974     0A9C  0F23               	incfsz	___fldiv@a+3,w
 11975     0A9D  02B0               	subwf	___fldiv@rem+3,f
 11976     0A9E                     l3170:
 11977     0A9E  3001               	movlw	1
 11978     0A9F  07B9               	addwf	___fldiv@aexp,f
 11979     0AA0                     l3172:
 11980     0AA0  301A               	movlw	26
 11981     0AA1  0239               	subwf	___fldiv@aexp,w
 11982     0AA2  1C03               	skipc
 11983     0AA3  2AA5               	goto	u4661
 11984     0AA4  2AA6               	goto	u4660
 11985     0AA5                     u4661:
 11986     0AA5  2A58               	goto	l3154
 11987     0AA6                     u4660:
 11988     0AA6                     l3174:
 11989     0AA6  0830               	movf	___fldiv@rem+3,w
 11990     0AA7  042F               	iorwf	___fldiv@rem+2,w
 11991     0AA8  042E               	iorwf	___fldiv@rem+1,w
 11992     0AA9  042D               	iorwf	___fldiv@rem,w
 11993     0AAA  1903               	skipnz
 11994     0AAB  2AAD               	goto	u4671
 11995     0AAC  2AAE               	goto	u4670
 11996     0AAD                     u4671:
 11997     0AAD  2ACD               	goto	l3188
 11998     0AAE                     u4670:
 11999     0AAE                     l3176:
 12000     0AAE  1434               	bsf	___fldiv@grs,0
 12001     0AAF  2ACD               	goto	l3188
 12002     0AB0                     l3178:
 12003     0AB0  3001               	movlw	1
 12004     0AB1  00A8               	movwf	??___fldiv
 12005     0AB2                     u4685:
 12006     0AB2  1003               	clrc
 12007     0AB3  0DA4               	rlf	___fldiv@b,f
 12008     0AB4  0DA5               	rlf	___fldiv@b+1,f
 12009     0AB5  0DA6               	rlf	___fldiv@b+2,f
 12010     0AB6  0DA7               	rlf	___fldiv@b+3,f
 12011     0AB7  0BA8               	decfsz	??___fldiv,f
 12012     0AB8  2AB2               	goto	u4685
 12013     0AB9                     l3180:
 12014     0AB9  1FB7               	btfss	___fldiv@grs+3,7
 12015     0ABA  2ABC               	goto	u4691
 12016     0ABB  2ABD               	goto	u4690
 12017     0ABC                     u4691:
 12018     0ABC  2ABE               	goto	l3184
 12019     0ABD                     u4690:
 12020     0ABD                     l3182:
 12021     0ABD  1424               	bsf	___fldiv@b,0
 12022     0ABE                     l3184:
 12023     0ABE  3001               	movlw	1
 12024     0ABF  00A8               	movwf	??___fldiv
 12025     0AC0                     u4705:
 12026     0AC0  1003               	clrc
 12027     0AC1  0DB4               	rlf	___fldiv@grs,f
 12028     0AC2  0DB5               	rlf	___fldiv@grs+1,f
 12029     0AC3  0DB6               	rlf	___fldiv@grs+2,f
 12030     0AC4  0DB7               	rlf	___fldiv@grs+3,f
 12031     0AC5  0BA8               	decfsz	??___fldiv,f
 12032     0AC6  2AC0               	goto	u4705
 12033     0AC7                     l3186:
 12034     0AC7  30FF               	movlw	255
 12035     0AC8  07B2               	addwf	___fldiv@new_exp,f
 12036     0AC9  1803               	skipnc
 12037     0ACA  0AB3               	incf	___fldiv@new_exp+1,f
 12038     0ACB  30FF               	movlw	255
 12039     0ACC  07B3               	addwf	___fldiv@new_exp+1,f
 12040     0ACD                     l3188:
 12041     0ACD  1FA6               	btfss	___fldiv@b+2,7
 12042     0ACE  2AD0               	goto	u4711
 12043     0ACF  2AD1               	goto	u4710
 12044     0AD0                     u4711:
 12045     0AD0  2AB0               	goto	l3178
 12046     0AD1                     u4710:
 12047     0AD1                     l3190:
 12048     0AD1  01B9               	clrf	___fldiv@aexp
 12049     0AD2                     l3192:
 12050     0AD2  1FB7               	btfss	___fldiv@grs+3,7
 12051     0AD3  2AD5               	goto	u4721
 12052     0AD4  2AD6               	goto	u4720
 12053     0AD5                     u4721:
 12054     0AD5  2AF2               	goto	l3200
 12055     0AD6                     u4720:
 12056     0AD6                     l3194:
 12057     0AD6  30FF               	movlw	255
 12058     0AD7  0534               	andwf	___fldiv@grs,w
 12059     0AD8  00A8               	movwf	??___fldiv
 12060     0AD9  30FF               	movlw	255
 12061     0ADA  0535               	andwf	___fldiv@grs+1,w
 12062     0ADB  00A9               	movwf	??___fldiv+1
 12063     0ADC  30FF               	movlw	255
 12064     0ADD  0536               	andwf	___fldiv@grs+2,w
 12065     0ADE  00AA               	movwf	??___fldiv+2
 12066     0ADF  307F               	movlw	127
 12067     0AE0  0537               	andwf	___fldiv@grs+3,w
 12068     0AE1  00AB               	movwf	??___fldiv+3
 12069     0AE2  082B               	movf	??___fldiv+3,w
 12070     0AE3  042A               	iorwf	??___fldiv+2,w
 12071     0AE4  0429               	iorwf	??___fldiv+1,w
 12072     0AE5  0428               	iorwf	??___fldiv,w
 12073     0AE6  1903               	skipnz
 12074     0AE7  2AE9               	goto	u4731
 12075     0AE8  2AEA               	goto	u4730
 12076     0AE9                     u4731:
 12077     0AE9  2AED               	goto	l683
 12078     0AEA                     u4730:
 12079     0AEA                     l3196:
 12080     0AEA  3001               	movlw	1
 12081     0AEB  00B9               	movwf	___fldiv@aexp
 12082     0AEC  2AF2               	goto	l3200
 12083     0AED                     l683:
 12084     0AED  1C24               	btfss	___fldiv@b,0
 12085     0AEE  2AF0               	goto	u4741
 12086     0AEF  2AF1               	goto	u4740
 12087     0AF0                     u4741:
 12088     0AF0  2AF2               	goto	l3200
 12089     0AF1                     u4740:
 12090     0AF1  2AEA               	goto	l3196
 12091     0AF2                     l3200:
 12092     0AF2  0839               	movf	___fldiv@aexp,w
 12093     0AF3  1903               	btfsc	3,2
 12094     0AF4  2AF6               	goto	u4751
 12095     0AF5  2AF7               	goto	u4750
 12096     0AF6                     u4751:
 12097     0AF6  2B28               	goto	l3210
 12098     0AF7                     u4750:
 12099     0AF7                     l3202:
 12100     0AF7  3001               	movlw	1
 12101     0AF8  07A4               	addwf	___fldiv@b,f
 12102     0AF9  3000               	movlw	0
 12103     0AFA  1803               	skipnc
 12104     0AFB  3001               	movlw	1
 12105     0AFC  07A5               	addwf	___fldiv@b+1,f
 12106     0AFD  3000               	movlw	0
 12107     0AFE  1803               	skipnc
 12108     0AFF  3001               	movlw	1
 12109     0B00  07A6               	addwf	___fldiv@b+2,f
 12110     0B01  3000               	movlw	0
 12111     0B02  1803               	skipnc
 12112     0B03  3001               	movlw	1
 12113     0B04  07A7               	addwf	___fldiv@b+3,f
 12114     0B05                     l3204:
 12115     0B05  1C27               	btfss	___fldiv@b+3,0
 12116     0B06  2B08               	goto	u4761
 12117     0B07  2B09               	goto	u4760
 12118     0B08                     u4761:
 12119     0B08  2B28               	goto	l3210
 12120     0B09                     u4760:
 12121     0B09                     l3206:
 12122     0B09  0824               	movf	___fldiv@b,w
 12123     0B0A  00A8               	movwf	??___fldiv
 12124     0B0B  0825               	movf	___fldiv@b+1,w
 12125     0B0C  00A9               	movwf	??___fldiv+1
 12126     0B0D  0826               	movf	___fldiv@b+2,w
 12127     0B0E  00AA               	movwf	??___fldiv+2
 12128     0B0F  0827               	movf	___fldiv@b+3,w
 12129     0B10  00AB               	movwf	??___fldiv+3
 12130     0B11  3001               	movlw	1
 12131     0B12  00AC               	movwf	??___fldiv+4
 12132     0B13                     u4775:
 12133     0B13  0D2B               	rlf	??___fldiv+3,w
 12134     0B14  0CAB               	rrf	??___fldiv+3,f
 12135     0B15  0CAA               	rrf	??___fldiv+2,f
 12136     0B16  0CA9               	rrf	??___fldiv+1,f
 12137     0B17  0CA8               	rrf	??___fldiv,f
 12138     0B18                     u4770:
 12139     0B18  0BAC               	decfsz	??___fldiv+4,f
 12140     0B19  2B13               	goto	u4775
 12141     0B1A  082B               	movf	??___fldiv+3,w
 12142     0B1B  00A7               	movwf	___fldiv@b+3
 12143     0B1C  082A               	movf	??___fldiv+2,w
 12144     0B1D  00A6               	movwf	___fldiv@b+2
 12145     0B1E  0829               	movf	??___fldiv+1,w
 12146     0B1F  00A5               	movwf	___fldiv@b+1
 12147     0B20  0828               	movf	??___fldiv,w
 12148     0B21  00A4               	movwf	___fldiv@b
 12149     0B22                     l3208:
 12150     0B22  3001               	movlw	1
 12151     0B23  07B2               	addwf	___fldiv@new_exp,f
 12152     0B24  1803               	skipnc
 12153     0B25  0AB3               	incf	___fldiv@new_exp+1,f
 12154     0B26  3000               	movlw	0
 12155     0B27  07B3               	addwf	___fldiv@new_exp+1,f
 12156     0B28                     l3210:
 12157     0B28  0833               	movf	___fldiv@new_exp+1,w
 12158     0B29  3A80               	xorlw	128
 12159     0B2A  00FF               	movwf	btemp+1
 12160     0B2B  3080               	movlw	128
 12161     0B2C  027F               	subwf	btemp+1,w
 12162     0B2D  1D03               	skipz
 12163     0B2E  2B31               	goto	u4785
 12164     0B2F  30FF               	movlw	255
 12165     0B30  0232               	subwf	___fldiv@new_exp,w
 12166     0B31                     u4785:
 12167     0B31  1C03               	skipc
 12168     0B32  2B34               	goto	u4781
 12169     0B33  2B35               	goto	u4780
 12170     0B34                     u4781:
 12171     0B34  2B43               	goto	l3214
 12172     0B35                     u4780:
 12173     0B35                     l3212:
 12174     0B35  30FF               	movlw	255
 12175     0B36  1283               	bcf	3,5	;RP0=0, select bank0
 12176     0B37  1303               	bcf	3,6	;RP1=0, select bank0
 12177     0B38  00B2               	movwf	___fldiv@new_exp
 12178     0B39  3000               	movlw	0
 12179     0B3A  00B3               	movwf	___fldiv@new_exp+1
 12180     0B3B  3000               	movlw	0
 12181     0B3C  00A7               	movwf	___fldiv@b+3
 12182     0B3D  3000               	movlw	0
 12183     0B3E  00A6               	movwf	___fldiv@b+2
 12184     0B3F  3000               	movlw	0
 12185     0B40  00A5               	movwf	___fldiv@b+1
 12186     0B41  3000               	movlw	0
 12187     0B42  00A4               	movwf	___fldiv@b
 12188     0B43                     l3214:
 12189     0B43  1283               	bcf	3,5	;RP0=0, select bank0
 12190     0B44  1303               	bcf	3,6	;RP1=0, select bank0
 12191     0B45  0833               	movf	___fldiv@new_exp+1,w
 12192     0B46  3A80               	xorlw	128
 12193     0B47  00FF               	movwf	btemp+1
 12194     0B48  3080               	movlw	128
 12195     0B49  027F               	subwf	btemp+1,w
 12196     0B4A  1D03               	skipz
 12197     0B4B  2B4E               	goto	u4795
 12198     0B4C  3001               	movlw	1
 12199     0B4D  0232               	subwf	___fldiv@new_exp,w
 12200     0B4E                     u4795:
 12201     0B4E  1803               	skipnc
 12202     0B4F  2B51               	goto	u4791
 12203     0B50  2B52               	goto	u4790
 12204     0B51                     u4791:
 12205     0B51  2B5F               	goto	l689
 12206     0B52                     u4790:
 12207     0B52                     l3216:
 12208     0B52  1283               	bcf	3,5	;RP0=0, select bank0
 12209     0B53  1303               	bcf	3,6	;RP1=0, select bank0
 12210     0B54  01B2               	clrf	___fldiv@new_exp
 12211     0B55  01B3               	clrf	___fldiv@new_exp+1
 12212     0B56                     l3218:
 12213     0B56  3000               	movlw	0
 12214     0B57  00A7               	movwf	___fldiv@b+3
 12215     0B58  3000               	movlw	0
 12216     0B59  00A6               	movwf	___fldiv@b+2
 12217     0B5A  3000               	movlw	0
 12218     0B5B  00A5               	movwf	___fldiv@b+1
 12219     0B5C  3000               	movlw	0
 12220     0B5D  00A4               	movwf	___fldiv@b
 12221     0B5E                     l3220:
 12222     0B5E  01B1               	clrf	___fldiv@sign
 12223     0B5F                     l689:
 12224     0B5F  1283               	bcf	3,5	;RP0=0, select bank0
 12225     0B60  1303               	bcf	3,6	;RP1=0, select bank0
 12226     0B61  0832               	movf	___fldiv@new_exp,w
 12227     0B62  00B8               	movwf	___fldiv@bexp
 12228     0B63                     l3222:
 12229     0B63  1C38               	btfss	___fldiv@bexp,0
 12230     0B64  2B66               	goto	u4801
 12231     0B65  2B67               	goto	u4800
 12232     0B66                     u4801:
 12233     0B66  2B69               	goto	l3226
 12234     0B67                     u4800:
 12235     0B67                     l3224:
 12236     0B67  17A6               	bsf	___fldiv@b+2,7
 12237     0B68  2B6B               	goto	l691
 12238     0B69                     l3226:
 12239     0B69  307F               	movlw	127
 12240     0B6A  05A6               	andwf	___fldiv@b+2,f
 12241     0B6B                     l691:
 12242     0B6B  0838               	movf	___fldiv@bexp,w
 12243     0B6C  00A8               	movwf	??___fldiv
 12244     0B6D  1003               	clrc
 12245     0B6E  0C28               	rrf	??___fldiv,w
 12246     0B6F  00A7               	movwf	___fldiv@b+3
 12247     0B70  0831               	movf	___fldiv@sign,w
 12248     0B71  04A7               	iorwf	___fldiv@b+3,f
 12249     0B72  2A15               	goto	l3134
 12250     0B73                     l669:
 12251     0B73  0008               	return
 12252     0B74                     __end_of___fldiv:
 12253                           
 12254                           	psect	text47
 12255     1A59                     __ptext47:	
 12256 ;; *************** function _I2C_Master_Init *****************
 12257 ;; Defined at:
 12258 ;;		line 5 in file "i2c.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;		None
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;		None
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		status,2
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12272 ;;      Params:         0       0       0       0       0
 12273 ;;      Locals:         0       0       0       0       0
 12274 ;;      Temps:          0       0       0       0       0
 12275 ;;      Totals:         0       0       0       0       0
 12276 ;;Total ram usage:        0 bytes
 12277 ;; Hardware stack levels used: 1
 12278 ;; This function calls:
 12279 ;;		Nothing
 12280 ;; This function is called by:
 12281 ;;		_main
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285     1A59                     _I2C_Master_Init:	
 12286                           ;psect for function _I2C_Master_Init
 12287                           
 12288     1A59                     l3428:	
 12289                           ;incstack = 0
 12290                           ; Regs used in _I2C_Master_Init: [status,2]
 12291                           
 12292                           
 12293                           ;i2c.c: 6:     SSPCON = 0x28;
 12294     1A59  3028               	movlw	40
 12295     1A5A  1283               	bcf	3,5	;RP0=0, select bank0
 12296     1A5B  1303               	bcf	3,6	;RP1=0, select bank0
 12297     1A5C  0094               	movwf	20	;volatile
 12298     1A5D                     l3430:
 12299                           
 12300                           ;i2c.c: 7:     SSPCON2 = 0x00;
 12301     1A5D  1683               	bsf	3,5	;RP0=1, select bank1
 12302     1A5E  1303               	bcf	3,6	;RP1=0, select bank1
 12303     1A5F  0191               	clrf	17	;volatile
 12304                           
 12305                           ;i2c.c: 8:     SSPSTAT = 0x00;
 12306     1A60  0194               	clrf	20	;volatile
 12307     1A61                     l3432:
 12308                           
 12309                           ;i2c.c: 9:     SSPADD = ((16000000/4)/100000) - 1;
 12310     1A61  3027               	movlw	39
 12311     1A62  0093               	movwf	19	;volatile
 12312     1A63                     l3434:
 12313                           
 12314                           ;i2c.c: 10:     TRISC3 = 1;
 12315     1A63  1587               	bsf	7,3	;volatile
 12316     1A64                     l3436:
 12317                           
 12318                           ;i2c.c: 11:     TRISC4 = 1;
 12319     1A64  1607               	bsf	7,4	;volatile
 12320     1A65                     l35:
 12321     1A65  0008               	return
 12322     1A66                     __end_of_I2C_Master_Init:
 12323     0002                     ___latbits      equ	2
 12324     007E                     btemp           set	126	;btemp
 12325     007E                     wtemp0          set	126

Data Sizes:
    Strings     429
    Constant    0
    Data        8
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     38      64
    BANK3            96     74      74
    BANK2            96      0      32

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@displayText(BANK3[64]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@displayText(BANK3[64]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S654$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@displayText(BANK3[64]), 

    S654$source	PTR const unsigned char  size(1) Largest target is 0

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_10(CODE[37]), STR_11(CODE[32]), STR_6(CODE[25]), STR_7(CODE[21]), 
		 -> STR_8(CODE[29]), STR_9(CODE[24]), 

    snprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> main@displayText(BANK3[64]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    TH02_ReadRegister@value	PTR unsigned char  size(1) Largest target is 1
		 -> TH02_GetConversionValue@config(BANK1[1]), TH02_WaitForReady@status(COMMON[1]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 64
		 -> main@displayText(BANK3[64]), STR_1(CODE[29]), STR_12(CODE[51]), STR_13(CODE[47]), 
		 -> STR_2(CODE[37]), STR_3(CODE[33]), STR_4(CODE[34]), STR_5(CODE[30]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 37
		 -> STR_10(CODE[37]), STR_11(CODE[32]), STR_6(CODE[25]), STR_7(CODE[21]), 
		 -> STR_8(CODE[29]), STR_9(CODE[24]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_10(CODE[37]), STR_11(CODE[32]), STR_6(CODE[25]), STR_7(CODE[21]), 
		 -> STR_8(CODE[29]), STR_9(CODE[24]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_10(CODE[37]), STR_11(CODE[32]), STR_6(CODE[25]), STR_7(CODE[21]), 
		 -> STR_8(CODE[29]), STR_9(CODE[24]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _abs->___awmod
    _UART_Write_Text->_UART_Write
    _TH02_WaitForReady->_TH02_ReadRegister
    _TH02_StartTempConversion->_TH02_WriteRegister
    _TH02_StartRHConversion->_TH02_WriteRegister
    _TH02_WriteRegister->_I2C_Master_Write
    _TH02_GetConversionValue->___xxtofl
    _roundInt->___xxtofl
    _TH02_ReadRegister->_I2C_Master_Write
    _TH02_GetCompensatedRH->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _roundInt->___fltol
    _floorf->___fladd
    _ceilf->___fladd
    _TH02_GetCompensatedRH->___flsub
    _TH02_GetCompensatedRH->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___fldiv

Critical Paths under _main in BANK1

    _main->_TH02_GetConversionValue
    _TH02_GetConversionValue->_roundInt
    _roundInt->_ceilf
    _roundInt->_floorf
    _TH02_GetCompensatedRH->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                77    77      0   18627
                                             35 BANK1      3     3      0
                                              0 BANK3     74    74      0
                    _I2C_Master_Init
              _TH02_GetCompensatedRH
            _TH02_GetConversionValue
             _TH02_StartRHConversion
           _TH02_StartTempConversion
                  _TH02_WaitForReady
                       _UART_TX_Init
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                                _abs
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            28    19      9    3583
                                             49 BANK0     28    19      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     2      5    3117
                                             42 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4    2980
                                             27 BANK0     15    11      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     276
                                              6 COMMON     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12     8      4    1979
                                             15 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     886
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               3     1      2      91
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     335
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     234
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      70
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     308
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2      84
                                              1 COMMON     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              0 COMMON     1     1      0
                      _UART_TX_Empty
 ---------------------------------------------------------------------------------
 (3) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TH02_WaitForReady                                    4     4      0     152
                                              3 COMMON     4     4      0
                  _TH02_ReadRegister
 ---------------------------------------------------------------------------------
 (1) _TH02_StartTempConversion                             3     2      1     159
                                              3 COMMON     3     2      1
                 _TH02_WriteRegister
 ---------------------------------------------------------------------------------
 (1) _TH02_StartRHConversion                               3     2      1     159
                                              3 COMMON     3     2      1
                 _TH02_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TH02_WriteRegister                                   2     1      1      82
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _TH02_GetConversionValue                             15    13      2    5517
                                             20 BANK1     15    13      2
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
                  _TH02_ReadRegister
                            ___aldiv
                            ___fldiv
                             ___lmul
                           ___xxtofl
                           _roundInt
 ---------------------------------------------------------------------------------
 (2) _roundInt                                             4     0      4    3189
                                             16 BANK1      4     0      4
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___fltol
                           ___xxtofl (ARG)
                              _ceilf
                             _floorf
 ---------------------------------------------------------------------------------
 (3) _floorf                                              20    16      4     339
                                             72 BANK0      4     0      4
                                              0 BANK1     16    16      0
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _ceilf                                               20    16      4     339
                                             72 BANK0      4     0      4
                                              0 BANK1     16    16      0
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     184
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8      96
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     304
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _TH02_ReadRegister                                    2     1      1      82
                                              1 COMMON     2     1      1
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TH02_GetCompensatedRH                               25    23      2    7745
                                              2 BANK1     25    23      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     339
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     232
                                             72 BANK0      8     4      4
                                              0 BANK1      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2051
                                             72 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2004
                                             52 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    1618
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1130
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _TH02_GetCompensatedRH
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
     ___xxtofl
   _TH02_GetConversionValue
     _I2C_ACK
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_NACK
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
     _TH02_ReadRegister
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _I2C_NACK
       _I2C_Read_Byte
     ___aldiv
     ___fldiv
     ___lmul
     ___xxtofl
     _roundInt
       ___fladd
       ___fldiv (ARG)
       ___flge (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
       _ceilf (ARG)
         ___fladd (ARG)
       _floorf (ARG)
         ___fladd (ARG)
   _TH02_StartRHConversion
     _TH02_WriteRegister
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
   _TH02_StartTempConversion
     _TH02_WriteRegister
   _TH02_WaitForReady
     _TH02_ReadRegister
   _UART_TX_Init
   _UART_Write_Text
     _UART_Write
       _UART_TX_Empty
   ___awdiv
   ___awmod
   _abs
     ___awmod (ARG)
   _snprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _read_prec_or_width
           ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96     74      74     77.1%
BITBANK3            96      0       0      0.0%
BANK2               96      0      32     33.3%
BITBANK2            96      0       0      0.0%
BANK1               80     38      64     80.0%
BITBANK1            80      0       0      0.0%
BANK0               80     80      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     264      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 10 16:16:06 2024

                    ___fldiv@aexp 0039                      ___fldiv@bexp 0038      TH02_GetCompensatedRH@rhvalue 00B7  
                               pc 0002                      ___fldiv@sign 0031     TH02_GetCompensatedRH@rhlinear 00B3  
                              _BF 04A0                                l41 1A72                                l50 1A40  
                              l35 1A65                                l44 1A37                                l53 1A4C  
                              l61 080F                                l38 1A66                                l62 0815  
                              l47 1A2E                                l56 1A58                                l65 1AED  
                              l59 080B                                l67 1AF2                                l92 1AA5  
                              l69 1B03                                l95 1A15                      ___awdiv@sign 0075  
                              fsr 0004               ___wmul@multiplicand 0072               __Umul8_16@word_mpld 0076  
      TH02_GetConversionValue@lsb 00BA        TH02_GetConversionValue@msb 00B8        TH02_GetConversionValue@ret 00BD  
                             l101 1A82                               l107 1B4D                               l221 0D82  
                             l150 11C6                               l310 000F                               l143 1C81  
                             l312 0027                               l137 1BF9                               l217 0C86  
                             l162 1B9C                               l155 1AE4                               l219 0D04  
                             l172 0714                               l324 1CC7                               l511 1F4F  
                             l175 07DB                               l504 1F66                               l168 0107  
                             l514 1F66                               l611 0E0D                               l179 09A9  
                             l606 0DDC                               l615 0E8C                               l375 1F7B  
                             l463 1D81                               l632 0F52                               l624 0FFF  
                             l713 03BB                               l617 0E67                               l385 1FFF  
                             l642 0F99                               l707 0449                               l491 12E9  
                             l636 0F76                               l476 1D1E                               l653 0FF5  
                             l645 0FD5                               l726 1B62                               l654 0FFF  
                             l719 043F                               l751 1325                               l728 1B74  
                             l752 1336                               l496 1302                               l488 127D  
                             l840 1D9D                               l657 1B27                               l753 13B6  
                             l905 1260                               l913 1BC7                               l809 1EDA  
                             l922 1ACC                               l691 0B6B                               l683 0AED  
                             l667 09FF                               l843 1DC5                               l764 1380  
                             l916 0800                               l844 1DD8                               l852 13E7  
                             l669 0B73                               l765 138C                               l757 1364  
                             l773 1A93                               l845 1DEB                               l861 1488  
                             l783 1591                               l791 15F7                               l792 16C6  
                             l848 13E9                               l689 0B5F                               l778 14D8  
                             l779 15A7                               l891 1C3C                               l796 16B0  
                             l884 17FF                               l876 16F5                               l869 1E58  
                             l878 1703                               _PEN 048A                               _SEN 0488  
                 __end_of_I2C_ACK 1A4D                               _abs 1A83                               _pad 1D82  
    TH02_StartRHConversion@heater 0073                               fsr0 0004                               indf 0000  
    TH02_StartRHConversion@config 0075                      ___awmod@sign 0075                      ___flmul@aexp 004C  
                    ___flmul@bexp 004D                      ___flmul@sign 0047                      ___flmul@temp 0052  
                    ___flmul@prod 004E    TH02_StartTempConversion@heater 0073    TH02_StartTempConversion@config 0075  
                    ___fltol@exp1 00A1                              ?_abs 0076                              l3010 1C76  
                            l3002 1C5C                              l3100 09BE                              l3012 1C7B  
                            l3020 0043                              l2300 11DA                              l3110 09D6  
                            l3102 09C3                              l3014 1C80                              l3030 1C8A  
                            l3022 0092                              l2302 11F2                              l2310 1BA2  
                            l3200 0AF2                              l3120 09E7                              l3112 09D9  
                            l3104 09CB                              l3008 1C6D                              l3032 1C8E  
                            l3024 00E0                              l2400 1CD4                              l2304 1224  
                            l2312 1BB2                              l2320 1ABE                              l3202 0AF7  
                            l3210 0B28                              l3130 0A07                              l3122 09EC  
                            l3114 09DD                              l3106 09CC                              l3050 1F8A  
                            l3042 1F67                              l3034 1CA5                              l3018 0028  
                            l2410 1CED                              l2402 1CD8                              l2330 1A88  
                            l2314 1BBA                              l2322 1AC6                              l3220 0B5E  
                            l3212 0B35                              l3204 0B05                              l3140 0A23  
                            l3132 0A13                              l3124 09F4                              l3116 09E1  
                            l3108 09CE                              l3300 0264                              l3060 1FAA  
                            l3052 1F8C                              l3044 1F6A                              l3036 1CAE  
                            l3028 1C82                              l2420 1D0A                              l2412 1CEF  
                            l2404 1CDD                              l2308 1B9D                              l2316 1AB9  
                            l2340 0016                              l2500 1DEE                              l3222 0B63  
                            l3214 0B43                              l3206 0B09                              l3150 0A4E  
                            l3134 0A15                              l3126 09F5                              l3118 09E2  
                            l3310 02EE                              l3302 0281                              l3070 1FD8  
                            l3062 1FAE                              l3054 1F94                              l3046 1F6E  
                            l3038 1CBF                              l2350 1D20                              l2414 1CF3  
                            l2406 1CE3                              l2422 1D10                              l2326 1A83  
                            l2318 1ABC                              l2430 1D82                              l2342 001D  
                            l2334 0003                              l2502 1E06                              l2510 1E39  
                            l3224 0B67                              l3216 0B52                              l3208 0B22  
                            l3160 0A73                              l3152 0A56                              l3144 0A2C  
                            l3128 09F7                              l3320 037E                              l3312 0319  
                            l3304 0298                              l3240 0116                              l3232 0108  
                            l3400 137A                              l2520 1A26                              l3072 1FE1  
                            l3064 1FB7                              l3056 1F9C                              l3048 1F7F  
                            l2600 14DE                              l2360 1D34                              l2352 1D24  
                            l2424 1D15                              l2416 1CFD                              l2408 1CE6  
                            l2328 1A87                              l2440 1DAF                              l2432 1D88  
                            l2344 0023                              l2336 0005                              l2512 1E54  
                            l2504 1E0E                              l3226 0B69                              l3218 0B56  
                            l3170 0A9E                              l3162 0A74                              l3154 0A58  
                            l3146 0A3E                              l3138 0A1E                              l3090 09AE  
                            l3322 0387                              l3330 039B                              l3314 033F  
                            l3306 02B5                              l3250 012B                              l3242 0117  
                            l3234 010C                              l3082 1B04                              l3410 13AD  
                            l3402 1384                              l2450 1A6C                              l2522 1A2B  
                            l2530 1A50                              l3066 1FC9                              l3058 1F9F  
                            l3074 1FE7                              l2610 153D                              l2602 14F8  
                            l2370 1D48                              l2362 1D36                              l2354 1D29  
                            l2426 1D1A                              l2418 1D03                              l2442 1DB7  
                            l2434 1D95                              l2338 0009                              l2506 1E1C  
                            l3180 0AB9                              l3156 0A5D                              l3164 0A7D  
                            l3172 0AA0                              l3148 0A46                              l3092 09B0  
                            l3332 039F                              l3324 038B                              l3316 0367  
                            l3308 02E0                              l3260 013F                              l3252 0133  
                            l3244 011C                              l3236 010E                              l2700 0DDE  
                            l3084 1B08                              l3412 13AE                              l3404 138E  
                            l3500 045C                              l2516 1A2F                              l2524 1A38  
                            l2532 1A55                              l3076 1FEC                              l3068 1FD7  
                            l2612 154E                              l2380 1D66                              l2372 1D4A  
                            l2364 1D38                              l2356 1D2B                              l2348 1D1F  
                            l2444 1DCB                              l2436 1D9B                              l2460 13D9  
                            l2452 13B7                              l2508 1E31                              l3420 1C05  
                            l3430 1A5D                              l3190 0AD1                              l3182 0ABD  
                            l3174 0AA6                              l3166 0A8F                              l3158 0A6F  
                            l3094 09B4                              l3350 03F0                              l3342 03C0  
                            l3334 03A0                              l3326 038C                              l3318 0370  
                            l3270 015B                              l3262 0144                              l3254 0136  
                            l3246 0121                              l3238 0112                              l2710 0DEF  
                            l2702 0DE0                              l3406 13A4                              l3510 07AE  
                            l3502 05EF                              l2518 1A34                              l2526 1A3D  
                            l2534 0802                              l2550 1AFE                              l2542 1AE5  
                            l3078 1FF7                              l2630 129D                              l2622 1261  
                            l2614 1567                              l2606 150D                              l2382 1D6D  
                            l2374 1D4E                              l2366 1D3E                              l2358 1D2F  
                            l2294 11C7                              l2438 1DA0                              l2470 13F8  
                            l2462 13DE                              l2454 13BB                              l3422 1C20  
                            l3432 1A61                              l3192 0AD2                              l3184 0ABE  
                            l3176 0AAE                              l3168 0A90                              l3096 09B8  
                            l3088 09AA                              l3360 0427                              l3344 03C5  
                            l3352 03F6                              l3336 03A4                              l3328 0395  
                            l3280 017C                              l3272 0160                              l3264 0149  
                            l3256 013A                              l3248 0129                              l2800 0ED4  
                            l2720 0E03                              l2712 0DF0                              l2704 0DE6  
                            l3408 13A9                              l3504 05FA                              l3512 07D5  
                            l2448 1A66                              l2536 0807                              l2528 1A4D  
                            l2544 1AEA                              l2632 12C1                              l2624 1275  
                            l2616 1570                              l2608 1526                              l3520 081A  
                            l3440 1B28                              l2376 1D5F                              l2368 1D41  
                            l2384 1D73                              l2392 1CC8                              l2296 11CD  
                            l2480 143F                              l2472 1415                              l2464 13E3  
                            l2456 13CE                              l3424 1C30                              l3416 1BFA  
                            l3600 1EC2                              l3434 1A63                              l3194 0AD6  
                            l3186 0AC7                              l3178 0AB0                              l3098 09B9  
                            l3370 0441                              l3362 0429                              l3354 0403  
                            l3346 03D3                              l3338 03B8                              l3290 0206  
                            l3282 0189                              l3274 0165                              l3266 0151  
                            l3258 013E                              l2810 0F30                              l2802 0ED7  
                            l2730 0E1B                              l2714 0DF5                              l2722 0E05  
                            l2706 0DE7                              l2650 1F0A                              l2642 1EDB  
                            l3506 0753                              l2538 0810                              l2554 1B00  
                            l2546 1AF3                              l2634 12C5                              l2626 1291  
                            l2618 1589                              l2570 15FD                              l2562 15A8  
                            l3522 081E                              l3450 11B2                              l3442 1B29  
                            l2386 1D78                              l2378 1D65                              l2394 1CC9  
                            l2298 11D3                              l2490 1466                              l2482 1447  
                            l2474 1418                              l2466 13ED                              l2458 13D3  
                            l3418 1C00                              l3602 1ECD                              l3610 0B7E  
                            l3436 1A64                              l3428 1A59                              l3196 0AEA  
                            l3188 0ACD                              l3364 0435                              l3356 040E  
                            l3348 03D7                              l3292 0222                              l3284 01A4  
                            l3268 0153                              l2812 0F35                              l2804 0EED  
                            l2740 0E25                              l2732 0E1D                              l2724 0E13  
                            l2716 0DFA                              l2708 0DEB                              l2652 1F0D  
                            l2644 1EE8                              l3380 131D                              l3508 0758  
                            l2548 1AF8                              l2636 12FF                              l2628 1299  
                            l2580 165C                              l2572 1617                              l2564 15CA  
                            l3540 0846                              l3532 083A                              l3524 0823  
                            l3516 0816                              l3452 11B7                              l3444 1B37  
                            l2388 1D7D                              l2396 1CCD                              l2492 146C  
                            l2484 144C                              l2476 141E                              l2468 13F1  
                            l2900 16F8                              l3604 1ED3                              l3620 0BB3  
                            l3612 0B87                              l3366 0439                              l3358 041D  
                            l3294 022B                              l3286 01C0                              l3278 016E  
                            l2830 0F7E                              l2822 0F68                              l2806 0F2B  
                            l2814 0F44                              l2750 0E2F                              l2742 0E27  
                            l2734 0E1F                              l2726 0E17                              l2718 0E02  
                            l2654 1F15                              l3390 134B                              l3382 132D  
                            l3374 1304                              l2638 1301                              l2582 166D  
                            l2566 15E9                              l3550 0880                              l3526 082E  
                            l3518 081A                              l3470 1ADB                              l3462 1ACE  
                            l3454 11B8                              l3438 1A94                              l2558 1A10  
                            l3446 1B3D                              l2398 1CD2                              l2494 1472  
                            l2486 1459                              l2478 1431                              l2910 172F  
                            l3630 0BDC                              l3622 0BBC                              l3614 0B90  
                            l3368 043A                              l3296 0239                              l3288 01EA  
                            l2840 0F8C                              l2832 0F80                              l2824 0F71  
                            l2816 0F5A                              l2808 0F2D                              l2760 0E38  
                            l2752 0E31                              l2744 0E29                              l2736 0E21  
                            l2728 0E19                              l2680 0DB4                              l2672 1F40  
                            l2664 1F25                              l2656 1F19                              l2648 1EF3  
                            l3392 134D                              l3376 1309                              l2592 1489  
                            l2584 1686                              l2576 162C                              l2568 15F6  
                            l3560 08C8                              l3552 088D                              l3528 0833  
                            l3472 1ADC                              l3464 1AD0                              l3456 11BD  
                            l3448 11B0                              l3480 1B84                              l2488 145F  
                            l2920 1752                              l2912 1733                              l2904 1706  
                            l3640 0C13                              l3632 0BED                              l3624 0BC2  
                            l3616 0B97                              l3608 0B74                              l3298 0256  
                            l2850 0FA3                              l2842 0F90                              l2834 0F85  
                            l2826 0F75                              l2818 0F5F                              l2770 0E78  
                            l2762 0E4F                              l2754 0E33                              l2746 0E2B  
                            l2738 0E23                              l2690 0DC4                              l2682 0DB6  
                            l2674 1F54                              l2658 1F1D                              l2666 1F39  
                            l3394 135B                              l3386 1339                              l3378 130D  
                            l2594 14AB                              l2586 168F                              l2578 1645  
                            l3562 08FC                              l3554 089A                              l3570 09A3  
                            l3466 1AD5                              l3458 11BE                              l3482 1B88  
                            l3490 1B95                              l2498 1DEC                              l2930 1797  
                            l2922 1760                              l2914 1734                              l2906 171B  
                            l3650 0C9A                              l3642 0C1C                              l3634 0C00  
                            l3626 0BCB                              l3618 0BA1                              l2860 0FDF  
                            l2852 0FB1                              l2844 0F96                              l2828 0F7A  
                            l2836 0F87                              l2780 0E95                              l2772 0E79  
                            l2764 0E6B                              l2756 0E35                              l2748 0E2D  
                            l2692 0DC9                              l2684 0DBA                              l2676 1F59  
                            l3396 136B                              l3388 1344                              l2596 14CA  
                            l2588 16A8                              l3564 0905                              l3556 08A0  
                            l3548 0857                              l3468 1AD6                              l3492 1B9B  
                            l3476 1B75                              l2932 17AD                              l2940 17C9  
                            l2924 176E                              l2916 1739                              l2908 1720  
                            l3580 1E6B                              l3660 0D47                              l3652 0CC9  
                            l3644 0C4B                              l3636 0C09                              l3628 0BD2  
                            l2870 0FF3                              l2862 0FE7                              l2854 0FB5  
                            l2790 0EBD                              l2838 0F8B                              l2774 0E82  
                            l2766 0E72                              l2758 0E37                              l2694 0DD1  
                            l2686 0DBE                              l2678 0DB0                              l3398 1376  
                            l2598 14D7                              l3566 0924                              l3558 08A9  
                            l3486 1B8A                              l3478 1B77                              l2942 17D1  
                            l2934 17B5                              l2926 1783                              l2918 1744  
                            l3590 1E85                              l3582 1E6D                              l3574 1E59  
                            l3662 0D71                              l3654 0CF3                              l3646 0C75  
                            l3638 0C0F                              ?_pad 0028                              l2880 1B58  
                            l2872 0FFA                              l2864 0FEC                              l2856 0FD3  
                            l2848 0F9E                              l2792 0EC4                              l2784 0E9E  
                            l2768 0E74                              l2776 0E84                              l2696 0DD2  
                            l2688 0DBF                              l3496 044D                              l3568 0957  
                            l3488 1B8C                              l2960 1A74                              l2936 17C2  
                            l3592 1E8D                              l3584 1E71                              l3576 1E64  
                            l3664 0D9D                              l3656 0D0D                              l3648 0C8F  
                            l2882 1B5C                              l2874 0FFE                              l2866 0FED  
                            l2858 0FDA                              l2794 0EC6                              l2786 0EB5  
                            l2778 0E90                              l2698 0DD4                              l3498 0451  
                            l2954 1A41                              l2962 1A74                              l2946 17D4  
                            l2890 16C7                              l3594 1EA2                              l3586 1E7A  
                            l3658 0D18                              l2884 1B6B                              l2876 1B4F  
                            l2868 0FF1                              l2796 0ECA                              l2788 0EB9  
                            l2956 1A44                              l2972 1BDB                              l2964 1A7E  
                            l2948 17F4                              l2892 16DF                              l3596 1EA8  
                            l3588 1E82                              l2886 1B70                              l2878 1B51  
                            l2798 0ECB                              l2958 1A49                              l2990 1C3E  
                            l2966 1BC9                              l2894 16E7                              l3598 1EAC  
                            l2992 1C4E                              l2984 1BF3                              l2968 1BD9  
                            l2896 16ED                              l2986 1BF8                              l2978 1BE7  
                            l2898 16F1                              l2996 1C50                              STR_1 114A  
                            STR_2 1087                              STR_3 10CE                              STR_4 10AC  
                            STR_5 110F                              STR_6 1167                              STR_7 1198  
                            STR_8 112D                              STR_9 1180                              _BRGH 04C2  
                            _CREN 00C4                              u3010 1D73                              u3011 1D72  
                            u3020 1D78                              u3100 1D10                              u3021 1D77  
                            u3005 1D67                              u3101 1D0F                              u3110 1D15  
                            u3030 1CCD                              u3111 1D14                              u3031 1CCC  
                            u4000 0F35                              u3040 1CD8                              u3120 1D88  
                            u3200 13D3                              u4001 0F34                              u3041 1CD7  
                            u3121 1D87                              u3201 13D2                              u4010 0F5A  
                            u3050 1CE3                              u3130 1D9B                              u3210 13DE  
                            u4011 0F59                              u3051 1CE2                              u3131 1D9A  
                            u3211 13DD                              u4100 0F9D                              u4020 0F5F  
                            u3300 080F                              u3140 1DC5                              u3220 143F  
                            u4101 0F9C                              u4021 0F5E                              u3301 080E  
                            u3141 1DC4                              u3221 143E                              u4110 0FA3  
                            u3310 1AF2                              u3070 1CF3                              u3150 1DCB  
                            u3230 1447                              u4111 0FA2                              u3311 1AF1  
                            u3071 1CF2                              u3151 1DCA                              u3231 1446  
                            u4200 1B5C                              u5000 0325                              u4120 0FB5  
                            u4040 0F75                              u3160 1A6C                              u3320 1AFE  
                            u3080 1CFD                              u3240 144C                              u4201 1B5B  
                            u4121 0FB4                              u4041 0F74                              u3161 1A6B  
                            u3321 1AFD                              u3401 164E                              u3081 1CFC  
                            u3065 1CE7                              u3145 1DC1                              u3241 144B  
                            u3225 143B                              u4130 0FC4                              u4050 0F7A  
                            u3170 1A72                              u3410 167B                              u3402 1655  
                            u3330 15D8                              u3250 1459                              u5011 0331  
                            u4051 0F79                              u4035 0F6A                              u3171 1A71  
                            u3403 165C                              u3251 1458                              u4220 1B70  
                            u5100 03B8                              u5020 034D                              u5012 0338  
                            u4140 0FD3                              u4060 0F85                              u3500 151B  
                            u3420 1686                              u3340 15F6                              u4300 1BD9  
                            u3260 145F                              u3180 13C0                              u4221 1B6F  
                            u5101 03B7                              u5013 033F                              u5005 0320  
                            u4141 0FD2                              u4061 0F84                              u3421 1685  
                            u3341 15F5                              u4301 1BD8                              u3085 1CF9  
                            u3261 145E                              u3181 13BE                              u5110 03BF  
                            u4150 0FDA                              u4070 0F8B                              u3510 1526  
                            u3430 169D                              u3350 15FD                              u4310 1BE6  
                            u3270 1466                              u3190 13C1                              u4230 16DF  
                            u4215 1B63                              u5111 03BE                              u5031 0359  
                            u4151 0FD9                              u4135 0FBF                              u4071 0F8A  
                            u3511 1525                              u3415 1676                              u3351 15FC  
                            u3335 15D3                              u4311 1BE5                              u3095 1D04  
                            u3271 1465                              u3255 1455                              u4231 16DE  
                            u5120 03C5                              u5032 0360                              u4160 0FDF  
                            u4080 0F90                              u5200 132D                              u3440 16A8  
                            u3360 160D                              u4320 1BF2                              u3280 1E06  
                            u4240 1720                              u5121 03C4                              u5033 0367  
                            u5025 0348                              u4161 0FDE                              u4081 0F8F  
                            u5201 132C                              u3601 12AC                              u3521 152F  
                            u3505 1516                              u3441 16A7                              u3345 15F2  
                            u4321 1BF1                              u3281 1E05                              u4241 171F  
                            u5130 03D7                              u4170 0FEC                              u4090 0F96  
                            u4330 1C4E                              u4410 1CBF                              u3610 12C5  
                            u3602 12AD                              u3530 155C                              u3522 1536  
                            u3450 14B9                              u3370 162B                              u2810 11CD  
                            u3290 1E54                              u4250 1733                              u5131 03D6  
                            u4171 0FEB                              u4091 0F95                              u4331 1C4D  
                            u4411 1CBE                              u3611 12C4                              u3603 12B2  
                            u3523 153D                              u3435 1698                              u3371 162A  
                            u2811 11CC                              u3291 1E53                              u4251 1732  
                            u5140 03E6                              u5060 038B                              u4180 0FF1  
                            u3700 1F3F                              u5300 13A9                              u5220 134A  
                            u4340 1C5B                              u4500 1FE7                              u4420 1F6E  
                            u3604 12B3                              u3540 1567                              u3460 14D7  
                            u3380 163A                              u2820 11D3                              u4260 1752  
                            u5061 038A                              u5045 0369                              u4181 0FF0  
                            u3701 1F3E                              u5301 13A8                              u5221 1349  
                            u4341 1C5A                              u4501 1FE6                              u4421 1F6D  
                            u4405 1CAF                              u3621 12D4                              u3605 12B8  
                            u3541 1566                              u3461 14D6                              u3365 1608  
                            u2821 11D2                              u4261 1751                              u5150 0403  
                            u4190 0FFE                              u5310 13AD                              u4350 1C6C  
                            u4510 1FEC                              u4430 1F7F                              u3630 12FF  
                            u3622 12D5                              u3606 12B9                              u3550 157E  
                            u3470 14DE                              u3390 1645                              u2830 11F2  
                            u4270 1760                              u5151 0402                              u5055 0380  
                            u4191 0FFD                              u5311 13AC                              u5215 133C  
                            u4351 1C6B                              u4511 1FEB                              u4431 1F7E  
                            u3631 12FE                              u3623 12DA                              u3535 1557  
                            u3471 14DD                              u3455 14B4                              u3391 1644  
                            u2831 11F1                              u4271 175F                              u4600 0A5D  
                            u4520 09B8                              u5160 041D                              u5080 039F  
                            u3800 0DFA                              u3720 1F54                              u3640 1EE8  
                            u5240 136A                              u4440 1F9C                              u3624 12DB  
                            u3560 1589                              u3480 14EE                              u4360 0043  
                            u5400 1B9B                              u2840 1224                              u2920 0023  
                            u4280 17AD                              u5320 1C30                              u4601 0A5C  
                            u4521 09B7                              u5161 041C                              u5145 03E1  
                            u5081 039E                              u3801 0DF9                              u3721 1F53  
                            u3641 1EE7                              u5241 1369                              u4441 1F9B  
                            u3625 12E0                              u3561 1588                              u3465 14D3  
                            u3385 1635                              u4361 0042                              u5401 1B9A  
                            u2841 1223                              u2921 0022                              u2905 0010  
                            u4281 17AC                              u5321 1C2F                              u4530 09BE  
                            u5170 0439                              u5090 03A4                              u3810 0E13  
                            u3730 1F59                              u3650 1F03                              u5410 045C  
                            u4370 1C8E                              u3626 12E1                              u3570 1275  
                            u3490 150C                              u4290 1A7E                              u5330 1B4D  
                            u2930 1D24                              u2850 1245                              u4531 09BD  
                            u5171 0438                              u5155 03FF                              u5091 03A3  
                            u5075 038E                              u3811 0E12                              u3731 1F58  
                            u3715 1F44                              u5235 135C                              u5411 045B  
                            u4371 1C8D                              u3635 12FB                              u3571 1274  
                            u3555 1579                              u3491 150B                              u4291 1A7D  
                            u5331 1B4C                              u2931 1D23                              u2915 0017  
                            u4540 09C3                              u3900 0E90                              u3820 0E17  
                            u3740 0DBE                              u3660 1F1D                              u5260 137A  
                            u5180 1309                              u5420 05FA                              u4460 1FAE  
                            u3580 1291                              u5340 11B7                              u2940 1D2F  
                            u2860 1BC7                              u4541 09C2                              u5165 0419  
                            u3901 0E8F                              u3821 0E16                              u3741 0DBD  
                            u3661 1F1C                              u5261 1379                              u5181 1308  
                            u5421 05F9                              u4461 1FAD                              u4381 1C97  
                            u3581 1290                              u3485 14E9                              u5341 11B6  
                            u2941 1D2E                              u2845 1220                              u2861 1BC6  
                            u4710 0AD1                              u4630 0A73                              u4550 09E1  
                            u3910 0E95                              u3830 0E4F                              u3750 0DC4  
                            u3670 1F24                              u5270 1380                              u5190 130D  
                            u5430 0758                              u4382 1C9E                              u3590 129D  
                            u5350 11BD                              u2950 1D3E                              u2870 1AC6  
                            u5510 1E64                              u4711 0AD0                              u4631 0A72  
                            u4615 0A5F                              u4551 09E0                              u3911 0E94  
                            u3831 0E4E                              u3751 0DC3                              u3671 1F23  
                            u3655 1EFE                              u5271 137F                              u5255 136F  
                            u5191 130C                              u5431 0757                              u4455 1FA1  
                            u4383 1CA5                              u3591 129C                              u5351 11BC  
                            u2951 1D3D                              u2871 1AC5                              u5511 1E63  
                            u4800 0B67                              u4720 0AD6                              u4560 09E7  
                            u3840 0E5A                              u3760 0DC9                              u5280 1384  
                            u4480 1FC9                              u5440 082E                              u5360 1AD5  
                            u2880 1A87                              u5520 1E7A                              u5600 0D18  
                            u4801 0B66                              u4721 0AD5                              u4705 0AC0  
                            u4625 0A68                              u4561 09E6                              u3921 0EA7  
                            u3841 0E58                              u3761 0DC8                              u5281 1383  
                            u4481 1FC8                              u5505 08FE                              u5441 082D  
                            u5361 1AD4                              u2881 1A86                              u5521 1E79  
                            u5601 0D17                              u4730 0AEA                              u4650 0A8F  
                            u4570 09EC                              u4810 0116                              u3930 0EB9  
                            u3922 0EAE                              u3850 0E5B                              u3770 0DE6  
                            u3690 1F38                              u5290 1399                              u5450 0845  
                            u5370 1ADB                              u2970 1D4E                              u2890 0009  
                            u5530 1EA8                              u4731 0AE9                              u4651 0A8E  
                            u4571 09EB                              u4811 0115                              u3931 0EB8  
                            u3923 0EB5                              u3835 0E4B                              u3771 0DE5  
                            u3691 1F37                              u4475 1FB0                              u4395 1CA7  
                            u5451 0844                              u5371 1ADA                              u2971 1D4D  
                            u2891 0008                              u5531 1EA7                              u4740 0AF1  
                            u4660 0AA6                              u4580 0A07                              u4820 011C  
                            u3940 0EBD                              u3860 0E6B                              u3780 0DEF  
                            u5460 0856                              u5380 1B84                              u5540 1EAC  
                            _RCEN 048B                              u4741 0AF0                              u4661 0AA5  
                            u4645 0A76                              u4581 0A06                              u4901 01CE  
                            u4821 011B                              u3941 0EBC                              u3861 0E6A  
                            u3781 0DEE                              u3685 1F26                              u4485 1FC5  
                            u5461 0855                              u5381 1B83                              u2965 1D42  
                            u5541 1EAB                              u4750 0AF7                              u4670 0AAE  
                            u4590 0A23                              u4902 01D5                              u4830 0121  
                            u3950 0ECA                              u3870 0E78                              u3790 0DF5  
                            u5470 089A                              u5390 1B88                              u2990 1D5F  
                            u5550 1EC2                              u4751 0AF6                              u4671 0AAD  
                            u4655 0A8B                              u4591 0A22                              u4911 01F8  
                            u4903 01DC                              u4831 0120                              u3951 0EC9  
                            u3871 0E77                              u3791 0DF4                              u5295 1394  
                            u4495 1FD9                              u5471 0899                              u5391 1B87  
                            u2991 1D5E                              u5551 1EC1                              u4760 0B09  
                            u4912 01FF                              u4840 013E                              u5480 08A0  
                            u5560 0BA1                              u4761 0B08                              u4921 0214  
                            u4913 0206                              u4841 013D                              u5481 089F  
                            u2985 1D4F                              u5617 0DA5                              u5561 0BA0  
                            u4770 0B18                              u4690 0ABD                              u4922 021B  
                            u4850 0144                              u3970 0EED                              u3890 0E8C  
                            u5570 0BDC                              u4691 0ABC                              u4923 0222  
                            u4851 0143                              u3971 0EEC                              u3891 0E8B  
                            u5627 1B90                              u2995 1D5B                              u5555 1EBE  
                            u5571 0BDB                              u4780 0B35                              u4860 0149  
                            u5580 0C1C                              u4781 0B34                              u4685 0AB2  
                            u4941 0248                              u4861 0148                              u3981 0F04  
                            u3973 0EE9                              u3965 0ECD                              u3885 0E7B  
                            u5581 0C1B                              u4790 0B52                              u4942 024F  
                            u4870 0160                              u3990 0F18                              u3982 0F05  
                            u5590 0C9A                              u4791 0B51                              u4775 0B13  
                            u4951 0273                              u4943 0256                              u4935 0224  
                            u4871 015F                              u3991 0F19                              u3983 0F0A  
                            u5495 08A2                              u5591 0C99                              u4952 027A  
                            u4880 0165                              u3992 0F1E                              u3984 0F0B  
                            u4785 0B31                              u4953 0281                              u4881 0164  
                            u3993 0F1F                              u3985 0F10                              u3986 0F11  
                            u4795 0B4E                              u4971 02A7                              u4891 01B2  
                     main@humComp 01D4                              u4972 02AE                              u4892 01B9  
                            u4981 02D2                              u4973 02B5                              u4965 0283  
                            u4893 01C0                              u4982 02D9                              u4991 02FD  
                            u4983 02E0                              u4992 0304                              u4993 030B  
                            _SPEN 00C7                              _RSEN 0489                              _TRMT 04C1  
                            _TXEN 04C5                              _SYNC 04C4                  __end_of_I2C_NACK 1A59  
                            abs@a 0076                              _dbuf 0110  __end_of_I2C_Master_RepeatedStart 1A2F  
                            _main 0B74                              _dtoa 13B7                       main@tempRaw 01D0  
                            _prec 00D2                              _nout 00CE                              pad@i 002D  
                            pad@p 002B                              btemp 007E                      _snprintf$691 005D  
                            start 0000                   ___fldiv@new_exp 0032           __end_of_UART_Write_Text 1B4E  
                           ??_abs 0078                             ??_pad 007D                  ?_I2C_Master_Init 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                     ___fltol@sign1 00A0  
                 __end_of___aldiv 2000                   __end_of___fladd 1000                             ?_main 0070  
                           ?_dtoa 002F                             _ACKEN 048C                             _ACKDT 048D  
                 __end_of___fldiv 0B74                   __end_of___awdiv 1D82                             STR_10 1062  
                           STR_11 10EF                             STR_12 1000                             STR_13 1033  
                 __end_of___awmod 1D1F                   __end_of___flmul 044A                   __end_of___flsub 1B28  
                 __end_of___fltol 1F67                   ___awdiv@divisor 0070                   ___awdiv@counter 0074  
                    vfpfcnvrt@fmt 003D          ??_TH02_StartRHConversion 0074                             _SPBRG 0099  
                           _SSPIF 0063                             _TXREG 0019               ___lmul@multiplicand 0074  
                     ?_UART_Write 0070                             _ceilf 1489                             _flags 00D6  
             read_prec_or_width@c 007A                             _errno 00D4               read_prec_or_width@n 007B  
                           _fputc 11C7                             _fputs 1B9D                             pad@fp 0028  
                           _width 00D0                             _putch 0800            TH02_ReadRegister@value 0071  
                           dtoa@d 0031                             dtoa@i 0039                             dtoa@p 0035  
                           dtoa@s 0038                             dtoa@w 0036                             pclath 000A  
                           status 0003                             wtemp0 007E        __end_of_TH02_WriteRegister 1BFA  
                 __initialization 07DC                      __end_of_main 0DB0                      __end_of_dtoa 1489  
                       ??_I2C_ACK 0070                            ??_main 00C3                            ??_dtoa 007E  
      __end_of_read_prec_or_width 1E59                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070  
        TH02_GetCompensatedRH@ret 00A9                 _TH02_ReadRegister 1C3D                            ?_ceilf 0068  
              ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0070                            ?_fputc 0070  
                          ?_fputs 0020                  ___awdiv@dividend 0072                            ?_putch 0070  
              ?_TH02_ReadRegister 0071                     vfpfcnvrt@done 0047                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _TRISC6 043E  
                          _TRISC7 043F                            _SSPCON 0014                            _SSPBUF 0013  
                __end_of___xxtofl 13B7               ??_TH02_ReadRegister 0072          _I2C_Master_RepeatedStart 1A26  
                    vfprintf@cfmt 004F                            ___flge 1261                     _I2C_Read_Byte 1AE5  
                          ___lmul 1C82                         ??___aldiv 0078                         ??___fladd 005C  
                          ___wmul 0003                         ??___fldiv 0028                         ??___awdiv 0074  
                       ??___awmod 0074                         ??___flmul 0042                  ?_UART_Write_Text 0071  
                       ??___flsub 007E                         ??___fltol 006C                            _floorf 15A8  
                          ceilf@e 00AA                            ceilf@m 00A6                            ceilf@u 00AC  
                          ceilf@x 0068              read_prec_or_width@ap 0077                  ___awdiv@quotient 0076  
       ?_TH02_StartTempConversion 0073                   ___awmod@divisor 0070                   ___awmod@counter 0074  
                          pad@buf 002A             __end_of_UART_TX_Empty 1A16                            dtoa@fp 002F  
                          _strlen 1AB9                         ?_I2C_NACK 0070                            fputc@c 0070  
                          fputs@c 0025                            fputs@i 0026                            fputs@s 0020  
       __end_of_TH02_ReadRegister 1C82                            putch@c 0070                  __end_of_roundInt 0108  
                __end_of_vfprintf 1C3D                  __end_of_snprintf 1EDB           TH02_WaitForReady@status 0076  
      _TH02_GetCompensatedRH$1021 00AB        _TH02_GetCompensatedRH$1022 00AF        _TH02_GetCompensatedRH$1023 00A4  
                      ___flge@ff1 0070                        ___flge@ff2 0074                      ___xxtofl@arg 007A  
                    ___xxtofl@exp 0079                      ___xxtofl@val 0070           __end_of__initialization 07FC  
           _TH02_GetCompensatedRH 044A                        ___fltol@f1 0068   TH02_GetCompensatedRH@round_flag 00A8  
                  ?_I2C_Read_Byte 0070                    __pcstackCOMMON 0070                      __pidataBANK1 1A1E  
                   __end_of_ceilf 15A8                     __end_of_fputc 1261              TH02_ReadRegister@reg 0072  
                   __end_of_fputs 1BC8                     __end_of_putch 0801                        ??_I2C_NACK 0070  
            _last_conversion_type 00D7                           ??_ceilf 00A0                           ??_fputc 0074  
                         ??_fputs 0023                           ??_putch 0070                        __last_temp 00DC  
                      __pbssBANK1 00C6                        __pbssBANK2 0110            _TH02_StartRHConversion 1ACD  
TH02_StartTempConversion@fastmode 0074                 __end_of__Umul8_16 1B75                        __pmaintext 0B74  
         _TH02_GetConversionValue 0816                           ?___flge 0070                           ?___lmul 0070  
                         ?___wmul 0070                           _I2C_ACK 1A41     TH02_GetConversionValue@config 00BC  
                         ?_floorf 0068                           _ACKSTAT 048E                    ___lmul@product 0079  
   TH02_GetConversionValue@result 00BF                           ?_strlen 0070                         ?___xxtofl 0070  
                    ??_UART_Write 0070                           _SSPCON2 0091                           _SSPSTAT 0094  
                   ?_UART_TX_Init 0070                        __stringtab 1800                     roundInt@value 00B0  
          ?_TH02_GetCompensatedRH 00A2                 _TH02_WaitForReady 1B75                   ??_I2C_Read_Byte 0070  
              ?_TH02_WaitForReady 0070                           ___aldiv 1F67                           ___fladd 0DB0  
                         ___fldiv 09AA                           ___awdiv 1D1F                           ___awmod 1CC8  
                         ___flmul 0108                           ___flsub 1B04                           ___fltol 1EDB  
              __end_of_UART_Write 1A83                         ?_roundInt 00B0                         ?_vfprintf 004A  
             ??_TH02_WaitForReady 0073                         ?_snprintf 0051                           __ptext1 1E59  
                         __ptext2 1BFA                           __ptext3 16C7                           __ptext4 1DEC  
                         __ptext5 0003                           __ptext6 13B7                           __ptext7 1D82  
                         __ptext8 1AB9                           __ptext9 1B9D                _TH02_WriteRegister 1BC8  
           read_prec_or_width@fmt 0076                        ??___xxtofl 0074                  ___awmod@dividend 0072  
                ___aldiv@dividend 0074               ?_TH02_WriteRegister 0071                    ??_UART_TX_Init 0070  
                         clrloop0 1A17              end_of_initialization 07FC                           floorf@e 00AA  
                         floorf@m 00A6                           floorf@u 00AC                           floorf@x 0068  
      ??_I2C_Master_RepeatedStart 0070         __end_of_TH02_WaitForReady 1B9D                           fputc@fp 0072  
                         fputs@fp 0021  __end_of_TH02_StartTempConversion 11C7                _read_prec_or_width 1DEC  
       ??_TH02_GetConversionValue 00B6                 __end_of_vfpfcnvrt 1800                  ___aldiv@quotient 0022  
            ??_TH02_WriteRegister 0072               ?_read_prec_or_width 0076                  vfpfcnvrt@convarg 0043  
                    __pstringtext 1000                        ??_roundInt 007E                        ??_vfprintf 007E  
                      ??_snprintf 005A                           strlen@a 0072                           strlen@s 0070  
                  UART_Write@data 0070                       ___fladd@grs 0067                     ___xxtofl@sign 0078  
            ??_read_prec_or_width 0078                       ___fldiv@grs 0034                       ___fldiv@rem 002D  
                     ___flmul@grs 0048                        main@humRaw 01D2         TH02_WaitForReady@time_out 0075  
                  __end_of___flge 1303                    __end_of___lmul 1CC8                       vfpfcnvrt@ap 003E  
                     vfpfcnvrt@cp 0048                       vfpfcnvrt@fp 003B                    __end_of___wmul 0028  
                  __end_of_floorf 16C7                        floorf@F521 00C6                    __end_of_strlen 1ACD  
             start_initialization 07DC                       __end_of_abs 1A94                       __end_of_pad 1DEC  
         ?_TH02_StartRHConversion 0073                 ??_I2C_Master_Init 0070                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                       vfprintf@fmt 004C          _TH02_StartTempConversion 11AF  
                        ??___flge 0078                          ??___lmul 0078                          ??___wmul 0074  
                      init_fetch0 1AA6                         __Umul8_16 1B4E              __end_of_UART_TX_Init 1AA6  
                     __pdataBANK1 00D8                          ?_I2C_ACK 0070                          ??_floorf 00A0  
                        ??_strlen 0072                         ___fladd@a 0058                         ___fladd@b 0054  
                       ___fldiv@a 0020                         ___fldiv@b 0024                         ___flmul@a 003E  
                       ___flmul@b 003A                         ___flsub@a 0068                         ___flsub@b 006C  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                   __pcstackBANK3 0190                       snprintf@cnt 0060                       snprintf@fmt 0054  
         ??_TH02_GetCompensatedRH 007E    __end_of_TH02_StartRHConversion 1AE5           TH02_WriteRegister@value 0071  
                _I2C_Master_Start 1A2F                  _I2C_Master_Write 0801                         _main$1024 01D6  
                       _main$1025 01D8                          ?___aldiv 0070                          ?___fladd 0054  
                        ?___fldiv 0020                          ?___awdiv 0070                          ?___awmod 0070  
                        ?___flmul 003A                          ?___flsub 0068                          ?___fltol 0068  
                      ?__Umul8_16 0070                   main@displayText 0190              I2C_Master_Write@data 0070  
                       __pstrings 1800                         ceilf@F521 00CA                          _I2C_NACK 1A4D  
                   _UART_TX_Empty 1A10    TH02_StartRHConversion@fastmode 0074                 ??_UART_Write_Text 0073  
                 ___aldiv@divisor 0070                   ___aldiv@counter 0020                    ___wmul@product 0074  
                       clear_ram0 1A16             __end_of_I2C_Read_Byte 1B04                         _vfpfcnvrt 16C7  
                     __stringbase 1812                    ?_UART_TX_Empty 0070                 ___wmul@multiplier 0070  
               ___lmul@multiplier 0070                        vfprintf@ap 004E                        vfprintf@fp 004A  
                     ??__Umul8_16 0072         ?_I2C_Master_RepeatedStart 0070                        ?_vfpfcnvrt 003B  
                      snprintf@ap 005F                __end_of__stringtab 1812                          __last_rh 00D8  
                 _I2C_Master_Init 1A59                          ___xxtofl 1303                   _I2C_Master_Wait 1A66  
                 _I2C_Master_Stop 1A38                          _dtoa$738 0033                          __ptext10 11C7  
                        __ptext11 0800                          __ptext20 11AF                          __ptext12 1A83  
                        __ptext21 1ACD                          __ptext13 1CC8                          __ptext30 1C3D  
                        __ptext22 1BC8                          __ptext14 1D1F                          __ptext31 1AE5  
                        __ptext23 0816                          __ptext15 1B28                          __ptext40 1303  
                        __ptext32 1A4D                          __ptext24 0028                          __ptext16 1A73  
                        __ptext41 1EDB                          __ptext33 0801                          __ptext25 15A8  
                        __ptext17 1A10                          __ptext42 1B04                          __ptext34 1A38  
                        __ptext26 1489                          __ptext18 1A94                          __ptext43 0DB0  
                        __ptext35 1A2F                          __ptext27 1261                          __ptext19 1B75  
                        __ptext44 0108                          __ptext36 1A26                          __ptext28 1C82  
                        __ptext45 1B4E                          __ptext37 1A41                          __ptext29 1F67  
                        __ptext46 09AA                          __ptext38 1A66                          __ptext47 1A59  
                        __ptext39 044A          ?_TH02_GetConversionValue 00B4                      _UART_TX_Init 1A94  
      ??_TH02_StartTempConversion 0074               UART_Write_Text@text 0071                          _roundInt 0028  
                        _vfprintf 1BFA                          _snprintf 1E59                   ??_UART_TX_Empty 0070  
        __end_of_I2C_Master_Start 1A38          __end_of_I2C_Master_Write 0816                          init_ram0 1AAA  
                       snprintf@f 0062                         snprintf@n 0052                         snprintf@s 0051  
   __end_of_TH02_GetCompensatedRH 07DC             TH02_WriteRegister@reg 0072                         stringcode 180A  
         __end_of_I2C_Master_Init 1A66           __end_of_I2C_Master_Wait 1A73           __end_of_I2C_Master_Stop 1A41  
                     ??_vfpfcnvrt 003F            __Umul8_16@multiplicand 0070                   _UART_Write_Text 1B28  
 __end_of_TH02_GetConversionValue 09AA                          stringtab 1800                      ___aldiv@sign 0021  
                      _UART_Write 1A73                     ___fladd@signs 0064                      ___fladd@aexp 0065  
                    ___fladd@bexp 0066              __Umul8_16@multiplier 0078                 __Umul8_16@product 0074  
