

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 02 20:08:53 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,space=0,merge=1,inline,delta=2
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Generated 12/10/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85     0004                     fsr             equ	4
    86     0004                     fsr0            equ	4
    87     0000                     indf            equ	0
    88     0000                     indf0           equ	0
    89     0002                     pc              equ	2
    90     0002                     pcl             equ	2
    91     000A                     pclath          equ	10
    92     0003                     status          equ	3
    93     0000                     INDF            equ	0	;# 
    94     0001                     TMR0            equ	1	;# 
    95     0002                     PCL             equ	2	;# 
    96     0003                     STATUS          equ	3	;# 
    97     0004                     FSR             equ	4	;# 
    98     0005                     PORTA           equ	5	;# 
    99     0006                     PORTB           equ	6	;# 
   100     0007                     PORTC           equ	7	;# 
   101     0008                     PORTD           equ	8	;# 
   102     0009                     PORTE           equ	9	;# 
   103     000A                     PCLATH          equ	10	;# 
   104     000B                     INTCON          equ	11	;# 
   105     000C                     PIR1            equ	12	;# 
   106     000D                     PIR2            equ	13	;# 
   107     000E                     TMR1            equ	14	;# 
   108     000E                     TMR1L           equ	14	;# 
   109     000F                     TMR1H           equ	15	;# 
   110     0010                     T1CON           equ	16	;# 
   111     0011                     TMR2            equ	17	;# 
   112     0012                     T2CON           equ	18	;# 
   113     0013                     SSPBUF          equ	19	;# 
   114     0014                     SSPCON          equ	20	;# 
   115     0015                     CCPR1           equ	21	;# 
   116     0015                     CCPR1L          equ	21	;# 
   117     0016                     CCPR1H          equ	22	;# 
   118     0017                     CCP1CON         equ	23	;# 
   119     0018                     RCSTA           equ	24	;# 
   120     0019                     TXREG           equ	25	;# 
   121     001A                     RCREG           equ	26	;# 
   122     001B                     CCPR2           equ	27	;# 
   123     001B                     CCPR2L          equ	27	;# 
   124     001C                     CCPR2H          equ	28	;# 
   125     001D                     CCP2CON         equ	29	;# 
   126     001E                     ADRESH          equ	30	;# 
   127     001F                     ADCON0          equ	31	;# 
   128     0081                     OPTION_REG      equ	129	;# 
   129     0085                     TRISA           equ	133	;# 
   130     0086                     TRISB           equ	134	;# 
   131     0087                     TRISC           equ	135	;# 
   132     0088                     TRISD           equ	136	;# 
   133     0089                     TRISE           equ	137	;# 
   134     008C                     PIE1            equ	140	;# 
   135     008D                     PIE2            equ	141	;# 
   136     008E                     PCON            equ	142	;# 
   137     0091                     SSPCON2         equ	145	;# 
   138     0092                     PR2             equ	146	;# 
   139     0093                     SSPADD          equ	147	;# 
   140     0094                     SSPSTAT         equ	148	;# 
   141     0098                     TXSTA           equ	152	;# 
   142     0099                     SPBRG           equ	153	;# 
   143     009C                     CMCON           equ	156	;# 
   144     009D                     CVRCON          equ	157	;# 
   145     009E                     ADRESL          equ	158	;# 
   146     009F                     ADCON1          equ	159	;# 
   147     010C                     EEDATA          equ	268	;# 
   148     010D                     EEADR           equ	269	;# 
   149     010E                     EEDATH          equ	270	;# 
   150     010F                     EEADRH          equ	271	;# 
   151     018C                     EECON1          equ	396	;# 
   152     018D                     EECON2          equ	397	;# 
   153     0000                     INDF            equ	0	;# 
   154     0001                     TMR0            equ	1	;# 
   155     0002                     PCL             equ	2	;# 
   156     0003                     STATUS          equ	3	;# 
   157     0004                     FSR             equ	4	;# 
   158     0005                     PORTA           equ	5	;# 
   159     0006                     PORTB           equ	6	;# 
   160     0007                     PORTC           equ	7	;# 
   161     0008                     PORTD           equ	8	;# 
   162     0009                     PORTE           equ	9	;# 
   163     000A                     PCLATH          equ	10	;# 
   164     000B                     INTCON          equ	11	;# 
   165     000C                     PIR1            equ	12	;# 
   166     000D                     PIR2            equ	13	;# 
   167     000E                     TMR1            equ	14	;# 
   168     000E                     TMR1L           equ	14	;# 
   169     000F                     TMR1H           equ	15	;# 
   170     0010                     T1CON           equ	16	;# 
   171     0011                     TMR2            equ	17	;# 
   172     0012                     T2CON           equ	18	;# 
   173     0013                     SSPBUF          equ	19	;# 
   174     0014                     SSPCON          equ	20	;# 
   175     0015                     CCPR1           equ	21	;# 
   176     0015                     CCPR1L          equ	21	;# 
   177     0016                     CCPR1H          equ	22	;# 
   178     0017                     CCP1CON         equ	23	;# 
   179     0018                     RCSTA           equ	24	;# 
   180     0019                     TXREG           equ	25	;# 
   181     001A                     RCREG           equ	26	;# 
   182     001B                     CCPR2           equ	27	;# 
   183     001B                     CCPR2L          equ	27	;# 
   184     001C                     CCPR2H          equ	28	;# 
   185     001D                     CCP2CON         equ	29	;# 
   186     001E                     ADRESH          equ	30	;# 
   187     001F                     ADCON0          equ	31	;# 
   188     0081                     OPTION_REG      equ	129	;# 
   189     0085                     TRISA           equ	133	;# 
   190     0086                     TRISB           equ	134	;# 
   191     0087                     TRISC           equ	135	;# 
   192     0088                     TRISD           equ	136	;# 
   193     0089                     TRISE           equ	137	;# 
   194     008C                     PIE1            equ	140	;# 
   195     008D                     PIE2            equ	141	;# 
   196     008E                     PCON            equ	142	;# 
   197     0091                     SSPCON2         equ	145	;# 
   198     0092                     PR2             equ	146	;# 
   199     0093                     SSPADD          equ	147	;# 
   200     0094                     SSPSTAT         equ	148	;# 
   201     0098                     TXSTA           equ	152	;# 
   202     0099                     SPBRG           equ	153	;# 
   203     009C                     CMCON           equ	156	;# 
   204     009D                     CVRCON          equ	157	;# 
   205     009E                     ADRESL          equ	158	;# 
   206     009F                     ADCON1          equ	159	;# 
   207     010C                     EEDATA          equ	268	;# 
   208     010D                     EEADR           equ	269	;# 
   209     010E                     EEDATH          equ	270	;# 
   210     010F                     EEADRH          equ	271	;# 
   211     018C                     EECON1          equ	396	;# 
   212     018D                     EECON2          equ	397	;# 
   213     0000                     INDF            equ	0	;# 
   214     0001                     TMR0            equ	1	;# 
   215     0002                     PCL             equ	2	;# 
   216     0003                     STATUS          equ	3	;# 
   217     0004                     FSR             equ	4	;# 
   218     0005                     PORTA           equ	5	;# 
   219     0006                     PORTB           equ	6	;# 
   220     0007                     PORTC           equ	7	;# 
   221     0008                     PORTD           equ	8	;# 
   222     0009                     PORTE           equ	9	;# 
   223     000A                     PCLATH          equ	10	;# 
   224     000B                     INTCON          equ	11	;# 
   225     000C                     PIR1            equ	12	;# 
   226     000D                     PIR2            equ	13	;# 
   227     000E                     TMR1            equ	14	;# 
   228     000E                     TMR1L           equ	14	;# 
   229     000F                     TMR1H           equ	15	;# 
   230     0010                     T1CON           equ	16	;# 
   231     0011                     TMR2            equ	17	;# 
   232     0012                     T2CON           equ	18	;# 
   233     0013                     SSPBUF          equ	19	;# 
   234     0014                     SSPCON          equ	20	;# 
   235     0015                     CCPR1           equ	21	;# 
   236     0015                     CCPR1L          equ	21	;# 
   237     0016                     CCPR1H          equ	22	;# 
   238     0017                     CCP1CON         equ	23	;# 
   239     0018                     RCSTA           equ	24	;# 
   240     0019                     TXREG           equ	25	;# 
   241     001A                     RCREG           equ	26	;# 
   242     001B                     CCPR2           equ	27	;# 
   243     001B                     CCPR2L          equ	27	;# 
   244     001C                     CCPR2H          equ	28	;# 
   245     001D                     CCP2CON         equ	29	;# 
   246     001E                     ADRESH          equ	30	;# 
   247     001F                     ADCON0          equ	31	;# 
   248     0081                     OPTION_REG      equ	129	;# 
   249     0085                     TRISA           equ	133	;# 
   250     0086                     TRISB           equ	134	;# 
   251     0087                     TRISC           equ	135	;# 
   252     0088                     TRISD           equ	136	;# 
   253     0089                     TRISE           equ	137	;# 
   254     008C                     PIE1            equ	140	;# 
   255     008D                     PIE2            equ	141	;# 
   256     008E                     PCON            equ	142	;# 
   257     0091                     SSPCON2         equ	145	;# 
   258     0092                     PR2             equ	146	;# 
   259     0093                     SSPADD          equ	147	;# 
   260     0094                     SSPSTAT         equ	148	;# 
   261     0098                     TXSTA           equ	152	;# 
   262     0099                     SPBRG           equ	153	;# 
   263     009C                     CMCON           equ	156	;# 
   264     009D                     CVRCON          equ	157	;# 
   265     009E                     ADRESL          equ	158	;# 
   266     009F                     ADCON1          equ	159	;# 
   267     010C                     EEDATA          equ	268	;# 
   268     010D                     EEADR           equ	269	;# 
   269     010E                     EEDATH          equ	270	;# 
   270     010F                     EEADRH          equ	271	;# 
   271     018C                     EECON1          equ	396	;# 
   272     018D                     EECON2          equ	397	;# 
   273     0000                     INDF            equ	0	;# 
   274     0001                     TMR0            equ	1	;# 
   275     0002                     PCL             equ	2	;# 
   276     0003                     STATUS          equ	3	;# 
   277     0004                     FSR             equ	4	;# 
   278     0005                     PORTA           equ	5	;# 
   279     0006                     PORTB           equ	6	;# 
   280     0007                     PORTC           equ	7	;# 
   281     0008                     PORTD           equ	8	;# 
   282     0009                     PORTE           equ	9	;# 
   283     000A                     PCLATH          equ	10	;# 
   284     000B                     INTCON          equ	11	;# 
   285     000C                     PIR1            equ	12	;# 
   286     000D                     PIR2            equ	13	;# 
   287     000E                     TMR1            equ	14	;# 
   288     000E                     TMR1L           equ	14	;# 
   289     000F                     TMR1H           equ	15	;# 
   290     0010                     T1CON           equ	16	;# 
   291     0011                     TMR2            equ	17	;# 
   292     0012                     T2CON           equ	18	;# 
   293     0013                     SSPBUF          equ	19	;# 
   294     0014                     SSPCON          equ	20	;# 
   295     0015                     CCPR1           equ	21	;# 
   296     0015                     CCPR1L          equ	21	;# 
   297     0016                     CCPR1H          equ	22	;# 
   298     0017                     CCP1CON         equ	23	;# 
   299     0018                     RCSTA           equ	24	;# 
   300     0019                     TXREG           equ	25	;# 
   301     001A                     RCREG           equ	26	;# 
   302     001B                     CCPR2           equ	27	;# 
   303     001B                     CCPR2L          equ	27	;# 
   304     001C                     CCPR2H          equ	28	;# 
   305     001D                     CCP2CON         equ	29	;# 
   306     001E                     ADRESH          equ	30	;# 
   307     001F                     ADCON0          equ	31	;# 
   308     0081                     OPTION_REG      equ	129	;# 
   309     0085                     TRISA           equ	133	;# 
   310     0086                     TRISB           equ	134	;# 
   311     0087                     TRISC           equ	135	;# 
   312     0088                     TRISD           equ	136	;# 
   313     0089                     TRISE           equ	137	;# 
   314     008C                     PIE1            equ	140	;# 
   315     008D                     PIE2            equ	141	;# 
   316     008E                     PCON            equ	142	;# 
   317     0091                     SSPCON2         equ	145	;# 
   318     0092                     PR2             equ	146	;# 
   319     0093                     SSPADD          equ	147	;# 
   320     0094                     SSPSTAT         equ	148	;# 
   321     0098                     TXSTA           equ	152	;# 
   322     0099                     SPBRG           equ	153	;# 
   323     009C                     CMCON           equ	156	;# 
   324     009D                     CVRCON          equ	157	;# 
   325     009E                     ADRESL          equ	158	;# 
   326     009F                     ADCON1          equ	159	;# 
   327     010C                     EEDATA          equ	268	;# 
   328     010D                     EEADR           equ	269	;# 
   329     010E                     EEDATH          equ	270	;# 
   330     010F                     EEADRH          equ	271	;# 
   331     018C                     EECON1          equ	396	;# 
   332     018D                     EECON2          equ	397	;# 
   333     0000                     INDF            equ	0	;# 
   334     0001                     TMR0            equ	1	;# 
   335     0002                     PCL             equ	2	;# 
   336     0003                     STATUS          equ	3	;# 
   337     0004                     FSR             equ	4	;# 
   338     0005                     PORTA           equ	5	;# 
   339     0006                     PORTB           equ	6	;# 
   340     0007                     PORTC           equ	7	;# 
   341     0008                     PORTD           equ	8	;# 
   342     0009                     PORTE           equ	9	;# 
   343     000A                     PCLATH          equ	10	;# 
   344     000B                     INTCON          equ	11	;# 
   345     000C                     PIR1            equ	12	;# 
   346     000D                     PIR2            equ	13	;# 
   347     000E                     TMR1            equ	14	;# 
   348     000E                     TMR1L           equ	14	;# 
   349     000F                     TMR1H           equ	15	;# 
   350     0010                     T1CON           equ	16	;# 
   351     0011                     TMR2            equ	17	;# 
   352     0012                     T2CON           equ	18	;# 
   353     0013                     SSPBUF          equ	19	;# 
   354     0014                     SSPCON          equ	20	;# 
   355     0015                     CCPR1           equ	21	;# 
   356     0015                     CCPR1L          equ	21	;# 
   357     0016                     CCPR1H          equ	22	;# 
   358     0017                     CCP1CON         equ	23	;# 
   359     0018                     RCSTA           equ	24	;# 
   360     0019                     TXREG           equ	25	;# 
   361     001A                     RCREG           equ	26	;# 
   362     001B                     CCPR2           equ	27	;# 
   363     001B                     CCPR2L          equ	27	;# 
   364     001C                     CCPR2H          equ	28	;# 
   365     001D                     CCP2CON         equ	29	;# 
   366     001E                     ADRESH          equ	30	;# 
   367     001F                     ADCON0          equ	31	;# 
   368     0081                     OPTION_REG      equ	129	;# 
   369     0085                     TRISA           equ	133	;# 
   370     0086                     TRISB           equ	134	;# 
   371     0087                     TRISC           equ	135	;# 
   372     0088                     TRISD           equ	136	;# 
   373     0089                     TRISE           equ	137	;# 
   374     008C                     PIE1            equ	140	;# 
   375     008D                     PIE2            equ	141	;# 
   376     008E                     PCON            equ	142	;# 
   377     0091                     SSPCON2         equ	145	;# 
   378     0092                     PR2             equ	146	;# 
   379     0093                     SSPADD          equ	147	;# 
   380     0094                     SSPSTAT         equ	148	;# 
   381     0098                     TXSTA           equ	152	;# 
   382     0099                     SPBRG           equ	153	;# 
   383     009C                     CMCON           equ	156	;# 
   384     009D                     CVRCON          equ	157	;# 
   385     009E                     ADRESL          equ	158	;# 
   386     009F                     ADCON1          equ	159	;# 
   387     010C                     EEDATA          equ	268	;# 
   388     010D                     EEADR           equ	269	;# 
   389     010E                     EEDATH          equ	270	;# 
   390     010F                     EEADRH          equ	271	;# 
   391     018C                     EECON1          equ	396	;# 
   392     018D                     EECON2          equ	397	;# 
   393                           
   394                           	psect	idataBANK0
   395     0007                     __pidataBANK0:
   396                           
   397                           ;initializer for _oversampling@BMP085$F252
   398     0007  3403               	retlw	3
   399                           
   400                           	psect	idataBANK1
   401     0006                     __pidataBANK1:	
   402                           ;initializer for _oversampling
   403                           
   404     0006  3403               	retlw	3
   405     0008                     _PORTD          set	8
   406     0007                     _PORTCbits      set	7
   407     0013                     _SSPBUF         set	19
   408     0014                     _SSPCON         set	20
   409     0063                     _SSPIF          set	99
   410     0088                     _TRISDbits      set	136
   411     0087                     _TRISCbits      set	135
   412     0093                     _SSPADD         set	147
   413     0094                     _SSPSTAT        set	148
   414     0091                     _SSPCON2        set	145
   415     048B                     _RCEN           set	1163
   416     048E                     _ACKSTAT        set	1166
   417     048C                     _ACKEN          set	1164
   418     048D                     _ACKDT          set	1165
   419     048A                     _PEN            set	1162
   420     0489                     _RSEN           set	1161
   421     0488                     _SEN            set	1160
   422     043C                     _TRISC4         set	1084
   423     043B                     _TRISC3         set	1083
   424                           
   425                           	psect	strings
   426     0800                     __pstrings:
   427     0800                     stringtab:
   428     0800                     __stringtab:
   429     0800                     stringcode:	
   430                           ;	String table - string pointers are 1 byte each
   431                           
   432     0800                     stringdir:
   433     0800  3008               	movlw	high stringdir
   434     0801  008A               	movwf	10
   435     0802  0804               	movf	4,w
   436     0803  0A84               	incf	4,f
   437     0804  0782               	addwf	2,f
   438     0805                     __stringbase:
   439     0805  3400               	retlw	0
   440     0806                     __end_of__stringtab:
   441     0806                     STR_1:
   442     0806  3450               	retlw	80	;'P'
   443     0807  3472               	retlw	114	;'r'
   444     0808  3465               	retlw	101	;'e'
   445     0809  3473               	retlw	115	;'s'
   446     080A  3420               	retlw	32	;' '
   447     080B  343D               	retlw	61	;'='
   448     080C  3420               	retlw	32	;' '
   449     080D  3425               	retlw	37	;'%'
   450     080E  346C               	retlw	108	;'l'
   451     080F  3464               	retlw	100	;'d'
   452     0810  3468               	retlw	104	;'h'
   453     0811  3450               	retlw	80	;'P'
   454     0812  3461               	retlw	97	;'a'
   455     0813  3400               	retlw	0
   456                           
   457                           	psect	cinit
   458     07D7                     start_initialization:	
   459                           ; #config settings
   460                           
   461     07D7                     __initialization:
   462                           
   463                           ; Initialize objects allocated to BANK1
   464     07D7  1683               	bsf	3,5	;RP0=1, select bank1
   465     07D8  1303               	bcf	3,6	;RP1=0, select bank1
   466     07D9  120A  118A  2006  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   467     07DE  00EE               	movwf	__pdataBANK1& (0+127)
   468                           
   469                           ; Initialize objects allocated to BANK0
   470     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   471     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   472     07E1  120A  118A  2007  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   473     07E6  00EF               	movwf	__pdataBANK0& (0+127)
   474                           
   475                           ; Clear objects allocated to BANK3
   476     07E7  1783               	bsf	3,7	;select IRP bank2
   477     07E8  3090               	movlw	low __pbssBANK3
   478     07E9  0084               	movwf	4
   479     07EA  30C0               	movlw	low (__pbssBANK3+48)
   480     07EB  120A  158A  2175  120A  118A  	fcall	clear_ram0
   481                           
   482                           ; Clear objects allocated to BANK1
   483     07F0  1383               	bcf	3,7	;select IRP bank0
   484     07F1  30D0               	movlw	low __pbssBANK1
   485     07F2  0084               	movwf	4
   486     07F3  30EE               	movlw	low (__pbssBANK1+30)
   487     07F4  120A  158A  2175  120A  118A  	fcall	clear_ram0
   488                           
   489                           ; Clear objects allocated to BANK0
   490     07F9  01EC               	clrf	__pbssBANK0& (0+127)
   491     07FA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   492     07FB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   493     07FC                     end_of_initialization:	
   494                           ;End of C runtime variable initialization code
   495                           
   496     07FC                     __end_of__initialization:
   497     07FC  0183               	clrf	3
   498     07FD  120A  158A  2C4F   	ljmp	_main	;jump to C main() function
   499                           
   500                           	psect	bssBANK0
   501     006C                     __pbssBANK0:
   502     006C                     _ac1:
   503     006C                     	ds	2
   504     006E                     _flags:
   505     006E                     	ds	1
   506                           
   507                           	psect	dataBANK0
   508     006F                     __pdataBANK0:
   509     006F                     _oversampling@BMP085$F252:
   510     006F                     	ds	1
   511                           
   512                           	psect	bssBANK1
   513     00D0                     __pbssBANK1:
   514     00D0                     _b2@BMP085$F245:
   515     00D0                     	ds	2
   516     00D2                     _b1@BMP085$F244:
   517     00D2                     	ds	2
   518     00D4                     _ac3@BMP085$F243:
   519     00D4                     	ds	2
   520     00D6                     _ac2@BMP085$F242:
   521     00D6                     	ds	2
   522     00D8                     _ac1@BMP085$F241:
   523     00D8                     	ds	2
   524     00DA                     _ac6:
   525     00DA                     	ds	2
   526     00DC                     _ac5:
   527     00DC                     	ds	2
   528     00DE                     _ac4:
   529     00DE                     	ds	2
   530     00E0                     _md:
   531     00E0                     	ds	2
   532     00E2                     _mc:
   533     00E2                     	ds	2
   534     00E4                     _mb:
   535     00E4                     	ds	2
   536     00E6                     _b2:
   537     00E6                     	ds	2
   538     00E8                     _b1:
   539     00E8                     	ds	2
   540     00EA                     _ac3:
   541     00EA                     	ds	2
   542     00EC                     _ac2:
   543     00EC                     	ds	2
   544                           
   545                           	psect	dataBANK1
   546     00EE                     __pdataBANK1:
   547     00EE                     _oversampling:
   548     00EE                     	ds	1
   549                           
   550                           	psect	bssBANK3
   551     0190                     __pbssBANK3:
   552     0190                     _dbuf:
   553     0190                     	ds	32
   554     01B0                     _width:
   555     01B0                     	ds	2
   556     01B2                     _prec:
   557     01B2                     	ds	2
   558     01B4                     _ac6@BMP085$F251:
   559     01B4                     	ds	2
   560     01B6                     _ac5@BMP085$F250:
   561     01B6                     	ds	2
   562     01B8                     _ac4@BMP085$F249:
   563     01B8                     	ds	2
   564     01BA                     _md@BMP085$F248:
   565     01BA                     	ds	2
   566     01BC                     _mc@BMP085$F247:
   567     01BC                     	ds	2
   568     01BE                     _mb@BMP085$F246:
   569     01BE                     	ds	2
   570                           
   571                           	psect	clrtext
   572     0975                     clear_ram0:	
   573                           ;	Called with FSR containing the base address, and
   574                           ;	W with the last address+1
   575                           
   576     0975  0064               	clrwdt	;clear the watchdog before getting into this loop
   577     0976                     clrloop0:
   578     0976  0180               	clrf	0	;clear RAM location pointed to by FSR
   579     0977  0A84               	incf	4,f	;increment pointer
   580     0978  0604               	xorwf	4,w	;XOR with final address
   581     0979  1903               	btfsc	3,2	;have we reached the end yet?
   582     097A  3400               	retlw	0	;all done for this memory range, return
   583     097B  0604               	xorwf	4,w	;XOR again to restore value
   584     097C  2976               	goto	clrloop0	;do the next byte
   585                           
   586                           	psect	cstackBANK1
   587     00A0                     __pcstackBANK1:
   588     00A0                     BMP085_ReadPressure@UT:
   589                           
   590                           ; 4 bytes @ 0x0
   591     00A0                     	ds	4
   592     00A4                     BMP085_ReadPressure@UP:
   593                           
   594                           ; 4 bytes @ 0x4
   595     00A4                     	ds	4
   596     00A8                     BMP085_ReadPressure@B3:
   597                           
   598                           ; 4 bytes @ 0x8
   599     00A8                     	ds	4
   600     00AC                     BMP085_ReadPressure@B5:
   601                           
   602                           ; 4 bytes @ 0xC
   603     00AC                     	ds	4
   604     00B0                     BMP085_ReadPressure@B4:
   605                           
   606                           ; 4 bytes @ 0x10
   607     00B0                     	ds	4
   608     00B4                     BMP085_ReadPressure@X3:
   609                           
   610                           ; 4 bytes @ 0x14
   611     00B4                     	ds	4
   612     00B8                     _BMP085_ReadPressure$1045:
   613                           
   614                           ; 4 bytes @ 0x18
   615     00B8                     	ds	4
   616     00BC                     BMP085_ReadPressure@B7:
   617                           
   618                           ; 4 bytes @ 0x1C
   619     00BC                     	ds	4
   620     00C0                     BMP085_ReadPressure@X2:
   621                           
   622                           ; 4 bytes @ 0x20
   623     00C0                     	ds	4
   624     00C4                     BMP085_ReadPressure@X1:
   625                           
   626                           ; 4 bytes @ 0x24
   627     00C4                     	ds	4
   628     00C8                     BMP085_ReadPressure@p:
   629                           
   630                           ; 4 bytes @ 0x28
   631     00C8                     	ds	4
   632     00CC                     BMP085_ReadPressure@B6:
   633                           
   634                           ; 4 bytes @ 0x2C
   635     00CC                     	ds	4
   636                           
   637                           	psect	cstackCOMMON
   638     0070                     __pcstackCOMMON:
   639     0070                     ?_lcd_command:
   640     0070                     ?_putch:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_I2C_Master_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_I2C_Master_Wait:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_I2C_Master_Start:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_I2C_Master_RepeatedStart:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_I2C_Master_Stop:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?_I2C_ACK:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_I2C_NACK:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_I2C_Master_Write:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_I2C_Read_Byte:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?_lcd_initialize:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_lcd_data:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?_BMP085_Read8:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ?_BMP085_Init:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ?_main:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?_fputc:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ?___lmul:	
   689                           ; 2 bytes @ 0x0
   690                           
   691     0070                     ?___lldiv:	
   692                           ; 4 bytes @ 0x0
   693                           
   694     0070                     ?___aldiv:	
   695                           ; 4 bytes @ 0x0
   696                           
   697     0070                     ?___almod:	
   698                           ; 4 bytes @ 0x0
   699                           
   700     0070                     I2C_Master_Write@data:	
   701                           ; 4 bytes @ 0x0
   702                           
   703     0070                     putch@c:	
   704                           ; 1 bytes @ 0x0
   705                           
   706     0070                     fputc@c:	
   707                           ; 1 bytes @ 0x0
   708                           
   709     0070                     ___lmul@multiplier:	
   710                           ; 2 bytes @ 0x0
   711                           
   712     0070                     ___lldiv@divisor:	
   713                           ; 4 bytes @ 0x0
   714                           
   715     0070                     ___aldiv@divisor:	
   716                           ; 4 bytes @ 0x0
   717                           
   718     0070                     ___almod@divisor:	
   719                           ; 4 bytes @ 0x0
   720                           
   721     0070                     ??_lcd_command:	
   722                           ; 4 bytes @ 0x0
   723                           
   724     0070                     ??_putch:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     ??_I2C_Master_Init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730     0070                     ??_I2C_Master_Wait:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ??_I2C_Master_Start:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ??_I2C_Master_RepeatedStart:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ??_I2C_Master_Stop:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ??_I2C_ACK:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ??_I2C_NACK:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ??_I2C_Master_Write:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ??_I2C_Read_Byte:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ??_lcd_data:	
   755                           ; 1 bytes @ 0x0
   756                           
   757                           
   758                           ; 1 bytes @ 0x0
   759     0070                     	ds	1
   760     0071                     ?_BMP085_Write8:
   761     0071                     ?_BMP085_Read16:	
   762                           ; 1 bytes @ 0x1
   763                           
   764     0071                     BMP085_Read8@addr:	
   765                           ; 2 bytes @ 0x1
   766                           
   767     0071                     BMP085_Write8@data:	
   768                           ; 1 bytes @ 0x1
   769                           
   770     0071                     ??_BMP085_Read8:	
   771                           ; 1 bytes @ 0x1
   772                           
   773                           
   774                           ; 1 bytes @ 0x1
   775     0071                     	ds	1
   776     0072                     lcd_data@data:
   777     0072                     lcd_command@cmd:	
   778                           ; 1 bytes @ 0x2
   779                           
   780     0072                     BMP085_Read8@data:	
   781                           ; 1 bytes @ 0x2
   782                           
   783     0072                     BMP085_Write8@addr:	
   784                           ; 1 bytes @ 0x2
   785                           
   786     0072                     fputc@fp:	
   787                           ; 1 bytes @ 0x2
   788                           
   789     0072                     ??_BMP085_Write8:	
   790                           ; 2 bytes @ 0x2
   791                           
   792                           
   793                           ; 1 bytes @ 0x2
   794     0072                     	ds	1
   795     0073                     ?_lcd_string:
   796     0073                     lcd_string@str:	
   797                           ; 1 bytes @ 0x3
   798                           
   799     0073                     ??_lcd_initialize:	
   800                           ; 1 bytes @ 0x3
   801                           
   802     0073                     ??_BMP085_Read16:	
   803                           ; 1 bytes @ 0x3
   804                           
   805                           
   806                           ; 1 bytes @ 0x3
   807     0073                     	ds	1
   808     0074                     lcd_string@len:
   809     0074                     ___lmul@multiplicand:	
   810                           ; 1 bytes @ 0x4
   811                           
   812     0074                     ___lldiv@dividend:	
   813                           ; 4 bytes @ 0x4
   814                           
   815     0074                     ___aldiv@dividend:	
   816                           ; 4 bytes @ 0x4
   817                           
   818     0074                     ___almod@dividend:	
   819                           ; 4 bytes @ 0x4
   820                           
   821     0074                     ??_fputc:	
   822                           ; 4 bytes @ 0x4
   823                           
   824                           
   825                           ; 1 bytes @ 0x4
   826     0074                     	ds	1
   827     0075                     BMP085_Read16@addr:
   828     0075                     ??_lcd_string:	
   829                           ; 1 bytes @ 0x5
   830                           
   831                           
   832                           ; 1 bytes @ 0x5
   833     0075                     	ds	1
   834     0076                     lcd_string@i:
   835     0076                     BMP085_Read16@data:	
   836                           ; 1 bytes @ 0x6
   837                           
   838                           
   839                           ; 2 bytes @ 0x6
   840     0076                     	ds	2
   841     0078                     ?_BMP085_ReadRawTemperature:
   842     0078                     ?_BMP085_ReadRawPressure:	
   843                           ; 2 bytes @ 0x8
   844                           
   845     0078                     BMP085_Init@mode:	
   846                           ; 4 bytes @ 0x8
   847                           
   848     0078                     ??_BMP085_Init:	
   849                           ; 1 bytes @ 0x8
   850                           
   851     0078                     ??___lmul:	
   852                           ; 1 bytes @ 0x8
   853                           
   854     0078                     ??___lldiv:	
   855                           ; 1 bytes @ 0x8
   856                           
   857     0078                     ??___aldiv:	
   858                           ; 1 bytes @ 0x8
   859                           
   860     0078                     ??___almod:	
   861                           ; 1 bytes @ 0x8
   862                           
   863                           
   864                           ; 1 bytes @ 0x8
   865     0078                     	ds	1
   866     0079                     ___almod@counter:
   867     0079                     ___lmul@product:	
   868                           ; 1 bytes @ 0x9
   869                           
   870     0079                     ___lldiv@quotient:	
   871                           ; 4 bytes @ 0x9
   872                           
   873                           
   874                           ; 4 bytes @ 0x9
   875     0079                     	ds	1
   876     007A                     ___almod@sign:
   877     007A                     ??_BMP085_ReadRawTemperature:	
   878                           ; 1 bytes @ 0xA
   879                           
   880                           
   881                           ; 1 bytes @ 0xA
   882     007A                     	ds	1
   883     007B                     ?_abs:
   884     007B                     abs@a:	
   885                           ; 2 bytes @ 0xB
   886                           
   887                           
   888                           ; 2 bytes @ 0xB
   889     007B                     	ds	2
   890     007D                     ___lldiv@counter:
   891     007D                     vfprintf@cfmt:	
   892                           ; 1 bytes @ 0xD
   893                           
   894     007D                     ??_vfprintf:	
   895                           ; 1 bytes @ 0xD
   896                           
   897                           
   898                           ; 1 bytes @ 0xD
   899     007D                     	ds	1
   900                           
   901                           	psect	cstackBANK0
   902     0020                     __pcstackBANK0:
   903     0020                     ___aldiv@counter:
   904     0020                     ??_abs:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0020                     ??_BMP085_ReadRawPressure:	
   908                           ; 1 bytes @ 0x0
   909                           
   910                           
   911                           ; 1 bytes @ 0x0
   912     0020                     	ds	1
   913     0021                     ___aldiv@sign:
   914                           
   915                           ; 1 bytes @ 0x1
   916     0021                     	ds	1
   917     0022                     ___aldiv@quotient:
   918                           
   919                           ; 4 bytes @ 0x2
   920     0022                     	ds	2
   921     0024                     BMP085_ReadRawPressure@raw:
   922                           
   923                           ; 4 bytes @ 0x4
   924     0024                     	ds	2
   925     0026                     ?_vfpfcnvrt:
   926     0026                     ?_BMP085_ComputeB5:	
   927                           ; 1 bytes @ 0x6
   928                           
   929     0026                     vfpfcnvrt@fp:	
   930                           ; 4 bytes @ 0x6
   931                           
   932     0026                     BMP085_ComputeB5@UT:	
   933                           ; 2 bytes @ 0x6
   934                           
   935                           
   936                           ; 4 bytes @ 0x6
   937     0026                     	ds	2
   938     0028                     vfpfcnvrt@fmt:
   939                           
   940                           ; 1 bytes @ 0x8
   941     0028                     	ds	1
   942     0029                     vfpfcnvrt@ap:
   943                           
   944                           ; 1 bytes @ 0x9
   945     0029                     	ds	1
   946     002A                     ??_BMP085_ComputeB5:
   947     002A                     ??_vfpfcnvrt:	
   948                           ; 1 bytes @ 0xA
   949                           
   950                           
   951                           ; 1 bytes @ 0xA
   952     002A                     	ds	2
   953     002C                     vfpfcnvrt@done:
   954                           
   955                           ; 1 bytes @ 0xC
   956     002C                     	ds	1
   957     002D                     vfpfcnvrt@convarg:
   958                           
   959                           ; 4 bytes @ 0xD
   960     002D                     	ds	4
   961     0031                     vfpfcnvrt@cp:
   962                           
   963                           ; 1 bytes @ 0x11
   964     0031                     	ds	1
   965     0032                     vfpfcnvrt@c:
   966                           
   967                           ; 1 bytes @ 0x12
   968     0032                     	ds	1
   969     0033                     ?_vfprintf:
   970     0033                     vfprintf@fp:	
   971                           ; 2 bytes @ 0x13
   972                           
   973                           
   974                           ; 2 bytes @ 0x13
   975     0033                     	ds	2
   976     0035                     vfprintf@fmt:
   977                           
   978                           ; 1 bytes @ 0x15
   979     0035                     	ds	1
   980     0036                     vfprintf@ap:
   981                           
   982                           ; 1 bytes @ 0x16
   983     0036                     	ds	1
   984     0037                     ?_sprintf:
   985     0037                     sprintf@s:	
   986                           ; 2 bytes @ 0x17
   987                           
   988     0037                     BMP085_ComputeB5@X2:	
   989                           ; 1 bytes @ 0x17
   990                           
   991                           
   992                           ; 4 bytes @ 0x17
   993     0037                     	ds	1
   994     0038                     sprintf@fmt:
   995                           
   996                           ; 1 bytes @ 0x18
   997     0038                     	ds	3
   998     003B                     BMP085_ComputeB5@X1:
   999                           
  1000                           ; 4 bytes @ 0x1B
  1001     003B                     	ds	2
  1002     003D                     ??_sprintf:
  1003                           
  1004                           ; 1 bytes @ 0x1D
  1005     003D                     	ds	1
  1006     003E                     sprintf@ap:
  1007                           
  1008                           ; 1 bytes @ 0x1E
  1009     003E                     	ds	1
  1010     003F                     ?_BMP085_ReadPressure:
  1011     003F                     sprintf@f:	
  1012                           ; 4 bytes @ 0x1F
  1013                           
  1014                           
  1015                           ; 11 bytes @ 0x1F
  1016     003F                     	ds	4
  1017     0043                     ??_BMP085_ReadPressure:
  1018                           
  1019                           ; 1 bytes @ 0x23
  1020     0043                     	ds	14
  1021     0051                     ??_main:
  1022                           
  1023                           ; 1 bytes @ 0x31
  1024     0051                     	ds	3
  1025     0054                     main@buffer:
  1026                           
  1027                           ; 16 bytes @ 0x34
  1028     0054                     	ds	16
  1029     0064                     main@pressure:
  1030                           
  1031                           ; 4 bytes @ 0x44
  1032     0064                     	ds	4
  1033     0068                     _main$1046:
  1034                           
  1035                           ; 4 bytes @ 0x48
  1036     0068                     	ds	4
  1037                           
  1038                           	psect	maintext
  1039     0C4F                     __pmaintext:	
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 7 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  buffer         16   52[BANK0 ] unsigned char [16]
  1050 ;;  pressure        4   68[BANK0 ] long 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : B00/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0      24       0       0       0
  1062 ;;      Temps:          0       3       0       0       0
  1063 ;;      Totals:         0      27       0       0       0
  1064 ;;Total ram usage:       27 bytes
  1065 ;; Hardware stack levels required when called: 5
  1066 ;; This function calls:
  1067 ;;		_BMP085_Init
  1068 ;;		_BMP085_ReadPressure
  1069 ;;		___aldiv
  1070 ;;		_lcd_command
  1071 ;;		_lcd_initialize
  1072 ;;		_lcd_string
  1073 ;;		_sprintf
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079     0C4F                     _main:	
  1080                           ;psect for function _main
  1081                           
  1082     0C4F                     l1818:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1085                           
  1086                           
  1087                           ;main.c: 9:     lcd_initialize();
  1088     0C4F  120A  158A  232A  120A  158A  	fcall	_lcd_initialize
  1089     0C54                     l1820:
  1090                           
  1091                           ;main.c: 10:     BMP085_Init(3);
  1092     0C54  3003               	movlw	3
  1093     0C55  120A  158A  24BA  120A  158A  	fcall	_BMP085_Init
  1094     0C5A                     l1822:
  1095                           
  1096                           ;main.c: 15:         char buffer[16];;main.c: 22:         int32_t pressure = (BMP085_Rea
      +                          dPressure()/100);
  1097     0C5A  120A  118A  21D3  120A  158A  	fcall	_BMP085_ReadPressure
  1098     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0C61  0842               	movf	?_BMP085_ReadPressure+3,w
  1101     0C62  00EB               	movwf	_main$1046+3
  1102     0C63  0841               	movf	?_BMP085_ReadPressure+2,w
  1103     0C64  00EA               	movwf	_main$1046+2
  1104     0C65  0840               	movf	?_BMP085_ReadPressure+1,w
  1105     0C66  00E9               	movwf	_main$1046+1
  1106     0C67  083F               	movf	?_BMP085_ReadPressure,w
  1107     0C68  00E8               	movwf	_main$1046
  1108                           
  1109                           ;main.c: 15:         char buffer[16];;main.c: 22:         int32_t pressure = (BMP085_Rea
      +                          dPressure()/100);
  1110     0C69  3000               	movlw	0
  1111     0C6A  00F3               	movwf	___aldiv@divisor+3
  1112     0C6B  3000               	movlw	0
  1113     0C6C  00F2               	movwf	___aldiv@divisor+2
  1114     0C6D  3000               	movlw	0
  1115     0C6E  00F1               	movwf	___aldiv@divisor+1
  1116     0C6F  3064               	movlw	100
  1117     0C70  00F0               	movwf	___aldiv@divisor
  1118     0C71  086B               	movf	_main$1046+3,w
  1119     0C72  00F7               	movwf	___aldiv@dividend+3
  1120     0C73  086A               	movf	_main$1046+2,w
  1121     0C74  00F6               	movwf	___aldiv@dividend+2
  1122     0C75  0869               	movf	_main$1046+1,w
  1123     0C76  00F5               	movwf	___aldiv@dividend+1
  1124     0C77  0868               	movf	_main$1046,w
  1125     0C78  00F4               	movwf	___aldiv@dividend
  1126     0C79  120A  158A  2551  120A  158A  	fcall	___aldiv
  1127     0C7E  0873               	movf	?___aldiv+3,w
  1128     0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  1129     0C80  1303               	bcf	3,6	;RP1=0, select bank0
  1130     0C81  00E7               	movwf	main@pressure+3
  1131     0C82  0872               	movf	?___aldiv+2,w
  1132     0C83  00E6               	movwf	main@pressure+2
  1133     0C84  0871               	movf	?___aldiv+1,w
  1134     0C85  00E5               	movwf	main@pressure+1
  1135     0C86  0870               	movf	?___aldiv,w
  1136     0C87  00E4               	movwf	main@pressure
  1137     0C88                     l1824:
  1138                           
  1139                           ;main.c: 23:         sprintf(buffer, "Pres = %ldhPa", pressure);
  1140     0C88  3054               	movlw	(low (main@buffer| 0))& (0+255)
  1141     0C89  00B7               	movwf	sprintf@s
  1142     0C8A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1143     0C8B  00B8               	movwf	sprintf@fmt
  1144     0C8C  0867               	movf	main@pressure+3,w
  1145     0C8D  00BC               	movwf	?_sprintf+5
  1146     0C8E  0866               	movf	main@pressure+2,w
  1147     0C8F  00BB               	movwf	?_sprintf+4
  1148     0C90  0865               	movf	main@pressure+1,w
  1149     0C91  00BA               	movwf	?_sprintf+3
  1150     0C92  0864               	movf	main@pressure,w
  1151     0C93  00B9               	movwf	?_sprintf+2
  1152     0C94  120A  158A  2255  120A  158A  	fcall	_sprintf
  1153     0C99                     l1826:
  1154                           
  1155                           ;main.c: 24:         lcd_command(0xC0);
  1156     0C99  30C0               	movlw	192
  1157     0C9A  120A  158A  22CC  120A  158A  	fcall	_lcd_command
  1158     0C9F                     l1828:
  1159                           
  1160                           ;main.c: 25:         lcd_string((const unsigned char *)buffer, sizeof(buffer));
  1161     0C9F  3054               	movlw	(low (main@buffer| 0))& (0+255)
  1162     0CA0  00F3               	movwf	lcd_string@str
  1163     0CA1  3010               	movlw	16
  1164     0CA2  00F4               	movwf	lcd_string@len
  1165     0CA3  120A  158A  2204  120A  158A  	fcall	_lcd_string
  1166     0CA8                     l1830:
  1167                           
  1168                           ;main.c: 26:         _delay((unsigned long)((500)*(16000000/4000.0)));
  1169     0CA8  300B               	movlw	11
  1170     0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  1171     0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  1172     0CAB  00D3               	movwf	??_main+2
  1173     0CAC  3026               	movlw	38
  1174     0CAD  00D2               	movwf	??_main+1
  1175     0CAE  305D               	movlw	93
  1176     0CAF  00D1               	movwf	??_main
  1177     0CB0                     u1857:
  1178     0CB0  0BD1               	decfsz	??_main,f
  1179     0CB1  2CB0               	goto	u1857
  1180     0CB2  0BD2               	decfsz	??_main+1,f
  1181     0CB3  2CB0               	goto	u1857
  1182     0CB4  0BD3               	decfsz	??_main+2,f
  1183     0CB5  2CB0               	goto	u1857
  1184     0CB6  2C5A               	goto	l1822
  1185     0CB7  120A  118A  2800   	ljmp	start
  1186     0CBA                     __end_of_main:
  1187                           
  1188                           	psect	text1
  1189     0A55                     __ptext1:	
  1190 ;; *************** function _sprintf *****************
  1191 ;; Defined at:
  1192 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  s               1   23[BANK0 ] PTR unsigned char 
  1195 ;;		 -> main@buffer(16), 
  1196 ;;  fmt             1   24[BANK0 ] PTR const unsigned char 
  1197 ;;		 -> STR_1(14), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  f              11   31[BANK0 ] struct _IO_FILE
  1200 ;;  ret             2    0        int 
  1201 ;;  ap              1   30[BANK0 ] PTR void [1]
  1202 ;;		 -> ?_sprintf(2), 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2   23[BANK0 ] int 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       6       0       0       0
  1213 ;;      Locals:         0      12       0       0       0
  1214 ;;      Temps:          0       1       0       0       0
  1215 ;;      Totals:         0      19       0       0       0
  1216 ;;Total ram usage:       19 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 4
  1219 ;; This function calls:
  1220 ;;		_vfprintf
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     0A55                     _sprintf:	
  1227                           ;psect for function _sprintf
  1228                           
  1229     0A55                     l1790:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1232                           
  1233     0A55  3039               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1234     0A56  1283               	bcf	3,5	;RP0=0, select bank0
  1235     0A57  1303               	bcf	3,6	;RP1=0, select bank0
  1236     0A58  00BE               	movwf	sprintf@ap
  1237     0A59                     l1792:
  1238     0A59  0837               	movf	sprintf@s,w
  1239     0A5A  00BF               	movwf	sprintf@f
  1240     0A5B  3000               	movlw	0
  1241     0A5C  00C0               	movwf	sprintf@f+1
  1242     0A5D                     l1794:
  1243     0A5D  01C1               	clrf	sprintf@f+2
  1244     0A5E  01C2               	clrf	sprintf@f+3
  1245     0A5F                     l1796:
  1246     0A5F  01C8               	clrf	sprintf@f+9
  1247     0A60  01C9               	clrf	sprintf@f+10
  1248     0A61                     l1798:
  1249     0A61  303F               	movlw	low sprintf@f
  1250     0A62  00B3               	movwf	vfprintf@fp
  1251     0A63  3000               	movlw	high sprintf@f
  1252     0A64  00B4               	movwf	vfprintf@fp+1
  1253     0A65  0838               	movf	sprintf@fmt,w
  1254     0A66  00B5               	movwf	vfprintf@fmt
  1255     0A67  303E               	movlw	(low (sprintf@ap| 0))& (0+255)
  1256     0A68  00B6               	movwf	vfprintf@ap
  1257     0A69  120A  158A  2278  120A  158A  	fcall	_vfprintf
  1258     0A6E                     l1800:
  1259     0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  1260     0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  1261     0A70  0841               	movf	sprintf@f+2,w
  1262     0A71  0737               	addwf	sprintf@s,w
  1263     0A72  00BD               	movwf	??_sprintf
  1264     0A73  083D               	movf	??_sprintf,w
  1265     0A74  0084               	movwf	4
  1266     0A75  1383               	bcf	3,7	;select IRP bank0
  1267     0A76  0180               	clrf	0
  1268     0A77                     l766:
  1269     0A77  0008               	return
  1270     0A78                     __end_of_sprintf:
  1271                           
  1272                           	psect	text2
  1273     0A78                     __ptext2:	
  1274 ;; *************** function _vfprintf *****************
  1275 ;; Defined at:
  1276 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  fp              2   19[BANK0 ] PTR struct _IO_FILE
  1279 ;;		 -> sprintf@f(11), 
  1280 ;;  fmt             1   21[BANK0 ] PTR const unsigned char 
  1281 ;;		 -> STR_1(14), 
  1282 ;;  ap              1   22[BANK0 ] PTR PTR void 
  1283 ;;		 -> sprintf@ap(1), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1286 ;;		 -> STR_1(14), 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2   19[BANK0 ] int 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       4       0       0       0
  1297 ;;      Locals:         1       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         1       4       0       0       0
  1300 ;;Total ram usage:        5 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 3
  1303 ;; This function calls:
  1304 ;;		_vfpfcnvrt
  1305 ;; This function is called by:
  1306 ;;		_sprintf
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310     0A78                     _vfprintf:	
  1311                           ;psect for function _vfprintf
  1312                           
  1313     0A78                     l1696:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1316                           
  1317                           
  1318                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1319     0A78  1283               	bcf	3,5	;RP0=0, select bank0
  1320     0A79  1303               	bcf	3,6	;RP1=0, select bank0
  1321     0A7A  0835               	movf	vfprintf@fmt,w
  1322     0A7B  00FD               	movwf	vfprintf@cfmt
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1325     0A7C  2A8C               	goto	l1700
  1326     0A7D                     l1698:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1329     0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  1330     0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  1331     0A7F  0833               	movf	vfprintf@fp,w
  1332     0A80  00A6               	movwf	vfpfcnvrt@fp
  1333     0A81  0834               	movf	vfprintf@fp+1,w
  1334     0A82  00A7               	movwf	vfpfcnvrt@fp+1
  1335     0A83  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1336     0A84  00A8               	movwf	vfpfcnvrt@fmt
  1337     0A85  0836               	movf	vfprintf@ap,w
  1338     0A86  00A9               	movwf	vfpfcnvrt@ap
  1339     0A87  120A  118A  208B  120A  158A  	fcall	_vfpfcnvrt
  1340     0A8C                     l1700:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1343     0A8C  087D               	movf	vfprintf@cfmt,w
  1344     0A8D  0084               	movwf	4
  1345     0A8E  120A  158A  2000  120A  158A  	fcall	stringdir
  1346     0A93  3A00               	xorlw	0
  1347     0A94  1D03               	skipz
  1348     0A95  2A97               	goto	u1561
  1349     0A96  2A98               	goto	u1560
  1350     0A97                     u1561:
  1351     0A97  2A7D               	goto	l1698
  1352     0A98                     u1560:
  1353     0A98                     l1702:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1356     0A98  1283               	bcf	3,5	;RP0=0, select bank0
  1357     0A99  1303               	bcf	3,6	;RP1=0, select bank0
  1358     0A9A  01B3               	clrf	?_vfprintf
  1359     0A9B  01B4               	clrf	?_vfprintf+1
  1360     0A9C                     l820:
  1361     0A9C  0008               	return
  1362     0A9D                     __end_of_vfprintf:
  1363                           
  1364                           	psect	text3
  1365     008B                     __ptext3:	
  1366 ;; *************** function _vfpfcnvrt *****************
  1367 ;; Defined at:
  1368 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  1371 ;;		 -> sprintf@f(11), 
  1372 ;;  fmt             1    8[BANK0 ] PTR PTR unsigned char 
  1373 ;;		 -> vfprintf@cfmt(1), 
  1374 ;;  ap              1    9[BANK0 ] PTR PTR void 
  1375 ;;		 -> sprintf@ap(1), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  convarg         4   13[BANK0 ] struct .
  1378 ;;  c               1   18[BANK0 ] unsigned char 
  1379 ;;  cp              1   17[BANK0 ] PTR unsigned char 
  1380 ;;		 -> STR_1(14), 
  1381 ;;  done            1   12[BANK0 ] _Bool 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       4       0       0       0
  1392 ;;      Locals:         0       7       0       0       0
  1393 ;;      Temps:          0       2       0       0       0
  1394 ;;      Totals:         0      13       0       0       0
  1395 ;;Total ram usage:       13 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 2
  1398 ;; This function calls:
  1399 ;;		___aldiv
  1400 ;;		___almod
  1401 ;;		_abs
  1402 ;;		_fputc
  1403 ;; This function is called by:
  1404 ;;		_vfprintf
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408     008B                     _vfpfcnvrt:	
  1409                           ;psect for function _vfpfcnvrt
  1410                           
  1411     008B                     l1516:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1414                           
  1415                           
  1416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1417     008B  1283               	bcf	3,5	;RP0=0, select bank0
  1418     008C  1303               	bcf	3,6	;RP1=0, select bank0
  1419     008D  0828               	movf	vfpfcnvrt@fmt,w
  1420     008E  0084               	movwf	4
  1421     008F  0800               	movf	0,w
  1422     0090  0084               	movwf	4
  1423     0091  120A  158A  2000  120A  118A  	fcall	stringdir
  1424     0096  3A25               	xorlw	37
  1425     0097  1D03               	skipz
  1426     0098  289A               	goto	u1271
  1427     0099  289B               	goto	u1270
  1428     009A                     u1271:
  1429     009A  29B9               	goto	l1578
  1430     009B                     u1270:
  1431     009B                     l1518:
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1434     009B  0828               	movf	vfpfcnvrt@fmt,w
  1435     009C  0084               	movwf	4
  1436     009D  3001               	movlw	1
  1437     009E  0780               	addwf	0,f
  1438     009F                     l1520:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1441     009F  1683               	bsf	3,5	;RP0=1, select bank3
  1442     00A0  1703               	bsf	3,6	;RP1=1, select bank3
  1443     00A1  01B0               	clrf	_width^(0+384)
  1444     00A2  01B1               	clrf	(_width+1)^(0+384)
  1445     00A3  3000               	movlw	0
  1446     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1447     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1448     00A6  00EE               	movwf	_flags
  1449     00A7                     l1522:
  1450                           
  1451                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1452     00A7  30FF               	movlw	255
  1453     00A8  1683               	bsf	3,5	;RP0=1, select bank3
  1454     00A9  1703               	bsf	3,6	;RP1=1, select bank3
  1455     00AA  00B2               	movwf	_prec^(0+384)
  1456     00AB  30FF               	movlw	255
  1457     00AC  00B3               	movwf	(_prec^(0+384)+1)
  1458     00AD                     l1524:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1461     00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1462     00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1463     00AF  0828               	movf	vfpfcnvrt@fmt,w
  1464     00B0  0084               	movwf	4
  1465     00B1  0800               	movf	0,w
  1466     00B2  00B1               	movwf	vfpfcnvrt@cp
  1467     00B3                     l1526:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  1470     00B3  0831               	movf	vfpfcnvrt@cp,w
  1471     00B4  0084               	movwf	4
  1472     00B5  120A  158A  2000  120A  118A  	fcall	stringdir
  1473     00BA  00B2               	movwf	vfpfcnvrt@c
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  1476     00BB  28C4               	goto	l1534
  1477     00BC                     l1528:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  1480     00BC  3001               	movlw	1
  1481     00BD  07B1               	addwf	vfpfcnvrt@cp,f
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1316:     break;
  1484     00BE  28CF               	goto	l1536
  1485     00BF                     l797:	
  1486                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1339:    case 'd'
      +                          :
  1487                           
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  1490     00BF  3069               	movlw	105
  1491     00C0  00B2               	movwf	vfpfcnvrt@c
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
  1494     00C1  28CF               	goto	l1536
  1495     00C2                     l1530:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  1498     00C2  01B2               	clrf	vfpfcnvrt@c
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
  1501     00C3  28CF               	goto	l1536
  1502     00C4                     l1534:
  1503     00C4  0832               	movf	vfpfcnvrt@c,w
  1504                           
  1505                           ; Switch size 1, requested type "simple"
  1506                           ; Number of cases is 3, Range of values is 100 to 108
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte           10     6 (average)
  1510                           ; direct_byte           38    11 (fixed)
  1511                           ; jumptable            263     9 (fixed)
  1512                           ;	Chosen strategy is simple_byte
  1513     00C5  3A64               	xorlw	100	; case 100
  1514     00C6  1903               	skipnz
  1515     00C7  28BF               	goto	l797
  1516     00C8  3A0D               	xorlw	13	; case 105
  1517     00C9  1903               	skipnz
  1518     00CA  28BF               	goto	l797
  1519     00CB  3A05               	xorlw	5	; case 108
  1520     00CC  1903               	skipnz
  1521     00CD  28BC               	goto	l1528
  1522     00CE  28C2               	goto	l1530
  1523     00CF                     l1536:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1526     00CF  0831               	movf	vfpfcnvrt@cp,w
  1527     00D0  0084               	movwf	4
  1528     00D1  120A  158A  2000  120A  118A  	fcall	stringdir
  1529     00D6  3A64               	xorlw	100
  1530     00D7  1903               	skipnz
  1531     00D8  28DA               	goto	u1281
  1532     00D9  28DB               	goto	u1280
  1533     00DA                     u1281:
  1534     00DA  2915               	goto	l1546
  1535     00DB                     u1280:
  1536     00DB                     l1538:
  1537     00DB  0831               	movf	vfpfcnvrt@cp,w
  1538     00DC  0084               	movwf	4
  1539     00DD  120A  158A  2000  120A  118A  	fcall	stringdir
  1540     00E2  3A69               	xorlw	105
  1541     00E3  1D03               	skipz
  1542     00E4  28E6               	goto	u1291
  1543     00E5  28E7               	goto	u1290
  1544     00E6                     u1291:
  1545     00E6  29B2               	goto	l1574
  1546     00E7                     u1290:
  1547     00E7  2915               	goto	l1546
  1548     00E8                     l1540:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1551     00E8  0829               	movf	vfpfcnvrt@ap,w
  1552     00E9  0084               	movwf	4
  1553     00EA  1383               	bcf	3,7	;select IRP bank0
  1554     00EB  0800               	movf	0,w
  1555     00EC  00FF               	movwf	btemp+1
  1556     00ED  3002               	movlw	2
  1557     00EE  0780               	addwf	0,f
  1558     00EF  087F               	movf	btemp+1,w
  1559     00F0  0084               	movwf	4
  1560     00F1  0800               	movf	0,w
  1561     00F2  00AA               	movwf	??_vfpfcnvrt
  1562     00F3  0A84               	incf	4,f
  1563     00F4  0800               	movf	0,w
  1564     00F5  00AB               	movwf	??_vfpfcnvrt+1
  1565     00F6  082A               	movf	??_vfpfcnvrt,w
  1566     00F7  00AD               	movwf	vfpfcnvrt@convarg
  1567     00F8  082B               	movf	??_vfpfcnvrt+1,w
  1568     00F9  00AE               	movwf	vfpfcnvrt@convarg+1
  1569     00FA  3000               	movlw	0
  1570     00FB  1BAE               	btfsc	vfpfcnvrt@convarg+1,7
  1571     00FC  30FF               	movlw	255
  1572     00FD  00AF               	movwf	vfpfcnvrt@convarg+2
  1573     00FE  00B0               	movwf	vfpfcnvrt@convarg+3
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
  1576     00FF  291D               	goto	l1548
  1577     0100                     l1542:
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  1580     0100  0829               	movf	vfpfcnvrt@ap,w
  1581     0101  0084               	movwf	4
  1582     0102  1383               	bcf	3,7	;select IRP bank0
  1583     0103  0800               	movf	0,w
  1584     0104  00FF               	movwf	btemp+1
  1585     0105  3004               	movlw	4
  1586     0106  0780               	addwf	0,f
  1587     0107  087F               	movf	btemp+1,w
  1588     0108  0084               	movwf	4
  1589     0109  0800               	movf	0,w
  1590     010A  00AD               	movwf	vfpfcnvrt@convarg
  1591     010B  0A84               	incf	4,f
  1592     010C  0800               	movf	0,w
  1593     010D  00AE               	movwf	vfpfcnvrt@convarg+1
  1594     010E  0A84               	incf	4,f
  1595     010F  0800               	movf	0,w
  1596     0110  00AF               	movwf	vfpfcnvrt@convarg+2
  1597     0111  0A84               	incf	4,f
  1598     0112  0800               	movf	0,w
  1599     0113  00B0               	movwf	vfpfcnvrt@convarg+3
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1380:      break;
  1602     0114  291D               	goto	l1548
  1603     0115                     l1546:
  1604     0115  0832               	movf	vfpfcnvrt@c,w
  1605                           
  1606                           ; Switch size 1, requested type "simple"
  1607                           ; Number of cases is 2, Range of values is 105 to 108
  1608                           ; switch strategies available:
  1609                           ; Name         Instructions Cycles
  1610                           ; simple_byte            7     4 (average)
  1611                           ; direct_byte           23    11 (fixed)
  1612                           ; jumptable            263     9 (fixed)
  1613                           ;	Chosen strategy is simple_byte
  1614     0116  3A69               	xorlw	105	; case 105
  1615     0117  1903               	skipnz
  1616     0118  28E8               	goto	l1540
  1617     0119  3A05               	xorlw	5	; case 108
  1618     011A  1903               	skipnz
  1619     011B  2900               	goto	l1542
  1620     011C  291D               	goto	l1548
  1621     011D                     l1548:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1624     011D  0828               	movf	vfpfcnvrt@fmt,w
  1625     011E  0084               	movwf	4
  1626     011F  0831               	movf	vfpfcnvrt@cp,w
  1627     0120  3E01               	addlw	1
  1628     0121  0080               	movwf	0
  1629     0122                     l1550:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1632     0122  3020               	movlw	32
  1633     0123  00B2               	movwf	vfpfcnvrt@c
  1634     0124                     l1552:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1637     0124  1BB0               	btfsc	vfpfcnvrt@convarg+3,7
  1638     0125  2927               	goto	u1301
  1639     0126  2929               	goto	u1300
  1640     0127                     u1301:
  1641     0127  3001               	movlw	1
  1642     0128  292A               	goto	u1310
  1643     0129                     u1300:
  1644     0129  3000               	movlw	0
  1645     012A                     u1310:
  1646     012A  00AC               	movwf	vfpfcnvrt@done
  1647     012B                     l1554:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1650     012B  3001               	movlw	1
  1651     012C  02B2               	subwf	vfpfcnvrt@c,f
  1652     012D  0832               	movf	vfpfcnvrt@c,w
  1653     012E  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  1654     012F  0084               	movwf	4
  1655     0130  3000               	movlw	0
  1656     0131  00F3               	movwf	___almod@divisor+3
  1657     0132  3000               	movlw	0
  1658     0133  00F2               	movwf	___almod@divisor+2
  1659     0134  3000               	movlw	0
  1660     0135  00F1               	movwf	___almod@divisor+1
  1661     0136  300A               	movlw	10
  1662     0137  00F0               	movwf	___almod@divisor
  1663     0138  0830               	movf	vfpfcnvrt@convarg+3,w
  1664     0139  00F7               	movwf	___almod@dividend+3
  1665     013A  082F               	movf	vfpfcnvrt@convarg+2,w
  1666     013B  00F6               	movwf	___almod@dividend+2
  1667     013C  082E               	movf	vfpfcnvrt@convarg+1,w
  1668     013D  00F5               	movwf	___almod@dividend+1
  1669     013E  082D               	movf	vfpfcnvrt@convarg,w
  1670     013F  00F4               	movwf	___almod@dividend
  1671     0140  120A  118A  2008  120A  118A  	fcall	___almod
  1672     0145  0871               	movf	?___almod+1,w
  1673     0146  00FC               	movwf	abs@a+1
  1674     0147  0870               	movf	?___almod,w
  1675     0148  00FB               	movwf	abs@a
  1676     0149  120A  158A  21DA  120A  118A  	fcall	_abs
  1677     014E  087B               	movf	?_abs,w
  1678     014F  3E30               	addlw	48
  1679     0150  1783               	bsf	3,7	;select IRP bank3
  1680     0151  0080               	movwf	0
  1681     0152                     l1556:
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1684     0152  3000               	movlw	0
  1685     0153  00F3               	movwf	___aldiv@divisor+3
  1686     0154  3000               	movlw	0
  1687     0155  00F2               	movwf	___aldiv@divisor+2
  1688     0156  3000               	movlw	0
  1689     0157  00F1               	movwf	___aldiv@divisor+1
  1690     0158  300A               	movlw	10
  1691     0159  00F0               	movwf	___aldiv@divisor
  1692     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1693     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1694     015C  0830               	movf	vfpfcnvrt@convarg+3,w
  1695     015D  00F7               	movwf	___aldiv@dividend+3
  1696     015E  082F               	movf	vfpfcnvrt@convarg+2,w
  1697     015F  00F6               	movwf	___aldiv@dividend+2
  1698     0160  082E               	movf	vfpfcnvrt@convarg+1,w
  1699     0161  00F5               	movwf	___aldiv@dividend+1
  1700     0162  082D               	movf	vfpfcnvrt@convarg,w
  1701     0163  00F4               	movwf	___aldiv@dividend
  1702     0164  120A  158A  2551  120A  118A  	fcall	___aldiv
  1703     0169  0873               	movf	?___aldiv+3,w
  1704     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1705     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1706     016C  00B0               	movwf	vfpfcnvrt@convarg+3
  1707     016D  0872               	movf	?___aldiv+2,w
  1708     016E  00AF               	movwf	vfpfcnvrt@convarg+2
  1709     016F  0871               	movf	?___aldiv+1,w
  1710     0170  00AE               	movwf	vfpfcnvrt@convarg+1
  1711     0171  0870               	movf	?___aldiv,w
  1712     0172  00AD               	movwf	vfpfcnvrt@convarg
  1713     0173                     l1558:
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1716     0173  0830               	movf	vfpfcnvrt@convarg+3,w
  1717     0174  042F               	iorwf	vfpfcnvrt@convarg+2,w
  1718     0175  042E               	iorwf	vfpfcnvrt@convarg+1,w
  1719     0176  042D               	iorwf	vfpfcnvrt@convarg,w
  1720     0177  1903               	skipnz
  1721     0178  297A               	goto	u1321
  1722     0179  297B               	goto	u1320
  1723     017A                     u1321:
  1724     017A  2980               	goto	l1562
  1725     017B                     u1320:
  1726     017B                     l1560:
  1727     017B  0832               	movf	vfpfcnvrt@c,w
  1728     017C  1D03               	btfss	3,2
  1729     017D  297F               	goto	u1331
  1730     017E  2980               	goto	u1330
  1731     017F                     u1331:
  1732     017F  292B               	goto	l1554
  1733     0180                     u1330:
  1734     0180                     l1562:
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1737     0180  0832               	movf	vfpfcnvrt@c,w
  1738     0181  1903               	btfsc	3,2
  1739     0182  2984               	goto	u1341
  1740     0183  2985               	goto	u1340
  1741     0184                     u1341:
  1742     0184  29AB               	goto	l1572
  1743     0185                     u1340:
  1744     0185                     l1564:
  1745     0185  082C               	movf	vfpfcnvrt@done,w
  1746     0186  1903               	btfsc	3,2
  1747     0187  2989               	goto	u1351
  1748     0188  298A               	goto	u1350
  1749     0189                     u1351:
  1750     0189  29AB               	goto	l1572
  1751     018A                     u1350:
  1752     018A                     l1566:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1755     018A  3001               	movlw	1
  1756     018B  02B2               	subwf	vfpfcnvrt@c,f
  1757     018C  0832               	movf	vfpfcnvrt@c,w
  1758     018D  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  1759     018E  0084               	movwf	4
  1760     018F  302D               	movlw	45
  1761     0190  1783               	bsf	3,7	;select IRP bank3
  1762     0191  0080               	movwf	0
  1763     0192  29AB               	goto	l1572
  1764     0193                     l1568:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1767     0193  0832               	movf	vfpfcnvrt@c,w
  1768     0194  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  1769     0195  0084               	movwf	4
  1770     0196  1783               	bsf	3,7	;select IRP bank3
  1771     0197  0800               	movf	0,w
  1772     0198  00AA               	movwf	??_vfpfcnvrt
  1773     0199  01AB               	clrf	??_vfpfcnvrt+1
  1774     019A  082A               	movf	??_vfpfcnvrt,w
  1775     019B  00F0               	movwf	fputc@c
  1776     019C  082B               	movf	??_vfpfcnvrt+1,w
  1777     019D  00F1               	movwf	fputc@c+1
  1778     019E  0826               	movf	vfpfcnvrt@fp,w
  1779     019F  00F2               	movwf	fputc@fp
  1780     01A0  0827               	movf	vfpfcnvrt@fp+1,w
  1781     01A1  00F3               	movwf	fputc@fp+1
  1782     01A2  120A  158A  2684  120A  118A  	fcall	_fputc
  1783     01A7                     l1570:
  1784     01A7  3001               	movlw	1
  1785     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1786     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1787     01AA  07B2               	addwf	vfpfcnvrt@c,f
  1788     01AB                     l1572:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1791     01AB  3020               	movlw	32
  1792     01AC  0632               	xorwf	vfpfcnvrt@c,w
  1793     01AD  1D03               	btfss	3,2
  1794     01AE  29B0               	goto	u1361
  1795     01AF  29B1               	goto	u1360
  1796     01B0                     u1361:
  1797     01B0  2993               	goto	l1568
  1798     01B1                     u1360:
  1799     01B1  29D2               	goto	l814
  1800     01B2                     l1574:
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1803     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1804     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1805     01B4  0828               	movf	vfpfcnvrt@fmt,w
  1806     01B5  0084               	movwf	4
  1807     01B6  3001               	movlw	1
  1808     01B7  0780               	addwf	0,f
  1809     01B8  29D2               	goto	l814
  1810     01B9                     l1578:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1813     01B9  0828               	movf	vfpfcnvrt@fmt,w
  1814     01BA  0084               	movwf	4
  1815     01BB  0800               	movf	0,w
  1816     01BC  0084               	movwf	4
  1817     01BD  120A  158A  2000  120A  118A  	fcall	stringdir
  1818     01C2  00AA               	movwf	??_vfpfcnvrt
  1819     01C3  01AB               	clrf	??_vfpfcnvrt+1
  1820     01C4  082A               	movf	??_vfpfcnvrt,w
  1821     01C5  00F0               	movwf	fputc@c
  1822     01C6  082B               	movf	??_vfpfcnvrt+1,w
  1823     01C7  00F1               	movwf	fputc@c+1
  1824     01C8  0826               	movf	vfpfcnvrt@fp,w
  1825     01C9  00F2               	movwf	fputc@fp
  1826     01CA  0827               	movf	vfpfcnvrt@fp+1,w
  1827     01CB  00F3               	movwf	fputc@fp+1
  1828     01CC  120A  158A  2684  120A  118A  	fcall	_fputc
  1829     01D1  29B2               	goto	l1574
  1830     01D2                     l814:
  1831     01D2  0008               	return
  1832     01D3                     __end_of_vfpfcnvrt:
  1833                           
  1834                           	psect	text4
  1835     0E84                     __ptext4:	
  1836 ;; *************** function _fputc *****************
  1837 ;; Defined at:
  1838 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  c               2    0[COMMON] int 
  1841 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1842 ;;		 -> sprintf@f(11), 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2    0[COMMON] int 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         4       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0
  1856 ;;      Temps:          9       0       0       0       0
  1857 ;;      Totals:        13       0       0       0       0
  1858 ;;Total ram usage:       13 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 1
  1861 ;; This function calls:
  1862 ;;		_putch
  1863 ;; This function is called by:
  1864 ;;		_vfpfcnvrt
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868     0E84                     _fputc:	
  1869                           ;psect for function _fputc
  1870                           
  1871     0E84                     l1456:	
  1872                           ;incstack = 0
  1873                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1874                           
  1875     0E84  0872               	movf	fputc@fp,w
  1876     0E85  0473               	iorwf	fputc@fp+1,w
  1877     0E86  1903               	btfsc	3,2
  1878     0E87  2E89               	goto	u1161
  1879     0E88  2E8A               	goto	u1160
  1880     0E89                     u1161:
  1881     0E89  2E90               	goto	l1460
  1882     0E8A                     u1160:
  1883     0E8A                     l1458:
  1884     0E8A  0872               	movf	fputc@fp,w
  1885     0E8B  0473               	iorwf	fputc@fp+1,w
  1886     0E8C  1D03               	btfss	3,2
  1887     0E8D  2E8F               	goto	u1171
  1888     0E8E  2E90               	goto	u1170
  1889     0E8F                     u1171:
  1890     0E8F  2E97               	goto	l1462
  1891     0E90                     u1170:
  1892     0E90                     l1460:
  1893     0E90  0870               	movf	fputc@c,w
  1894     0E91  120A  118A  2005  120A  158A  	fcall	_putch
  1895     0E96  2F1D               	goto	l839
  1896     0E97                     l1462:
  1897     0E97  0872               	movf	fputc@fp,w
  1898     0E98  3E09               	addlw	9
  1899     0E99  00F4               	movwf	??_fputc
  1900     0E9A  0873               	movf	fputc@fp+1,w
  1901     0E9B  1803               	skipnc
  1902     0E9C  3E01               	addlw	1
  1903     0E9D  3E00               	addlw	0
  1904     0E9E  00F5               	movwf	??_fputc+1
  1905     0E9F  0874               	movf	??_fputc,w
  1906     0EA0  0084               	movwf	4
  1907     0EA1  1783               	bsf	3,7
  1908     0EA2  1C75               	btfss	??_fputc+1,0
  1909     0EA3  1383               	bcf	3,7
  1910     0EA4  0800               	movf	0,w
  1911     0EA5  00F6               	movwf	??_fputc+2
  1912     0EA6  0A84               	incf	4,f
  1913     0EA7  0800               	movf	0,w
  1914     0EA8  00F7               	movwf	??_fputc+3
  1915     0EA9  0876               	movf	??_fputc+2,w
  1916     0EAA  0477               	iorwf	??_fputc+3,w
  1917     0EAB  1903               	btfsc	3,2
  1918     0EAC  2EAE               	goto	u1181
  1919     0EAD  2EAF               	goto	u1180
  1920     0EAE                     u1181:
  1921     0EAE  2EE1               	goto	l1466
  1922     0EAF                     u1180:
  1923     0EAF                     l1464:
  1924     0EAF  0872               	movf	fputc@fp,w
  1925     0EB0  3E09               	addlw	9
  1926     0EB1  00F4               	movwf	??_fputc
  1927     0EB2  0873               	movf	fputc@fp+1,w
  1928     0EB3  1803               	skipnc
  1929     0EB4  3E01               	addlw	1
  1930     0EB5  3E00               	addlw	0
  1931     0EB6  00F5               	movwf	??_fputc+1
  1932     0EB7  0874               	movf	??_fputc,w
  1933     0EB8  0084               	movwf	4
  1934     0EB9  1783               	bsf	3,7
  1935     0EBA  1C75               	btfss	??_fputc+1,0
  1936     0EBB  1383               	bcf	3,7
  1937     0EBC  0800               	movf	0,w
  1938     0EBD  00F6               	movwf	??_fputc+2
  1939     0EBE  0A84               	incf	4,f
  1940     0EBF  0800               	movf	0,w
  1941     0EC0  00F7               	movwf	??_fputc+3
  1942     0EC1  0872               	movf	fputc@fp,w
  1943     0EC2  3E02               	addlw	2
  1944     0EC3  00F8               	movwf	??_fputc+4
  1945     0EC4  0873               	movf	fputc@fp+1,w
  1946     0EC5  1803               	skipnc
  1947     0EC6  3E01               	addlw	1
  1948     0EC7  3E00               	addlw	0
  1949     0EC8  00F9               	movwf	??_fputc+5
  1950     0EC9  0878               	movf	??_fputc+4,w
  1951     0ECA  0084               	movwf	4
  1952     0ECB  1783               	bsf	3,7
  1953     0ECC  1C79               	btfss	??_fputc+5,0
  1954     0ECD  1383               	bcf	3,7
  1955     0ECE  0800               	movf	0,w
  1956     0ECF  00FA               	movwf	??_fputc+6
  1957     0ED0  0A84               	incf	4,f
  1958     0ED1  0800               	movf	0,w
  1959     0ED2  00FB               	movwf	??_fputc+7
  1960     0ED3  087B               	movf	??_fputc+7,w
  1961     0ED4  3A80               	xorlw	128
  1962     0ED5  00FC               	movwf	??_fputc+8
  1963     0ED6  0877               	movf	??_fputc+3,w
  1964     0ED7  3A80               	xorlw	128
  1965     0ED8  027C               	subwf	??_fputc+8,w
  1966     0ED9  1D03               	skipz
  1967     0EDA  2EDD               	goto	u1195
  1968     0EDB  0876               	movf	??_fputc+2,w
  1969     0EDC  027A               	subwf	??_fputc+6,w
  1970     0EDD                     u1195:
  1971     0EDD  1803               	skipnc
  1972     0EDE  2EE0               	goto	u1191
  1973     0EDF  2EE1               	goto	u1190
  1974     0EE0                     u1191:
  1975     0EE0  2F1D               	goto	l839
  1976     0EE1                     u1190:
  1977     0EE1                     l1466:
  1978     0EE1  0872               	movf	fputc@fp,w
  1979     0EE2  0084               	movwf	4
  1980     0EE3  1783               	bsf	3,7
  1981     0EE4  1C73               	btfss	fputc@fp+1,0
  1982     0EE5  1383               	bcf	3,7
  1983     0EE6  0800               	movf	0,w
  1984     0EE7  00F4               	movwf	??_fputc
  1985     0EE8  0A84               	incf	4,f
  1986     0EE9  0800               	movf	0,w
  1987     0EEA  00F5               	movwf	??_fputc+1
  1988     0EEB  0872               	movf	fputc@fp,w
  1989     0EEC  3E02               	addlw	2
  1990     0EED  00F6               	movwf	??_fputc+2
  1991     0EEE  0873               	movf	fputc@fp+1,w
  1992     0EEF  1803               	skipnc
  1993     0EF0  3E01               	addlw	1
  1994     0EF1  3E00               	addlw	0
  1995     0EF2  00F7               	movwf	??_fputc+3
  1996     0EF3  0876               	movf	??_fputc+2,w
  1997     0EF4  0084               	movwf	4
  1998     0EF5  1783               	bsf	3,7
  1999     0EF6  1C77               	btfss	??_fputc+3,0
  2000     0EF7  1383               	bcf	3,7
  2001     0EF8  0800               	movf	0,w
  2002     0EF9  0774               	addwf	??_fputc,w
  2003     0EFA  00F9               	movwf	??_fputc+5
  2004     0EFB  0875               	movf	??_fputc+1,w
  2005     0EFC  00F8               	movwf	??_fputc+4
  2006     0EFD  1803               	skipnc
  2007     0EFE  0AF8               	incf	??_fputc+4,f
  2008     0EFF  1F80               	btfss	0,7
  2009     0F00  2F02               	goto	u1200
  2010     0F01  03F8               	decf	??_fputc+4,f
  2011     0F02                     u1200:
  2012     0F02  0878               	movf	??_fputc+4,w
  2013     0F03  00FA               	movwf	??_fputc+6
  2014     0F04  0879               	movf	??_fputc+5,w
  2015     0F05  0084               	movwf	4
  2016     0F06  1783               	bsf	3,7
  2017     0F07  1C7A               	btfss	??_fputc+6,0
  2018     0F08  1383               	bcf	3,7
  2019     0F09  0870               	movf	fputc@c,w
  2020     0F0A  0080               	movwf	0
  2021     0F0B  0872               	movf	fputc@fp,w
  2022     0F0C  3E02               	addlw	2
  2023     0F0D  00F4               	movwf	??_fputc
  2024     0F0E  0873               	movf	fputc@fp+1,w
  2025     0F0F  1803               	skipnc
  2026     0F10  3E01               	addlw	1
  2027     0F11  3E00               	addlw	0
  2028     0F12  00F5               	movwf	??_fputc+1
  2029     0F13  0874               	movf	??_fputc,w
  2030     0F14  0084               	movwf	4
  2031     0F15  1783               	bsf	3,7
  2032     0F16  1C75               	btfss	??_fputc+1,0
  2033     0F17  1383               	bcf	3,7
  2034     0F18  3001               	movlw	1
  2035     0F19  0780               	addwf	0,f
  2036     0F1A  0A84               	incf	4,f
  2037     0F1B  1803               	skipnc
  2038     0F1C  0A80               	incf	0,f
  2039     0F1D                     l839:
  2040     0F1D  0008               	return
  2041     0F1E                     __end_of_fputc:
  2042                           
  2043                           	psect	text5
  2044     0005                     __ptext5:	
  2045 ;; *************** function _putch *****************
  2046 ;; Defined at:
  2047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  c               1    wreg     unsigned char 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  c               1    0[COMMON] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_fputc
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074     0005                     _putch:	
  2075                           ;psect for function _putch
  2076                           
  2077     0005                     l850:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _putch: [wreg]
  2080                           
  2081     0005  0008               	return
  2082     0006                     __end_of_putch:
  2083                           
  2084                           	psect	text6
  2085     09DA                     __ptext6:	
  2086 ;; *************** function _abs *****************
  2087 ;; Defined at:
  2088 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  a               2   11[COMMON] int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2   11[COMMON] int 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         2       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0
  2104 ;;      Temps:          0       2       0       0       0
  2105 ;;      Totals:         2       2       0       0       0
  2106 ;;Total ram usage:        4 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_vfpfcnvrt
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115     09DA                     _abs:	
  2116                           ;psect for function _abs
  2117                           
  2118     09DA                     l1470:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _abs: [wreg+status,2+status,0]
  2121                           
  2122     09DA  1BFC               	btfsc	abs@a+1,7
  2123     09DB  29DD               	goto	u1211
  2124     09DC  29DE               	goto	u1210
  2125     09DD                     u1211:
  2126     09DD  29DF               	goto	l1474
  2127     09DE                     u1210:
  2128     09DE                     l1472:
  2129     09DE  29EC               	goto	l827
  2130     09DF                     l1474:
  2131     09DF  097B               	comf	abs@a,w
  2132     09E0  1283               	bcf	3,5	;RP0=0, select bank0
  2133     09E1  1303               	bcf	3,6	;RP1=0, select bank0
  2134     09E2  00A0               	movwf	??_abs
  2135     09E3  097C               	comf	abs@a+1,w
  2136     09E4  00A1               	movwf	??_abs+1
  2137     09E5  0AA0               	incf	??_abs,f
  2138     09E6  1903               	skipnz
  2139     09E7  0AA1               	incf	??_abs+1,f
  2140     09E8  0820               	movf	??_abs,w
  2141     09E9  00FB               	movwf	?_abs
  2142     09EA  0821               	movf	??_abs+1,w
  2143     09EB  00FC               	movwf	?_abs+1
  2144     09EC                     l827:
  2145     09EC  0008               	return
  2146     09ED                     __end_of_abs:
  2147                           
  2148                           	psect	text7
  2149     0008                     __ptext7:	
  2150 ;; *************** function ___almod *****************
  2151 ;; Defined at:
  2152 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\almod.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  divisor         4    0[COMMON] long 
  2155 ;;  dividend        4    4[COMMON] long 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  sign            1   10[COMMON] unsigned char 
  2158 ;;  counter         1    9[COMMON] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  4    0[COMMON] long 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         8       0       0       0       0
  2169 ;;      Locals:         2       0       0       0       0
  2170 ;;      Temps:          1       0       0       0       0
  2171 ;;      Totals:        11       0       0       0       0
  2172 ;;Total ram usage:       11 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_vfpfcnvrt
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181     0008                     ___almod:	
  2182                           ;psect for function ___almod
  2183                           
  2184     0008                     l1424:	
  2185                           ;incstack = 0
  2186                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2187                           
  2188     0008  01FA               	clrf	___almod@sign
  2189     0009                     l1426:
  2190     0009  1FF7               	btfss	___almod@dividend+3,7
  2191     000A  280C               	goto	u1071
  2192     000B  280D               	goto	u1070
  2193     000C                     u1071:
  2194     000C  281A               	goto	l381
  2195     000D                     u1070:
  2196     000D                     l1428:
  2197     000D  09F4               	comf	___almod@dividend,f
  2198     000E  09F5               	comf	___almod@dividend+1,f
  2199     000F  09F6               	comf	___almod@dividend+2,f
  2200     0010  09F7               	comf	___almod@dividend+3,f
  2201     0011  0AF4               	incf	___almod@dividend,f
  2202     0012  1903               	skipnz
  2203     0013  0AF5               	incf	___almod@dividend+1,f
  2204     0014  1903               	skipnz
  2205     0015  0AF6               	incf	___almod@dividend+2,f
  2206     0016  1903               	skipnz
  2207     0017  0AF7               	incf	___almod@dividend+3,f
  2208     0018  3001               	movlw	1
  2209     0019  00FA               	movwf	___almod@sign
  2210     001A                     l381:
  2211     001A  1FF3               	btfss	___almod@divisor+3,7
  2212     001B  281D               	goto	u1081
  2213     001C  281E               	goto	u1080
  2214     001D                     u1081:
  2215     001D  2829               	goto	l1432
  2216     001E                     u1080:
  2217     001E                     l1430:
  2218     001E  09F0               	comf	___almod@divisor,f
  2219     001F  09F1               	comf	___almod@divisor+1,f
  2220     0020  09F2               	comf	___almod@divisor+2,f
  2221     0021  09F3               	comf	___almod@divisor+3,f
  2222     0022  0AF0               	incf	___almod@divisor,f
  2223     0023  1903               	skipnz
  2224     0024  0AF1               	incf	___almod@divisor+1,f
  2225     0025  1903               	skipnz
  2226     0026  0AF2               	incf	___almod@divisor+2,f
  2227     0027  1903               	skipnz
  2228     0028  0AF3               	incf	___almod@divisor+3,f
  2229     0029                     l1432:
  2230     0029  0873               	movf	___almod@divisor+3,w
  2231     002A  0472               	iorwf	___almod@divisor+2,w
  2232     002B  0471               	iorwf	___almod@divisor+1,w
  2233     002C  0470               	iorwf	___almod@divisor,w
  2234     002D  1903               	skipnz
  2235     002E  2830               	goto	u1091
  2236     002F  2831               	goto	u1090
  2237     0030                     u1091:
  2238     0030  2872               	goto	l1448
  2239     0031                     u1090:
  2240     0031                     l1434:
  2241     0031  3001               	movlw	1
  2242     0032  00F9               	movwf	___almod@counter
  2243     0033  283F               	goto	l1438
  2244     0034                     l1436:
  2245     0034  3001               	movlw	1
  2246     0035  00F8               	movwf	??___almod
  2247     0036                     u1105:
  2248     0036  1003               	clrc
  2249     0037  0DF0               	rlf	___almod@divisor,f
  2250     0038  0DF1               	rlf	___almod@divisor+1,f
  2251     0039  0DF2               	rlf	___almod@divisor+2,f
  2252     003A  0DF3               	rlf	___almod@divisor+3,f
  2253     003B  0BF8               	decfsz	??___almod,f
  2254     003C  2836               	goto	u1105
  2255     003D  3001               	movlw	1
  2256     003E  07F9               	addwf	___almod@counter,f
  2257     003F                     l1438:
  2258     003F  1FF3               	btfss	___almod@divisor+3,7
  2259     0040  2842               	goto	u1111
  2260     0041  2843               	goto	u1110
  2261     0042                     u1111:
  2262     0042  2834               	goto	l1436
  2263     0043                     u1110:
  2264     0043                     l1440:
  2265     0043  0873               	movf	___almod@divisor+3,w
  2266     0044  0277               	subwf	___almod@dividend+3,w
  2267     0045  1D03               	skipz
  2268     0046  2851               	goto	u1125
  2269     0047  0872               	movf	___almod@divisor+2,w
  2270     0048  0276               	subwf	___almod@dividend+2,w
  2271     0049  1D03               	skipz
  2272     004A  2851               	goto	u1125
  2273     004B  0871               	movf	___almod@divisor+1,w
  2274     004C  0275               	subwf	___almod@dividend+1,w
  2275     004D  1D03               	skipz
  2276     004E  2851               	goto	u1125
  2277     004F  0870               	movf	___almod@divisor,w
  2278     0050  0274               	subwf	___almod@dividend,w
  2279     0051                     u1125:
  2280     0051  1C03               	skipc
  2281     0052  2854               	goto	u1121
  2282     0053  2855               	goto	u1120
  2283     0054                     u1121:
  2284     0054  2863               	goto	l1444
  2285     0055                     u1120:
  2286     0055                     l1442:
  2287     0055  0870               	movf	___almod@divisor,w
  2288     0056  02F4               	subwf	___almod@dividend,f
  2289     0057  0871               	movf	___almod@divisor+1,w
  2290     0058  1C03               	skipc
  2291     0059  0F71               	incfsz	___almod@divisor+1,w
  2292     005A  02F5               	subwf	___almod@dividend+1,f
  2293     005B  0872               	movf	___almod@divisor+2,w
  2294     005C  1C03               	skipc
  2295     005D  0F72               	incfsz	___almod@divisor+2,w
  2296     005E  02F6               	subwf	___almod@dividend+2,f
  2297     005F  0873               	movf	___almod@divisor+3,w
  2298     0060  1C03               	skipc
  2299     0061  0F73               	incfsz	___almod@divisor+3,w
  2300     0062  02F7               	subwf	___almod@dividend+3,f
  2301     0063                     l1444:
  2302     0063  3001               	movlw	1
  2303     0064                     u1135:
  2304     0064  1003               	clrc
  2305     0065  0CF3               	rrf	___almod@divisor+3,f
  2306     0066  0CF2               	rrf	___almod@divisor+2,f
  2307     0067  0CF1               	rrf	___almod@divisor+1,f
  2308     0068  0CF0               	rrf	___almod@divisor,f
  2309     0069  3EFF               	addlw	-1
  2310     006A  1D03               	skipz
  2311     006B  2864               	goto	u1135
  2312     006C                     l1446:
  2313     006C  3001               	movlw	1
  2314     006D  02F9               	subwf	___almod@counter,f
  2315     006E  1D03               	btfss	3,2
  2316     006F  2871               	goto	u1141
  2317     0070  2872               	goto	u1140
  2318     0071                     u1141:
  2319     0071  2843               	goto	l1440
  2320     0072                     u1140:
  2321     0072                     l1448:
  2322     0072  087A               	movf	___almod@sign,w
  2323     0073  1903               	btfsc	3,2
  2324     0074  2876               	goto	u1151
  2325     0075  2877               	goto	u1150
  2326     0076                     u1151:
  2327     0076  2882               	goto	l1452
  2328     0077                     u1150:
  2329     0077                     l1450:
  2330     0077  09F4               	comf	___almod@dividend,f
  2331     0078  09F5               	comf	___almod@dividend+1,f
  2332     0079  09F6               	comf	___almod@dividend+2,f
  2333     007A  09F7               	comf	___almod@dividend+3,f
  2334     007B  0AF4               	incf	___almod@dividend,f
  2335     007C  1903               	skipnz
  2336     007D  0AF5               	incf	___almod@dividend+1,f
  2337     007E  1903               	skipnz
  2338     007F  0AF6               	incf	___almod@dividend+2,f
  2339     0080  1903               	skipnz
  2340     0081  0AF7               	incf	___almod@dividend+3,f
  2341     0082                     l1452:
  2342     0082  0877               	movf	___almod@dividend+3,w
  2343     0083  00F3               	movwf	?___almod+3
  2344     0084  0876               	movf	___almod@dividend+2,w
  2345     0085  00F2               	movwf	?___almod+2
  2346     0086  0875               	movf	___almod@dividend+1,w
  2347     0087  00F1               	movwf	?___almod+1
  2348     0088  0874               	movf	___almod@dividend,w
  2349     0089  00F0               	movwf	?___almod
  2350     008A                     l391:
  2351     008A  0008               	return
  2352     008B                     __end_of___almod:
  2353                           
  2354                           	psect	text8
  2355     0A04                     __ptext8:	
  2356 ;; *************** function _lcd_string *****************
  2357 ;; Defined at:
  2358 ;;		line 35 in file "lcd.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  str             1    3[COMMON] PTR const unsigned char 
  2361 ;;		 -> main@buffer(16), 
  2362 ;;  len             1    4[COMMON] unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  i               1    6[COMMON] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         2       0       0       0       0
  2375 ;;      Locals:         1       0       0       0       0
  2376 ;;      Temps:          1       0       0       0       0
  2377 ;;      Totals:         4       0       0       0       0
  2378 ;;Total ram usage:        4 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 1
  2381 ;; This function calls:
  2382 ;;		_lcd_data
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388     0A04                     _lcd_string:	
  2389                           ;psect for function _lcd_string
  2390                           
  2391     0A04                     l1712:	
  2392                           ;incstack = 0
  2393                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2394                           
  2395                           
  2396                           ;lcd.c: 36:     for (unsigned char i = 0; i < len; ++i) {
  2397     0A04  01F6               	clrf	lcd_string@i
  2398     0A05  2A14               	goto	l1718
  2399     0A06                     l1714:
  2400                           
  2401                           ;lcd.c: 37:         lcd_data(str[i]);
  2402     0A06  0876               	movf	lcd_string@i,w
  2403     0A07  0773               	addwf	lcd_string@str,w
  2404     0A08  00F5               	movwf	??_lcd_string
  2405     0A09  0875               	movf	??_lcd_string,w
  2406     0A0A  0084               	movwf	4
  2407     0A0B  1383               	bcf	3,7	;select IRP bank0
  2408     0A0C  0800               	movf	0,w
  2409     0A0D  120A  158A  22FB  120A  158A  	fcall	_lcd_data
  2410     0A12                     l1716:
  2411                           
  2412                           ;lcd.c: 38:         }
  2413     0A12  3001               	movlw	1
  2414     0A13  07F6               	addwf	lcd_string@i,f
  2415     0A14                     l1718:
  2416     0A14  0874               	movf	lcd_string@len,w
  2417     0A15  0276               	subwf	lcd_string@i,w
  2418     0A16  1C03               	skipc
  2419     0A17  2A19               	goto	u1571
  2420     0A18  2A1A               	goto	u1570
  2421     0A19                     u1571:
  2422     0A19  2A06               	goto	l1714
  2423     0A1A                     u1570:
  2424     0A1A                     l90:
  2425     0A1A  0008               	return
  2426     0A1B                     __end_of_lcd_string:
  2427                           
  2428                           	psect	text9
  2429     0AFB                     __ptext9:	
  2430 ;; *************** function _lcd_data *****************
  2431 ;; Defined at:
  2432 ;;		line 22 in file "lcd.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  data            1    wreg     unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  data            1    2[COMMON] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       0       0       0       0
  2447 ;;      Locals:         1       0       0       0       0
  2448 ;;      Temps:          2       0       0       0       0
  2449 ;;      Totals:         3       0       0       0       0
  2450 ;;Total ram usage:        3 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_lcd_string
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459     0AFB                     _lcd_data:	
  2460                           ;psect for function _lcd_data
  2461                           
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  2465                           ;lcd_data@data stored from wreg
  2466     0AFB  00F2               	movwf	lcd_data@data
  2467     0AFC                     l1612:
  2468                           
  2469                           ;lcd.c: 23:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 0;
  2470     0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  2471     0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  2472     0AFE  1407               	bsf	7,0	;volatile
  2473     0AFF  1087               	bcf	7,1	;volatile
  2474     0B00                     l1614:
  2475                           
  2476                           ;lcd.c: 24:     PORTD = (data & 0xF0);
  2477     0B00  0872               	movf	lcd_data@data,w
  2478     0B01  39F0               	andlw	240
  2479     0B02  0088               	movwf	8	;volatile
  2480     0B03                     l1616:
  2481                           
  2482                           ;lcd.c: 25:     PORTCbits.RC2 = 1;
  2483     0B03  1507               	bsf	7,2	;volatile
  2484     0B04                     l1618:
  2485                           
  2486                           ;lcd.c: 26:     _delay((unsigned long)((2)*(16000000/4000.0)));
  2487     0B04  300B               	movlw	11
  2488     0B05  00F1               	movwf	??_lcd_data+1
  2489     0B06  3062               	movlw	98
  2490     0B07  00F0               	movwf	??_lcd_data
  2491     0B08                     u1867:
  2492     0B08  0BF0               	decfsz	??_lcd_data,f
  2493     0B09  2B08               	goto	u1867
  2494     0B0A  0BF1               	decfsz	??_lcd_data+1,f
  2495     0B0B  2B08               	goto	u1867
  2496     0B0C  0000               	nop
  2497     0B0D                     l1620:
  2498                           
  2499                           ;lcd.c: 27:     PORTCbits.RC2 = 0;
  2500     0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  2501     0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  2502     0B0F  1107               	bcf	7,2	;volatile
  2503     0B10                     l1622:
  2504                           
  2505                           ;lcd.c: 29:     PORTD = ((data << 4) & 0xF0);
  2506     0B10  0872               	movf	lcd_data@data,w
  2507     0B11  00F0               	movwf	??_lcd_data
  2508     0B12  3003               	movlw	3
  2509     0B13                     u1385:
  2510     0B13  1003               	clrc
  2511     0B14  0DF0               	rlf	??_lcd_data,f
  2512     0B15  3EFF               	addlw	-1
  2513     0B16  1D03               	skipz
  2514     0B17  2B13               	goto	u1385
  2515     0B18  1003               	clrc
  2516     0B19  0D70               	rlf	??_lcd_data,w
  2517     0B1A  39F0               	andlw	240
  2518     0B1B  0088               	movwf	8	;volatile
  2519     0B1C                     l1624:
  2520                           
  2521                           ;lcd.c: 30:     PORTCbits.RC2 = 1;
  2522     0B1C  1507               	bsf	7,2	;volatile
  2523     0B1D                     l1626:
  2524                           
  2525                           ;lcd.c: 31:     _delay((unsigned long)((2)*(16000000/4000.0)));
  2526     0B1D  300B               	movlw	11
  2527     0B1E  00F1               	movwf	??_lcd_data+1
  2528     0B1F  3062               	movlw	98
  2529     0B20  00F0               	movwf	??_lcd_data
  2530     0B21                     u1877:
  2531     0B21  0BF0               	decfsz	??_lcd_data,f
  2532     0B22  2B21               	goto	u1877
  2533     0B23  0BF1               	decfsz	??_lcd_data+1,f
  2534     0B24  2B21               	goto	u1877
  2535     0B25  0000               	nop
  2536     0B26                     l1628:
  2537                           
  2538                           ;lcd.c: 32:     PORTCbits.RC2 = 0;
  2539     0B26  1283               	bcf	3,5	;RP0=0, select bank0
  2540     0B27  1303               	bcf	3,6	;RP1=0, select bank0
  2541     0B28  1107               	bcf	7,2	;volatile
  2542     0B29                     l84:
  2543     0B29  0008               	return
  2544     0B2A                     __end_of_lcd_data:
  2545                           
  2546                           	psect	text10
  2547     0B2A                     __ptext10:	
  2548 ;; *************** function _lcd_initialize *****************
  2549 ;; Defined at:
  2550 ;;		line 2 in file "lcd.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, pclath, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0
  2566 ;;      Temps:          2       0       0       0       0
  2567 ;;      Totals:         2       0       0       0       0
  2568 ;;Total ram usage:        2 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 1
  2571 ;; This function calls:
  2572 ;;		_lcd_command
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578     0B2A                     _lcd_initialize:	
  2579                           ;psect for function _lcd_initialize
  2580                           
  2581     0B2A                     l1706:	
  2582                           ;incstack = 0
  2583                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  2584                           
  2585                           
  2586                           ;lcd.c: 4:     TRISCbits.TRISC0 = 0;
  2587     0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  2588     0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  2589     0B2C  1007               	bcf	7,0	;volatile
  2590                           
  2591                           ;lcd.c: 5:     TRISCbits.TRISC1 = 0;
  2592     0B2D  1087               	bcf	7,1	;volatile
  2593                           
  2594                           ;lcd.c: 6:     TRISCbits.TRISC2 = 0;
  2595     0B2E  1107               	bcf	7,2	;volatile
  2596                           
  2597                           ;lcd.c: 9:     TRISDbits.TRISD4 = 0;
  2598     0B2F  1208               	bcf	8,4	;volatile
  2599                           
  2600                           ;lcd.c: 10:     TRISDbits.TRISD5 = 0;
  2601     0B30  1288               	bcf	8,5	;volatile
  2602                           
  2603                           ;lcd.c: 11:     TRISDbits.TRISD6 = 0;
  2604     0B31  1308               	bcf	8,6	;volatile
  2605                           
  2606                           ;lcd.c: 12:     TRISDbits.TRISD7 = 0;
  2607     0B32  1388               	bcf	8,7	;volatile
  2608     0B33                     l1708:
  2609                           
  2610                           ;lcd.c: 14:     lcd_command(0x02);
  2611     0B33  3002               	movlw	2
  2612     0B34  120A  158A  22CC  120A  158A  	fcall	_lcd_command
  2613                           
  2614                           ;lcd.c: 15:     lcd_command(0x28);
  2615     0B39  3028               	movlw	40
  2616     0B3A  120A  158A  22CC  120A  158A  	fcall	_lcd_command
  2617                           
  2618                           ;lcd.c: 16:     lcd_command(0x06);
  2619     0B3F  3006               	movlw	6
  2620     0B40  120A  158A  22CC  120A  158A  	fcall	_lcd_command
  2621                           
  2622                           ;lcd.c: 17:     lcd_command(0x0C);
  2623     0B45  300C               	movlw	12
  2624     0B46  120A  158A  22CC  120A  158A  	fcall	_lcd_command
  2625                           
  2626                           ;lcd.c: 18:     lcd_command(0x01);
  2627     0B4B  3001               	movlw	1
  2628     0B4C  120A  158A  22CC  120A  158A  	fcall	_lcd_command
  2629     0B51                     l1710:
  2630                           
  2631                           ;lcd.c: 19:     _delay((unsigned long)((2)*(16000000/4000.0)));
  2632     0B51  300B               	movlw	11
  2633     0B52  00F4               	movwf	??_lcd_initialize+1
  2634     0B53  3062               	movlw	98
  2635     0B54  00F3               	movwf	??_lcd_initialize
  2636     0B55                     u1887:
  2637     0B55  0BF3               	decfsz	??_lcd_initialize,f
  2638     0B56  2B55               	goto	u1887
  2639     0B57  0BF4               	decfsz	??_lcd_initialize+1,f
  2640     0B58  2B55               	goto	u1887
  2641     0B59  0000               	nop
  2642     0B5A                     l81:
  2643     0B5A  0008               	return
  2644     0B5B                     __end_of_lcd_initialize:
  2645                           
  2646                           	psect	text11
  2647     0ACC                     __ptext11:	
  2648 ;; *************** function _lcd_command *****************
  2649 ;; Defined at:
  2650 ;;		line 41 in file "lcd.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  cmd             1    wreg     unsigned char 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  cmd             1    2[COMMON] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         0       0       0       0       0
  2665 ;;      Locals:         1       0       0       0       0
  2666 ;;      Temps:          2       0       0       0       0
  2667 ;;      Totals:         3       0       0       0       0
  2668 ;;Total ram usage:        3 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_lcd_initialize
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678     0ACC                     _lcd_command:	
  2679                           ;psect for function _lcd_command
  2680                           
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in _lcd_command: [wreg+status,2+status,0]
  2684                           ;lcd_command@cmd stored from wreg
  2685     0ACC  00F2               	movwf	lcd_command@cmd
  2686     0ACD                     l1594:
  2687                           
  2688                           ;lcd.c: 42:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0;
  2689     0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  2691     0ACF  1007               	bcf	7,0	;volatile
  2692     0AD0  1087               	bcf	7,1	;volatile
  2693     0AD1                     l1596:
  2694                           
  2695                           ;lcd.c: 43:     PORTD = (cmd & 0xF0);
  2696     0AD1  0872               	movf	lcd_command@cmd,w
  2697     0AD2  39F0               	andlw	240
  2698     0AD3  0088               	movwf	8	;volatile
  2699     0AD4                     l1598:
  2700                           
  2701                           ;lcd.c: 44:     PORTCbits.RC2 = 1;
  2702     0AD4  1507               	bsf	7,2	;volatile
  2703     0AD5                     l1600:
  2704                           
  2705                           ;lcd.c: 45:     _delay((unsigned long)((2)*(16000000/4000.0)));
  2706     0AD5  300B               	movlw	11
  2707     0AD6  00F1               	movwf	??_lcd_command+1
  2708     0AD7  3062               	movlw	98
  2709     0AD8  00F0               	movwf	??_lcd_command
  2710     0AD9                     u1897:
  2711     0AD9  0BF0               	decfsz	??_lcd_command,f
  2712     0ADA  2AD9               	goto	u1897
  2713     0ADB  0BF1               	decfsz	??_lcd_command+1,f
  2714     0ADC  2AD9               	goto	u1897
  2715     0ADD  0000               	nop
  2716     0ADE                     l1602:
  2717                           
  2718                           ;lcd.c: 46:     PORTCbits.RC2 = 0;
  2719     0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  2720     0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  2721     0AE0  1107               	bcf	7,2	;volatile
  2722     0AE1                     l1604:
  2723                           
  2724                           ;lcd.c: 48:     PORTD = ((cmd << 4) & 0xF0);
  2725     0AE1  0872               	movf	lcd_command@cmd,w
  2726     0AE2  00F0               	movwf	??_lcd_command
  2727     0AE3  3003               	movlw	3
  2728     0AE4                     u1375:
  2729     0AE4  1003               	clrc
  2730     0AE5  0DF0               	rlf	??_lcd_command,f
  2731     0AE6  3EFF               	addlw	-1
  2732     0AE7  1D03               	skipz
  2733     0AE8  2AE4               	goto	u1375
  2734     0AE9  1003               	clrc
  2735     0AEA  0D70               	rlf	??_lcd_command,w
  2736     0AEB  39F0               	andlw	240
  2737     0AEC  0088               	movwf	8	;volatile
  2738     0AED                     l1606:
  2739                           
  2740                           ;lcd.c: 49:     PORTCbits.RC2 = 1;
  2741     0AED  1507               	bsf	7,2	;volatile
  2742     0AEE                     l1608:
  2743                           
  2744                           ;lcd.c: 50:     _delay((unsigned long)((2)*(16000000/4000.0)));
  2745     0AEE  300B               	movlw	11
  2746     0AEF  00F1               	movwf	??_lcd_command+1
  2747     0AF0  3062               	movlw	98
  2748     0AF1  00F0               	movwf	??_lcd_command
  2749     0AF2                     u1907:
  2750     0AF2  0BF0               	decfsz	??_lcd_command,f
  2751     0AF3  2AF2               	goto	u1907
  2752     0AF4  0BF1               	decfsz	??_lcd_command+1,f
  2753     0AF5  2AF2               	goto	u1907
  2754     0AF6  0000               	nop
  2755     0AF7                     l1610:
  2756                           
  2757                           ;lcd.c: 51:     PORTCbits.RC2 = 0;
  2758     0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  2759     0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  2760     0AF9  1107               	bcf	7,2	;volatile
  2761     0AFA                     l93:
  2762     0AFA  0008               	return
  2763     0AFB                     __end_of_lcd_command:
  2764                           
  2765                           	psect	text12
  2766     01D3                     __ptext12:	
  2767 ;; *************** function _BMP085_ReadPressure *****************
  2768 ;; Defined at:
  2769 ;;		line 117 in file "BMP085.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  B6              4   44[BANK1 ] long 
  2774 ;;  p               4   40[BANK1 ] long 
  2775 ;;  X1              4   36[BANK1 ] long 
  2776 ;;  X2              4   32[BANK1 ] long 
  2777 ;;  B7              4   28[BANK1 ] unsigned long 
  2778 ;;  X3              4   20[BANK1 ] long 
  2779 ;;  B4              4   16[BANK1 ] unsigned long 
  2780 ;;  B5              4   12[BANK1 ] long 
  2781 ;;  B3              4    8[BANK1 ] long 
  2782 ;;  UP              4    4[BANK1 ] long 
  2783 ;;  UT              4    0[BANK1 ] long 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  4   31[BANK0 ] long 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       4       0       0       0
  2794 ;;      Locals:         0       0      48       0       0
  2795 ;;      Temps:          0      14       0       0       0
  2796 ;;      Totals:         0      18      48       0       0
  2797 ;;Total ram usage:       66 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 4
  2800 ;; This function calls:
  2801 ;;		_BMP085_ComputeB5
  2802 ;;		_BMP085_ReadRawPressure
  2803 ;;		_BMP085_ReadRawTemperature
  2804 ;;		___aldiv
  2805 ;;		___lldiv
  2806 ;;		___lmul
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812     01D3                     _BMP085_ReadPressure:	
  2813                           ;psect for function _BMP085_ReadPressure
  2814                           
  2815     01D3                     l1750:	
  2816                           ;incstack = 0
  2817                           ; Regs used in _BMP085_ReadPressure: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2818                           
  2819                           
  2820                           ;BMP085.c: 118:     int32_t UT, UP, B3, B5, B6, X1, X2, X3, p;;BMP085.c: 119:     uint32
      +                          _t B4, B7;;BMP085.c: 121:     UT = BMP085_ReadRawTemperature();
  2821     01D3  120A  158A  221B  120A  118A  	fcall	_BMP085_ReadRawTemperature
  2822     01D8  0878               	movf	?_BMP085_ReadRawTemperature,w
  2823     01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2824     01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2825     01DB  00A0               	movwf	BMP085_ReadPressure@UT^(0+128)
  2826     01DC  0879               	movf	?_BMP085_ReadRawTemperature+1,w
  2827     01DD  00A1               	movwf	(BMP085_ReadPressure@UT^(0+128)+1)
  2828     01DE  01A2               	clrf	(BMP085_ReadPressure@UT^(0+128)+2)
  2829     01DF  01A3               	clrf	(BMP085_ReadPressure@UT^(0+128)+3)
  2830                           
  2831                           ;BMP085.c: 122:     UP = BMP085_ReadRawPressure();
  2832     01E0  120A  158A  25EA  120A  118A  	fcall	_BMP085_ReadRawPressure
  2833     01E5  087B               	movf	?_BMP085_ReadRawPressure+3,w
  2834     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2835     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2836     01E8  00A7               	movwf	(BMP085_ReadPressure@UP+3)^(0+128)
  2837     01E9  087A               	movf	?_BMP085_ReadRawPressure+2,w
  2838     01EA  00A6               	movwf	(BMP085_ReadPressure@UP+2)^(0+128)
  2839     01EB  0879               	movf	?_BMP085_ReadRawPressure+1,w
  2840     01EC  00A5               	movwf	(BMP085_ReadPressure@UP+1)^(0+128)
  2841     01ED  0878               	movf	?_BMP085_ReadRawPressure,w
  2842     01EE  00A4               	movwf	BMP085_ReadPressure@UP^(0+128)
  2843     01EF                     l1752:
  2844                           
  2845                           ;BMP085.c: 124:     B5 = BMP085_ComputeB5(UT);
  2846     01EF  0823               	movf	(BMP085_ReadPressure@UT+3)^(0+128),w
  2847     01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2848     01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2849     01F2  00A9               	movwf	BMP085_ComputeB5@UT+3
  2850     01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2851     01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2852     01F5  0822               	movf	(BMP085_ReadPressure@UT+2)^(0+128),w
  2853     01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2854     01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2855     01F8  00A8               	movwf	BMP085_ComputeB5@UT+2
  2856     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2857     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2858     01FB  0821               	movf	(BMP085_ReadPressure@UT+1)^(0+128),w
  2859     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2860     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2861     01FE  00A7               	movwf	BMP085_ComputeB5@UT+1
  2862     01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2863     0200  1303               	bcf	3,6	;RP1=0, select bank1
  2864     0201  0820               	movf	BMP085_ReadPressure@UT^(0+128),w
  2865     0202  1283               	bcf	3,5	;RP0=0, select bank0
  2866     0203  1303               	bcf	3,6	;RP1=0, select bank0
  2867     0204  00A6               	movwf	BMP085_ComputeB5@UT
  2868     0205  120A  158A  271E  120A  118A  	fcall	_BMP085_ComputeB5
  2869     020A  1283               	bcf	3,5	;RP0=0, select bank0
  2870     020B  1303               	bcf	3,6	;RP1=0, select bank0
  2871     020C  0829               	movf	?_BMP085_ComputeB5+3,w
  2872     020D  1683               	bsf	3,5	;RP0=1, select bank1
  2873     020E  1303               	bcf	3,6	;RP1=0, select bank1
  2874     020F  00AF               	movwf	(BMP085_ReadPressure@B5+3)^(0+128)
  2875     0210  1283               	bcf	3,5	;RP0=0, select bank0
  2876     0211  1303               	bcf	3,6	;RP1=0, select bank0
  2877     0212  0828               	movf	?_BMP085_ComputeB5+2,w
  2878     0213  1683               	bsf	3,5	;RP0=1, select bank1
  2879     0214  1303               	bcf	3,6	;RP1=0, select bank1
  2880     0215  00AE               	movwf	(BMP085_ReadPressure@B5+2)^(0+128)
  2881     0216  1283               	bcf	3,5	;RP0=0, select bank0
  2882     0217  1303               	bcf	3,6	;RP1=0, select bank0
  2883     0218  0827               	movf	?_BMP085_ComputeB5+1,w
  2884     0219  1683               	bsf	3,5	;RP0=1, select bank1
  2885     021A  1303               	bcf	3,6	;RP1=0, select bank1
  2886     021B  00AD               	movwf	(BMP085_ReadPressure@B5+1)^(0+128)
  2887     021C  1283               	bcf	3,5	;RP0=0, select bank0
  2888     021D  1303               	bcf	3,6	;RP1=0, select bank0
  2889     021E  0826               	movf	?_BMP085_ComputeB5,w
  2890     021F  1683               	bsf	3,5	;RP0=1, select bank1
  2891     0220  1303               	bcf	3,6	;RP1=0, select bank1
  2892     0221  00AC               	movwf	BMP085_ReadPressure@B5^(0+128)
  2893     0222                     l1754:
  2894                           
  2895                           ;BMP085.c: 125:     B6 = B5 - 4000;
  2896     0222  3060               	movlw	96
  2897     0223  1283               	bcf	3,5	;RP0=0, select bank0
  2898     0224  1303               	bcf	3,6	;RP1=0, select bank0
  2899     0225  00C3               	movwf	??_BMP085_ReadPressure
  2900     0226  30F0               	movlw	240
  2901     0227  00C4               	movwf	??_BMP085_ReadPressure+1
  2902     0228  30FF               	movlw	255
  2903     0229  00C5               	movwf	??_BMP085_ReadPressure+2
  2904     022A  30FF               	movlw	255
  2905     022B  00C6               	movwf	??_BMP085_ReadPressure+3
  2906     022C  1683               	bsf	3,5	;RP0=1, select bank1
  2907     022D  1303               	bcf	3,6	;RP1=0, select bank1
  2908     022E  082C               	movf	BMP085_ReadPressure@B5^(0+128),w
  2909     022F  1283               	bcf	3,5	;RP0=0, select bank0
  2910     0230  1303               	bcf	3,6	;RP1=0, select bank0
  2911     0231  07C3               	addwf	??_BMP085_ReadPressure,f
  2912     0232  1683               	bsf	3,5	;RP0=1, select bank1
  2913     0233  1303               	bcf	3,6	;RP1=0, select bank1
  2914     0234  082D               	movf	(BMP085_ReadPressure@B5+1)^(0+128),w
  2915     0235  1803               	skipnc
  2916     0236  0F2D               	incfsz	(BMP085_ReadPressure@B5+1)^(0+128),w
  2917     0237  2A39               	goto	u1590
  2918     0238  2A3C               	goto	u1591
  2919     0239                     u1590:
  2920     0239  1283               	bcf	3,5	;RP0=0, select bank0
  2921     023A  1303               	bcf	3,6	;RP1=0, select bank0
  2922     023B  07C4               	addwf	??_BMP085_ReadPressure+1,f
  2923     023C                     u1591:
  2924     023C  1683               	bsf	3,5	;RP0=1, select bank1
  2925     023D  1303               	bcf	3,6	;RP1=0, select bank1
  2926     023E  082E               	movf	(BMP085_ReadPressure@B5+2)^(0+128),w
  2927     023F  1803               	skipnc
  2928     0240  0F2E               	incfsz	(BMP085_ReadPressure@B5+2)^(0+128),w
  2929     0241  2A43               	goto	u1592
  2930     0242  2A46               	goto	u1593
  2931     0243                     u1592:
  2932     0243  1283               	bcf	3,5	;RP0=0, select bank0
  2933     0244  1303               	bcf	3,6	;RP1=0, select bank0
  2934     0245  07C5               	addwf	??_BMP085_ReadPressure+2,f
  2935     0246                     u1593:
  2936     0246  1683               	bsf	3,5	;RP0=1, select bank1
  2937     0247  1303               	bcf	3,6	;RP1=0, select bank1
  2938     0248  082F               	movf	(BMP085_ReadPressure@B5+3)^(0+128),w
  2939     0249  1803               	skipnc
  2940     024A  0A2F               	incf	(BMP085_ReadPressure@B5+3)^(0+128),w
  2941     024B  1283               	bcf	3,5	;RP0=0, select bank0
  2942     024C  1303               	bcf	3,6	;RP1=0, select bank0
  2943     024D  07C6               	addwf	??_BMP085_ReadPressure+3,f
  2944     024E  0846               	movf	??_BMP085_ReadPressure+3,w
  2945     024F  1683               	bsf	3,5	;RP0=1, select bank1
  2946     0250  1303               	bcf	3,6	;RP1=0, select bank1
  2947     0251  00CF               	movwf	(BMP085_ReadPressure@B6+3)^(0+128)
  2948     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2949     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2950     0254  0845               	movf	??_BMP085_ReadPressure+2,w
  2951     0255  1683               	bsf	3,5	;RP0=1, select bank1
  2952     0256  1303               	bcf	3,6	;RP1=0, select bank1
  2953     0257  00CE               	movwf	(BMP085_ReadPressure@B6+2)^(0+128)
  2954     0258  1283               	bcf	3,5	;RP0=0, select bank0
  2955     0259  1303               	bcf	3,6	;RP1=0, select bank0
  2956     025A  0844               	movf	??_BMP085_ReadPressure+1,w
  2957     025B  1683               	bsf	3,5	;RP0=1, select bank1
  2958     025C  1303               	bcf	3,6	;RP1=0, select bank1
  2959     025D  00CD               	movwf	(BMP085_ReadPressure@B6+1)^(0+128)
  2960     025E  1283               	bcf	3,5	;RP0=0, select bank0
  2961     025F  1303               	bcf	3,6	;RP1=0, select bank0
  2962     0260  0843               	movf	??_BMP085_ReadPressure,w
  2963     0261  1683               	bsf	3,5	;RP0=1, select bank1
  2964     0262  1303               	bcf	3,6	;RP1=0, select bank1
  2965     0263  00CC               	movwf	BMP085_ReadPressure@B6^(0+128)
  2966     0264                     l1756:
  2967                           
  2968                           ;BMP085.c: 126:     X1 = (b2 * ((B6 * B6) >> 12)) >> 11;
  2969     0264  084F               	movf	(BMP085_ReadPressure@B6+3)^(0+128),w
  2970     0265  00F7               	movwf	___lmul@multiplicand+3
  2971     0266  084E               	movf	(BMP085_ReadPressure@B6+2)^(0+128),w
  2972     0267  00F6               	movwf	___lmul@multiplicand+2
  2973     0268  084D               	movf	(BMP085_ReadPressure@B6+1)^(0+128),w
  2974     0269  00F5               	movwf	___lmul@multiplicand+1
  2975     026A  084C               	movf	BMP085_ReadPressure@B6^(0+128),w
  2976     026B  00F4               	movwf	___lmul@multiplicand
  2977     026C  084F               	movf	(BMP085_ReadPressure@B6+3)^(0+128),w
  2978     026D  00F3               	movwf	___lmul@multiplier+3
  2979     026E  084E               	movf	(BMP085_ReadPressure@B6+2)^(0+128),w
  2980     026F  00F2               	movwf	___lmul@multiplier+2
  2981     0270  084D               	movf	(BMP085_ReadPressure@B6+1)^(0+128),w
  2982     0271  00F1               	movwf	___lmul@multiplier+1
  2983     0272  084C               	movf	BMP085_ReadPressure@B6^(0+128),w
  2984     0273  00F0               	movwf	___lmul@multiplier
  2985     0274  120A  158A  235B  120A  118A  	fcall	___lmul
  2986     0279  0870               	movf	?___lmul,w
  2987     027A  1283               	bcf	3,5	;RP0=0, select bank0
  2988     027B  1303               	bcf	3,6	;RP1=0, select bank0
  2989     027C  00C3               	movwf	??_BMP085_ReadPressure
  2990     027D  0871               	movf	?___lmul+1,w
  2991     027E  00C4               	movwf	??_BMP085_ReadPressure+1
  2992     027F  0872               	movf	?___lmul+2,w
  2993     0280  00C5               	movwf	??_BMP085_ReadPressure+2
  2994     0281  0873               	movf	?___lmul+3,w
  2995     0282  00C6               	movwf	??_BMP085_ReadPressure+3
  2996     0283  300C               	movlw	12
  2997     0284  00C7               	movwf	??_BMP085_ReadPressure+4
  2998     0285                     u1605:
  2999     0285  0D46               	rlf	??_BMP085_ReadPressure+3,w
  3000     0286  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  3001     0287  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  3002     0288  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  3003     0289  0CC3               	rrf	??_BMP085_ReadPressure,f
  3004     028A                     u1600:
  3005     028A  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  3006     028B  2A85               	goto	u1605
  3007     028C  0846               	movf	??_BMP085_ReadPressure+3,w
  3008     028D  1683               	bsf	3,5	;RP0=1, select bank1
  3009     028E  1303               	bcf	3,6	;RP1=0, select bank1
  3010     028F  00BB               	movwf	(_BMP085_ReadPressure$1045+3)^(0+128)
  3011     0290  1283               	bcf	3,5	;RP0=0, select bank0
  3012     0291  1303               	bcf	3,6	;RP1=0, select bank0
  3013     0292  0845               	movf	??_BMP085_ReadPressure+2,w
  3014     0293  1683               	bsf	3,5	;RP0=1, select bank1
  3015     0294  1303               	bcf	3,6	;RP1=0, select bank1
  3016     0295  00BA               	movwf	(_BMP085_ReadPressure$1045+2)^(0+128)
  3017     0296  1283               	bcf	3,5	;RP0=0, select bank0
  3018     0297  1303               	bcf	3,6	;RP1=0, select bank0
  3019     0298  0844               	movf	??_BMP085_ReadPressure+1,w
  3020     0299  1683               	bsf	3,5	;RP0=1, select bank1
  3021     029A  1303               	bcf	3,6	;RP1=0, select bank1
  3022     029B  00B9               	movwf	(_BMP085_ReadPressure$1045+1)^(0+128)
  3023     029C  1283               	bcf	3,5	;RP0=0, select bank0
  3024     029D  1303               	bcf	3,6	;RP1=0, select bank0
  3025     029E  0843               	movf	??_BMP085_ReadPressure,w
  3026     029F  1683               	bsf	3,5	;RP0=1, select bank1
  3027     02A0  1303               	bcf	3,6	;RP1=0, select bank1
  3028     02A1  00B8               	movwf	_BMP085_ReadPressure$1045^(0+128)
  3029     02A2                     l1758:
  3030                           
  3031                           ;BMP085.c: 126:     X1 = (b2 * ((B6 * B6) >> 12)) >> 11;
  3032     02A2  0866               	movf	_b2^(0+128),w
  3033     02A3  00F0               	movwf	___lmul@multiplier
  3034     02A4  0867               	movf	(_b2+1)^(0+128),w
  3035     02A5  00F1               	movwf	___lmul@multiplier+1
  3036     02A6  3000               	movlw	0
  3037     02A7  1BF1               	btfsc	___lmul@multiplier+1,7
  3038     02A8  30FF               	movlw	255
  3039     02A9  00F2               	movwf	___lmul@multiplier+2
  3040     02AA  00F3               	movwf	___lmul@multiplier+3
  3041     02AB  083B               	movf	(_BMP085_ReadPressure$1045+3)^(0+128),w
  3042     02AC  00F7               	movwf	___lmul@multiplicand+3
  3043     02AD  083A               	movf	(_BMP085_ReadPressure$1045+2)^(0+128),w
  3044     02AE  00F6               	movwf	___lmul@multiplicand+2
  3045     02AF  0839               	movf	(_BMP085_ReadPressure$1045+1)^(0+128),w
  3046     02B0  00F5               	movwf	___lmul@multiplicand+1
  3047     02B1  0838               	movf	_BMP085_ReadPressure$1045^(0+128),w
  3048     02B2  00F4               	movwf	___lmul@multiplicand
  3049     02B3  120A  158A  235B  120A  118A  	fcall	___lmul
  3050     02B8  0870               	movf	?___lmul,w
  3051     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3052     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3053     02BB  00C3               	movwf	??_BMP085_ReadPressure
  3054     02BC  0871               	movf	?___lmul+1,w
  3055     02BD  00C4               	movwf	??_BMP085_ReadPressure+1
  3056     02BE  0872               	movf	?___lmul+2,w
  3057     02BF  00C5               	movwf	??_BMP085_ReadPressure+2
  3058     02C0  0873               	movf	?___lmul+3,w
  3059     02C1  00C6               	movwf	??_BMP085_ReadPressure+3
  3060     02C2  300B               	movlw	11
  3061     02C3  00C7               	movwf	??_BMP085_ReadPressure+4
  3062     02C4                     u1615:
  3063     02C4  0D46               	rlf	??_BMP085_ReadPressure+3,w
  3064     02C5  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  3065     02C6  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  3066     02C7  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  3067     02C8  0CC3               	rrf	??_BMP085_ReadPressure,f
  3068     02C9                     u1610:
  3069     02C9  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  3070     02CA  2AC4               	goto	u1615
  3071     02CB  0846               	movf	??_BMP085_ReadPressure+3,w
  3072     02CC  1683               	bsf	3,5	;RP0=1, select bank1
  3073     02CD  1303               	bcf	3,6	;RP1=0, select bank1
  3074     02CE  00C7               	movwf	(BMP085_ReadPressure@X1+3)^(0+128)
  3075     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3076     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3077     02D1  0845               	movf	??_BMP085_ReadPressure+2,w
  3078     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  3079     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  3080     02D4  00C6               	movwf	(BMP085_ReadPressure@X1+2)^(0+128)
  3081     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  3082     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  3083     02D7  0844               	movf	??_BMP085_ReadPressure+1,w
  3084     02D8  1683               	bsf	3,5	;RP0=1, select bank1
  3085     02D9  1303               	bcf	3,6	;RP1=0, select bank1
  3086     02DA  00C5               	movwf	(BMP085_ReadPressure@X1+1)^(0+128)
  3087     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  3088     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  3089     02DD  0843               	movf	??_BMP085_ReadPressure,w
  3090     02DE  1683               	bsf	3,5	;RP0=1, select bank1
  3091     02DF  1303               	bcf	3,6	;RP1=0, select bank1
  3092     02E0  00C4               	movwf	BMP085_ReadPressure@X1^(0+128)
  3093     02E1                     l1760:
  3094                           
  3095                           ;BMP085.c: 127:     X2 = (ac2 * B6) >> 11;
  3096     02E1  086C               	movf	_ac2^(0+128),w
  3097     02E2  00F0               	movwf	___lmul@multiplier
  3098     02E3  086D               	movf	(_ac2+1)^(0+128),w
  3099     02E4  00F1               	movwf	___lmul@multiplier+1
  3100     02E5  3000               	movlw	0
  3101     02E6  1BF1               	btfsc	___lmul@multiplier+1,7
  3102     02E7  30FF               	movlw	255
  3103     02E8  00F2               	movwf	___lmul@multiplier+2
  3104     02E9  00F3               	movwf	___lmul@multiplier+3
  3105     02EA  084F               	movf	(BMP085_ReadPressure@B6+3)^(0+128),w
  3106     02EB  00F7               	movwf	___lmul@multiplicand+3
  3107     02EC  084E               	movf	(BMP085_ReadPressure@B6+2)^(0+128),w
  3108     02ED  00F6               	movwf	___lmul@multiplicand+2
  3109     02EE  084D               	movf	(BMP085_ReadPressure@B6+1)^(0+128),w
  3110     02EF  00F5               	movwf	___lmul@multiplicand+1
  3111     02F0  084C               	movf	BMP085_ReadPressure@B6^(0+128),w
  3112     02F1  00F4               	movwf	___lmul@multiplicand
  3113     02F2  120A  158A  235B  120A  118A  	fcall	___lmul
  3114     02F7  0870               	movf	?___lmul,w
  3115     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3116     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3117     02FA  00C3               	movwf	??_BMP085_ReadPressure
  3118     02FB  0871               	movf	?___lmul+1,w
  3119     02FC  00C4               	movwf	??_BMP085_ReadPressure+1
  3120     02FD  0872               	movf	?___lmul+2,w
  3121     02FE  00C5               	movwf	??_BMP085_ReadPressure+2
  3122     02FF  0873               	movf	?___lmul+3,w
  3123     0300  00C6               	movwf	??_BMP085_ReadPressure+3
  3124     0301  300B               	movlw	11
  3125     0302  00C7               	movwf	??_BMP085_ReadPressure+4
  3126     0303                     u1625:
  3127     0303  0D46               	rlf	??_BMP085_ReadPressure+3,w
  3128     0304  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  3129     0305  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  3130     0306  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  3131     0307  0CC3               	rrf	??_BMP085_ReadPressure,f
  3132     0308                     u1620:
  3133     0308  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  3134     0309  2B03               	goto	u1625
  3135     030A  0846               	movf	??_BMP085_ReadPressure+3,w
  3136     030B  1683               	bsf	3,5	;RP0=1, select bank1
  3137     030C  1303               	bcf	3,6	;RP1=0, select bank1
  3138     030D  00C3               	movwf	(BMP085_ReadPressure@X2+3)^(0+128)
  3139     030E  1283               	bcf	3,5	;RP0=0, select bank0
  3140     030F  1303               	bcf	3,6	;RP1=0, select bank0
  3141     0310  0845               	movf	??_BMP085_ReadPressure+2,w
  3142     0311  1683               	bsf	3,5	;RP0=1, select bank1
  3143     0312  1303               	bcf	3,6	;RP1=0, select bank1
  3144     0313  00C2               	movwf	(BMP085_ReadPressure@X2+2)^(0+128)
  3145     0314  1283               	bcf	3,5	;RP0=0, select bank0
  3146     0315  1303               	bcf	3,6	;RP1=0, select bank0
  3147     0316  0844               	movf	??_BMP085_ReadPressure+1,w
  3148     0317  1683               	bsf	3,5	;RP0=1, select bank1
  3149     0318  1303               	bcf	3,6	;RP1=0, select bank1
  3150     0319  00C1               	movwf	(BMP085_ReadPressure@X2+1)^(0+128)
  3151     031A  1283               	bcf	3,5	;RP0=0, select bank0
  3152     031B  1303               	bcf	3,6	;RP1=0, select bank0
  3153     031C  0843               	movf	??_BMP085_ReadPressure,w
  3154     031D  1683               	bsf	3,5	;RP0=1, select bank1
  3155     031E  1303               	bcf	3,6	;RP1=0, select bank1
  3156     031F  00C0               	movwf	BMP085_ReadPressure@X2^(0+128)
  3157     0320                     l1762:
  3158                           
  3159                           ;BMP085.c: 128:     X3 = X1 + X2;
  3160     0320  0844               	movf	BMP085_ReadPressure@X1^(0+128),w
  3161     0321  0740               	addwf	BMP085_ReadPressure@X2^(0+128),w
  3162     0322  1283               	bcf	3,5	;RP0=0, select bank0
  3163     0323  1303               	bcf	3,6	;RP1=0, select bank0
  3164     0324  00C3               	movwf	??_BMP085_ReadPressure
  3165     0325  3000               	movlw	0
  3166     0326  1803               	skipnc
  3167     0327  3001               	movlw	1
  3168     0328  1683               	bsf	3,5	;RP0=1, select bank1
  3169     0329  1303               	bcf	3,6	;RP1=0, select bank1
  3170     032A  0745               	addwf	(BMP085_ReadPressure@X1+1)^(0+128),w
  3171     032B  1283               	bcf	3,5	;RP0=0, select bank0
  3172     032C  1303               	bcf	3,6	;RP1=0, select bank0
  3173     032D  01C5               	clrf	??_BMP085_ReadPressure+2
  3174     032E  1803               	skipnc
  3175     032F  0AC5               	incf	??_BMP085_ReadPressure+2,f
  3176     0330  1683               	bsf	3,5	;RP0=1, select bank1
  3177     0331  1303               	bcf	3,6	;RP1=0, select bank1
  3178     0332  0741               	addwf	(BMP085_ReadPressure@X2+1)^(0+128),w
  3179     0333  1283               	bcf	3,5	;RP0=0, select bank0
  3180     0334  1303               	bcf	3,6	;RP1=0, select bank0
  3181     0335  00C4               	movwf	??_BMP085_ReadPressure+1
  3182     0336  1803               	skipnc
  3183     0337  0AC5               	incf	??_BMP085_ReadPressure+2,f
  3184     0338  1683               	bsf	3,5	;RP0=1, select bank1
  3185     0339  1303               	bcf	3,6	;RP1=0, select bank1
  3186     033A  0846               	movf	(BMP085_ReadPressure@X1+2)^(0+128),w
  3187     033B  1283               	bcf	3,5	;RP0=0, select bank0
  3188     033C  1303               	bcf	3,6	;RP1=0, select bank0
  3189     033D  0745               	addwf	??_BMP085_ReadPressure+2,w
  3190     033E  01C6               	clrf	??_BMP085_ReadPressure+3
  3191     033F  1803               	skipnc
  3192     0340  0AC6               	incf	??_BMP085_ReadPressure+3,f
  3193     0341  1683               	bsf	3,5	;RP0=1, select bank1
  3194     0342  1303               	bcf	3,6	;RP1=0, select bank1
  3195     0343  0742               	addwf	(BMP085_ReadPressure@X2+2)^(0+128),w
  3196     0344  1283               	bcf	3,5	;RP0=0, select bank0
  3197     0345  1303               	bcf	3,6	;RP1=0, select bank0
  3198     0346  00C5               	movwf	??_BMP085_ReadPressure+2
  3199     0347  1803               	skipnc
  3200     0348  0AC6               	incf	??_BMP085_ReadPressure+3,f
  3201     0349  1683               	bsf	3,5	;RP0=1, select bank1
  3202     034A  1303               	bcf	3,6	;RP1=0, select bank1
  3203     034B  0847               	movf	(BMP085_ReadPressure@X1+3)^(0+128),w
  3204     034C  1283               	bcf	3,5	;RP0=0, select bank0
  3205     034D  1303               	bcf	3,6	;RP1=0, select bank0
  3206     034E  0746               	addwf	??_BMP085_ReadPressure+3,w
  3207     034F  1683               	bsf	3,5	;RP0=1, select bank1
  3208     0350  1303               	bcf	3,6	;RP1=0, select bank1
  3209     0351  0743               	addwf	(BMP085_ReadPressure@X2+3)^(0+128),w
  3210     0352  1283               	bcf	3,5	;RP0=0, select bank0
  3211     0353  1303               	bcf	3,6	;RP1=0, select bank0
  3212     0354  00C6               	movwf	??_BMP085_ReadPressure+3
  3213     0355  0846               	movf	??_BMP085_ReadPressure+3,w
  3214     0356  1683               	bsf	3,5	;RP0=1, select bank1
  3215     0357  1303               	bcf	3,6	;RP1=0, select bank1
  3216     0358  00B7               	movwf	(BMP085_ReadPressure@X3+3)^(0+128)
  3217     0359  1283               	bcf	3,5	;RP0=0, select bank0
  3218     035A  1303               	bcf	3,6	;RP1=0, select bank0
  3219     035B  0845               	movf	??_BMP085_ReadPressure+2,w
  3220     035C  1683               	bsf	3,5	;RP0=1, select bank1
  3221     035D  1303               	bcf	3,6	;RP1=0, select bank1
  3222     035E  00B6               	movwf	(BMP085_ReadPressure@X3+2)^(0+128)
  3223     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3224     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3225     0361  0844               	movf	??_BMP085_ReadPressure+1,w
  3226     0362  1683               	bsf	3,5	;RP0=1, select bank1
  3227     0363  1303               	bcf	3,6	;RP1=0, select bank1
  3228     0364  00B5               	movwf	(BMP085_ReadPressure@X3+1)^(0+128)
  3229     0365  1283               	bcf	3,5	;RP0=0, select bank0
  3230     0366  1303               	bcf	3,6	;RP1=0, select bank0
  3231     0367  0843               	movf	??_BMP085_ReadPressure,w
  3232     0368  1683               	bsf	3,5	;RP0=1, select bank1
  3233     0369  1303               	bcf	3,6	;RP1=0, select bank1
  3234     036A  00B4               	movwf	BMP085_ReadPressure@X3^(0+128)
  3235     036B                     l1764:
  3236                           
  3237                           ;BMP085.c: 129:     B3 = (((ac1 * 4 + X3) << oversampling) + 2) / 4;
  3238     036B  3000               	movlw	0
  3239     036C  00F3               	movwf	___aldiv@divisor+3
  3240     036D  3000               	movlw	0
  3241     036E  00F2               	movwf	___aldiv@divisor+2
  3242     036F  3000               	movlw	0
  3243     0370  00F1               	movwf	___aldiv@divisor+1
  3244     0371  3004               	movlw	4
  3245     0372  00F0               	movwf	___aldiv@divisor
  3246     0373  3002               	movlw	2
  3247     0374  1283               	bcf	3,5	;RP0=0, select bank0
  3248     0375  1303               	bcf	3,6	;RP1=0, select bank0
  3249     0376  00C3               	movwf	??_BMP085_ReadPressure
  3250     0377  3000               	movlw	0
  3251     0378  00C4               	movwf	??_BMP085_ReadPressure+1
  3252     0379  3000               	movlw	0
  3253     037A  00C5               	movwf	??_BMP085_ReadPressure+2
  3254     037B  3000               	movlw	0
  3255     037C  00C6               	movwf	??_BMP085_ReadPressure+3
  3256     037D  1683               	bsf	3,5	;RP0=1, select bank1
  3257     037E  1303               	bcf	3,6	;RP1=0, select bank1
  3258     037F  0834               	movf	BMP085_ReadPressure@X3^(0+128),w
  3259     0380  1283               	bcf	3,5	;RP0=0, select bank0
  3260     0381  1303               	bcf	3,6	;RP1=0, select bank0
  3261     0382  00C7               	movwf	??_BMP085_ReadPressure+4
  3262     0383  1683               	bsf	3,5	;RP0=1, select bank1
  3263     0384  1303               	bcf	3,6	;RP1=0, select bank1
  3264     0385  0835               	movf	(BMP085_ReadPressure@X3+1)^(0+128),w
  3265     0386  1283               	bcf	3,5	;RP0=0, select bank0
  3266     0387  1303               	bcf	3,6	;RP1=0, select bank0
  3267     0388  00C8               	movwf	??_BMP085_ReadPressure+5
  3268     0389  1683               	bsf	3,5	;RP0=1, select bank1
  3269     038A  1303               	bcf	3,6	;RP1=0, select bank1
  3270     038B  0836               	movf	(BMP085_ReadPressure@X3+2)^(0+128),w
  3271     038C  1283               	bcf	3,5	;RP0=0, select bank0
  3272     038D  1303               	bcf	3,6	;RP1=0, select bank0
  3273     038E  00C9               	movwf	??_BMP085_ReadPressure+6
  3274     038F  1683               	bsf	3,5	;RP0=1, select bank1
  3275     0390  1303               	bcf	3,6	;RP1=0, select bank1
  3276     0391  0837               	movf	(BMP085_ReadPressure@X3+3)^(0+128),w
  3277     0392  1283               	bcf	3,5	;RP0=0, select bank0
  3278     0393  1303               	bcf	3,6	;RP1=0, select bank0
  3279     0394  00CA               	movwf	??_BMP085_ReadPressure+7
  3280     0395  086D               	movf	_ac1+1,w
  3281     0396  00CC               	movwf	??_BMP085_ReadPressure+9
  3282     0397  086C               	movf	_ac1,w
  3283     0398  00CB               	movwf	??_BMP085_ReadPressure+8
  3284     0399  1003               	clrc
  3285     039A  0DCB               	rlf	??_BMP085_ReadPressure+8,f
  3286     039B  0DCC               	rlf	??_BMP085_ReadPressure+9,f
  3287     039C  1003               	clrc
  3288     039D  0DCB               	rlf	??_BMP085_ReadPressure+8,f
  3289     039E  0DCC               	rlf	??_BMP085_ReadPressure+9,f
  3290     039F  084B               	movf	??_BMP085_ReadPressure+8,w
  3291     03A0  00CD               	movwf	??_BMP085_ReadPressure+10
  3292     03A1  084C               	movf	??_BMP085_ReadPressure+9,w
  3293     03A2  00CE               	movwf	??_BMP085_ReadPressure+11
  3294     03A3  3000               	movlw	0
  3295     03A4  1BCE               	btfsc	??_BMP085_ReadPressure+11,7
  3296     03A5  30FF               	movlw	255
  3297     03A6  00CF               	movwf	??_BMP085_ReadPressure+12
  3298     03A7  00D0               	movwf	??_BMP085_ReadPressure+13
  3299     03A8  084D               	movf	??_BMP085_ReadPressure+10,w
  3300     03A9  07C7               	addwf	??_BMP085_ReadPressure+4,f
  3301     03AA  084E               	movf	??_BMP085_ReadPressure+11,w
  3302     03AB  1803               	skipnc
  3303     03AC  0F4E               	incfsz	??_BMP085_ReadPressure+11,w
  3304     03AD  2BAF               	goto	u1630
  3305     03AE  2BB0               	goto	u1631
  3306     03AF                     u1630:
  3307     03AF  07C8               	addwf	??_BMP085_ReadPressure+5,f
  3308     03B0                     u1631:
  3309     03B0  084F               	movf	??_BMP085_ReadPressure+12,w
  3310     03B1  1803               	skipnc
  3311     03B2  0F4F               	incfsz	??_BMP085_ReadPressure+12,w
  3312     03B3  2BB5               	goto	u1632
  3313     03B4  2BB6               	goto	u1633
  3314     03B5                     u1632:
  3315     03B5  07C9               	addwf	??_BMP085_ReadPressure+6,f
  3316     03B6                     u1633:
  3317     03B6  0850               	movf	??_BMP085_ReadPressure+13,w
  3318     03B7  1803               	skipnc
  3319     03B8  0A50               	incf	??_BMP085_ReadPressure+13,w
  3320     03B9  07CA               	addwf	??_BMP085_ReadPressure+7,f
  3321     03BA  1683               	bsf	3,5	;RP0=1, select bank1
  3322     03BB  1303               	bcf	3,6	;RP1=0, select bank1
  3323     03BC  0A6E               	incf	_oversampling^(0+128),w
  3324     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3325     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  3326     03BF  2BC5               	goto	u1640
  3327     03C0                     u1645:
  3328     03C0  1003               	clrc
  3329     03C1  0DC7               	rlf	??_BMP085_ReadPressure+4,f
  3330     03C2  0DC8               	rlf	??_BMP085_ReadPressure+5,f
  3331     03C3  0DC9               	rlf	??_BMP085_ReadPressure+6,f
  3332     03C4  0DCA               	rlf	??_BMP085_ReadPressure+7,f
  3333     03C5                     u1640:
  3334     03C5  3EFF               	addlw	-1
  3335     03C6  1D03               	skipz
  3336     03C7  2BC0               	goto	u1645
  3337     03C8  0847               	movf	??_BMP085_ReadPressure+4,w
  3338     03C9  07C3               	addwf	??_BMP085_ReadPressure,f
  3339     03CA  0848               	movf	??_BMP085_ReadPressure+5,w
  3340     03CB  1803               	skipnc
  3341     03CC  0F48               	incfsz	??_BMP085_ReadPressure+5,w
  3342     03CD  2BCF               	goto	u1650
  3343     03CE  2BD0               	goto	u1651
  3344     03CF                     u1650:
  3345     03CF  07C4               	addwf	??_BMP085_ReadPressure+1,f
  3346     03D0                     u1651:
  3347     03D0  0849               	movf	??_BMP085_ReadPressure+6,w
  3348     03D1  1803               	skipnc
  3349     03D2  0F49               	incfsz	??_BMP085_ReadPressure+6,w
  3350     03D3  2BD5               	goto	u1652
  3351     03D4  2BD6               	goto	u1653
  3352     03D5                     u1652:
  3353     03D5  07C5               	addwf	??_BMP085_ReadPressure+2,f
  3354     03D6                     u1653:
  3355     03D6  084A               	movf	??_BMP085_ReadPressure+7,w
  3356     03D7  1803               	skipnc
  3357     03D8  0A4A               	incf	??_BMP085_ReadPressure+7,w
  3358     03D9  07C6               	addwf	??_BMP085_ReadPressure+3,f
  3359     03DA  0846               	movf	??_BMP085_ReadPressure+3,w
  3360     03DB  00F7               	movwf	___aldiv@dividend+3
  3361     03DC  0845               	movf	??_BMP085_ReadPressure+2,w
  3362     03DD  00F6               	movwf	___aldiv@dividend+2
  3363     03DE  0844               	movf	??_BMP085_ReadPressure+1,w
  3364     03DF  00F5               	movwf	___aldiv@dividend+1
  3365     03E0  0843               	movf	??_BMP085_ReadPressure,w
  3366     03E1  00F4               	movwf	___aldiv@dividend
  3367     03E2  120A  158A  2551  120A  118A  	fcall	___aldiv
  3368     03E7  0873               	movf	?___aldiv+3,w
  3369     03E8  1683               	bsf	3,5	;RP0=1, select bank1
  3370     03E9  1303               	bcf	3,6	;RP1=0, select bank1
  3371     03EA  00AB               	movwf	(BMP085_ReadPressure@B3+3)^(0+128)
  3372     03EB  0872               	movf	?___aldiv+2,w
  3373     03EC  00AA               	movwf	(BMP085_ReadPressure@B3+2)^(0+128)
  3374     03ED  0871               	movf	?___aldiv+1,w
  3375     03EE  00A9               	movwf	(BMP085_ReadPressure@B3+1)^(0+128)
  3376     03EF  0870               	movf	?___aldiv,w
  3377     03F0  00A8               	movwf	BMP085_ReadPressure@B3^(0+128)
  3378     03F1                     l1766:
  3379                           
  3380                           ;BMP085.c: 131:     X1 = (ac3 * B6) >> 13;
  3381     03F1  086A               	movf	_ac3^(0+128),w
  3382     03F2  00F0               	movwf	___lmul@multiplier
  3383     03F3  086B               	movf	(_ac3+1)^(0+128),w
  3384     03F4  00F1               	movwf	___lmul@multiplier+1
  3385     03F5  3000               	movlw	0
  3386     03F6  1BF1               	btfsc	___lmul@multiplier+1,7
  3387     03F7  30FF               	movlw	255
  3388     03F8  00F2               	movwf	___lmul@multiplier+2
  3389     03F9  00F3               	movwf	___lmul@multiplier+3
  3390     03FA  084F               	movf	(BMP085_ReadPressure@B6+3)^(0+128),w
  3391     03FB  00F7               	movwf	___lmul@multiplicand+3
  3392     03FC  084E               	movf	(BMP085_ReadPressure@B6+2)^(0+128),w
  3393     03FD  00F6               	movwf	___lmul@multiplicand+2
  3394     03FE  084D               	movf	(BMP085_ReadPressure@B6+1)^(0+128),w
  3395     03FF  00F5               	movwf	___lmul@multiplicand+1
  3396     0400  084C               	movf	BMP085_ReadPressure@B6^(0+128),w
  3397     0401  00F4               	movwf	___lmul@multiplicand
  3398     0402  120A  158A  235B  120A  118A  	fcall	___lmul
  3399     0407  0870               	movf	?___lmul,w
  3400     0408  1283               	bcf	3,5	;RP0=0, select bank0
  3401     0409  1303               	bcf	3,6	;RP1=0, select bank0
  3402     040A  00C3               	movwf	??_BMP085_ReadPressure
  3403     040B  0871               	movf	?___lmul+1,w
  3404     040C  00C4               	movwf	??_BMP085_ReadPressure+1
  3405     040D  0872               	movf	?___lmul+2,w
  3406     040E  00C5               	movwf	??_BMP085_ReadPressure+2
  3407     040F  0873               	movf	?___lmul+3,w
  3408     0410  00C6               	movwf	??_BMP085_ReadPressure+3
  3409     0411  300D               	movlw	13
  3410     0412  00C7               	movwf	??_BMP085_ReadPressure+4
  3411     0413                     u1665:
  3412     0413  0D46               	rlf	??_BMP085_ReadPressure+3,w
  3413     0414  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  3414     0415  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  3415     0416  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  3416     0417  0CC3               	rrf	??_BMP085_ReadPressure,f
  3417     0418                     u1660:
  3418     0418  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  3419     0419  2C13               	goto	u1665
  3420     041A  0846               	movf	??_BMP085_ReadPressure+3,w
  3421     041B  1683               	bsf	3,5	;RP0=1, select bank1
  3422     041C  1303               	bcf	3,6	;RP1=0, select bank1
  3423     041D  00C7               	movwf	(BMP085_ReadPressure@X1+3)^(0+128)
  3424     041E  1283               	bcf	3,5	;RP0=0, select bank0
  3425     041F  1303               	bcf	3,6	;RP1=0, select bank0
  3426     0420  0845               	movf	??_BMP085_ReadPressure+2,w
  3427     0421  1683               	bsf	3,5	;RP0=1, select bank1
  3428     0422  1303               	bcf	3,6	;RP1=0, select bank1
  3429     0423  00C6               	movwf	(BMP085_ReadPressure@X1+2)^(0+128)
  3430     0424  1283               	bcf	3,5	;RP0=0, select bank0
  3431     0425  1303               	bcf	3,6	;RP1=0, select bank0
  3432     0426  0844               	movf	??_BMP085_ReadPressure+1,w
  3433     0427  1683               	bsf	3,5	;RP0=1, select bank1
  3434     0428  1303               	bcf	3,6	;RP1=0, select bank1
  3435     0429  00C5               	movwf	(BMP085_ReadPressure@X1+1)^(0+128)
  3436     042A  1283               	bcf	3,5	;RP0=0, select bank0
  3437     042B  1303               	bcf	3,6	;RP1=0, select bank0
  3438     042C  0843               	movf	??_BMP085_ReadPressure,w
  3439     042D  1683               	bsf	3,5	;RP0=1, select bank1
  3440     042E  1303               	bcf	3,6	;RP1=0, select bank1
  3441     042F  00C4               	movwf	BMP085_ReadPressure@X1^(0+128)
  3442     0430                     l1768:
  3443                           
  3444                           ;BMP085.c: 132:     X2 = (b1 * ((B6 * B6) >> 12)) >> 16;
  3445     0430  084F               	movf	(BMP085_ReadPressure@B6+3)^(0+128),w
  3446     0431  00F7               	movwf	___lmul@multiplicand+3
  3447     0432  084E               	movf	(BMP085_ReadPressure@B6+2)^(0+128),w
  3448     0433  00F6               	movwf	___lmul@multiplicand+2
  3449     0434  084D               	movf	(BMP085_ReadPressure@B6+1)^(0+128),w
  3450     0435  00F5               	movwf	___lmul@multiplicand+1
  3451     0436  084C               	movf	BMP085_ReadPressure@B6^(0+128),w
  3452     0437  00F4               	movwf	___lmul@multiplicand
  3453     0438  084F               	movf	(BMP085_ReadPressure@B6+3)^(0+128),w
  3454     0439  00F3               	movwf	___lmul@multiplier+3
  3455     043A  084E               	movf	(BMP085_ReadPressure@B6+2)^(0+128),w
  3456     043B  00F2               	movwf	___lmul@multiplier+2
  3457     043C  084D               	movf	(BMP085_ReadPressure@B6+1)^(0+128),w
  3458     043D  00F1               	movwf	___lmul@multiplier+1
  3459     043E  084C               	movf	BMP085_ReadPressure@B6^(0+128),w
  3460     043F  00F0               	movwf	___lmul@multiplier
  3461     0440  120A  158A  235B  120A  118A  	fcall	___lmul
  3462     0445  0870               	movf	?___lmul,w
  3463     0446  1283               	bcf	3,5	;RP0=0, select bank0
  3464     0447  1303               	bcf	3,6	;RP1=0, select bank0
  3465     0448  00C3               	movwf	??_BMP085_ReadPressure
  3466     0449  0871               	movf	?___lmul+1,w
  3467     044A  00C4               	movwf	??_BMP085_ReadPressure+1
  3468     044B  0872               	movf	?___lmul+2,w
  3469     044C  00C5               	movwf	??_BMP085_ReadPressure+2
  3470     044D  0873               	movf	?___lmul+3,w
  3471     044E  00C6               	movwf	??_BMP085_ReadPressure+3
  3472     044F  300C               	movlw	12
  3473     0450  00C7               	movwf	??_BMP085_ReadPressure+4
  3474     0451                     u1675:
  3475     0451  0D46               	rlf	??_BMP085_ReadPressure+3,w
  3476     0452  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  3477     0453  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  3478     0454  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  3479     0455  0CC3               	rrf	??_BMP085_ReadPressure,f
  3480     0456                     u1670:
  3481     0456  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  3482     0457  2C51               	goto	u1675
  3483     0458  0846               	movf	??_BMP085_ReadPressure+3,w
  3484     0459  1683               	bsf	3,5	;RP0=1, select bank1
  3485     045A  1303               	bcf	3,6	;RP1=0, select bank1
  3486     045B  00BB               	movwf	(_BMP085_ReadPressure$1045+3)^(0+128)
  3487     045C  1283               	bcf	3,5	;RP0=0, select bank0
  3488     045D  1303               	bcf	3,6	;RP1=0, select bank0
  3489     045E  0845               	movf	??_BMP085_ReadPressure+2,w
  3490     045F  1683               	bsf	3,5	;RP0=1, select bank1
  3491     0460  1303               	bcf	3,6	;RP1=0, select bank1
  3492     0461  00BA               	movwf	(_BMP085_ReadPressure$1045+2)^(0+128)
  3493     0462  1283               	bcf	3,5	;RP0=0, select bank0
  3494     0463  1303               	bcf	3,6	;RP1=0, select bank0
  3495     0464  0844               	movf	??_BMP085_ReadPressure+1,w
  3496     0465  1683               	bsf	3,5	;RP0=1, select bank1
  3497     0466  1303               	bcf	3,6	;RP1=0, select bank1
  3498     0467  00B9               	movwf	(_BMP085_ReadPressure$1045+1)^(0+128)
  3499     0468  1283               	bcf	3,5	;RP0=0, select bank0
  3500     0469  1303               	bcf	3,6	;RP1=0, select bank0
  3501     046A  0843               	movf	??_BMP085_ReadPressure,w
  3502     046B  1683               	bsf	3,5	;RP0=1, select bank1
  3503     046C  1303               	bcf	3,6	;RP1=0, select bank1
  3504     046D  00B8               	movwf	_BMP085_ReadPressure$1045^(0+128)
  3505     046E                     l1770:
  3506                           
  3507                           ;BMP085.c: 132:     X2 = (b1 * ((B6 * B6) >> 12)) >> 16;
  3508     046E  0868               	movf	_b1^(0+128),w
  3509     046F  00F0               	movwf	___lmul@multiplier
  3510     0470  0869               	movf	(_b1+1)^(0+128),w
  3511     0471  00F1               	movwf	___lmul@multiplier+1
  3512     0472  3000               	movlw	0
  3513     0473  1BF1               	btfsc	___lmul@multiplier+1,7
  3514     0474  30FF               	movlw	255
  3515     0475  00F2               	movwf	___lmul@multiplier+2
  3516     0476  00F3               	movwf	___lmul@multiplier+3
  3517     0477  083B               	movf	(_BMP085_ReadPressure$1045+3)^(0+128),w
  3518     0478  00F7               	movwf	___lmul@multiplicand+3
  3519     0479  083A               	movf	(_BMP085_ReadPressure$1045+2)^(0+128),w
  3520     047A  00F6               	movwf	___lmul@multiplicand+2
  3521     047B  0839               	movf	(_BMP085_ReadPressure$1045+1)^(0+128),w
  3522     047C  00F5               	movwf	___lmul@multiplicand+1
  3523     047D  0838               	movf	_BMP085_ReadPressure$1045^(0+128),w
  3524     047E  00F4               	movwf	___lmul@multiplicand
  3525     047F  120A  158A  235B  120A  118A  	fcall	___lmul
  3526     0484  0870               	movf	?___lmul,w
  3527     0485  1283               	bcf	3,5	;RP0=0, select bank0
  3528     0486  1303               	bcf	3,6	;RP1=0, select bank0
  3529     0487  00C3               	movwf	??_BMP085_ReadPressure
  3530     0488  0871               	movf	?___lmul+1,w
  3531     0489  00C4               	movwf	??_BMP085_ReadPressure+1
  3532     048A  0872               	movf	?___lmul+2,w
  3533     048B  00C5               	movwf	??_BMP085_ReadPressure+2
  3534     048C  0873               	movf	?___lmul+3,w
  3535     048D  00C6               	movwf	??_BMP085_ReadPressure+3
  3536     048E  3010               	movlw	16
  3537     048F  00C7               	movwf	??_BMP085_ReadPressure+4
  3538     0490                     u1685:
  3539     0490  0D46               	rlf	??_BMP085_ReadPressure+3,w
  3540     0491  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  3541     0492  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  3542     0493  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  3543     0494  0CC3               	rrf	??_BMP085_ReadPressure,f
  3544     0495                     u1680:
  3545     0495  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  3546     0496  2C90               	goto	u1685
  3547     0497  0846               	movf	??_BMP085_ReadPressure+3,w
  3548     0498  1683               	bsf	3,5	;RP0=1, select bank1
  3549     0499  1303               	bcf	3,6	;RP1=0, select bank1
  3550     049A  00C3               	movwf	(BMP085_ReadPressure@X2+3)^(0+128)
  3551     049B  1283               	bcf	3,5	;RP0=0, select bank0
  3552     049C  1303               	bcf	3,6	;RP1=0, select bank0
  3553     049D  0845               	movf	??_BMP085_ReadPressure+2,w
  3554     049E  1683               	bsf	3,5	;RP0=1, select bank1
  3555     049F  1303               	bcf	3,6	;RP1=0, select bank1
  3556     04A0  00C2               	movwf	(BMP085_ReadPressure@X2+2)^(0+128)
  3557     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3558     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3559     04A3  0844               	movf	??_BMP085_ReadPressure+1,w
  3560     04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3561     04A5  1303               	bcf	3,6	;RP1=0, select bank1
  3562     04A6  00C1               	movwf	(BMP085_ReadPressure@X2+1)^(0+128)
  3563     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3564     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3565     04A9  0843               	movf	??_BMP085_ReadPressure,w
  3566     04AA  1683               	bsf	3,5	;RP0=1, select bank1
  3567     04AB  1303               	bcf	3,6	;RP1=0, select bank1
  3568     04AC  00C0               	movwf	BMP085_ReadPressure@X2^(0+128)
  3569     04AD                     l1772:
  3570                           
  3571                           ;BMP085.c: 133:     X3 = ((X1 + X2) + 2) >> 2;
  3572     04AD  3002               	movlw	2
  3573     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3574     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3575     04B0  00C3               	movwf	??_BMP085_ReadPressure
  3576     04B1  3000               	movlw	0
  3577     04B2  00C4               	movwf	??_BMP085_ReadPressure+1
  3578     04B3  3000               	movlw	0
  3579     04B4  00C5               	movwf	??_BMP085_ReadPressure+2
  3580     04B5  3000               	movlw	0
  3581     04B6  00C6               	movwf	??_BMP085_ReadPressure+3
  3582     04B7  1683               	bsf	3,5	;RP0=1, select bank1
  3583     04B8  1303               	bcf	3,6	;RP1=0, select bank1
  3584     04B9  0844               	movf	BMP085_ReadPressure@X1^(0+128),w
  3585     04BA  0740               	addwf	BMP085_ReadPressure@X2^(0+128),w
  3586     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  3587     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  3588     04BD  00C7               	movwf	??_BMP085_ReadPressure+4
  3589     04BE  3000               	movlw	0
  3590     04BF  1803               	skipnc
  3591     04C0  3001               	movlw	1
  3592     04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3593     04C2  1303               	bcf	3,6	;RP1=0, select bank1
  3594     04C3  0745               	addwf	(BMP085_ReadPressure@X1+1)^(0+128),w
  3595     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3596     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3597     04C6  01C9               	clrf	??_BMP085_ReadPressure+6
  3598     04C7  1803               	skipnc
  3599     04C8  0AC9               	incf	??_BMP085_ReadPressure+6,f
  3600     04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3601     04CA  1303               	bcf	3,6	;RP1=0, select bank1
  3602     04CB  0741               	addwf	(BMP085_ReadPressure@X2+1)^(0+128),w
  3603     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3604     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3605     04CE  00C8               	movwf	??_BMP085_ReadPressure+5
  3606     04CF  1803               	skipnc
  3607     04D0  0AC9               	incf	??_BMP085_ReadPressure+6,f
  3608     04D1  1683               	bsf	3,5	;RP0=1, select bank1
  3609     04D2  1303               	bcf	3,6	;RP1=0, select bank1
  3610     04D3  0846               	movf	(BMP085_ReadPressure@X1+2)^(0+128),w
  3611     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  3612     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  3613     04D6  0749               	addwf	??_BMP085_ReadPressure+6,w
  3614     04D7  01CA               	clrf	??_BMP085_ReadPressure+7
  3615     04D8  1803               	skipnc
  3616     04D9  0ACA               	incf	??_BMP085_ReadPressure+7,f
  3617     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3618     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3619     04DC  0742               	addwf	(BMP085_ReadPressure@X2+2)^(0+128),w
  3620     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  3621     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  3622     04DF  00C9               	movwf	??_BMP085_ReadPressure+6
  3623     04E0  1803               	skipnc
  3624     04E1  0ACA               	incf	??_BMP085_ReadPressure+7,f
  3625     04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3626     04E3  1303               	bcf	3,6	;RP1=0, select bank1
  3627     04E4  0847               	movf	(BMP085_ReadPressure@X1+3)^(0+128),w
  3628     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3629     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  3630     04E7  074A               	addwf	??_BMP085_ReadPressure+7,w
  3631     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3632     04E9  1303               	bcf	3,6	;RP1=0, select bank1
  3633     04EA  0743               	addwf	(BMP085_ReadPressure@X2+3)^(0+128),w
  3634     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  3635     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  3636     04ED  00CA               	movwf	??_BMP085_ReadPressure+7
  3637     04EE  0847               	movf	??_BMP085_ReadPressure+4,w
  3638     04EF  07C3               	addwf	??_BMP085_ReadPressure,f
  3639     04F0  0848               	movf	??_BMP085_ReadPressure+5,w
  3640     04F1  1803               	skipnc
  3641     04F2  0F48               	incfsz	??_BMP085_ReadPressure+5,w
  3642     04F3  2CF5               	goto	u1690
  3643     04F4  2CF6               	goto	u1691
  3644     04F5                     u1690:
  3645     04F5  07C4               	addwf	??_BMP085_ReadPressure+1,f
  3646     04F6                     u1691:
  3647     04F6  0849               	movf	??_BMP085_ReadPressure+6,w
  3648     04F7  1803               	skipnc
  3649     04F8  0F49               	incfsz	??_BMP085_ReadPressure+6,w
  3650     04F9  2CFB               	goto	u1692
  3651     04FA  2CFC               	goto	u1693
  3652     04FB                     u1692:
  3653     04FB  07C5               	addwf	??_BMP085_ReadPressure+2,f
  3654     04FC                     u1693:
  3655     04FC  084A               	movf	??_BMP085_ReadPressure+7,w
  3656     04FD  1803               	skipnc
  3657     04FE  0A4A               	incf	??_BMP085_ReadPressure+7,w
  3658     04FF  07C6               	addwf	??_BMP085_ReadPressure+3,f
  3659     0500  3002               	movlw	2
  3660     0501  00CB               	movwf	??_BMP085_ReadPressure+8
  3661     0502                     u1705:
  3662     0502  0D46               	rlf	??_BMP085_ReadPressure+3,w
  3663     0503  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  3664     0504  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  3665     0505  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  3666     0506  0CC3               	rrf	??_BMP085_ReadPressure,f
  3667     0507                     u1700:
  3668     0507  0BCB               	decfsz	??_BMP085_ReadPressure+8,f
  3669     0508  2D02               	goto	u1705
  3670     0509  0846               	movf	??_BMP085_ReadPressure+3,w
  3671     050A  1683               	bsf	3,5	;RP0=1, select bank1
  3672     050B  1303               	bcf	3,6	;RP1=0, select bank1
  3673     050C  00B7               	movwf	(BMP085_ReadPressure@X3+3)^(0+128)
  3674     050D  1283               	bcf	3,5	;RP0=0, select bank0
  3675     050E  1303               	bcf	3,6	;RP1=0, select bank0
  3676     050F  0845               	movf	??_BMP085_ReadPressure+2,w
  3677     0510  1683               	bsf	3,5	;RP0=1, select bank1
  3678     0511  1303               	bcf	3,6	;RP1=0, select bank1
  3679     0512  00B6               	movwf	(BMP085_ReadPressure@X3+2)^(0+128)
  3680     0513  1283               	bcf	3,5	;RP0=0, select bank0
  3681     0514  1303               	bcf	3,6	;RP1=0, select bank0
  3682     0515  0844               	movf	??_BMP085_ReadPressure+1,w
  3683     0516  1683               	bsf	3,5	;RP0=1, select bank1
  3684     0517  1303               	bcf	3,6	;RP1=0, select bank1
  3685     0518  00B5               	movwf	(BMP085_ReadPressure@X3+1)^(0+128)
  3686     0519  1283               	bcf	3,5	;RP0=0, select bank0
  3687     051A  1303               	bcf	3,6	;RP1=0, select bank0
  3688     051B  0843               	movf	??_BMP085_ReadPressure,w
  3689     051C  1683               	bsf	3,5	;RP0=1, select bank1
  3690     051D  1303               	bcf	3,6	;RP1=0, select bank1
  3691     051E  00B4               	movwf	BMP085_ReadPressure@X3^(0+128)
  3692     051F                     l1774:
  3693                           
  3694                           ;BMP085.c: 134:     B4 = (ac4 * (uint32_t)(X3 + 32768)) >> 15;
  3695     051F  3000               	movlw	0
  3696     0520  1283               	bcf	3,5	;RP0=0, select bank0
  3697     0521  1303               	bcf	3,6	;RP1=0, select bank0
  3698     0522  00C3               	movwf	??_BMP085_ReadPressure
  3699     0523  3080               	movlw	128
  3700     0524  00C4               	movwf	??_BMP085_ReadPressure+1
  3701     0525  3000               	movlw	0
  3702     0526  00C5               	movwf	??_BMP085_ReadPressure+2
  3703     0527  3000               	movlw	0
  3704     0528  00C6               	movwf	??_BMP085_ReadPressure+3
  3705     0529  1683               	bsf	3,5	;RP0=1, select bank1
  3706     052A  1303               	bcf	3,6	;RP1=0, select bank1
  3707     052B  0834               	movf	BMP085_ReadPressure@X3^(0+128),w
  3708     052C  1283               	bcf	3,5	;RP0=0, select bank0
  3709     052D  1303               	bcf	3,6	;RP1=0, select bank0
  3710     052E  07C3               	addwf	??_BMP085_ReadPressure,f
  3711     052F  1683               	bsf	3,5	;RP0=1, select bank1
  3712     0530  1303               	bcf	3,6	;RP1=0, select bank1
  3713     0531  0835               	movf	(BMP085_ReadPressure@X3+1)^(0+128),w
  3714     0532  1803               	skipnc
  3715     0533  0F35               	incfsz	(BMP085_ReadPressure@X3+1)^(0+128),w
  3716     0534  2D36               	goto	u1710
  3717     0535  2D39               	goto	u1711
  3718     0536                     u1710:
  3719     0536  1283               	bcf	3,5	;RP0=0, select bank0
  3720     0537  1303               	bcf	3,6	;RP1=0, select bank0
  3721     0538  07C4               	addwf	??_BMP085_ReadPressure+1,f
  3722     0539                     u1711:
  3723     0539  1683               	bsf	3,5	;RP0=1, select bank1
  3724     053A  1303               	bcf	3,6	;RP1=0, select bank1
  3725     053B  0836               	movf	(BMP085_ReadPressure@X3+2)^(0+128),w
  3726     053C  1803               	skipnc
  3727     053D  0F36               	incfsz	(BMP085_ReadPressure@X3+2)^(0+128),w
  3728     053E  2D40               	goto	u1712
  3729     053F  2D43               	goto	u1713
  3730     0540                     u1712:
  3731     0540  1283               	bcf	3,5	;RP0=0, select bank0
  3732     0541  1303               	bcf	3,6	;RP1=0, select bank0
  3733     0542  07C5               	addwf	??_BMP085_ReadPressure+2,f
  3734     0543                     u1713:
  3735     0543  1683               	bsf	3,5	;RP0=1, select bank1
  3736     0544  1303               	bcf	3,6	;RP1=0, select bank1
  3737     0545  0837               	movf	(BMP085_ReadPressure@X3+3)^(0+128),w
  3738     0546  1803               	skipnc
  3739     0547  0A37               	incf	(BMP085_ReadPressure@X3+3)^(0+128),w
  3740     0548  1283               	bcf	3,5	;RP0=0, select bank0
  3741     0549  1303               	bcf	3,6	;RP1=0, select bank0
  3742     054A  07C6               	addwf	??_BMP085_ReadPressure+3,f
  3743     054B  0846               	movf	??_BMP085_ReadPressure+3,w
  3744     054C  00F3               	movwf	___lmul@multiplier+3
  3745     054D  0845               	movf	??_BMP085_ReadPressure+2,w
  3746     054E  00F2               	movwf	___lmul@multiplier+2
  3747     054F  0844               	movf	??_BMP085_ReadPressure+1,w
  3748     0550  00F1               	movwf	___lmul@multiplier+1
  3749     0551  0843               	movf	??_BMP085_ReadPressure,w
  3750     0552  00F0               	movwf	___lmul@multiplier
  3751     0553  1683               	bsf	3,5	;RP0=1, select bank1
  3752     0554  1303               	bcf	3,6	;RP1=0, select bank1
  3753     0555  085E               	movf	_ac4^(0+128),w
  3754     0556  00F4               	movwf	___lmul@multiplicand
  3755     0557  085F               	movf	(_ac4+1)^(0+128),w
  3756     0558  00F5               	movwf	___lmul@multiplicand+1
  3757     0559  01F6               	clrf	___lmul@multiplicand+2
  3758     055A  01F7               	clrf	___lmul@multiplicand+3
  3759     055B  120A  158A  235B  120A  118A  	fcall	___lmul
  3760     0560  0870               	movf	?___lmul,w
  3761     0561  1283               	bcf	3,5	;RP0=0, select bank0
  3762     0562  1303               	bcf	3,6	;RP1=0, select bank0
  3763     0563  00C7               	movwf	??_BMP085_ReadPressure+4
  3764     0564  0871               	movf	?___lmul+1,w
  3765     0565  00C8               	movwf	??_BMP085_ReadPressure+5
  3766     0566  0872               	movf	?___lmul+2,w
  3767     0567  00C9               	movwf	??_BMP085_ReadPressure+6
  3768     0568  0873               	movf	?___lmul+3,w
  3769     0569  00CA               	movwf	??_BMP085_ReadPressure+7
  3770     056A  300F               	movlw	15
  3771     056B                     u1725:
  3772     056B  1003               	clrc
  3773     056C  0CCA               	rrf	??_BMP085_ReadPressure+7,f
  3774     056D  0CC9               	rrf	??_BMP085_ReadPressure+6,f
  3775     056E  0CC8               	rrf	??_BMP085_ReadPressure+5,f
  3776     056F  0CC7               	rrf	??_BMP085_ReadPressure+4,f
  3777     0570                     u1720:
  3778     0570  3EFF               	addlw	-1
  3779     0571  1D03               	skipz
  3780     0572  2D6B               	goto	u1725
  3781     0573  084A               	movf	??_BMP085_ReadPressure+7,w
  3782     0574  1683               	bsf	3,5	;RP0=1, select bank1
  3783     0575  1303               	bcf	3,6	;RP1=0, select bank1
  3784     0576  00B3               	movwf	(BMP085_ReadPressure@B4+3)^(0+128)
  3785     0577  1283               	bcf	3,5	;RP0=0, select bank0
  3786     0578  1303               	bcf	3,6	;RP1=0, select bank0
  3787     0579  0849               	movf	??_BMP085_ReadPressure+6,w
  3788     057A  1683               	bsf	3,5	;RP0=1, select bank1
  3789     057B  1303               	bcf	3,6	;RP1=0, select bank1
  3790     057C  00B2               	movwf	(BMP085_ReadPressure@B4+2)^(0+128)
  3791     057D  1283               	bcf	3,5	;RP0=0, select bank0
  3792     057E  1303               	bcf	3,6	;RP1=0, select bank0
  3793     057F  0848               	movf	??_BMP085_ReadPressure+5,w
  3794     0580  1683               	bsf	3,5	;RP0=1, select bank1
  3795     0581  1303               	bcf	3,6	;RP1=0, select bank1
  3796     0582  00B1               	movwf	(BMP085_ReadPressure@B4+1)^(0+128)
  3797     0583  1283               	bcf	3,5	;RP0=0, select bank0
  3798     0584  1303               	bcf	3,6	;RP1=0, select bank0
  3799     0585  0847               	movf	??_BMP085_ReadPressure+4,w
  3800     0586  1683               	bsf	3,5	;RP0=1, select bank1
  3801     0587  1303               	bcf	3,6	;RP1=0, select bank1
  3802     0588  00B0               	movwf	BMP085_ReadPressure@B4^(0+128)
  3803     0589                     l1776:
  3804                           
  3805                           ;BMP085.c: 135:     B7 = ((uint32_t)UP - B3) * (50000U >> oversampling);
  3806     0589  0824               	movf	BMP085_ReadPressure@UP^(0+128),w
  3807     058A  1283               	bcf	3,5	;RP0=0, select bank0
  3808     058B  1303               	bcf	3,6	;RP1=0, select bank0
  3809     058C  00C3               	movwf	??_BMP085_ReadPressure
  3810     058D  1683               	bsf	3,5	;RP0=1, select bank1
  3811     058E  1303               	bcf	3,6	;RP1=0, select bank1
  3812     058F  0825               	movf	(BMP085_ReadPressure@UP+1)^(0+128),w
  3813     0590  1283               	bcf	3,5	;RP0=0, select bank0
  3814     0591  1303               	bcf	3,6	;RP1=0, select bank0
  3815     0592  00C4               	movwf	??_BMP085_ReadPressure+1
  3816     0593  1683               	bsf	3,5	;RP0=1, select bank1
  3817     0594  1303               	bcf	3,6	;RP1=0, select bank1
  3818     0595  0826               	movf	(BMP085_ReadPressure@UP+2)^(0+128),w
  3819     0596  1283               	bcf	3,5	;RP0=0, select bank0
  3820     0597  1303               	bcf	3,6	;RP1=0, select bank0
  3821     0598  00C5               	movwf	??_BMP085_ReadPressure+2
  3822     0599  1683               	bsf	3,5	;RP0=1, select bank1
  3823     059A  1303               	bcf	3,6	;RP1=0, select bank1
  3824     059B  0827               	movf	(BMP085_ReadPressure@UP+3)^(0+128),w
  3825     059C  1283               	bcf	3,5	;RP0=0, select bank0
  3826     059D  1303               	bcf	3,6	;RP1=0, select bank0
  3827     059E  00C6               	movwf	??_BMP085_ReadPressure+3
  3828     059F  1683               	bsf	3,5	;RP0=1, select bank1
  3829     05A0  1303               	bcf	3,6	;RP1=0, select bank1
  3830     05A1  0828               	movf	BMP085_ReadPressure@B3^(0+128),w
  3831     05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3832     05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3833     05A4  02C3               	subwf	??_BMP085_ReadPressure,f
  3834     05A5  1683               	bsf	3,5	;RP0=1, select bank1
  3835     05A6  1303               	bcf	3,6	;RP1=0, select bank1
  3836     05A7  0829               	movf	(BMP085_ReadPressure@B3+1)^(0+128),w
  3837     05A8  1C03               	skipc
  3838     05A9  0F29               	incfsz	(BMP085_ReadPressure@B3+1)^(0+128),w
  3839     05AA  2DAC               	goto	u1731
  3840     05AB  2DAF               	goto	u1732
  3841     05AC                     u1731:
  3842     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  3843     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  3844     05AE  02C4               	subwf	??_BMP085_ReadPressure+1,f
  3845     05AF                     u1732:
  3846     05AF  1683               	bsf	3,5	;RP0=1, select bank1
  3847     05B0  1303               	bcf	3,6	;RP1=0, select bank1
  3848     05B1  082A               	movf	(BMP085_ReadPressure@B3+2)^(0+128),w
  3849     05B2  1C03               	skipc
  3850     05B3  0F2A               	incfsz	(BMP085_ReadPressure@B3+2)^(0+128),w
  3851     05B4  2DB6               	goto	u1733
  3852     05B5  2DB9               	goto	u1734
  3853     05B6                     u1733:
  3854     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3855     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3856     05B8  02C5               	subwf	??_BMP085_ReadPressure+2,f
  3857     05B9                     u1734:
  3858     05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3859     05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3860     05BB  082B               	movf	(BMP085_ReadPressure@B3+3)^(0+128),w
  3861     05BC  1C03               	skipc
  3862     05BD  0F2B               	incfsz	(BMP085_ReadPressure@B3+3)^(0+128),w
  3863     05BE  2DC0               	goto	u1735
  3864     05BF  2DC3               	goto	u1736
  3865     05C0                     u1735:
  3866     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3867     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3868     05C2  02C6               	subwf	??_BMP085_ReadPressure+3,f
  3869     05C3                     u1736:
  3870     05C3  1683               	bsf	3,5	;RP0=1, select bank1
  3871     05C4  1303               	bcf	3,6	;RP1=0, select bank1
  3872     05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3873     05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3874     05C7  0846               	movf	??_BMP085_ReadPressure+3,w
  3875     05C8  00F3               	movwf	___lmul@multiplier+3
  3876     05C9  0845               	movf	??_BMP085_ReadPressure+2,w
  3877     05CA  00F2               	movwf	___lmul@multiplier+2
  3878     05CB  0844               	movf	??_BMP085_ReadPressure+1,w
  3879     05CC  00F1               	movwf	___lmul@multiplier+1
  3880     05CD  0843               	movf	??_BMP085_ReadPressure,w
  3881     05CE  00F0               	movwf	___lmul@multiplier
  3882     05CF  3050               	movlw	80
  3883     05D0  00C7               	movwf	??_BMP085_ReadPressure+4
  3884     05D1  30C3               	movlw	195
  3885     05D2  00C8               	movwf	??_BMP085_ReadPressure+5
  3886     05D3  1683               	bsf	3,5	;RP0=1, select bank1
  3887     05D4  1303               	bcf	3,6	;RP1=0, select bank1
  3888     05D5  0A6E               	incf	_oversampling^(0+128),w
  3889     05D6  2DDC               	goto	u1744
  3890     05D7                     u1745:
  3891     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3892     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3893     05D9  1003               	clrc
  3894     05DA  0CC8               	rrf	??_BMP085_ReadPressure+5,f
  3895     05DB  0CC7               	rrf	??_BMP085_ReadPressure+4,f
  3896     05DC                     u1744:
  3897     05DC  3EFF               	addlw	-1
  3898     05DD  1D03               	skipz
  3899     05DE  2DD7               	goto	u1745
  3900     05DF  0847               	movf	??_BMP085_ReadPressure+4,w
  3901     05E0  00F4               	movwf	___lmul@multiplicand
  3902     05E1  0848               	movf	??_BMP085_ReadPressure+5,w
  3903     05E2  00F5               	movwf	___lmul@multiplicand+1
  3904     05E3  01F6               	clrf	___lmul@multiplicand+2
  3905     05E4  01F7               	clrf	___lmul@multiplicand+3
  3906     05E5  120A  158A  235B  120A  118A  	fcall	___lmul
  3907     05EA  0873               	movf	?___lmul+3,w
  3908     05EB  1683               	bsf	3,5	;RP0=1, select bank1
  3909     05EC  1303               	bcf	3,6	;RP1=0, select bank1
  3910     05ED  00BF               	movwf	(BMP085_ReadPressure@B7+3)^(0+128)
  3911     05EE  0872               	movf	?___lmul+2,w
  3912     05EF  00BE               	movwf	(BMP085_ReadPressure@B7+2)^(0+128)
  3913     05F0  0871               	movf	?___lmul+1,w
  3914     05F1  00BD               	movwf	(BMP085_ReadPressure@B7+1)^(0+128)
  3915     05F2  0870               	movf	?___lmul,w
  3916     05F3  00BC               	movwf	BMP085_ReadPressure@B7^(0+128)
  3917     05F4                     l1778:
  3918                           
  3919                           ;BMP085.c: 137:     if (B7 < 0x80000000U) {
  3920     05F4  3080               	movlw	128
  3921     05F5  023F               	subwf	(BMP085_ReadPressure@B7+3)^(0+128),w
  3922     05F6  1D03               	skipz
  3923     05F7  2E04               	goto	u1753
  3924     05F8  3000               	movlw	0
  3925     05F9  023E               	subwf	(BMP085_ReadPressure@B7+2)^(0+128),w
  3926     05FA  1D03               	skipz
  3927     05FB  2E04               	goto	u1753
  3928     05FC  3000               	movlw	0
  3929     05FD  023D               	subwf	(BMP085_ReadPressure@B7+1)^(0+128),w
  3930     05FE  1D03               	skipz
  3931     05FF  2E04               	goto	u1753
  3932     0600  3000               	movlw	0
  3933     0601  023C               	subwf	BMP085_ReadPressure@B7^(0+128),w
  3934     0602  1D03               	skipz
  3935     0603  2E04               	goto	u1753
  3936     0604                     u1753:
  3937     0604  1803               	btfsc	3,0
  3938     0605  2E07               	goto	u1751
  3939     0606  2E08               	goto	u1750
  3940     0607                     u1751:
  3941     0607  2E2B               	goto	l1782
  3942     0608                     u1750:
  3943     0608                     l1780:
  3944                           
  3945                           ;BMP085.c: 138:         p = (int32_t)((B7 * 2) / B4);
  3946     0608  1683               	bsf	3,5	;RP0=1, select bank1
  3947     0609  1303               	bcf	3,6	;RP1=0, select bank1
  3948     060A  0833               	movf	(BMP085_ReadPressure@B4+3)^(0+128),w
  3949     060B  00F3               	movwf	___lldiv@divisor+3
  3950     060C  0832               	movf	(BMP085_ReadPressure@B4+2)^(0+128),w
  3951     060D  00F2               	movwf	___lldiv@divisor+2
  3952     060E  0831               	movf	(BMP085_ReadPressure@B4+1)^(0+128),w
  3953     060F  00F1               	movwf	___lldiv@divisor+1
  3954     0610  0830               	movf	BMP085_ReadPressure@B4^(0+128),w
  3955     0611  00F0               	movwf	___lldiv@divisor
  3956     0612  1003               	clrc
  3957     0613  0D3C               	rlf	BMP085_ReadPressure@B7^(0+128),w
  3958     0614  00F4               	movwf	___lldiv@dividend
  3959     0615  0D3D               	rlf	(BMP085_ReadPressure@B7+1)^(0+128),w
  3960     0616  00F5               	movwf	___lldiv@dividend+1
  3961     0617  0D3E               	rlf	(BMP085_ReadPressure@B7+2)^(0+128),w
  3962     0618  00F6               	movwf	___lldiv@dividend+2
  3963     0619  0D3F               	rlf	(BMP085_ReadPressure@B7+3)^(0+128),w
  3964     061A  00F7               	movwf	___lldiv@dividend+3
  3965     061B  120A  158A  23EB  120A  118A  	fcall	___lldiv
  3966     0620  0873               	movf	?___lldiv+3,w
  3967     0621  1683               	bsf	3,5	;RP0=1, select bank1
  3968     0622  1303               	bcf	3,6	;RP1=0, select bank1
  3969     0623  00CB               	movwf	(BMP085_ReadPressure@p+3)^(0+128)
  3970     0624  0872               	movf	?___lldiv+2,w
  3971     0625  00CA               	movwf	(BMP085_ReadPressure@p+2)^(0+128)
  3972     0626  0871               	movf	?___lldiv+1,w
  3973     0627  00C9               	movwf	(BMP085_ReadPressure@p+1)^(0+128)
  3974     0628  0870               	movf	?___lldiv,w
  3975     0629  00C8               	movwf	BMP085_ReadPressure@p^(0+128)
  3976                           
  3977                           ;BMP085.c: 139:         } else {
  3978     062A  2E4D               	goto	l170
  3979     062B                     l1782:
  3980                           
  3981                           ;BMP085.c: 140:         p = (int32_t)((B7 / B4) * 2);
  3982     062B  1683               	bsf	3,5	;RP0=1, select bank1
  3983     062C  1303               	bcf	3,6	;RP1=0, select bank1
  3984     062D  0833               	movf	(BMP085_ReadPressure@B4+3)^(0+128),w
  3985     062E  00F3               	movwf	___lldiv@divisor+3
  3986     062F  0832               	movf	(BMP085_ReadPressure@B4+2)^(0+128),w
  3987     0630  00F2               	movwf	___lldiv@divisor+2
  3988     0631  0831               	movf	(BMP085_ReadPressure@B4+1)^(0+128),w
  3989     0632  00F1               	movwf	___lldiv@divisor+1
  3990     0633  0830               	movf	BMP085_ReadPressure@B4^(0+128),w
  3991     0634  00F0               	movwf	___lldiv@divisor
  3992     0635  083F               	movf	(BMP085_ReadPressure@B7+3)^(0+128),w
  3993     0636  00F7               	movwf	___lldiv@dividend+3
  3994     0637  083E               	movf	(BMP085_ReadPressure@B7+2)^(0+128),w
  3995     0638  00F6               	movwf	___lldiv@dividend+2
  3996     0639  083D               	movf	(BMP085_ReadPressure@B7+1)^(0+128),w
  3997     063A  00F5               	movwf	___lldiv@dividend+1
  3998     063B  083C               	movf	BMP085_ReadPressure@B7^(0+128),w
  3999     063C  00F4               	movwf	___lldiv@dividend
  4000     063D  120A  158A  23EB  120A  118A  	fcall	___lldiv
  4001     0642  1003               	clrc
  4002     0643  0D70               	rlf	?___lldiv,w
  4003     0644  1683               	bsf	3,5	;RP0=1, select bank1
  4004     0645  1303               	bcf	3,6	;RP1=0, select bank1
  4005     0646  00C8               	movwf	BMP085_ReadPressure@p^(0+128)
  4006     0647  0D71               	rlf	?___lldiv+1,w
  4007     0648  00C9               	movwf	(BMP085_ReadPressure@p+1)^(0+128)
  4008     0649  0D72               	rlf	?___lldiv+2,w
  4009     064A  00CA               	movwf	(BMP085_ReadPressure@p+2)^(0+128)
  4010     064B  0D73               	rlf	?___lldiv+3,w
  4011     064C  00CB               	movwf	(BMP085_ReadPressure@p+3)^(0+128)
  4012     064D                     l170:	
  4013                           ;BMP085.c: 141:         }
  4014                           
  4015                           
  4016                           ;BMP085.c: 143:     X1 = (p >> 8) * (p >> 8);
  4017     064D  0848               	movf	BMP085_ReadPressure@p^(0+128),w
  4018     064E  1283               	bcf	3,5	;RP0=0, select bank0
  4019     064F  1303               	bcf	3,6	;RP1=0, select bank0
  4020     0650  00C3               	movwf	??_BMP085_ReadPressure
  4021     0651  1683               	bsf	3,5	;RP0=1, select bank1
  4022     0652  1303               	bcf	3,6	;RP1=0, select bank1
  4023     0653  0849               	movf	(BMP085_ReadPressure@p+1)^(0+128),w
  4024     0654  1283               	bcf	3,5	;RP0=0, select bank0
  4025     0655  1303               	bcf	3,6	;RP1=0, select bank0
  4026     0656  00C4               	movwf	??_BMP085_ReadPressure+1
  4027     0657  1683               	bsf	3,5	;RP0=1, select bank1
  4028     0658  1303               	bcf	3,6	;RP1=0, select bank1
  4029     0659  084A               	movf	(BMP085_ReadPressure@p+2)^(0+128),w
  4030     065A  1283               	bcf	3,5	;RP0=0, select bank0
  4031     065B  1303               	bcf	3,6	;RP1=0, select bank0
  4032     065C  00C5               	movwf	??_BMP085_ReadPressure+2
  4033     065D  1683               	bsf	3,5	;RP0=1, select bank1
  4034     065E  1303               	bcf	3,6	;RP1=0, select bank1
  4035     065F  084B               	movf	(BMP085_ReadPressure@p+3)^(0+128),w
  4036     0660  1283               	bcf	3,5	;RP0=0, select bank0
  4037     0661  1303               	bcf	3,6	;RP1=0, select bank0
  4038     0662  00C6               	movwf	??_BMP085_ReadPressure+3
  4039     0663  3008               	movlw	8
  4040     0664  00C7               	movwf	??_BMP085_ReadPressure+4
  4041     0665                     u1765:
  4042     0665  0D46               	rlf	??_BMP085_ReadPressure+3,w
  4043     0666  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  4044     0667  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  4045     0668  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  4046     0669  0CC3               	rrf	??_BMP085_ReadPressure,f
  4047     066A                     u1760:
  4048     066A  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  4049     066B  2E65               	goto	u1765
  4050     066C  0846               	movf	??_BMP085_ReadPressure+3,w
  4051     066D  00F3               	movwf	___lmul@multiplier+3
  4052     066E  0845               	movf	??_BMP085_ReadPressure+2,w
  4053     066F  00F2               	movwf	___lmul@multiplier+2
  4054     0670  0844               	movf	??_BMP085_ReadPressure+1,w
  4055     0671  00F1               	movwf	___lmul@multiplier+1
  4056     0672  0843               	movf	??_BMP085_ReadPressure,w
  4057     0673  00F0               	movwf	___lmul@multiplier
  4058     0674  1683               	bsf	3,5	;RP0=1, select bank1
  4059     0675  1303               	bcf	3,6	;RP1=0, select bank1
  4060     0676  0848               	movf	BMP085_ReadPressure@p^(0+128),w
  4061     0677  1283               	bcf	3,5	;RP0=0, select bank0
  4062     0678  1303               	bcf	3,6	;RP1=0, select bank0
  4063     0679  00C8               	movwf	??_BMP085_ReadPressure+5
  4064     067A  1683               	bsf	3,5	;RP0=1, select bank1
  4065     067B  1303               	bcf	3,6	;RP1=0, select bank1
  4066     067C  0849               	movf	(BMP085_ReadPressure@p+1)^(0+128),w
  4067     067D  1283               	bcf	3,5	;RP0=0, select bank0
  4068     067E  1303               	bcf	3,6	;RP1=0, select bank0
  4069     067F  00C9               	movwf	??_BMP085_ReadPressure+6
  4070     0680  1683               	bsf	3,5	;RP0=1, select bank1
  4071     0681  1303               	bcf	3,6	;RP1=0, select bank1
  4072     0682  084A               	movf	(BMP085_ReadPressure@p+2)^(0+128),w
  4073     0683  1283               	bcf	3,5	;RP0=0, select bank0
  4074     0684  1303               	bcf	3,6	;RP1=0, select bank0
  4075     0685  00CA               	movwf	??_BMP085_ReadPressure+7
  4076     0686  1683               	bsf	3,5	;RP0=1, select bank1
  4077     0687  1303               	bcf	3,6	;RP1=0, select bank1
  4078     0688  084B               	movf	(BMP085_ReadPressure@p+3)^(0+128),w
  4079     0689  1283               	bcf	3,5	;RP0=0, select bank0
  4080     068A  1303               	bcf	3,6	;RP1=0, select bank0
  4081     068B  00CB               	movwf	??_BMP085_ReadPressure+8
  4082     068C  3008               	movlw	8
  4083     068D  00CC               	movwf	??_BMP085_ReadPressure+9
  4084     068E                     u1775:
  4085     068E  0D4B               	rlf	??_BMP085_ReadPressure+8,w
  4086     068F  0CCB               	rrf	??_BMP085_ReadPressure+8,f
  4087     0690  0CCA               	rrf	??_BMP085_ReadPressure+7,f
  4088     0691  0CC9               	rrf	??_BMP085_ReadPressure+6,f
  4089     0692  0CC8               	rrf	??_BMP085_ReadPressure+5,f
  4090     0693                     u1770:
  4091     0693  0BCC               	decfsz	??_BMP085_ReadPressure+9,f
  4092     0694  2E8E               	goto	u1775
  4093     0695  084B               	movf	??_BMP085_ReadPressure+8,w
  4094     0696  00F7               	movwf	___lmul@multiplicand+3
  4095     0697  084A               	movf	??_BMP085_ReadPressure+7,w
  4096     0698  00F6               	movwf	___lmul@multiplicand+2
  4097     0699  0849               	movf	??_BMP085_ReadPressure+6,w
  4098     069A  00F5               	movwf	___lmul@multiplicand+1
  4099     069B  0848               	movf	??_BMP085_ReadPressure+5,w
  4100     069C  00F4               	movwf	___lmul@multiplicand
  4101     069D  120A  158A  235B  120A  118A  	fcall	___lmul
  4102     06A2  0873               	movf	?___lmul+3,w
  4103     06A3  1683               	bsf	3,5	;RP0=1, select bank1
  4104     06A4  1303               	bcf	3,6	;RP1=0, select bank1
  4105     06A5  00C7               	movwf	(BMP085_ReadPressure@X1+3)^(0+128)
  4106     06A6  0872               	movf	?___lmul+2,w
  4107     06A7  00C6               	movwf	(BMP085_ReadPressure@X1+2)^(0+128)
  4108     06A8  0871               	movf	?___lmul+1,w
  4109     06A9  00C5               	movwf	(BMP085_ReadPressure@X1+1)^(0+128)
  4110     06AA  0870               	movf	?___lmul,w
  4111     06AB  00C4               	movwf	BMP085_ReadPressure@X1^(0+128)
  4112                           
  4113                           ;BMP085.c: 144:     X1 = (X1 * 3038) >> 16;
  4114     06AC  0847               	movf	(BMP085_ReadPressure@X1+3)^(0+128),w
  4115     06AD  00F3               	movwf	___lmul@multiplier+3
  4116     06AE  0846               	movf	(BMP085_ReadPressure@X1+2)^(0+128),w
  4117     06AF  00F2               	movwf	___lmul@multiplier+2
  4118     06B0  0845               	movf	(BMP085_ReadPressure@X1+1)^(0+128),w
  4119     06B1  00F1               	movwf	___lmul@multiplier+1
  4120     06B2  0844               	movf	BMP085_ReadPressure@X1^(0+128),w
  4121     06B3  00F0               	movwf	___lmul@multiplier
  4122     06B4  3000               	movlw	0
  4123     06B5  00F7               	movwf	___lmul@multiplicand+3
  4124     06B6  3000               	movlw	0
  4125     06B7  00F6               	movwf	___lmul@multiplicand+2
  4126     06B8  300B               	movlw	11
  4127     06B9  00F5               	movwf	___lmul@multiplicand+1
  4128     06BA  30DE               	movlw	222
  4129     06BB  00F4               	movwf	___lmul@multiplicand
  4130     06BC  120A  158A  235B  120A  118A  	fcall	___lmul
  4131     06C1  0870               	movf	?___lmul,w
  4132     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  4133     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  4134     06C4  00C3               	movwf	??_BMP085_ReadPressure
  4135     06C5  0871               	movf	?___lmul+1,w
  4136     06C6  00C4               	movwf	??_BMP085_ReadPressure+1
  4137     06C7  0872               	movf	?___lmul+2,w
  4138     06C8  00C5               	movwf	??_BMP085_ReadPressure+2
  4139     06C9  0873               	movf	?___lmul+3,w
  4140     06CA  00C6               	movwf	??_BMP085_ReadPressure+3
  4141     06CB  3010               	movlw	16
  4142     06CC  00C7               	movwf	??_BMP085_ReadPressure+4
  4143     06CD                     u1785:
  4144     06CD  0D46               	rlf	??_BMP085_ReadPressure+3,w
  4145     06CE  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  4146     06CF  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  4147     06D0  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  4148     06D1  0CC3               	rrf	??_BMP085_ReadPressure,f
  4149     06D2                     u1780:
  4150     06D2  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  4151     06D3  2ECD               	goto	u1785
  4152     06D4  0846               	movf	??_BMP085_ReadPressure+3,w
  4153     06D5  1683               	bsf	3,5	;RP0=1, select bank1
  4154     06D6  1303               	bcf	3,6	;RP1=0, select bank1
  4155     06D7  00C7               	movwf	(BMP085_ReadPressure@X1+3)^(0+128)
  4156     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4157     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4158     06DA  0845               	movf	??_BMP085_ReadPressure+2,w
  4159     06DB  1683               	bsf	3,5	;RP0=1, select bank1
  4160     06DC  1303               	bcf	3,6	;RP1=0, select bank1
  4161     06DD  00C6               	movwf	(BMP085_ReadPressure@X1+2)^(0+128)
  4162     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  4163     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  4164     06E0  0844               	movf	??_BMP085_ReadPressure+1,w
  4165     06E1  1683               	bsf	3,5	;RP0=1, select bank1
  4166     06E2  1303               	bcf	3,6	;RP1=0, select bank1
  4167     06E3  00C5               	movwf	(BMP085_ReadPressure@X1+1)^(0+128)
  4168     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4169     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4170     06E6  0843               	movf	??_BMP085_ReadPressure,w
  4171     06E7  1683               	bsf	3,5	;RP0=1, select bank1
  4172     06E8  1303               	bcf	3,6	;RP1=0, select bank1
  4173     06E9  00C4               	movwf	BMP085_ReadPressure@X1^(0+128)
  4174                           
  4175                           ;BMP085.c: 145:     X2 = (-7357 * p) >> 16;
  4176     06EA  084B               	movf	(BMP085_ReadPressure@p+3)^(0+128),w
  4177     06EB  00F3               	movwf	___lmul@multiplier+3
  4178     06EC  084A               	movf	(BMP085_ReadPressure@p+2)^(0+128),w
  4179     06ED  00F2               	movwf	___lmul@multiplier+2
  4180     06EE  0849               	movf	(BMP085_ReadPressure@p+1)^(0+128),w
  4181     06EF  00F1               	movwf	___lmul@multiplier+1
  4182     06F0  0848               	movf	BMP085_ReadPressure@p^(0+128),w
  4183     06F1  00F0               	movwf	___lmul@multiplier
  4184     06F2  30FF               	movlw	255
  4185     06F3  00F7               	movwf	___lmul@multiplicand+3
  4186     06F4  30FF               	movlw	255
  4187     06F5  00F6               	movwf	___lmul@multiplicand+2
  4188     06F6  30E3               	movlw	227
  4189     06F7  00F5               	movwf	___lmul@multiplicand+1
  4190     06F8  3043               	movlw	67
  4191     06F9  00F4               	movwf	___lmul@multiplicand
  4192     06FA  120A  158A  235B  120A  118A  	fcall	___lmul
  4193     06FF  0870               	movf	?___lmul,w
  4194     0700  1283               	bcf	3,5	;RP0=0, select bank0
  4195     0701  1303               	bcf	3,6	;RP1=0, select bank0
  4196     0702  00C3               	movwf	??_BMP085_ReadPressure
  4197     0703  0871               	movf	?___lmul+1,w
  4198     0704  00C4               	movwf	??_BMP085_ReadPressure+1
  4199     0705  0872               	movf	?___lmul+2,w
  4200     0706  00C5               	movwf	??_BMP085_ReadPressure+2
  4201     0707  0873               	movf	?___lmul+3,w
  4202     0708  00C6               	movwf	??_BMP085_ReadPressure+3
  4203     0709  3010               	movlw	16
  4204     070A  00C7               	movwf	??_BMP085_ReadPressure+4
  4205     070B                     u1795:
  4206     070B  0D46               	rlf	??_BMP085_ReadPressure+3,w
  4207     070C  0CC6               	rrf	??_BMP085_ReadPressure+3,f
  4208     070D  0CC5               	rrf	??_BMP085_ReadPressure+2,f
  4209     070E  0CC4               	rrf	??_BMP085_ReadPressure+1,f
  4210     070F  0CC3               	rrf	??_BMP085_ReadPressure,f
  4211     0710                     u1790:
  4212     0710  0BC7               	decfsz	??_BMP085_ReadPressure+4,f
  4213     0711  2F0B               	goto	u1795
  4214     0712  0846               	movf	??_BMP085_ReadPressure+3,w
  4215     0713  1683               	bsf	3,5	;RP0=1, select bank1
  4216     0714  1303               	bcf	3,6	;RP1=0, select bank1
  4217     0715  00C3               	movwf	(BMP085_ReadPressure@X2+3)^(0+128)
  4218     0716  1283               	bcf	3,5	;RP0=0, select bank0
  4219     0717  1303               	bcf	3,6	;RP1=0, select bank0
  4220     0718  0845               	movf	??_BMP085_ReadPressure+2,w
  4221     0719  1683               	bsf	3,5	;RP0=1, select bank1
  4222     071A  1303               	bcf	3,6	;RP1=0, select bank1
  4223     071B  00C2               	movwf	(BMP085_ReadPressure@X2+2)^(0+128)
  4224     071C  1283               	bcf	3,5	;RP0=0, select bank0
  4225     071D  1303               	bcf	3,6	;RP1=0, select bank0
  4226     071E  0844               	movf	??_BMP085_ReadPressure+1,w
  4227     071F  1683               	bsf	3,5	;RP0=1, select bank1
  4228     0720  1303               	bcf	3,6	;RP1=0, select bank1
  4229     0721  00C1               	movwf	(BMP085_ReadPressure@X2+1)^(0+128)
  4230     0722  1283               	bcf	3,5	;RP0=0, select bank0
  4231     0723  1303               	bcf	3,6	;RP1=0, select bank0
  4232     0724  0843               	movf	??_BMP085_ReadPressure,w
  4233     0725  1683               	bsf	3,5	;RP0=1, select bank1
  4234     0726  1303               	bcf	3,6	;RP1=0, select bank1
  4235     0727  00C0               	movwf	BMP085_ReadPressure@X2^(0+128)
  4236     0728                     l1784:
  4237                           
  4238                           ;BMP085.c: 146:     p = p + ((X1 + X2 + 3791) >> 4);
  4239     0728  0848               	movf	BMP085_ReadPressure@p^(0+128),w
  4240     0729  1283               	bcf	3,5	;RP0=0, select bank0
  4241     072A  1303               	bcf	3,6	;RP1=0, select bank0
  4242     072B  00C3               	movwf	??_BMP085_ReadPressure
  4243     072C  1683               	bsf	3,5	;RP0=1, select bank1
  4244     072D  1303               	bcf	3,6	;RP1=0, select bank1
  4245     072E  0849               	movf	(BMP085_ReadPressure@p+1)^(0+128),w
  4246     072F  1283               	bcf	3,5	;RP0=0, select bank0
  4247     0730  1303               	bcf	3,6	;RP1=0, select bank0
  4248     0731  00C4               	movwf	??_BMP085_ReadPressure+1
  4249     0732  1683               	bsf	3,5	;RP0=1, select bank1
  4250     0733  1303               	bcf	3,6	;RP1=0, select bank1
  4251     0734  084A               	movf	(BMP085_ReadPressure@p+2)^(0+128),w
  4252     0735  1283               	bcf	3,5	;RP0=0, select bank0
  4253     0736  1303               	bcf	3,6	;RP1=0, select bank0
  4254     0737  00C5               	movwf	??_BMP085_ReadPressure+2
  4255     0738  1683               	bsf	3,5	;RP0=1, select bank1
  4256     0739  1303               	bcf	3,6	;RP1=0, select bank1
  4257     073A  084B               	movf	(BMP085_ReadPressure@p+3)^(0+128),w
  4258     073B  1283               	bcf	3,5	;RP0=0, select bank0
  4259     073C  1303               	bcf	3,6	;RP1=0, select bank0
  4260     073D  00C6               	movwf	??_BMP085_ReadPressure+3
  4261     073E  30CF               	movlw	207
  4262     073F  00C7               	movwf	??_BMP085_ReadPressure+4
  4263     0740  300E               	movlw	14
  4264     0741  00C8               	movwf	??_BMP085_ReadPressure+5
  4265     0742  3000               	movlw	0
  4266     0743  00C9               	movwf	??_BMP085_ReadPressure+6
  4267     0744  3000               	movlw	0
  4268     0745  00CA               	movwf	??_BMP085_ReadPressure+7
  4269     0746  1683               	bsf	3,5	;RP0=1, select bank1
  4270     0747  1303               	bcf	3,6	;RP1=0, select bank1
  4271     0748  0844               	movf	BMP085_ReadPressure@X1^(0+128),w
  4272     0749  0740               	addwf	BMP085_ReadPressure@X2^(0+128),w
  4273     074A  1283               	bcf	3,5	;RP0=0, select bank0
  4274     074B  1303               	bcf	3,6	;RP1=0, select bank0
  4275     074C  00CB               	movwf	??_BMP085_ReadPressure+8
  4276     074D  3000               	movlw	0
  4277     074E  1803               	skipnc
  4278     074F  3001               	movlw	1
  4279     0750  1683               	bsf	3,5	;RP0=1, select bank1
  4280     0751  1303               	bcf	3,6	;RP1=0, select bank1
  4281     0752  0745               	addwf	(BMP085_ReadPressure@X1+1)^(0+128),w
  4282     0753  1283               	bcf	3,5	;RP0=0, select bank0
  4283     0754  1303               	bcf	3,6	;RP1=0, select bank0
  4284     0755  01CD               	clrf	??_BMP085_ReadPressure+10
  4285     0756  1803               	skipnc
  4286     0757  0ACD               	incf	??_BMP085_ReadPressure+10,f
  4287     0758  1683               	bsf	3,5	;RP0=1, select bank1
  4288     0759  1303               	bcf	3,6	;RP1=0, select bank1
  4289     075A  0741               	addwf	(BMP085_ReadPressure@X2+1)^(0+128),w
  4290     075B  1283               	bcf	3,5	;RP0=0, select bank0
  4291     075C  1303               	bcf	3,6	;RP1=0, select bank0
  4292     075D  00CC               	movwf	??_BMP085_ReadPressure+9
  4293     075E  1803               	skipnc
  4294     075F  0ACD               	incf	??_BMP085_ReadPressure+10,f
  4295     0760  1683               	bsf	3,5	;RP0=1, select bank1
  4296     0761  1303               	bcf	3,6	;RP1=0, select bank1
  4297     0762  0846               	movf	(BMP085_ReadPressure@X1+2)^(0+128),w
  4298     0763  1283               	bcf	3,5	;RP0=0, select bank0
  4299     0764  1303               	bcf	3,6	;RP1=0, select bank0
  4300     0765  074D               	addwf	??_BMP085_ReadPressure+10,w
  4301     0766  01CE               	clrf	??_BMP085_ReadPressure+11
  4302     0767  1803               	skipnc
  4303     0768  0ACE               	incf	??_BMP085_ReadPressure+11,f
  4304     0769  1683               	bsf	3,5	;RP0=1, select bank1
  4305     076A  1303               	bcf	3,6	;RP1=0, select bank1
  4306     076B  0742               	addwf	(BMP085_ReadPressure@X2+2)^(0+128),w
  4307     076C  1283               	bcf	3,5	;RP0=0, select bank0
  4308     076D  1303               	bcf	3,6	;RP1=0, select bank0
  4309     076E  00CD               	movwf	??_BMP085_ReadPressure+10
  4310     076F  1803               	skipnc
  4311     0770  0ACE               	incf	??_BMP085_ReadPressure+11,f
  4312     0771  1683               	bsf	3,5	;RP0=1, select bank1
  4313     0772  1303               	bcf	3,6	;RP1=0, select bank1
  4314     0773  0847               	movf	(BMP085_ReadPressure@X1+3)^(0+128),w
  4315     0774  1283               	bcf	3,5	;RP0=0, select bank0
  4316     0775  1303               	bcf	3,6	;RP1=0, select bank0
  4317     0776  074E               	addwf	??_BMP085_ReadPressure+11,w
  4318     0777  1683               	bsf	3,5	;RP0=1, select bank1
  4319     0778  1303               	bcf	3,6	;RP1=0, select bank1
  4320     0779  0743               	addwf	(BMP085_ReadPressure@X2+3)^(0+128),w
  4321     077A  1283               	bcf	3,5	;RP0=0, select bank0
  4322     077B  1303               	bcf	3,6	;RP1=0, select bank0
  4323     077C  00CE               	movwf	??_BMP085_ReadPressure+11
  4324     077D  084B               	movf	??_BMP085_ReadPressure+8,w
  4325     077E  07C7               	addwf	??_BMP085_ReadPressure+4,f
  4326     077F  084C               	movf	??_BMP085_ReadPressure+9,w
  4327     0780  1803               	skipnc
  4328     0781  0F4C               	incfsz	??_BMP085_ReadPressure+9,w
  4329     0782  2F84               	goto	u1800
  4330     0783  2F85               	goto	u1801
  4331     0784                     u1800:
  4332     0784  07C8               	addwf	??_BMP085_ReadPressure+5,f
  4333     0785                     u1801:
  4334     0785  084D               	movf	??_BMP085_ReadPressure+10,w
  4335     0786  1803               	skipnc
  4336     0787  0F4D               	incfsz	??_BMP085_ReadPressure+10,w
  4337     0788  2F8A               	goto	u1802
  4338     0789  2F8B               	goto	u1803
  4339     078A                     u1802:
  4340     078A  07C9               	addwf	??_BMP085_ReadPressure+6,f
  4341     078B                     u1803:
  4342     078B  084E               	movf	??_BMP085_ReadPressure+11,w
  4343     078C  1803               	skipnc
  4344     078D  0A4E               	incf	??_BMP085_ReadPressure+11,w
  4345     078E  07CA               	addwf	??_BMP085_ReadPressure+7,f
  4346     078F  3004               	movlw	4
  4347     0790  00CF               	movwf	??_BMP085_ReadPressure+12
  4348     0791                     u1815:
  4349     0791  0D4A               	rlf	??_BMP085_ReadPressure+7,w
  4350     0792  0CCA               	rrf	??_BMP085_ReadPressure+7,f
  4351     0793  0CC9               	rrf	??_BMP085_ReadPressure+6,f
  4352     0794  0CC8               	rrf	??_BMP085_ReadPressure+5,f
  4353     0795  0CC7               	rrf	??_BMP085_ReadPressure+4,f
  4354     0796                     u1810:
  4355     0796  0BCF               	decfsz	??_BMP085_ReadPressure+12,f
  4356     0797  2F91               	goto	u1815
  4357     0798  0847               	movf	??_BMP085_ReadPressure+4,w
  4358     0799  07C3               	addwf	??_BMP085_ReadPressure,f
  4359     079A  0848               	movf	??_BMP085_ReadPressure+5,w
  4360     079B  1803               	skipnc
  4361     079C  0F48               	incfsz	??_BMP085_ReadPressure+5,w
  4362     079D  2F9F               	goto	u1820
  4363     079E  2FA0               	goto	u1821
  4364     079F                     u1820:
  4365     079F  07C4               	addwf	??_BMP085_ReadPressure+1,f
  4366     07A0                     u1821:
  4367     07A0  0849               	movf	??_BMP085_ReadPressure+6,w
  4368     07A1  1803               	skipnc
  4369     07A2  0F49               	incfsz	??_BMP085_ReadPressure+6,w
  4370     07A3  2FA5               	goto	u1822
  4371     07A4  2FA6               	goto	u1823
  4372     07A5                     u1822:
  4373     07A5  07C5               	addwf	??_BMP085_ReadPressure+2,f
  4374     07A6                     u1823:
  4375     07A6  084A               	movf	??_BMP085_ReadPressure+7,w
  4376     07A7  1803               	skipnc
  4377     07A8  0A4A               	incf	??_BMP085_ReadPressure+7,w
  4378     07A9  07C6               	addwf	??_BMP085_ReadPressure+3,f
  4379     07AA  0846               	movf	??_BMP085_ReadPressure+3,w
  4380     07AB  1683               	bsf	3,5	;RP0=1, select bank1
  4381     07AC  1303               	bcf	3,6	;RP1=0, select bank1
  4382     07AD  00CB               	movwf	(BMP085_ReadPressure@p+3)^(0+128)
  4383     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  4384     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  4385     07B0  0845               	movf	??_BMP085_ReadPressure+2,w
  4386     07B1  1683               	bsf	3,5	;RP0=1, select bank1
  4387     07B2  1303               	bcf	3,6	;RP1=0, select bank1
  4388     07B3  00CA               	movwf	(BMP085_ReadPressure@p+2)^(0+128)
  4389     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  4390     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  4391     07B6  0844               	movf	??_BMP085_ReadPressure+1,w
  4392     07B7  1683               	bsf	3,5	;RP0=1, select bank1
  4393     07B8  1303               	bcf	3,6	;RP1=0, select bank1
  4394     07B9  00C9               	movwf	(BMP085_ReadPressure@p+1)^(0+128)
  4395     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4396     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4397     07BC  0843               	movf	??_BMP085_ReadPressure,w
  4398     07BD  1683               	bsf	3,5	;RP0=1, select bank1
  4399     07BE  1303               	bcf	3,6	;RP1=0, select bank1
  4400     07BF  00C8               	movwf	BMP085_ReadPressure@p^(0+128)
  4401     07C0                     l1786:
  4402                           
  4403                           ;BMP085.c: 148:     return p;
  4404     07C0  084B               	movf	(BMP085_ReadPressure@p+3)^(0+128),w
  4405     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  4406     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  4407     07C3  00C2               	movwf	?_BMP085_ReadPressure+3
  4408     07C4  1683               	bsf	3,5	;RP0=1, select bank1
  4409     07C5  1303               	bcf	3,6	;RP1=0, select bank1
  4410     07C6  084A               	movf	(BMP085_ReadPressure@p+2)^(0+128),w
  4411     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  4412     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  4413     07C9  00C1               	movwf	?_BMP085_ReadPressure+2
  4414     07CA  1683               	bsf	3,5	;RP0=1, select bank1
  4415     07CB  1303               	bcf	3,6	;RP1=0, select bank1
  4416     07CC  0849               	movf	(BMP085_ReadPressure@p+1)^(0+128),w
  4417     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4418     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4419     07CF  00C0               	movwf	?_BMP085_ReadPressure+1
  4420     07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4421     07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4422     07D2  0848               	movf	BMP085_ReadPressure@p^(0+128),w
  4423     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  4424     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  4425     07D5  00BF               	movwf	?_BMP085_ReadPressure
  4426     07D6                     l171:
  4427     07D6  0008               	return
  4428     07D7                     __end_of_BMP085_ReadPressure:
  4429                           
  4430                           	psect	text13
  4431     0BEB                     __ptext13:	
  4432 ;; *************** function ___lldiv *****************
  4433 ;; Defined at:
  4434 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  divisor         4    0[COMMON] unsigned long 
  4437 ;;  dividend        4    4[COMMON] unsigned long 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  quotient        4    9[COMMON] unsigned long 
  4440 ;;  counter         1   13[COMMON] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  4    0[COMMON] unsigned long 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4450 ;;      Params:         8       0       0       0       0
  4451 ;;      Locals:         5       0       0       0       0
  4452 ;;      Temps:          1       0       0       0       0
  4453 ;;      Totals:        14       0       0       0       0
  4454 ;;Total ram usage:       14 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_BMP085_ReadPressure
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463     0BEB                     ___lldiv:	
  4464                           ;psect for function ___lldiv
  4465                           
  4466     0BEB                     l1672:	
  4467                           ;incstack = 0
  4468                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4469                           
  4470     0BEB  3000               	movlw	0
  4471     0BEC  00FC               	movwf	___lldiv@quotient+3
  4472     0BED  3000               	movlw	0
  4473     0BEE  00FB               	movwf	___lldiv@quotient+2
  4474     0BEF  3000               	movlw	0
  4475     0BF0  00FA               	movwf	___lldiv@quotient+1
  4476     0BF1  3000               	movlw	0
  4477     0BF2  00F9               	movwf	___lldiv@quotient
  4478     0BF3  0873               	movf	___lldiv@divisor+3,w
  4479     0BF4  0472               	iorwf	___lldiv@divisor+2,w
  4480     0BF5  0471               	iorwf	___lldiv@divisor+1,w
  4481     0BF6  0470               	iorwf	___lldiv@divisor,w
  4482     0BF7  1903               	skipnz
  4483     0BF8  2BFA               	goto	u1491
  4484     0BF9  2BFB               	goto	u1490
  4485     0BFA                     u1491:
  4486     0BFA  2C46               	goto	l1692
  4487     0BFB                     u1490:
  4488     0BFB                     l1674:
  4489     0BFB  3001               	movlw	1
  4490     0BFC  00FD               	movwf	___lldiv@counter
  4491     0BFD  2C09               	goto	l1678
  4492     0BFE                     l1676:
  4493     0BFE  3001               	movlw	1
  4494     0BFF  00F8               	movwf	??___lldiv
  4495     0C00                     u1505:
  4496     0C00  1003               	clrc
  4497     0C01  0DF0               	rlf	___lldiv@divisor,f
  4498     0C02  0DF1               	rlf	___lldiv@divisor+1,f
  4499     0C03  0DF2               	rlf	___lldiv@divisor+2,f
  4500     0C04  0DF3               	rlf	___lldiv@divisor+3,f
  4501     0C05  0BF8               	decfsz	??___lldiv,f
  4502     0C06  2C00               	goto	u1505
  4503     0C07  3001               	movlw	1
  4504     0C08  07FD               	addwf	___lldiv@counter,f
  4505     0C09                     l1678:
  4506     0C09  1FF3               	btfss	___lldiv@divisor+3,7
  4507     0C0A  2C0C               	goto	u1511
  4508     0C0B  2C0D               	goto	u1510
  4509     0C0C                     u1511:
  4510     0C0C  2BFE               	goto	l1676
  4511     0C0D                     u1510:
  4512     0C0D                     l1680:
  4513     0C0D  3001               	movlw	1
  4514     0C0E  00F8               	movwf	??___lldiv
  4515     0C0F                     u1525:
  4516     0C0F  1003               	clrc
  4517     0C10  0DF9               	rlf	___lldiv@quotient,f
  4518     0C11  0DFA               	rlf	___lldiv@quotient+1,f
  4519     0C12  0DFB               	rlf	___lldiv@quotient+2,f
  4520     0C13  0DFC               	rlf	___lldiv@quotient+3,f
  4521     0C14  0BF8               	decfsz	??___lldiv,f
  4522     0C15  2C0F               	goto	u1525
  4523     0C16                     l1682:
  4524     0C16  0873               	movf	___lldiv@divisor+3,w
  4525     0C17  0277               	subwf	___lldiv@dividend+3,w
  4526     0C18  1D03               	skipz
  4527     0C19  2C24               	goto	u1535
  4528     0C1A  0872               	movf	___lldiv@divisor+2,w
  4529     0C1B  0276               	subwf	___lldiv@dividend+2,w
  4530     0C1C  1D03               	skipz
  4531     0C1D  2C24               	goto	u1535
  4532     0C1E  0871               	movf	___lldiv@divisor+1,w
  4533     0C1F  0275               	subwf	___lldiv@dividend+1,w
  4534     0C20  1D03               	skipz
  4535     0C21  2C24               	goto	u1535
  4536     0C22  0870               	movf	___lldiv@divisor,w
  4537     0C23  0274               	subwf	___lldiv@dividend,w
  4538     0C24                     u1535:
  4539     0C24  1C03               	skipc
  4540     0C25  2C27               	goto	u1531
  4541     0C26  2C28               	goto	u1530
  4542     0C27                     u1531:
  4543     0C27  2C37               	goto	l1688
  4544     0C28                     u1530:
  4545     0C28                     l1684:
  4546     0C28  0870               	movf	___lldiv@divisor,w
  4547     0C29  02F4               	subwf	___lldiv@dividend,f
  4548     0C2A  0871               	movf	___lldiv@divisor+1,w
  4549     0C2B  1C03               	skipc
  4550     0C2C  0F71               	incfsz	___lldiv@divisor+1,w
  4551     0C2D  02F5               	subwf	___lldiv@dividend+1,f
  4552     0C2E  0872               	movf	___lldiv@divisor+2,w
  4553     0C2F  1C03               	skipc
  4554     0C30  0F72               	incfsz	___lldiv@divisor+2,w
  4555     0C31  02F6               	subwf	___lldiv@dividend+2,f
  4556     0C32  0873               	movf	___lldiv@divisor+3,w
  4557     0C33  1C03               	skipc
  4558     0C34  0F73               	incfsz	___lldiv@divisor+3,w
  4559     0C35  02F7               	subwf	___lldiv@dividend+3,f
  4560     0C36                     l1686:
  4561     0C36  1479               	bsf	___lldiv@quotient,0
  4562     0C37                     l1688:
  4563     0C37  3001               	movlw	1
  4564     0C38                     u1545:
  4565     0C38  1003               	clrc
  4566     0C39  0CF3               	rrf	___lldiv@divisor+3,f
  4567     0C3A  0CF2               	rrf	___lldiv@divisor+2,f
  4568     0C3B  0CF1               	rrf	___lldiv@divisor+1,f
  4569     0C3C  0CF0               	rrf	___lldiv@divisor,f
  4570     0C3D  3EFF               	addlw	-1
  4571     0C3E  1D03               	skipz
  4572     0C3F  2C38               	goto	u1545
  4573     0C40                     l1690:
  4574     0C40  3001               	movlw	1
  4575     0C41  02FD               	subwf	___lldiv@counter,f
  4576     0C42  1D03               	btfss	3,2
  4577     0C43  2C45               	goto	u1551
  4578     0C44  2C46               	goto	u1550
  4579     0C45                     u1551:
  4580     0C45  2C0D               	goto	l1680
  4581     0C46                     u1550:
  4582     0C46                     l1692:
  4583     0C46  087C               	movf	___lldiv@quotient+3,w
  4584     0C47  00F3               	movwf	?___lldiv+3
  4585     0C48  087B               	movf	___lldiv@quotient+2,w
  4586     0C49  00F2               	movwf	?___lldiv+2
  4587     0C4A  087A               	movf	___lldiv@quotient+1,w
  4588     0C4B  00F1               	movwf	?___lldiv+1
  4589     0C4C  0879               	movf	___lldiv@quotient,w
  4590     0C4D  00F0               	movwf	?___lldiv
  4591     0C4E                     l339:
  4592     0C4E  0008               	return
  4593     0C4F                     __end_of___lldiv:
  4594                           
  4595                           	psect	text14
  4596     0A1B                     __ptext14:	
  4597 ;; *************** function _BMP085_ReadRawTemperature *****************
  4598 ;; Defined at:
  4599 ;;		line 87 in file "BMP085.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2    8[COMMON] unsigned short 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4613 ;;      Params:         2       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0
  4615 ;;      Temps:          2       0       0       0       0
  4616 ;;      Totals:         4       0       0       0       0
  4617 ;;Total ram usage:        4 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 3
  4620 ;; This function calls:
  4621 ;;		_BMP085_Read16
  4622 ;;		_BMP085_Write8
  4623 ;; This function is called by:
  4624 ;;		_BMP085_ReadPressure
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628     0A1B                     _BMP085_ReadRawTemperature:	
  4629                           ;psect for function _BMP085_ReadRawTemperature
  4630                           
  4631     0A1B                     l1636:	
  4632                           ;incstack = 0
  4633                           ; Regs used in _BMP085_ReadRawTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4634                           
  4635                           
  4636                           ;BMP085.c: 88:     BMP085_Write8(0xF4, 0x2E);
  4637     0A1B  302E               	movlw	46
  4638     0A1C  00F1               	movwf	BMP085_Write8@data
  4639     0A1D  30F4               	movlw	244
  4640     0A1E  120A  158A  2237  120A  158A  	fcall	_BMP085_Write8
  4641     0A23                     l1638:
  4642                           
  4643                           ;BMP085.c: 89:     _delay((unsigned long)((5)*(16000000/4000.0)));
  4644     0A23  301A               	movlw	26
  4645     0A24  00FB               	movwf	??_BMP085_ReadRawTemperature+1
  4646     0A25  30F8               	movlw	248
  4647     0A26  00FA               	movwf	??_BMP085_ReadRawTemperature
  4648     0A27                     u1917:
  4649     0A27  0BFA               	decfsz	??_BMP085_ReadRawTemperature,f
  4650     0A28  2A27               	goto	u1917
  4651     0A29  0BFB               	decfsz	??_BMP085_ReadRawTemperature+1,f
  4652     0A2A  2A27               	goto	u1917
  4653     0A2B  0000               	nop
  4654     0A2C                     l1640:
  4655                           
  4656                           ;BMP085.c: 90:     return BMP085_Read16(0xF6);
  4657     0A2C  30F6               	movlw	246
  4658     0A2D  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  4659     0A32  0872               	movf	?_BMP085_Read16+1,w
  4660     0A33  00F9               	movwf	?_BMP085_ReadRawTemperature+1
  4661     0A34  0871               	movf	?_BMP085_Read16,w
  4662     0A35  00F8               	movwf	?_BMP085_ReadRawTemperature
  4663     0A36                     l157:
  4664     0A36  0008               	return
  4665     0A37                     __end_of_BMP085_ReadRawTemperature:
  4666                           
  4667                           	psect	text15
  4668     0DEA                     __ptext15:	
  4669 ;; *************** function _BMP085_ReadRawPressure *****************
  4670 ;; Defined at:
  4671 ;;		line 93 in file "BMP085.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  raw             4    4[BANK0 ] unsigned long 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  4    8[COMMON] unsigned long 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         4       0       0       0       0
  4686 ;;      Locals:         0       4       0       0       0
  4687 ;;      Temps:          0       4       0       0       0
  4688 ;;      Totals:         4       8       0       0       0
  4689 ;;Total ram usage:       12 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 3
  4692 ;; This function calls:
  4693 ;;		_BMP085_Read16
  4694 ;;		_BMP085_Read8
  4695 ;;		_BMP085_Write8
  4696 ;; This function is called by:
  4697 ;;		_BMP085_ReadPressure
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701     0DEA                     _BMP085_ReadRawPressure:	
  4702                           ;psect for function _BMP085_ReadRawPressure
  4703                           
  4704     0DEA                     l1644:	
  4705                           ;incstack = 0
  4706                           ; Regs used in _BMP085_ReadRawPressure: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4707                           
  4708                           
  4709                           ;BMP085.c: 94:     uint32_t raw;;BMP085.c: 96:     BMP085_Write8(0xF4, 0x34 + (oversampl
      +                          ing << 6));
  4710     0DEA  1683               	bsf	3,5	;RP0=1, select bank1
  4711     0DEB  1303               	bcf	3,6	;RP1=0, select bank1
  4712     0DEC  086E               	movf	_oversampling^(0+128),w
  4713     0DED  1283               	bcf	3,5	;RP0=0, select bank0
  4714     0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  4715     0DEF  00A0               	movwf	??_BMP085_ReadRawPressure
  4716     0DF0  3005               	movlw	5
  4717     0DF1                     u1435:
  4718     0DF1  1003               	clrc
  4719     0DF2  0DA0               	rlf	??_BMP085_ReadRawPressure,f
  4720     0DF3  3EFF               	addlw	-1
  4721     0DF4  1D03               	skipz
  4722     0DF5  2DF1               	goto	u1435
  4723     0DF6  1003               	clrc
  4724     0DF7  0D20               	rlf	??_BMP085_ReadRawPressure,w
  4725     0DF8  3E34               	addlw	52
  4726     0DF9  00F1               	movwf	BMP085_Write8@data
  4727     0DFA  30F4               	movlw	244
  4728     0DFB  120A  158A  2237  120A  158A  	fcall	_BMP085_Write8
  4729     0E00                     l1646:
  4730                           
  4731                           ;BMP085.c: 99:     if (oversampling == 0)
  4732     0E00  1683               	bsf	3,5	;RP0=1, select bank1
  4733     0E01  1303               	bcf	3,6	;RP1=0, select bank1
  4734     0E02  086E               	movf	_oversampling^(0+128),w
  4735     0E03  1D03               	btfss	3,2
  4736     0E04  2E06               	goto	u1441
  4737     0E05  2E07               	goto	u1440
  4738     0E06                     u1441:
  4739     0E06  2E13               	goto	l1650
  4740     0E07                     u1440:
  4741     0E07                     l1648:
  4742                           
  4743                           ;BMP085.c: 100:         _delay((unsigned long)((5)*(16000000/4000.0)));
  4744     0E07  301A               	movlw	26
  4745     0E08  1283               	bcf	3,5	;RP0=0, select bank0
  4746     0E09  1303               	bcf	3,6	;RP1=0, select bank0
  4747     0E0A  00A1               	movwf	??_BMP085_ReadRawPressure+1
  4748     0E0B  30F7               	movlw	247
  4749     0E0C  00A0               	movwf	??_BMP085_ReadRawPressure
  4750     0E0D                     u1927:
  4751     0E0D  0BA0               	decfsz	??_BMP085_ReadRawPressure,f
  4752     0E0E  2E0D               	goto	u1927
  4753     0E0F  0BA1               	decfsz	??_BMP085_ReadRawPressure+1,f
  4754     0E10  2E0D               	goto	u1927
  4755     0E11  2E12               	nop2
  4756     0E12  2E40               	goto	l1660
  4757     0E13                     l1650:
  4758     0E13  036E               	decf	_oversampling^(0+128),w
  4759     0E14  1D03               	btfss	3,2
  4760     0E15  2E17               	goto	u1451
  4761     0E16  2E18               	goto	u1450
  4762     0E17                     u1451:
  4763     0E17  2E23               	goto	l1654
  4764     0E18                     u1450:
  4765     0E18                     l1652:
  4766                           
  4767                           ;BMP085.c: 102:         _delay((unsigned long)((8)*(16000000/4000.0)));
  4768     0E18  302A               	movlw	42
  4769     0E19  1283               	bcf	3,5	;RP0=0, select bank0
  4770     0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  4771     0E1B  00A1               	movwf	??_BMP085_ReadRawPressure+1
  4772     0E1C  308D               	movlw	141
  4773     0E1D  00A0               	movwf	??_BMP085_ReadRawPressure
  4774     0E1E                     u1937:
  4775     0E1E  0BA0               	decfsz	??_BMP085_ReadRawPressure,f
  4776     0E1F  2E1E               	goto	u1937
  4777     0E20  0BA1               	decfsz	??_BMP085_ReadRawPressure+1,f
  4778     0E21  2E1E               	goto	u1937
  4779     0E22  2E40               	goto	l1660
  4780     0E23                     l1654:
  4781     0E23  3002               	movlw	2
  4782     0E24  066E               	xorwf	_oversampling^(0+128),w
  4783     0E25  1D03               	btfss	3,2
  4784     0E26  2E28               	goto	u1461
  4785     0E27  2E29               	goto	u1460
  4786     0E28                     u1461:
  4787     0E28  2E35               	goto	l1658
  4788     0E29                     u1460:
  4789     0E29                     l1656:
  4790                           
  4791                           ;BMP085.c: 104:         _delay((unsigned long)((14)*(16000000/4000.0)));
  4792     0E29  3049               	movlw	73
  4793     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  4794     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  4795     0E2C  00A1               	movwf	??_BMP085_ReadRawPressure+1
  4796     0E2D  30B8               	movlw	184
  4797     0E2E  00A0               	movwf	??_BMP085_ReadRawPressure
  4798     0E2F                     u1947:
  4799     0E2F  0BA0               	decfsz	??_BMP085_ReadRawPressure,f
  4800     0E30  2E2F               	goto	u1947
  4801     0E31  0BA1               	decfsz	??_BMP085_ReadRawPressure+1,f
  4802     0E32  2E2F               	goto	u1947
  4803     0E33  0000               	nop
  4804     0E34  2E40               	goto	l1660
  4805     0E35                     l1658:
  4806                           
  4807                           ;BMP085.c: 106:         _delay((unsigned long)((26)*(16000000/4000.0)));
  4808     0E35  3088               	movlw	136
  4809     0E36  1283               	bcf	3,5	;RP0=0, select bank0
  4810     0E37  1303               	bcf	3,6	;RP1=0, select bank0
  4811     0E38  00A1               	movwf	??_BMP085_ReadRawPressure+1
  4812     0E39  300E               	movlw	14
  4813     0E3A  00A0               	movwf	??_BMP085_ReadRawPressure
  4814     0E3B                     u1957:
  4815     0E3B  0BA0               	decfsz	??_BMP085_ReadRawPressure,f
  4816     0E3C  2E3B               	goto	u1957
  4817     0E3D  0BA1               	decfsz	??_BMP085_ReadRawPressure+1,f
  4818     0E3E  2E3B               	goto	u1957
  4819     0E3F  0000               	nop
  4820     0E40                     l1660:
  4821                           
  4822                           ;BMP085.c: 109:     raw = BMP085_Read16(0xF6);
  4823     0E40  30F6               	movlw	246
  4824     0E41  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  4825     0E46  0871               	movf	?_BMP085_Read16,w
  4826     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4827     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4828     0E49  00A4               	movwf	BMP085_ReadRawPressure@raw
  4829     0E4A  0872               	movf	?_BMP085_Read16+1,w
  4830     0E4B  00A5               	movwf	BMP085_ReadRawPressure@raw+1
  4831     0E4C  01A6               	clrf	BMP085_ReadRawPressure@raw+2
  4832     0E4D  01A7               	clrf	BMP085_ReadRawPressure@raw+3
  4833     0E4E                     l1662:
  4834                           
  4835                           ;BMP085.c: 110:     raw <<= 8;
  4836     0E4E  3008               	movlw	8
  4837     0E4F  00A0               	movwf	??_BMP085_ReadRawPressure
  4838     0E50                     u1475:
  4839     0E50  1003               	clrc
  4840     0E51  0DA4               	rlf	BMP085_ReadRawPressure@raw,f
  4841     0E52  0DA5               	rlf	BMP085_ReadRawPressure@raw+1,f
  4842     0E53  0DA6               	rlf	BMP085_ReadRawPressure@raw+2,f
  4843     0E54  0DA7               	rlf	BMP085_ReadRawPressure@raw+3,f
  4844     0E55  0BA0               	decfsz	??_BMP085_ReadRawPressure,f
  4845     0E56  2E50               	goto	u1475
  4846     0E57                     l1664:
  4847                           
  4848                           ;BMP085.c: 111:     raw |= BMP085_Read8(0xF6 + 2);
  4849     0E57  30F8               	movlw	248
  4850     0E58  120A  158A  229D  120A  158A  	fcall	_BMP085_Read8
  4851     0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  4852     0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  4853     0E5F  00A0               	movwf	??_BMP085_ReadRawPressure
  4854     0E60  01A1               	clrf	??_BMP085_ReadRawPressure+1
  4855     0E61  01A2               	clrf	??_BMP085_ReadRawPressure+2
  4856     0E62  01A3               	clrf	??_BMP085_ReadRawPressure+3
  4857     0E63  0820               	movf	??_BMP085_ReadRawPressure,w
  4858     0E64  04A4               	iorwf	BMP085_ReadRawPressure@raw,f
  4859     0E65  0821               	movf	??_BMP085_ReadRawPressure+1,w
  4860     0E66  04A5               	iorwf	BMP085_ReadRawPressure@raw+1,f
  4861     0E67  0822               	movf	??_BMP085_ReadRawPressure+2,w
  4862     0E68  04A6               	iorwf	BMP085_ReadRawPressure@raw+2,f
  4863     0E69  0823               	movf	??_BMP085_ReadRawPressure+3,w
  4864     0E6A  04A7               	iorwf	BMP085_ReadRawPressure@raw+3,f
  4865     0E6B                     l1666:
  4866                           
  4867                           ;BMP085.c: 112:     raw >>= (8 - oversampling);
  4868     0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  4869     0E6C  1303               	bcf	3,6	;RP1=0, select bank1
  4870     0E6D  086E               	movf	_oversampling^(0+128),w
  4871     0E6E  3C08               	sublw	8
  4872     0E6F  3E01               	addlw	1
  4873     0E70  1283               	bcf	3,5	;RP0=0, select bank0
  4874     0E71  1303               	bcf	3,6	;RP1=0, select bank0
  4875     0E72  2E78               	goto	u1480
  4876     0E73                     u1485:
  4877     0E73  1003               	clrc
  4878     0E74  0CA7               	rrf	BMP085_ReadRawPressure@raw+3,f
  4879     0E75  0CA6               	rrf	BMP085_ReadRawPressure@raw+2,f
  4880     0E76  0CA5               	rrf	BMP085_ReadRawPressure@raw+1,f
  4881     0E77  0CA4               	rrf	BMP085_ReadRawPressure@raw,f
  4882     0E78                     u1480:
  4883     0E78  3EFF               	addlw	-1
  4884     0E79  1D03               	skipz
  4885     0E7A  2E73               	goto	u1485
  4886     0E7B                     l1668:
  4887                           
  4888                           ;BMP085.c: 114:     return raw;
  4889     0E7B  0827               	movf	BMP085_ReadRawPressure@raw+3,w
  4890     0E7C  00FB               	movwf	?_BMP085_ReadRawPressure+3
  4891     0E7D  0826               	movf	BMP085_ReadRawPressure@raw+2,w
  4892     0E7E  00FA               	movwf	?_BMP085_ReadRawPressure+2
  4893     0E7F  0825               	movf	BMP085_ReadRawPressure@raw+1,w
  4894     0E80  00F9               	movwf	?_BMP085_ReadRawPressure+1
  4895     0E81  0824               	movf	BMP085_ReadRawPressure@raw,w
  4896     0E82  00F8               	movwf	?_BMP085_ReadRawPressure
  4897     0E83                     l166:
  4898     0E83  0008               	return
  4899     0E84                     __end_of_BMP085_ReadRawPressure:
  4900                           
  4901                           	psect	text16
  4902     0A37                     __ptext16:	
  4903 ;; *************** function _BMP085_Write8 *****************
  4904 ;; Defined at:
  4905 ;;		line 37 in file "BMP085.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  addr            1    wreg     unsigned char 
  4908 ;;  data            1    1[COMMON] unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  addr            1    2[COMMON] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         1       0       0       0       0
  4921 ;;      Locals:         1       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0
  4923 ;;      Totals:         2       0       0       0       0
  4924 ;;Total ram usage:        2 bytes
  4925 ;; Hardware stack levels used: 1
  4926 ;; Hardware stack levels required when called: 2
  4927 ;; This function calls:
  4928 ;;		_I2C_Master_Start
  4929 ;;		_I2C_Master_Stop
  4930 ;;		_I2C_Master_Write
  4931 ;; This function is called by:
  4932 ;;		_BMP085_ReadRawTemperature
  4933 ;;		_BMP085_ReadRawPressure
  4934 ;;		_BMP085_ReadTemperature
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938     0A37                     _BMP085_Write8:	
  4939                           ;psect for function _BMP085_Write8
  4940                           
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _BMP085_Write8: [wreg+status,2+status,0+pclath+cstack]
  4944                           ;BMP085_Write8@addr stored from wreg
  4945     0A37  00F2               	movwf	BMP085_Write8@addr
  4946     0A38                     l1500:
  4947                           
  4948                           ;BMP085.c: 38:     I2C_Master_Start();
  4949     0A38  120A  158A  2186  120A  158A  	fcall	_I2C_Master_Start
  4950                           
  4951                           ;BMP085.c: 39:     I2C_Master_Write(0x77 << 1);
  4952     0A3D  30EE               	movlw	238
  4953     0A3E  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  4954                           
  4955                           ;BMP085.c: 40:     I2C_Master_Write(addr);
  4956     0A43  0872               	movf	BMP085_Write8@addr,w
  4957     0A44  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  4958                           
  4959                           ;BMP085.c: 41:     I2C_Master_Write(data);
  4960     0A49  0871               	movf	BMP085_Write8@data,w
  4961     0A4A  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  4962                           
  4963                           ;BMP085.c: 42:     I2C_Master_Stop();
  4964     0A4F  120A  158A  218F  120A  158A  	fcall	_I2C_Master_Stop
  4965     0A54                     l144:
  4966     0A54  0008               	return
  4967     0A55                     __end_of_BMP085_Write8:
  4968                           
  4969                           	psect	text17
  4970     0A9D                     __ptext17:	
  4971 ;; *************** function _BMP085_Read8 *****************
  4972 ;; Defined at:
  4973 ;;		line 5 in file "BMP085.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  addr            1    wreg     unsigned char 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  addr            1    1[COMMON] unsigned char 
  4978 ;;  data            1    2[COMMON] unsigned char 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      unsigned char 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         0       0       0       0       0
  4989 ;;      Locals:         2       0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0
  4991 ;;      Totals:         2       0       0       0       0
  4992 ;;Total ram usage:        2 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 2
  4995 ;; This function calls:
  4996 ;;		_I2C_Master_RepeatedStart
  4997 ;;		_I2C_Master_Start
  4998 ;;		_I2C_Master_Stop
  4999 ;;		_I2C_Master_Write
  5000 ;;		_I2C_NACK
  5001 ;;		_I2C_Read_Byte
  5002 ;; This function is called by:
  5003 ;;		_BMP085_ReadRawPressure
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007     0A9D                     _BMP085_Read8:	
  5008                           ;psect for function _BMP085_Read8
  5009                           
  5010                           
  5011                           ;incstack = 0
  5012                           ; Regs used in _BMP085_Read8: [wreg+status,2+status,0+pclath+cstack]
  5013                           ;BMP085_Read8@addr stored from wreg
  5014     0A9D  00F1               	movwf	BMP085_Read8@addr
  5015     0A9E                     l1478:
  5016                           
  5017                           ;BMP085.c: 6:     uint8_t data;;BMP085.c: 8:     I2C_Master_Start();
  5018     0A9E  120A  158A  2186  120A  158A  	fcall	_I2C_Master_Start
  5019                           
  5020                           ;BMP085.c: 9:     I2C_Master_Write(0x77 << 1);
  5021     0AA3  30EE               	movlw	238
  5022     0AA4  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  5023                           
  5024                           ;BMP085.c: 10:     I2C_Master_Write(addr);
  5025     0AA9  0871               	movf	BMP085_Read8@addr,w
  5026     0AAA  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  5027                           
  5028                           ;BMP085.c: 11:     I2C_Master_RepeatedStart();
  5029     0AAF  120A  158A  217D  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5030                           
  5031                           ;BMP085.c: 12:     I2C_Master_Write((0x77 << 1) | 1);
  5032     0AB4  30EF               	movlw	239
  5033     0AB5  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  5034                           
  5035                           ;BMP085.c: 13:     data = I2C_Read_Byte();
  5036     0ABA  120A  158A  21ED  120A  158A  	fcall	_I2C_Read_Byte
  5037     0ABF  00F2               	movwf	BMP085_Read8@data
  5038                           
  5039                           ;BMP085.c: 14:     I2C_NACK();
  5040     0AC0  120A  158A  21A4  120A  158A  	fcall	_I2C_NACK
  5041                           
  5042                           ;BMP085.c: 15:     I2C_Master_Stop();
  5043     0AC5  120A  158A  218F  120A  158A  	fcall	_I2C_Master_Stop
  5044     0ACA                     l1480:
  5045                           
  5046                           ;BMP085.c: 17:     return data;
  5047     0ACA  0872               	movf	BMP085_Read8@data,w
  5048     0ACB                     l138:
  5049     0ACB  0008               	return
  5050     0ACC                     __end_of_BMP085_Read8:
  5051                           
  5052                           	psect	text18
  5053     0F1E                     __ptext18:	
  5054 ;; *************** function _BMP085_ComputeB5 *****************
  5055 ;; Defined at:
  5056 ;;		line 67 in file "BMP085.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  UT              4    6[BANK0 ] long 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  X1              4   27[BANK0 ] long 
  5061 ;;  X2              4   23[BANK0 ] long 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  4    6[BANK0 ] long 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0, pclath, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5071 ;;      Params:         0       4       0       0       0
  5072 ;;      Locals:         0       8       0       0       0
  5073 ;;      Temps:          0      13       0       0       0
  5074 ;;      Totals:         0      25       0       0       0
  5075 ;;Total ram usage:       25 bytes
  5076 ;; Hardware stack levels used: 1
  5077 ;; Hardware stack levels required when called: 1
  5078 ;; This function calls:
  5079 ;;		___aldiv
  5080 ;;		___lmul
  5081 ;; This function is called by:
  5082 ;;		_BMP085_ReadPressure
  5083 ;;		_BMP085_ReadTemperature
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087     0F1E                     _BMP085_ComputeB5:	
  5088                           ;psect for function _BMP085_ComputeB5
  5089                           
  5090     0F1E                     l1630:	
  5091                           ;incstack = 0
  5092                           ; Regs used in _BMP085_ComputeB5: [wreg+status,2+status,0+pclath+cstack]
  5093                           
  5094                           
  5095                           ;BMP085.c: 68:     int32_t X1 = (UT - (int32_t)ac6) * ((int32_t)ac5) >> 15;
  5096     0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5097     0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5098     0F20  085A               	movf	_ac6^(0+128),w
  5099     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5100     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5101     0F23  00AA               	movwf	??_BMP085_ComputeB5
  5102     0F24  1683               	bsf	3,5	;RP0=1, select bank1
  5103     0F25  1303               	bcf	3,6	;RP1=0, select bank1
  5104     0F26  085B               	movf	(_ac6+1)^(0+128),w
  5105     0F27  1283               	bcf	3,5	;RP0=0, select bank0
  5106     0F28  1303               	bcf	3,6	;RP1=0, select bank0
  5107     0F29  00AB               	movwf	??_BMP085_ComputeB5+1
  5108     0F2A  01AC               	clrf	??_BMP085_ComputeB5+2
  5109     0F2B  01AD               	clrf	??_BMP085_ComputeB5+3
  5110     0F2C  0826               	movf	BMP085_ComputeB5@UT,w
  5111     0F2D  00AE               	movwf	??_BMP085_ComputeB5+4
  5112     0F2E  0827               	movf	BMP085_ComputeB5@UT+1,w
  5113     0F2F  00AF               	movwf	??_BMP085_ComputeB5+5
  5114     0F30  0828               	movf	BMP085_ComputeB5@UT+2,w
  5115     0F31  00B0               	movwf	??_BMP085_ComputeB5+6
  5116     0F32  0829               	movf	BMP085_ComputeB5@UT+3,w
  5117     0F33  00B1               	movwf	??_BMP085_ComputeB5+7
  5118     0F34  082A               	movf	??_BMP085_ComputeB5,w
  5119     0F35  02AE               	subwf	??_BMP085_ComputeB5+4,f
  5120     0F36  082B               	movf	??_BMP085_ComputeB5+1,w
  5121     0F37  1C03               	skipc
  5122     0F38  0F2B               	incfsz	??_BMP085_ComputeB5+1,w
  5123     0F39  2F3B               	goto	u1391
  5124     0F3A  2F3C               	goto	u1392
  5125     0F3B                     u1391:
  5126     0F3B  02AF               	subwf	??_BMP085_ComputeB5+5,f
  5127     0F3C                     u1392:
  5128     0F3C  082C               	movf	??_BMP085_ComputeB5+2,w
  5129     0F3D  1C03               	skipc
  5130     0F3E  0F2C               	incfsz	??_BMP085_ComputeB5+2,w
  5131     0F3F  2F41               	goto	u1393
  5132     0F40  2F42               	goto	u1394
  5133     0F41                     u1393:
  5134     0F41  02B0               	subwf	??_BMP085_ComputeB5+6,f
  5135     0F42                     u1394:
  5136     0F42  082D               	movf	??_BMP085_ComputeB5+3,w
  5137     0F43  1C03               	skipc
  5138     0F44  0F2D               	incfsz	??_BMP085_ComputeB5+3,w
  5139     0F45  2F47               	goto	u1395
  5140     0F46  2F48               	goto	u1396
  5141     0F47                     u1395:
  5142     0F47  02B1               	subwf	??_BMP085_ComputeB5+7,f
  5143     0F48                     u1396:
  5144     0F48  0831               	movf	??_BMP085_ComputeB5+7,w
  5145     0F49  00F3               	movwf	___lmul@multiplier+3
  5146     0F4A  0830               	movf	??_BMP085_ComputeB5+6,w
  5147     0F4B  00F2               	movwf	___lmul@multiplier+2
  5148     0F4C  082F               	movf	??_BMP085_ComputeB5+5,w
  5149     0F4D  00F1               	movwf	___lmul@multiplier+1
  5150     0F4E  082E               	movf	??_BMP085_ComputeB5+4,w
  5151     0F4F  00F0               	movwf	___lmul@multiplier
  5152     0F50  1683               	bsf	3,5	;RP0=1, select bank1
  5153     0F51  1303               	bcf	3,6	;RP1=0, select bank1
  5154     0F52  085C               	movf	_ac5^(0+128),w
  5155     0F53  00F4               	movwf	___lmul@multiplicand
  5156     0F54  085D               	movf	(_ac5+1)^(0+128),w
  5157     0F55  00F5               	movwf	___lmul@multiplicand+1
  5158     0F56  01F6               	clrf	___lmul@multiplicand+2
  5159     0F57  01F7               	clrf	___lmul@multiplicand+3
  5160     0F58  120A  158A  235B  120A  158A  	fcall	___lmul
  5161     0F5D  0870               	movf	?___lmul,w
  5162     0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  5163     0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  5164     0F60  00B2               	movwf	??_BMP085_ComputeB5+8
  5165     0F61  0871               	movf	?___lmul+1,w
  5166     0F62  00B3               	movwf	??_BMP085_ComputeB5+9
  5167     0F63  0872               	movf	?___lmul+2,w
  5168     0F64  00B4               	movwf	??_BMP085_ComputeB5+10
  5169     0F65  0873               	movf	?___lmul+3,w
  5170     0F66  00B5               	movwf	??_BMP085_ComputeB5+11
  5171     0F67  300F               	movlw	15
  5172     0F68  00B6               	movwf	??_BMP085_ComputeB5+12
  5173     0F69                     u1405:
  5174     0F69  0D35               	rlf	??_BMP085_ComputeB5+11,w
  5175     0F6A  0CB5               	rrf	??_BMP085_ComputeB5+11,f
  5176     0F6B  0CB4               	rrf	??_BMP085_ComputeB5+10,f
  5177     0F6C  0CB3               	rrf	??_BMP085_ComputeB5+9,f
  5178     0F6D  0CB2               	rrf	??_BMP085_ComputeB5+8,f
  5179     0F6E                     u1400:
  5180     0F6E  0BB6               	decfsz	??_BMP085_ComputeB5+12,f
  5181     0F6F  2F69               	goto	u1405
  5182     0F70  0835               	movf	??_BMP085_ComputeB5+11,w
  5183     0F71  00BE               	movwf	BMP085_ComputeB5@X1+3
  5184     0F72  0834               	movf	??_BMP085_ComputeB5+10,w
  5185     0F73  00BD               	movwf	BMP085_ComputeB5@X1+2
  5186     0F74  0833               	movf	??_BMP085_ComputeB5+9,w
  5187     0F75  00BC               	movwf	BMP085_ComputeB5@X1+1
  5188     0F76  0832               	movf	??_BMP085_ComputeB5+8,w
  5189     0F77  00BB               	movwf	BMP085_ComputeB5@X1
  5190                           
  5191                           ;BMP085.c: 69:     int32_t X2 = ((int32_t)mc << 11) / (X1 + (int32_t)md);
  5192     0F78  083B               	movf	BMP085_ComputeB5@X1,w
  5193     0F79  00AA               	movwf	??_BMP085_ComputeB5
  5194     0F7A  083C               	movf	BMP085_ComputeB5@X1+1,w
  5195     0F7B  00AB               	movwf	??_BMP085_ComputeB5+1
  5196     0F7C  083D               	movf	BMP085_ComputeB5@X1+2,w
  5197     0F7D  00AC               	movwf	??_BMP085_ComputeB5+2
  5198     0F7E  083E               	movf	BMP085_ComputeB5@X1+3,w
  5199     0F7F  00AD               	movwf	??_BMP085_ComputeB5+3
  5200     0F80  1683               	bsf	3,5	;RP0=1, select bank1
  5201     0F81  1303               	bcf	3,6	;RP1=0, select bank1
  5202     0F82  0860               	movf	_md^(0+128),w
  5203     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  5204     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  5205     0F85  00AE               	movwf	??_BMP085_ComputeB5+4
  5206     0F86  1683               	bsf	3,5	;RP0=1, select bank1
  5207     0F87  1303               	bcf	3,6	;RP1=0, select bank1
  5208     0F88  0861               	movf	(_md+1)^(0+128),w
  5209     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  5210     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  5211     0F8B  00AF               	movwf	??_BMP085_ComputeB5+5
  5212     0F8C  3000               	movlw	0
  5213     0F8D  1BAF               	btfsc	??_BMP085_ComputeB5+5,7
  5214     0F8E  30FF               	movlw	255
  5215     0F8F  00B0               	movwf	??_BMP085_ComputeB5+6
  5216     0F90  00B1               	movwf	??_BMP085_ComputeB5+7
  5217     0F91  082E               	movf	??_BMP085_ComputeB5+4,w
  5218     0F92  07AA               	addwf	??_BMP085_ComputeB5,f
  5219     0F93  082F               	movf	??_BMP085_ComputeB5+5,w
  5220     0F94  1803               	skipnc
  5221     0F95  0F2F               	incfsz	??_BMP085_ComputeB5+5,w
  5222     0F96  2F98               	goto	u1410
  5223     0F97  2F99               	goto	u1411
  5224     0F98                     u1410:
  5225     0F98  07AB               	addwf	??_BMP085_ComputeB5+1,f
  5226     0F99                     u1411:
  5227     0F99  0830               	movf	??_BMP085_ComputeB5+6,w
  5228     0F9A  1803               	skipnc
  5229     0F9B  0F30               	incfsz	??_BMP085_ComputeB5+6,w
  5230     0F9C  2F9E               	goto	u1412
  5231     0F9D  2F9F               	goto	u1413
  5232     0F9E                     u1412:
  5233     0F9E  07AC               	addwf	??_BMP085_ComputeB5+2,f
  5234     0F9F                     u1413:
  5235     0F9F  0831               	movf	??_BMP085_ComputeB5+7,w
  5236     0FA0  1803               	skipnc
  5237     0FA1  0A31               	incf	??_BMP085_ComputeB5+7,w
  5238     0FA2  07AD               	addwf	??_BMP085_ComputeB5+3,f
  5239     0FA3  082D               	movf	??_BMP085_ComputeB5+3,w
  5240     0FA4  00F3               	movwf	___aldiv@divisor+3
  5241     0FA5  082C               	movf	??_BMP085_ComputeB5+2,w
  5242     0FA6  00F2               	movwf	___aldiv@divisor+2
  5243     0FA7  082B               	movf	??_BMP085_ComputeB5+1,w
  5244     0FA8  00F1               	movwf	___aldiv@divisor+1
  5245     0FA9  082A               	movf	??_BMP085_ComputeB5,w
  5246     0FAA  00F0               	movwf	___aldiv@divisor
  5247     0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  5248     0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  5249     0FAD  0862               	movf	_mc^(0+128),w
  5250     0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  5251     0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  5252     0FB0  00B2               	movwf	??_BMP085_ComputeB5+8
  5253     0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  5254     0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  5255     0FB3  0863               	movf	(_mc+1)^(0+128),w
  5256     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5257     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5258     0FB6  00B3               	movwf	??_BMP085_ComputeB5+9
  5259     0FB7  3000               	movlw	0
  5260     0FB8  1BB3               	btfsc	??_BMP085_ComputeB5+9,7
  5261     0FB9  30FF               	movlw	255
  5262     0FBA  00B4               	movwf	??_BMP085_ComputeB5+10
  5263     0FBB  00B5               	movwf	??_BMP085_ComputeB5+11
  5264     0FBC  300B               	movlw	11
  5265     0FBD                     u1425:
  5266     0FBD  1003               	clrc
  5267     0FBE  0DB2               	rlf	??_BMP085_ComputeB5+8,f
  5268     0FBF  0DB3               	rlf	??_BMP085_ComputeB5+9,f
  5269     0FC0  0DB4               	rlf	??_BMP085_ComputeB5+10,f
  5270     0FC1  0DB5               	rlf	??_BMP085_ComputeB5+11,f
  5271     0FC2                     u1420:
  5272     0FC2  3EFF               	addlw	-1
  5273     0FC3  1D03               	skipz
  5274     0FC4  2FBD               	goto	u1425
  5275     0FC5  0835               	movf	??_BMP085_ComputeB5+11,w
  5276     0FC6  00F7               	movwf	___aldiv@dividend+3
  5277     0FC7  0834               	movf	??_BMP085_ComputeB5+10,w
  5278     0FC8  00F6               	movwf	___aldiv@dividend+2
  5279     0FC9  0833               	movf	??_BMP085_ComputeB5+9,w
  5280     0FCA  00F5               	movwf	___aldiv@dividend+1
  5281     0FCB  0832               	movf	??_BMP085_ComputeB5+8,w
  5282     0FCC  00F4               	movwf	___aldiv@dividend
  5283     0FCD  120A  158A  2551  120A  158A  	fcall	___aldiv
  5284     0FD2  0873               	movf	?___aldiv+3,w
  5285     0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  5286     0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  5287     0FD5  00BA               	movwf	BMP085_ComputeB5@X2+3
  5288     0FD6  0872               	movf	?___aldiv+2,w
  5289     0FD7  00B9               	movwf	BMP085_ComputeB5@X2+2
  5290     0FD8  0871               	movf	?___aldiv+1,w
  5291     0FD9  00B8               	movwf	BMP085_ComputeB5@X2+1
  5292     0FDA  0870               	movf	?___aldiv,w
  5293     0FDB  00B7               	movwf	BMP085_ComputeB5@X2
  5294     0FDC                     l1632:
  5295                           
  5296                           ;BMP085.c: 70:     return X1 + X2;
  5297     0FDC  083B               	movf	BMP085_ComputeB5@X1,w
  5298     0FDD  0737               	addwf	BMP085_ComputeB5@X2,w
  5299     0FDE  00AA               	movwf	??_BMP085_ComputeB5
  5300     0FDF  3000               	movlw	0
  5301     0FE0  1803               	skipnc
  5302     0FE1  3001               	movlw	1
  5303     0FE2  073C               	addwf	BMP085_ComputeB5@X1+1,w
  5304     0FE3  01AC               	clrf	??_BMP085_ComputeB5+2
  5305     0FE4  1803               	skipnc
  5306     0FE5  0AAC               	incf	??_BMP085_ComputeB5+2,f
  5307     0FE6  0738               	addwf	BMP085_ComputeB5@X2+1,w
  5308     0FE7  00AB               	movwf	??_BMP085_ComputeB5+1
  5309     0FE8  1803               	skipnc
  5310     0FE9  0AAC               	incf	??_BMP085_ComputeB5+2,f
  5311     0FEA  083D               	movf	BMP085_ComputeB5@X1+2,w
  5312     0FEB  072C               	addwf	??_BMP085_ComputeB5+2,w
  5313     0FEC  01AD               	clrf	??_BMP085_ComputeB5+3
  5314     0FED  1803               	skipnc
  5315     0FEE  0AAD               	incf	??_BMP085_ComputeB5+3,f
  5316     0FEF  0739               	addwf	BMP085_ComputeB5@X2+2,w
  5317     0FF0  00AC               	movwf	??_BMP085_ComputeB5+2
  5318     0FF1  1803               	skipnc
  5319     0FF2  0AAD               	incf	??_BMP085_ComputeB5+3,f
  5320     0FF3  083E               	movf	BMP085_ComputeB5@X1+3,w
  5321     0FF4  072D               	addwf	??_BMP085_ComputeB5+3,w
  5322     0FF5  073A               	addwf	BMP085_ComputeB5@X2+3,w
  5323     0FF6  00AD               	movwf	??_BMP085_ComputeB5+3
  5324     0FF7  082D               	movf	??_BMP085_ComputeB5+3,w
  5325     0FF8  00A9               	movwf	?_BMP085_ComputeB5+3
  5326     0FF9  082C               	movf	??_BMP085_ComputeB5+2,w
  5327     0FFA  00A8               	movwf	?_BMP085_ComputeB5+2
  5328     0FFB  082B               	movf	??_BMP085_ComputeB5+1,w
  5329     0FFC  00A7               	movwf	?_BMP085_ComputeB5+1
  5330     0FFD  082A               	movf	??_BMP085_ComputeB5,w
  5331     0FFE  00A6               	movwf	?_BMP085_ComputeB5
  5332     0FFF                     l151:
  5333     0FFF  0008               	return
  5334     1000                     __end_of_BMP085_ComputeB5:
  5335                           
  5336                           	psect	text19
  5337     0B5B                     __ptext19:	
  5338 ;; *************** function ___lmul *****************
  5339 ;; Defined at:
  5340 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  multiplier      4    0[COMMON] unsigned long 
  5343 ;;  multiplicand    4    4[COMMON] unsigned long 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  product         4    9[COMMON] unsigned long 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  4    0[COMMON] unsigned long 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5355 ;;      Params:         8       0       0       0       0
  5356 ;;      Locals:         4       0       0       0       0
  5357 ;;      Temps:          1       0       0       0       0
  5358 ;;      Totals:        13       0       0       0       0
  5359 ;;Total ram usage:       13 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_BMP085_ComputeB5
  5365 ;;		_BMP085_ReadPressure
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369     0B5B                     ___lmul:	
  5370                           ;psect for function ___lmul
  5371                           
  5372     0B5B                     l1502:	
  5373                           ;incstack = 0
  5374                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5375                           
  5376     0B5B  3000               	movlw	0
  5377     0B5C  00FC               	movwf	___lmul@product+3
  5378     0B5D  3000               	movlw	0
  5379     0B5E  00FB               	movwf	___lmul@product+2
  5380     0B5F  3000               	movlw	0
  5381     0B60  00FA               	movwf	___lmul@product+1
  5382     0B61  3000               	movlw	0
  5383     0B62  00F9               	movwf	___lmul@product
  5384     0B63                     l1504:
  5385     0B63  1C70               	btfss	___lmul@multiplier,0
  5386     0B64  2B66               	goto	u1221
  5387     0B65  2B67               	goto	u1220
  5388     0B66                     u1221:
  5389     0B66  2B7E               	goto	l1508
  5390     0B67                     u1220:
  5391     0B67                     l1506:
  5392     0B67  0874               	movf	___lmul@multiplicand,w
  5393     0B68  07F9               	addwf	___lmul@product,f
  5394     0B69  0875               	movf	___lmul@multiplicand+1,w
  5395     0B6A  1103               	clrz
  5396     0B6B  1803               	skipnc
  5397     0B6C  3E01               	addlw	1
  5398     0B6D  1903               	skipnz
  5399     0B6E  2B70               	goto	u1231
  5400     0B6F  07FA               	addwf	___lmul@product+1,f
  5401     0B70                     u1231:
  5402     0B70  0876               	movf	___lmul@multiplicand+2,w
  5403     0B71  1103               	clrz
  5404     0B72  1803               	skipnc
  5405     0B73  3E01               	addlw	1
  5406     0B74  1903               	skipnz
  5407     0B75  2B77               	goto	u1232
  5408     0B76  07FB               	addwf	___lmul@product+2,f
  5409     0B77                     u1232:
  5410     0B77  0877               	movf	___lmul@multiplicand+3,w
  5411     0B78  1103               	clrz
  5412     0B79  1803               	skipnc
  5413     0B7A  3E01               	addlw	1
  5414     0B7B  1903               	skipnz
  5415     0B7C  2B7E               	goto	u1233
  5416     0B7D  07FC               	addwf	___lmul@product+3,f
  5417     0B7E                     u1233:
  5418     0B7E                     l1508:
  5419     0B7E  3001               	movlw	1
  5420     0B7F  00F8               	movwf	??___lmul
  5421     0B80                     u1245:
  5422     0B80  1003               	clrc
  5423     0B81  0DF4               	rlf	___lmul@multiplicand,f
  5424     0B82  0DF5               	rlf	___lmul@multiplicand+1,f
  5425     0B83  0DF6               	rlf	___lmul@multiplicand+2,f
  5426     0B84  0DF7               	rlf	___lmul@multiplicand+3,f
  5427     0B85  0BF8               	decfsz	??___lmul,f
  5428     0B86  2B80               	goto	u1245
  5429     0B87                     l1510:
  5430     0B87  3001               	movlw	1
  5431     0B88                     u1255:
  5432     0B88  1003               	clrc
  5433     0B89  0CF3               	rrf	___lmul@multiplier+3,f
  5434     0B8A  0CF2               	rrf	___lmul@multiplier+2,f
  5435     0B8B  0CF1               	rrf	___lmul@multiplier+1,f
  5436     0B8C  0CF0               	rrf	___lmul@multiplier,f
  5437     0B8D  3EFF               	addlw	-1
  5438     0B8E  1D03               	skipz
  5439     0B8F  2B88               	goto	u1255
  5440     0B90  0873               	movf	___lmul@multiplier+3,w
  5441     0B91  0472               	iorwf	___lmul@multiplier+2,w
  5442     0B92  0471               	iorwf	___lmul@multiplier+1,w
  5443     0B93  0470               	iorwf	___lmul@multiplier,w
  5444     0B94  1D03               	skipz
  5445     0B95  2B97               	goto	u1261
  5446     0B96  2B98               	goto	u1260
  5447     0B97                     u1261:
  5448     0B97  2B63               	goto	l1504
  5449     0B98                     u1260:
  5450     0B98                     l1512:
  5451     0B98  087C               	movf	___lmul@product+3,w
  5452     0B99  00F3               	movwf	?___lmul+3
  5453     0B9A  087B               	movf	___lmul@product+2,w
  5454     0B9B  00F2               	movwf	?___lmul+2
  5455     0B9C  087A               	movf	___lmul@product+1,w
  5456     0B9D  00F1               	movwf	?___lmul+1
  5457     0B9E  0879               	movf	___lmul@product,w
  5458     0B9F  00F0               	movwf	?___lmul
  5459     0BA0                     l317:
  5460     0BA0  0008               	return
  5461     0BA1                     __end_of___lmul:
  5462                           
  5463                           	psect	text20
  5464     0D51                     __ptext20:	
  5465 ;; *************** function ___aldiv *****************
  5466 ;; Defined at:
  5467 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  divisor         4    0[COMMON] long 
  5470 ;;  dividend        4    4[COMMON] long 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  quotient        4    2[BANK0 ] long 
  5473 ;;  sign            1    1[BANK0 ] unsigned char 
  5474 ;;  counter         1    0[BANK0 ] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  4    0[COMMON] long 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         8       0       0       0       0
  5485 ;;      Locals:         0       6       0       0       0
  5486 ;;      Temps:          1       0       0       0       0
  5487 ;;      Totals:         9       6       0       0       0
  5488 ;;Total ram usage:       15 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_BMP085_ComputeB5
  5494 ;;		_BMP085_ReadPressure
  5495 ;;		_main
  5496 ;;		_vfpfcnvrt
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500     0D51                     ___aldiv:	
  5501                           ;psect for function ___aldiv
  5502                           
  5503     0D51                     l1384:	
  5504                           ;incstack = 0
  5505                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5506                           
  5507     0D51  1283               	bcf	3,5	;RP0=0, select bank0
  5508     0D52  1303               	bcf	3,6	;RP1=0, select bank0
  5509     0D53  01A1               	clrf	___aldiv@sign
  5510     0D54                     l1386:
  5511     0D54  1FF3               	btfss	___aldiv@divisor+3,7
  5512     0D55  2D57               	goto	u971
  5513     0D56  2D58               	goto	u970
  5514     0D57                     u971:
  5515     0D57  2D65               	goto	l368
  5516     0D58                     u970:
  5517     0D58                     l1388:
  5518     0D58  09F0               	comf	___aldiv@divisor,f
  5519     0D59  09F1               	comf	___aldiv@divisor+1,f
  5520     0D5A  09F2               	comf	___aldiv@divisor+2,f
  5521     0D5B  09F3               	comf	___aldiv@divisor+3,f
  5522     0D5C  0AF0               	incf	___aldiv@divisor,f
  5523     0D5D  1903               	skipnz
  5524     0D5E  0AF1               	incf	___aldiv@divisor+1,f
  5525     0D5F  1903               	skipnz
  5526     0D60  0AF2               	incf	___aldiv@divisor+2,f
  5527     0D61  1903               	skipnz
  5528     0D62  0AF3               	incf	___aldiv@divisor+3,f
  5529     0D63  3001               	movlw	1
  5530     0D64  00A1               	movwf	___aldiv@sign
  5531     0D65                     l368:
  5532     0D65  1FF7               	btfss	___aldiv@dividend+3,7
  5533     0D66  2D68               	goto	u981
  5534     0D67  2D69               	goto	u980
  5535     0D68                     u981:
  5536     0D68  2D76               	goto	l1394
  5537     0D69                     u980:
  5538     0D69                     l1390:
  5539     0D69  09F4               	comf	___aldiv@dividend,f
  5540     0D6A  09F5               	comf	___aldiv@dividend+1,f
  5541     0D6B  09F6               	comf	___aldiv@dividend+2,f
  5542     0D6C  09F7               	comf	___aldiv@dividend+3,f
  5543     0D6D  0AF4               	incf	___aldiv@dividend,f
  5544     0D6E  1903               	skipnz
  5545     0D6F  0AF5               	incf	___aldiv@dividend+1,f
  5546     0D70  1903               	skipnz
  5547     0D71  0AF6               	incf	___aldiv@dividend+2,f
  5548     0D72  1903               	skipnz
  5549     0D73  0AF7               	incf	___aldiv@dividend+3,f
  5550     0D74                     l1392:
  5551     0D74  3001               	movlw	1
  5552     0D75  06A1               	xorwf	___aldiv@sign,f
  5553     0D76                     l1394:
  5554     0D76  3000               	movlw	0
  5555     0D77  00A5               	movwf	___aldiv@quotient+3
  5556     0D78  3000               	movlw	0
  5557     0D79  00A4               	movwf	___aldiv@quotient+2
  5558     0D7A  3000               	movlw	0
  5559     0D7B  00A3               	movwf	___aldiv@quotient+1
  5560     0D7C  3000               	movlw	0
  5561     0D7D  00A2               	movwf	___aldiv@quotient
  5562     0D7E                     l1396:
  5563     0D7E  0873               	movf	___aldiv@divisor+3,w
  5564     0D7F  0472               	iorwf	___aldiv@divisor+2,w
  5565     0D80  0471               	iorwf	___aldiv@divisor+1,w
  5566     0D81  0470               	iorwf	___aldiv@divisor,w
  5567     0D82  1903               	skipnz
  5568     0D83  2D85               	goto	u991
  5569     0D84  2D86               	goto	u990
  5570     0D85                     u991:
  5571     0D85  2DD1               	goto	l1416
  5572     0D86                     u990:
  5573     0D86                     l1398:
  5574     0D86  3001               	movlw	1
  5575     0D87  00A0               	movwf	___aldiv@counter
  5576     0D88  2D94               	goto	l1402
  5577     0D89                     l1400:
  5578     0D89  3001               	movlw	1
  5579     0D8A  00F8               	movwf	??___aldiv
  5580     0D8B                     u1005:
  5581     0D8B  1003               	clrc
  5582     0D8C  0DF0               	rlf	___aldiv@divisor,f
  5583     0D8D  0DF1               	rlf	___aldiv@divisor+1,f
  5584     0D8E  0DF2               	rlf	___aldiv@divisor+2,f
  5585     0D8F  0DF3               	rlf	___aldiv@divisor+3,f
  5586     0D90  0BF8               	decfsz	??___aldiv,f
  5587     0D91  2D8B               	goto	u1005
  5588     0D92  3001               	movlw	1
  5589     0D93  07A0               	addwf	___aldiv@counter,f
  5590     0D94                     l1402:
  5591     0D94  1FF3               	btfss	___aldiv@divisor+3,7
  5592     0D95  2D97               	goto	u1011
  5593     0D96  2D98               	goto	u1010
  5594     0D97                     u1011:
  5595     0D97  2D89               	goto	l1400
  5596     0D98                     u1010:
  5597     0D98                     l1404:
  5598     0D98  3001               	movlw	1
  5599     0D99  00F8               	movwf	??___aldiv
  5600     0D9A                     u1025:
  5601     0D9A  1003               	clrc
  5602     0D9B  0DA2               	rlf	___aldiv@quotient,f
  5603     0D9C  0DA3               	rlf	___aldiv@quotient+1,f
  5604     0D9D  0DA4               	rlf	___aldiv@quotient+2,f
  5605     0D9E  0DA5               	rlf	___aldiv@quotient+3,f
  5606     0D9F  0BF8               	decfsz	??___aldiv,f
  5607     0DA0  2D9A               	goto	u1025
  5608     0DA1                     l1406:
  5609     0DA1  0873               	movf	___aldiv@divisor+3,w
  5610     0DA2  0277               	subwf	___aldiv@dividend+3,w
  5611     0DA3  1D03               	skipz
  5612     0DA4  2DAF               	goto	u1035
  5613     0DA5  0872               	movf	___aldiv@divisor+2,w
  5614     0DA6  0276               	subwf	___aldiv@dividend+2,w
  5615     0DA7  1D03               	skipz
  5616     0DA8  2DAF               	goto	u1035
  5617     0DA9  0871               	movf	___aldiv@divisor+1,w
  5618     0DAA  0275               	subwf	___aldiv@dividend+1,w
  5619     0DAB  1D03               	skipz
  5620     0DAC  2DAF               	goto	u1035
  5621     0DAD  0870               	movf	___aldiv@divisor,w
  5622     0DAE  0274               	subwf	___aldiv@dividend,w
  5623     0DAF                     u1035:
  5624     0DAF  1C03               	skipc
  5625     0DB0  2DB2               	goto	u1031
  5626     0DB1  2DB3               	goto	u1030
  5627     0DB2                     u1031:
  5628     0DB2  2DC2               	goto	l1412
  5629     0DB3                     u1030:
  5630     0DB3                     l1408:
  5631     0DB3  0870               	movf	___aldiv@divisor,w
  5632     0DB4  02F4               	subwf	___aldiv@dividend,f
  5633     0DB5  0871               	movf	___aldiv@divisor+1,w
  5634     0DB6  1C03               	skipc
  5635     0DB7  0F71               	incfsz	___aldiv@divisor+1,w
  5636     0DB8  02F5               	subwf	___aldiv@dividend+1,f
  5637     0DB9  0872               	movf	___aldiv@divisor+2,w
  5638     0DBA  1C03               	skipc
  5639     0DBB  0F72               	incfsz	___aldiv@divisor+2,w
  5640     0DBC  02F6               	subwf	___aldiv@dividend+2,f
  5641     0DBD  0873               	movf	___aldiv@divisor+3,w
  5642     0DBE  1C03               	skipc
  5643     0DBF  0F73               	incfsz	___aldiv@divisor+3,w
  5644     0DC0  02F7               	subwf	___aldiv@dividend+3,f
  5645     0DC1                     l1410:
  5646     0DC1  1422               	bsf	___aldiv@quotient,0
  5647     0DC2                     l1412:
  5648     0DC2  3001               	movlw	1
  5649     0DC3                     u1045:
  5650     0DC3  1003               	clrc
  5651     0DC4  0CF3               	rrf	___aldiv@divisor+3,f
  5652     0DC5  0CF2               	rrf	___aldiv@divisor+2,f
  5653     0DC6  0CF1               	rrf	___aldiv@divisor+1,f
  5654     0DC7  0CF0               	rrf	___aldiv@divisor,f
  5655     0DC8  3EFF               	addlw	-1
  5656     0DC9  1D03               	skipz
  5657     0DCA  2DC3               	goto	u1045
  5658     0DCB                     l1414:
  5659     0DCB  3001               	movlw	1
  5660     0DCC  02A0               	subwf	___aldiv@counter,f
  5661     0DCD  1D03               	btfss	3,2
  5662     0DCE  2DD0               	goto	u1051
  5663     0DCF  2DD1               	goto	u1050
  5664     0DD0                     u1051:
  5665     0DD0  2D98               	goto	l1404
  5666     0DD1                     u1050:
  5667     0DD1                     l1416:
  5668     0DD1  0821               	movf	___aldiv@sign,w
  5669     0DD2  1903               	btfsc	3,2
  5670     0DD3  2DD5               	goto	u1061
  5671     0DD4  2DD6               	goto	u1060
  5672     0DD5                     u1061:
  5673     0DD5  2DE1               	goto	l1420
  5674     0DD6                     u1060:
  5675     0DD6                     l1418:
  5676     0DD6  09A2               	comf	___aldiv@quotient,f
  5677     0DD7  09A3               	comf	___aldiv@quotient+1,f
  5678     0DD8  09A4               	comf	___aldiv@quotient+2,f
  5679     0DD9  09A5               	comf	___aldiv@quotient+3,f
  5680     0DDA  0AA2               	incf	___aldiv@quotient,f
  5681     0DDB  1903               	skipnz
  5682     0DDC  0AA3               	incf	___aldiv@quotient+1,f
  5683     0DDD  1903               	skipnz
  5684     0DDE  0AA4               	incf	___aldiv@quotient+2,f
  5685     0DDF  1903               	skipnz
  5686     0DE0  0AA5               	incf	___aldiv@quotient+3,f
  5687     0DE1                     l1420:
  5688     0DE1  0825               	movf	___aldiv@quotient+3,w
  5689     0DE2  00F3               	movwf	?___aldiv+3
  5690     0DE3  0824               	movf	___aldiv@quotient+2,w
  5691     0DE4  00F2               	movwf	?___aldiv+2
  5692     0DE5  0823               	movf	___aldiv@quotient+1,w
  5693     0DE6  00F1               	movwf	?___aldiv+1
  5694     0DE7  0822               	movf	___aldiv@quotient,w
  5695     0DE8  00F0               	movwf	?___aldiv
  5696     0DE9                     l378:
  5697     0DE9  0008               	return
  5698     0DEA                     __end_of___aldiv:
  5699                           
  5700                           	psect	text21
  5701     0CBA                     __ptext21:	
  5702 ;; *************** function _BMP085_Init *****************
  5703 ;; Defined at:
  5704 ;;		line 45 in file "BMP085.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  mode            1    wreg     unsigned char 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  mode            1    8[COMMON] unsigned char 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5718 ;;      Params:         0       0       0       0       0
  5719 ;;      Locals:         1       0       0       0       0
  5720 ;;      Temps:          0       0       0       0       0
  5721 ;;      Totals:         1       0       0       0       0
  5722 ;;Total ram usage:        1 bytes
  5723 ;; Hardware stack levels used: 1
  5724 ;; Hardware stack levels required when called: 3
  5725 ;; This function calls:
  5726 ;;		_BMP085_Read16
  5727 ;;		_I2C_Master_Init
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733     0CBA                     _BMP085_Init:	
  5734                           ;psect for function _BMP085_Init
  5735                           
  5736                           
  5737                           ;incstack = 0
  5738                           ; Regs used in _BMP085_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5739                           ;BMP085_Init@mode stored from wreg
  5740     0CBA  00F8               	movwf	BMP085_Init@mode
  5741     0CBB                     l1720:
  5742                           
  5743                           ;BMP085.c: 46:     I2C_Master_Init();
  5744     0CBB  120A  158A  21BD  120A  158A  	fcall	_I2C_Master_Init
  5745     0CC0                     l1722:
  5746                           
  5747                           ;BMP085.c: 48:     if (mode > 3) mode = 3;
  5748     0CC0  3004               	movlw	4
  5749     0CC1  0278               	subwf	BMP085_Init@mode,w
  5750     0CC2  1C03               	skipc
  5751     0CC3  2CC5               	goto	u1581
  5752     0CC4  2CC6               	goto	u1580
  5753     0CC5                     u1581:
  5754     0CC5  2CC8               	goto	l1726
  5755     0CC6                     u1580:
  5756     0CC6                     l1724:
  5757     0CC6  3003               	movlw	3
  5758     0CC7  00F8               	movwf	BMP085_Init@mode
  5759     0CC8                     l1726:
  5760                           
  5761                           ;BMP085.c: 49:     oversampling = mode;
  5762     0CC8  0878               	movf	BMP085_Init@mode,w
  5763     0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  5764     0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  5765     0CCB  00EE               	movwf	_oversampling^(0+128)
  5766     0CCC                     l1728:
  5767                           
  5768                           ;BMP085.c: 52:     ac1 = (int16_t)BMP085_Read16(0xAA);
  5769     0CCC  30AA               	movlw	170
  5770     0CCD  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5771     0CD2  0872               	movf	?_BMP085_Read16+1,w
  5772     0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  5773     0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  5774     0CD5  00ED               	movwf	_ac1+1
  5775     0CD6  0871               	movf	?_BMP085_Read16,w
  5776     0CD7  00EC               	movwf	_ac1
  5777     0CD8                     l1730:
  5778                           
  5779                           ;BMP085.c: 53:     ac2 = (int16_t)BMP085_Read16(0xAC);
  5780     0CD8  30AC               	movlw	172
  5781     0CD9  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5782     0CDE  0872               	movf	?_BMP085_Read16+1,w
  5783     0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  5784     0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  5785     0CE1  00ED               	movwf	(_ac2+1)^(0+128)
  5786     0CE2  0871               	movf	?_BMP085_Read16,w
  5787     0CE3  00EC               	movwf	_ac2^(0+128)
  5788     0CE4                     l1732:
  5789                           
  5790                           ;BMP085.c: 54:     ac3 = (int16_t)BMP085_Read16(0xAE);
  5791     0CE4  30AE               	movlw	174
  5792     0CE5  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5793     0CEA  0872               	movf	?_BMP085_Read16+1,w
  5794     0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  5795     0CEC  1303               	bcf	3,6	;RP1=0, select bank1
  5796     0CED  00EB               	movwf	(_ac3+1)^(0+128)
  5797     0CEE  0871               	movf	?_BMP085_Read16,w
  5798     0CEF  00EA               	movwf	_ac3^(0+128)
  5799     0CF0                     l1734:
  5800                           
  5801                           ;BMP085.c: 55:     ac4 = (uint16_t)BMP085_Read16(0xB0);
  5802     0CF0  30B0               	movlw	176
  5803     0CF1  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5804     0CF6  0872               	movf	?_BMP085_Read16+1,w
  5805     0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  5806     0CF8  1303               	bcf	3,6	;RP1=0, select bank1
  5807     0CF9  00DF               	movwf	(_ac4+1)^(0+128)
  5808     0CFA  0871               	movf	?_BMP085_Read16,w
  5809     0CFB  00DE               	movwf	_ac4^(0+128)
  5810     0CFC                     l1736:
  5811                           
  5812                           ;BMP085.c: 56:     ac5 = (uint16_t)BMP085_Read16(0xB2);
  5813     0CFC  30B2               	movlw	178
  5814     0CFD  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5815     0D02  0872               	movf	?_BMP085_Read16+1,w
  5816     0D03  1683               	bsf	3,5	;RP0=1, select bank1
  5817     0D04  1303               	bcf	3,6	;RP1=0, select bank1
  5818     0D05  00DD               	movwf	(_ac5+1)^(0+128)
  5819     0D06  0871               	movf	?_BMP085_Read16,w
  5820     0D07  00DC               	movwf	_ac5^(0+128)
  5821     0D08                     l1738:
  5822                           
  5823                           ;BMP085.c: 57:     ac6 = (uint16_t)BMP085_Read16(0xB4);
  5824     0D08  30B4               	movlw	180
  5825     0D09  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5826     0D0E  0872               	movf	?_BMP085_Read16+1,w
  5827     0D0F  1683               	bsf	3,5	;RP0=1, select bank1
  5828     0D10  1303               	bcf	3,6	;RP1=0, select bank1
  5829     0D11  00DB               	movwf	(_ac6+1)^(0+128)
  5830     0D12  0871               	movf	?_BMP085_Read16,w
  5831     0D13  00DA               	movwf	_ac6^(0+128)
  5832     0D14                     l1740:
  5833                           
  5834                           ;BMP085.c: 59:     b1 = (int16_t)BMP085_Read16(0xB6);
  5835     0D14  30B6               	movlw	182
  5836     0D15  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5837     0D1A  0872               	movf	?_BMP085_Read16+1,w
  5838     0D1B  1683               	bsf	3,5	;RP0=1, select bank1
  5839     0D1C  1303               	bcf	3,6	;RP1=0, select bank1
  5840     0D1D  00E9               	movwf	(_b1+1)^(0+128)
  5841     0D1E  0871               	movf	?_BMP085_Read16,w
  5842     0D1F  00E8               	movwf	_b1^(0+128)
  5843     0D20                     l1742:
  5844                           
  5845                           ;BMP085.c: 60:     b2 = (int16_t)BMP085_Read16(0xB8);
  5846     0D20  30B8               	movlw	184
  5847     0D21  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5848     0D26  0872               	movf	?_BMP085_Read16+1,w
  5849     0D27  1683               	bsf	3,5	;RP0=1, select bank1
  5850     0D28  1303               	bcf	3,6	;RP1=0, select bank1
  5851     0D29  00E7               	movwf	(_b2+1)^(0+128)
  5852     0D2A  0871               	movf	?_BMP085_Read16,w
  5853     0D2B  00E6               	movwf	_b2^(0+128)
  5854     0D2C                     l1744:
  5855                           
  5856                           ;BMP085.c: 62:     mb = (int16_t)BMP085_Read16(0xBA);
  5857     0D2C  30BA               	movlw	186
  5858     0D2D  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5859     0D32  0872               	movf	?_BMP085_Read16+1,w
  5860     0D33  1683               	bsf	3,5	;RP0=1, select bank1
  5861     0D34  1303               	bcf	3,6	;RP1=0, select bank1
  5862     0D35  00E5               	movwf	(_mb+1)^(0+128)
  5863     0D36  0871               	movf	?_BMP085_Read16,w
  5864     0D37  00E4               	movwf	_mb^(0+128)
  5865     0D38                     l1746:
  5866                           
  5867                           ;BMP085.c: 63:     mc = (int16_t)BMP085_Read16(0xBC);
  5868     0D38  30BC               	movlw	188
  5869     0D39  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5870     0D3E  0872               	movf	?_BMP085_Read16+1,w
  5871     0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  5872     0D40  1303               	bcf	3,6	;RP1=0, select bank1
  5873     0D41  00E3               	movwf	(_mc+1)^(0+128)
  5874     0D42  0871               	movf	?_BMP085_Read16,w
  5875     0D43  00E2               	movwf	_mc^(0+128)
  5876     0D44                     l1748:
  5877                           
  5878                           ;BMP085.c: 64:     md = (int16_t)BMP085_Read16(0xBE);
  5879     0D44  30BE               	movlw	190
  5880     0D45  120A  158A  23A1  120A  158A  	fcall	_BMP085_Read16
  5881     0D4A  0872               	movf	?_BMP085_Read16+1,w
  5882     0D4B  1683               	bsf	3,5	;RP0=1, select bank1
  5883     0D4C  1303               	bcf	3,6	;RP1=0, select bank1
  5884     0D4D  00E1               	movwf	(_md+1)^(0+128)
  5885     0D4E  0871               	movf	?_BMP085_Read16,w
  5886     0D4F  00E0               	movwf	_md^(0+128)
  5887     0D50                     l148:
  5888     0D50  0008               	return
  5889     0D51                     __end_of_BMP085_Init:
  5890                           
  5891                           	psect	text22
  5892     09BD                     __ptext22:	
  5893 ;; *************** function _I2C_Master_Init *****************
  5894 ;; Defined at:
  5895 ;;		line 5 in file "i2c.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		status,2
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         0       0       0       0       0
  5910 ;;      Locals:         0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0
  5912 ;;      Totals:         0       0       0       0       0
  5913 ;;Total ram usage:        0 bytes
  5914 ;; Hardware stack levels used: 1
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_BMP085_Init
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922     09BD                     _I2C_Master_Init:	
  5923                           ;psect for function _I2C_Master_Init
  5924                           
  5925     09BD                     l1584:	
  5926                           ;incstack = 0
  5927                           ; Regs used in _I2C_Master_Init: [status,2]
  5928                           
  5929                           
  5930                           ;i2c.c: 6:     SSPCON = 0x28;
  5931     09BD  3028               	movlw	40
  5932     09BE  1283               	bcf	3,5	;RP0=0, select bank0
  5933     09BF  1303               	bcf	3,6	;RP1=0, select bank0
  5934     09C0  0094               	movwf	20	;volatile
  5935     09C1                     l1586:
  5936                           
  5937                           ;i2c.c: 7:     SSPCON2 = 0x00;
  5938     09C1  1683               	bsf	3,5	;RP0=1, select bank1
  5939     09C2  1303               	bcf	3,6	;RP1=0, select bank1
  5940     09C3  0191               	clrf	17	;volatile
  5941                           
  5942                           ;i2c.c: 8:     SSPSTAT = 0x00;
  5943     09C4  0194               	clrf	20	;volatile
  5944     09C5                     l1588:
  5945                           
  5946                           ;i2c.c: 9:     SSPADD = ((16000000/4)/100000) - 1;
  5947     09C5  3027               	movlw	39
  5948     09C6  0093               	movwf	19	;volatile
  5949     09C7                     l1590:
  5950                           
  5951                           ;i2c.c: 10:     TRISC3 = 1;
  5952     09C7  1587               	bsf	7,3	;volatile
  5953     09C8                     l1592:
  5954                           
  5955                           ;i2c.c: 11:     TRISC4 = 1;
  5956     09C8  1607               	bsf	7,4	;volatile
  5957     09C9                     l33:
  5958     09C9  0008               	return
  5959     09CA                     __end_of_I2C_Master_Init:
  5960                           
  5961                           	psect	text23
  5962     0BA1                     __ptext23:	
  5963 ;; *************** function _BMP085_Read16 *****************
  5964 ;; Defined at:
  5965 ;;		line 20 in file "BMP085.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  addr            1    wreg     unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  addr            1    5[COMMON] unsigned char 
  5970 ;;  data            2    6[COMMON] unsigned short 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  2    1[COMMON] unsigned short 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5980 ;;      Params:         2       0       0       0       0
  5981 ;;      Locals:         3       0       0       0       0
  5982 ;;      Temps:          2       0       0       0       0
  5983 ;;      Totals:         7       0       0       0       0
  5984 ;;Total ram usage:        7 bytes
  5985 ;; Hardware stack levels used: 1
  5986 ;; Hardware stack levels required when called: 2
  5987 ;; This function calls:
  5988 ;;		_I2C_ACK
  5989 ;;		_I2C_Master_RepeatedStart
  5990 ;;		_I2C_Master_Start
  5991 ;;		_I2C_Master_Stop
  5992 ;;		_I2C_Master_Write
  5993 ;;		_I2C_NACK
  5994 ;;		_I2C_Read_Byte
  5995 ;; This function is called by:
  5996 ;;		_BMP085_Init
  5997 ;;		_BMP085_ReadRawTemperature
  5998 ;;		_BMP085_ReadRawPressure
  5999 ;;		_BMP085_ReadTemperature
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003     0BA1                     _BMP085_Read16:	
  6004                           ;psect for function _BMP085_Read16
  6005                           
  6006                           
  6007                           ;incstack = 0
  6008                           ; Regs used in _BMP085_Read16: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6009                           ;BMP085_Read16@addr stored from wreg
  6010     0BA1  00F5               	movwf	BMP085_Read16@addr
  6011     0BA2                     l1484:
  6012                           
  6013                           ;BMP085.c: 21:     uint16_t data;;BMP085.c: 23:     I2C_Master_Start();
  6014     0BA2  120A  158A  2186  120A  158A  	fcall	_I2C_Master_Start
  6015                           
  6016                           ;BMP085.c: 24:     I2C_Master_Write(0x77 << 1);
  6017     0BA7  30EE               	movlw	238
  6018     0BA8  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  6019                           
  6020                           ;BMP085.c: 25:     I2C_Master_Write(addr);
  6021     0BAD  0875               	movf	BMP085_Read16@addr,w
  6022     0BAE  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  6023                           
  6024                           ;BMP085.c: 26:     I2C_Master_RepeatedStart();
  6025     0BB3  120A  158A  217D  120A  158A  	fcall	_I2C_Master_RepeatedStart
  6026                           
  6027                           ;BMP085.c: 27:     I2C_Master_Write((0x77 << 1) | 1);
  6028     0BB8  30EF               	movlw	239
  6029     0BB9  120A  158A  21CA  120A  158A  	fcall	_I2C_Master_Write
  6030     0BBE                     l1486:
  6031                           
  6032                           ;BMP085.c: 28:     data = ((uint16_t)I2C_Read_Byte() << 8);
  6033     0BBE  120A  158A  21ED  120A  158A  	fcall	_I2C_Read_Byte
  6034     0BC3  00F3               	movwf	??_BMP085_Read16
  6035     0BC4  01F4               	clrf	??_BMP085_Read16+1
  6036     0BC5  0873               	movf	??_BMP085_Read16,w
  6037     0BC6  00F4               	movwf	??_BMP085_Read16+1
  6038     0BC7  01F3               	clrf	??_BMP085_Read16
  6039     0BC8  0873               	movf	??_BMP085_Read16,w
  6040     0BC9  00F6               	movwf	BMP085_Read16@data
  6041     0BCA  0874               	movf	??_BMP085_Read16+1,w
  6042     0BCB  00F7               	movwf	BMP085_Read16@data+1
  6043     0BCC                     l1488:
  6044                           
  6045                           ;BMP085.c: 29:     I2C_ACK();
  6046     0BCC  120A  158A  2198  120A  158A  	fcall	_I2C_ACK
  6047     0BD1                     l1490:
  6048                           
  6049                           ;BMP085.c: 30:     data |= I2C_Read_Byte();
  6050     0BD1  120A  158A  21ED  120A  158A  	fcall	_I2C_Read_Byte
  6051     0BD6  00F3               	movwf	??_BMP085_Read16
  6052     0BD7  01F4               	clrf	??_BMP085_Read16+1
  6053     0BD8  0873               	movf	??_BMP085_Read16,w
  6054     0BD9  04F6               	iorwf	BMP085_Read16@data,f
  6055     0BDA  0874               	movf	??_BMP085_Read16+1,w
  6056     0BDB  04F7               	iorwf	BMP085_Read16@data+1,f
  6057     0BDC                     l1492:
  6058                           
  6059                           ;BMP085.c: 31:     I2C_NACK();
  6060     0BDC  120A  158A  21A4  120A  158A  	fcall	_I2C_NACK
  6061     0BE1                     l1494:
  6062                           
  6063                           ;BMP085.c: 32:     I2C_Master_Stop();
  6064     0BE1  120A  158A  218F  120A  158A  	fcall	_I2C_Master_Stop
  6065     0BE6                     l1496:
  6066                           
  6067                           ;BMP085.c: 34:     return data;
  6068     0BE6  0877               	movf	BMP085_Read16@data+1,w
  6069     0BE7  00F2               	movwf	?_BMP085_Read16+1
  6070     0BE8  0876               	movf	BMP085_Read16@data,w
  6071     0BE9  00F1               	movwf	?_BMP085_Read16
  6072     0BEA                     l141:
  6073     0BEA  0008               	return
  6074     0BEB                     __end_of_BMP085_Read16:
  6075                           
  6076                           	psect	text24
  6077     09ED                     __ptext24:	
  6078 ;; *************** function _I2C_Read_Byte *****************
  6079 ;; Defined at:
  6080 ;;		line 53 in file "i2c.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;		None
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, pclath, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6094 ;;      Params:         0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0
  6097 ;;      Totals:         0       0       0       0       0
  6098 ;;Total ram usage:        0 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 1
  6101 ;; This function calls:
  6102 ;;		_I2C_Master_Wait
  6103 ;; This function is called by:
  6104 ;;		_BMP085_Read8
  6105 ;;		_BMP085_Read16
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109     09ED                     _I2C_Read_Byte:	
  6110                           ;psect for function _I2C_Read_Byte
  6111                           
  6112     09ED                     l1374:	
  6113                           ;incstack = 0
  6114                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  6115                           
  6116                           
  6117                           ;i2c.c: 54:     I2C_Master_Wait();
  6118     09ED  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6119     09F2                     l1376:
  6120                           
  6121                           ;i2c.c: 55:     RCEN = 1;
  6122     09F2  1683               	bsf	3,5	;RP0=1, select bank1
  6123     09F3  1303               	bcf	3,6	;RP1=0, select bank1
  6124     09F4  1591               	bsf	17,3	;volatile
  6125     09F5                     l63:	
  6126                           ;i2c.c: 56:     while(!SSPIF);
  6127                           
  6128     09F5  1283               	bcf	3,5	;RP0=0, select bank0
  6129     09F6  1D8C               	btfss	12,3	;volatile
  6130     09F7  29F9               	goto	u961
  6131     09F8  29FA               	goto	u960
  6132     09F9                     u961:
  6133     09F9  29F5               	goto	l63
  6134     09FA                     u960:
  6135     09FA                     l65:
  6136                           
  6137                           ;i2c.c: 57:     SSPIF = 0;
  6138     09FA  118C               	bcf	12,3	;volatile
  6139     09FB                     l1378:
  6140                           
  6141                           ;i2c.c: 58:     I2C_Master_Wait();
  6142     09FB  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6143     0A00                     l1380:
  6144                           
  6145                           ;i2c.c: 59:     return SSPBUF;
  6146     0A00  1283               	bcf	3,5	;RP0=0, select bank0
  6147     0A01  1303               	bcf	3,6	;RP1=0, select bank0
  6148     0A02  0813               	movf	19,w	;volatile
  6149     0A03                     l66:
  6150     0A03  0008               	return
  6151     0A04                     __end_of_I2C_Read_Byte:
  6152                           
  6153                           	psect	text25
  6154     09A4                     __ptext25:	
  6155 ;; *************** function _I2C_NACK *****************
  6156 ;; Defined at:
  6157 ;;		line 39 in file "i2c.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;		None
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0, pclath, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6171 ;;      Params:         0       0       0       0       0
  6172 ;;      Locals:         0       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0
  6174 ;;      Totals:         0       0       0       0       0
  6175 ;;Total ram usage:        0 bytes
  6176 ;; Hardware stack levels used: 1
  6177 ;; Hardware stack levels required when called: 1
  6178 ;; This function calls:
  6179 ;;		_I2C_Master_Wait
  6180 ;; This function is called by:
  6181 ;;		_BMP085_Read8
  6182 ;;		_BMP085_Read16
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186     09A4                     _I2C_NACK:	
  6187                           ;psect for function _I2C_NACK
  6188                           
  6189     09A4                     l1364:	
  6190                           ;incstack = 0
  6191                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  6192                           
  6193                           
  6194                           ;i2c.c: 40:     ACKDT = 1;
  6195     09A4  1683               	bsf	3,5	;RP0=1, select bank1
  6196     09A5  1303               	bcf	3,6	;RP1=0, select bank1
  6197     09A6  1691               	bsf	17,5	;volatile
  6198     09A7                     l1366:
  6199                           
  6200                           ;i2c.c: 41:     I2C_Master_Wait();
  6201     09A7  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6202     09AC                     l1368:
  6203                           
  6204                           ;i2c.c: 42:     ACKEN = 1;
  6205     09AC  1683               	bsf	3,5	;RP0=1, select bank1
  6206     09AD  1303               	bcf	3,6	;RP1=0, select bank1
  6207     09AE  1611               	bsf	17,4	;volatile
  6208     09AF                     l54:
  6209     09AF  0008               	return
  6210     09B0                     __end_of_I2C_NACK:
  6211                           
  6212                           	psect	text26
  6213     09CA                     __ptext26:	
  6214 ;; *************** function _I2C_Master_Write *****************
  6215 ;; Defined at:
  6216 ;;		line 45 in file "i2c.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  data            1    wreg     unsigned char 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  data            1    0[COMMON] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      unsigned char 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6230 ;;      Params:         0       0       0       0       0
  6231 ;;      Locals:         1       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0
  6233 ;;      Totals:         1       0       0       0       0
  6234 ;;Total ram usage:        1 bytes
  6235 ;; Hardware stack levels used: 1
  6236 ;; Hardware stack levels required when called: 1
  6237 ;; This function calls:
  6238 ;;		_I2C_Master_Wait
  6239 ;; This function is called by:
  6240 ;;		_BMP085_Read8
  6241 ;;		_BMP085_Read16
  6242 ;;		_BMP085_Write8
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246     09CA                     _I2C_Master_Write:	
  6247                           ;psect for function _I2C_Master_Write
  6248                           
  6249                           
  6250                           ;incstack = 0
  6251                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6252                           ;I2C_Master_Write@data stored from wreg
  6253     09CA  00F0               	movwf	I2C_Master_Write@data
  6254     09CB                     l1370:
  6255                           
  6256                           ;i2c.c: 46:     I2C_Master_Wait();
  6257     09CB  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6258     09D0                     l1372:
  6259                           
  6260                           ;i2c.c: 47:     SSPBUF = data;
  6261     09D0  0870               	movf	I2C_Master_Write@data,w
  6262     09D1  1283               	bcf	3,5	;RP0=0, select bank0
  6263     09D2  1303               	bcf	3,6	;RP1=0, select bank0
  6264     09D3  0093               	movwf	19	;volatile
  6265     09D4                     l57:	
  6266                           ;i2c.c: 48:     while(!SSPIF);
  6267                           
  6268     09D4  1D8C               	btfss	12,3	;volatile
  6269     09D5  29D7               	goto	u951
  6270     09D6  29D8               	goto	u950
  6271     09D7                     u951:
  6272     09D7  29D4               	goto	l57
  6273     09D8                     u950:
  6274     09D8                     l59:
  6275                           
  6276                           ;i2c.c: 49:     SSPIF = 0;
  6277     09D8  118C               	bcf	12,3	;volatile
  6278     09D9                     l60:	
  6279                           ;i2c.c: 50:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  6280                           
  6281     09D9  0008               	return
  6282     09DA                     __end_of_I2C_Master_Write:
  6283                           
  6284                           	psect	text27
  6285     098F                     __ptext27:	
  6286 ;; *************** function _I2C_Master_Stop *****************
  6287 ;; Defined at:
  6288 ;;		line 28 in file "i2c.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0, pclath, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6302 ;;      Params:         0       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; Hardware stack levels required when called: 1
  6309 ;; This function calls:
  6310 ;;		_I2C_Master_Wait
  6311 ;; This function is called by:
  6312 ;;		_BMP085_Read8
  6313 ;;		_BMP085_Read16
  6314 ;;		_BMP085_Write8
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318     098F                     _I2C_Master_Stop:	
  6319                           ;psect for function _I2C_Master_Stop
  6320                           
  6321     098F                     l1354:	
  6322                           ;incstack = 0
  6323                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6324                           
  6325                           
  6326                           ;i2c.c: 29:     I2C_Master_Wait();
  6327     098F  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6328     0994                     l1356:
  6329                           
  6330                           ;i2c.c: 30:     PEN = 1;
  6331     0994  1683               	bsf	3,5	;RP0=1, select bank1
  6332     0995  1303               	bcf	3,6	;RP1=0, select bank1
  6333     0996  1511               	bsf	17,2	;volatile
  6334     0997                     l48:
  6335     0997  0008               	return
  6336     0998                     __end_of_I2C_Master_Stop:
  6337                           
  6338                           	psect	text28
  6339     0986                     __ptext28:	
  6340 ;; *************** function _I2C_Master_Start *****************
  6341 ;; Defined at:
  6342 ;;		line 18 in file "i2c.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6356 ;;      Params:         0       0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0
  6359 ;;      Totals:         0       0       0       0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 1
  6363 ;; This function calls:
  6364 ;;		_I2C_Master_Wait
  6365 ;; This function is called by:
  6366 ;;		_BMP085_Read8
  6367 ;;		_BMP085_Read16
  6368 ;;		_BMP085_Write8
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372     0986                     _I2C_Master_Start:	
  6373                           ;psect for function _I2C_Master_Start
  6374                           
  6375     0986                     l1346:	
  6376                           ;incstack = 0
  6377                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6378                           
  6379                           
  6380                           ;i2c.c: 19:     I2C_Master_Wait();
  6381     0986  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6382     098B                     l1348:
  6383                           
  6384                           ;i2c.c: 20:     SEN = 1;
  6385     098B  1683               	bsf	3,5	;RP0=1, select bank1
  6386     098C  1303               	bcf	3,6	;RP1=0, select bank1
  6387     098D  1411               	bsf	17,0	;volatile
  6388     098E                     l42:
  6389     098E  0008               	return
  6390     098F                     __end_of_I2C_Master_Start:
  6391                           
  6392                           	psect	text29
  6393     097D                     __ptext29:	
  6394 ;; *************** function _I2C_Master_RepeatedStart *****************
  6395 ;; Defined at:
  6396 ;;		line 23 in file "i2c.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, status,2, status,0, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6410 ;;      Params:         0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used: 1
  6416 ;; Hardware stack levels required when called: 1
  6417 ;; This function calls:
  6418 ;;		_I2C_Master_Wait
  6419 ;; This function is called by:
  6420 ;;		_BMP085_Read8
  6421 ;;		_BMP085_Read16
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425     097D                     _I2C_Master_RepeatedStart:	
  6426                           ;psect for function _I2C_Master_RepeatedStart
  6427                           
  6428     097D                     l1350:	
  6429                           ;incstack = 0
  6430                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6431                           
  6432                           
  6433                           ;i2c.c: 24:     I2C_Master_Wait();
  6434     097D  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6435     0982                     l1352:
  6436                           
  6437                           ;i2c.c: 25:     RSEN = 1;
  6438     0982  1683               	bsf	3,5	;RP0=1, select bank1
  6439     0983  1303               	bcf	3,6	;RP1=0, select bank1
  6440     0984  1491               	bsf	17,1	;volatile
  6441     0985                     l45:
  6442     0985  0008               	return
  6443     0986                     __end_of_I2C_Master_RepeatedStart:
  6444                           
  6445                           	psect	text30
  6446     0998                     __ptext30:	
  6447 ;; *************** function _I2C_ACK *****************
  6448 ;; Defined at:
  6449 ;;		line 33 in file "i2c.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, pclath, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6463 ;;      Params:         0       0       0       0       0
  6464 ;;      Locals:         0       0       0       0       0
  6465 ;;      Temps:          0       0       0       0       0
  6466 ;;      Totals:         0       0       0       0       0
  6467 ;;Total ram usage:        0 bytes
  6468 ;; Hardware stack levels used: 1
  6469 ;; Hardware stack levels required when called: 1
  6470 ;; This function calls:
  6471 ;;		_I2C_Master_Wait
  6472 ;; This function is called by:
  6473 ;;		_BMP085_Read16
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477     0998                     _I2C_ACK:	
  6478                           ;psect for function _I2C_ACK
  6479                           
  6480     0998                     l1358:	
  6481                           ;incstack = 0
  6482                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  6483                           
  6484                           
  6485                           ;i2c.c: 34:     ACKDT = 0;
  6486     0998  1683               	bsf	3,5	;RP0=1, select bank1
  6487     0999  1303               	bcf	3,6	;RP1=0, select bank1
  6488     099A  1291               	bcf	17,5	;volatile
  6489     099B                     l1360:
  6490                           
  6491                           ;i2c.c: 35:     I2C_Master_Wait();
  6492     099B  120A  158A  21B0  120A  158A  	fcall	_I2C_Master_Wait
  6493     09A0                     l1362:
  6494                           
  6495                           ;i2c.c: 36:     ACKEN = 1;
  6496     09A0  1683               	bsf	3,5	;RP0=1, select bank1
  6497     09A1  1303               	bcf	3,6	;RP1=0, select bank1
  6498     09A2  1611               	bsf	17,4	;volatile
  6499     09A3                     l51:
  6500     09A3  0008               	return
  6501     09A4                     __end_of_I2C_ACK:
  6502                           
  6503                           	psect	text31
  6504     09B0                     __ptext31:	
  6505 ;; *************** function _I2C_Master_Wait *****************
  6506 ;; Defined at:
  6507 ;;		line 14 in file "i2c.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6521 ;;      Params:         0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0
  6524 ;;      Totals:         0       0       0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_I2C_Master_Start
  6531 ;;		_I2C_Master_RepeatedStart
  6532 ;;		_I2C_Master_Stop
  6533 ;;		_I2C_ACK
  6534 ;;		_I2C_NACK
  6535 ;;		_I2C_Master_Write
  6536 ;;		_I2C_Read_Byte
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540     09B0                     _I2C_Master_Wait:	
  6541                           ;psect for function _I2C_Master_Wait
  6542                           
  6543     09B0                     l1342:	
  6544                           ;incstack = 0
  6545                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6546                           
  6547     09B0                     l36:	
  6548                           ;i2c.c: 15:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6549                           
  6550     09B0  1683               	bsf	3,5	;RP0=1, select bank1
  6551     09B1  1303               	bcf	3,6	;RP1=0, select bank1
  6552     09B2  1914               	btfsc	20,2	;volatile
  6553     09B3  29B5               	goto	u931
  6554     09B4  29B6               	goto	u930
  6555     09B5                     u931:
  6556     09B5  29B0               	goto	l36
  6557     09B6                     u930:
  6558     09B6                     l1344:
  6559     09B6  0811               	movf	17,w	;volatile
  6560     09B7  391F               	andlw	31
  6561     09B8  1D03               	btfss	3,2
  6562     09B9  29BB               	goto	u941
  6563     09BA  29BC               	goto	u940
  6564     09BB                     u941:
  6565     09BB  29B0               	goto	l36
  6566     09BC                     u940:
  6567     09BC                     l39:
  6568     09BC  0008               	return
  6569     09BD                     __end_of_I2C_Master_Wait:
  6570     0002                     ___latbits      equ	2
  6571     007E                     btemp           set	126	;btemp
  6572     007E                     wtemp0          set	126

Data Sizes:
    Strings     14
    Constant    0
    Data        2
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     48      79
    BANK3            96      0      48
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    S706$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    S706$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _sprintf->_vfprintf
    _vfpfcnvrt->_abs
    _vfpfcnvrt->_fputc
    _abs->___almod
    _lcd_string->_lcd_data
    _lcd_initialize->_lcd_command
    _BMP085_ReadPressure->___lldiv
    _BMP085_ReadRawTemperature->_BMP085_Read16
    _BMP085_ReadRawPressure->_BMP085_Read16
    _BMP085_Write8->_I2C_Master_Write
    _BMP085_Read8->_I2C_Master_Write
    _BMP085_ComputeB5->___lmul
    _BMP085_Init->_BMP085_Read16
    _BMP085_Read16->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP085_ReadPressure
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___aldiv
    _BMP085_ReadPressure->_BMP085_ComputeB5
    _BMP085_ComputeB5->___aldiv

Critical Paths under _main in BANK1

    _main->_BMP085_ReadPressure

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    4918
                                             49 BANK0     27    27      0
                        _BMP085_Init
                _BMP085_ReadPressure
                            ___aldiv
                        _lcd_command
                     _lcd_initialize
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    1861
                                             23 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1658
                                             13 COMMON     1     1      0
                                             19 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1533
                                              6 BANK0     13     9      4
                            ___aldiv
                            ___almod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                             11 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     298
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     2      2     150
                                              3 COMMON     4     2      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0      58
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BMP085_ReadPressure                                 66    62      4    2246
                                             31 BANK0     18    14      4
                                              0 BANK1     48    48      0
                   _BMP085_ComputeB5
             _BMP085_ReadRawPressure
          _BMP085_ReadRawTemperature
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     166
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _BMP085_ReadRawTemperature                            4     2      2     165
                                              8 COMMON     4     2      2
                      _BMP085_Read16
                      _BMP085_Write8
 ---------------------------------------------------------------------------------
 (2) _BMP085_ReadRawPressure                              12     8      4     272
                                              8 COMMON     4     0      4
                                              0 BANK0      8     8      0
                      _BMP085_Read16
                       _BMP085_Read8
                      _BMP085_Write8
 ---------------------------------------------------------------------------------
 (3) _BMP085_Write8                                        2     1      1      83
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _BMP085_Read8                                         2     2      0      81
                                              1 COMMON     2     2      0
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _BMP085_ComputeB5                                    25    21      4     516
                                              6 BANK0     25    21      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     116
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     308
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP085_Init                                          1     1      0     142
                                              8 COMMON     1     1      0
                      _BMP085_Read16
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BMP085_Read16                                        7     5      2      82
                                              1 COMMON     7     5      2
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP085_Init
     _BMP085_Read16
       _I2C_ACK
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_NACK
         _I2C_Master_Wait
       _I2C_Read_Byte
         _I2C_Master_Wait
     _I2C_Master_Init
   _BMP085_ReadPressure
     _BMP085_ComputeB5
       ___aldiv
       ___lmul
     _BMP085_ReadRawPressure
       _BMP085_Read16
       _BMP085_Read8
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _I2C_NACK
         _I2C_Read_Byte
       _BMP085_Write8
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
     _BMP085_ReadRawTemperature
       _BMP085_Read16
       _BMP085_Write8
     ___aldiv
     ___lldiv
     ___lmul
   ___aldiv
   _lcd_command
   _lcd_initialize
     _lcd_command
   _lcd_string
     _lcd_data
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___aldiv
         ___almod
         _abs
           ___almod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0      48     50.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80     48      79     98.8%
BITBANK1            80      0       0      0.0%
BANK0               80     76      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     221      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 02 20:08:53 2025

                                pc 0002                       lcd_data@data 0072  
                               l33 09C9                                 l42 098E  
                               l51 09A3                                 l36 09B0  
                               l60 09D9                                 l45 0985  
                               l54 09AF                                 l39 09BC  
                               l63 09F5                                 l48 0997  
                               l57 09D4                                 l65 09FA  
                               l81 0B5A                                 l66 0A03  
                               l90 0A1A                                 l59 09D8  
                               l84 0B29                                 l93 0AFA  
                               _b1 00E8                                 _b2 00E6  
                  _ac2@BMP085$F242 00D6                                 _mb 00E4  
                               _mc 00E2                                 _md 00E0  
                               fsr 0004                                l141 0BEA  
                              l151 0FFF                                l144 0A54  
                              l138 0ACB                                l170 064D  
                              l171 07D6                                l148 0D50  
                              l317 0BA0                                l157 0A36  
                              l166 0E83                                l339 0C4E  
                              l381 001A                                l391 008A  
                              l368 0D65                                l378 0DE9  
                              l820 0A9C                                l814 01D2  
                              l850 0005                                l827 09EC  
                              l766 0A77                                l839 0F1D  
                              l797 00BF                                _PEN 048A  
                              _SEN 0488                                u930 09B6  
                              u931 09B5                                u940 09BC  
                              u941 09BB                                u950 09D8  
                              u951 09D7                                u960 09FA  
                              u961 09F9                                u970 0D58  
                              u971 0D57                                u980 0D69  
                              u981 0D68                                u990 0D86  
                              u991 0D85                    __end_of_I2C_ACK 09A4  
                              _ac1 006C                                _ac2 00EC  
                              _ac3 00EA                                _ac4 00DE  
                              _ac5 00DC                                _ac6 00DA  
                              _abs 09DA                                fsr0 0004  
                              indf 0000                               ?_abs 007B  
                             l1400 0D89                               l1410 0DC1  
                             l1402 0D94                               l1420 0DE1  
                             l1412 0DC2                               l1404 0D98  
                             l1500 0A38                               l1342 09B0  
                             l1350 097D                               l1414 0DCB  
                             l1406 0DA1                               l1510 0B87  
                             l1502 0B5B                               l1430 001E  
                             l1344 09B6                               l1360 099B  
                             l1352 0982                               l1408 0DB3  
                             l1416 0DD1                               l1512 0B98  
                             l1504 0B63                               l1600 0AD5  
                             l1440 0043                               l1432 0029  
                             l1424 0008                               l1520 009F  
                             l1362 09A0                               l1346 0986  
                             l1354 098F                               l1370 09CB  
                             l1418 0DD6                               l1506 0B67  
                             l1610 0AF7                               l1602 0ADE  
                             l1450 0077                               l1442 0055  
                             l1434 0031                               l1426 0009  
                             l1530 00C2                               l1522 00A7  
                             l1348 098B                               l1356 0994  
                             l1372 09D0                               l1364 09A4  
                             l1380 0A00                               l1508 0B7E  
                             l1604 0AE1                               l1620 0B0D  
                             l1612 0AFC                               l1452 0082  
                             l1444 0063                               l1436 0034  
                             l1428 000D                               l1460 0E90  
                             l1540 00E8                               l1524 00AD  
                             l1516 008B                               l1700 0A8C  
                             l1358 0998                               l1366 09A7  
                             l1374 09ED                               l1390 0D69  
                             l1630 0F1E                               l1606 0AED  
                             l1710 0B51                               l1622 0B10  
                             l1614 0B00                               l1446 006C  
                             l1438 003F                               l1470 09DA  
                             l1462 0E97                               l1550 0122  
                             l1542 0100                               l1534 00C4  
                             l1526 00B3                               l1518 009B  
                             l1702 0A98                               l1368 09AC  
                             l1376 09F2                               l1720 0CBB  
                             l1392 0D74                               l1384 0D51  
                             l1632 0FDC                               l1480 0ACA  
                             l1640 0A2C                               l1608 0AEE  
                             l1624 0B1C                               l1616 0B03  
                             l1712 0A04                               l1448 0072  
                             l1472 09DE                               l1464 0EAF  
                             l1456 0E84                               l1560 017B  
                             l1552 0124                               l1536 00CF  
                             l1528 00BC                               l1800 0A6E  
                             l1378 09FB                               l1490 0BD1  
                             l1730 0CD8                               l1722 0CC0  
                             l1394 0D76                               l1386 0D54  
                             l1650 0E13                               l1706 0B2A  
                             l1626 0B1D                               l1618 0B04  
                             l1714 0A06                               l1474 09DF  
                             l1466 0EE1                               l1458 0E8A  
                             l1570 01A7                               l1562 0180  
                             l1554 012B                               l1538 00DB  
                             l1546 0115                               l1492 0BDC  
                             l1484 0BA2                               l1740 0D14  
                             l1732 0CE4                               l1724 0CC6  
                             l1396 0D7E                               l1388 0D58  
                             l1652 0E18                               l1660 0E40  
                             l1644 0DEA                               l1636 0A1B  
                             l1708 0B33                               l1628 0B26  
                             l1716 0A12                               l1564 0185  
                             l1572 01AB                               l1556 0152  
                             l1548 011D                               l1820 0C54  
                             l1494 0BE1                               l1486 0BBE  
                             l1590 09C7                               l1742 0D20  
                             l1734 0CF0                               l1726 0CC8  
                             l1398 0D86                               l1478 0A9E  
                             l1662 0E4E                               l1654 0E23  
                             l1646 0E00                               l1638 0A23  
                             l1750 01D3                               l1718 0A14  
                             l1566 018A                               l1558 0173  
                             l1574 01B2                               l1830 0CA8  
                             l1822 0C5A                               l1496 0BE6  
                             l1488 0BCC                               l1592 09C8  
                             l1584 09BD                               l1744 0D2C  
                             l1736 0CFC                               l1728 0CCC  
                             l1664 0E57                               l1656 0E29  
                             l1648 0E07                               l1680 0C0D  
                             l1672 0BEB                               l1760 02E1  
                             l1752 01EF                               l1568 0193  
                             l1824 0C88                               l1586 09C1  
                             l1746 0D38                               l1738 0D08  
                             l1666 0E6B                               l1658 0E35  
                             l1690 0C40                               l1682 0C16  
                             l1674 0BFB                               l1770 046E  
                             l1762 0320                               l1754 0222  
                             l1594 0ACD                               l1578 01B9  
                             l1826 0C99                               l1818 0C4F  
                             l1588 09C5                               l1748 0D44  
                             l1668 0E7B                               l1684 0C28  
                             l1676 0BFE                               l1692 0C46  
                             l1780 0608                               l1772 04AD  
                             l1764 036B                               l1756 0264  
                             l1596 0AD1                               l1828 0C9F  
                             l1686 0C36                               l1678 0C09  
                             l1782 062B                               l1774 051F  
                             l1766 03F1                               l1758 02A2  
                             l1598 0AD4                               l1790 0A55  
                             l1688 0C37                               l1784 0728  
                             l1776 0589                               l1768 0430  
                             l1696 0A78                               l1792 0A59  
                             l1786 07C0                               l1778 05F4  
                             l1698 0A7D                               l1794 0A5D  
                             l1796 0A5F                               l1798 0A61  
                             STR_1 0806                               u1010 0D98  
                             u1011 0D97                               u1005 0D8B  
                             u1030 0DB3                               u1110 0043  
                             u1031 0DB2                               u1111 0042  
                             u1120 0055                               u1200 0F02  
                             u1025 0D9A                               u1121 0054  
                             u1105 0036                               u1050 0DD1  
                             u1210 09DE                               u1051 0DD0  
                             u1035 0DAF                               u1211 09DD  
                             u1060 0DD6                               u1220 0B67  
                             u1140 0072                               u1300 0129  
                             u1061 0DD5                               u1045 0DC3  
                             u1221 0B66                               u1141 0071  
                             u1125 0051                               u1301 0127  
                             u1150 0077                               u1070 000D  
                             u1310 012A                               u1231 0B70  
                             u1151 0076                               u1135 0064  
                             u1071 000C                               u1232 0B77  
                             u1400 0F6E                               u1080 001E  
                             u1160 0E8A                               u1320 017B  
                             u1233 0B7E                               u1081 001D  
                             u1161 0E89                               u1321 017A  
                             u1410 0F98                               u1090 0031  
                             u1170 0E90                               u1330 0180  
                             u1411 0F99                               u1091 0030  
                             u1171 0E8F                               u1331 017F  
                             u1260 0B98                               u1420 0FC2  
                             u1412 0F9E                               u1180 0EAF  
                             u1340 0185                               u1261 0B97  
                             u1245 0B80                               u1413 0F9F  
                             u1405 0F69                               u1181 0EAE  
                             u1341 0184                               u1510 0C0D  
                             u1190 0EE1                               u1350 018A  
                             u1270 009B                               u1255 0B88  
                             u1511 0C0C                               u1191 0EE0  
                             u1351 0189                               u1271 009A  
                             u1440 0E07                               u1600 028A  
                             u1360 01B1                               u1280 00DB  
                             u1425 0FBD                               u1441 0E06  
                             u1505 0C00                               u1361 01B0  
                             u1281 00DA                               u1450 0E18  
                             u1530 0C28                               u1610 02C9  
                             u1290 00E7                               u1451 0E17  
                             u1435 0DF1                               u1531 0C27  
                             u1195 0EDD                               u1291 00E6  
                             u1460 0E29                               u1700 0507  
                             u1620 0308                               u1461 0E28  
                             u1525 0C0F                               u1605 0285  
                             u1550 0C46                               u1710 0536  
                             u1630 03AF                               u1391 0F3B  
                             u1551 0C45                               u1535 0C24  
                             u1711 0539                               u1631 03B0  
                             u1615 02C4                               u1375 0AE4  
                             u1392 0F3C                               u1480 0E78  
                             u1800 0784                               u1720 0570  
                             u1712 0540                               u1640 03C5  
                             u1632 03B5                               u1560 0A98  
                             u1393 0F41                               u1545 0C38  
                             u1801 0785                               u1713 0543  
                             u1705 0502                               u1633 03B6  
                             u1625 0303                               u1385 0B13  
                             u1561 0A97                               u1394 0F42  
                             u1490 0BFB                               u1810 0796  
                             u1802 078A                               u1650 03CF  
                             u1570 0A1A                               u1395 0F47  
                             u1475 0E50                               u1491 0BFA  
                             u1803 078B                               u1731 05AC  
                             u1651 03D0                               u1571 0A19  
                             u1580 0CC6                               u1396 0F48  
                             u1820 079F                               u1732 05AF  
                             u1660 0418                               u1652 03D5  
                             u1581 0CC5                               u1485 0E73  
                             u1821 07A0                               u1733 05B6  
                             u1725 056B                               u1653 03D6  
                             u1645 03C0                               u1822 07A5  
                             u1750 0608                               u1734 05B9  
                             u1670 0456                               u1590 0239  
                             u1823 07A6                               u1815 0791  
                             u1751 0607                               u1735 05C0  
                             u1591 023C                               u1760 066A  
                             u1744 05DC                               u1736 05C3  
                             u1680 0495                               u1592 0243  
                             u1753 0604                               u1745 05D7  
                             u1665 0413                               u1593 0246  
                             u1770 0693                               u1690 04F5  
                             u1691 04F6                               u1675 0451  
                             u1907 0AF2                               u1780 06D2  
                             u1692 04FB                               u1917 0A27  
                             u1765 0665                               u1693 04FC  
                             u1685 0490                               u1790 0710  
                             u1927 0E0D                               u1775 068E  
                             u1937 0E1E                               u1785 06CD  
                             u1857 0CB0                               u1947 0E2F  
                             u1795 070B                               u1867 0B08  
                             u1957 0E3B                               u1877 0B21  
                             u1887 0B55                               u1897 0AD9  
                             _RCEN 048B                    BMP085_Init@mode 0078  
                             _RSEN 0489                   __end_of_I2C_NACK 09B0  
                             abs@a 007B                               _dbuf 0190  
 __end_of_I2C_Master_RepeatedStart 0986                               _main 0C4F  
                             _prec 01B2                               btemp 007E  
                             start 0000                        lcd_string@i 0076  
                            ??_abs 0020           _BMP085_ReadPressure$1045 00B8  
                 BMP085_Read8@addr 0071                   BMP085_Read8@data 0072  
                 ?_I2C_Master_Init 0070                    _ac3@BMP085$F243 00D4  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                  __end_of___aldiv 0DEA                    __end_of___almod 008B  
                            ?_main 0070                              _ACKEN 048C  
                            _ACKDT 048D                    __end_of___lldiv 0C4F  
                     vfpfcnvrt@fmt 0028                              _PORTD 0008  
                            _SSPIF 0063                ___lmul@multiplicand 0074  
                            _flags 006E                              _fputc 0E84  
                            _width 01B0                              _putch 0005  
                            pclath 000A                       main@pressure 0064  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0A78                       _BMP085_Read8 0A9D  
                  __initialization 07D7                  BMP085_Read16@addr 0075  
                BMP085_Read16@data 0076                       __end_of_main 0CBA  
                        ??_I2C_ACK 0070                    _ac4@BMP085$F249 01B8  
                           ??_main 0051                     lcd_command@cmd 0072  
                ?_I2C_Master_Start 0070             _BMP085_ReadRawPressure 0DEA  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 0070                             ?_fputc 0070  
                           ?_putch 0070                      vfpfcnvrt@done 002C  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           __end_of_BMP085_ComputeB5 1000  
      __end_of_BMP085_ReadPressure 07D7           _I2C_Master_RepeatedStart 097D  
                 __end_of_lcd_data 0B2A                       vfprintf@cfmt 007D  
                    _I2C_Read_Byte 09ED                             ___lmul 0B5B  
                        ??___aldiv 0078                          ??___almod 0078  
                        ??___lldiv 0078                    _ac5@BMP085$F250 01B6  
                        ?_I2C_NACK 0070                             fputc@c 0070  
                           putch@c 0070                   __end_of_vfprintf 0A9D  
                 ??_lcd_initialize 0073                          ??_sprintf 003D  
                    _BMP085_Read16 0BA1                      lcd_string@len 0074  
                    lcd_string@str 0073            __end_of__initialization 07FC  
                    _BMP085_Write8 0A37                     ?_I2C_Read_Byte 0070  
                   __pcstackCOMMON 0070                       __pidataBANK0 0007  
                     __pidataBANK1 0006                      __end_of_fputc 0F1E  
                    __end_of_putch 0006                    _ac6@BMP085$F251 01B4  
                       ??_I2C_NACK 0070                 BMP085_ComputeB5@X1 003B  
               BMP085_ComputeB5@X2 0037                 BMP085_ComputeB5@UT 0026  
                          ??_fputc 0074                     ?_BMP085_Read16 0071  
                          ??_putch 0070                         __pbssBANK0 006C  
                       __pbssBANK1 00D0                         __pbssBANK3 0190  
                   ?_BMP085_Write8 0071                         __pmaintext 0C4F  
                          ?___lmul 0070                            _I2C_ACK 0998  
                          _ACKSTAT 048E                     ___lmul@product 0079  
                    ??_BMP085_Init 0078                            _SSPCON2 0091  
                        ?_lcd_data 0070                         _lcd_string 0A04  
                          _SSPSTAT 0094                         __stringtab 0800  
                  ??_I2C_Read_Byte 0070                            ___aldiv 0D51  
                          ___almod 0008                            ___lldiv 0BEB  
                        ?_vfprintf 0033              BMP085_ReadPressure@B3 00A8  
            BMP085_ReadPressure@B4 00B0              BMP085_ReadPressure@B5 00AC  
            BMP085_ReadPressure@B6 00CC              BMP085_ReadPressure@B7 00BC  
            BMP085_ReadPressure@X1 00C4              BMP085_ReadPressure@X2 00C0  
            BMP085_ReadPressure@X3 00B4              BMP085_ReadPressure@UP 00A4  
            BMP085_ReadPressure@UT 00A0            ?_BMP085_ReadRawPressure 0078  
                          __ptext1 0A55                            __ptext2 0A78  
                          __ptext3 008B                            __ptext4 0E84  
                          __ptext5 0005                            __ptext6 09DA  
                          __ptext7 0008                            __ptext8 0A04  
                          __ptext9 0AFB                   ___aldiv@dividend 0074  
                  ??_BMP085_Read16 0073                         ??_lcd_data 0070  
                          _sprintf 0A55                            clrloop0 0976  
                  ??_BMP085_Write8 0072               end_of_initialization 07FC  
              __end_of_BMP085_Init 0D51          BMP085_ReadRawPressure@raw 0024  
       ??_I2C_Master_RepeatedStart 0070                            fputc@fp 0072  
                BMP085_Write8@addr 0072                  BMP085_Write8@data 0071  
                ?_BMP085_ComputeB5 0026                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                  __end_of_vfpfcnvrt 01D3  
               ??_BMP085_ComputeB5 002A                   ___aldiv@quotient 0022  
                 vfpfcnvrt@convarg 002D                         ??_vfprintf 007D  
   __end_of_BMP085_ReadRawPressure 0E84                          _PORTCbits 0007  
       ?_BMP085_ReadRawTemperature 0078                          _TRISCbits 0087  
                        _TRISDbits 0088                        ?_lcd_string 0073  
                       main@buffer 0054                      ??_lcd_command 0070  
                   __end_of___lmul 0BA1                        vfpfcnvrt@ap 0029  
                      vfpfcnvrt@cp 0031                        vfpfcnvrt@fp 0026  
                      _BMP085_Init 0CBA                start_initialization 07D7  
__end_of_BMP085_ReadRawTemperature 0A37                        __end_of_abs 09ED  
                ??_I2C_Master_Init 0070                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070                        vfprintf@fmt 0035  
                         ??___lmul 0078                __end_of_lcd_command 0AFB  
                      __pdataBANK0 006F                        __pdataBANK1 00EE  
                         ?_I2C_ACK 0070                     _mb@BMP085$F246 01BE  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0                      ?_BMP085_Read8 0070  
                 _I2C_Master_Start 0986                   _I2C_Master_Write 09CA  
                        _main$1046 0068                           ?___aldiv 0070  
                         ?___almod 0070                           ?___lldiv 0070  
             I2C_Master_Write@data 0070                     _mc@BMP085$F247 01BC  
                 ___almod@dividend 0074                          __pstrings 0800  
                         _I2C_NACK 09A4                           ?_sprintf 0037  
             BMP085_ReadPressure@p 00C8                    ___aldiv@divisor 0070  
                   ??_BMP085_Read8 0071                    ___aldiv@counter 0020  
                        clear_ram0 0975                        _lcd_command 0ACC  
            __end_of_I2C_Read_Byte 0A04                          _vfpfcnvrt 008B  
                   _md@BMP085$F248 01BA                        __stringbase 0805  
      ??_BMP085_ReadRawTemperature 007A                       ??_lcd_string 0075  
                       vfpfcnvrt@c 0032              __end_of_BMP085_Read16 0BEB  
                ___lmul@multiplier 0070              __end_of_BMP085_Write8 0A55  
              _BMP085_ReadPressure 01D3                         vfprintf@ap 0036  
                       vfprintf@fp 0033           _oversampling@BMP085$F252 006F  
                   _b1@BMP085$F244 00D2          ?_I2C_Master_RepeatedStart 0070  
                       ?_vfpfcnvrt 0026                 __end_of_lcd_string 0A1B  
             ?_BMP085_ReadPressure 003F                 __end_of__stringtab 0806  
                       sprintf@fmt 0038                       ?_BMP085_Init 0070  
                  _I2C_Master_Init 09BD                    _I2C_Master_Wait 09B0  
                  _I2C_Master_Stop 098F                           __ptext10 0B2A  
                         __ptext11 0ACC                           __ptext20 0D51  
                         __ptext12 01D3                           __ptext21 0CBA  
                         __ptext13 0BEB                           __ptext30 0998  
                         __ptext22 09BD                           __ptext14 0A1B  
                         __ptext31 09B0                           __ptext23 0BA1  
                         __ptext15 0DEA                           __ptext24 09ED  
                         __ptext16 0A37                           __ptext25 09A4  
                         __ptext17 0A9D                           __ptext26 09CA  
                         __ptext18 0F1E                           __ptext27 098F  
                         __ptext19 0B5B                           __ptext28 0986  
                         __ptext29 097D                           _lcd_data 0AFB  
                  ___almod@divisor 0070                    ___almod@counter 0079  
                   _lcd_initialize 0B2A          _BMP085_ReadRawTemperature 0A1B  
                   _b2@BMP085$F245 00D0                           _vfprintf 0A78  
            ??_BMP085_ReadPressure 0043               __end_of_BMP085_Read8 0ACC  
         __end_of_I2C_Master_Start 098F           __end_of_I2C_Master_Write 09DA  
                        sprintf@ap 003E             __end_of_lcd_initialize 0B5B  
                 ___lldiv@dividend 0074                          stringcode 0800  
         ??_BMP085_ReadRawPressure 0020            __end_of_I2C_Master_Init 09CA  
                  _ac1@BMP085$F241 00D8            __end_of_I2C_Master_Wait 09BD  
          __end_of_I2C_Master_Stop 0998                        ??_vfpfcnvrt 002A  
                         sprintf@f 003F                           sprintf@s 0037  
                 _BMP085_ComputeB5 0F1E                   ___lldiv@quotient 0079  
                         stringdir 0800                           stringtab 0800  
                     ___aldiv@sign 0021                       ___almod@sign 007A  
                     _oversampling 00EE                    ?_lcd_initialize 0070  
                     ?_lcd_command 0070  
