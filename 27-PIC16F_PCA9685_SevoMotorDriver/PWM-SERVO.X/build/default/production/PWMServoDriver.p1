Version 4.0 HI-TECH Software Intermediate Code
"18 ./i2c.h
[; ;./i2c.h: 18: void I2C_Master_Init(void);
[v _I2C_Master_Init `(v ~T0 @X0 0 ef ]
"46 ./PWMServoDriver.h
[; ;./PWMServoDriver.h: 46: void PWMServoDriver_Reset(void);
[v _PWMServoDriver_Reset `(v ~T0 @X0 0 ef ]
"57
[; ;./PWMServoDriver.h: 57: void PWMServoDriver_SetOscillatorFrequency(uint32_t freq);
[v _PWMServoDriver_SetOscillatorFrequency `(v ~T0 @X0 0 ef1`ul ]
"49
[; ;./PWMServoDriver.h: 49: void PWMServoDriver_SetExtClk(uint8_t prescale);
[v _PWMServoDriver_SetExtClk `(v ~T0 @X0 0 ef1`uc ]
"50
[; ;./PWMServoDriver.h: 50: void PWMServoDriver_SetPWMFreq(float freq);
[v _PWMServoDriver_SetPWMFreq `(v ~T0 @X0 0 ef1`f ]
"60
[; ;./PWMServoDriver.h: 60: void PWMServoDriver_Write8(uint8_t addr, uint8_t data);
[v _PWMServoDriver_Write8 `(v ~T0 @X0 0 ef2`uc`uc ]
[v F164 `(v ~T0 @X0 1 tf1`ul ]
"20 C:\Program Files\Microchip\xc8\v2.50\pic\include\builtins.h
[v __delay `JF164 ~T0 @X0 0 e ]
[p i __delay ]
"59 ./PWMServoDriver.h
[; ;./PWMServoDriver.h: 59: uint8_t PWMServoDriver_Read8(uint8_t addr);
[v _PWMServoDriver_Read8 `(uc ~T0 @X0 0 ef1`uc ]
"20 ./i2c.h
[; ;./i2c.h: 20: void I2C_Master_Start(void);
[v _I2C_Master_Start `(v ~T0 @X0 0 ef ]
"25
[; ;./i2c.h: 25: unsigned char I2C_Master_Write(unsigned char data);
[v _I2C_Master_Write `(uc ~T0 @X0 0 ef1`uc ]
"21
[; ;./i2c.h: 21: void I2C_Master_RepeatedStart(void);
[v _I2C_Master_RepeatedStart `(v ~T0 @X0 0 ef ]
"26
[; ;./i2c.h: 26: unsigned char I2C_Read_Byte(void);
[v _I2C_Read_Byte `(uc ~T0 @X0 0 ef ]
"23
[; ;./i2c.h: 23: void I2C_ACK(void);
[v _I2C_ACK `(v ~T0 @X0 0 ef ]
"24
[; ;./i2c.h: 24: void I2C_NACK(void);
[v _I2C_NACK `(v ~T0 @X0 0 ef ]
"22
[; ;./i2c.h: 22: void I2C_Master_Stop(void);
[v _I2C_Master_Stop `(v ~T0 @X0 0 ef ]
"54 C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8\pic\include\proc\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"4 PWMServoDriver.c
[; ;PWMServoDriver.c: 4: static uint8_t _i2caddr = 0x40;
[v __i2caddr `uc ~T0 @X0 1 s ]
[i __i2caddr
-> -> 64 `i `uc
]
"5
[; ;PWMServoDriver.c: 5: static uint32_t _oscillator_freq = 25000000;
[v __oscillator_freq `ul ~T0 @X0 1 s ]
[i __oscillator_freq
-> -> 25000000 `l `ul
]
"7
[; ;PWMServoDriver.c: 7: void PWMServoDriver_Init(uint8_t addr, uint8_t prescale) {
[v _PWMServoDriver_Init `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _PWMServoDriver_Init ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _prescale `uc ~T0 @X0 1 r2 ]
[f ]
"8
[; ;PWMServoDriver.c: 8:     _i2caddr = addr;
[e = __i2caddr _addr ]
"9
[; ;PWMServoDriver.c: 9:     I2C_Master_Init();
[e ( _I2C_Master_Init ..  ]
"10
[; ;PWMServoDriver.c: 10:     PWMServoDriver_Reset();
[e ( _PWMServoDriver_Reset ..  ]
"11
[; ;PWMServoDriver.c: 11:     PWMServoDriver_SetOscillatorFrequency(25000000);
[e ( _PWMServoDriver_SetOscillatorFrequency (1 -> -> 25000000 `l `ul ]
"12
[; ;PWMServoDriver.c: 12:     if (prescale) {
[e $ ! != -> _prescale `i -> 0 `i 102  ]
{
"13
[; ;PWMServoDriver.c: 13:         PWMServoDriver_SetExtClk(prescale);
[e ( _PWMServoDriver_SetExtClk (1 _prescale ]
"14
[; ;PWMServoDriver.c: 14:         } else {
}
[e $U 103  ]
[e :U 102 ]
{
"15
[; ;PWMServoDriver.c: 15:         PWMServoDriver_SetPWMFreq(1000);
[e ( _PWMServoDriver_SetPWMFreq (1 -> -> 1000 `i `f ]
"16
[; ;PWMServoDriver.c: 16:         }
}
[e :U 103 ]
"17
[; ;PWMServoDriver.c: 17:     }
[e :UE 101 ]
}
"19
[; ;PWMServoDriver.c: 19: void PWMServoDriver_Reset(void) {
[v _PWMServoDriver_Reset `(v ~T0 @X0 1 ef ]
{
[e :U _PWMServoDriver_Reset ]
[f ]
"20
[; ;PWMServoDriver.c: 20:     PWMServoDriver_Write8(0x00, 0x80);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc -> -> 128 `i `uc ]
"21
[; ;PWMServoDriver.c: 21:     _delay((unsigned long)((10)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"22
[; ;PWMServoDriver.c: 22:     }
[e :UE 104 ]
}
"24
[; ;PWMServoDriver.c: 24: void PWMServoDriver_Sleep(void) {
[v _PWMServoDriver_Sleep `(v ~T0 @X0 1 ef ]
{
[e :U _PWMServoDriver_Sleep ]
[f ]
"25
[; ;PWMServoDriver.c: 25:     uint8_t mode1 = PWMServoDriver_Read8(0x00);
[v _mode1 `uc ~T0 @X0 1 a ]
[e = _mode1 ( _PWMServoDriver_Read8 (1 -> -> 0 `i `uc ]
"26
[; ;PWMServoDriver.c: 26:     mode1 |= 0x10;
[e =| _mode1 -> -> 16 `i `uc ]
"27
[; ;PWMServoDriver.c: 27:     PWMServoDriver_Write8(0x00, mode1);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc _mode1 ]
"28
[; ;PWMServoDriver.c: 28:     _delay((unsigned long)((5)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"29
[; ;PWMServoDriver.c: 29:     }
[e :UE 105 ]
}
"31
[; ;PWMServoDriver.c: 31: void PWMServoDriver_Wakeup(void) {
[v _PWMServoDriver_Wakeup `(v ~T0 @X0 1 ef ]
{
[e :U _PWMServoDriver_Wakeup ]
[f ]
"32
[; ;PWMServoDriver.c: 32:     uint8_t mode1 = PWMServoDriver_Read8(0x00);
[v _mode1 `uc ~T0 @X0 1 a ]
[e = _mode1 ( _PWMServoDriver_Read8 (1 -> -> 0 `i `uc ]
"33
[; ;PWMServoDriver.c: 33:     mode1 &= ~0x10;
[e =& _mode1 -> ~ -> 16 `i `uc ]
"34
[; ;PWMServoDriver.c: 34:     PWMServoDriver_Write8(0x00, mode1);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc _mode1 ]
"35
[; ;PWMServoDriver.c: 35:     }
[e :UE 106 ]
}
"37
[; ;PWMServoDriver.c: 37: void PWMServoDriver_SetExtClk(uint8_t prescale) {
[v _PWMServoDriver_SetExtClk `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _PWMServoDriver_SetExtClk ]
[v _prescale `uc ~T0 @X0 1 r1 ]
[f ]
"38
[; ;PWMServoDriver.c: 38:     uint8_t oldmode = PWMServoDriver_Read8(0x00);
[v _oldmode `uc ~T0 @X0 1 a ]
[e = _oldmode ( _PWMServoDriver_Read8 (1 -> -> 0 `i `uc ]
"39
[; ;PWMServoDriver.c: 39:     uint8_t newmode = (oldmode & ~0x80) | 0x10;
[v _newmode `uc ~T0 @X0 1 a ]
[e = _newmode -> | & -> _oldmode `i ~ -> 128 `i -> 16 `i `uc ]
"40
[; ;PWMServoDriver.c: 40:     PWMServoDriver_Write8(0x00, newmode);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc _newmode ]
"41
[; ;PWMServoDriver.c: 41:     PWMServoDriver_Write8(0x00, newmode | 0x40);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc -> | -> _newmode `i -> 64 `i `uc ]
"42
[; ;PWMServoDriver.c: 42:     PWMServoDriver_Write8(0xFE, prescale);
[e ( _PWMServoDriver_Write8 (2 , -> -> 254 `i `uc _prescale ]
"43
[; ;PWMServoDriver.c: 43:     _delay((unsigned long)((5)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"44
[; ;PWMServoDriver.c: 44:     PWMServoDriver_Write8(0x00, (newmode & ~0x10) | 0x80 | 0x20);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc -> | | & -> _newmode `i ~ -> 16 `i -> 128 `i -> 32 `i `uc ]
"45
[; ;PWMServoDriver.c: 45:     }
[e :UE 107 ]
}
"47
[; ;PWMServoDriver.c: 47: void PWMServoDriver_SetPWMFreq(float freq) {
[v _PWMServoDriver_SetPWMFreq `(v ~T0 @X0 1 ef1`f ]
{
[e :U _PWMServoDriver_SetPWMFreq ]
[v _freq `f ~T0 @X0 1 r1 ]
[f ]
"48
[; ;PWMServoDriver.c: 48:     if (freq < 1) freq = 1;
[e $ ! < _freq -> -> 1 `i `f 109  ]
[e = _freq -> -> 1 `i `f ]
[e :U 109 ]
"49
[; ;PWMServoDriver.c: 49:     if (freq > 3500) freq = 3500;
[e $ ! > _freq -> -> 3500 `i `f 110  ]
[e = _freq -> -> 3500 `i `f ]
[e :U 110 ]
"50
[; ;PWMServoDriver.c: 50:     float prescaleval = ((_oscillator_freq / (freq * 4096.0)) + 0.5) - 1;
[v _prescaleval `f ~T0 @X0 1 a ]
[e = _prescaleval -> - + / -> __oscillator_freq `d * -> _freq `d .4096.0 .0.5 -> -> 1 `i `d `f ]
"51
[; ;PWMServoDriver.c: 51:     if (prescaleval < 3) prescaleval = 3;
[e $ ! < _prescaleval -> -> 3 `i `f 111  ]
[e = _prescaleval -> -> 3 `i `f ]
[e :U 111 ]
"52
[; ;PWMServoDriver.c: 52:     if (prescaleval > 255) prescaleval = 255;
[e $ ! > _prescaleval -> -> 255 `i `f 112  ]
[e = _prescaleval -> -> 255 `i `f ]
[e :U 112 ]
"53
[; ;PWMServoDriver.c: 53:     uint8_t prescale = (uint8_t)prescaleval;
[v _prescale `uc ~T0 @X0 1 a ]
[e = _prescale -> _prescaleval `uc ]
"54
[; ;PWMServoDriver.c: 54:     uint8_t oldmode = PWMServoDriver_Read8(0x00);
[v _oldmode `uc ~T0 @X0 1 a ]
[e = _oldmode ( _PWMServoDriver_Read8 (1 -> -> 0 `i `uc ]
"55
[; ;PWMServoDriver.c: 55:     uint8_t newmode = (oldmode & ~0x80) | 0x10;
[v _newmode `uc ~T0 @X0 1 a ]
[e = _newmode -> | & -> _oldmode `i ~ -> 128 `i -> 16 `i `uc ]
"56
[; ;PWMServoDriver.c: 56:     PWMServoDriver_Write8(0x00, newmode);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc _newmode ]
"57
[; ;PWMServoDriver.c: 57:     PWMServoDriver_Write8(0xFE, prescale);
[e ( _PWMServoDriver_Write8 (2 , -> -> 254 `i `uc _prescale ]
"58
[; ;PWMServoDriver.c: 58:     PWMServoDriver_Write8(0x00, oldmode);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc _oldmode ]
"59
[; ;PWMServoDriver.c: 59:     _delay((unsigned long)((5)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"60
[; ;PWMServoDriver.c: 60:     PWMServoDriver_Write8(0x00, oldmode | 0x80 | 0x20);
[e ( _PWMServoDriver_Write8 (2 , -> -> 0 `i `uc -> | | -> _oldmode `i -> 128 `i -> 32 `i `uc ]
"61
[; ;PWMServoDriver.c: 61:     }
[e :UE 108 ]
}
"63
[; ;PWMServoDriver.c: 63: void PWMServoDriver_SetOutputMode(uint8_t totempole) {
[v _PWMServoDriver_SetOutputMode `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _PWMServoDriver_SetOutputMode ]
[v _totempole `uc ~T0 @X0 1 r1 ]
[f ]
"64
[; ;PWMServoDriver.c: 64:     uint8_t oldmode = PWMServoDriver_Read8(0x01);
[v _oldmode `uc ~T0 @X0 1 a ]
[e = _oldmode ( _PWMServoDriver_Read8 (1 -> -> 1 `i `uc ]
"65
[; ;PWMServoDriver.c: 65:     uint8_t newmode;
[v _newmode `uc ~T0 @X0 1 a ]
"66
[; ;PWMServoDriver.c: 66:     if (totempole) {
[e $ ! != -> _totempole `i -> 0 `i 114  ]
{
"67
[; ;PWMServoDriver.c: 67:         newmode = oldmode | 0x04;
[e = _newmode -> | -> _oldmode `i -> 4 `i `uc ]
"68
[; ;PWMServoDriver.c: 68:         } else {
}
[e $U 115  ]
[e :U 114 ]
{
"69
[; ;PWMServoDriver.c: 69:         newmode = oldmode & ~0x04;
[e = _newmode -> & -> _oldmode `i ~ -> 4 `i `uc ]
"70
[; ;PWMServoDriver.c: 70:         }
}
[e :U 115 ]
"71
[; ;PWMServoDriver.c: 71:     PWMServoDriver_Write8(0x01, newmode);
[e ( _PWMServoDriver_Write8 (2 , -> -> 1 `i `uc _newmode ]
"72
[; ;PWMServoDriver.c: 72:     }
[e :UE 113 ]
}
"74
[; ;PWMServoDriver.c: 74: uint16_t PWMServoDriver_GetPWM(uint8_t num, uint8_t off) {
[v _PWMServoDriver_GetPWM `(us ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _PWMServoDriver_GetPWM ]
[v _num `uc ~T0 @X0 1 r1 ]
[v _off `uc ~T0 @X0 1 r2 ]
[f ]
"75
[; ;PWMServoDriver.c: 75:     uint8_t reg = 0x06 + 4 * num;
[v _reg `uc ~T0 @X0 1 a ]
[e = _reg -> + -> 6 `i * -> 4 `i -> _num `i `uc ]
"76
[; ;PWMServoDriver.c: 76:     if (off) {
[e $ ! != -> _off `i -> 0 `i 117  ]
{
"77
[; ;PWMServoDriver.c: 77:         reg += 2;
[e =+ _reg -> -> 2 `i `uc ]
"78
[; ;PWMServoDriver.c: 78:         }
}
[e :U 117 ]
"79
[; ;PWMServoDriver.c: 79:     uint8_t buffer[2];
[v _buffer `uc ~T0 @X0 -> 2 `i a ]
"80
[; ;PWMServoDriver.c: 80:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"81
[; ;PWMServoDriver.c: 81:     I2C_Master_Write((_i2caddr << 1) | 0);
[e ( _I2C_Master_Write (1 -> | << -> __i2caddr `i -> 1 `i -> 0 `i `uc ]
"82
[; ;PWMServoDriver.c: 82:     I2C_Master_Write(reg);
[e ( _I2C_Master_Write (1 _reg ]
"83
[; ;PWMServoDriver.c: 83:     I2C_Master_RepeatedStart();
[e ( _I2C_Master_RepeatedStart ..  ]
"84
[; ;PWMServoDriver.c: 84:     I2C_Master_Write((_i2caddr << 1) | 1);
[e ( _I2C_Master_Write (1 -> | << -> __i2caddr `i -> 1 `i -> 1 `i `uc ]
"85
[; ;PWMServoDriver.c: 85:     buffer[0] = I2C_Read_Byte();
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ( _I2C_Read_Byte ..  ]
"86
[; ;PWMServoDriver.c: 86:     I2C_ACK();
[e ( _I2C_ACK ..  ]
"87
[; ;PWMServoDriver.c: 87:     buffer[1] = I2C_Read_Byte();
[e = *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux ( _I2C_Read_Byte ..  ]
"88
[; ;PWMServoDriver.c: 88:     I2C_NACK();
[e ( _I2C_NACK ..  ]
"89
[; ;PWMServoDriver.c: 89:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"90
[; ;PWMServoDriver.c: 90:     return ((uint16_t)buffer[1] << 8) | buffer[0];
[e ) -> | << -> -> *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux `us `ui -> 8 `i -> *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux `ui `us ]
[e $UE 116  ]
"91
[; ;PWMServoDriver.c: 91:     }
[e :UE 116 ]
}
"93
[; ;PWMServoDriver.c: 93: void PWMServoDriver_SetPWM(uint8_t num, uint16_t on, uint16_t off) {
[v _PWMServoDriver_SetPWM `(v ~T0 @X0 1 ef3`uc`us`us ]
{
[e :U _PWMServoDriver_SetPWM ]
[v _num `uc ~T0 @X0 1 r1 ]
[v _on `us ~T0 @X0 1 r2 ]
[v _off `us ~T0 @X0 1 r3 ]
[f ]
"94
[; ;PWMServoDriver.c: 94:     uint8_t reg = 0x06 + 4 * num;
[v _reg `uc ~T0 @X0 1 a ]
[e = _reg -> + -> 6 `i * -> 4 `i -> _num `i `uc ]
"95
[; ;PWMServoDriver.c: 95:     PWMServoDriver_Write8(reg, on & 0xFF);
[e ( _PWMServoDriver_Write8 (2 , _reg -> & -> _on `ui -> -> 255 `i `ui `uc ]
"96
[; ;PWMServoDriver.c: 96:     PWMServoDriver_Write8(reg + 1, on >> 8);
[e ( _PWMServoDriver_Write8 (2 , -> + -> _reg `i -> 1 `i `uc -> >> -> _on `ui -> 8 `i `uc ]
"97
[; ;PWMServoDriver.c: 97:     PWMServoDriver_Write8(reg + 2, off & 0xFF);
[e ( _PWMServoDriver_Write8 (2 , -> + -> _reg `i -> 2 `i `uc -> & -> _off `ui -> -> 255 `i `ui `uc ]
"98
[; ;PWMServoDriver.c: 98:     PWMServoDriver_Write8(reg + 3, off >> 8);
[e ( _PWMServoDriver_Write8 (2 , -> + -> _reg `i -> 3 `i `uc -> >> -> _off `ui -> 8 `i `uc ]
"99
[; ;PWMServoDriver.c: 99:     }
[e :UE 118 ]
}
"101
[; ;PWMServoDriver.c: 101: void PWMServoDriver_SetPin(uint8_t num, uint16_t val, uint8_t invert) {
[v _PWMServoDriver_SetPin `(v ~T0 @X0 1 ef3`uc`us`uc ]
{
[e :U _PWMServoDriver_SetPin ]
[v _num `uc ~T0 @X0 1 r1 ]
[v _val `us ~T0 @X0 1 r2 ]
[v _invert `uc ~T0 @X0 1 r3 ]
[f ]
"102
[; ;PWMServoDriver.c: 102:     if (val > 4095) {
[e $ ! > -> _val `ui -> -> 4095 `i `ui 120  ]
{
"103
[; ;PWMServoDriver.c: 103:         val = 4095;
[e = _val -> -> 4095 `i `us ]
"104
[; ;PWMServoDriver.c: 104:         }
}
[e :U 120 ]
"105
[; ;PWMServoDriver.c: 105:     if (invert) {
[e $ ! != -> _invert `i -> 0 `i 121  ]
{
"106
[; ;PWMServoDriver.c: 106:         if (val == 0) {
[e $ ! == -> _val `ui -> -> 0 `i `ui 122  ]
{
"107
[; ;PWMServoDriver.c: 107:             PWMServoDriver_SetPWM(num, 4096, 0);
[e ( _PWMServoDriver_SetPWM (3 , , _num -> -> 4096 `i `us -> -> 0 `i `us ]
"108
[; ;PWMServoDriver.c: 108:             } else if (val == 4095) {
}
[e $U 123  ]
[e :U 122 ]
[e $ ! == -> _val `ui -> -> 4095 `i `ui 124  ]
{
"109
[; ;PWMServoDriver.c: 109:                 PWMServoDriver_SetPWM(num, 0, 4096);
[e ( _PWMServoDriver_SetPWM (3 , , _num -> -> 0 `i `us -> -> 4096 `i `us ]
"110
[; ;PWMServoDriver.c: 110:                 } else {
}
[e $U 125  ]
[e :U 124 ]
{
"111
[; ;PWMServoDriver.c: 111:                 PWMServoDriver_SetPWM(num, 0, 4095 - val);
[e ( _PWMServoDriver_SetPWM (3 , , _num -> -> 0 `i `us -> - -> -> 4095 `i `ui -> _val `ui `us ]
"112
[; ;PWMServoDriver.c: 112:                 }
}
[e :U 125 ]
[e :U 123 ]
"113
[; ;PWMServoDriver.c: 113:         } else {
}
[e $U 126  ]
[e :U 121 ]
{
"114
[; ;PWMServoDriver.c: 114:         if (val == 4095) {
[e $ ! == -> _val `ui -> -> 4095 `i `ui 127  ]
{
"115
[; ;PWMServoDriver.c: 115:             PWMServoDriver_SetPWM(num, 4096, 0);
[e ( _PWMServoDriver_SetPWM (3 , , _num -> -> 4096 `i `us -> -> 0 `i `us ]
"116
[; ;PWMServoDriver.c: 116:             } else if (val == 0) {
}
[e $U 128  ]
[e :U 127 ]
[e $ ! == -> _val `ui -> -> 0 `i `ui 129  ]
{
"117
[; ;PWMServoDriver.c: 117:                 PWMServoDriver_SetPWM(num, 0, 4096);
[e ( _PWMServoDriver_SetPWM (3 , , _num -> -> 0 `i `us -> -> 4096 `i `us ]
"118
[; ;PWMServoDriver.c: 118:                 } else {
}
[e $U 130  ]
[e :U 129 ]
{
"119
[; ;PWMServoDriver.c: 119:                 PWMServoDriver_SetPWM(num, 0, val);
[e ( _PWMServoDriver_SetPWM (3 , , _num -> -> 0 `i `us _val ]
"120
[; ;PWMServoDriver.c: 120:                 }
}
[e :U 130 ]
[e :U 128 ]
"121
[; ;PWMServoDriver.c: 121:         }
}
[e :U 126 ]
"122
[; ;PWMServoDriver.c: 122:     }
[e :UE 119 ]
}
"124
[; ;PWMServoDriver.c: 124: uint8_t PWMServoDriver_ReadPrescale(void) {
[v _PWMServoDriver_ReadPrescale `(uc ~T0 @X0 1 ef ]
{
[e :U _PWMServoDriver_ReadPrescale ]
[f ]
"125
[; ;PWMServoDriver.c: 125:     return PWMServoDriver_Read8(0xFE);
[e ) ( _PWMServoDriver_Read8 (1 -> -> 254 `i `uc ]
[e $UE 131  ]
"126
[; ;PWMServoDriver.c: 126:     }
[e :UE 131 ]
}
"128
[; ;PWMServoDriver.c: 128: void PWMServoDriver_WriteMicroseconds(uint8_t num, uint16_t Microseconds) {
[v _PWMServoDriver_WriteMicroseconds `(v ~T0 @X0 1 ef2`uc`us ]
{
[e :U _PWMServoDriver_WriteMicroseconds ]
[v _num `uc ~T0 @X0 1 r1 ]
[v _Microseconds `us ~T0 @X0 1 r2 ]
[f ]
"129
[; ;PWMServoDriver.c: 129:     double pulse = Microseconds;
[v _pulse `d ~T0 @X0 1 a ]
[e = _pulse -> _Microseconds `d ]
"130
[; ;PWMServoDriver.c: 130:     double pulselength = 1000000;
[v _pulselength `d ~T0 @X0 1 a ]
[e = _pulselength -> -> 1000000 `l `d ]
"131
[; ;PWMServoDriver.c: 131:     uint16_t prescale = PWMServoDriver_ReadPrescale();
[v _prescale `us ~T0 @X0 1 a ]
[e = _prescale -> ( _PWMServoDriver_ReadPrescale ..  `us ]
"132
[; ;PWMServoDriver.c: 132:     prescale += 1;
[e =+ _prescale -> -> 1 `i `us ]
"133
[; ;PWMServoDriver.c: 133:     pulselength *= prescale;
[e =* _pulselength -> -> _prescale `ui `d ]
"134
[; ;PWMServoDriver.c: 134:     pulselength /= _oscillator_freq;
[e =/ _pulselength -> __oscillator_freq `d ]
"135
[; ;PWMServoDriver.c: 135:     pulse /= pulselength;
[e =/ _pulse _pulselength ]
"136
[; ;PWMServoDriver.c: 136:     PWMServoDriver_SetPWM(num, 0, (uint16_t)pulse);
[e ( _PWMServoDriver_SetPWM (3 , , _num -> -> 0 `i `us -> _pulse `us ]
"137
[; ;PWMServoDriver.c: 137:     }
[e :UE 132 ]
}
"139
[; ;PWMServoDriver.c: 139: void PWMServoDriver_SetOscillatorFrequency(uint32_t freq) {
[v _PWMServoDriver_SetOscillatorFrequency `(v ~T0 @X0 1 ef1`ul ]
{
[e :U _PWMServoDriver_SetOscillatorFrequency ]
[v _freq `ul ~T0 @X0 1 r1 ]
[f ]
"140
[; ;PWMServoDriver.c: 140:     _oscillator_freq = freq;
[e = __oscillator_freq _freq ]
"141
[; ;PWMServoDriver.c: 141:     }
[e :UE 133 ]
}
"143
[; ;PWMServoDriver.c: 143: uint32_t PWMServoDriver_GetOscillatorFrequency(void) {
[v _PWMServoDriver_GetOscillatorFrequency `(ul ~T0 @X0 1 ef ]
{
[e :U _PWMServoDriver_GetOscillatorFrequency ]
[f ]
"144
[; ;PWMServoDriver.c: 144:     return _oscillator_freq;
[e ) __oscillator_freq ]
[e $UE 134  ]
"145
[; ;PWMServoDriver.c: 145:     }
[e :UE 134 ]
}
"147
[; ;PWMServoDriver.c: 147: uint8_t PWMServoDriver_Read8(uint8_t addr) {
[v _PWMServoDriver_Read8 `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _PWMServoDriver_Read8 ]
[v _addr `uc ~T0 @X0 1 r1 ]
[f ]
"148
[; ;PWMServoDriver.c: 148:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"149
[; ;PWMServoDriver.c: 149:     I2C_Master_Write((_i2caddr << 1) | 0);
[e ( _I2C_Master_Write (1 -> | << -> __i2caddr `i -> 1 `i -> 0 `i `uc ]
"150
[; ;PWMServoDriver.c: 150:     I2C_Master_Write(addr);
[e ( _I2C_Master_Write (1 _addr ]
"151
[; ;PWMServoDriver.c: 151:     I2C_Master_RepeatedStart();
[e ( _I2C_Master_RepeatedStart ..  ]
"152
[; ;PWMServoDriver.c: 152:     I2C_Master_Write((_i2caddr << 1) | 1);
[e ( _I2C_Master_Write (1 -> | << -> __i2caddr `i -> 1 `i -> 1 `i `uc ]
"153
[; ;PWMServoDriver.c: 153:     uint8_t data = I2C_Read_Byte();
[v _data `uc ~T0 @X0 1 a ]
[e = _data ( _I2C_Read_Byte ..  ]
"154
[; ;PWMServoDriver.c: 154:     I2C_NACK();
[e ( _I2C_NACK ..  ]
"155
[; ;PWMServoDriver.c: 155:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"156
[; ;PWMServoDriver.c: 156:     return data;
[e ) _data ]
[e $UE 135  ]
"157
[; ;PWMServoDriver.c: 157:     }
[e :UE 135 ]
}
"159
[; ;PWMServoDriver.c: 159: void PWMServoDriver_Write8(uint8_t addr, uint8_t data) {
[v _PWMServoDriver_Write8 `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _PWMServoDriver_Write8 ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
"160
[; ;PWMServoDriver.c: 160:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"161
[; ;PWMServoDriver.c: 161:     I2C_Master_Write((_i2caddr << 1) | 0);
[e ( _I2C_Master_Write (1 -> | << -> __i2caddr `i -> 1 `i -> 0 `i `uc ]
"162
[; ;PWMServoDriver.c: 162:     I2C_Master_Write(addr);
[e ( _I2C_Master_Write (1 _addr ]
"163
[; ;PWMServoDriver.c: 163:     I2C_Master_Write(data);
[e ( _I2C_Master_Write (1 _data ]
"164
[; ;PWMServoDriver.c: 164:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"165
[; ;PWMServoDriver.c: 165:     }
[e :UE 136 ]
}
