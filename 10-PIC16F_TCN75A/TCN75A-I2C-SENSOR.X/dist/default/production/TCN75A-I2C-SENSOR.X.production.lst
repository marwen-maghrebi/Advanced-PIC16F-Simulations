

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Nov 15 15:42:58 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2,group=2
    56                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2,group=2
    57                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2,group=2
    63                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2,group=2
    64                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text6_split_1,local,class=CODE,space=0,merge=1,delta=2
    72                           	dabs	1,0x7E,2
    73     0000                     
    74                           ; Generated 12/10/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F877A Definitions
   106                           ; 
   107                           ; SFR Addresses
   108     0004                     fsr             equ	4
   109     0004                     fsr0            equ	4
   110     0000                     indf            equ	0
   111     0000                     indf0           equ	0
   112     0002                     pc              equ	2
   113     0002                     pcl             equ	2
   114     000A                     pclath          equ	10
   115     0003                     status          equ	3
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176     0000                     INDF            equ	0	;# 
   177     0001                     TMR0            equ	1	;# 
   178     0002                     PCL             equ	2	;# 
   179     0003                     STATUS          equ	3	;# 
   180     0004                     FSR             equ	4	;# 
   181     0005                     PORTA           equ	5	;# 
   182     0006                     PORTB           equ	6	;# 
   183     0007                     PORTC           equ	7	;# 
   184     0008                     PORTD           equ	8	;# 
   185     0009                     PORTE           equ	9	;# 
   186     000A                     PCLATH          equ	10	;# 
   187     000B                     INTCON          equ	11	;# 
   188     000C                     PIR1            equ	12	;# 
   189     000D                     PIR2            equ	13	;# 
   190     000E                     TMR1            equ	14	;# 
   191     000E                     TMR1L           equ	14	;# 
   192     000F                     TMR1H           equ	15	;# 
   193     0010                     T1CON           equ	16	;# 
   194     0011                     TMR2            equ	17	;# 
   195     0012                     T2CON           equ	18	;# 
   196     0013                     SSPBUF          equ	19	;# 
   197     0014                     SSPCON          equ	20	;# 
   198     0015                     CCPR1           equ	21	;# 
   199     0015                     CCPR1L          equ	21	;# 
   200     0016                     CCPR1H          equ	22	;# 
   201     0017                     CCP1CON         equ	23	;# 
   202     0018                     RCSTA           equ	24	;# 
   203     0019                     TXREG           equ	25	;# 
   204     001A                     RCREG           equ	26	;# 
   205     001B                     CCPR2           equ	27	;# 
   206     001B                     CCPR2L          equ	27	;# 
   207     001C                     CCPR2H          equ	28	;# 
   208     001D                     CCP2CON         equ	29	;# 
   209     001E                     ADRESH          equ	30	;# 
   210     001F                     ADCON0          equ	31	;# 
   211     0081                     OPTION_REG      equ	129	;# 
   212     0085                     TRISA           equ	133	;# 
   213     0086                     TRISB           equ	134	;# 
   214     0087                     TRISC           equ	135	;# 
   215     0088                     TRISD           equ	136	;# 
   216     0089                     TRISE           equ	137	;# 
   217     008C                     PIE1            equ	140	;# 
   218     008D                     PIE2            equ	141	;# 
   219     008E                     PCON            equ	142	;# 
   220     0091                     SSPCON2         equ	145	;# 
   221     0092                     PR2             equ	146	;# 
   222     0093                     SSPADD          equ	147	;# 
   223     0094                     SSPSTAT         equ	148	;# 
   224     0098                     TXSTA           equ	152	;# 
   225     0099                     SPBRG           equ	153	;# 
   226     009C                     CMCON           equ	156	;# 
   227     009D                     CVRCON          equ	157	;# 
   228     009E                     ADRESL          equ	158	;# 
   229     009F                     ADCON1          equ	159	;# 
   230     010C                     EEDATA          equ	268	;# 
   231     010D                     EEADR           equ	269	;# 
   232     010E                     EEDATH          equ	270	;# 
   233     010F                     EEADRH          equ	271	;# 
   234     018C                     EECON1          equ	396	;# 
   235     018D                     EECON2          equ	397	;# 
   236     0000                     INDF            equ	0	;# 
   237     0001                     TMR0            equ	1	;# 
   238     0002                     PCL             equ	2	;# 
   239     0003                     STATUS          equ	3	;# 
   240     0004                     FSR             equ	4	;# 
   241     0005                     PORTA           equ	5	;# 
   242     0006                     PORTB           equ	6	;# 
   243     0007                     PORTC           equ	7	;# 
   244     0008                     PORTD           equ	8	;# 
   245     0009                     PORTE           equ	9	;# 
   246     000A                     PCLATH          equ	10	;# 
   247     000B                     INTCON          equ	11	;# 
   248     000C                     PIR1            equ	12	;# 
   249     000D                     PIR2            equ	13	;# 
   250     000E                     TMR1            equ	14	;# 
   251     000E                     TMR1L           equ	14	;# 
   252     000F                     TMR1H           equ	15	;# 
   253     0010                     T1CON           equ	16	;# 
   254     0011                     TMR2            equ	17	;# 
   255     0012                     T2CON           equ	18	;# 
   256     0013                     SSPBUF          equ	19	;# 
   257     0014                     SSPCON          equ	20	;# 
   258     0015                     CCPR1           equ	21	;# 
   259     0015                     CCPR1L          equ	21	;# 
   260     0016                     CCPR1H          equ	22	;# 
   261     0017                     CCP1CON         equ	23	;# 
   262     0018                     RCSTA           equ	24	;# 
   263     0019                     TXREG           equ	25	;# 
   264     001A                     RCREG           equ	26	;# 
   265     001B                     CCPR2           equ	27	;# 
   266     001B                     CCPR2L          equ	27	;# 
   267     001C                     CCPR2H          equ	28	;# 
   268     001D                     CCP2CON         equ	29	;# 
   269     001E                     ADRESH          equ	30	;# 
   270     001F                     ADCON0          equ	31	;# 
   271     0081                     OPTION_REG      equ	129	;# 
   272     0085                     TRISA           equ	133	;# 
   273     0086                     TRISB           equ	134	;# 
   274     0087                     TRISC           equ	135	;# 
   275     0088                     TRISD           equ	136	;# 
   276     0089                     TRISE           equ	137	;# 
   277     008C                     PIE1            equ	140	;# 
   278     008D                     PIE2            equ	141	;# 
   279     008E                     PCON            equ	142	;# 
   280     0091                     SSPCON2         equ	145	;# 
   281     0092                     PR2             equ	146	;# 
   282     0093                     SSPADD          equ	147	;# 
   283     0094                     SSPSTAT         equ	148	;# 
   284     0098                     TXSTA           equ	152	;# 
   285     0099                     SPBRG           equ	153	;# 
   286     009C                     CMCON           equ	156	;# 
   287     009D                     CVRCON          equ	157	;# 
   288     009E                     ADRESL          equ	158	;# 
   289     009F                     ADCON1          equ	159	;# 
   290     010C                     EEDATA          equ	268	;# 
   291     010D                     EEADR           equ	269	;# 
   292     010E                     EEDATH          equ	270	;# 
   293     010F                     EEADRH          equ	271	;# 
   294     018C                     EECON1          equ	396	;# 
   295     018D                     EECON2          equ	397	;# 
   296     0000                     INDF            equ	0	;# 
   297     0001                     TMR0            equ	1	;# 
   298     0002                     PCL             equ	2	;# 
   299     0003                     STATUS          equ	3	;# 
   300     0004                     FSR             equ	4	;# 
   301     0005                     PORTA           equ	5	;# 
   302     0006                     PORTB           equ	6	;# 
   303     0007                     PORTC           equ	7	;# 
   304     0008                     PORTD           equ	8	;# 
   305     0009                     PORTE           equ	9	;# 
   306     000A                     PCLATH          equ	10	;# 
   307     000B                     INTCON          equ	11	;# 
   308     000C                     PIR1            equ	12	;# 
   309     000D                     PIR2            equ	13	;# 
   310     000E                     TMR1            equ	14	;# 
   311     000E                     TMR1L           equ	14	;# 
   312     000F                     TMR1H           equ	15	;# 
   313     0010                     T1CON           equ	16	;# 
   314     0011                     TMR2            equ	17	;# 
   315     0012                     T2CON           equ	18	;# 
   316     0013                     SSPBUF          equ	19	;# 
   317     0014                     SSPCON          equ	20	;# 
   318     0015                     CCPR1           equ	21	;# 
   319     0015                     CCPR1L          equ	21	;# 
   320     0016                     CCPR1H          equ	22	;# 
   321     0017                     CCP1CON         equ	23	;# 
   322     0018                     RCSTA           equ	24	;# 
   323     0019                     TXREG           equ	25	;# 
   324     001A                     RCREG           equ	26	;# 
   325     001B                     CCPR2           equ	27	;# 
   326     001B                     CCPR2L          equ	27	;# 
   327     001C                     CCPR2H          equ	28	;# 
   328     001D                     CCP2CON         equ	29	;# 
   329     001E                     ADRESH          equ	30	;# 
   330     001F                     ADCON0          equ	31	;# 
   331     0081                     OPTION_REG      equ	129	;# 
   332     0085                     TRISA           equ	133	;# 
   333     0086                     TRISB           equ	134	;# 
   334     0087                     TRISC           equ	135	;# 
   335     0088                     TRISD           equ	136	;# 
   336     0089                     TRISE           equ	137	;# 
   337     008C                     PIE1            equ	140	;# 
   338     008D                     PIE2            equ	141	;# 
   339     008E                     PCON            equ	142	;# 
   340     0091                     SSPCON2         equ	145	;# 
   341     0092                     PR2             equ	146	;# 
   342     0093                     SSPADD          equ	147	;# 
   343     0094                     SSPSTAT         equ	148	;# 
   344     0098                     TXSTA           equ	152	;# 
   345     0099                     SPBRG           equ	153	;# 
   346     009C                     CMCON           equ	156	;# 
   347     009D                     CVRCON          equ	157	;# 
   348     009E                     ADRESL          equ	158	;# 
   349     009F                     ADCON1          equ	159	;# 
   350     010C                     EEDATA          equ	268	;# 
   351     010D                     EEADR           equ	269	;# 
   352     010E                     EEDATH          equ	270	;# 
   353     010F                     EEADRH          equ	271	;# 
   354     018C                     EECON1          equ	396	;# 
   355     018D                     EECON2          equ	397	;# 
   356     0000                     INDF            equ	0	;# 
   357     0001                     TMR0            equ	1	;# 
   358     0002                     PCL             equ	2	;# 
   359     0003                     STATUS          equ	3	;# 
   360     0004                     FSR             equ	4	;# 
   361     0005                     PORTA           equ	5	;# 
   362     0006                     PORTB           equ	6	;# 
   363     0007                     PORTC           equ	7	;# 
   364     0008                     PORTD           equ	8	;# 
   365     0009                     PORTE           equ	9	;# 
   366     000A                     PCLATH          equ	10	;# 
   367     000B                     INTCON          equ	11	;# 
   368     000C                     PIR1            equ	12	;# 
   369     000D                     PIR2            equ	13	;# 
   370     000E                     TMR1            equ	14	;# 
   371     000E                     TMR1L           equ	14	;# 
   372     000F                     TMR1H           equ	15	;# 
   373     0010                     T1CON           equ	16	;# 
   374     0011                     TMR2            equ	17	;# 
   375     0012                     T2CON           equ	18	;# 
   376     0013                     SSPBUF          equ	19	;# 
   377     0014                     SSPCON          equ	20	;# 
   378     0015                     CCPR1           equ	21	;# 
   379     0015                     CCPR1L          equ	21	;# 
   380     0016                     CCPR1H          equ	22	;# 
   381     0017                     CCP1CON         equ	23	;# 
   382     0018                     RCSTA           equ	24	;# 
   383     0019                     TXREG           equ	25	;# 
   384     001A                     RCREG           equ	26	;# 
   385     001B                     CCPR2           equ	27	;# 
   386     001B                     CCPR2L          equ	27	;# 
   387     001C                     CCPR2H          equ	28	;# 
   388     001D                     CCP2CON         equ	29	;# 
   389     001E                     ADRESH          equ	30	;# 
   390     001F                     ADCON0          equ	31	;# 
   391     0081                     OPTION_REG      equ	129	;# 
   392     0085                     TRISA           equ	133	;# 
   393     0086                     TRISB           equ	134	;# 
   394     0087                     TRISC           equ	135	;# 
   395     0088                     TRISD           equ	136	;# 
   396     0089                     TRISE           equ	137	;# 
   397     008C                     PIE1            equ	140	;# 
   398     008D                     PIE2            equ	141	;# 
   399     008E                     PCON            equ	142	;# 
   400     0091                     SSPCON2         equ	145	;# 
   401     0092                     PR2             equ	146	;# 
   402     0093                     SSPADD          equ	147	;# 
   403     0094                     SSPSTAT         equ	148	;# 
   404     0098                     TXSTA           equ	152	;# 
   405     0099                     SPBRG           equ	153	;# 
   406     009C                     CMCON           equ	156	;# 
   407     009D                     CVRCON          equ	157	;# 
   408     009E                     ADRESL          equ	158	;# 
   409     009F                     ADCON1          equ	159	;# 
   410     010C                     EEDATA          equ	268	;# 
   411     010D                     EEADR           equ	269	;# 
   412     010E                     EEDATH          equ	270	;# 
   413     010F                     EEADRH          equ	271	;# 
   414     018C                     EECON1          equ	396	;# 
   415     018D                     EECON2          equ	397	;# 
   416                           
   417                           	psect	nvBANK1
   418     00EF                     __pnvBANK1:
   419     00EF                     _TCN75A_Address:
   420     00EF                     	ds	1
   421     001A                     _RCREG          set	26
   422     0019                     _TXREG          set	25
   423     0013                     _SSPBUF         set	19
   424     0014                     _SSPCON         set	20
   425     0065                     _RCIF           set	101
   426     00C4                     _CREN           set	196
   427     00C7                     _SPEN           set	199
   428     0063                     _SSPIF          set	99
   429     0032                     _RB2            set	50
   430     0031                     _RB1            set	49
   431     0030                     _RB0            set	48
   432     0099                     _SPBRG          set	153
   433     0093                     _SSPADD         set	147
   434     0094                     _SSPSTAT        set	148
   435     0091                     _SSPCON2        set	145
   436     04C1                     _TRMT           set	1217
   437     04C5                     _TXEN           set	1221
   438     043F                     _TRISC7         set	1087
   439     043E                     _TRISC6         set	1086
   440     04C4                     _SYNC           set	1220
   441     04C2                     _BRGH           set	1218
   442     048B                     _RCEN           set	1163
   443     048E                     _ACKSTAT        set	1166
   444     048C                     _ACKEN          set	1164
   445     048D                     _ACKDT          set	1165
   446     048A                     _PEN            set	1162
   447     0489                     _RSEN           set	1161
   448     0488                     _SEN            set	1160
   449     043C                     _TRISC4         set	1084
   450     043B                     _TRISC3         set	1083
   451                           
   452                           	psect	strings
   453     196E                     __pstrings:
   454     196E                     stringtab:
   455     196E                     __stringtab:
   456                           
   457                           ;	String table - string pointers are 2 bytes each
   458     196E  1BFF               	btfsc	btemp+1,7
   459     196F  2978               	ljmp	stringcode
   460     1970  1383               	bcf	3,7
   461     1971  187F               	btfsc	btemp+1,0
   462     1972  1783               	bsf	3,7
   463     1973  0800               	movf	0,w
   464     1974  0A84               	incf	4,f
   465     1975  1903               	skipnz
   466     1976  0AFF               	incf	btemp+1,f
   467     1977  0008               	return
   468     1978                     stringcode:
   469     1978  087F               	movf	btemp+1,w
   470     1979  397F               	andlw	127
   471     197A  008A               	movwf	10
   472     197B  0804               	movf	4,w
   473     197C  0A84               	incf	4,f
   474     197D  1903               	skipnz
   475     197E  0AFF               	incf	btemp+1,f
   476     197F  0082               	movwf	2
   477     1980                     __stringbase:
   478     1980                     __end_of__stringtab:
   479                           
   480                           	psect	stringtext
   481     1800                     __pstringtext:
   482     1800                     STR_7:
   483     1800  344E               	retlw	78	;'N'
   484     1801  346F               	retlw	111	;'o'
   485     1802  3472               	retlw	114	;'r'
   486     1803  346D               	retlw	109	;'m'
   487     1804  3461               	retlw	97	;'a'
   488     1805  346C               	retlw	108	;'l'
   489     1806  3420               	retlw	32	;' '
   490     1807  346D               	retlw	109	;'m'
   491     1808  346F               	retlw	111	;'o'
   492     1809  3464               	retlw	100	;'d'
   493     180A  3465               	retlw	101	;'e'
   494     180B  3420               	retlw	32	;' '
   495     180C  3454               	retlw	84	;'T'
   496     180D  3468               	retlw	104	;'h'
   497     180E  3472               	retlw	114	;'r'
   498     180F  3465               	retlw	101	;'e'
   499     1810  3473               	retlw	115	;'s'
   500     1811  3468               	retlw	104	;'h'
   501     1812  346F               	retlw	111	;'o'
   502     1813  346C               	retlw	108	;'l'
   503     1814  3464               	retlw	100	;'d'
   504     1815  3473               	retlw	115	;'s'
   505     1816  343A               	retlw	58	;':'
   506     1817  3420               	retlw	32	;' '
   507     1818  344C               	retlw	76	;'L'
   508     1819  3469               	retlw	105	;'i'
   509     181A  346D               	retlw	109	;'m'
   510     181B  3469               	retlw	105	;'i'
   511     181C  3474               	retlw	116	;'t'
   512     181D  3454               	retlw	84	;'T'
   513     181E  3465               	retlw	101	;'e'
   514     181F  346D               	retlw	109	;'m'
   515     1820  3470               	retlw	112	;'p'
   516     1821  343A               	retlw	58	;':'
   517     1822  3425               	retlw	37	;'%'
   518     1823  342E               	retlw	46	;'.'
   519     1824  3431               	retlw	49	;'1'
   520     1825  3466               	retlw	102	;'f'
   521     1826  3420               	retlw	32	;' '
   522     1827  3443               	retlw	67	;'C'
   523     1828  342C               	retlw	44	;','
   524     1829  3448               	retlw	72	;'H'
   525     182A  3479               	retlw	121	;'y'
   526     182B  3473               	retlw	115	;'s'
   527     182C  3474               	retlw	116	;'t'
   528     182D  3465               	retlw	101	;'e'
   529     182E  3472               	retlw	114	;'r'
   530     182F  3465               	retlw	101	;'e'
   531     1830  3473               	retlw	115	;'s'
   532     1831  3469               	retlw	105	;'i'
   533     1832  3473               	retlw	115	;'s'
   534     1833  343A               	retlw	58	;':'
   535     1834  3420               	retlw	32	;' '
   536     1835  3425               	retlw	37	;'%'
   537     1836  342E               	retlw	46	;'.'
   538     1837  3431               	retlw	49	;'1'
   539     1838  3466               	retlw	102	;'f'
   540     1839  3420               	retlw	32	;' '
   541     183A  3443               	retlw	67	;'C'
   542     183B  340A               	retlw	10
   543     183C  340D               	retlw	13
   544     183D  3400               	retlw	0
   545     183E                     STR_10:
   546     183E  3453               	retlw	83	;'S'
   547     183F  3461               	retlw	97	;'a'
   548     1840  3466               	retlw	102	;'f'
   549     1841  3465               	retlw	101	;'e'
   550     1842  3474               	retlw	116	;'t'
   551     1843  3479               	retlw	121	;'y'
   552     1844  3420               	retlw	32	;' '
   553     1845  346D               	retlw	109	;'m'
   554     1846  346F               	retlw	111	;'o'
   555     1847  3464               	retlw	100	;'d'
   556     1848  3465               	retlw	101	;'e'
   557     1849  3420               	retlw	32	;' '
   558     184A  3454               	retlw	84	;'T'
   559     184B  3468               	retlw	104	;'h'
   560     184C  3472               	retlw	114	;'r'
   561     184D  3465               	retlw	101	;'e'
   562     184E  3473               	retlw	115	;'s'
   563     184F  3468               	retlw	104	;'h'
   564     1850  346F               	retlw	111	;'o'
   565     1851  346C               	retlw	108	;'l'
   566     1852  3464               	retlw	100	;'d'
   567     1853  3473               	retlw	115	;'s'
   568     1854  343A               	retlw	58	;':'
   569     1855  3420               	retlw	32	;' '
   570     1856  344C               	retlw	76	;'L'
   571     1857  3469               	retlw	105	;'i'
   572     1858  346D               	retlw	109	;'m'
   573     1859  3469               	retlw	105	;'i'
   574     185A  3474               	retlw	116	;'t'
   575     185B  3454               	retlw	84	;'T'
   576     185C  3465               	retlw	101	;'e'
   577     185D  346D               	retlw	109	;'m'
   578     185E  3470               	retlw	112	;'p'
   579     185F  343A               	retlw	58	;':'
   580     1860  3420               	retlw	32	;' '
   581     1861  3425               	retlw	37	;'%'
   582     1862  342E               	retlw	46	;'.'
   583     1863  3431               	retlw	49	;'1'
   584     1864  3466               	retlw	102	;'f'
   585     1865  3420               	retlw	32	;' '
   586     1866  3443               	retlw	67	;'C'
   587     1867  342C               	retlw	44	;','
   588     1868  3448               	retlw	72	;'H'
   589     1869  3479               	retlw	121	;'y'
   590     186A  3473               	retlw	115	;'s'
   591     186B  3474               	retlw	116	;'t'
   592     186C  3465               	retlw	101	;'e'
   593     186D  3472               	retlw	114	;'r'
   594     186E  3465               	retlw	101	;'e'
   595     186F  3473               	retlw	115	;'s'
   596     1870  3469               	retlw	105	;'i'
   597     1871  3473               	retlw	115	;'s'
   598     1872  343A               	retlw	58	;':'
   599     1873  3420               	retlw	32	;' '
   600     1874  3425               	retlw	37	;'%'
   601     1875  342E               	retlw	46	;'.'
   602     1876  3431               	retlw	49	;'1'
   603     1877  3466               	retlw	102	;'f'
   604     1878  3443               	retlw	67	;'C'
   605     1879  340A               	retlw	10
   606     187A  340D               	retlw	13
   607     187B  3400               	retlw	0
   608     187C                     STR_4:
   609     187C  3444               	retlw	68	;'D'
   610     187D  3465               	retlw	101	;'e'
   611     187E  3466               	retlw	102	;'f'
   612     187F  3461               	retlw	97	;'a'
   613     1880  3475               	retlw	117	;'u'
   614     1881  346C               	retlw	108	;'l'
   615     1882  3474               	retlw	116	;'t'
   616     1883  3420               	retlw	32	;' '
   617     1884  344C               	retlw	76	;'L'
   618     1885  3469               	retlw	105	;'i'
   619     1886  346D               	retlw	109	;'m'
   620     1887  3469               	retlw	105	;'i'
   621     1888  3474               	retlw	116	;'t'
   622     1889  3454               	retlw	84	;'T'
   623     188A  3465               	retlw	101	;'e'
   624     188B  346D               	retlw	109	;'m'
   625     188C  3470               	retlw	112	;'p'
   626     188D  343A               	retlw	58	;':'
   627     188E  3425               	retlw	37	;'%'
   628     188F  342E               	retlw	46	;'.'
   629     1890  3431               	retlw	49	;'1'
   630     1891  3466               	retlw	102	;'f'
   631     1892  3443               	retlw	67	;'C'
   632     1893  342C               	retlw	44	;','
   633     1894  3420               	retlw	32	;' '
   634     1895  3448               	retlw	72	;'H'
   635     1896  3479               	retlw	121	;'y'
   636     1897  3473               	retlw	115	;'s'
   637     1898  3474               	retlw	116	;'t'
   638     1899  3465               	retlw	101	;'e'
   639     189A  3472               	retlw	114	;'r'
   640     189B  3465               	retlw	101	;'e'
   641     189C  3473               	retlw	115	;'s'
   642     189D  3469               	retlw	105	;'i'
   643     189E  3473               	retlw	115	;'s'
   644     189F  343A               	retlw	58	;':'
   645     18A0  3425               	retlw	37	;'%'
   646     18A1  342E               	retlw	46	;'.'
   647     18A2  3431               	retlw	49	;'1'
   648     18A3  3466               	retlw	102	;'f'
   649     18A4  3443               	retlw	67	;'C'
   650     18A5  340A               	retlw	10
   651     18A6  340D               	retlw	13
   652     18A7  3400               	retlw	0
   653     18A8                     STR_8:
   654     18A8  3459               	retlw	89	;'Y'
   655     18A9  346F               	retlw	111	;'o'
   656     18AA  3475               	retlw	117	;'u'
   657     18AB  3420               	retlw	32	;' '
   658     18AC  3463               	retlw	99	;'c'
   659     18AD  3472               	retlw	114	;'r'
   660     18AE  346F               	retlw	111	;'o'
   661     18AF  3473               	retlw	115	;'s'
   662     18B0  3473               	retlw	115	;'s'
   663     18B1  3465               	retlw	101	;'e'
   664     18B2  3464               	retlw	100	;'d'
   665     18B3  3420               	retlw	32	;' '
   666     18B4  3474               	retlw	116	;'t'
   667     18B5  3468               	retlw	104	;'h'
   668     18B6  3465               	retlw	101	;'e'
   669     18B7  3420               	retlw	32	;' '
   670     18B8  344E               	retlw	78	;'N'
   671     18B9  346F               	retlw	111	;'o'
   672     18BA  3472               	retlw	114	;'r'
   673     18BB  346D               	retlw	109	;'m'
   674     18BC  3461               	retlw	97	;'a'
   675     18BD  346C               	retlw	108	;'l'
   676     18BE  344D               	retlw	77	;'M'
   677     18BF  346F               	retlw	111	;'o'
   678     18C0  3464               	retlw	100	;'d'
   679     18C1  3465               	retlw	101	;'e'
   680     18C2  3420               	retlw	32	;' '
   681     18C3  344C               	retlw	76	;'L'
   682     18C4  3469               	retlw	105	;'i'
   683     18C5  346D               	retlw	109	;'m'
   684     18C6  3469               	retlw	105	;'i'
   685     18C7  3474               	retlw	116	;'t'
   686     18C8  3454               	retlw	84	;'T'
   687     18C9  3465               	retlw	101	;'e'
   688     18CA  346D               	retlw	109	;'m'
   689     18CB  3470               	retlw	112	;'p'
   690     18CC  340A               	retlw	10
   691     18CD  340D               	retlw	13
   692     18CE  3400               	retlw	0
   693     18CF                     STR_11:
   694     18CF  3459               	retlw	89	;'Y'
   695     18D0  346F               	retlw	111	;'o'
   696     18D1  3475               	retlw	117	;'u'
   697     18D2  3420               	retlw	32	;' '
   698     18D3  3463               	retlw	99	;'c'
   699     18D4  3472               	retlw	114	;'r'
   700     18D5  346F               	retlw	111	;'o'
   701     18D6  3473               	retlw	115	;'s'
   702     18D7  3473               	retlw	115	;'s'
   703     18D8  3465               	retlw	101	;'e'
   704     18D9  3464               	retlw	100	;'d'
   705     18DA  3420               	retlw	32	;' '
   706     18DB  3474               	retlw	116	;'t'
   707     18DC  3468               	retlw	104	;'h'
   708     18DD  3465               	retlw	101	;'e'
   709     18DE  3420               	retlw	32	;' '
   710     18DF  3453               	retlw	83	;'S'
   711     18E0  3461               	retlw	97	;'a'
   712     18E1  3466               	retlw	102	;'f'
   713     18E2  3465               	retlw	101	;'e'
   714     18E3  3474               	retlw	116	;'t'
   715     18E4  3479               	retlw	121	;'y'
   716     18E5  344D               	retlw	77	;'M'
   717     18E6  346F               	retlw	111	;'o'
   718     18E7  3464               	retlw	100	;'d'
   719     18E8  3465               	retlw	101	;'e'
   720     18E9  3420               	retlw	32	;' '
   721     18EA  344C               	retlw	76	;'L'
   722     18EB  3469               	retlw	105	;'i'
   723     18EC  346D               	retlw	109	;'m'
   724     18ED  3469               	retlw	105	;'i'
   725     18EE  3474               	retlw	116	;'t'
   726     18EF  3454               	retlw	84	;'T'
   727     18F0  3465               	retlw	101	;'e'
   728     18F1  346D               	retlw	109	;'m'
   729     18F2  3470               	retlw	112	;'p'
   730     18F3  340A               	retlw	10
   731     18F4  340D               	retlw	13
   732     18F5  3400               	retlw	0
   733     18F6                     STR_5:
   734     18F6  3459               	retlw	89	;'Y'
   735     18F7  346F               	retlw	111	;'o'
   736     18F8  3475               	retlw	117	;'u'
   737     18F9  3420               	retlw	32	;' '
   738     18FA  3463               	retlw	99	;'c'
   739     18FB  3472               	retlw	114	;'r'
   740     18FC  346F               	retlw	111	;'o'
   741     18FD  3473               	retlw	115	;'s'
   742     18FE  3473               	retlw	115	;'s'
   743     18FF  3465               	retlw	101	;'e'
   744     1900  3464               	retlw	100	;'d'
   745     1901  3420               	retlw	32	;' '
   746     1902  3474               	retlw	116	;'t'
   747     1903  3468               	retlw	104	;'h'
   748     1904  3465               	retlw	101	;'e'
   749     1905  3420               	retlw	32	;' '
   750     1906  3444               	retlw	68	;'D'
   751     1907  3465               	retlw	101	;'e'
   752     1908  3466               	retlw	102	;'f'
   753     1909  3461               	retlw	97	;'a'
   754     190A  3475               	retlw	117	;'u'
   755     190B  346C               	retlw	108	;'l'
   756     190C  3474               	retlw	116	;'t'
   757     190D  3420               	retlw	32	;' '
   758     190E  344C               	retlw	76	;'L'
   759     190F  3469               	retlw	105	;'i'
   760     1910  346D               	retlw	109	;'m'
   761     1911  3469               	retlw	105	;'i'
   762     1912  3474               	retlw	116	;'t'
   763     1913  3454               	retlw	84	;'T'
   764     1914  3465               	retlw	101	;'e'
   765     1915  346D               	retlw	109	;'m'
   766     1916  3470               	retlw	112	;'p'
   767     1917  340A               	retlw	10
   768     1918  340D               	retlw	13
   769     1919  3400               	retlw	0
   770     191A                     STR_1:
   771     191A  3454               	retlw	84	;'T'
   772     191B  3443               	retlw	67	;'C'
   773     191C  344E               	retlw	78	;'N'
   774     191D  3437               	retlw	55	;'7'
   775     191E  3435               	retlw	53	;'5'
   776     191F  3441               	retlw	65	;'A'
   777     1920  3420               	retlw	32	;' '
   778     1921  3469               	retlw	105	;'i'
   779     1922  346E               	retlw	110	;'n'
   780     1923  3469               	retlw	105	;'i'
   781     1924  3474               	retlw	116	;'t'
   782     1925  3469               	retlw	105	;'i'
   783     1926  3461               	retlw	97	;'a'
   784     1927  346C               	retlw	108	;'l'
   785     1928  3469               	retlw	105	;'i'
   786     1929  347A               	retlw	122	;'z'
   787     192A  3465               	retlw	101	;'e'
   788     192B  3464               	retlw	100	;'d'
   789     192C  3400               	retlw	0
   790     192D                     STR_3:
   791     192D  3444               	retlw	68	;'D'
   792     192E  3465               	retlw	101	;'e'
   793     192F  3466               	retlw	102	;'f'
   794     1930  3461               	retlw	97	;'a'
   795     1931  3475               	retlw	117	;'u'
   796     1932  346C               	retlw	108	;'l'
   797     1933  3474               	retlw	116	;'t'
   798     1934  3420               	retlw	32	;' '
   799     1935  344D               	retlw	77	;'M'
   800     1936  346F               	retlw	111	;'o'
   801     1937  3464               	retlw	100	;'d'
   802     1938  3465               	retlw	101	;'e'
   803     1939  3478               	retlw	120	;'x'
   804     193A  340A               	retlw	10
   805     193B  340D               	retlw	13
   806     193C  3400               	retlw	0
   807     193D                     STR_2:
   808     193D  3454               	retlw	84	;'T'
   809     193E  3465               	retlw	101	;'e'
   810     193F  346D               	retlw	109	;'m'
   811     1940  3470               	retlw	112	;'p'
   812     1941  343A               	retlw	58	;':'
   813     1942  3420               	retlw	32	;' '
   814     1943  3425               	retlw	37	;'%'
   815     1944  342E               	retlw	46	;'.'
   816     1945  3431               	retlw	49	;'1'
   817     1946  3466               	retlw	102	;'f'
   818     1947  3420               	retlw	32	;' '
   819     1948  3443               	retlw	67	;'C'
   820     1949  340A               	retlw	10
   821     194A  340D               	retlw	13
   822     194B  3400               	retlw	0
   823     194C                     STR_6:
   824     194C  344E               	retlw	78	;'N'
   825     194D  346F               	retlw	111	;'o'
   826     194E  3472               	retlw	114	;'r'
   827     194F  346D               	retlw	109	;'m'
   828     1950  3461               	retlw	97	;'a'
   829     1951  346C               	retlw	108	;'l'
   830     1952  3420               	retlw	32	;' '
   831     1953  344D               	retlw	77	;'M'
   832     1954  346F               	retlw	111	;'o'
   833     1955  3464               	retlw	100	;'d'
   834     1956  3465               	retlw	101	;'e'
   835     1957  340A               	retlw	10
   836     1958  340D               	retlw	13
   837     1959  3400               	retlw	0
   838     195A                     STR_9:
   839     195A  3453               	retlw	83	;'S'
   840     195B  3461               	retlw	97	;'a'
   841     195C  3466               	retlw	102	;'f'
   842     195D  3465               	retlw	101	;'e'
   843     195E  3474               	retlw	116	;'t'
   844     195F  3479               	retlw	121	;'y'
   845     1960  3420               	retlw	32	;' '
   846     1961  344D               	retlw	77	;'M'
   847     1962  346F               	retlw	111	;'o'
   848     1963  3464               	retlw	100	;'d'
   849     1964  3465               	retlw	101	;'e'
   850     1965  3400               	retlw	0
   851     1966                     STR_12:
   852     1966  3469               	retlw	105	;'i'
   853     1967  346E               	retlw	110	;'n'
   854     1968  3466               	retlw	102	;'f'
   855     1969  3400               	retlw	0
   856     196A                     STR_15:
   857     196A  346E               	retlw	110	;'n'
   858     196B  3461               	retlw	97	;'a'
   859     196C  346E               	retlw	110	;'n'
   860     196D  3400               	retlw	0
   861     196A                     STR_16          equ	STR_15
   862     196A                     STR_17          equ	STR_15
   863     1966                     STR_13          equ	STR_12
   864     1966                     STR_14          equ	STR_12
   865                           
   866                           	psect	cinit
   867     07E6                     start_initialization:	
   868                           ; #config settings
   869                           
   870     07E6                     __initialization:
   871                           
   872                           ; Clear objects allocated to BANK1
   873     07E6  1683               	bsf	3,5	;RP0=1, select bank1
   874     07E7  1303               	bcf	3,6	;RP1=0, select bank1
   875     07E8  01EC               	clrf	__pbssBANK1& (0+127)
   876     07E9  01ED               	clrf	(__pbssBANK1+1)& (0+127)
   877     07EA  01EE               	clrf	(__pbssBANK1+2)& (0+127)
   878                           
   879                           ; Clear objects allocated to BANK3
   880     07EB  1783               	bsf	3,7	;select IRP bank2
   881     07EC  3090               	movlw	low __pbssBANK3
   882     07ED  0084               	movwf	4
   883     07EE  30E6               	movlw	low (__pbssBANK3+86)
   884     07EF  160A  158A  21CD  120A  118A  	fcall	clear_ram0
   885                           
   886                           ; Clear objects allocated to BANK2
   887     07F4  3010               	movlw	low __pbssBANK2
   888     07F5  0084               	movwf	4
   889     07F6  3060               	movlw	low (__pbssBANK2+80)
   890     07F7  160A  158A  21CD  120A  118A  	fcall	clear_ram0
   891     07FC                     end_of_initialization:	
   892                           ;End of C runtime variable initialization code
   893                           
   894     07FC                     __end_of__initialization:
   895     07FC  0183               	clrf	3
   896     07FD  120A  158A  2A6D   	ljmp	_main	;jump to C main() function
   897                           
   898                           	psect	bssBANK1
   899     00EC                     __pbssBANK1:
   900     00EC                     _prec:
   901     00EC                     	ds	2
   902     00EE                     _flags:
   903     00EE                     	ds	1
   904                           
   905                           	psect	bssBANK3
   906     0190                     __pbssBANK3:
   907     0190                     floorf@F521:
   908     0190                     	ds	4
   909     0194                     ___fpclassifyf@F465:
   910     0194                     	ds	4
   911     0198                     _HystTemp:
   912     0198                     	ds	4
   913     019C                     _LimitTemp:
   914     019C                     	ds	4
   915     01A0                     _actualTemp:
   916     01A0                     	ds	4
   917     01A4                     _width:
   918     01A4                     	ds	2
   919     01A6                     _displayText:
   920     01A6                     	ds	64
   921                           
   922                           	psect	bssBANK2
   923     0110                     __pbssBANK2:
   924     0110                     _dbuf:
   925     0110                     	ds	80
   926                           
   927                           	psect	clrtext
   928     19CD                     clear_ram0:	
   929                           ;	Called with FSR containing the base address, and
   930                           ;	W with the last address+1
   931                           
   932     19CD  0064               	clrwdt	;clear the watchdog before getting into this loop
   933     19CE                     clrloop0:
   934     19CE  0180               	clrf	0	;clear RAM location pointed to by FSR
   935     19CF  0A84               	incf	4,f	;increment pointer
   936     19D0  0604               	xorwf	4,w	;XOR with final address
   937     19D1  1903               	btfsc	3,2	;have we reached the end yet?
   938     19D2  3400               	retlw	0	;all done for this memory range, return
   939     19D3  0604               	xorwf	4,w	;XOR again to restore value
   940     19D4  29CE               	goto	clrloop0	;do the next byte
   941                           
   942                           	psect	cstackBANK1
   943     00A0                     __pcstackBANK1:
   944     00A0                     efgtoa@ne:
   945                           
   946                           ; 2 bytes @ 0x0
   947     00A0                     	ds	2
   948     00A2                     efgtoa@p:
   949                           
   950                           ; 2 bytes @ 0x2
   951     00A2                     	ds	2
   952     00A4                     efgtoa@t:
   953                           
   954                           ; 2 bytes @ 0x4
   955     00A4                     	ds	2
   956     00A6                     _efgtoa$835:
   957                           
   958                           ; 2 bytes @ 0x6
   959     00A6                     	ds	2
   960     00A8                     efgtoa@pp:
   961                           
   962                           ; 1 bytes @ 0x8
   963     00A8                     	ds	1
   964     00A9                     efgtoa@mode:
   965                           
   966                           ; 1 bytes @ 0x9
   967     00A9                     	ds	1
   968     00AA                     efgtoa@nmode:
   969                           
   970                           ; 1 bytes @ 0xA
   971     00AA                     	ds	1
   972     00AB                     efgtoa@d:
   973                           
   974                           ; 2 bytes @ 0xB
   975     00AB                     	ds	2
   976     00AD                     efgtoa@m:
   977                           
   978                           ; 2 bytes @ 0xD
   979     00AD                     	ds	2
   980     00AF                     efgtoa@e:
   981                           
   982                           ; 2 bytes @ 0xF
   983     00AF                     	ds	2
   984     00B1                     efgtoa@w:
   985                           
   986                           ; 2 bytes @ 0x11
   987     00B1                     	ds	2
   988     00B3                     efgtoa@ou:
   989                           
   990                           ; 4 bytes @ 0x13
   991     00B3                     	ds	4
   992     00B7                     efgtoa@i:
   993                           
   994                           ; 2 bytes @ 0x17
   995     00B7                     	ds	2
   996     00B9                     efgtoa@h:
   997                           
   998                           ; 4 bytes @ 0x19
   999     00B9                     	ds	4
  1000     00BD                     efgtoa@l:
  1001                           
  1002                           ; 4 bytes @ 0x1D
  1003     00BD                     	ds	4
  1004     00C1                     efgtoa@sign:
  1005                           
  1006                           ; 1 bytes @ 0x21
  1007     00C1                     	ds	1
  1008     00C2                     efgtoa@n:
  1009                           
  1010                           ; 2 bytes @ 0x22
  1011     00C2                     	ds	2
  1012     00C4                     efgtoa@g:
  1013                           
  1014                           ; 4 bytes @ 0x24
  1015     00C4                     	ds	4
  1016     00C8                     efgtoa@u:
  1017                           
  1018                           ; 4 bytes @ 0x28
  1019     00C8                     	ds	4
  1020     00CC                     ?_vfprintf:
  1021     00CC                     vfprintf@fp:	
  1022                           ; 2 bytes @ 0x2C
  1023                           
  1024                           
  1025                           ; 2 bytes @ 0x2C
  1026     00CC                     	ds	2
  1027     00CE                     vfprintf@fmt:
  1028                           
  1029                           ; 2 bytes @ 0x2E
  1030     00CE                     	ds	2
  1031     00D0                     vfprintf@ap:
  1032                           
  1033                           ; 1 bytes @ 0x30
  1034     00D0                     	ds	1
  1035     00D1                     ?_sprintf:
  1036     00D1                     sprintf@s:	
  1037                           ; 2 bytes @ 0x31
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x31
  1041     00D1                     	ds	1
  1042     00D2                     sprintf@fmt:
  1043                           
  1044                           ; 2 bytes @ 0x32
  1045     00D2                     	ds	10
  1046     00DC                     ??_sprintf:
  1047                           
  1048                           ; 1 bytes @ 0x3C
  1049     00DC                     	ds	1
  1050     00DD                     sprintf@ap:
  1051                           
  1052                           ; 1 bytes @ 0x3D
  1053     00DD                     	ds	1
  1054     00DE                     sprintf@f:
  1055                           
  1056                           ; 11 bytes @ 0x3E
  1057     00DE                     	ds	11
  1058     00E9                     ??_main:
  1059                           
  1060                           ; 1 bytes @ 0x49
  1061     00E9                     	ds	3
  1062                           
  1063                           	psect	cstackCOMMON
  1064     0070                     __pcstackCOMMON:
  1065     0070                     ?_TCN75A_SetAlertMode:
  1066     0070                     ?_TCN75A_SetAlertPolarity:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     ?_TCN75A_SetFaultQueue:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     ?_TCN75A_SetShutdown:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ?_I2C_Master_Init:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078     0070                     ?_UART_TX_Init:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081     0070                     ?_TCN75A_Init:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084     0070                     ?_strcpy:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087     0070                     ?_memcpy:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090     0070                     ?_putch:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093     0070                     ?_setupSensorForNormalMode:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096     0070                     ?_setupSensorForSafetyMode:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099     0070                     ?_restartSensor:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102     0070                     ?_I2C_Master_Wait:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105     0070                     ?_I2C_Master_Start:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108     0070                     ?_I2C_Master_Stop:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111     0070                     ?_I2C_ACK:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114     0070                     ?_I2C_NACK:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117     0070                     ?_I2C_Master_Write:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120     0070                     ?_I2C_Read_Byte:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123     0070                     ?_UART_TX_Empty:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126     0070                     ?_UART_Write:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129     0070                     ?_TCN75A_ReadConfig:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132     0070                     ?_TCN75A_WriteConfig:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135     0070                     ?___fleq:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0070                     ?__Umul8_16:	
  1139                           ; 1 bit 
  1140                           
  1141     0070                     ?_fputc:	
  1142                           ; 2 bytes @ 0x0
  1143                           
  1144     0070                     ?___fpclassifyf:	
  1145                           ; 2 bytes @ 0x0
  1146                           
  1147     0070                     ?_main:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150     0070                     ?___wmul:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153     0070                     ?_labs:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156     0070                     ?___flneg:	
  1157                           ; 4 bytes @ 0x0
  1158                           
  1159     0070                     ?___fltol:	
  1160                           ; 4 bytes @ 0x0
  1161                           
  1162     0070                     ?___fldiv:	
  1163                           ; 4 bytes @ 0x0
  1164                           
  1165     0070                     ?___xxtofl:	
  1166                           ; 4 bytes @ 0x0
  1167                           
  1168     0070                     I2C_Master_Write@data:	
  1169                           ; 4 bytes @ 0x0
  1170                           
  1171     0070                     UART_Write@data:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174     0070                     TCN75A_Init@adr:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177     0070                     __Umul8_16@multiplicand:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180     0070                     memcpy@d1:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0070                     putch@c:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186     0070                     strcpy@dest:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189     0070                     ___wmul@multiplier:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192     0070                     fputc@c:	
  1193                           ; 2 bytes @ 0x0
  1194                           
  1195     0070                     ___fleq@ff1:	
  1196                           ; 2 bytes @ 0x0
  1197                           
  1198     0070                     ___flneg@f1:	
  1199                           ; 4 bytes @ 0x0
  1200                           
  1201     0070                     ___fltol@f1:	
  1202                           ; 4 bytes @ 0x0
  1203                           
  1204     0070                     ___fldiv@a:	
  1205                           ; 4 bytes @ 0x0
  1206                           
  1207     0070                     ___xxtofl@val:	
  1208                           ; 4 bytes @ 0x0
  1209                           
  1210     0070                     ___fpclassifyf@x:	
  1211                           ; 4 bytes @ 0x0
  1212                           
  1213     0070                     labs@a:	
  1214                           ; 4 bytes @ 0x0
  1215                           
  1216     0070                     ??_I2C_Master_Init:	
  1217                           ; 4 bytes @ 0x0
  1218                           
  1219     0070                     ??_UART_TX_Init:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222     0070                     ??_TCN75A_Init:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0070                     ??_putch:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228     0070                     ??_I2C_Master_Wait:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231     0070                     ??_I2C_Master_Start:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234     0070                     ??_I2C_Master_Stop:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237     0070                     ??_I2C_ACK:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240     0070                     ??_I2C_NACK:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243     0070                     ??_I2C_Master_Write:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246     0070                     ??_I2C_Read_Byte:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249     0070                     ??_UART_TX_Empty:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252     0070                     ??_UART_Write:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x0
  1257     0070                     	ds	1
  1258     0071                     ?_UART_Write_Text:
  1259     0071                     memcpy@s1:	
  1260                           ; 1 bytes @ 0x1
  1261                           
  1262     0071                     UART_Write_Text@text:	
  1263                           ; 1 bytes @ 0x1
  1264                           
  1265     0071                     strcpy@src:	
  1266                           ; 2 bytes @ 0x1
  1267                           
  1268     0071                     ??_TCN75A_ReadConfig:	
  1269                           ; 2 bytes @ 0x1
  1270                           
  1271     0071                     ??_TCN75A_WriteConfig:	
  1272                           ; 1 bytes @ 0x1
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x1
  1276     0071                     	ds	1
  1277     0072                     TCN75A_ReadConfig@config:
  1278     0072                     TCN75A_WriteConfig@config:	
  1279                           ; 1 bytes @ 0x2
  1280                           
  1281     0072                     ___wmul@multiplicand:	
  1282                           ; 1 bytes @ 0x2
  1283                           
  1284     0072                     memcpy@n:	
  1285                           ; 2 bytes @ 0x2
  1286                           
  1287     0072                     fputc@fp:	
  1288                           ; 2 bytes @ 0x2
  1289                           
  1290     0072                     ??__Umul8_16:	
  1291                           ; 2 bytes @ 0x2
  1292                           
  1293                           
  1294                           ; 1 bytes @ 0x2
  1295     0072                     	ds	1
  1296     0073                     TCN75A_SetAlertPolarity@sw:
  1297     0073                     TCN75A_SetAlertMode@sw:	
  1298                           ; 1 bytes @ 0x3
  1299                           
  1300     0073                     TCN75A_SetShutdown@sw:	
  1301                           ; 1 bytes @ 0x3
  1302                           
  1303     0073                     ??_TCN75A_SetAlertMode:	
  1304                           ; 1 bytes @ 0x3
  1305                           
  1306     0073                     ??_TCN75A_SetAlertPolarity:	
  1307                           ; 1 bytes @ 0x3
  1308                           
  1309     0073                     ??_TCN75A_SetFaultQueue:	
  1310                           ; 1 bytes @ 0x3
  1311                           
  1312     0073                     ??_TCN75A_SetShutdown:	
  1313                           ; 1 bytes @ 0x3
  1314                           
  1315     0073                     ??_UART_Write_Text:	
  1316                           ; 1 bytes @ 0x3
  1317                           
  1318     0073                     ??_strcpy:	
  1319                           ; 1 bytes @ 0x3
  1320                           
  1321                           
  1322                           ; 1 bytes @ 0x3
  1323     0073                     	ds	1
  1324     0074                     TCN75A_SetFaultQueue@val:
  1325     0074                     TCN75A_SetAlertPolarity@config:	
  1326                           ; 1 bytes @ 0x4
  1327                           
  1328     0074                     TCN75A_SetAlertMode@config:	
  1329                           ; 1 bytes @ 0x4
  1330                           
  1331     0074                     TCN75A_SetShutdown@config:	
  1332                           ; 1 bytes @ 0x4
  1333                           
  1334     0074                     memcpy@tmp:	
  1335                           ; 1 bytes @ 0x4
  1336                           
  1337     0074                     ___wmul@product:	
  1338                           ; 1 bytes @ 0x4
  1339                           
  1340     0074                     __Umul8_16@product:	
  1341                           ; 2 bytes @ 0x4
  1342                           
  1343     0074                     ___fleq@ff2:	
  1344                           ; 2 bytes @ 0x4
  1345                           
  1346     0074                     ___fldiv@b:	
  1347                           ; 4 bytes @ 0x4
  1348                           
  1349     0074                     ??_fputc:	
  1350                           ; 4 bytes @ 0x4
  1351                           
  1352     0074                     ??___fpclassifyf:	
  1353                           ; 1 bytes @ 0x4
  1354                           
  1355     0074                     ??_labs:	
  1356                           ; 1 bytes @ 0x4
  1357                           
  1358     0074                     ??_memcpy:	
  1359                           ; 1 bytes @ 0x4
  1360                           
  1361     0074                     ??___wmul:	
  1362                           ; 1 bytes @ 0x4
  1363                           
  1364     0074                     ??___flneg:	
  1365                           ; 1 bytes @ 0x4
  1366                           
  1367     0074                     ??___fltol:	
  1368                           ; 1 bytes @ 0x4
  1369                           
  1370     0074                     ??___xxtofl:	
  1371                           ; 1 bytes @ 0x4
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x4
  1375     0074                     	ds	1
  1376     0075                     TCN75A_SetFaultQueue@config:
  1377     0075                     memcpy@d:	
  1378                           ; 1 bytes @ 0x5
  1379                           
  1380     0075                     strcpy@d:	
  1381                           ; 1 bytes @ 0x5
  1382                           
  1383     0075                     ??_restartSensor:	
  1384                           ; 1 bytes @ 0x5
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x5
  1388     0075                     	ds	1
  1389     0076                     ?_read_prec_or_width:
  1390     0076                     read_prec_or_width@fmt:	
  1391                           ; 2 bytes @ 0x6
  1392                           
  1393     0076                     memcpy@s:	
  1394                           ; 1 bytes @ 0x6
  1395                           
  1396     0076                     __Umul8_16@word_mpld:	
  1397                           ; 1 bytes @ 0x6
  1398                           
  1399                           
  1400                           ; 2 bytes @ 0x6
  1401     0076                     	ds	1
  1402     0077                     read_prec_or_width@ap:
  1403                           
  1404                           ; 1 bytes @ 0x7
  1405     0077                     	ds	1
  1406     0078                     ___fltol@sign1:
  1407     0078                     __Umul8_16@multiplier:	
  1408                           ; 1 bytes @ 0x8
  1409                           
  1410     0078                     ___xxtofl@sign:	
  1411                           ; 1 bytes @ 0x8
  1412                           
  1413     0078                     ??___fleq:	
  1414                           ; 1 bytes @ 0x8
  1415                           
  1416     0078                     ??___fldiv:	
  1417                           ; 1 bytes @ 0x8
  1418                           
  1419     0078                     ??_read_prec_or_width:	
  1420                           ; 1 bytes @ 0x8
  1421                           
  1422                           
  1423                           ; 1 bytes @ 0x8
  1424     0078                     	ds	1
  1425     0079                     ___fltol@exp1:
  1426     0079                     ___xxtofl@exp:	
  1427                           ; 1 bytes @ 0x9
  1428                           
  1429                           
  1430                           ; 1 bytes @ 0x9
  1431     0079                     	ds	1
  1432     007A                     read_prec_or_width@c:
  1433     007A                     ___xxtofl@arg:	
  1434                           ; 1 bytes @ 0xA
  1435                           
  1436                           
  1437                           ; 4 bytes @ 0xA
  1438     007A                     	ds	1
  1439     007B                     read_prec_or_width@n:
  1440                           
  1441                           ; 2 bytes @ 0xB
  1442     007B                     	ds	2
  1443     007D                     ??_pad:
  1444                           
  1445                           ; 1 bytes @ 0xD
  1446     007D                     	ds	1
  1447     007E                     ??_TCN75A_SetRangeTemp:
  1448     007E                     ??_TCN75A_GetLimitTemp:	
  1449                           ; 1 bytes @ 0xE
  1450                           
  1451     007E                     ??_TCN75A_GetHystTemp:	
  1452                           ; 1 bytes @ 0xE
  1453                           
  1454     007E                     ??_vfprintf:	
  1455                           ; 1 bytes @ 0xE
  1456                           
  1457     007E                     ??_setupSensorForNormalMode:	
  1458                           ; 1 bytes @ 0xE
  1459                           
  1460     007E                     ??_setupSensorForSafetyMode:	
  1461                           ; 1 bytes @ 0xE
  1462                           
  1463     007E                     ??_TCN75A_SetHystTemp:	
  1464                           ; 1 bytes @ 0xE
  1465                           
  1466     007E                     ??_TCN75A_SetLimitTemp:	
  1467                           ; 1 bytes @ 0xE
  1468                           
  1469     007E                     ??___flsub:	
  1470                           ; 1 bytes @ 0xE
  1471                           
  1472                           
  1473                           	psect	cstackBANK0
  1474     0020                     __pcstackBANK0:	
  1475                           ; 1 bytes @ 0xE
  1476                           
  1477     0020                     ?_fputs:
  1478     0020                     ?___fladd:	
  1479                           ; 2 bytes @ 0x0
  1480                           
  1481     0020                     ?___flmul:	
  1482                           ; 4 bytes @ 0x0
  1483                           
  1484     0020                     fputs@s:	
  1485                           ; 4 bytes @ 0x0
  1486                           
  1487     0020                     ___fpclassifyf@e:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490     0020                     ___fladd@b:	
  1491                           ; 2 bytes @ 0x0
  1492                           
  1493     0020                     ___fldiv@rem:	
  1494                           ; 4 bytes @ 0x0
  1495                           
  1496     0020                     ___flmul@b:	
  1497                           ; 4 bytes @ 0x0
  1498                           
  1499                           
  1500                           ; 4 bytes @ 0x0
  1501     0020                     	ds	1
  1502     0021                     fputs@fp:
  1503                           
  1504                           ; 2 bytes @ 0x1
  1505     0021                     	ds	1
  1506     0022                     ___fpclassifyf@u:
  1507                           
  1508                           ; 4 bytes @ 0x2
  1509     0022                     	ds	1
  1510     0023                     ??_fputs:
  1511                           
  1512                           ; 1 bytes @ 0x3
  1513     0023                     	ds	1
  1514     0024                     ___fldiv@sign:
  1515     0024                     ___fladd@a:	
  1516                           ; 1 bytes @ 0x4
  1517                           
  1518     0024                     ___flmul@a:	
  1519                           ; 4 bytes @ 0x4
  1520                           
  1521                           
  1522                           ; 4 bytes @ 0x4
  1523     0024                     	ds	1
  1524     0025                     fputs@c:
  1525     0025                     ___fldiv@new_exp:	
  1526                           ; 1 bytes @ 0x5
  1527                           
  1528                           
  1529                           ; 2 bytes @ 0x5
  1530     0025                     	ds	1
  1531     0026                     fputs@i:
  1532                           
  1533                           ; 2 bytes @ 0x6
  1534     0026                     	ds	1
  1535     0027                     ___fldiv@grs:
  1536                           
  1537                           ; 4 bytes @ 0x7
  1538     0027                     	ds	1
  1539     0028                     ?_pad:
  1540     0028                     pad@fp:	
  1541                           ; 1 bytes @ 0x8
  1542                           
  1543     0028                     ??___fladd:	
  1544                           ; 2 bytes @ 0x8
  1545                           
  1546     0028                     ??___flmul:	
  1547                           ; 1 bytes @ 0x8
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0x8
  1551     0028                     	ds	2
  1552     002A                     pad@buf:
  1553                           
  1554                           ; 1 bytes @ 0xA
  1555     002A                     	ds	1
  1556     002B                     ___fldiv@bexp:
  1557     002B                     pad@p:	
  1558                           ; 1 bytes @ 0xB
  1559                           
  1560                           
  1561                           ; 2 bytes @ 0xB
  1562     002B                     	ds	1
  1563     002C                     ___fldiv@aexp:
  1564                           
  1565                           ; 1 bytes @ 0xC
  1566     002C                     	ds	1
  1567     002D                     ?_floorf:
  1568     002D                     ___flmul@sign:	
  1569                           ; 4 bytes @ 0xD
  1570                           
  1571     002D                     pad@i:	
  1572                           ; 1 bytes @ 0xD
  1573                           
  1574     002D                     floorf@x:	
  1575                           ; 2 bytes @ 0xD
  1576                           
  1577                           
  1578                           ; 4 bytes @ 0xD
  1579     002D                     	ds	1
  1580     002E                     ___flmul@grs:
  1581                           
  1582                           ; 4 bytes @ 0xE
  1583     002E                     	ds	2
  1584     0030                     ___fladd@signs:
  1585                           
  1586                           ; 1 bytes @ 0x10
  1587     0030                     	ds	1
  1588     0031                     ___fladd@aexp:
  1589     0031                     ??_floorf:	
  1590                           ; 1 bytes @ 0x11
  1591                           
  1592                           
  1593                           ; 1 bytes @ 0x11
  1594     0031                     	ds	1
  1595     0032                     ___fladd@bexp:
  1596     0032                     ___flmul@aexp:	
  1597                           ; 1 bytes @ 0x12
  1598                           
  1599                           
  1600                           ; 1 bytes @ 0x12
  1601     0032                     	ds	1
  1602     0033                     ___fladd@grs:
  1603     0033                     ___flmul@bexp:	
  1604                           ; 1 bytes @ 0x13
  1605                           
  1606                           
  1607                           ; 1 bytes @ 0x13
  1608     0033                     	ds	1
  1609     0034                     ?_TCN75A_GetTemp:
  1610     0034                     ___flmul@prod:	
  1611                           ; 4 bytes @ 0x14
  1612                           
  1613                           
  1614                           ; 4 bytes @ 0x14
  1615     0034                     	ds	3
  1616     0037                     floorf@m:
  1617                           
  1618                           ; 4 bytes @ 0x17
  1619     0037                     	ds	1
  1620     0038                     ___flmul@temp:
  1621     0038                     ??_TCN75A_GetTemp:	
  1622                           ; 2 bytes @ 0x18
  1623                           
  1624                           
  1625                           ; 1 bytes @ 0x18
  1626     0038                     	ds	1
  1627     0039                     TCN75A_GetTemp@temp:
  1628                           
  1629                           ; 4 bytes @ 0x19
  1630     0039                     	ds	1
  1631     003A                     ?_TCN75A_ReadTemperature:
  1632     003A                     ?___flsub:	
  1633                           ; 4 bytes @ 0x1A
  1634                           
  1635     003A                     ___flsub@a:	
  1636                           ; 4 bytes @ 0x1A
  1637                           
  1638                           
  1639                           ; 4 bytes @ 0x1A
  1640     003A                     	ds	1
  1641     003B                     floorf@e:
  1642                           
  1643                           ; 2 bytes @ 0x1B
  1644     003B                     	ds	2
  1645     003D                     TCN75A_GetTemp@reg:
  1646     003D                     floorf@u:	
  1647                           ; 1 bytes @ 0x1D
  1648                           
  1649                           
  1650                           ; 4 bytes @ 0x1D
  1651     003D                     	ds	1
  1652     003E                     _TCN75A_GetTemp$235:
  1653     003E                     ___flsub@b:	
  1654                           ; 4 bytes @ 0x1E
  1655                           
  1656     003E                     ??_TCN75A_ReadTemperature:	
  1657                           ; 4 bytes @ 0x1E
  1658                           
  1659                           
  1660                           ; 1 bytes @ 0x1E
  1661     003E                     	ds	4
  1662     0042                     TCN75A_GetTemp@tempHigh:
  1663                           
  1664                           ; 1 bytes @ 0x22
  1665     0042                     	ds	1
  1666     0043                     TCN75A_GetTemp@tempLow:
  1667     0043                     TCN75A_ReadTemperature@temp:	
  1668                           ; 1 bytes @ 0x23
  1669                           
  1670                           
  1671                           ; 4 bytes @ 0x23
  1672     0043                     	ds	1
  1673     0044                     ?_TCN75A_GetLimitTemp:
  1674     0044                     ?_TCN75A_GetHystTemp:	
  1675                           ; 4 bytes @ 0x24
  1676                           
  1677                           
  1678                           ; 4 bytes @ 0x24
  1679     0044                     	ds	3
  1680     0047                     TCN75A_ReadTemperature@tempHigh:
  1681                           
  1682                           ; 1 bytes @ 0x27
  1683     0047                     	ds	1
  1684     0048                     ?___flge:
  1685     0048                     TCN75A_ReadTemperature@tempLow:	
  1686                           ; 1 bit 
  1687                           
  1688     0048                     ___flge@ff1:	
  1689                           ; 1 bytes @ 0x28
  1690                           
  1691                           
  1692                           ; 4 bytes @ 0x28
  1693     0048                     	ds	1
  1694     0049                     TCN75A_ReadTemperature@tempRaw:
  1695                           
  1696                           ; 2 bytes @ 0x29
  1697     0049                     	ds	3
  1698     004C                     ___flge@ff2:
  1699                           
  1700                           ; 4 bytes @ 0x2C
  1701     004C                     	ds	4
  1702     0050                     ??___flge:
  1703                           
  1704                           ; 1 bytes @ 0x30
  1705     0050                     	ds	4
  1706     0054                     ?_TCN75A_SetTemp:
  1707     0054                     ?_efgtoa:	
  1708                           ; 1 bytes @ 0x34
  1709                           
  1710     0054                     efgtoa@fp:	
  1711                           ; 1 bytes @ 0x34
  1712                           
  1713     0054                     TCN75A_SetTemp@value:	
  1714                           ; 2 bytes @ 0x34
  1715                           
  1716                           
  1717                           ; 4 bytes @ 0x34
  1718     0054                     	ds	2
  1719     0056                     efgtoa@f:
  1720                           
  1721                           ; 4 bytes @ 0x36
  1722     0056                     	ds	2
  1723     0058                     ??_TCN75A_SetTemp:
  1724                           
  1725                           ; 1 bytes @ 0x38
  1726     0058                     	ds	2
  1727     005A                     efgtoa@c:
  1728                           
  1729                           ; 1 bytes @ 0x3A
  1730     005A                     	ds	1
  1731     005B                     ??_efgtoa:
  1732                           
  1733                           ; 1 bytes @ 0x3B
  1734     005B                     	ds	1
  1735     005C                     TCN75A_SetTemp@reg:
  1736                           
  1737                           ; 1 bytes @ 0x3C
  1738     005C                     	ds	1
  1739     005D                     _TCN75A_SetTemp$229:
  1740                           
  1741                           ; 2 bytes @ 0x3D
  1742     005D                     	ds	2
  1743     005F                     ?_vfpfcnvrt:
  1744     005F                     TCN75A_SetTemp@tempLow:	
  1745                           ; 1 bytes @ 0x3F
  1746                           
  1747     005F                     vfpfcnvrt@fp:	
  1748                           ; 1 bytes @ 0x3F
  1749                           
  1750                           
  1751                           ; 2 bytes @ 0x3F
  1752     005F                     	ds	1
  1753     0060                     TCN75A_SetTemp@tempHigh:
  1754                           
  1755                           ; 1 bytes @ 0x40
  1756     0060                     	ds	1
  1757     0061                     ?_TCN75A_SetHystTemp:
  1758     0061                     ?_TCN75A_SetLimitTemp:	
  1759                           ; 1 bytes @ 0x41
  1760                           
  1761     0061                     vfpfcnvrt@fmt:	
  1762                           ; 1 bytes @ 0x41
  1763                           
  1764     0061                     TCN75A_SetHystTemp@val:	
  1765                           ; 1 bytes @ 0x41
  1766                           
  1767     0061                     TCN75A_SetLimitTemp@val:	
  1768                           ; 4 bytes @ 0x41
  1769                           
  1770                           
  1771                           ; 4 bytes @ 0x41
  1772     0061                     	ds	1
  1773     0062                     vfpfcnvrt@ap:
  1774                           
  1775                           ; 1 bytes @ 0x42
  1776     0062                     	ds	1
  1777     0063                     ??_vfpfcnvrt:
  1778                           
  1779                           ; 1 bytes @ 0x43
  1780     0063                     	ds	2
  1781     0065                     ?_TCN75A_SetRangeTemp:
  1782     0065                     TCN75A_SetRangeTemp@val_down:	
  1783                           ; 1 bytes @ 0x45
  1784                           
  1785                           
  1786                           ; 4 bytes @ 0x45
  1787     0065                     	ds	2
  1788     0067                     vfpfcnvrt@convarg:
  1789                           
  1790                           ; 4 bytes @ 0x47
  1791     0067                     	ds	2
  1792     0069                     TCN75A_SetRangeTemp@val_up:
  1793                           
  1794                           ; 4 bytes @ 0x49
  1795     0069                     	ds	2
  1796     006B                     vfpfcnvrt@c:
  1797                           
  1798                           ; 1 bytes @ 0x4B
  1799     006B                     	ds	1
  1800     006C                     vfpfcnvrt@cp:
  1801                           
  1802                           ; 2 bytes @ 0x4C
  1803     006C                     	ds	2
  1804     006E                     vfprintf@cfmt:
  1805                           
  1806                           ; 2 bytes @ 0x4E
  1807     006E                     	ds	2
  1808                           
  1809                           	psect	maintext
  1810     0A6D                     __pmaintext:	
  1811 ;;
  1812 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1813 ;;
  1814 ;; *************** function _main *****************
  1815 ;; Defined at:
  1816 ;;		line 40 in file "newmain.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2   55[None  ] int 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : B00/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       0       3       0       0
  1833 ;;      Totals:         0       0       3       0       0
  1834 ;;Total ram usage:        3 bytes
  1835 ;; Hardware stack levels required when called: 8
  1836 ;; This function calls:
  1837 ;;		_I2C_Master_Init
  1838 ;;		_TCN75A_GetHystTemp
  1839 ;;		_TCN75A_GetLimitTemp
  1840 ;;		_TCN75A_Init
  1841 ;;		_TCN75A_ReadTemperature
  1842 ;;		_UART_TX_Init
  1843 ;;		_UART_Write_Text
  1844 ;;		___flge
  1845 ;;		_restartSensor
  1846 ;;		_setupSensorForNormalMode
  1847 ;;		_setupSensorForSafetyMode
  1848 ;;		_sprintf
  1849 ;; This function is called by:
  1850 ;;		Startup code after reset
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854     0A6D                     _main:	
  1855                           ;psect for function _main
  1856                           
  1857     0A6D                     l3676:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1860                           
  1861                           
  1862                           ;newmain.c: 42:     I2C_Master_Init();
  1863     0A6D  160A  158A  2222  120A  158A  	fcall	_I2C_Master_Init
  1864                           
  1865                           ;newmain.c: 43:     UART_TX_Init();
  1866     0A72  160A  158A  2293  120A  158A  	fcall	_UART_TX_Init
  1867     0A77                     l3678:
  1868                           
  1869                           ;newmain.c: 44:     TCN75A_Init(0x48);
  1870     0A77  3048               	movlw	72
  1871     0A78  160A  158A  21E7  120A  158A  	fcall	_TCN75A_Init
  1872     0A7D                     l3680:
  1873                           
  1874                           ;newmain.c: 45:     UART_Write_Text("TCN75A initialized");
  1875     0A7D  301A               	movlw	low (STR_1| (0+32768))
  1876     0A7E  00F1               	movwf	UART_Write_Text@text
  1877     0A7F  3099               	movlw	high (STR_1| (0+32768))
  1878     0A80  00F2               	movwf	UART_Write_Text@text+1
  1879     0A81  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  1880     0A86                     l3682:
  1881                           
  1882                           ;newmain.c: 51:         actualTemp = TCN75A_ReadTemperature();
  1883     0A86  120A  118A  2008  120A  158A  	fcall	_TCN75A_ReadTemperature
  1884     0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  1885     0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  1886     0A8D  083D               	movf	?_TCN75A_ReadTemperature+3,w
  1887     0A8E  1683               	bsf	3,5	;RP0=1, select bank3
  1888     0A8F  1703               	bsf	3,6	;RP1=1, select bank3
  1889     0A90  00A3               	movwf	(_actualTemp+3)^(0+384)
  1890     0A91  1283               	bcf	3,5	;RP0=0, select bank0
  1891     0A92  1303               	bcf	3,6	;RP1=0, select bank0
  1892     0A93  083C               	movf	?_TCN75A_ReadTemperature+2,w
  1893     0A94  1683               	bsf	3,5	;RP0=1, select bank3
  1894     0A95  1703               	bsf	3,6	;RP1=1, select bank3
  1895     0A96  00A2               	movwf	(_actualTemp+2)^(0+384)
  1896     0A97  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0A98  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0A99  083B               	movf	?_TCN75A_ReadTemperature+1,w
  1899     0A9A  1683               	bsf	3,5	;RP0=1, select bank3
  1900     0A9B  1703               	bsf	3,6	;RP1=1, select bank3
  1901     0A9C  00A1               	movwf	(_actualTemp+1)^(0+384)
  1902     0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  1903     0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  1904     0A9F  083A               	movf	?_TCN75A_ReadTemperature,w
  1905     0AA0  1683               	bsf	3,5	;RP0=1, select bank3
  1906     0AA1  1703               	bsf	3,6	;RP1=1, select bank3
  1907     0AA2  00A0               	movwf	_actualTemp^(0+384)
  1908     0AA3                     l3684:
  1909                           
  1910                           ;newmain.c: 52:         sprintf(displayText, "Temp: %.1f C\n\r", actualTemp);
  1911     0AA3  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  1912     0AA4  1683               	bsf	3,5	;RP0=1, select bank1
  1913     0AA5  1303               	bcf	3,6	;RP1=0, select bank1
  1914     0AA6  00D1               	movwf	sprintf@s^(0+128)
  1915     0AA7  303D               	movlw	low (STR_2| (0+32768))
  1916     0AA8  00D2               	movwf	sprintf@fmt^(0+128)
  1917     0AA9  3099               	movlw	high (STR_2| (0+32768))
  1918     0AAA  00D3               	movwf	(sprintf@fmt^(0+128)+1)
  1919     0AAB  1683               	bsf	3,5	;RP0=1, select bank3
  1920     0AAC  1703               	bsf	3,6	;RP1=1, select bank3
  1921     0AAD  0823               	movf	(_actualTemp+3)^(0+384),w
  1922     0AAE  1683               	bsf	3,5	;RP0=1, select bank1
  1923     0AAF  1303               	bcf	3,6	;RP1=0, select bank1
  1924     0AB0  00D7               	movwf	((?_sprintf+3)^(0+128)+3)
  1925     0AB1  1683               	bsf	3,5	;RP0=1, select bank3
  1926     0AB2  1703               	bsf	3,6	;RP1=1, select bank3
  1927     0AB3  0822               	movf	(_actualTemp+2)^(0+384),w
  1928     0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  1929     0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  1930     0AB6  00D6               	movwf	((?_sprintf+2)^(0+128)+3)
  1931     0AB7  1683               	bsf	3,5	;RP0=1, select bank3
  1932     0AB8  1703               	bsf	3,6	;RP1=1, select bank3
  1933     0AB9  0821               	movf	(_actualTemp+1)^(0+384),w
  1934     0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  1935     0ABB  1303               	bcf	3,6	;RP1=0, select bank1
  1936     0ABC  00D5               	movwf	((?_sprintf+1)^(0+128)+3)
  1937     0ABD  1683               	bsf	3,5	;RP0=1, select bank3
  1938     0ABE  1703               	bsf	3,6	;RP1=1, select bank3
  1939     0ABF  0820               	movf	_actualTemp^(0+384),w
  1940     0AC0  1683               	bsf	3,5	;RP0=1, select bank1
  1941     0AC1  1303               	bcf	3,6	;RP1=0, select bank1
  1942     0AC2  00D4               	movwf	(?_sprintf^(0+128)+3)
  1943     0AC3  160A  158A  23FC  120A  158A  	fcall	_sprintf
  1944     0AC8                     l3686:
  1945                           
  1946                           ;newmain.c: 53:         UART_Write_Text(displayText);
  1947     0AC8  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  1948     0AC9  00F1               	movwf	UART_Write_Text@text
  1949     0ACA  3001               	movlw	1
  1950     0ACB  00F2               	movwf	UART_Write_Text@text+1
  1951     0ACC  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  1952     0AD1                     l3688:
  1953                           
  1954                           ;newmain.c: 55:         if (RB0 == 1) {
  1955     0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  1956     0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  1957     0AD3  1C06               	btfss	6,0	;volatile
  1958     0AD4  2AD6               	goto	u5041
  1959     0AD5  2AD7               	goto	u5040
  1960     0AD6                     u5041:
  1961     0AD6  2B6A               	goto	l57
  1962     0AD7                     u5040:
  1963     0AD7                     l3690:
  1964                           
  1965                           ;newmain.c: 56:             UART_Write_Text("Default Modex\n\r");
  1966     0AD7  302D               	movlw	low (STR_3| (0+32768))
  1967     0AD8  00F1               	movwf	UART_Write_Text@text
  1968     0AD9  3099               	movlw	high (STR_3| (0+32768))
  1969     0ADA  00F2               	movwf	UART_Write_Text@text+1
  1970     0ADB  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  1971                           
  1972                           ;newmain.c: 60:             sprintf(displayText, "Default LimitTemp:%.1fC, Hysteresis:%.
      +                          1fC\n\r", TCN75A_GetLimitTemp(), TCN75A_GetHystTemp());
  1973     0AE0  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  1974     0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  1975     0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  1976     0AE3  00D1               	movwf	sprintf@s^(0+128)
  1977     0AE4  307C               	movlw	low (STR_4| (0+32768))
  1978     0AE5  00D2               	movwf	sprintf@fmt^(0+128)
  1979     0AE6  3098               	movlw	high (STR_4| (0+32768))
  1980     0AE7  00D3               	movwf	(sprintf@fmt^(0+128)+1)
  1981     0AE8  160A  158A  2260  120A  158A  	fcall	_TCN75A_GetLimitTemp
  1982     0AED  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  1984     0AEF  0847               	movf	?_TCN75A_GetLimitTemp+3,w
  1985     0AF0  1683               	bsf	3,5	;RP0=1, select bank1
  1986     0AF1  1303               	bcf	3,6	;RP1=0, select bank1
  1987     0AF2  00D7               	movwf	((?_sprintf+3)^(0+128)+3)
  1988     0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  1989     0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  1990     0AF5  0846               	movf	?_TCN75A_GetLimitTemp+2,w
  1991     0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  1992     0AF7  1303               	bcf	3,6	;RP1=0, select bank1
  1993     0AF8  00D6               	movwf	((?_sprintf+2)^(0+128)+3)
  1994     0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  1995     0AFA  1303               	bcf	3,6	;RP1=0, select bank0
  1996     0AFB  0845               	movf	?_TCN75A_GetLimitTemp+1,w
  1997     0AFC  1683               	bsf	3,5	;RP0=1, select bank1
  1998     0AFD  1303               	bcf	3,6	;RP1=0, select bank1
  1999     0AFE  00D5               	movwf	((?_sprintf+1)^(0+128)+3)
  2000     0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  2001     0B00  1303               	bcf	3,6	;RP1=0, select bank0
  2002     0B01  0844               	movf	?_TCN75A_GetLimitTemp,w
  2003     0B02  1683               	bsf	3,5	;RP0=1, select bank1
  2004     0B03  1303               	bcf	3,6	;RP1=0, select bank1
  2005     0B04  00D4               	movwf	(?_sprintf^(0+128)+3)
  2006     0B05  160A  158A  224F  120A  158A  	fcall	_TCN75A_GetHystTemp
  2007     0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  2008     0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  2009     0B0C  0847               	movf	?_TCN75A_GetHystTemp+3,w
  2010     0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  2011     0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  2012     0B0F  00DB               	movwf	((?_sprintf+3)^(0+128)+7)
  2013     0B10  1283               	bcf	3,5	;RP0=0, select bank0
  2014     0B11  1303               	bcf	3,6	;RP1=0, select bank0
  2015     0B12  0846               	movf	?_TCN75A_GetHystTemp+2,w
  2016     0B13  1683               	bsf	3,5	;RP0=1, select bank1
  2017     0B14  1303               	bcf	3,6	;RP1=0, select bank1
  2018     0B15  00DA               	movwf	((?_sprintf+2)^(0+128)+7)
  2019     0B16  1283               	bcf	3,5	;RP0=0, select bank0
  2020     0B17  1303               	bcf	3,6	;RP1=0, select bank0
  2021     0B18  0845               	movf	?_TCN75A_GetHystTemp+1,w
  2022     0B19  1683               	bsf	3,5	;RP0=1, select bank1
  2023     0B1A  1303               	bcf	3,6	;RP1=0, select bank1
  2024     0B1B  00D9               	movwf	((?_sprintf+1)^(0+128)+7)
  2025     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  2026     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  2027     0B1E  0844               	movf	?_TCN75A_GetHystTemp,w
  2028     0B1F  1683               	bsf	3,5	;RP0=1, select bank1
  2029     0B20  1303               	bcf	3,6	;RP1=0, select bank1
  2030     0B21  00D8               	movwf	(?_sprintf^(0+128)+7)
  2031     0B22  160A  158A  23FC  120A  158A  	fcall	_sprintf
  2032                           
  2033                           ;newmain.c: 61:             UART_Write_Text(displayText);
  2034     0B27  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  2035     0B28  00F1               	movwf	UART_Write_Text@text
  2036     0B29  3001               	movlw	1
  2037     0B2A  00F2               	movwf	UART_Write_Text@text+1
  2038     0B2B  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2039     0B30                     l3692:
  2040                           
  2041                           ;newmain.c: 62:             if (actualTemp > TCN75A_GetLimitTemp()) {
  2042     0B30  160A  158A  2260  120A  158A  	fcall	_TCN75A_GetLimitTemp
  2043     0B35  1283               	bcf	3,5	;RP0=0, select bank0
  2044     0B36  1303               	bcf	3,6	;RP1=0, select bank0
  2045     0B37  0847               	movf	?_TCN75A_GetLimitTemp+3,w
  2046     0B38  00CB               	movwf	___flge@ff1+3
  2047     0B39  0846               	movf	?_TCN75A_GetLimitTemp+2,w
  2048     0B3A  00CA               	movwf	___flge@ff1+2
  2049     0B3B  0845               	movf	?_TCN75A_GetLimitTemp+1,w
  2050     0B3C  00C9               	movwf	___flge@ff1+1
  2051     0B3D  0844               	movf	?_TCN75A_GetLimitTemp,w
  2052     0B3E  00C8               	movwf	___flge@ff1
  2053     0B3F  1683               	bsf	3,5	;RP0=1, select bank3
  2054     0B40  1703               	bsf	3,6	;RP1=1, select bank3
  2055     0B41  0823               	movf	(_actualTemp+3)^(0+384),w
  2056     0B42  1283               	bcf	3,5	;RP0=0, select bank0
  2057     0B43  1303               	bcf	3,6	;RP1=0, select bank0
  2058     0B44  00CF               	movwf	___flge@ff2+3
  2059     0B45  1683               	bsf	3,5	;RP0=1, select bank3
  2060     0B46  1703               	bsf	3,6	;RP1=1, select bank3
  2061     0B47  0822               	movf	(_actualTemp+2)^(0+384),w
  2062     0B48  1283               	bcf	3,5	;RP0=0, select bank0
  2063     0B49  1303               	bcf	3,6	;RP1=0, select bank0
  2064     0B4A  00CE               	movwf	___flge@ff2+2
  2065     0B4B  1683               	bsf	3,5	;RP0=1, select bank3
  2066     0B4C  1703               	bsf	3,6	;RP1=1, select bank3
  2067     0B4D  0821               	movf	(_actualTemp+1)^(0+384),w
  2068     0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2069     0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2070     0B50  00CD               	movwf	___flge@ff2+1
  2071     0B51  1683               	bsf	3,5	;RP0=1, select bank3
  2072     0B52  1703               	bsf	3,6	;RP1=1, select bank3
  2073     0B53  0820               	movf	_actualTemp^(0+384),w
  2074     0B54  1283               	bcf	3,5	;RP0=0, select bank0
  2075     0B55  1303               	bcf	3,6	;RP1=0, select bank0
  2076     0B56  00CC               	movwf	___flge@ff2
  2077     0B57  160A  158A  275C  120A  158A  	fcall	___flge
  2078     0B5C  1803               	btfsc	3,0
  2079     0B5D  2B5F               	goto	u5051
  2080     0B5E  2B60               	goto	u5050
  2081     0B5F                     u5051:
  2082     0B5F  2CAB               	goto	l3724
  2083     0B60                     u5050:
  2084     0B60                     l3694:
  2085                           
  2086                           ;newmain.c: 63:                 UART_Write_Text("You crossed the Default LimitTemp\n\r")
      +                          ;
  2087     0B60  30F6               	movlw	low (STR_5| (0+32768))
  2088     0B61  00F1               	movwf	UART_Write_Text@text
  2089     0B62  3098               	movlw	high (STR_5| (0+32768))
  2090     0B63  00F2               	movwf	UART_Write_Text@text+1
  2091     0B64  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2092     0B69  2CAB               	goto	l3724
  2093     0B6A                     l57:	
  2094                           ;newmain.c: 66:         else if (RB1 == 1) {
  2095                           
  2096     0B6A  1C86               	btfss	6,1	;volatile
  2097     0B6B  2B6D               	goto	u5061
  2098     0B6C  2B6E               	goto	u5060
  2099     0B6D                     u5061:
  2100     0B6D  2C0B               	goto	l60
  2101     0B6E                     u5060:
  2102     0B6E                     l3696:
  2103                           
  2104                           ;newmain.c: 67:             UART_Write_Text("Normal Mode\n\r");
  2105     0B6E  304C               	movlw	low (STR_6| (0+32768))
  2106     0B6F  00F1               	movwf	UART_Write_Text@text
  2107     0B70  3099               	movlw	high (STR_6| (0+32768))
  2108     0B71  00F2               	movwf	UART_Write_Text@text+1
  2109     0B72  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2110     0B77                     l3698:
  2111                           
  2112                           ;newmain.c: 68:             restartSensor();
  2113     0B77  160A  158A  2316  120A  158A  	fcall	_restartSensor
  2114     0B7C                     l3700:
  2115                           
  2116                           ;newmain.c: 69:             setupSensorForNormalMode();
  2117     0B7C  160A  158A  246E  120A  158A  	fcall	_setupSensorForNormalMode
  2118     0B81                     l3702:
  2119                           
  2120                           ;newmain.c: 70:             sprintf(displayText,"Normal mode Thresholds: LimitTemp:%.1f 
      +                          C,Hysteresis: %.1f C\n\r" ,TCN75A_GetLimitTemp(), TCN75A_GetHystTemp());
  2121     0B81  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  2122     0B82  1683               	bsf	3,5	;RP0=1, select bank1
  2123     0B83  1303               	bcf	3,6	;RP1=0, select bank1
  2124     0B84  00D1               	movwf	sprintf@s^(0+128)
  2125     0B85  3000               	movlw	low (STR_7| (0+32768))
  2126     0B86  00D2               	movwf	sprintf@fmt^(0+128)
  2127     0B87  3098               	movlw	high (STR_7| (0+32768))
  2128     0B88  00D3               	movwf	(sprintf@fmt^(0+128)+1)
  2129     0B89  160A  158A  2260  120A  158A  	fcall	_TCN75A_GetLimitTemp
  2130     0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  2131     0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  2132     0B90  0847               	movf	?_TCN75A_GetLimitTemp+3,w
  2133     0B91  1683               	bsf	3,5	;RP0=1, select bank1
  2134     0B92  1303               	bcf	3,6	;RP1=0, select bank1
  2135     0B93  00D7               	movwf	((?_sprintf+3)^(0+128)+3)
  2136     0B94  1283               	bcf	3,5	;RP0=0, select bank0
  2137     0B95  1303               	bcf	3,6	;RP1=0, select bank0
  2138     0B96  0846               	movf	?_TCN75A_GetLimitTemp+2,w
  2139     0B97  1683               	bsf	3,5	;RP0=1, select bank1
  2140     0B98  1303               	bcf	3,6	;RP1=0, select bank1
  2141     0B99  00D6               	movwf	((?_sprintf+2)^(0+128)+3)
  2142     0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  2143     0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  2144     0B9C  0845               	movf	?_TCN75A_GetLimitTemp+1,w
  2145     0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  2146     0B9E  1303               	bcf	3,6	;RP1=0, select bank1
  2147     0B9F  00D5               	movwf	((?_sprintf+1)^(0+128)+3)
  2148     0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  2149     0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  2150     0BA2  0844               	movf	?_TCN75A_GetLimitTemp,w
  2151     0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  2152     0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  2153     0BA5  00D4               	movwf	(?_sprintf^(0+128)+3)
  2154     0BA6  160A  158A  224F  120A  158A  	fcall	_TCN75A_GetHystTemp
  2155     0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  2156     0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  2157     0BAD  0847               	movf	?_TCN75A_GetHystTemp+3,w
  2158     0BAE  1683               	bsf	3,5	;RP0=1, select bank1
  2159     0BAF  1303               	bcf	3,6	;RP1=0, select bank1
  2160     0BB0  00DB               	movwf	((?_sprintf+3)^(0+128)+7)
  2161     0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  2162     0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  2163     0BB3  0846               	movf	?_TCN75A_GetHystTemp+2,w
  2164     0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  2165     0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  2166     0BB6  00DA               	movwf	((?_sprintf+2)^(0+128)+7)
  2167     0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  2168     0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  2169     0BB9  0845               	movf	?_TCN75A_GetHystTemp+1,w
  2170     0BBA  1683               	bsf	3,5	;RP0=1, select bank1
  2171     0BBB  1303               	bcf	3,6	;RP1=0, select bank1
  2172     0BBC  00D9               	movwf	((?_sprintf+1)^(0+128)+7)
  2173     0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  2174     0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  2175     0BBF  0844               	movf	?_TCN75A_GetHystTemp,w
  2176     0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  2177     0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  2178     0BC2  00D8               	movwf	(?_sprintf^(0+128)+7)
  2179     0BC3  160A  158A  23FC  120A  158A  	fcall	_sprintf
  2180     0BC8                     l3704:
  2181                           
  2182                           ;newmain.c: 71:             UART_Write_Text(displayText);
  2183     0BC8  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  2184     0BC9  00F1               	movwf	UART_Write_Text@text
  2185     0BCA  3001               	movlw	1
  2186     0BCB  00F2               	movwf	UART_Write_Text@text+1
  2187     0BCC  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2188     0BD1                     l3706:
  2189                           
  2190                           ;newmain.c: 72:             if (actualTemp > TCN75A_GetLimitTemp()) {
  2191     0BD1  160A  158A  2260  120A  158A  	fcall	_TCN75A_GetLimitTemp
  2192     0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  2193     0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  2194     0BD8  0847               	movf	?_TCN75A_GetLimitTemp+3,w
  2195     0BD9  00CB               	movwf	___flge@ff1+3
  2196     0BDA  0846               	movf	?_TCN75A_GetLimitTemp+2,w
  2197     0BDB  00CA               	movwf	___flge@ff1+2
  2198     0BDC  0845               	movf	?_TCN75A_GetLimitTemp+1,w
  2199     0BDD  00C9               	movwf	___flge@ff1+1
  2200     0BDE  0844               	movf	?_TCN75A_GetLimitTemp,w
  2201     0BDF  00C8               	movwf	___flge@ff1
  2202     0BE0  1683               	bsf	3,5	;RP0=1, select bank3
  2203     0BE1  1703               	bsf	3,6	;RP1=1, select bank3
  2204     0BE2  0823               	movf	(_actualTemp+3)^(0+384),w
  2205     0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  2206     0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  2207     0BE5  00CF               	movwf	___flge@ff2+3
  2208     0BE6  1683               	bsf	3,5	;RP0=1, select bank3
  2209     0BE7  1703               	bsf	3,6	;RP1=1, select bank3
  2210     0BE8  0822               	movf	(_actualTemp+2)^(0+384),w
  2211     0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  2212     0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  2213     0BEB  00CE               	movwf	___flge@ff2+2
  2214     0BEC  1683               	bsf	3,5	;RP0=1, select bank3
  2215     0BED  1703               	bsf	3,6	;RP1=1, select bank3
  2216     0BEE  0821               	movf	(_actualTemp+1)^(0+384),w
  2217     0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  2218     0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  2219     0BF1  00CD               	movwf	___flge@ff2+1
  2220     0BF2  1683               	bsf	3,5	;RP0=1, select bank3
  2221     0BF3  1703               	bsf	3,6	;RP1=1, select bank3
  2222     0BF4  0820               	movf	_actualTemp^(0+384),w
  2223     0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  2224     0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  2225     0BF7  00CC               	movwf	___flge@ff2
  2226     0BF8  160A  158A  275C  120A  158A  	fcall	___flge
  2227     0BFD  1803               	btfsc	3,0
  2228     0BFE  2C00               	goto	u5071
  2229     0BFF  2C01               	goto	u5070
  2230     0C00                     u5071:
  2231     0C00  2CAB               	goto	l3724
  2232     0C01                     u5070:
  2233     0C01                     l3708:
  2234                           
  2235                           ;newmain.c: 73:                 UART_Write_Text("You crossed the NormalMode LimitTemp\n\
      +                          r");
  2236     0C01  30A8               	movlw	low (STR_8| (0+32768))
  2237     0C02  00F1               	movwf	UART_Write_Text@text
  2238     0C03  3098               	movlw	high (STR_8| (0+32768))
  2239     0C04  00F2               	movwf	UART_Write_Text@text+1
  2240     0C05  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2241     0C0A  2CAB               	goto	l3724
  2242     0C0B                     l60:	
  2243                           ;newmain.c: 76:         else if (RB2 == 1) {
  2244                           
  2245     0C0B  1D06               	btfss	6,2	;volatile
  2246     0C0C  2C0E               	goto	u5081
  2247     0C0D  2C0F               	goto	u5080
  2248     0C0E                     u5081:
  2249     0C0E  2CAB               	goto	l3724
  2250     0C0F                     u5080:
  2251     0C0F                     l3710:
  2252                           
  2253                           ;newmain.c: 77:             UART_Write_Text("Safety Mode");
  2254     0C0F  305A               	movlw	low (STR_9| (0+32768))
  2255     0C10  00F1               	movwf	UART_Write_Text@text
  2256     0C11  3099               	movlw	high (STR_9| (0+32768))
  2257     0C12  00F2               	movwf	UART_Write_Text@text+1
  2258     0C13  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2259     0C18                     l3712:
  2260                           
  2261                           ;newmain.c: 78:             restartSensor();
  2262     0C18  160A  158A  2316  120A  158A  	fcall	_restartSensor
  2263     0C1D                     l3714:
  2264                           
  2265                           ;newmain.c: 79:             setupSensorForSafetyMode();
  2266     0C1D  160A  158A  2498  120A  158A  	fcall	_setupSensorForSafetyMode
  2267     0C22                     l3716:
  2268                           
  2269                           ;newmain.c: 80:             sprintf(displayText,"Safety mode Thresholds: LimitTemp: %.1f
      +                           C,Hysteresis: %.1fC\n\r" ,TCN75A_GetLimitTemp(), TCN75A_GetHystTemp());
  2270     0C22  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  2271     0C23  1683               	bsf	3,5	;RP0=1, select bank1
  2272     0C24  1303               	bcf	3,6	;RP1=0, select bank1
  2273     0C25  00D1               	movwf	sprintf@s^(0+128)
  2274     0C26  303E               	movlw	low (STR_10| (0+32768))
  2275     0C27  00D2               	movwf	sprintf@fmt^(0+128)
  2276     0C28  3098               	movlw	high (STR_10| (0+32768))
  2277     0C29  00D3               	movwf	(sprintf@fmt^(0+128)+1)
  2278     0C2A  160A  158A  2260  120A  158A  	fcall	_TCN75A_GetLimitTemp
  2279     0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  2280     0C30  1303               	bcf	3,6	;RP1=0, select bank0
  2281     0C31  0847               	movf	?_TCN75A_GetLimitTemp+3,w
  2282     0C32  1683               	bsf	3,5	;RP0=1, select bank1
  2283     0C33  1303               	bcf	3,6	;RP1=0, select bank1
  2284     0C34  00D7               	movwf	((?_sprintf+3)^(0+128)+3)
  2285     0C35  1283               	bcf	3,5	;RP0=0, select bank0
  2286     0C36  1303               	bcf	3,6	;RP1=0, select bank0
  2287     0C37  0846               	movf	?_TCN75A_GetLimitTemp+2,w
  2288     0C38  1683               	bsf	3,5	;RP0=1, select bank1
  2289     0C39  1303               	bcf	3,6	;RP1=0, select bank1
  2290     0C3A  00D6               	movwf	((?_sprintf+2)^(0+128)+3)
  2291     0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  2292     0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  2293     0C3D  0845               	movf	?_TCN75A_GetLimitTemp+1,w
  2294     0C3E  1683               	bsf	3,5	;RP0=1, select bank1
  2295     0C3F  1303               	bcf	3,6	;RP1=0, select bank1
  2296     0C40  00D5               	movwf	((?_sprintf+1)^(0+128)+3)
  2297     0C41  1283               	bcf	3,5	;RP0=0, select bank0
  2298     0C42  1303               	bcf	3,6	;RP1=0, select bank0
  2299     0C43  0844               	movf	?_TCN75A_GetLimitTemp,w
  2300     0C44  1683               	bsf	3,5	;RP0=1, select bank1
  2301     0C45  1303               	bcf	3,6	;RP1=0, select bank1
  2302     0C46  00D4               	movwf	(?_sprintf^(0+128)+3)
  2303     0C47  160A  158A  224F  120A  158A  	fcall	_TCN75A_GetHystTemp
  2304     0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  2305     0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  2306     0C4E  0847               	movf	?_TCN75A_GetHystTemp+3,w
  2307     0C4F  1683               	bsf	3,5	;RP0=1, select bank1
  2308     0C50  1303               	bcf	3,6	;RP1=0, select bank1
  2309     0C51  00DB               	movwf	((?_sprintf+3)^(0+128)+7)
  2310     0C52  1283               	bcf	3,5	;RP0=0, select bank0
  2311     0C53  1303               	bcf	3,6	;RP1=0, select bank0
  2312     0C54  0846               	movf	?_TCN75A_GetHystTemp+2,w
  2313     0C55  1683               	bsf	3,5	;RP0=1, select bank1
  2314     0C56  1303               	bcf	3,6	;RP1=0, select bank1
  2315     0C57  00DA               	movwf	((?_sprintf+2)^(0+128)+7)
  2316     0C58  1283               	bcf	3,5	;RP0=0, select bank0
  2317     0C59  1303               	bcf	3,6	;RP1=0, select bank0
  2318     0C5A  0845               	movf	?_TCN75A_GetHystTemp+1,w
  2319     0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  2320     0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  2321     0C5D  00D9               	movwf	((?_sprintf+1)^(0+128)+7)
  2322     0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  2323     0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  2324     0C60  0844               	movf	?_TCN75A_GetHystTemp,w
  2325     0C61  1683               	bsf	3,5	;RP0=1, select bank1
  2326     0C62  1303               	bcf	3,6	;RP1=0, select bank1
  2327     0C63  00D8               	movwf	(?_sprintf^(0+128)+7)
  2328     0C64  160A  158A  23FC  120A  158A  	fcall	_sprintf
  2329     0C69                     l3718:
  2330                           
  2331                           ;newmain.c: 81:             UART_Write_Text(displayText);
  2332     0C69  30A6               	movlw	(low (_displayText| (0+256)))& (0+255)
  2333     0C6A  00F1               	movwf	UART_Write_Text@text
  2334     0C6B  3001               	movlw	1
  2335     0C6C  00F2               	movwf	UART_Write_Text@text+1
  2336     0C6D  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2337     0C72                     l3720:
  2338                           
  2339                           ;newmain.c: 82:             if (actualTemp > TCN75A_GetLimitTemp()) {
  2340     0C72  160A  158A  2260  120A  158A  	fcall	_TCN75A_GetLimitTemp
  2341     0C77  1283               	bcf	3,5	;RP0=0, select bank0
  2342     0C78  1303               	bcf	3,6	;RP1=0, select bank0
  2343     0C79  0847               	movf	?_TCN75A_GetLimitTemp+3,w
  2344     0C7A  00CB               	movwf	___flge@ff1+3
  2345     0C7B  0846               	movf	?_TCN75A_GetLimitTemp+2,w
  2346     0C7C  00CA               	movwf	___flge@ff1+2
  2347     0C7D  0845               	movf	?_TCN75A_GetLimitTemp+1,w
  2348     0C7E  00C9               	movwf	___flge@ff1+1
  2349     0C7F  0844               	movf	?_TCN75A_GetLimitTemp,w
  2350     0C80  00C8               	movwf	___flge@ff1
  2351     0C81  1683               	bsf	3,5	;RP0=1, select bank3
  2352     0C82  1703               	bsf	3,6	;RP1=1, select bank3
  2353     0C83  0823               	movf	(_actualTemp+3)^(0+384),w
  2354     0C84  1283               	bcf	3,5	;RP0=0, select bank0
  2355     0C85  1303               	bcf	3,6	;RP1=0, select bank0
  2356     0C86  00CF               	movwf	___flge@ff2+3
  2357     0C87  1683               	bsf	3,5	;RP0=1, select bank3
  2358     0C88  1703               	bsf	3,6	;RP1=1, select bank3
  2359     0C89  0822               	movf	(_actualTemp+2)^(0+384),w
  2360     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  2361     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  2362     0C8C  00CE               	movwf	___flge@ff2+2
  2363     0C8D  1683               	bsf	3,5	;RP0=1, select bank3
  2364     0C8E  1703               	bsf	3,6	;RP1=1, select bank3
  2365     0C8F  0821               	movf	(_actualTemp+1)^(0+384),w
  2366     0C90  1283               	bcf	3,5	;RP0=0, select bank0
  2367     0C91  1303               	bcf	3,6	;RP1=0, select bank0
  2368     0C92  00CD               	movwf	___flge@ff2+1
  2369     0C93  1683               	bsf	3,5	;RP0=1, select bank3
  2370     0C94  1703               	bsf	3,6	;RP1=1, select bank3
  2371     0C95  0820               	movf	_actualTemp^(0+384),w
  2372     0C96  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0C97  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0C98  00CC               	movwf	___flge@ff2
  2375     0C99  160A  158A  275C  120A  158A  	fcall	___flge
  2376     0C9E  1803               	btfsc	3,0
  2377     0C9F  2CA1               	goto	u5091
  2378     0CA0  2CA2               	goto	u5090
  2379     0CA1                     u5091:
  2380     0CA1  2CAB               	goto	l3724
  2381     0CA2                     u5090:
  2382     0CA2                     l3722:
  2383                           
  2384                           ;newmain.c: 83:                 UART_Write_Text("You crossed the SafetyMode LimitTemp\n\
      +                          r");
  2385     0CA2  30CF               	movlw	low (STR_11| (0+32768))
  2386     0CA3  00F1               	movwf	UART_Write_Text@text
  2387     0CA4  3098               	movlw	high (STR_11| (0+32768))
  2388     0CA5  00F2               	movwf	UART_Write_Text@text+1
  2389     0CA6  160A  158A  2421  120A  158A  	fcall	_UART_Write_Text
  2390     0CAB                     l3724:
  2391                           
  2392                           ;newmain.c: 87:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  2393     0CAB  3015               	movlw	21
  2394     0CAC  1683               	bsf	3,5	;RP0=1, select bank1
  2395     0CAD  1303               	bcf	3,6	;RP1=0, select bank1
  2396     0CAE  00EB               	movwf	(??_main^(0+128)+2)
  2397     0CAF  304B               	movlw	75
  2398     0CB0  00EA               	movwf	(??_main^(0+128)+1)
  2399     0CB1  30BD               	movlw	189
  2400     0CB2  00E9               	movwf	??_main^(0+128)
  2401     0CB3                     u5137:
  2402     0CB3  0BE9               	decfsz	??_main^(0+128),f
  2403     0CB4  2CB3               	goto	u5137
  2404     0CB5  0BEA               	decfsz	(??_main^(0+128)+1),f
  2405     0CB6  2CB3               	goto	u5137
  2406     0CB7  0BEB               	decfsz	(??_main^(0+128)+2),f
  2407     0CB8  2CB3               	goto	u5137
  2408     0CB9  2CBA               	nop2
  2409     0CBA  2A86               	goto	l3682
  2410     0CBB  120A  118A  2800   	ljmp	start
  2411     0CBE                     __end_of_main:
  2412                           
  2413                           	psect	text1
  2414     1BFC                     __ptext1:	
  2415 ;; *************** function _sprintf *****************
  2416 ;; Defined at:
  2417 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  s               1   49[BANK1 ] PTR unsigned char 
  2420 ;;		 -> displayText(64), 
  2421 ;;  fmt             2   50[BANK1 ] PTR const unsigned char 
  2422 ;;		 -> STR_10(62), STR_7(62), STR_4(44), STR_2(15), 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  f              11   62[BANK1 ] struct _IO_FILE
  2425 ;;  ret             2    0        int 
  2426 ;;  ap              1   61[BANK1 ] PTR void [1]
  2427 ;;		 -> ?_sprintf(2), 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2   49[BANK1 ] int 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       0      11       0       0
  2438 ;;      Locals:         0       0      12       0       0
  2439 ;;      Temps:          0       0       1       0       0
  2440 ;;      Totals:         0       0      24       0       0
  2441 ;;Total ram usage:       24 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 7
  2444 ;; This function calls:
  2445 ;;		_vfprintf
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451     1BFC                     _sprintf:	
  2452                           ;psect for function _sprintf
  2453                           
  2454     1BFC                     l3654:	
  2455                           ;incstack = 0
  2456                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2457                           
  2458     1BFC  30D4               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2459     1BFD  1683               	bsf	3,5	;RP0=1, select bank1
  2460     1BFE  1303               	bcf	3,6	;RP1=0, select bank1
  2461     1BFF  00DD               	movwf	sprintf@ap^(0+128)
  2462     1C00                     l3656:
  2463     1C00  0851               	movf	sprintf@s^(0+128),w
  2464     1C01  00DE               	movwf	sprintf@f^(0+128)
  2465     1C02  3001               	movlw	1
  2466     1C03  00DF               	movwf	(sprintf@f+1)^(0+128)
  2467     1C04                     l3658:
  2468     1C04  01E0               	clrf	(sprintf@f^(0+128)+2)
  2469     1C05  01E1               	clrf	((sprintf@f+1)^(0+128)+2)
  2470     1C06                     l3660:
  2471     1C06  01E7               	clrf	(sprintf@f^(0+128)+9)
  2472     1C07  01E8               	clrf	((sprintf@f+1)^(0+128)+9)
  2473     1C08                     l3662:
  2474     1C08  30DE               	movlw	low sprintf@f
  2475     1C09  00CC               	movwf	vfprintf@fp^(0+128)
  2476     1C0A  3000               	movlw	high sprintf@f
  2477     1C0B  00CD               	movwf	(vfprintf@fp^(0+128)+1)
  2478     1C0C  0852               	movf	sprintf@fmt^(0+128),w
  2479     1C0D  00CE               	movwf	vfprintf@fmt^(0+128)
  2480     1C0E  0853               	movf	(sprintf@fmt+1)^(0+128),w
  2481     1C0F  00CF               	movwf	(vfprintf@fmt+1)^(0+128)
  2482     1C10  30DD               	movlw	(low (sprintf@ap| 0))& (0+255)
  2483     1C11  00D0               	movwf	vfprintf@ap^(0+128)
  2484     1C12  160A  158A  2527  160A  158A  	fcall	_vfprintf
  2485     1C17                     l3664:
  2486     1C17  1683               	bsf	3,5	;RP0=1, select bank1
  2487     1C18  1303               	bcf	3,6	;RP1=0, select bank1
  2488     1C19  0860               	movf	(sprintf@f^(0+128)+2),w
  2489     1C1A  0751               	addwf	sprintf@s^(0+128),w
  2490     1C1B  00DC               	movwf	??_sprintf^(0+128)
  2491     1C1C  085C               	movf	??_sprintf^(0+128),w
  2492     1C1D  0084               	movwf	4
  2493     1C1E  1783               	bsf	3,7	;select IRP bank2
  2494     1C1F  0180               	clrf	0
  2495     1C20                     l856:
  2496     1C20  0008               	return
  2497     1C21                     __end_of_sprintf:
  2498                           
  2499                           	psect	text2
  2500     1D27                     __ptext2:	
  2501 ;; *************** function _vfprintf *****************
  2502 ;; Defined at:
  2503 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  2506 ;;		 -> sprintf@f(11), 
  2507 ;;  fmt             2   46[BANK1 ] PTR const unsigned char 
  2508 ;;		 -> STR_10(62), STR_7(62), STR_4(44), STR_2(15), 
  2509 ;;  ap              1   48[BANK1 ] PTR PTR void 
  2510 ;;		 -> sprintf@ap(1), 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2513 ;;		 -> STR_10(62), STR_7(62), STR_4(44), STR_2(15), 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2   44[BANK1 ] int 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       5       0       0
  2524 ;;      Locals:         0       2       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         0       2       5       0       0
  2527 ;;Total ram usage:        7 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 6
  2530 ;; This function calls:
  2531 ;;		_vfpfcnvrt
  2532 ;; This function is called by:
  2533 ;;		_sprintf
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537     1D27                     _vfprintf:	
  2538                           ;psect for function _vfprintf
  2539                           
  2540     1D27                     l3598:	
  2541                           ;incstack = 0
  2542 ;; using string table level
  2543                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2544                           
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2547     1D27  1683               	bsf	3,5	;RP0=1, select bank1
  2548     1D28  1303               	bcf	3,6	;RP1=0, select bank1
  2549     1D29  084E               	movf	vfprintf@fmt^(0+128),w
  2550     1D2A  1283               	bcf	3,5	;RP0=0, select bank0
  2551     1D2B  1303               	bcf	3,6	;RP1=0, select bank0
  2552     1D2C  00EE               	movwf	vfprintf@cfmt
  2553     1D2D  1683               	bsf	3,5	;RP0=1, select bank1
  2554     1D2E  1303               	bcf	3,6	;RP1=0, select bank1
  2555     1D2F  084F               	movf	(vfprintf@fmt+1)^(0+128),w
  2556     1D30  1283               	bcf	3,5	;RP0=0, select bank0
  2557     1D31  1303               	bcf	3,6	;RP1=0, select bank0
  2558     1D32  00EF               	movwf	vfprintf@cfmt+1
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2561     1D33  2D4D               	goto	l3602
  2562     1D34                     l3600:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2565     1D34  1683               	bsf	3,5	;RP0=1, select bank1
  2566     1D35  1303               	bcf	3,6	;RP1=0, select bank1
  2567     1D36  084C               	movf	vfprintf@fp^(0+128),w
  2568     1D37  1283               	bcf	3,5	;RP0=0, select bank0
  2569     1D38  1303               	bcf	3,6	;RP1=0, select bank0
  2570     1D39  00DF               	movwf	vfpfcnvrt@fp
  2571     1D3A  1683               	bsf	3,5	;RP0=1, select bank1
  2572     1D3B  1303               	bcf	3,6	;RP1=0, select bank1
  2573     1D3C  084D               	movf	(vfprintf@fp+1)^(0+128),w
  2574     1D3D  1283               	bcf	3,5	;RP0=0, select bank0
  2575     1D3E  1303               	bcf	3,6	;RP1=0, select bank0
  2576     1D3F  00E0               	movwf	vfpfcnvrt@fp+1
  2577     1D40  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2578     1D41  00E1               	movwf	vfpfcnvrt@fmt
  2579     1D42  1683               	bsf	3,5	;RP0=1, select bank1
  2580     1D43  1303               	bcf	3,6	;RP1=0, select bank1
  2581     1D44  0850               	movf	vfprintf@ap^(0+128),w
  2582     1D45  1283               	bcf	3,5	;RP0=0, select bank0
  2583     1D46  1303               	bcf	3,6	;RP1=0, select bank0
  2584     1D47  00E2               	movwf	vfpfcnvrt@ap
  2585     1D48  160A  118A  24FC  160A  158A  	fcall	_vfpfcnvrt
  2586     1D4D                     l3602:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2589     1D4D  1283               	bcf	3,5	;RP0=0, select bank0
  2590     1D4E  1303               	bcf	3,6	;RP1=0, select bank0
  2591     1D4F  086F               	movf	vfprintf@cfmt+1,w
  2592     1D50  00FF               	movwf	btemp+1
  2593     1D51  086E               	movf	vfprintf@cfmt,w
  2594     1D52  0084               	movwf	4
  2595     1D53  160A  158A  216E  160A  158A  	fcall	stringtab
  2596     1D58  3A00               	xorlw	0
  2597     1D59  1D03               	skipz
  2598     1D5A  2D5C               	goto	u5001
  2599     1D5B  2D5D               	goto	u5000
  2600     1D5C                     u5001:
  2601     1D5C  2D34               	goto	l3600
  2602     1D5D                     u5000:
  2603     1D5D                     l3604:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2606     1D5D  1683               	bsf	3,5	;RP0=1, select bank1
  2607     1D5E  1303               	bcf	3,6	;RP1=0, select bank1
  2608     1D5F  01CC               	clrf	?_vfprintf^(0+128)
  2609     1D60  01CD               	clrf	(?_vfprintf+1)^(0+128)
  2610     1D61                     l974:
  2611     1D61  0008               	return
  2612     1D62                     __end_of_vfprintf:
  2613                           
  2614                           	psect	text3
  2615     14FC                     __ptext3:	
  2616 ;; *************** function _vfpfcnvrt *****************
  2617 ;; Defined at:
  2618 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  2621 ;;		 -> sprintf@f(11), 
  2622 ;;  fmt             1   65[BANK0 ] PTR PTR unsigned char 
  2623 ;;		 -> vfprintf@cfmt(2), 
  2624 ;;  ap              1   66[BANK0 ] PTR PTR void 
  2625 ;;		 -> sprintf@ap(1), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  convarg         4   71[BANK0 ] struct .
  2628 ;;  cp              2   76[BANK0 ] PTR unsigned char 
  2629 ;;		 -> STR_10(62), STR_7(62), STR_4(44), STR_2(15), 
  2630 ;;  c               1   75[BANK0 ] unsigned char 
  2631 ;;  done            1    0        _Bool 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       4       0       0       0
  2642 ;;      Locals:         0       7       0       0       0
  2643 ;;      Temps:          0       4       0       0       0
  2644 ;;      Totals:         0      15       0       0       0
  2645 ;;Total ram usage:       15 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 5
  2648 ;; This function calls:
  2649 ;;		_efgtoa
  2650 ;;		_fputc
  2651 ;;		_read_prec_or_width
  2652 ;; This function is called by:
  2653 ;;		_vfprintf
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657     14FC                     _vfpfcnvrt:	
  2658                           ;psect for function _vfpfcnvrt
  2659                           
  2660     14FC                     l3474:	
  2661                           ;incstack = 0
  2662 ;; using string table level
  2663                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2664                           
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2667     14FC  1283               	bcf	3,5	;RP0=0, select bank0
  2668     14FD  1303               	bcf	3,6	;RP1=0, select bank0
  2669     14FE  0861               	movf	vfpfcnvrt@fmt,w
  2670     14FF  0084               	movwf	4
  2671     1500  1383               	bcf	3,7	;select IRP bank0
  2672     1501  0800               	movf	0,w
  2673     1502  00E3               	movwf	??_vfpfcnvrt
  2674     1503  0A84               	incf	4,f
  2675     1504  0800               	movf	0,w
  2676     1505  00E4               	movwf	??_vfpfcnvrt+1
  2677     1506  0864               	movf	??_vfpfcnvrt+1,w
  2678     1507  00FF               	movwf	btemp+1
  2679     1508  0863               	movf	??_vfpfcnvrt,w
  2680     1509  0084               	movwf	4
  2681     150A  160A  158A  216E  160A  118A  	fcall	stringtab
  2682     150F  3A25               	xorlw	37
  2683     1510  1D03               	skipz
  2684     1511  2D13               	goto	u4901
  2685     1512  2D14               	goto	u4900
  2686     1513                     u4901:
  2687     1513  2E0E               	goto	l3524
  2688     1514                     u4900:
  2689     1514                     l3476:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2692     1514  0861               	movf	vfpfcnvrt@fmt,w
  2693     1515  0084               	movwf	4
  2694     1516  3001               	movlw	1
  2695     1517  1383               	bcf	3,7	;select IRP bank0
  2696     1518  0780               	addwf	0,f
  2697     1519  0A84               	incf	4,f
  2698     151A  1803               	skipnc
  2699     151B  0A80               	incf	0,f
  2700     151C                     l3478:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2703     151C  1683               	bsf	3,5	;RP0=1, select bank3
  2704     151D  1703               	bsf	3,6	;RP1=1, select bank3
  2705     151E  01A4               	clrf	_width^(0+384)
  2706     151F  01A5               	clrf	(_width+1)^(0+384)
  2707     1520  3000               	movlw	0
  2708     1521  1683               	bsf	3,5	;RP0=1, select bank1
  2709     1522  1303               	bcf	3,6	;RP1=0, select bank1
  2710     1523  00EE               	movwf	_flags^(0+128)
  2711     1524                     l3480:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2714     1524  30FF               	movlw	255
  2715     1525  00EC               	movwf	_prec^(0+128)
  2716     1526  30FF               	movlw	255
  2717     1527  00ED               	movwf	(_prec^(0+128)+1)
  2718     1528                     l3482:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2721     1528  1283               	bcf	3,5	;RP0=0, select bank0
  2722     1529  1303               	bcf	3,6	;RP1=0, select bank0
  2723     152A  0861               	movf	vfpfcnvrt@fmt,w
  2724     152B  0084               	movwf	4
  2725     152C  0800               	movf	0,w
  2726     152D  00E3               	movwf	??_vfpfcnvrt
  2727     152E  0A84               	incf	4,f
  2728     152F  0800               	movf	0,w
  2729     1530  00E4               	movwf	??_vfpfcnvrt+1
  2730     1531  0864               	movf	??_vfpfcnvrt+1,w
  2731     1532  00FF               	movwf	btemp+1
  2732     1533  0863               	movf	??_vfpfcnvrt,w
  2733     1534  0084               	movwf	4
  2734     1535  160A  158A  216E  160A  118A  	fcall	stringtab
  2735     153A  3A2E               	xorlw	46
  2736     153B  1D03               	skipz
  2737     153C  2D3E               	goto	u4911
  2738     153D  2D3F               	goto	u4910
  2739     153E                     u4911:
  2740     153E  2D56               	goto	l3488
  2741     153F                     u4910:
  2742     153F                     l3484:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2745     153F  0861               	movf	vfpfcnvrt@fmt,w
  2746     1540  0084               	movwf	4
  2747     1541  3001               	movlw	1
  2748     1542  1383               	bcf	3,7	;select IRP bank0
  2749     1543  0780               	addwf	0,f
  2750     1544  0A84               	incf	4,f
  2751     1545  1803               	skipnc
  2752     1546  0A80               	incf	0,f
  2753     1547                     l3486:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2756     1547  0861               	movf	vfpfcnvrt@fmt,w
  2757     1548  00F6               	movwf	read_prec_or_width@fmt
  2758     1549  0862               	movf	vfpfcnvrt@ap,w
  2759     154A  00F7               	movwf	read_prec_or_width@ap
  2760     154B  160A  158A  25EE  160A  118A  	fcall	_read_prec_or_width
  2761     1550  0877               	movf	?_read_prec_or_width+1,w
  2762     1551  1683               	bsf	3,5	;RP0=1, select bank1
  2763     1552  1303               	bcf	3,6	;RP1=0, select bank1
  2764     1553  00ED               	movwf	(_prec+1)^(0+128)
  2765     1554  0876               	movf	?_read_prec_or_width,w
  2766     1555  00EC               	movwf	_prec^(0+128)
  2767     1556                     l3488:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2770     1556  1283               	bcf	3,5	;RP0=0, select bank0
  2771     1557  0861               	movf	vfpfcnvrt@fmt,w
  2772     1558  0084               	movwf	4
  2773     1559  1383               	bcf	3,7	;select IRP bank0
  2774     155A  0800               	movf	0,w
  2775     155B  00EC               	movwf	vfpfcnvrt@cp
  2776     155C  0A84               	incf	4,f
  2777     155D  0800               	movf	0,w
  2778     155E  0384               	decf	4,f
  2779     155F  00ED               	movwf	vfpfcnvrt@cp+1
  2780     1560                     l3490:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2783     1560  086D               	movf	vfpfcnvrt@cp+1,w
  2784     1561  00FF               	movwf	btemp+1
  2785     1562  086C               	movf	vfpfcnvrt@cp,w
  2786     1563  0084               	movwf	4
  2787     1564  160A  158A  216E  160A  118A  	fcall	stringtab
  2788     1569  00EB               	movwf	vfpfcnvrt@c
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2791     156A  2D77               	goto	l3498
  2792     156B                     l3492:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2795     156B  3001               	movlw	1
  2796     156C  07EC               	addwf	vfpfcnvrt@cp,f
  2797     156D  1803               	skipnc
  2798     156E  0AED               	incf	vfpfcnvrt@cp+1,f
  2799     156F  3000               	movlw	0
  2800     1570  07ED               	addwf	vfpfcnvrt@cp+1,f
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
  2803     1571  2D82               	goto	l3500
  2804     1572                     l956:	
  2805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  2806                           
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2809     1572  306C               	movlw	108
  2810     1573  00EB               	movwf	vfpfcnvrt@c
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
  2813     1574  2D82               	goto	l3500
  2814     1575                     l3494:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2817     1575  01EB               	clrf	vfpfcnvrt@c
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
  2820     1576  2D82               	goto	l3500
  2821     1577                     l3498:
  2822     1577  086B               	movf	vfpfcnvrt@c,w
  2823                           
  2824                           ; Switch size 1, requested type "simple"
  2825                           ; Number of cases is 3, Range of values is 76 to 108
  2826                           ; switch strategies available:
  2827                           ; Name         Instructions Cycles
  2828                           ; simple_byte           10     6 (average)
  2829                           ; direct_byte          110    11 (fixed)
  2830                           ; jumptable            263     9 (fixed)
  2831                           ;	Chosen strategy is simple_byte
  2832     1578  3A4C               	xorlw	76	; case 76
  2833     1579  1903               	skipnz
  2834     157A  2D6B               	goto	l3492
  2835     157B  3A2A               	xorlw	42	; case 102
  2836     157C  1903               	skipnz
  2837     157D  2D72               	goto	l956
  2838     157E  3A0A               	xorlw	10	; case 108
  2839     157F  1903               	skipnz
  2840     1580  2D6B               	goto	l3492
  2841     1581  2D75               	goto	l3494
  2842     1582                     l3500:
  2843     1582  086D               	movf	vfpfcnvrt@cp+1,w
  2844     1583  00FF               	movwf	btemp+1
  2845     1584  086C               	movf	vfpfcnvrt@cp,w
  2846     1585  0084               	movwf	4
  2847     1586  160A  158A  216E  160A  118A  	fcall	stringtab
  2848     158B  3A66               	xorlw	102
  2849     158C  1D03               	skipz
  2850     158D  2D8F               	goto	u4921
  2851     158E  2D90               	goto	u4920
  2852     158F                     u4921:
  2853     158F  2E03               	goto	l3520
  2854     1590                     u4920:
  2855     1590  2DBB               	goto	l3508
  2856     1591                     l3502:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2859     1591  0862               	movf	vfpfcnvrt@ap,w
  2860     1592  0084               	movwf	4
  2861     1593  1383               	bcf	3,7	;select IRP bank0
  2862     1594  0800               	movf	0,w
  2863     1595  00FF               	movwf	btemp+1
  2864     1596  3004               	movlw	4
  2865     1597  0780               	addwf	0,f
  2866     1598  087F               	movf	btemp+1,w
  2867     1599  0084               	movwf	4
  2868     159A  0800               	movf	0,w
  2869     159B  00E7               	movwf	vfpfcnvrt@convarg
  2870     159C  0A84               	incf	4,f
  2871     159D  0800               	movf	0,w
  2872     159E  00E8               	movwf	vfpfcnvrt@convarg+1
  2873     159F  0A84               	incf	4,f
  2874     15A0  0800               	movf	0,w
  2875     15A1  00E9               	movwf	vfpfcnvrt@convarg+2
  2876     15A2  0A84               	incf	4,f
  2877     15A3  0800               	movf	0,w
  2878     15A4  00EA               	movwf	vfpfcnvrt@convarg+3
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
  2881     15A5  2DC3               	goto	l3510
  2882     15A6                     l3504:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2885     15A6  0862               	movf	vfpfcnvrt@ap,w
  2886     15A7  0084               	movwf	4
  2887     15A8  1383               	bcf	3,7	;select IRP bank0
  2888     15A9  0800               	movf	0,w
  2889     15AA  00FF               	movwf	btemp+1
  2890     15AB  3004               	movlw	4
  2891     15AC  0780               	addwf	0,f
  2892     15AD  087F               	movf	btemp+1,w
  2893     15AE  0084               	movwf	4
  2894     15AF  0800               	movf	0,w
  2895     15B0  00E7               	movwf	vfpfcnvrt@convarg
  2896     15B1  0A84               	incf	4,f
  2897     15B2  0800               	movf	0,w
  2898     15B3  00E8               	movwf	vfpfcnvrt@convarg+1
  2899     15B4  0A84               	incf	4,f
  2900     15B5  0800               	movf	0,w
  2901     15B6  00E9               	movwf	vfpfcnvrt@convarg+2
  2902     15B7  0A84               	incf	4,f
  2903     15B8  0800               	movf	0,w
  2904     15B9  00EA               	movwf	vfpfcnvrt@convarg+3
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
  2907     15BA  2DC3               	goto	l3510
  2908     15BB                     l3508:
  2909     15BB  086B               	movf	vfpfcnvrt@c,w
  2910                           
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 2, Range of values is 76 to 108
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte            7     4 (average)
  2916                           ; direct_byte          110    11 (fixed)
  2917                           ; jumptable            263     9 (fixed)
  2918                           ;	Chosen strategy is simple_byte
  2919     15BC  3A4C               	xorlw	76	; case 76
  2920     15BD  1903               	skipnz
  2921     15BE  2DA6               	goto	l3504
  2922     15BF  3A20               	xorlw	32	; case 108
  2923     15C0  1903               	skipnz
  2924     15C1  2D91               	goto	l3502
  2925     15C2  2DC3               	goto	l3510
  2926     15C3                     l3510:
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2929     15C3  3001               	movlw	1
  2930     15C4  00E3               	movwf	??_vfpfcnvrt
  2931     15C5  0863               	movf	??_vfpfcnvrt,w
  2932     15C6  076C               	addwf	vfpfcnvrt@cp,w
  2933     15C7  00E5               	movwf	??_vfpfcnvrt+2
  2934     15C8  086D               	movf	vfpfcnvrt@cp+1,w
  2935     15C9  00E4               	movwf	??_vfpfcnvrt+1
  2936     15CA  1803               	skipnc
  2937     15CB  0AE4               	incf	??_vfpfcnvrt+1,f
  2938     15CC  1BE3               	btfsc	??_vfpfcnvrt,7
  2939     15CD  03E4               	decf	??_vfpfcnvrt+1,f
  2940     15CE  0864               	movf	??_vfpfcnvrt+1,w
  2941     15CF  00E6               	movwf	??_vfpfcnvrt+3
  2942     15D0  0861               	movf	vfpfcnvrt@fmt,w
  2943     15D1  0084               	movwf	4
  2944     15D2  0865               	movf	??_vfpfcnvrt+2,w
  2945     15D3  1383               	bcf	3,7	;select IRP bank0
  2946     15D4  0080               	movwf	0
  2947     15D5  0866               	movf	??_vfpfcnvrt+3,w
  2948     15D6  0A84               	incf	4,f
  2949     15D7  0080               	movwf	0
  2950     15D8  0384               	decf	4,f
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2953     15D9  2DF6               	goto	l3518
  2954     15DA                     l3512:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2957     15DA  085F               	movf	vfpfcnvrt@fp,w
  2958     15DB  00D4               	movwf	efgtoa@fp
  2959     15DC  0860               	movf	vfpfcnvrt@fp+1,w
  2960     15DD  00D5               	movwf	efgtoa@fp+1
  2961     15DE  086A               	movf	vfpfcnvrt@convarg+3,w
  2962     15DF  00D9               	movwf	efgtoa@f+3
  2963     15E0  0869               	movf	vfpfcnvrt@convarg+2,w
  2964     15E1  00D8               	movwf	efgtoa@f+2
  2965     15E2  0868               	movf	vfpfcnvrt@convarg+1,w
  2966     15E3  00D7               	movwf	efgtoa@f+1
  2967     15E4  0867               	movf	vfpfcnvrt@convarg,w
  2968     15E5  00D6               	movwf	efgtoa@f
  2969     15E6  086D               	movf	vfpfcnvrt@cp+1,w
  2970     15E7  00FF               	movwf	btemp+1
  2971     15E8  086C               	movf	vfpfcnvrt@cp,w
  2972     15E9  0084               	movwf	4
  2973     15EA  160A  158A  216E  160A  118A  	fcall	stringtab
  2974     15EF  00DA               	movwf	efgtoa@c
  2975     15F0  160A  118A  23E5  160A  118A  	fcall	_efgtoa
  2976     15F5  2E2F               	goto	l967
  2977     15F6                     l3518:
  2978     15F6  086D               	movf	vfpfcnvrt@cp+1,w
  2979     15F7  00FF               	movwf	btemp+1
  2980     15F8  086C               	movf	vfpfcnvrt@cp,w
  2981     15F9  0084               	movwf	4
  2982     15FA  160A  158A  216E  160A  118A  	fcall	stringtab
  2983                           
  2984                           ; Switch size 1, requested type "simple"
  2985                           ; Number of cases is 1, Range of values is 102 to 102
  2986                           ; switch strategies available:
  2987                           ; Name         Instructions Cycles
  2988                           ; simple_byte            4     3 (average)
  2989                           ; direct_byte           14    11 (fixed)
  2990                           ; jumptable            263     9 (fixed)
  2991                           ;	Chosen strategy is simple_byte
  2992     15FF  3A66               	xorlw	102	; case 102
  2993     1600  1903               	skipnz
  2994     1601  2DDA               	goto	l3512
  2995     1602  2E03               	goto	l3520
  2996     1603                     l3520:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2999     1603  1283               	bcf	3,5	;RP0=0, select bank0
  3000     1604  1303               	bcf	3,6	;RP1=0, select bank0
  3001     1605  0861               	movf	vfpfcnvrt@fmt,w
  3002     1606  0084               	movwf	4
  3003     1607  3001               	movlw	1
  3004     1608  1383               	bcf	3,7	;select IRP bank0
  3005     1609  0780               	addwf	0,f
  3006     160A  0A84               	incf	4,f
  3007     160B  1803               	skipnc
  3008     160C  0A80               	incf	0,f
  3009     160D  2E2F               	goto	l967
  3010     160E                     l3524:
  3011                           
  3012                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3013     160E  0861               	movf	vfpfcnvrt@fmt,w
  3014     160F  0084               	movwf	4
  3015     1610  1383               	bcf	3,7	;select IRP bank0
  3016     1611  0800               	movf	0,w
  3017     1612  00E3               	movwf	??_vfpfcnvrt
  3018     1613  0A84               	incf	4,f
  3019     1614  0800               	movf	0,w
  3020     1615  00E4               	movwf	??_vfpfcnvrt+1
  3021     1616  0864               	movf	??_vfpfcnvrt+1,w
  3022     1617  00FF               	movwf	btemp+1
  3023     1618  0863               	movf	??_vfpfcnvrt,w
  3024     1619  0084               	movwf	4
  3025     161A  160A  158A  216E  160A  118A  	fcall	stringtab
  3026     161F  00E5               	movwf	??_vfpfcnvrt+2
  3027     1620  01E6               	clrf	??_vfpfcnvrt+3
  3028     1621  0865               	movf	??_vfpfcnvrt+2,w
  3029     1622  00F0               	movwf	fputc@c
  3030     1623  0866               	movf	??_vfpfcnvrt+3,w
  3031     1624  00F1               	movwf	fputc@c+1
  3032     1625  085F               	movf	vfpfcnvrt@fp,w
  3033     1626  00F2               	movwf	fputc@fp
  3034     1627  0860               	movf	vfpfcnvrt@fp+1,w
  3035     1628  00F3               	movwf	fputc@fp+1
  3036     1629  160A  118A  2003  160A  118A  	fcall	_fputc
  3037     162E  2E03               	goto	l3520
  3038     162F                     l967:
  3039     162F  0008               	return
  3040     1630                     __end_of_vfpfcnvrt:
  3041                           
  3042                           	psect	text4
  3043     1DEE                     __ptext4:	
  3044 ;; *************** function _read_prec_or_width *****************
  3045 ;; Defined at:
  3046 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  3049 ;;		 -> vfprintf@cfmt(2), 
  3050 ;;  ap              1    7[COMMON] PTR PTR void [1]
  3051 ;;		 -> sprintf@ap(1), 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  c               1   10[COMMON] unsigned char 
  3054 ;;  n               2   11[COMMON] int 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2    6[COMMON] int 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         2       0       0       0       0
  3065 ;;      Locals:         3       0       0       0       0
  3066 ;;      Temps:          2       0       0       0       0
  3067 ;;      Totals:         7       0       0       0       0
  3068 ;;Total ram usage:        7 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 1
  3071 ;; This function calls:
  3072 ;;		___wmul
  3073 ;; This function is called by:
  3074 ;;		_vfpfcnvrt
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078     1DEE                     _read_prec_or_width:	
  3079                           ;psect for function _read_prec_or_width
  3080                           
  3081     1DEE                     l3434:	
  3082                           ;incstack = 0
  3083                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3084                           
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3087     1DEE  01FB               	clrf	read_prec_or_width@n
  3088     1DEF  01FC               	clrf	read_prec_or_width@n+1
  3089     1DF0                     l3436:
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3092     1DF0  0876               	movf	read_prec_or_width@fmt,w
  3093     1DF1  0084               	movwf	4
  3094     1DF2  1383               	bcf	3,7	;select IRP bank0
  3095     1DF3  0800               	movf	0,w
  3096     1DF4  00F8               	movwf	??_read_prec_or_width
  3097     1DF5  0A84               	incf	4,f
  3098     1DF6  0800               	movf	0,w
  3099     1DF7  00F9               	movwf	??_read_prec_or_width+1
  3100     1DF8  0879               	movf	??_read_prec_or_width+1,w
  3101     1DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3102     1DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3103     1DFB  00FF               	movwf	btemp+1
  3104     1DFC  0878               	movf	??_read_prec_or_width,w
  3105     1DFD  0084               	movwf	4
  3106     1DFE  160A  158A  216E  160A  158A  	fcall	stringtab
  3107     1E03  3A2A               	xorlw	42
  3108     1E04  1D03               	skipz
  3109     1E05  2E07               	goto	u4881
  3110     1E06  2E08               	goto	u4880
  3111     1E07                     u4881:
  3112     1E07  2E3B               	goto	l3446
  3113     1E08                     u4880:
  3114     1E08                     l3438:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3117     1E08  0876               	movf	read_prec_or_width@fmt,w
  3118     1E09  0084               	movwf	4
  3119     1E0A  3001               	movlw	1
  3120     1E0B  1383               	bcf	3,7	;select IRP bank0
  3121     1E0C  0780               	addwf	0,f
  3122     1E0D  0A84               	incf	4,f
  3123     1E0E  1803               	skipnc
  3124     1E0F  0A80               	incf	0,f
  3125     1E10                     l3440:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3128     1E10  0877               	movf	read_prec_or_width@ap,w
  3129     1E11  0084               	movwf	4
  3130     1E12  0800               	movf	0,w
  3131     1E13  00FF               	movwf	btemp+1
  3132     1E14  3002               	movlw	2
  3133     1E15  0780               	addwf	0,f
  3134     1E16  087F               	movf	btemp+1,w
  3135     1E17  0084               	movwf	4
  3136     1E18  0800               	movf	0,w
  3137     1E19  00FB               	movwf	read_prec_or_width@n
  3138     1E1A  0A84               	incf	4,f
  3139     1E1B  0800               	movf	0,w
  3140     1E1C  00FC               	movwf	read_prec_or_width@n+1
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3143     1E1D  2E56               	goto	l3448
  3144     1E1E                     l3442:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3147     1E1E  087C               	movf	read_prec_or_width@n+1,w
  3148     1E1F  00F1               	movwf	___wmul@multiplier+1
  3149     1E20  087B               	movf	read_prec_or_width@n,w
  3150     1E21  00F0               	movwf	___wmul@multiplier
  3151     1E22  300A               	movlw	10
  3152     1E23  00F2               	movwf	___wmul@multiplicand
  3153     1E24  3000               	movlw	0
  3154     1E25  00F3               	movwf	___wmul@multiplicand+1
  3155     1E26  160A  158A  23D7  160A  158A  	fcall	___wmul
  3156     1E2B  087A               	movf	read_prec_or_width@c,w
  3157     1E2C  0770               	addwf	?___wmul,w
  3158     1E2D  00FB               	movwf	read_prec_or_width@n
  3159     1E2E  3000               	movlw	0
  3160     1E2F  1803               	skipnc
  3161     1E30  3001               	movlw	1
  3162     1E31  0771               	addwf	?___wmul+1,w
  3163     1E32  00FC               	movwf	read_prec_or_width@n+1
  3164     1E33                     l3444:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3167     1E33  0876               	movf	read_prec_or_width@fmt,w
  3168     1E34  0084               	movwf	4
  3169     1E35  3001               	movlw	1
  3170     1E36  1383               	bcf	3,7	;select IRP bank0
  3171     1E37  0780               	addwf	0,f
  3172     1E38  0A84               	incf	4,f
  3173     1E39  1803               	skipnc
  3174     1E3A  0A80               	incf	0,f
  3175     1E3B                     l3446:
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3178     1E3B  0876               	movf	read_prec_or_width@fmt,w
  3179     1E3C  0084               	movwf	4
  3180     1E3D  1383               	bcf	3,7	;select IRP bank0
  3181     1E3E  0800               	movf	0,w
  3182     1E3F  00F8               	movwf	??_read_prec_or_width
  3183     1E40  0A84               	incf	4,f
  3184     1E41  0800               	movf	0,w
  3185     1E42  00F9               	movwf	??_read_prec_or_width+1
  3186     1E43  0879               	movf	??_read_prec_or_width+1,w
  3187     1E44  1283               	bcf	3,5	;RP0=0, select bank0
  3188     1E45  1303               	bcf	3,6	;RP1=0, select bank0
  3189     1E46  00FF               	movwf	btemp+1
  3190     1E47  0878               	movf	??_read_prec_or_width,w
  3191     1E48  0084               	movwf	4
  3192     1E49  160A  158A  216E  160A  158A  	fcall	stringtab
  3193     1E4E  3ED0               	addlw	208
  3194     1E4F  00FA               	movwf	read_prec_or_width@c
  3195     1E50  300A               	movlw	10
  3196     1E51  027A               	subwf	read_prec_or_width@c,w
  3197     1E52  1C03               	skipc
  3198     1E53  2E55               	goto	u4891
  3199     1E54  2E56               	goto	u4890
  3200     1E55                     u4891:
  3201     1E55  2E1E               	goto	l3442
  3202     1E56                     u4890:
  3203     1E56                     l3448:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3206     1E56  087C               	movf	read_prec_or_width@n+1,w
  3207     1E57  00F7               	movwf	?_read_prec_or_width+1
  3208     1E58  087B               	movf	read_prec_or_width@n,w
  3209     1E59  00F6               	movwf	?_read_prec_or_width
  3210     1E5A                     l947:
  3211     1E5A  0008               	return
  3212     1E5B                     __end_of_read_prec_or_width:
  3213                           
  3214                           	psect	text5
  3215     1BD7                     __ptext5:	
  3216 ;; *************** function ___wmul *****************
  3217 ;; Defined at:
  3218 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  multiplier      2    0[COMMON] unsigned int 
  3221 ;;  multiplicand    2    2[COMMON] unsigned int 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  product         2    4[COMMON] unsigned int 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  2    0[COMMON] unsigned int 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3233 ;;      Params:         4       0       0       0       0
  3234 ;;      Locals:         2       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0
  3236 ;;      Totals:         6       0       0       0       0
  3237 ;;Total ram usage:        6 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_read_prec_or_width
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246     1BD7                     ___wmul:	
  3247                           ;psect for function ___wmul
  3248                           
  3249     1BD7                     l2666:	
  3250                           ;incstack = 0
  3251                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3252                           
  3253     1BD7  01F4               	clrf	___wmul@product
  3254     1BD8  01F5               	clrf	___wmul@product+1
  3255     1BD9                     l2668:
  3256     1BD9  1C70               	btfss	___wmul@multiplier,0
  3257     1BDA  2BDC               	goto	u3181
  3258     1BDB  2BDD               	goto	u3180
  3259     1BDC                     u3181:
  3260     1BDC  2BE3               	goto	l377
  3261     1BDD                     u3180:
  3262     1BDD                     l2670:
  3263     1BDD  0872               	movf	___wmul@multiplicand,w
  3264     1BDE  07F4               	addwf	___wmul@product,f
  3265     1BDF  1803               	skipnc
  3266     1BE0  0AF5               	incf	___wmul@product+1,f
  3267     1BE1  0873               	movf	___wmul@multiplicand+1,w
  3268     1BE2  07F5               	addwf	___wmul@product+1,f
  3269     1BE3                     l377:
  3270     1BE3  3001               	movlw	1
  3271     1BE4                     u3195:
  3272     1BE4  1003               	clrc
  3273     1BE5  0DF2               	rlf	___wmul@multiplicand,f
  3274     1BE6  0DF3               	rlf	___wmul@multiplicand+1,f
  3275     1BE7  3EFF               	addlw	-1
  3276     1BE8  1D03               	skipz
  3277     1BE9  2BE4               	goto	u3195
  3278     1BEA                     l2672:
  3279     1BEA  3001               	movlw	1
  3280     1BEB                     u3205:
  3281     1BEB  1003               	clrc
  3282     1BEC  0CF1               	rrf	___wmul@multiplier+1,f
  3283     1BED  0CF0               	rrf	___wmul@multiplier,f
  3284     1BEE  3EFF               	addlw	-1
  3285     1BEF  1D03               	skipz
  3286     1BF0  2BEB               	goto	u3205
  3287     1BF1                     l2674:
  3288     1BF1  0870               	movf	___wmul@multiplier,w
  3289     1BF2  0471               	iorwf	___wmul@multiplier+1,w
  3290     1BF3  1D03               	btfss	3,2
  3291     1BF4  2BF6               	goto	u3211
  3292     1BF5  2BF7               	goto	u3210
  3293     1BF6                     u3211:
  3294     1BF6  2BD9               	goto	l2668
  3295     1BF7                     u3210:
  3296     1BF7                     l2676:
  3297     1BF7  0875               	movf	___wmul@product+1,w
  3298     1BF8  00F1               	movwf	?___wmul+1
  3299     1BF9  0874               	movf	___wmul@product,w
  3300     1BFA  00F0               	movwf	?___wmul
  3301     1BFB                     l379:
  3302     1BFB  0008               	return
  3303     1BFC                     __end_of___wmul:
  3304                           
  3305                           	psect	text6
  3306     13E5                     __ptext6:	
  3307 ;; *************** function _efgtoa *****************
  3308 ;; Defined at:
  3309 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  fp              2   52[BANK0 ] PTR struct _IO_FILE
  3312 ;;		 -> sprintf@f(11), 
  3313 ;;  f               4   54[BANK0 ] PTR struct _IO_FILE
  3314 ;;  c               1   58[BANK0 ] unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  u               4   40[BANK1 ] struct flui
  3317 ;;  g               4   36[BANK1 ] struct flui
  3318 ;;  l               4   29[BANK1 ] struct flui
  3319 ;;  h               4   25[BANK1 ] struct flui
  3320 ;;  ou              4   19[BANK1 ] struct flui
  3321 ;;  n               2   34[BANK1 ] int 
  3322 ;;  i               2   23[BANK1 ] int 
  3323 ;;  w               2   17[BANK1 ] int 
  3324 ;;  e               2   15[BANK1 ] int 
  3325 ;;  m               2   13[BANK1 ] int 
  3326 ;;  d               2   11[BANK1 ] int 
  3327 ;;  t               2    4[BANK1 ] int 
  3328 ;;  p               2    2[BANK1 ] int 
  3329 ;;  ne              2    0[BANK1 ] int 
  3330 ;;  sign            1   33[BANK1 ] unsigned char 
  3331 ;;  nmode           1   10[BANK1 ] unsigned char 
  3332 ;;  mode            1    9[BANK1 ] unsigned char 
  3333 ;;  pp              1    8[BANK1 ] unsigned char 
  3334 ;;  esign           1    0        unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       7       0       0       0
  3345 ;;      Locals:         0       0      44       0       0
  3346 ;;      Temps:          0       4       0       0       0
  3347 ;;      Totals:         0      11      44       0       0
  3348 ;;Total ram usage:       55 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 4
  3351 ;; This function calls:
  3352 ;;		___fladd
  3353 ;;		___fldiv
  3354 ;;		___fleq
  3355 ;;		___flge
  3356 ;;		___flmul
  3357 ;;		___flneg
  3358 ;;		___flsub
  3359 ;;		___fltol
  3360 ;;		___fpclassifyf
  3361 ;;		_floorf
  3362 ;;		_labs
  3363 ;;		_memcpy
  3364 ;;		_pad
  3365 ;;		_strcpy
  3366 ;; This function is called by:
  3367 ;;		_vfpfcnvrt
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371     13E5                     _efgtoa:	
  3372                           ;psect for function _efgtoa
  3373                           
  3374     13E5                     l3220:	
  3375                           ;incstack = 0
  3376                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3377                           
  3378                           
  3379                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3380     13E5  1683               	bsf	3,5	;RP0=1, select bank1
  3381     13E6  1303               	bcf	3,6	;RP1=0, select bank1
  3382     13E7  01C1               	clrf	efgtoa@sign^(0+128)
  3383     13E8                     l3222:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3386     13E8  1283               	bcf	3,5	;RP0=0, select bank0
  3387     13E9  1303               	bcf	3,6	;RP1=0, select bank0
  3388     13EA  0859               	movf	efgtoa@f+3,w
  3389     13EB  1683               	bsf	3,5	;RP0=1, select bank1
  3390     13EC  1303               	bcf	3,6	;RP1=0, select bank1
  3391     13ED  00C7               	movwf	(efgtoa@g+3)^(0+128)
  3392     13EE  1283               	bcf	3,5	;RP0=0, select bank0
  3393     13EF  1303               	bcf	3,6	;RP1=0, select bank0
  3394     13F0  0858               	movf	efgtoa@f+2,w
  3395     13F1  1683               	bsf	3,5	;RP0=1, select bank1
  3396     13F2  1303               	bcf	3,6	;RP1=0, select bank1
  3397     13F3  00C6               	movwf	(efgtoa@g+2)^(0+128)
  3398     13F4  1283               	bcf	3,5	;RP0=0, select bank0
  3399     13F5  1303               	bcf	3,6	;RP1=0, select bank0
  3400     13F6  0857               	movf	efgtoa@f+1,w
  3401     13F7  1683               	bsf	3,5	;RP0=1, select bank1
  3402     13F8  1303               	bcf	3,6	;RP1=0, select bank1
  3403     13F9  00C5               	movwf	(efgtoa@g+1)^(0+128)
  3404     13FA  1283               	bcf	3,5	;RP0=0, select bank0
  3405     13FB  1303               	bcf	3,6	;RP1=0, select bank0
  3406     13FC  0856               	movf	efgtoa@f,w
  3407     13FD  1683               	bsf	3,5	;RP0=1, select bank1
  3408     13FE  1303               	bcf	3,6	;RP1=0, select bank1
  3409     13FF  00C4               	movwf	efgtoa@g^(0+128)
  3410     1400                     l3224:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3413     1400  0847               	movf	(efgtoa@g+3)^(0+128),w
  3414     1401  1283               	bcf	3,5	;RP0=0, select bank0
  3415     1402  1303               	bcf	3,6	;RP1=0, select bank0
  3416     1403  00CB               	movwf	___flge@ff1+3
  3417     1404  1683               	bsf	3,5	;RP0=1, select bank1
  3418     1405  1303               	bcf	3,6	;RP1=0, select bank1
  3419     1406  0846               	movf	(efgtoa@g+2)^(0+128),w
  3420     1407  1283               	bcf	3,5	;RP0=0, select bank0
  3421     1408  1303               	bcf	3,6	;RP1=0, select bank0
  3422     1409  00CA               	movwf	___flge@ff1+2
  3423     140A  1683               	bsf	3,5	;RP0=1, select bank1
  3424     140B  1303               	bcf	3,6	;RP1=0, select bank1
  3425     140C  0845               	movf	(efgtoa@g+1)^(0+128),w
  3426     140D  1283               	bcf	3,5	;RP0=0, select bank0
  3427     140E  1303               	bcf	3,6	;RP1=0, select bank0
  3428     140F  00C9               	movwf	___flge@ff1+1
  3429     1410  1683               	bsf	3,5	;RP0=1, select bank1
  3430     1411  1303               	bcf	3,6	;RP1=0, select bank1
  3431     1412  0844               	movf	efgtoa@g^(0+128),w
  3432     1413  1283               	bcf	3,5	;RP0=0, select bank0
  3433     1414  1303               	bcf	3,6	;RP1=0, select bank0
  3434     1415  00C8               	movwf	___flge@ff1
  3435     1416  3000               	movlw	0
  3436     1417  00CF               	movwf	___flge@ff2+3
  3437     1418  3000               	movlw	0
  3438     1419  00CE               	movwf	___flge@ff2+2
  3439     141A  3000               	movlw	0
  3440     141B  00CD               	movwf	___flge@ff2+1
  3441     141C  3000               	movlw	0
  3442     141D  00CC               	movwf	___flge@ff2
  3443     141E  160A  158A  275C  160A  118A  	fcall	___flge
  3444     1423  1803               	btfsc	3,0
  3445     1424  2C26               	goto	u4531
  3446     1425  2C27               	goto	u4530
  3447     1426                     u4531:
  3448     1426  2C42               	goto	l3230
  3449     1427                     u4530:
  3450     1427                     l3226:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3453     1427  3001               	movlw	1
  3454     1428  1683               	bsf	3,5	;RP0=1, select bank1
  3455     1429  1303               	bcf	3,6	;RP1=0, select bank1
  3456     142A  00C1               	movwf	efgtoa@sign^(0+128)
  3457     142B                     l3228:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3460     142B  0847               	movf	(efgtoa@g+3)^(0+128),w
  3461     142C  00F3               	movwf	___flneg@f1+3
  3462     142D  0846               	movf	(efgtoa@g+2)^(0+128),w
  3463     142E  00F2               	movwf	___flneg@f1+2
  3464     142F  0845               	movf	(efgtoa@g+1)^(0+128),w
  3465     1430  00F1               	movwf	___flneg@f1+1
  3466     1431  0844               	movf	efgtoa@g^(0+128),w
  3467     1432  00F0               	movwf	___flneg@f1
  3468     1433  160A  158A  21F2  160A  118A  	fcall	___flneg
  3469     1438  0873               	movf	?___flneg+3,w
  3470     1439  1683               	bsf	3,5	;RP0=1, select bank1
  3471     143A  1303               	bcf	3,6	;RP1=0, select bank1
  3472     143B  00C7               	movwf	(efgtoa@g+3)^(0+128)
  3473     143C  0872               	movf	?___flneg+2,w
  3474     143D  00C6               	movwf	(efgtoa@g+2)^(0+128)
  3475     143E  0871               	movf	?___flneg+1,w
  3476     143F  00C5               	movwf	(efgtoa@g+1)^(0+128)
  3477     1440  0870               	movf	?___flneg,w
  3478     1441  00C4               	movwf	efgtoa@g^(0+128)
  3479     1442                     l3230:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3482     1442  1683               	bsf	3,5	;RP0=1, select bank1
  3483     1443  1303               	bcf	3,6	;RP1=0, select bank1
  3484     1444  01C2               	clrf	efgtoa@n^(0+128)
  3485     1445  01C3               	clrf	(efgtoa@n+1)^(0+128)
  3486     1446                     l3232:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3489     1446  1683               	bsf	3,5	;RP0=1, select bank3
  3490     1447  1703               	bsf	3,6	;RP1=1, select bank3
  3491     1448  0825               	movf	(_width+1)^(0+384),w
  3492     1449  1683               	bsf	3,5	;RP0=1, select bank1
  3493     144A  1303               	bcf	3,6	;RP1=0, select bank1
  3494     144B  00B2               	movwf	(efgtoa@w+1)^(0+128)
  3495     144C  1683               	bsf	3,5	;RP0=1, select bank3
  3496     144D  1703               	bsf	3,6	;RP1=1, select bank3
  3497     144E  0824               	movf	_width^(0+384),w
  3498     144F  1683               	bsf	3,5	;RP0=1, select bank1
  3499     1450  1303               	bcf	3,6	;RP1=0, select bank1
  3500     1451  00B1               	movwf	efgtoa@w^(0+128)
  3501     1452                     l3234:
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3504     1452  0841               	movf	efgtoa@sign^(0+128),w
  3505     1453  1903               	btfsc	3,2
  3506     1454  2C56               	goto	u4541
  3507     1455  2C57               	goto	u4540
  3508     1456                     u4541:
  3509     1456  2C67               	goto	l3242
  3510     1457                     u4540:
  3511     1457                     l3236:
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3514     1457  0841               	movf	efgtoa@sign^(0+128),w
  3515     1458  1D03               	btfss	3,2
  3516     1459  2C5B               	goto	u4551
  3517     145A  2C5C               	goto	u4550
  3518     145B                     u4551:
  3519     145B  2C61               	goto	l3240
  3520     145C                     u4550:
  3521     145C                     l3238:
  3522     145C  302B               	movlw	43
  3523     145D  00A6               	movwf	_efgtoa$835^(0+128)
  3524     145E  3000               	movlw	0
  3525     145F  00A7               	movwf	(_efgtoa$835^(0+128)+1)
  3526     1460  2C65               	goto	l895
  3527     1461                     l3240:
  3528     1461  302D               	movlw	45
  3529     1462  00A6               	movwf	_efgtoa$835^(0+128)
  3530     1463  3000               	movlw	0
  3531     1464  00A7               	movwf	(_efgtoa$835^(0+128)+1)
  3532     1465                     l895:
  3533     1465  0826               	movf	_efgtoa$835^(0+128),w
  3534     1466  00C1               	movwf	efgtoa@sign^(0+128)
  3535     1467                     l3242:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3538     1467  0847               	movf	(efgtoa@g+3)^(0+128),w
  3539     1468  00F3               	movwf	___fpclassifyf@x+3
  3540     1469  0846               	movf	(efgtoa@g+2)^(0+128),w
  3541     146A  00F2               	movwf	___fpclassifyf@x+2
  3542     146B  0845               	movf	(efgtoa@g+1)^(0+128),w
  3543     146C  00F1               	movwf	___fpclassifyf@x+1
  3544     146D  0844               	movf	efgtoa@g^(0+128),w
  3545     146E  00F0               	movwf	___fpclassifyf@x
  3546     146F  160A  158A  26CF  160A  118A  	fcall	___fpclassifyf
  3547     1474  0370               	decf	?___fpclassifyf,w
  3548     1475  0471               	iorwf	?___fpclassifyf+1,w
  3549     1476  1D03               	btfss	3,2
  3550     1477  2C79               	goto	u4561
  3551     1478  2C7A               	goto	u4560
  3552     1479                     u4561:
  3553     1479  2CC1               	goto	l3256
  3554     147A                     u4560:
  3555     147A                     l3244:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3558     147A  1683               	bsf	3,5	;RP0=1, select bank1
  3559     147B  1303               	bcf	3,6	;RP1=0, select bank1
  3560     147C  0841               	movf	efgtoa@sign^(0+128),w
  3561     147D  1903               	btfsc	3,2
  3562     147E  2C80               	goto	u4571
  3563     147F  2C81               	goto	u4570
  3564     1480                     u4571:
  3565     1480  2C91               	goto	l3248
  3566     1481                     u4570:
  3567     1481                     l3246:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3570     1481  0841               	movf	efgtoa@sign^(0+128),w
  3571     1482  1283               	bcf	3,5	;RP0=0, select bank2
  3572     1483  1703               	bsf	3,6	;RP1=1, select bank2
  3573     1484  0090               	movwf	_dbuf^(0+256)
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
  3576     1485  30FF               	movlw	255
  3577     1486  1683               	bsf	3,5	;RP0=1, select bank1
  3578     1487  1303               	bcf	3,6	;RP1=0, select bank1
  3579     1488  07B1               	addwf	efgtoa@w^(0+128),f
  3580     1489  1803               	skipnc
  3581     148A  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3582     148B  30FF               	movlw	255
  3583     148C  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3586     148D  3001               	movlw	1
  3587     148E  00C2               	movwf	efgtoa@n^(0+128)
  3588     148F  3000               	movlw	0
  3589     1490  00C3               	movwf	(efgtoa@n^(0+128)+1)
  3590     1491                     l3248:
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3593     1491  0842               	movf	efgtoa@n^(0+128),w
  3594     1492  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3595     1493  00F0               	movwf	strcpy@dest
  3596     1494  3066               	movlw	low (STR_12| (0+32768))
  3597     1495  00F1               	movwf	strcpy@src
  3598     1496  3099               	movlw	high (STR_12| (0+32768))
  3599     1497  00F2               	movwf	strcpy@src+1
  3600     1498  160A  158A  2370  160A  118A  	fcall	_strcpy
  3601     149D                     l3250:
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3604     149D  30FD               	movlw	253
  3605     149E  1683               	bsf	3,5	;RP0=1, select bank1
  3606     149F  1303               	bcf	3,6	;RP1=0, select bank1
  3607     14A0  07B1               	addwf	efgtoa@w^(0+128),f
  3608     14A1  1803               	skipnc
  3609     14A2  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3610     14A3  30FF               	movlw	255
  3611     14A4  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3612     14A5                     l3252:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3615     14A5  1283               	bcf	3,5	;RP0=0, select bank0
  3616     14A6  1303               	bcf	3,6	;RP1=0, select bank0
  3617     14A7  0854               	movf	efgtoa@fp,w
  3618     14A8  00A8               	movwf	pad@fp
  3619     14A9  0855               	movf	efgtoa@fp+1,w
  3620     14AA  00A9               	movwf	pad@fp+1
  3621     14AB  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3622     14AC  00AA               	movwf	pad@buf
  3623     14AD  1683               	bsf	3,5	;RP0=1, select bank1
  3624     14AE  1303               	bcf	3,6	;RP1=0, select bank1
  3625     14AF  0832               	movf	(efgtoa@w+1)^(0+128),w
  3626     14B0  1283               	bcf	3,5	;RP0=0, select bank0
  3627     14B1  1303               	bcf	3,6	;RP1=0, select bank0
  3628     14B2  00AC               	movwf	pad@p+1
  3629     14B3  1683               	bsf	3,5	;RP0=1, select bank1
  3630     14B4  1303               	bcf	3,6	;RP1=0, select bank1
  3631     14B5  0831               	movf	efgtoa@w^(0+128),w
  3632     14B6  1283               	bcf	3,5	;RP0=0, select bank0
  3633     14B7  1303               	bcf	3,6	;RP1=0, select bank0
  3634     14B8  00AB               	movwf	pad@p
  3635     14B9  160A  158A  2562  160A  118A  	fcall	_pad
  3636     14BE  120A  118A  2FE5   	goto	l898
  3637     14C1                     l3256:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3640     14C1  1683               	bsf	3,5	;RP0=1, select bank1
  3641     14C2  1303               	bcf	3,6	;RP1=0, select bank1
  3642     14C3  0847               	movf	(efgtoa@g+3)^(0+128),w
  3643     14C4  00F3               	movwf	___fpclassifyf@x+3
  3644     14C5  0846               	movf	(efgtoa@g+2)^(0+128),w
  3645     14C6  00F2               	movwf	___fpclassifyf@x+2
  3646     14C7  0845               	movf	(efgtoa@g+1)^(0+128),w
  3647     14C8  00F1               	movwf	___fpclassifyf@x+1
  3648     14C9  0844               	movf	efgtoa@g^(0+128),w
  3649     14CA  00F0               	movwf	___fpclassifyf@x
  3650     14CB  160A  158A  26CF  160A  118A  	fcall	___fpclassifyf
  3651     14D0  0870               	movf	?___fpclassifyf,w
  3652     14D1  0471               	iorwf	?___fpclassifyf+1,w
  3653     14D2  1D03               	btfss	3,2
  3654     14D3  2CD5               	goto	u4581
  3655     14D4  2CD8               	goto	u4580
  3656     14D5                     u4581:
  3657     14D5  120A  118A  28B1   	goto	l3270
  3658     14D8                     u4580:
  3659     14D8                     l3258:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3662     14D8  1683               	bsf	3,5	;RP0=1, select bank1
  3663     14D9  1303               	bcf	3,6	;RP1=0, select bank1
  3664     14DA  0841               	movf	efgtoa@sign^(0+128),w
  3665     14DB  1903               	btfsc	3,2
  3666     14DC  2CDE               	goto	u4591
  3667     14DD  2CDF               	goto	u4590
  3668     14DE                     u4591:
  3669     14DE  2CEF               	goto	l3262
  3670     14DF                     u4590:
  3671     14DF                     l3260:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3674     14DF  0841               	movf	efgtoa@sign^(0+128),w
  3675     14E0  1283               	bcf	3,5	;RP0=0, select bank2
  3676     14E1  1703               	bsf	3,6	;RP1=1, select bank2
  3677     14E2  0090               	movwf	_dbuf^(0+256)
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
  3680     14E3  30FF               	movlw	255
  3681     14E4  1683               	bsf	3,5	;RP0=1, select bank1
  3682     14E5  1303               	bcf	3,6	;RP1=0, select bank1
  3683     14E6  07B1               	addwf	efgtoa@w^(0+128),f
  3684     14E7  1803               	skipnc
  3685     14E8  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3686     14E9  30FF               	movlw	255
  3687     14EA  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3690     14EB  3001               	movlw	1
  3691     14EC  00C2               	movwf	efgtoa@n^(0+128)
  3692     14ED  3000               	movlw	0
  3693     14EE  00C3               	movwf	(efgtoa@n^(0+128)+1)
  3694     14EF                     l3262:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3697     14EF  0842               	movf	efgtoa@n^(0+128),w
  3698     14F0  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3699     14F1  00F0               	movwf	strcpy@dest
  3700     14F2  306A               	movlw	low (STR_15| (0+32768))
  3701     14F3  00F1               	movwf	strcpy@src
  3702     14F4  3099               	movlw	high (STR_15| (0+32768))
  3703     14F5  00F2               	movwf	strcpy@src+1
  3704     14F6  160A  158A  2370  160A  118A  	fcall	_strcpy
  3705     14FB  2C9D               	goto	l3250
  3706                           
  3707                           	psect	text7
  3708     1B70                     __ptext7:	
  3709 ;; *************** function _strcpy *****************
  3710 ;; Defined at:
  3711 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  dest            1    0[COMMON] PTR unsigned char 
  3714 ;;		 -> dbuf(80), 
  3715 ;;  src             2    1[COMMON] PTR const unsigned char 
  3716 ;;		 -> STR_15(4), STR_12(4), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  d               1    5[COMMON] PTR unsigned char 
  3719 ;;		 -> dbuf(80), 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    0[COMMON] PTR unsigned char 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3729 ;;      Params:         3       0       0       0       0
  3730 ;;      Locals:         1       0       0       0       0
  3731 ;;      Temps:          2       0       0       0       0
  3732 ;;      Totals:         6       0       0       0       0
  3733 ;;Total ram usage:        6 bytes
  3734 ;; Hardware stack levels used: 2
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_efgtoa
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742     1B70                     _strcpy:	
  3743                           ;psect for function _strcpy
  3744                           
  3745     1B70                     l3126:	
  3746                           ;incstack = 0
  3747                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3748                           
  3749     1B70  0870               	movf	strcpy@dest,w
  3750     1B71  00F5               	movwf	strcpy@d
  3751     1B72                     l3128:
  3752     1B72  0872               	movf	strcpy@src+1,w
  3753     1B73  00F4               	movwf	??_strcpy+1
  3754     1B74  0871               	movf	strcpy@src,w
  3755     1B75  00F3               	movwf	??_strcpy
  3756     1B76  0AF1               	incf	strcpy@src,f
  3757     1B77  1903               	skipnz
  3758     1B78  0AF2               	incf	strcpy@src+1,f
  3759     1B79  0874               	movf	??_strcpy+1,w
  3760     1B7A  1283               	bcf	3,5	;RP0=0, select bank0
  3761     1B7B  1303               	bcf	3,6	;RP1=0, select bank0
  3762     1B7C  00FF               	movwf	btemp+1
  3763     1B7D  0873               	movf	??_strcpy,w
  3764     1B7E  0084               	movwf	4
  3765     1B7F  160A  158A  216E  160A  158A  	fcall	stringtab
  3766     1B84  00FF               	movwf	btemp+1
  3767     1B85  0875               	movf	strcpy@d,w
  3768     1B86  0AF5               	incf	strcpy@d,f
  3769     1B87  0084               	movwf	4
  3770     1B88  087F               	movf	btemp+1,w
  3771     1B89  1783               	bsf	3,7	;select IRP bank2
  3772     1B8A  0080               	movwf	0
  3773     1B8B  0800               	movf	0,w
  3774     1B8C  1D03               	btfss	3,2
  3775     1B8D  2B8F               	goto	u4341
  3776     1B8E  2B90               	goto	u4340
  3777     1B8F                     u4341:
  3778     1B8F  2B72               	goto	l3128
  3779     1B90                     u4340:
  3780     1B90                     l1040:
  3781     1B90  0008               	return
  3782     1B91                     __end_of_strcpy:
  3783                           
  3784                           	psect	text8
  3785     1D62                     __ptext8:	
  3786 ;; *************** function _pad *****************
  3787 ;; Defined at:
  3788 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  3791 ;;		 -> sprintf@f(11), 
  3792 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  3793 ;;		 -> dbuf(80), 
  3794 ;;  p               2   11[BANK0 ] int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  i               2   13[BANK0 ] int 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3806 ;;      Params:         0       5       0       0       0
  3807 ;;      Locals:         0       2       0       0       0
  3808 ;;      Temps:          1       0       0       0       0
  3809 ;;      Totals:         1       7       0       0       0
  3810 ;;Total ram usage:        8 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 3
  3813 ;; This function calls:
  3814 ;;		_fputc
  3815 ;;		_fputs
  3816 ;; This function is called by:
  3817 ;;		_efgtoa
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821     1D62                     _pad:	
  3822                           ;psect for function _pad
  3823                           
  3824     1D62                     l3090:	
  3825                           ;incstack = 0
  3826                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3827                           
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3830     1D62  1283               	bcf	3,5	;RP0=0, select bank0
  3831     1D63  1303               	bcf	3,6	;RP1=0, select bank0
  3832     1D64  1FAC               	btfss	pad@p+1,7
  3833     1D65  2D67               	goto	u4241
  3834     1D66  2D68               	goto	u4240
  3835     1D67                     u4241:
  3836     1D67  2D6A               	goto	l883
  3837     1D68                     u4240:
  3838     1D68                     l3092:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3841     1D68  01AB               	clrf	pad@p
  3842     1D69  01AC               	clrf	pad@p+1
  3843     1D6A                     l883:	
  3844                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  3845                           
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3848     1D6A  01AD               	clrf	pad@i
  3849     1D6B  01AE               	clrf	pad@i+1
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3852     1D6C  2D84               	goto	l3098
  3853     1D6D                     l3094:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3856     1D6D  3020               	movlw	32
  3857     1D6E  00F0               	movwf	fputc@c
  3858     1D6F  3000               	movlw	0
  3859     1D70  00F1               	movwf	fputc@c+1
  3860     1D71  1283               	bcf	3,5	;RP0=0, select bank0
  3861     1D72  1303               	bcf	3,6	;RP1=0, select bank0
  3862     1D73  0828               	movf	pad@fp,w
  3863     1D74  00F2               	movwf	fputc@fp
  3864     1D75  0829               	movf	pad@fp+1,w
  3865     1D76  00F3               	movwf	fputc@fp+1
  3866     1D77  160A  118A  2003  160A  158A  	fcall	_fputc
  3867     1D7C                     l3096:
  3868                           
  3869                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3870     1D7C  3001               	movlw	1
  3871     1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3872     1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  3873     1D7F  07AD               	addwf	pad@i,f
  3874     1D80  1803               	skipnc
  3875     1D81  0AAE               	incf	pad@i+1,f
  3876     1D82  3000               	movlw	0
  3877     1D83  07AE               	addwf	pad@i+1,f
  3878     1D84                     l3098:
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3881     1D84  082E               	movf	pad@i+1,w
  3882     1D85  3A80               	xorlw	128
  3883     1D86  00FD               	movwf	??_pad
  3884     1D87  082C               	movf	pad@p+1,w
  3885     1D88  3A80               	xorlw	128
  3886     1D89  027D               	subwf	??_pad,w
  3887     1D8A  1D03               	skipz
  3888     1D8B  2D8E               	goto	u4255
  3889     1D8C  082B               	movf	pad@p,w
  3890     1D8D  022D               	subwf	pad@i,w
  3891     1D8E                     u4255:
  3892     1D8E  1C03               	skipc
  3893     1D8F  2D91               	goto	u4251
  3894     1D90  2D92               	goto	u4250
  3895     1D91                     u4251:
  3896     1D91  2D6D               	goto	l3094
  3897     1D92                     u4250:
  3898     1D92                     l3100:
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3901     1D92  1283               	bcf	3,5	;RP0=0, select bank0
  3902     1D93  1303               	bcf	3,6	;RP1=0, select bank0
  3903     1D94  082A               	movf	pad@buf,w
  3904     1D95  00A0               	movwf	fputs@s
  3905     1D96  0828               	movf	pad@fp,w
  3906     1D97  00A1               	movwf	fputs@fp
  3907     1D98  0829               	movf	pad@fp+1,w
  3908     1D99  00A2               	movwf	fputs@fp+1
  3909     1D9A  160A  158A  24C2  160A  158A  	fcall	_fputs
  3910     1D9F                     l887:
  3911     1D9F  0008               	return
  3912     1DA0                     __end_of_pad:
  3913                           
  3914                           	psect	text9
  3915     1CC2                     __ptext9:	
  3916 ;; *************** function _fputs *****************
  3917 ;; Defined at:
  3918 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  3921 ;;		 -> dbuf(80), 
  3922 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  3923 ;;		 -> sprintf@f(11), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  i               2    6[BANK0 ] int 
  3926 ;;  c               1    5[BANK0 ] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2    0[BANK0 ] int 
  3929 ;; Registers used:
  3930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3936 ;;      Params:         0       3       0       0       0
  3937 ;;      Locals:         0       3       0       0       0
  3938 ;;      Temps:          0       2       0       0       0
  3939 ;;      Totals:         0       8       0       0       0
  3940 ;;Total ram usage:        8 bytes
  3941 ;; Hardware stack levels used: 1
  3942 ;; Hardware stack levels required when called: 2
  3943 ;; This function calls:
  3944 ;;		_fputc
  3945 ;; This function is called by:
  3946 ;;		_pad
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950     1CC2                     _fputs:	
  3951                           ;psect for function _fputs
  3952                           
  3953     1CC2                     l2646:	
  3954                           ;incstack = 0
  3955                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3956                           
  3957     1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  3958     1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  3959     1CC4  01A6               	clrf	fputs@i
  3960     1CC5  01A7               	clrf	fputs@i+1
  3961     1CC6  2CDF               	goto	l2652
  3962     1CC7                     l2648:
  3963     1CC7  0825               	movf	fputs@c,w
  3964     1CC8  00A3               	movwf	??_fputs
  3965     1CC9  01A4               	clrf	??_fputs+1
  3966     1CCA  0823               	movf	??_fputs,w
  3967     1CCB  00F0               	movwf	fputc@c
  3968     1CCC  0824               	movf	??_fputs+1,w
  3969     1CCD  00F1               	movwf	fputc@c+1
  3970     1CCE  0821               	movf	fputs@fp,w
  3971     1CCF  00F2               	movwf	fputc@fp
  3972     1CD0  0822               	movf	fputs@fp+1,w
  3973     1CD1  00F3               	movwf	fputc@fp+1
  3974     1CD2  160A  118A  2003  160A  158A  	fcall	_fputc
  3975     1CD7                     l2650:
  3976     1CD7  3001               	movlw	1
  3977     1CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3978     1CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3979     1CDA  07A6               	addwf	fputs@i,f
  3980     1CDB  1803               	skipnc
  3981     1CDC  0AA7               	incf	fputs@i+1,f
  3982     1CDD  3000               	movlw	0
  3983     1CDE  07A7               	addwf	fputs@i+1,f
  3984     1CDF                     l2652:
  3985     1CDF  0826               	movf	fputs@i,w
  3986     1CE0  0720               	addwf	fputs@s,w
  3987     1CE1  00A3               	movwf	??_fputs
  3988     1CE2  0823               	movf	??_fputs,w
  3989     1CE3  0084               	movwf	4
  3990     1CE4  1783               	bsf	3,7	;select IRP bank2
  3991     1CE5  0800               	movf	0,w
  3992     1CE6  00A5               	movwf	fputs@c
  3993     1CE7  0825               	movf	fputs@c,w
  3994     1CE8  1D03               	btfss	3,2
  3995     1CE9  2CEB               	goto	u3161
  3996     1CEA  2CEC               	goto	u3160
  3997     1CEB                     u3161:
  3998     1CEB  2CC7               	goto	l2648
  3999     1CEC                     u3160:
  4000     1CEC                     l1031:
  4001     1CEC  0008               	return
  4002     1CED                     __end_of_fputs:
  4003                           
  4004                           	psect	text10
  4005     1003                     __ptext10:	
  4006 ;; *************** function _fputc *****************
  4007 ;; Defined at:
  4008 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  c               2    0[COMMON] int 
  4011 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  4012 ;;		 -> sprintf@f(11), 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  2    0[COMMON] int 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         4       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0
  4026 ;;      Temps:          9       0       0       0       0
  4027 ;;      Totals:        13       0       0       0       0
  4028 ;;Total ram usage:       13 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 1
  4031 ;; This function calls:
  4032 ;;		_putch
  4033 ;; This function is called by:
  4034 ;;		_pad
  4035 ;;		_vfpfcnvrt
  4036 ;;		_fputs
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040     1003                     _fputc:	
  4041                           ;psect for function _fputc
  4042                           
  4043     1003                     l2416:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4046                           
  4047     1003  0872               	movf	fputc@fp,w
  4048     1004  0473               	iorwf	fputc@fp+1,w
  4049     1005  1903               	btfsc	3,2
  4050     1006  2808               	goto	u2601
  4051     1007  2809               	goto	u2600
  4052     1008                     u2601:
  4053     1008  280F               	goto	l2420
  4054     1009                     u2600:
  4055     1009                     l2418:
  4056     1009  0872               	movf	fputc@fp,w
  4057     100A  0473               	iorwf	fputc@fp+1,w
  4058     100B  1D03               	btfss	3,2
  4059     100C  280E               	goto	u2611
  4060     100D  280F               	goto	u2610
  4061     100E                     u2611:
  4062     100E  2816               	goto	l2422
  4063     100F                     u2610:
  4064     100F                     l2420:
  4065     100F  0870               	movf	fputc@c,w
  4066     1010  120A  118A  2007  160A  118A  	fcall	_putch
  4067     1015  289C               	goto	l1023
  4068     1016                     l2422:
  4069     1016  0872               	movf	fputc@fp,w
  4070     1017  3E09               	addlw	9
  4071     1018  00F4               	movwf	??_fputc
  4072     1019  0873               	movf	fputc@fp+1,w
  4073     101A  1803               	skipnc
  4074     101B  3E01               	addlw	1
  4075     101C  3E00               	addlw	0
  4076     101D  00F5               	movwf	??_fputc+1
  4077     101E  0874               	movf	??_fputc,w
  4078     101F  0084               	movwf	4
  4079     1020  1783               	bsf	3,7
  4080     1021  1C75               	btfss	??_fputc+1,0
  4081     1022  1383               	bcf	3,7
  4082     1023  0800               	movf	0,w
  4083     1024  00F6               	movwf	??_fputc+2
  4084     1025  0A84               	incf	4,f
  4085     1026  0800               	movf	0,w
  4086     1027  00F7               	movwf	??_fputc+3
  4087     1028  0876               	movf	??_fputc+2,w
  4088     1029  0477               	iorwf	??_fputc+3,w
  4089     102A  1903               	btfsc	3,2
  4090     102B  282D               	goto	u2621
  4091     102C  282E               	goto	u2620
  4092     102D                     u2621:
  4093     102D  2860               	goto	l2426
  4094     102E                     u2620:
  4095     102E                     l2424:
  4096     102E  0872               	movf	fputc@fp,w
  4097     102F  3E09               	addlw	9
  4098     1030  00F4               	movwf	??_fputc
  4099     1031  0873               	movf	fputc@fp+1,w
  4100     1032  1803               	skipnc
  4101     1033  3E01               	addlw	1
  4102     1034  3E00               	addlw	0
  4103     1035  00F5               	movwf	??_fputc+1
  4104     1036  0874               	movf	??_fputc,w
  4105     1037  0084               	movwf	4
  4106     1038  1783               	bsf	3,7
  4107     1039  1C75               	btfss	??_fputc+1,0
  4108     103A  1383               	bcf	3,7
  4109     103B  0800               	movf	0,w
  4110     103C  00F6               	movwf	??_fputc+2
  4111     103D  0A84               	incf	4,f
  4112     103E  0800               	movf	0,w
  4113     103F  00F7               	movwf	??_fputc+3
  4114     1040  0872               	movf	fputc@fp,w
  4115     1041  3E02               	addlw	2
  4116     1042  00F8               	movwf	??_fputc+4
  4117     1043  0873               	movf	fputc@fp+1,w
  4118     1044  1803               	skipnc
  4119     1045  3E01               	addlw	1
  4120     1046  3E00               	addlw	0
  4121     1047  00F9               	movwf	??_fputc+5
  4122     1048  0878               	movf	??_fputc+4,w
  4123     1049  0084               	movwf	4
  4124     104A  1783               	bsf	3,7
  4125     104B  1C79               	btfss	??_fputc+5,0
  4126     104C  1383               	bcf	3,7
  4127     104D  0800               	movf	0,w
  4128     104E  00FA               	movwf	??_fputc+6
  4129     104F  0A84               	incf	4,f
  4130     1050  0800               	movf	0,w
  4131     1051  00FB               	movwf	??_fputc+7
  4132     1052  087B               	movf	??_fputc+7,w
  4133     1053  3A80               	xorlw	128
  4134     1054  00FC               	movwf	??_fputc+8
  4135     1055  0877               	movf	??_fputc+3,w
  4136     1056  3A80               	xorlw	128
  4137     1057  027C               	subwf	??_fputc+8,w
  4138     1058  1D03               	skipz
  4139     1059  285C               	goto	u2635
  4140     105A  0876               	movf	??_fputc+2,w
  4141     105B  027A               	subwf	??_fputc+6,w
  4142     105C                     u2635:
  4143     105C  1803               	skipnc
  4144     105D  285F               	goto	u2631
  4145     105E  2860               	goto	u2630
  4146     105F                     u2631:
  4147     105F  289C               	goto	l1023
  4148     1060                     u2630:
  4149     1060                     l2426:
  4150     1060  0872               	movf	fputc@fp,w
  4151     1061  0084               	movwf	4
  4152     1062  1783               	bsf	3,7
  4153     1063  1C73               	btfss	fputc@fp+1,0
  4154     1064  1383               	bcf	3,7
  4155     1065  0800               	movf	0,w
  4156     1066  00F4               	movwf	??_fputc
  4157     1067  0A84               	incf	4,f
  4158     1068  0800               	movf	0,w
  4159     1069  00F5               	movwf	??_fputc+1
  4160     106A  0872               	movf	fputc@fp,w
  4161     106B  3E02               	addlw	2
  4162     106C  00F6               	movwf	??_fputc+2
  4163     106D  0873               	movf	fputc@fp+1,w
  4164     106E  1803               	skipnc
  4165     106F  3E01               	addlw	1
  4166     1070  3E00               	addlw	0
  4167     1071  00F7               	movwf	??_fputc+3
  4168     1072  0876               	movf	??_fputc+2,w
  4169     1073  0084               	movwf	4
  4170     1074  1783               	bsf	3,7
  4171     1075  1C77               	btfss	??_fputc+3,0
  4172     1076  1383               	bcf	3,7
  4173     1077  0800               	movf	0,w
  4174     1078  0774               	addwf	??_fputc,w
  4175     1079  00F9               	movwf	??_fputc+5
  4176     107A  0875               	movf	??_fputc+1,w
  4177     107B  00F8               	movwf	??_fputc+4
  4178     107C  1803               	skipnc
  4179     107D  0AF8               	incf	??_fputc+4,f
  4180     107E  1F80               	btfss	0,7
  4181     107F  2881               	goto	u2640
  4182     1080  03F8               	decf	??_fputc+4,f
  4183     1081                     u2640:
  4184     1081  0878               	movf	??_fputc+4,w
  4185     1082  00FA               	movwf	??_fputc+6
  4186     1083  0879               	movf	??_fputc+5,w
  4187     1084  0084               	movwf	4
  4188     1085  1783               	bsf	3,7
  4189     1086  1C7A               	btfss	??_fputc+6,0
  4190     1087  1383               	bcf	3,7
  4191     1088  0870               	movf	fputc@c,w
  4192     1089  0080               	movwf	0
  4193     108A  0872               	movf	fputc@fp,w
  4194     108B  3E02               	addlw	2
  4195     108C  00F4               	movwf	??_fputc
  4196     108D  0873               	movf	fputc@fp+1,w
  4197     108E  1803               	skipnc
  4198     108F  3E01               	addlw	1
  4199     1090  3E00               	addlw	0
  4200     1091  00F5               	movwf	??_fputc+1
  4201     1092  0874               	movf	??_fputc,w
  4202     1093  0084               	movwf	4
  4203     1094  1783               	bsf	3,7
  4204     1095  1C75               	btfss	??_fputc+1,0
  4205     1096  1383               	bcf	3,7
  4206     1097  3001               	movlw	1
  4207     1098  0780               	addwf	0,f
  4208     1099  0A84               	incf	4,f
  4209     109A  1803               	skipnc
  4210     109B  0A80               	incf	0,f
  4211     109C                     l1023:
  4212     109C  0008               	return
  4213     109D                     __end_of_fputc:
  4214                           
  4215                           	psect	text11
  4216     0007                     __ptext11:	
  4217 ;; *************** function _putch *****************
  4218 ;; Defined at:
  4219 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  c               1    wreg     unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  c               1    0[COMMON] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0
  4236 ;;      Totals:         0       0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_fputc
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246     0007                     _putch:	
  4247                           ;psect for function _putch
  4248                           
  4249     0007                     l1034:	
  4250                           ;incstack = 0
  4251                           ; Regs used in _putch: [wreg]
  4252                           
  4253     0007  0008               	return
  4254     0008                     __end_of_putch:
  4255                           
  4256                           	psect	text12
  4257     1B4F                     __ptext12:	
  4258 ;; *************** function _memcpy *****************
  4259 ;; Defined at:
  4260 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  d1              1    0[COMMON] PTR void 
  4263 ;;		 -> dbuf(80), 
  4264 ;;  s1              1    1[COMMON] PTR const void 
  4265 ;;		 -> dbuf(80), 
  4266 ;;  n               2    2[COMMON] unsigned int 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  s               1    6[COMMON] PTR const unsigned char 
  4269 ;;		 -> dbuf(80), 
  4270 ;;  d               1    5[COMMON] PTR unsigned char 
  4271 ;;		 -> dbuf(80), 
  4272 ;;  tmp             1    4[COMMON] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    0[COMMON] PTR void 
  4275 ;; Registers used:
  4276 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         4       0       0       0       0
  4283 ;;      Locals:         3       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0
  4285 ;;      Totals:         7       0       0       0       0
  4286 ;;Total ram usage:        7 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_efgtoa
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295     1B4F                     _memcpy:	
  4296                           ;psect for function _memcpy
  4297                           
  4298     1B4F                     l3168:	
  4299                           ;incstack = 0
  4300                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  4301                           
  4302     1B4F  0871               	movf	memcpy@s1,w
  4303     1B50  00F6               	movwf	memcpy@s
  4304     1B51  0870               	movf	memcpy@d1,w
  4305     1B52  00F5               	movwf	memcpy@d
  4306     1B53  2B61               	goto	l1008
  4307     1B54                     l3170:
  4308     1B54  0876               	movf	memcpy@s,w
  4309     1B55  0084               	movwf	4
  4310     1B56  1783               	bsf	3,7	;select IRP bank2
  4311     1B57  0800               	movf	0,w
  4312     1B58  00F4               	movwf	memcpy@tmp
  4313     1B59                     l3172:
  4314     1B59  3001               	movlw	1
  4315     1B5A  07F6               	addwf	memcpy@s,f
  4316     1B5B                     l3174:
  4317     1B5B  0875               	movf	memcpy@d,w
  4318     1B5C  0084               	movwf	4
  4319     1B5D  0874               	movf	memcpy@tmp,w
  4320     1B5E  0080               	movwf	0
  4321     1B5F  3001               	movlw	1
  4322     1B60  07F5               	addwf	memcpy@d,f
  4323     1B61                     l1008:
  4324     1B61  3001               	movlw	1
  4325     1B62  02F2               	subwf	memcpy@n,f
  4326     1B63  3000               	movlw	0
  4327     1B64  1C03               	skipc
  4328     1B65  03F3               	decf	memcpy@n+1,f
  4329     1B66  02F3               	subwf	memcpy@n+1,f
  4330     1B67  0A72               	incf	memcpy@n,w
  4331     1B68  1D03               	skipz
  4332     1B69  2B6E               	goto	u4481
  4333     1B6A  0A73               	incf	memcpy@n+1,w
  4334     1B6B  1D03               	btfss	3,2
  4335     1B6C  2B6E               	goto	u4481
  4336     1B6D  2B6F               	goto	u4480
  4337     1B6E                     u4481:
  4338     1B6E  2B54               	goto	l3170
  4339     1B6F                     u4480:
  4340     1B6F                     l1011:
  4341     1B6F  0008               	return
  4342     1B70                     __end_of_memcpy:
  4343                           
  4344                           	psect	text13
  4345     1AA5                     __ptext13:	
  4346 ;; *************** function _labs *****************
  4347 ;; Defined at:
  4348 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  a               4    0[COMMON] long 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  4    0[COMMON] long 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4362 ;;      Params:         4       0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0
  4364 ;;      Temps:          0       0       0       0       0
  4365 ;;      Totals:         4       0       0       0       0
  4366 ;;Total ram usage:        4 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_efgtoa
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375     1AA5                     _labs:	
  4376                           ;psect for function _labs
  4377                           
  4378     1AA5                     l3130:	
  4379                           ;incstack = 0
  4380                           ; Regs used in _labs: [wreg+status,2+status,0]
  4381                           
  4382     1AA5  1BF3               	btfsc	labs@a+3,7
  4383     1AA6  2AA8               	goto	u4351
  4384     1AA7  2AA9               	goto	u4350
  4385     1AA8                     u4351:
  4386     1AA8  2AAA               	goto	l3134
  4387     1AA9                     u4350:
  4388     1AA9                     l3132:
  4389     1AA9  2AB9               	goto	l1005
  4390     1AAA                     l3134:
  4391     1AAA  0970               	comf	labs@a,w
  4392     1AAB  00F0               	movwf	?_labs
  4393     1AAC  0971               	comf	labs@a+1,w
  4394     1AAD  00F1               	movwf	?_labs+1
  4395     1AAE  0972               	comf	labs@a+2,w
  4396     1AAF  00F2               	movwf	?_labs+2
  4397     1AB0  0973               	comf	labs@a+3,w
  4398     1AB1  00F3               	movwf	?_labs+3
  4399     1AB2  0AF0               	incf	?_labs,f
  4400     1AB3  1903               	skipnz
  4401     1AB4  0AF1               	incf	?_labs+1,f
  4402     1AB5  1903               	skipnz
  4403     1AB6  0AF2               	incf	?_labs+2,f
  4404     1AB7  1903               	skipnz
  4405     1AB8  0AF3               	incf	?_labs+3,f
  4406     1AB9                     l1005:
  4407     1AB9  0008               	return
  4408     1ABA                     __end_of_labs:
  4409                           
  4410                           	psect	text14
  4411     12D6                     __ptext14:	
  4412 ;; *************** function _floorf *****************
  4413 ;; Defined at:
  4414 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  x               4   13[BANK0 ] float 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  u               4   29[BANK0 ] struct .
  4419 ;;  m               4   23[BANK0 ] unsigned long 
  4420 ;;  e               2   27[BANK0 ] int 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  4   13[BANK0 ] float 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0, btemp+1
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       4       0       0       0
  4431 ;;      Locals:         0      10       0       0       0
  4432 ;;      Temps:          0       6       0       0       0
  4433 ;;      Totals:         0      20       0       0       0
  4434 ;;Total ram usage:       20 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_efgtoa
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443     12D6                     _floorf:	
  4444                           ;psect for function _floorf
  4445                           
  4446     12D6                     l3138:	
  4447                           ;incstack = 0
  4448                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  4449                           
  4450     12D6  1683               	bsf	3,5	;RP0=1, select bank3
  4451     12D7  1703               	bsf	3,6	;RP1=1, select bank3
  4452     12D8  0813               	movf	(floorf@F521+3)^(0+384),w
  4453     12D9  1283               	bcf	3,5	;RP0=0, select bank0
  4454     12DA  1303               	bcf	3,6	;RP1=0, select bank0
  4455     12DB  00C0               	movwf	floorf@u+3
  4456     12DC  1683               	bsf	3,5	;RP0=1, select bank3
  4457     12DD  1703               	bsf	3,6	;RP1=1, select bank3
  4458     12DE  0812               	movf	(floorf@F521+2)^(0+384),w
  4459     12DF  1283               	bcf	3,5	;RP0=0, select bank0
  4460     12E0  1303               	bcf	3,6	;RP1=0, select bank0
  4461     12E1  00BF               	movwf	floorf@u+2
  4462     12E2  1683               	bsf	3,5	;RP0=1, select bank3
  4463     12E3  1703               	bsf	3,6	;RP1=1, select bank3
  4464     12E4  0811               	movf	(floorf@F521+1)^(0+384),w
  4465     12E5  1283               	bcf	3,5	;RP0=0, select bank0
  4466     12E6  1303               	bcf	3,6	;RP1=0, select bank0
  4467     12E7  00BE               	movwf	floorf@u+1
  4468     12E8  1683               	bsf	3,5	;RP0=1, select bank3
  4469     12E9  1703               	bsf	3,6	;RP1=1, select bank3
  4470     12EA  0810               	movf	floorf@F521^(0+384),w
  4471     12EB  1283               	bcf	3,5	;RP0=0, select bank0
  4472     12EC  1303               	bcf	3,6	;RP1=0, select bank0
  4473     12ED  00BD               	movwf	floorf@u
  4474     12EE  0830               	movf	floorf@x+3,w
  4475     12EF  00C0               	movwf	floorf@u+3
  4476     12F0  082F               	movf	floorf@x+2,w
  4477     12F1  00BF               	movwf	floorf@u+2
  4478     12F2  082E               	movf	floorf@x+1,w
  4479     12F3  00BE               	movwf	floorf@u+1
  4480     12F4  082D               	movf	floorf@x,w
  4481     12F5  00BD               	movwf	floorf@u
  4482     12F6                     l3140:
  4483     12F6  083D               	movf	floorf@u,w
  4484     12F7  00B1               	movwf	??_floorf
  4485     12F8  083E               	movf	floorf@u+1,w
  4486     12F9  00B2               	movwf	??_floorf+1
  4487     12FA  083F               	movf	floorf@u+2,w
  4488     12FB  00B3               	movwf	??_floorf+2
  4489     12FC  0840               	movf	floorf@u+3,w
  4490     12FD  00B4               	movwf	??_floorf+3
  4491     12FE  3017               	movlw	23
  4492     12FF                     u4365:
  4493     12FF  1003               	clrc
  4494     1300  0CB4               	rrf	??_floorf+3,f
  4495     1301  0CB3               	rrf	??_floorf+2,f
  4496     1302  0CB2               	rrf	??_floorf+1,f
  4497     1303  0CB1               	rrf	??_floorf,f
  4498     1304                     u4360:
  4499     1304  3EFF               	addlw	-1
  4500     1305  1D03               	skipz
  4501     1306  2AFF               	goto	u4365
  4502     1307  30FF               	movlw	255
  4503     1308  0531               	andwf	??_floorf,w
  4504     1309  00B5               	movwf	??_floorf+4
  4505     130A  3000               	movlw	0
  4506     130B  0532               	andwf	??_floorf+1,w
  4507     130C  00B6               	movwf	??_floorf+5
  4508     130D  0835               	movf	??_floorf+4,w
  4509     130E  3E81               	addlw	129
  4510     130F  00BB               	movwf	floorf@e
  4511     1310  0836               	movf	??_floorf+5,w
  4512     1311  1803               	skipnc
  4513     1312  3E01               	addlw	1
  4514     1313  3EFF               	addlw	255
  4515     1314  00BC               	movwf	floorf@e+1
  4516     1315                     l3142:
  4517     1315  083C               	movf	floorf@e+1,w
  4518     1316  3A80               	xorlw	128
  4519     1317  00FF               	movwf	btemp+1
  4520     1318  3080               	movlw	128
  4521     1319  027F               	subwf	btemp+1,w
  4522     131A  1D03               	skipz
  4523     131B  2B1E               	goto	u4375
  4524     131C  3017               	movlw	23
  4525     131D  023B               	subwf	floorf@e,w
  4526     131E                     u4375:
  4527     131E  1C03               	skipc
  4528     131F  2B21               	goto	u4371
  4529     1320  2B22               	goto	u4370
  4530     1321                     u4371:
  4531     1321  2B23               	goto	l990
  4532     1322                     u4370:
  4533     1322                     l3144:
  4534     1322  2BE4               	goto	l991
  4535     1323                     l990:
  4536     1323  1283               	bcf	3,5	;RP0=0, select bank0
  4537     1324  1303               	bcf	3,6	;RP1=0, select bank0
  4538     1325  1BBC               	btfsc	floorf@e+1,7
  4539     1326  2B28               	goto	u4381
  4540     1327  2B29               	goto	u4380
  4541     1328                     u4381:
  4542     1328  2B99               	goto	l3158
  4543     1329                     u4380:
  4544     1329                     l3146:
  4545     1329  0A3B               	incf	floorf@e,w
  4546     132A  00FF               	movwf	btemp+1
  4547     132B  30FF               	movlw	255
  4548     132C  00B1               	movwf	??_floorf
  4549     132D  30FF               	movlw	255
  4550     132E  00B2               	movwf	??_floorf+1
  4551     132F  307F               	movlw	127
  4552     1330  00B3               	movwf	??_floorf+2
  4553     1331  3000               	movlw	0
  4554     1332  00B4               	movwf	??_floorf+3
  4555     1333  2B39               	goto	u4390
  4556     1334                     u4395:
  4557     1334  0D34               	rlf	??_floorf+3,w
  4558     1335  0CB4               	rrf	??_floorf+3,f
  4559     1336  0CB3               	rrf	??_floorf+2,f
  4560     1337  0CB2               	rrf	??_floorf+1,f
  4561     1338  0CB1               	rrf	??_floorf,f
  4562     1339                     u4390:
  4563     1339  0BFF               	decfsz	btemp+1,f
  4564     133A  2B34               	goto	u4395
  4565     133B  0834               	movf	??_floorf+3,w
  4566     133C  00BA               	movwf	floorf@m+3
  4567     133D  0833               	movf	??_floorf+2,w
  4568     133E  00B9               	movwf	floorf@m+2
  4569     133F  0832               	movf	??_floorf+1,w
  4570     1340  00B8               	movwf	floorf@m+1
  4571     1341  0831               	movf	??_floorf,w
  4572     1342  00B7               	movwf	floorf@m
  4573     1343                     l3148:
  4574     1343  0837               	movf	floorf@m,w
  4575     1344  053D               	andwf	floorf@u,w
  4576     1345  00B1               	movwf	??_floorf
  4577     1346  0838               	movf	floorf@m+1,w
  4578     1347  053E               	andwf	floorf@u+1,w
  4579     1348  00B2               	movwf	??_floorf+1
  4580     1349  0839               	movf	floorf@m+2,w
  4581     134A  053F               	andwf	floorf@u+2,w
  4582     134B  00B3               	movwf	??_floorf+2
  4583     134C  083A               	movf	floorf@m+3,w
  4584     134D  0540               	andwf	floorf@u+3,w
  4585     134E  00B4               	movwf	??_floorf+3
  4586     134F  0834               	movf	??_floorf+3,w
  4587     1350  0433               	iorwf	??_floorf+2,w
  4588     1351  0432               	iorwf	??_floorf+1,w
  4589     1352  0431               	iorwf	??_floorf,w
  4590     1353  1D03               	skipz
  4591     1354  2B56               	goto	u4401
  4592     1355  2B57               	goto	u4400
  4593     1356                     u4401:
  4594     1356  2B58               	goto	l3152
  4595     1357                     u4400:
  4596     1357  2B22               	goto	l3144
  4597     1358                     l3152:
  4598     1358  083D               	movf	floorf@u,w
  4599     1359  00B1               	movwf	??_floorf
  4600     135A  083E               	movf	floorf@u+1,w
  4601     135B  00B2               	movwf	??_floorf+1
  4602     135C  083F               	movf	floorf@u+2,w
  4603     135D  00B3               	movwf	??_floorf+2
  4604     135E  0840               	movf	floorf@u+3,w
  4605     135F  00B4               	movwf	??_floorf+3
  4606     1360  301F               	movlw	31
  4607     1361                     u4415:
  4608     1361  1003               	clrc
  4609     1362  0CB4               	rrf	??_floorf+3,f
  4610     1363  0CB3               	rrf	??_floorf+2,f
  4611     1364  0CB2               	rrf	??_floorf+1,f
  4612     1365  0CB1               	rrf	??_floorf,f
  4613     1366                     u4410:
  4614     1366  3EFF               	addlw	-1
  4615     1367  1D03               	skipz
  4616     1368  2B61               	goto	u4415
  4617     1369  0834               	movf	??_floorf+3,w
  4618     136A  0433               	iorwf	??_floorf+2,w
  4619     136B  0432               	iorwf	??_floorf+1,w
  4620     136C  0431               	iorwf	??_floorf,w
  4621     136D  1903               	skipnz
  4622     136E  2B70               	goto	u4421
  4623     136F  2B71               	goto	u4420
  4624     1370                     u4421:
  4625     1370  2B88               	goto	l3156
  4626     1371                     u4420:
  4627     1371                     l3154:
  4628     1371  0837               	movf	floorf@m,w
  4629     1372  07BD               	addwf	floorf@u,f
  4630     1373  0838               	movf	floorf@m+1,w
  4631     1374  1103               	clrz
  4632     1375  1803               	skipnc
  4633     1376  3E01               	addlw	1
  4634     1377  1903               	skipnz
  4635     1378  2B7A               	goto	u4431
  4636     1379  07BE               	addwf	floorf@u+1,f
  4637     137A                     u4431:
  4638     137A  0839               	movf	floorf@m+2,w
  4639     137B  1103               	clrz
  4640     137C  1803               	skipnc
  4641     137D  3E01               	addlw	1
  4642     137E  1903               	skipnz
  4643     137F  2B81               	goto	u4432
  4644     1380  07BF               	addwf	floorf@u+2,f
  4645     1381                     u4432:
  4646     1381  083A               	movf	floorf@m+3,w
  4647     1382  1103               	clrz
  4648     1383  1803               	skipnc
  4649     1384  3E01               	addlw	1
  4650     1385  1903               	skipnz
  4651     1386  2B88               	goto	u4433
  4652     1387  07C0               	addwf	floorf@u+3,f
  4653     1388                     u4433:
  4654     1388                     l3156:
  4655     1388  0937               	comf	floorf@m,w
  4656     1389  00B1               	movwf	??_floorf
  4657     138A  0938               	comf	floorf@m+1,w
  4658     138B  00B2               	movwf	??_floorf+1
  4659     138C  0939               	comf	floorf@m+2,w
  4660     138D  00B3               	movwf	??_floorf+2
  4661     138E  093A               	comf	floorf@m+3,w
  4662     138F  00B4               	movwf	??_floorf+3
  4663     1390  0831               	movf	??_floorf,w
  4664     1391  05BD               	andwf	floorf@u,f
  4665     1392  0832               	movf	??_floorf+1,w
  4666     1393  05BE               	andwf	floorf@u+1,f
  4667     1394  0833               	movf	??_floorf+2,w
  4668     1395  05BF               	andwf	floorf@u+2,f
  4669     1396  0834               	movf	??_floorf+3,w
  4670     1397  05C0               	andwf	floorf@u+3,f
  4671     1398  2BDC               	goto	l995
  4672     1399                     l3158:
  4673     1399  083D               	movf	floorf@u,w
  4674     139A  00B1               	movwf	??_floorf
  4675     139B  083E               	movf	floorf@u+1,w
  4676     139C  00B2               	movwf	??_floorf+1
  4677     139D  083F               	movf	floorf@u+2,w
  4678     139E  00B3               	movwf	??_floorf+2
  4679     139F  0840               	movf	floorf@u+3,w
  4680     13A0  00B4               	movwf	??_floorf+3
  4681     13A1  301F               	movlw	31
  4682     13A2                     u4445:
  4683     13A2  1003               	clrc
  4684     13A3  0CB4               	rrf	??_floorf+3,f
  4685     13A4  0CB3               	rrf	??_floorf+2,f
  4686     13A5  0CB2               	rrf	??_floorf+1,f
  4687     13A6  0CB1               	rrf	??_floorf,f
  4688     13A7                     u4440:
  4689     13A7  3EFF               	addlw	-1
  4690     13A8  1D03               	skipz
  4691     13A9  2BA2               	goto	u4445
  4692     13AA  0834               	movf	??_floorf+3,w
  4693     13AB  0433               	iorwf	??_floorf+2,w
  4694     13AC  0432               	iorwf	??_floorf+1,w
  4695     13AD  0431               	iorwf	??_floorf,w
  4696     13AE  1D03               	skipz
  4697     13AF  2BB1               	goto	u4451
  4698     13B0  2BB2               	goto	u4450
  4699     13B1                     u4451:
  4700     13B1  2BBB               	goto	l3162
  4701     13B2                     u4450:
  4702     13B2                     l3160:
  4703     13B2  3000               	movlw	0
  4704     13B3  00C0               	movwf	floorf@u+3
  4705     13B4  3000               	movlw	0
  4706     13B5  00BF               	movwf	floorf@u+2
  4707     13B6  3000               	movlw	0
  4708     13B7  00BE               	movwf	floorf@u+1
  4709     13B8  3000               	movlw	0
  4710     13B9  00BD               	movwf	floorf@u
  4711     13BA  2BDC               	goto	l995
  4712     13BB                     l3162:
  4713     13BB  083D               	movf	floorf@u,w
  4714     13BC  00B1               	movwf	??_floorf
  4715     13BD  083E               	movf	floorf@u+1,w
  4716     13BE  00B2               	movwf	??_floorf+1
  4717     13BF  083F               	movf	floorf@u+2,w
  4718     13C0  00B3               	movwf	??_floorf+2
  4719     13C1  0840               	movf	floorf@u+3,w
  4720     13C2  00B4               	movwf	??_floorf+3
  4721     13C3  3001               	movlw	1
  4722     13C4                     u4465:
  4723     13C4  1003               	clrc
  4724     13C5  0DB1               	rlf	??_floorf,f
  4725     13C6  0DB2               	rlf	??_floorf+1,f
  4726     13C7  0DB3               	rlf	??_floorf+2,f
  4727     13C8  0DB4               	rlf	??_floorf+3,f
  4728     13C9                     u4460:
  4729     13C9  3EFF               	addlw	-1
  4730     13CA  1D03               	skipz
  4731     13CB  2BC4               	goto	u4465
  4732     13CC  0834               	movf	??_floorf+3,w
  4733     13CD  0433               	iorwf	??_floorf+2,w
  4734     13CE  0432               	iorwf	??_floorf+1,w
  4735     13CF  0431               	iorwf	??_floorf,w
  4736     13D0  1903               	skipnz
  4737     13D1  2BD3               	goto	u4471
  4738     13D2  2BD4               	goto	u4470
  4739     13D3                     u4471:
  4740     13D3  2BDC               	goto	l995
  4741     13D4                     u4470:
  4742     13D4                     l3164:
  4743     13D4  30BF               	movlw	191
  4744     13D5  00C0               	movwf	floorf@u+3
  4745     13D6  3080               	movlw	128
  4746     13D7  00BF               	movwf	floorf@u+2
  4747     13D8  3000               	movlw	0
  4748     13D9  00BE               	movwf	floorf@u+1
  4749     13DA  3000               	movlw	0
  4750     13DB  00BD               	movwf	floorf@u
  4751     13DC                     l995:
  4752     13DC  0840               	movf	floorf@u+3,w
  4753     13DD  00B0               	movwf	?_floorf+3
  4754     13DE  083F               	movf	floorf@u+2,w
  4755     13DF  00AF               	movwf	?_floorf+2
  4756     13E0  083E               	movf	floorf@u+1,w
  4757     13E1  00AE               	movwf	?_floorf+1
  4758     13E2  083D               	movf	floorf@u,w
  4759     13E3  00AD               	movwf	?_floorf
  4760     13E4                     l991:
  4761     13E4  0008               	return
  4762     13E5                     __end_of_floorf:
  4763                           
  4764                           	psect	text15
  4765     1ECF                     __ptext15:	
  4766 ;; *************** function ___fpclassifyf *****************
  4767 ;; Defined at:
  4768 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  x               4    0[COMMON] float 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  u               4    2[BANK0 ] struct .
  4773 ;;  e               2    0[BANK0 ] int 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  2    0[COMMON] int 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4783 ;;      Params:         4       0       0       0       0
  4784 ;;      Locals:         0       6       0       0       0
  4785 ;;      Temps:          6       0       0       0       0
  4786 ;;      Totals:        10       6       0       0       0
  4787 ;;Total ram usage:       16 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_efgtoa
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796     1ECF                     ___fpclassifyf:	
  4797                           ;psect for function ___fpclassifyf
  4798                           
  4799     1ECF                     l3102:	
  4800                           ;incstack = 0
  4801                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  4802                           
  4803     1ECF  1683               	bsf	3,5	;RP0=1, select bank3
  4804     1ED0  1703               	bsf	3,6	;RP1=1, select bank3
  4805     1ED1  0817               	movf	(___fpclassifyf@F465+3)^(0+384),w
  4806     1ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4807     1ED3  1303               	bcf	3,6	;RP1=0, select bank0
  4808     1ED4  00A5               	movwf	___fpclassifyf@u+3
  4809     1ED5  1683               	bsf	3,5	;RP0=1, select bank3
  4810     1ED6  1703               	bsf	3,6	;RP1=1, select bank3
  4811     1ED7  0816               	movf	(___fpclassifyf@F465+2)^(0+384),w
  4812     1ED8  1283               	bcf	3,5	;RP0=0, select bank0
  4813     1ED9  1303               	bcf	3,6	;RP1=0, select bank0
  4814     1EDA  00A4               	movwf	___fpclassifyf@u+2
  4815     1EDB  1683               	bsf	3,5	;RP0=1, select bank3
  4816     1EDC  1703               	bsf	3,6	;RP1=1, select bank3
  4817     1EDD  0815               	movf	(___fpclassifyf@F465+1)^(0+384),w
  4818     1EDE  1283               	bcf	3,5	;RP0=0, select bank0
  4819     1EDF  1303               	bcf	3,6	;RP1=0, select bank0
  4820     1EE0  00A3               	movwf	___fpclassifyf@u+1
  4821     1EE1  1683               	bsf	3,5	;RP0=1, select bank3
  4822     1EE2  1703               	bsf	3,6	;RP1=1, select bank3
  4823     1EE3  0814               	movf	___fpclassifyf@F465^(0+384),w
  4824     1EE4  1283               	bcf	3,5	;RP0=0, select bank0
  4825     1EE5  1303               	bcf	3,6	;RP1=0, select bank0
  4826     1EE6  00A2               	movwf	___fpclassifyf@u
  4827     1EE7  0873               	movf	___fpclassifyf@x+3,w
  4828     1EE8  00A5               	movwf	___fpclassifyf@u+3
  4829     1EE9  0872               	movf	___fpclassifyf@x+2,w
  4830     1EEA  00A4               	movwf	___fpclassifyf@u+2
  4831     1EEB  0871               	movf	___fpclassifyf@x+1,w
  4832     1EEC  00A3               	movwf	___fpclassifyf@u+1
  4833     1EED  0870               	movf	___fpclassifyf@x,w
  4834     1EEE  00A2               	movwf	___fpclassifyf@u
  4835     1EEF                     l3104:
  4836     1EEF  0822               	movf	___fpclassifyf@u,w
  4837     1EF0  00F4               	movwf	??___fpclassifyf
  4838     1EF1  0823               	movf	___fpclassifyf@u+1,w
  4839     1EF2  00F5               	movwf	??___fpclassifyf+1
  4840     1EF3  0824               	movf	___fpclassifyf@u+2,w
  4841     1EF4  00F6               	movwf	??___fpclassifyf+2
  4842     1EF5  0825               	movf	___fpclassifyf@u+3,w
  4843     1EF6  00F7               	movwf	??___fpclassifyf+3
  4844     1EF7  3017               	movlw	23
  4845     1EF8                     u4265:
  4846     1EF8  1003               	clrc
  4847     1EF9  0CF7               	rrf	??___fpclassifyf+3,f
  4848     1EFA  0CF6               	rrf	??___fpclassifyf+2,f
  4849     1EFB  0CF5               	rrf	??___fpclassifyf+1,f
  4850     1EFC  0CF4               	rrf	??___fpclassifyf,f
  4851     1EFD                     u4260:
  4852     1EFD  3EFF               	addlw	-1
  4853     1EFE  1D03               	skipz
  4854     1EFF  2EF8               	goto	u4265
  4855     1F00  30FF               	movlw	255
  4856     1F01  0574               	andwf	??___fpclassifyf,w
  4857     1F02  00A0               	movwf	___fpclassifyf@e
  4858     1F03  3000               	movlw	0
  4859     1F04  0575               	andwf	??___fpclassifyf+1,w
  4860     1F05  00A1               	movwf	___fpclassifyf@e+1
  4861     1F06                     l3106:
  4862     1F06  0820               	movf	___fpclassifyf@e,w
  4863     1F07  0421               	iorwf	___fpclassifyf@e+1,w
  4864     1F08  1D03               	btfss	3,2
  4865     1F09  2F0B               	goto	u4271
  4866     1F0A  2F0C               	goto	u4270
  4867     1F0B                     u4271:
  4868     1F0B  2F2F               	goto	l3116
  4869     1F0C                     u4270:
  4870     1F0C                     l3108:
  4871     1F0C  0822               	movf	___fpclassifyf@u,w
  4872     1F0D  00F4               	movwf	??___fpclassifyf
  4873     1F0E  0823               	movf	___fpclassifyf@u+1,w
  4874     1F0F  00F5               	movwf	??___fpclassifyf+1
  4875     1F10  0824               	movf	___fpclassifyf@u+2,w
  4876     1F11  00F6               	movwf	??___fpclassifyf+2
  4877     1F12  0825               	movf	___fpclassifyf@u+3,w
  4878     1F13  00F7               	movwf	??___fpclassifyf+3
  4879     1F14  3001               	movlw	1
  4880     1F15                     u4285:
  4881     1F15  1003               	clrc
  4882     1F16  0DF4               	rlf	??___fpclassifyf,f
  4883     1F17  0DF5               	rlf	??___fpclassifyf+1,f
  4884     1F18  0DF6               	rlf	??___fpclassifyf+2,f
  4885     1F19  0DF7               	rlf	??___fpclassifyf+3,f
  4886     1F1A                     u4280:
  4887     1F1A  3EFF               	addlw	-1
  4888     1F1B  1D03               	skipz
  4889     1F1C  2F15               	goto	u4285
  4890     1F1D  0877               	movf	??___fpclassifyf+3,w
  4891     1F1E  0476               	iorwf	??___fpclassifyf+2,w
  4892     1F1F  0475               	iorwf	??___fpclassifyf+1,w
  4893     1F20  0474               	iorwf	??___fpclassifyf,w
  4894     1F21  1D03               	skipz
  4895     1F22  2F24               	goto	u4291
  4896     1F23  2F25               	goto	u4290
  4897     1F24                     u4291:
  4898     1F24  2F2A               	goto	l3112
  4899     1F25                     u4290:
  4900     1F25                     l3110:
  4901     1F25  3002               	movlw	2
  4902     1F26  00F0               	movwf	?___fpclassifyf
  4903     1F27  3000               	movlw	0
  4904     1F28  00F1               	movwf	?___fpclassifyf+1
  4905     1F29  2F5B               	goto	l984
  4906     1F2A                     l3112:
  4907     1F2A  3003               	movlw	3
  4908     1F2B  00F0               	movwf	?___fpclassifyf
  4909     1F2C  3000               	movlw	0
  4910     1F2D  00F1               	movwf	?___fpclassifyf+1
  4911     1F2E  2F5B               	goto	l984
  4912     1F2F                     l3116:
  4913     1F2F  0A20               	incf	___fpclassifyf@e,w
  4914     1F30  0421               	iorwf	___fpclassifyf@e+1,w
  4915     1F31  1D03               	btfss	3,2
  4916     1F32  2F34               	goto	u4301
  4917     1F33  2F35               	goto	u4300
  4918     1F34                     u4301:
  4919     1F34  2F57               	goto	l3122
  4920     1F35                     u4300:
  4921     1F35                     l3118:
  4922     1F35  0822               	movf	___fpclassifyf@u,w
  4923     1F36  00F4               	movwf	??___fpclassifyf
  4924     1F37  0823               	movf	___fpclassifyf@u+1,w
  4925     1F38  00F5               	movwf	??___fpclassifyf+1
  4926     1F39  0824               	movf	___fpclassifyf@u+2,w
  4927     1F3A  00F6               	movwf	??___fpclassifyf+2
  4928     1F3B  0825               	movf	___fpclassifyf@u+3,w
  4929     1F3C  00F7               	movwf	??___fpclassifyf+3
  4930     1F3D  3009               	movlw	9
  4931     1F3E                     u4315:
  4932     1F3E  1003               	clrc
  4933     1F3F  0DF4               	rlf	??___fpclassifyf,f
  4934     1F40  0DF5               	rlf	??___fpclassifyf+1,f
  4935     1F41  0DF6               	rlf	??___fpclassifyf+2,f
  4936     1F42  0DF7               	rlf	??___fpclassifyf+3,f
  4937     1F43                     u4310:
  4938     1F43  3EFF               	addlw	-1
  4939     1F44  1D03               	skipz
  4940     1F45  2F3E               	goto	u4315
  4941     1F46  0877               	movf	??___fpclassifyf+3,w
  4942     1F47  0476               	iorwf	??___fpclassifyf+2,w
  4943     1F48  0475               	iorwf	??___fpclassifyf+1,w
  4944     1F49  0474               	iorwf	??___fpclassifyf,w
  4945     1F4A  1903               	skipnz
  4946     1F4B  2F4D               	goto	u4321
  4947     1F4C  2F4F               	goto	u4320
  4948     1F4D                     u4321:
  4949     1F4D  3001               	movlw	1
  4950     1F4E  2F50               	goto	u4330
  4951     1F4F                     u4320:
  4952     1F4F  3000               	movlw	0
  4953     1F50                     u4330:
  4954     1F50  00F8               	movwf	??___fpclassifyf+4
  4955     1F51  01F9               	clrf	??___fpclassifyf+5
  4956     1F52  0878               	movf	??___fpclassifyf+4,w
  4957     1F53  00F0               	movwf	?___fpclassifyf
  4958     1F54  0879               	movf	??___fpclassifyf+5,w
  4959     1F55  00F1               	movwf	?___fpclassifyf+1
  4960     1F56  2F5B               	goto	l984
  4961     1F57                     l3122:
  4962     1F57  3004               	movlw	4
  4963     1F58  00F0               	movwf	?___fpclassifyf
  4964     1F59  3000               	movlw	0
  4965     1F5A  00F1               	movwf	?___fpclassifyf+1
  4966     1F5B                     l984:
  4967     1F5B  0008               	return
  4968     1F5C                     __end_of___fpclassifyf:
  4969                           
  4970                           	psect	text16
  4971     19F2                     __ptext16:	
  4972 ;; *************** function ___flneg *****************
  4973 ;; Defined at:
  4974 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  f1              4    0[COMMON] int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  4    0[COMMON] int 
  4981 ;; Registers used:
  4982 ;;		wreg
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         4       0       0       0       0
  4989 ;;      Locals:         0       0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0
  4991 ;;      Totals:         4       0       0       0       0
  4992 ;;Total ram usage:        4 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_efgtoa
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001     19F2                     ___flneg:	
  5002                           ;psect for function ___flneg
  5003                           
  5004     19F2                     l2712:	
  5005                           ;incstack = 0
  5006                           ; Regs used in ___flneg: [wreg]
  5007                           
  5008     19F2  0873               	movf	___flneg@f1+3,w
  5009     19F3  0472               	iorwf	___flneg@f1+2,w
  5010     19F4  0471               	iorwf	___flneg@f1+1,w
  5011     19F5  0470               	iorwf	___flneg@f1,w
  5012     19F6  1903               	skipnz
  5013     19F7  29F9               	goto	u3321
  5014     19F8  29FA               	goto	u3320
  5015     19F9                     u3321:
  5016     19F9  29FC               	goto	l2716
  5017     19FA                     u3320:
  5018     19FA                     l2714:
  5019     19FA  3080               	movlw	128
  5020     19FB  06F3               	xorwf	___flneg@f1+3,f
  5021     19FC                     l2716:
  5022     19FC                     l567:
  5023     19FC  0008               	return
  5024     19FD                     __end_of___flneg:
  5025                           
  5026                           	psect	text17
  5027     1DA0                     __ptext17:	
  5028 ;; *************** function ___fleq *****************
  5029 ;; Defined at:
  5030 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  ff1             4    0[COMMON] int 
  5033 ;;  ff2             4    4[COMMON] int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;		None               void
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5045 ;;      Params:         8       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0
  5047 ;;      Temps:          4       0       0       0       0
  5048 ;;      Totals:        12       0       0       0       0
  5049 ;;Total ram usage:       12 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_efgtoa
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058     1DA0                     ___fleq:	
  5059                           ;psect for function ___fleq
  5060                           
  5061     1DA0                     l2680:	
  5062                           ;incstack = 0
  5063                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5064                           
  5065     1DA0  3000               	movlw	0
  5066     1DA1  0570               	andwf	___fleq@ff1,w
  5067     1DA2  00F8               	movwf	??___fleq
  5068     1DA3  3000               	movlw	0
  5069     1DA4  0571               	andwf	___fleq@ff1+1,w
  5070     1DA5  00F9               	movwf	??___fleq+1
  5071     1DA6  3080               	movlw	128
  5072     1DA7  0572               	andwf	___fleq@ff1+2,w
  5073     1DA8  00FA               	movwf	??___fleq+2
  5074     1DA9  307F               	movlw	127
  5075     1DAA  0573               	andwf	___fleq@ff1+3,w
  5076     1DAB  00FB               	movwf	??___fleq+3
  5077     1DAC  087B               	movf	??___fleq+3,w
  5078     1DAD  047A               	iorwf	??___fleq+2,w
  5079     1DAE  0479               	iorwf	??___fleq+1,w
  5080     1DAF  0478               	iorwf	??___fleq,w
  5081     1DB0  1D03               	skipz
  5082     1DB1  2DB3               	goto	u3221
  5083     1DB2  2DB4               	goto	u3220
  5084     1DB3                     u3221:
  5085     1DB3  2DBC               	goto	l546
  5086     1DB4                     u3220:
  5087     1DB4                     l2682:
  5088     1DB4  3000               	movlw	0
  5089     1DB5  00F3               	movwf	___fleq@ff1+3
  5090     1DB6  3000               	movlw	0
  5091     1DB7  00F2               	movwf	___fleq@ff1+2
  5092     1DB8  3000               	movlw	0
  5093     1DB9  00F1               	movwf	___fleq@ff1+1
  5094     1DBA  3000               	movlw	0
  5095     1DBB  00F0               	movwf	___fleq@ff1
  5096     1DBC                     l546:
  5097     1DBC  3000               	movlw	0
  5098     1DBD  0574               	andwf	___fleq@ff2,w
  5099     1DBE  00F8               	movwf	??___fleq
  5100     1DBF  3000               	movlw	0
  5101     1DC0  0575               	andwf	___fleq@ff2+1,w
  5102     1DC1  00F9               	movwf	??___fleq+1
  5103     1DC2  3080               	movlw	128
  5104     1DC3  0576               	andwf	___fleq@ff2+2,w
  5105     1DC4  00FA               	movwf	??___fleq+2
  5106     1DC5  307F               	movlw	127
  5107     1DC6  0577               	andwf	___fleq@ff2+3,w
  5108     1DC7  00FB               	movwf	??___fleq+3
  5109     1DC8  087B               	movf	??___fleq+3,w
  5110     1DC9  047A               	iorwf	??___fleq+2,w
  5111     1DCA  0479               	iorwf	??___fleq+1,w
  5112     1DCB  0478               	iorwf	??___fleq,w
  5113     1DCC  1D03               	skipz
  5114     1DCD  2DCF               	goto	u3231
  5115     1DCE  2DD0               	goto	u3230
  5116     1DCF                     u3231:
  5117     1DCF  2DD8               	goto	l547
  5118     1DD0                     u3230:
  5119     1DD0                     l2684:
  5120     1DD0  3000               	movlw	0
  5121     1DD1  00F7               	movwf	___fleq@ff2+3
  5122     1DD2  3000               	movlw	0
  5123     1DD3  00F6               	movwf	___fleq@ff2+2
  5124     1DD4  3000               	movlw	0
  5125     1DD5  00F5               	movwf	___fleq@ff2+1
  5126     1DD6  3000               	movlw	0
  5127     1DD7  00F4               	movwf	___fleq@ff2
  5128     1DD8                     l547:
  5129     1DD8  0877               	movf	___fleq@ff2+3,w
  5130     1DD9  0673               	xorwf	___fleq@ff1+3,w
  5131     1DDA  1D03               	skipz
  5132     1DDB  2DE6               	goto	u3245
  5133     1DDC  0876               	movf	___fleq@ff2+2,w
  5134     1DDD  0672               	xorwf	___fleq@ff1+2,w
  5135     1DDE  1D03               	skipz
  5136     1DDF  2DE6               	goto	u3245
  5137     1DE0  0875               	movf	___fleq@ff2+1,w
  5138     1DE1  0671               	xorwf	___fleq@ff1+1,w
  5139     1DE2  1D03               	skipz
  5140     1DE3  2DE6               	goto	u3245
  5141     1DE4  0874               	movf	___fleq@ff2,w
  5142     1DE5  0670               	xorwf	___fleq@ff1,w
  5143     1DE6                     u3245:
  5144     1DE6  1903               	skipnz
  5145     1DE7  2DE9               	goto	u3241
  5146     1DE8  2DEA               	goto	u3240
  5147     1DE9                     u3241:
  5148     1DE9  2DEC               	goto	l2688
  5149     1DEA                     u3240:
  5150     1DEA                     l2686:
  5151     1DEA  1003               	clrc
  5152     1DEB  2DED               	goto	l552
  5153     1DEC                     l2688:
  5154     1DEC  1403               	setc
  5155     1DED                     l552:
  5156     1DED  0008               	return
  5157     1DEE                     __end_of___fleq:
  5158                           
  5159                           	psect	text18
  5160     1630                     __ptext18:	
  5161 ;; *************** function ___fldiv *****************
  5162 ;; Defined at:
  5163 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  a               4    0[COMMON] int 
  5166 ;;  b               4    4[COMMON] int 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  grs             4    7[BANK0 ] unsigned long 
  5169 ;;  rem             4    0[BANK0 ] unsigned long 
  5170 ;;  new_exp         2    5[BANK0 ] short 
  5171 ;;  aexp            1   12[BANK0 ] unsigned char 
  5172 ;;  bexp            1   11[BANK0 ] unsigned char 
  5173 ;;  sign            1    4[BANK0 ] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  4    0[COMMON] unsigned char 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, btemp+1
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         8       0       0       0       0
  5184 ;;      Locals:         0      13       0       0       0
  5185 ;;      Temps:          5       0       0       0       0
  5186 ;;      Totals:        13      13       0       0       0
  5187 ;;Total ram usage:       26 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_efgtoa
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196     1630                     ___fldiv:	
  5197                           ;psect for function ___fldiv
  5198                           
  5199     1630                     l2762:	
  5200                           ;incstack = 0
  5201                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5202                           
  5203     1630  0877               	movf	___fldiv@b+3,w
  5204     1631  1283               	bcf	3,5	;RP0=0, select bank0
  5205     1632  1303               	bcf	3,6	;RP1=0, select bank0
  5206     1633  00A4               	movwf	___fldiv@sign
  5207     1634                     l2764:
  5208     1634  3080               	movlw	128
  5209     1635  05A4               	andwf	___fldiv@sign,f
  5210     1636                     l2766:
  5211     1636  0877               	movf	___fldiv@b+3,w
  5212     1637  00F8               	movwf	??___fldiv
  5213     1638  0778               	addwf	??___fldiv,w
  5214     1639  00AB               	movwf	___fldiv@bexp
  5215     163A                     l2768:
  5216     163A  1FF6               	btfss	___fldiv@b+2,7
  5217     163B  2E3D               	goto	u3431
  5218     163C  2E3E               	goto	u3430
  5219     163D                     u3431:
  5220     163D  2E3F               	goto	l2772
  5221     163E                     u3430:
  5222     163E                     l2770:
  5223     163E  142B               	bsf	___fldiv@bexp,0
  5224     163F                     l2772:
  5225     163F  082B               	movf	___fldiv@bexp,w
  5226     1640  1903               	btfsc	3,2
  5227     1641  2E43               	goto	u3441
  5228     1642  2E44               	goto	u3440
  5229     1643                     u3441:
  5230     1643  2E54               	goto	l2782
  5231     1644                     u3440:
  5232     1644                     l2774:
  5233     1644  0A2B               	incf	___fldiv@bexp,w
  5234     1645  1D03               	btfss	3,2
  5235     1646  2E48               	goto	u3451
  5236     1647  2E49               	goto	u3450
  5237     1648                     u3451:
  5238     1648  2E51               	goto	l2778
  5239     1649                     u3450:
  5240     1649                     l2776:
  5241     1649  3000               	movlw	0
  5242     164A  00F7               	movwf	___fldiv@b+3
  5243     164B  3000               	movlw	0
  5244     164C  00F6               	movwf	___fldiv@b+2
  5245     164D  3000               	movlw	0
  5246     164E  00F5               	movwf	___fldiv@b+1
  5247     164F  3000               	movlw	0
  5248     1650  00F4               	movwf	___fldiv@b
  5249     1651                     l2778:
  5250     1651  17F6               	bsf	___fldiv@b+2,7
  5251     1652                     l2780:
  5252     1652  01F7               	clrf	___fldiv@b+3
  5253     1653  2E5C               	goto	l2784
  5254     1654                     l2782:
  5255     1654  3000               	movlw	0
  5256     1655  00F7               	movwf	___fldiv@b+3
  5257     1656  3000               	movlw	0
  5258     1657  00F6               	movwf	___fldiv@b+2
  5259     1658  3000               	movlw	0
  5260     1659  00F5               	movwf	___fldiv@b+1
  5261     165A  3000               	movlw	0
  5262     165B  00F4               	movwf	___fldiv@b
  5263     165C                     l2784:
  5264     165C  0873               	movf	___fldiv@a+3,w
  5265     165D  3980               	andlw	128
  5266     165E  06A4               	xorwf	___fldiv@sign,f
  5267     165F                     l2786:
  5268     165F  0873               	movf	___fldiv@a+3,w
  5269     1660  00F8               	movwf	??___fldiv
  5270     1661  0778               	addwf	??___fldiv,w
  5271     1662  00AC               	movwf	___fldiv@aexp
  5272     1663                     l2788:
  5273     1663  1FF2               	btfss	___fldiv@a+2,7
  5274     1664  2E66               	goto	u3461
  5275     1665  2E67               	goto	u3460
  5276     1666                     u3461:
  5277     1666  2E68               	goto	l2792
  5278     1667                     u3460:
  5279     1667                     l2790:
  5280     1667  142C               	bsf	___fldiv@aexp,0
  5281     1668                     l2792:
  5282     1668  082C               	movf	___fldiv@aexp,w
  5283     1669  1903               	btfsc	3,2
  5284     166A  2E6C               	goto	u3471
  5285     166B  2E6D               	goto	u3470
  5286     166C                     u3471:
  5287     166C  2E7D               	goto	l2802
  5288     166D                     u3470:
  5289     166D                     l2794:
  5290     166D  0A2C               	incf	___fldiv@aexp,w
  5291     166E  1D03               	btfss	3,2
  5292     166F  2E71               	goto	u3481
  5293     1670  2E72               	goto	u3480
  5294     1671                     u3481:
  5295     1671  2E7A               	goto	l2798
  5296     1672                     u3480:
  5297     1672                     l2796:
  5298     1672  3000               	movlw	0
  5299     1673  00F3               	movwf	___fldiv@a+3
  5300     1674  3000               	movlw	0
  5301     1675  00F2               	movwf	___fldiv@a+2
  5302     1676  3000               	movlw	0
  5303     1677  00F1               	movwf	___fldiv@a+1
  5304     1678  3000               	movlw	0
  5305     1679  00F0               	movwf	___fldiv@a
  5306     167A                     l2798:
  5307     167A  17F2               	bsf	___fldiv@a+2,7
  5308     167B                     l2800:
  5309     167B  01F3               	clrf	___fldiv@a+3
  5310     167C  2E85               	goto	l734
  5311     167D                     l2802:
  5312     167D  3000               	movlw	0
  5313     167E  00F3               	movwf	___fldiv@a+3
  5314     167F  3000               	movlw	0
  5315     1680  00F2               	movwf	___fldiv@a+2
  5316     1681  3000               	movlw	0
  5317     1682  00F1               	movwf	___fldiv@a+1
  5318     1683  3000               	movlw	0
  5319     1684  00F0               	movwf	___fldiv@a
  5320     1685                     l734:
  5321     1685  0873               	movf	___fldiv@a+3,w
  5322     1686  0472               	iorwf	___fldiv@a+2,w
  5323     1687  0471               	iorwf	___fldiv@a+1,w
  5324     1688  0470               	iorwf	___fldiv@a,w
  5325     1689  1D03               	skipz
  5326     168A  2E8C               	goto	u3491
  5327     168B  2E8D               	goto	u3490
  5328     168C                     u3491:
  5329     168C  2EA4               	goto	l2812
  5330     168D                     u3490:
  5331     168D                     l2804:
  5332     168D  3000               	movlw	0
  5333     168E  00F7               	movwf	___fldiv@b+3
  5334     168F  3000               	movlw	0
  5335     1690  00F6               	movwf	___fldiv@b+2
  5336     1691  3000               	movlw	0
  5337     1692  00F5               	movwf	___fldiv@b+1
  5338     1693  3000               	movlw	0
  5339     1694  00F4               	movwf	___fldiv@b
  5340     1695  3080               	movlw	128
  5341     1696  04F6               	iorwf	___fldiv@b+2,f
  5342     1697  307F               	movlw	127
  5343     1698  04F7               	iorwf	___fldiv@b+3,f
  5344     1699                     l2806:
  5345     1699  0824               	movf	___fldiv@sign,w
  5346     169A  04F7               	iorwf	___fldiv@b+3,f
  5347     169B                     l2808:
  5348     169B  0877               	movf	___fldiv@b+3,w
  5349     169C  00F3               	movwf	?___fldiv+3
  5350     169D  0876               	movf	___fldiv@b+2,w
  5351     169E  00F2               	movwf	?___fldiv+2
  5352     169F  0875               	movf	___fldiv@b+1,w
  5353     16A0  00F1               	movwf	?___fldiv+1
  5354     16A1  0874               	movf	___fldiv@b,w
  5355     16A2  00F0               	movwf	?___fldiv
  5356     16A3  2FFF               	goto	l736
  5357     16A4                     l2812:
  5358     16A4  082B               	movf	___fldiv@bexp,w
  5359     16A5  1D03               	btfss	3,2
  5360     16A6  2EA8               	goto	u3501
  5361     16A7  2EA9               	goto	u3500
  5362     16A8                     u3501:
  5363     16A8  2EB2               	goto	l2818
  5364     16A9                     u3500:
  5365     16A9                     l2814:
  5366     16A9  3000               	movlw	0
  5367     16AA  00F3               	movwf	?___fldiv+3
  5368     16AB  3000               	movlw	0
  5369     16AC  00F2               	movwf	?___fldiv+2
  5370     16AD  3000               	movlw	0
  5371     16AE  00F1               	movwf	?___fldiv+1
  5372     16AF  3000               	movlw	0
  5373     16B0  00F0               	movwf	?___fldiv
  5374     16B1  2FFF               	goto	l736
  5375     16B2                     l2818:
  5376     16B2  082B               	movf	___fldiv@bexp,w
  5377     16B3  00F8               	movwf	??___fldiv
  5378     16B4  01F9               	clrf	??___fldiv+1
  5379     16B5  0879               	movf	??___fldiv+1,w
  5380     16B6  00FB               	movwf	??___fldiv+3
  5381     16B7  082C               	movf	___fldiv@aexp,w
  5382     16B8  0278               	subwf	??___fldiv,w
  5383     16B9  00FA               	movwf	??___fldiv+2
  5384     16BA  1C03               	skipc
  5385     16BB  03FB               	decf	??___fldiv+3,f
  5386     16BC  087A               	movf	??___fldiv+2,w
  5387     16BD  3E7F               	addlw	127
  5388     16BE  00A5               	movwf	___fldiv@new_exp
  5389     16BF  087B               	movf	??___fldiv+3,w
  5390     16C0  1803               	skipnc
  5391     16C1  3E01               	addlw	1
  5392     16C2  3E00               	addlw	0
  5393     16C3  00A6               	movwf	___fldiv@new_exp+1
  5394     16C4                     l2820:
  5395     16C4  0877               	movf	___fldiv@b+3,w
  5396     16C5  00A3               	movwf	___fldiv@rem+3
  5397     16C6  0876               	movf	___fldiv@b+2,w
  5398     16C7  00A2               	movwf	___fldiv@rem+2
  5399     16C8  0875               	movf	___fldiv@b+1,w
  5400     16C9  00A1               	movwf	___fldiv@rem+1
  5401     16CA  0874               	movf	___fldiv@b,w
  5402     16CB  00A0               	movwf	___fldiv@rem
  5403     16CC                     l2822:
  5404     16CC  3000               	movlw	0
  5405     16CD  00F7               	movwf	___fldiv@b+3
  5406     16CE  3000               	movlw	0
  5407     16CF  00F6               	movwf	___fldiv@b+2
  5408     16D0  3000               	movlw	0
  5409     16D1  00F5               	movwf	___fldiv@b+1
  5410     16D2  3000               	movlw	0
  5411     16D3  00F4               	movwf	___fldiv@b
  5412     16D4                     l2824:
  5413     16D4  3000               	movlw	0
  5414     16D5  00AA               	movwf	___fldiv@grs+3
  5415     16D6  3000               	movlw	0
  5416     16D7  00A9               	movwf	___fldiv@grs+2
  5417     16D8  3000               	movlw	0
  5418     16D9  00A8               	movwf	___fldiv@grs+1
  5419     16DA  3000               	movlw	0
  5420     16DB  00A7               	movwf	___fldiv@grs
  5421     16DC                     l2826:
  5422     16DC  01AC               	clrf	___fldiv@aexp
  5423     16DD  2F2C               	goto	l2846
  5424     16DE                     l2828:
  5425     16DE  082C               	movf	___fldiv@aexp,w
  5426     16DF  1903               	btfsc	3,2
  5427     16E0  2EE2               	goto	u3511
  5428     16E1  2EE3               	goto	u3510
  5429     16E2                     u3511:
  5430     16E2  2F03               	goto	l2838
  5431     16E3                     u3510:
  5432     16E3                     l2830:
  5433     16E3  3001               	movlw	1
  5434     16E4  00F8               	movwf	??___fldiv
  5435     16E5                     u3525:
  5436     16E5  1003               	clrc
  5437     16E6  0DA0               	rlf	___fldiv@rem,f
  5438     16E7  0DA1               	rlf	___fldiv@rem+1,f
  5439     16E8  0DA2               	rlf	___fldiv@rem+2,f
  5440     16E9  0DA3               	rlf	___fldiv@rem+3,f
  5441     16EA  0BF8               	decfsz	??___fldiv,f
  5442     16EB  2EE5               	goto	u3525
  5443     16EC  3001               	movlw	1
  5444     16ED  00F8               	movwf	??___fldiv
  5445     16EE                     u3535:
  5446     16EE  1003               	clrc
  5447     16EF  0DF4               	rlf	___fldiv@b,f
  5448     16F0  0DF5               	rlf	___fldiv@b+1,f
  5449     16F1  0DF6               	rlf	___fldiv@b+2,f
  5450     16F2  0DF7               	rlf	___fldiv@b+3,f
  5451     16F3  0BF8               	decfsz	??___fldiv,f
  5452     16F4  2EEE               	goto	u3535
  5453     16F5                     l2832:
  5454     16F5  1FAA               	btfss	___fldiv@grs+3,7
  5455     16F6  2EF8               	goto	u3541
  5456     16F7  2EF9               	goto	u3540
  5457     16F8                     u3541:
  5458     16F8  2EFA               	goto	l2836
  5459     16F9                     u3540:
  5460     16F9                     l2834:
  5461     16F9  1474               	bsf	___fldiv@b,0
  5462     16FA                     l2836:
  5463     16FA  3001               	movlw	1
  5464     16FB  00F8               	movwf	??___fldiv
  5465     16FC                     u3555:
  5466     16FC  1003               	clrc
  5467     16FD  0DA7               	rlf	___fldiv@grs,f
  5468     16FE  0DA8               	rlf	___fldiv@grs+1,f
  5469     16FF  0DA9               	rlf	___fldiv@grs+2,f
  5470     1700  0DAA               	rlf	___fldiv@grs+3,f
  5471     1701  0BF8               	decfsz	??___fldiv,f
  5472     1702  2EFC               	goto	u3555
  5473     1703                     l2838:
  5474     1703  0873               	movf	___fldiv@a+3,w
  5475     1704  0223               	subwf	___fldiv@rem+3,w
  5476     1705  1D03               	skipz
  5477     1706  2F11               	goto	u3565
  5478     1707  0872               	movf	___fldiv@a+2,w
  5479     1708  0222               	subwf	___fldiv@rem+2,w
  5480     1709  1D03               	skipz
  5481     170A  2F11               	goto	u3565
  5482     170B  0871               	movf	___fldiv@a+1,w
  5483     170C  0221               	subwf	___fldiv@rem+1,w
  5484     170D  1D03               	skipz
  5485     170E  2F11               	goto	u3565
  5486     170F  0870               	movf	___fldiv@a,w
  5487     1710  0220               	subwf	___fldiv@rem,w
  5488     1711                     u3565:
  5489     1711  1C03               	skipc
  5490     1712  2F14               	goto	u3561
  5491     1713  2F15               	goto	u3560
  5492     1714                     u3561:
  5493     1714  2F2A               	goto	l2844
  5494     1715                     u3560:
  5495     1715                     l2840:
  5496     1715  172A               	bsf	___fldiv@grs+3,6
  5497     1716                     l2842:
  5498     1716  0870               	movf	___fldiv@a,w
  5499     1717  02A0               	subwf	___fldiv@rem,f
  5500     1718  0871               	movf	___fldiv@a+1,w
  5501     1719  1C03               	skipc
  5502     171A  0F71               	incfsz	___fldiv@a+1,w
  5503     171B  2F1D               	goto	u3575
  5504     171C  2F1E               	goto	u3576
  5505     171D                     u3575:
  5506     171D  02A1               	subwf	___fldiv@rem+1,f
  5507     171E                     u3576:
  5508     171E  0872               	movf	___fldiv@a+2,w
  5509     171F  1C03               	skipc
  5510     1720  0F72               	incfsz	___fldiv@a+2,w
  5511     1721  2F23               	goto	u3577
  5512     1722  2F24               	goto	u3578
  5513     1723                     u3577:
  5514     1723  02A2               	subwf	___fldiv@rem+2,f
  5515     1724                     u3578:
  5516     1724  0873               	movf	___fldiv@a+3,w
  5517     1725  1C03               	skipc
  5518     1726  0F73               	incfsz	___fldiv@a+3,w
  5519     1727  2F29               	goto	u3579
  5520     1728  2F2A               	goto	u3570
  5521     1729                     u3579:
  5522     1729  02A3               	subwf	___fldiv@rem+3,f
  5523     172A                     u3570:
  5524     172A                     l2844:
  5525     172A  3001               	movlw	1
  5526     172B  07AC               	addwf	___fldiv@aexp,f
  5527     172C                     l2846:
  5528     172C  301A               	movlw	26
  5529     172D  022C               	subwf	___fldiv@aexp,w
  5530     172E  1C03               	skipc
  5531     172F  2F31               	goto	u3581
  5532     1730  2F32               	goto	u3580
  5533     1731                     u3581:
  5534     1731  2EDE               	goto	l2828
  5535     1732                     u3580:
  5536     1732                     l2848:
  5537     1732  0823               	movf	___fldiv@rem+3,w
  5538     1733  0422               	iorwf	___fldiv@rem+2,w
  5539     1734  0421               	iorwf	___fldiv@rem+1,w
  5540     1735  0420               	iorwf	___fldiv@rem,w
  5541     1736  1903               	skipnz
  5542     1737  2F39               	goto	u3591
  5543     1738  2F3A               	goto	u3590
  5544     1739                     u3591:
  5545     1739  2F59               	goto	l2862
  5546     173A                     u3590:
  5547     173A                     l2850:
  5548     173A  1427               	bsf	___fldiv@grs,0
  5549     173B  2F59               	goto	l2862
  5550     173C                     l2852:
  5551     173C  3001               	movlw	1
  5552     173D  00F8               	movwf	??___fldiv
  5553     173E                     u3605:
  5554     173E  1003               	clrc
  5555     173F  0DF4               	rlf	___fldiv@b,f
  5556     1740  0DF5               	rlf	___fldiv@b+1,f
  5557     1741  0DF6               	rlf	___fldiv@b+2,f
  5558     1742  0DF7               	rlf	___fldiv@b+3,f
  5559     1743  0BF8               	decfsz	??___fldiv,f
  5560     1744  2F3E               	goto	u3605
  5561     1745                     l2854:
  5562     1745  1FAA               	btfss	___fldiv@grs+3,7
  5563     1746  2F48               	goto	u3611
  5564     1747  2F49               	goto	u3610
  5565     1748                     u3611:
  5566     1748  2F4A               	goto	l2858
  5567     1749                     u3610:
  5568     1749                     l2856:
  5569     1749  1474               	bsf	___fldiv@b,0
  5570     174A                     l2858:
  5571     174A  3001               	movlw	1
  5572     174B  00F8               	movwf	??___fldiv
  5573     174C                     u3625:
  5574     174C  1003               	clrc
  5575     174D  0DA7               	rlf	___fldiv@grs,f
  5576     174E  0DA8               	rlf	___fldiv@grs+1,f
  5577     174F  0DA9               	rlf	___fldiv@grs+2,f
  5578     1750  0DAA               	rlf	___fldiv@grs+3,f
  5579     1751  0BF8               	decfsz	??___fldiv,f
  5580     1752  2F4C               	goto	u3625
  5581     1753                     l2860:
  5582     1753  30FF               	movlw	255
  5583     1754  07A5               	addwf	___fldiv@new_exp,f
  5584     1755  1803               	skipnc
  5585     1756  0AA6               	incf	___fldiv@new_exp+1,f
  5586     1757  30FF               	movlw	255
  5587     1758  07A6               	addwf	___fldiv@new_exp+1,f
  5588     1759                     l2862:
  5589     1759  1FF6               	btfss	___fldiv@b+2,7
  5590     175A  2F5C               	goto	u3631
  5591     175B  2F5D               	goto	u3630
  5592     175C                     u3631:
  5593     175C  2F3C               	goto	l2852
  5594     175D                     u3630:
  5595     175D                     l2864:
  5596     175D  01AC               	clrf	___fldiv@aexp
  5597     175E                     l2866:
  5598     175E  1FAA               	btfss	___fldiv@grs+3,7
  5599     175F  2F61               	goto	u3641
  5600     1760  2F62               	goto	u3640
  5601     1761                     u3641:
  5602     1761  2F7E               	goto	l2874
  5603     1762                     u3640:
  5604     1762                     l2868:
  5605     1762  30FF               	movlw	255
  5606     1763  0527               	andwf	___fldiv@grs,w
  5607     1764  00F8               	movwf	??___fldiv
  5608     1765  30FF               	movlw	255
  5609     1766  0528               	andwf	___fldiv@grs+1,w
  5610     1767  00F9               	movwf	??___fldiv+1
  5611     1768  30FF               	movlw	255
  5612     1769  0529               	andwf	___fldiv@grs+2,w
  5613     176A  00FA               	movwf	??___fldiv+2
  5614     176B  307F               	movlw	127
  5615     176C  052A               	andwf	___fldiv@grs+3,w
  5616     176D  00FB               	movwf	??___fldiv+3
  5617     176E  087B               	movf	??___fldiv+3,w
  5618     176F  047A               	iorwf	??___fldiv+2,w
  5619     1770  0479               	iorwf	??___fldiv+1,w
  5620     1771  0478               	iorwf	??___fldiv,w
  5621     1772  1903               	skipnz
  5622     1773  2F75               	goto	u3651
  5623     1774  2F76               	goto	u3650
  5624     1775                     u3651:
  5625     1775  2F79               	goto	l750
  5626     1776                     u3650:
  5627     1776                     l2870:
  5628     1776  3001               	movlw	1
  5629     1777  00AC               	movwf	___fldiv@aexp
  5630     1778  2F7E               	goto	l2874
  5631     1779                     l750:
  5632     1779  1C74               	btfss	___fldiv@b,0
  5633     177A  2F7C               	goto	u3661
  5634     177B  2F7D               	goto	u3660
  5635     177C                     u3661:
  5636     177C  2F7E               	goto	l2874
  5637     177D                     u3660:
  5638     177D  2F76               	goto	l2870
  5639     177E                     l2874:
  5640     177E  082C               	movf	___fldiv@aexp,w
  5641     177F  1903               	btfsc	3,2
  5642     1780  2F82               	goto	u3671
  5643     1781  2F83               	goto	u3670
  5644     1782                     u3671:
  5645     1782  2FB4               	goto	l2884
  5646     1783                     u3670:
  5647     1783                     l2876:
  5648     1783  3001               	movlw	1
  5649     1784  07F4               	addwf	___fldiv@b,f
  5650     1785  3000               	movlw	0
  5651     1786  1803               	skipnc
  5652     1787  3001               	movlw	1
  5653     1788  07F5               	addwf	___fldiv@b+1,f
  5654     1789  3000               	movlw	0
  5655     178A  1803               	skipnc
  5656     178B  3001               	movlw	1
  5657     178C  07F6               	addwf	___fldiv@b+2,f
  5658     178D  3000               	movlw	0
  5659     178E  1803               	skipnc
  5660     178F  3001               	movlw	1
  5661     1790  07F7               	addwf	___fldiv@b+3,f
  5662     1791                     l2878:
  5663     1791  1C77               	btfss	___fldiv@b+3,0
  5664     1792  2F94               	goto	u3681
  5665     1793  2F95               	goto	u3680
  5666     1794                     u3681:
  5667     1794  2FB4               	goto	l2884
  5668     1795                     u3680:
  5669     1795                     l2880:
  5670     1795  0874               	movf	___fldiv@b,w
  5671     1796  00F8               	movwf	??___fldiv
  5672     1797  0875               	movf	___fldiv@b+1,w
  5673     1798  00F9               	movwf	??___fldiv+1
  5674     1799  0876               	movf	___fldiv@b+2,w
  5675     179A  00FA               	movwf	??___fldiv+2
  5676     179B  0877               	movf	___fldiv@b+3,w
  5677     179C  00FB               	movwf	??___fldiv+3
  5678     179D  3001               	movlw	1
  5679     179E  00FC               	movwf	??___fldiv+4
  5680     179F                     u3695:
  5681     179F  0D7B               	rlf	??___fldiv+3,w
  5682     17A0  0CFB               	rrf	??___fldiv+3,f
  5683     17A1  0CFA               	rrf	??___fldiv+2,f
  5684     17A2  0CF9               	rrf	??___fldiv+1,f
  5685     17A3  0CF8               	rrf	??___fldiv,f
  5686     17A4                     u3690:
  5687     17A4  0BFC               	decfsz	??___fldiv+4,f
  5688     17A5  2F9F               	goto	u3695
  5689     17A6  087B               	movf	??___fldiv+3,w
  5690     17A7  00F7               	movwf	___fldiv@b+3
  5691     17A8  087A               	movf	??___fldiv+2,w
  5692     17A9  00F6               	movwf	___fldiv@b+2
  5693     17AA  0879               	movf	??___fldiv+1,w
  5694     17AB  00F5               	movwf	___fldiv@b+1
  5695     17AC  0878               	movf	??___fldiv,w
  5696     17AD  00F4               	movwf	___fldiv@b
  5697     17AE                     l2882:
  5698     17AE  3001               	movlw	1
  5699     17AF  07A5               	addwf	___fldiv@new_exp,f
  5700     17B0  1803               	skipnc
  5701     17B1  0AA6               	incf	___fldiv@new_exp+1,f
  5702     17B2  3000               	movlw	0
  5703     17B3  07A6               	addwf	___fldiv@new_exp+1,f
  5704     17B4                     l2884:
  5705     17B4  0826               	movf	___fldiv@new_exp+1,w
  5706     17B5  3A80               	xorlw	128
  5707     17B6  00FF               	movwf	btemp+1
  5708     17B7  3080               	movlw	128
  5709     17B8  027F               	subwf	btemp+1,w
  5710     17B9  1D03               	skipz
  5711     17BA  2FBD               	goto	u3705
  5712     17BB  30FF               	movlw	255
  5713     17BC  0225               	subwf	___fldiv@new_exp,w
  5714     17BD                     u3705:
  5715     17BD  1C03               	skipc
  5716     17BE  2FC0               	goto	u3701
  5717     17BF  2FC1               	goto	u3700
  5718     17C0                     u3701:
  5719     17C0  2FCF               	goto	l2888
  5720     17C1                     u3700:
  5721     17C1                     l2886:
  5722     17C1  30FF               	movlw	255
  5723     17C2  1283               	bcf	3,5	;RP0=0, select bank0
  5724     17C3  1303               	bcf	3,6	;RP1=0, select bank0
  5725     17C4  00A5               	movwf	___fldiv@new_exp
  5726     17C5  3000               	movlw	0
  5727     17C6  00A6               	movwf	___fldiv@new_exp+1
  5728     17C7  3000               	movlw	0
  5729     17C8  00F7               	movwf	___fldiv@b+3
  5730     17C9  3000               	movlw	0
  5731     17CA  00F6               	movwf	___fldiv@b+2
  5732     17CB  3000               	movlw	0
  5733     17CC  00F5               	movwf	___fldiv@b+1
  5734     17CD  3000               	movlw	0
  5735     17CE  00F4               	movwf	___fldiv@b
  5736     17CF                     l2888:
  5737     17CF  1283               	bcf	3,5	;RP0=0, select bank0
  5738     17D0  1303               	bcf	3,6	;RP1=0, select bank0
  5739     17D1  0826               	movf	___fldiv@new_exp+1,w
  5740     17D2  3A80               	xorlw	128
  5741     17D3  00FF               	movwf	btemp+1
  5742     17D4  3080               	movlw	128
  5743     17D5  027F               	subwf	btemp+1,w
  5744     17D6  1D03               	skipz
  5745     17D7  2FDA               	goto	u3715
  5746     17D8  3001               	movlw	1
  5747     17D9  0225               	subwf	___fldiv@new_exp,w
  5748     17DA                     u3715:
  5749     17DA  1803               	skipnc
  5750     17DB  2FDD               	goto	u3711
  5751     17DC  2FDE               	goto	u3710
  5752     17DD                     u3711:
  5753     17DD  2FEB               	goto	l756
  5754     17DE                     u3710:
  5755     17DE                     l2890:
  5756     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  5757     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  5758     17E0  01A5               	clrf	___fldiv@new_exp
  5759     17E1  01A6               	clrf	___fldiv@new_exp+1
  5760     17E2                     l2892:
  5761     17E2  3000               	movlw	0
  5762     17E3  00F7               	movwf	___fldiv@b+3
  5763     17E4  3000               	movlw	0
  5764     17E5  00F6               	movwf	___fldiv@b+2
  5765     17E6  3000               	movlw	0
  5766     17E7  00F5               	movwf	___fldiv@b+1
  5767     17E8  3000               	movlw	0
  5768     17E9  00F4               	movwf	___fldiv@b
  5769     17EA                     l2894:
  5770     17EA  01A4               	clrf	___fldiv@sign
  5771     17EB                     l756:
  5772     17EB  1283               	bcf	3,5	;RP0=0, select bank0
  5773     17EC  1303               	bcf	3,6	;RP1=0, select bank0
  5774     17ED  0825               	movf	___fldiv@new_exp,w
  5775     17EE  00AB               	movwf	___fldiv@bexp
  5776     17EF                     l2896:
  5777     17EF  1C2B               	btfss	___fldiv@bexp,0
  5778     17F0  2FF2               	goto	u3721
  5779     17F1  2FF3               	goto	u3720
  5780     17F2                     u3721:
  5781     17F2  2FF5               	goto	l2900
  5782     17F3                     u3720:
  5783     17F3                     l2898:
  5784     17F3  17F6               	bsf	___fldiv@b+2,7
  5785     17F4  2FF7               	goto	l758
  5786     17F5                     l2900:
  5787     17F5  307F               	movlw	127
  5788     17F6  05F6               	andwf	___fldiv@b+2,f
  5789     17F7                     l758:
  5790     17F7  082B               	movf	___fldiv@bexp,w
  5791     17F8  00F8               	movwf	??___fldiv
  5792     17F9  1003               	clrc
  5793     17FA  0C78               	rrf	??___fldiv,w
  5794     17FB  00F7               	movwf	___fldiv@b+3
  5795     17FC  0824               	movf	___fldiv@sign,w
  5796     17FD  04F7               	iorwf	___fldiv@b+3,f
  5797     17FE  2E9B               	goto	l2808
  5798     17FF                     l736:
  5799     17FF  0008               	return
  5800     1800                     __end_of___fldiv:
  5801                           
  5802                           	psect	text19
  5803     1C98                     __ptext19:	
  5804 ;; *************** function _setupSensorForSafetyMode *****************
  5805 ;; Defined at:
  5806 ;;		line 27 in file "newmain.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5820 ;;      Params:         0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0
  5823 ;;      Totals:         0       0       0       0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 5
  5827 ;; This function calls:
  5828 ;;		_TCN75A_SetAlertMode
  5829 ;;		_TCN75A_SetAlertPolarity
  5830 ;;		_TCN75A_SetFaultQueue
  5831 ;;		_TCN75A_SetRangeTemp
  5832 ;; This function is called by:
  5833 ;;		_main
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837     1C98                     _setupSensorForSafetyMode:	
  5838                           ;psect for function _setupSensorForSafetyMode
  5839                           
  5840     1C98                     l3614:	
  5841                           ;incstack = 0
  5842                           ; Regs used in _setupSensorForSafetyMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5843                           
  5844                           
  5845                           ;newmain.c: 28:     TCN75A_SetAlertMode(1);
  5846     1C98  3001               	movlw	1
  5847     1C99  160A  158A  22E8  160A  158A  	fcall	_TCN75A_SetAlertMode
  5848                           
  5849                           ;newmain.c: 29:     TCN75A_SetAlertPolarity(1);
  5850     1C9E  3001               	movlw	1
  5851     1C9F  160A  158A  22FF  160A  158A  	fcall	_TCN75A_SetAlertPolarity
  5852     1CA4                     l3616:
  5853                           
  5854                           ;newmain.c: 30:     TCN75A_SetRangeTemp(65.0, 70);
  5855     1CA4  3042               	movlw	66
  5856     1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  5857     1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  5858     1CA7  00E8               	movwf	TCN75A_SetRangeTemp@val_down+3
  5859     1CA8  3082               	movlw	130
  5860     1CA9  00E7               	movwf	TCN75A_SetRangeTemp@val_down+2
  5861     1CAA  3000               	movlw	0
  5862     1CAB  00E6               	movwf	TCN75A_SetRangeTemp@val_down+1
  5863     1CAC  3000               	movlw	0
  5864     1CAD  00E5               	movwf	TCN75A_SetRangeTemp@val_down
  5865     1CAE  3042               	movlw	66
  5866     1CAF  00EC               	movwf	TCN75A_SetRangeTemp@val_up+3
  5867     1CB0  308C               	movlw	140
  5868     1CB1  00EB               	movwf	TCN75A_SetRangeTemp@val_up+2
  5869     1CB2  3000               	movlw	0
  5870     1CB3  00EA               	movwf	TCN75A_SetRangeTemp@val_up+1
  5871     1CB4  3000               	movlw	0
  5872     1CB5  00E9               	movwf	TCN75A_SetRangeTemp@val_up
  5873     1CB6  160A  158A  2330  160A  158A  	fcall	_TCN75A_SetRangeTemp
  5874     1CBB                     l3618:
  5875                           
  5876                           ;newmain.c: 31:     TCN75A_SetFaultQueue(2);
  5877     1CBB  3002               	movlw	2
  5878     1CBC  120A  158A  2001  160A  158A  	fcall	_TCN75A_SetFaultQueue
  5879     1CC1                     l48:
  5880     1CC1  0008               	return
  5881     1CC2                     __end_of_setupSensorForSafetyMode:
  5882                           
  5883                           	psect	text20
  5884     1C6E                     __ptext20:	
  5885 ;; *************** function _setupSensorForNormalMode *****************
  5886 ;; Defined at:
  5887 ;;		line 20 in file "newmain.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5901 ;;      Params:         0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used: 1
  5907 ;; Hardware stack levels required when called: 5
  5908 ;; This function calls:
  5909 ;;		_TCN75A_SetAlertMode
  5910 ;;		_TCN75A_SetAlertPolarity
  5911 ;;		_TCN75A_SetFaultQueue
  5912 ;;		_TCN75A_SetRangeTemp
  5913 ;; This function is called by:
  5914 ;;		_main
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918     1C6E                     _setupSensorForNormalMode:	
  5919                           ;psect for function _setupSensorForNormalMode
  5920                           
  5921     1C6E                     l3608:	
  5922                           ;incstack = 0
  5923                           ; Regs used in _setupSensorForNormalMode: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5924                           
  5925                           
  5926                           ;newmain.c: 21:     TCN75A_SetAlertMode(0);
  5927     1C6E  3000               	movlw	0
  5928     1C6F  160A  158A  22E8  160A  158A  	fcall	_TCN75A_SetAlertMode
  5929                           
  5930                           ;newmain.c: 22:     TCN75A_SetAlertPolarity(0);
  5931     1C74  3000               	movlw	0
  5932     1C75  160A  158A  22FF  160A  158A  	fcall	_TCN75A_SetAlertPolarity
  5933     1C7A                     l3610:
  5934                           
  5935                           ;newmain.c: 23:     TCN75A_SetRangeTemp(55.0, 60);
  5936     1C7A  3042               	movlw	66
  5937     1C7B  1283               	bcf	3,5	;RP0=0, select bank0
  5938     1C7C  1303               	bcf	3,6	;RP1=0, select bank0
  5939     1C7D  00E8               	movwf	TCN75A_SetRangeTemp@val_down+3
  5940     1C7E  305C               	movlw	92
  5941     1C7F  00E7               	movwf	TCN75A_SetRangeTemp@val_down+2
  5942     1C80  3000               	movlw	0
  5943     1C81  00E6               	movwf	TCN75A_SetRangeTemp@val_down+1
  5944     1C82  3000               	movlw	0
  5945     1C83  00E5               	movwf	TCN75A_SetRangeTemp@val_down
  5946     1C84  3042               	movlw	66
  5947     1C85  00EC               	movwf	TCN75A_SetRangeTemp@val_up+3
  5948     1C86  3070               	movlw	112
  5949     1C87  00EB               	movwf	TCN75A_SetRangeTemp@val_up+2
  5950     1C88  3000               	movlw	0
  5951     1C89  00EA               	movwf	TCN75A_SetRangeTemp@val_up+1
  5952     1C8A  3000               	movlw	0
  5953     1C8B  00E9               	movwf	TCN75A_SetRangeTemp@val_up
  5954     1C8C  160A  158A  2330  160A  158A  	fcall	_TCN75A_SetRangeTemp
  5955     1C91                     l3612:
  5956                           
  5957                           ;newmain.c: 24:     TCN75A_SetFaultQueue(1);
  5958     1C91  3001               	movlw	1
  5959     1C92  120A  158A  2001  160A  158A  	fcall	_TCN75A_SetFaultQueue
  5960     1C97                     l45:
  5961     1C97  0008               	return
  5962     1C98                     __end_of_setupSensorForNormalMode:
  5963                           
  5964                           	psect	text21
  5965     1B30                     __ptext21:	
  5966 ;; *************** function _TCN75A_SetRangeTemp *****************
  5967 ;; Defined at:
  5968 ;;		line 57 in file "TCN75A.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  val_down        4   69[BANK0 ] float 
  5971 ;;  val_up          4   73[BANK0 ] float 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5983 ;;      Params:         0       8       0       0       0
  5984 ;;      Locals:         0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0
  5986 ;;      Totals:         0       8       0       0       0
  5987 ;;Total ram usage:        8 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 4
  5990 ;; This function calls:
  5991 ;;		_TCN75A_SetHystTemp
  5992 ;;		_TCN75A_SetLimitTemp
  5993 ;; This function is called by:
  5994 ;;		_setupSensorForNormalMode
  5995 ;;		_setupSensorForSafetyMode
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999     1B30                     _TCN75A_SetRangeTemp:	
  6000                           ;psect for function _TCN75A_SetRangeTemp
  6001                           
  6002     1B30                     l3550:	
  6003                           ;incstack = 0
  6004                           ; Regs used in _TCN75A_SetRangeTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6005                           
  6006                           
  6007                           ;TCN75A.c: 58:     TCN75A_SetHystTemp(val_down);
  6008     1B30  1283               	bcf	3,5	;RP0=0, select bank0
  6009     1B31  1303               	bcf	3,6	;RP1=0, select bank0
  6010     1B32  0868               	movf	TCN75A_SetRangeTemp@val_down+3,w
  6011     1B33  00E4               	movwf	TCN75A_SetHystTemp@val+3
  6012     1B34  0867               	movf	TCN75A_SetRangeTemp@val_down+2,w
  6013     1B35  00E3               	movwf	TCN75A_SetHystTemp@val+2
  6014     1B36  0866               	movf	TCN75A_SetRangeTemp@val_down+1,w
  6015     1B37  00E2               	movwf	TCN75A_SetHystTemp@val+1
  6016     1B38  0865               	movf	TCN75A_SetRangeTemp@val_down,w
  6017     1B39  00E1               	movwf	TCN75A_SetHystTemp@val
  6018     1B3A  160A  158A  2271  160A  158A  	fcall	_TCN75A_SetHystTemp
  6019                           
  6020                           ;TCN75A.c: 59:     TCN75A_SetLimitTemp(val_up);
  6021     1B3F  1283               	bcf	3,5	;RP0=0, select bank0
  6022     1B40  1303               	bcf	3,6	;RP1=0, select bank0
  6023     1B41  086C               	movf	TCN75A_SetRangeTemp@val_up+3,w
  6024     1B42  00E4               	movwf	TCN75A_SetLimitTemp@val+3
  6025     1B43  086B               	movf	TCN75A_SetRangeTemp@val_up+2,w
  6026     1B44  00E3               	movwf	TCN75A_SetLimitTemp@val+2
  6027     1B45  086A               	movf	TCN75A_SetRangeTemp@val_up+1,w
  6028     1B46  00E2               	movwf	TCN75A_SetLimitTemp@val+1
  6029     1B47  0869               	movf	TCN75A_SetRangeTemp@val_up,w
  6030     1B48  00E1               	movwf	TCN75A_SetLimitTemp@val
  6031     1B49  160A  158A  2282  160A  158A  	fcall	_TCN75A_SetLimitTemp
  6032     1B4E                     l230:
  6033     1B4E  0008               	return
  6034     1B4F                     __end_of_TCN75A_SetRangeTemp:
  6035                           
  6036                           	psect	text22
  6037     1A82                     __ptext22:	
  6038 ;; *************** function _TCN75A_SetLimitTemp *****************
  6039 ;; Defined at:
  6040 ;;		line 53 in file "TCN75A.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  val             4   65[BANK0 ] float 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6054 ;;      Params:         0       4       0       0       0
  6055 ;;      Locals:         0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0
  6057 ;;      Totals:         0       4       0       0       0
  6058 ;;Total ram usage:        4 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 3
  6061 ;; This function calls:
  6062 ;;		_TCN75A_SetTemp
  6063 ;; This function is called by:
  6064 ;;		_TCN75A_SetRangeTemp
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068     1A82                     _TCN75A_SetLimitTemp:	
  6069                           ;psect for function _TCN75A_SetLimitTemp
  6070                           
  6071     1A82                     l3464:	
  6072                           ;incstack = 0
  6073                           ; Regs used in _TCN75A_SetLimitTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6074                           
  6075                           
  6076                           ;TCN75A.c: 54:     TCN75A_SetTemp(0x03, val);
  6077     1A82  1283               	bcf	3,5	;RP0=0, select bank0
  6078     1A83  1303               	bcf	3,6	;RP1=0, select bank0
  6079     1A84  0864               	movf	TCN75A_SetLimitTemp@val+3,w
  6080     1A85  00D7               	movwf	TCN75A_SetTemp@value+3
  6081     1A86  0863               	movf	TCN75A_SetLimitTemp@val+2,w
  6082     1A87  00D6               	movwf	TCN75A_SetTemp@value+2
  6083     1A88  0862               	movf	TCN75A_SetLimitTemp@val+1,w
  6084     1A89  00D5               	movwf	TCN75A_SetTemp@value+1
  6085     1A8A  0861               	movf	TCN75A_SetLimitTemp@val,w
  6086     1A8B  00D4               	movwf	TCN75A_SetTemp@value
  6087     1A8C  3003               	movlw	3
  6088     1A8D  160A  118A  21F7  160A  158A  	fcall	_TCN75A_SetTemp
  6089     1A92                     l227:
  6090     1A92  0008               	return
  6091     1A93                     __end_of_TCN75A_SetLimitTemp:
  6092                           
  6093                           	psect	text23
  6094     1A71                     __ptext23:	
  6095 ;; *************** function _TCN75A_SetHystTemp *****************
  6096 ;; Defined at:
  6097 ;;		line 49 in file "TCN75A.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  val             4   65[BANK0 ] float 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6111 ;;      Params:         0       4       0       0       0
  6112 ;;      Locals:         0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0
  6114 ;;      Totals:         0       4       0       0       0
  6115 ;;Total ram usage:        4 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 3
  6118 ;; This function calls:
  6119 ;;		_TCN75A_SetTemp
  6120 ;; This function is called by:
  6121 ;;		_TCN75A_SetRangeTemp
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125     1A71                     _TCN75A_SetHystTemp:	
  6126                           ;psect for function _TCN75A_SetHystTemp
  6127                           
  6128     1A71                     l3462:	
  6129                           ;incstack = 0
  6130                           ; Regs used in _TCN75A_SetHystTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6131                           
  6132                           
  6133                           ;TCN75A.c: 50:     TCN75A_SetTemp(0x02, val);
  6134     1A71  1283               	bcf	3,5	;RP0=0, select bank0
  6135     1A72  1303               	bcf	3,6	;RP1=0, select bank0
  6136     1A73  0864               	movf	TCN75A_SetHystTemp@val+3,w
  6137     1A74  00D7               	movwf	TCN75A_SetTemp@value+3
  6138     1A75  0863               	movf	TCN75A_SetHystTemp@val+2,w
  6139     1A76  00D6               	movwf	TCN75A_SetTemp@value+2
  6140     1A77  0862               	movf	TCN75A_SetHystTemp@val+1,w
  6141     1A78  00D5               	movwf	TCN75A_SetTemp@value+1
  6142     1A79  0861               	movf	TCN75A_SetHystTemp@val,w
  6143     1A7A  00D4               	movwf	TCN75A_SetTemp@value
  6144     1A7B  3002               	movlw	2
  6145     1A7C  160A  118A  21F7  160A  158A  	fcall	_TCN75A_SetTemp
  6146     1A81                     l224:
  6147     1A81  0008               	return
  6148     1A82                     __end_of_TCN75A_SetHystTemp:
  6149                           
  6150                           	psect	text24
  6151     11F7                     __ptext24:	
  6152 ;; *************** function _TCN75A_SetTemp *****************
  6153 ;; Defined at:
  6154 ;;		line 70 in file "TCN75A.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;  reg             1    wreg     unsigned char 
  6157 ;;  value           4   52[BANK0 ] float 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  reg             1   60[BANK0 ] unsigned char 
  6160 ;;  tempHigh        1   64[BANK0 ] unsigned char 
  6161 ;;  tempLow         1   63[BANK0 ] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6171 ;;      Params:         0       4       0       0       0
  6172 ;;      Locals:         0       5       0       0       0
  6173 ;;      Temps:          0       4       0       0       0
  6174 ;;      Totals:         0      13       0       0       0
  6175 ;;Total ram usage:       13 bytes
  6176 ;; Hardware stack levels used: 1
  6177 ;; Hardware stack levels required when called: 2
  6178 ;; This function calls:
  6179 ;;		_I2C_Master_Start
  6180 ;;		_I2C_Master_Stop
  6181 ;;		_I2C_Master_Write
  6182 ;;		___flge
  6183 ;;		___flsub
  6184 ;;		___fltol
  6185 ;;		___xxtofl
  6186 ;; This function is called by:
  6187 ;;		_TCN75A_SetHystTemp
  6188 ;;		_TCN75A_SetLimitTemp
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192     11F7                     _TCN75A_SetTemp:	
  6193                           ;psect for function _TCN75A_SetTemp
  6194                           
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in _TCN75A_SetTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6198                           ;TCN75A_SetTemp@reg stored from wreg
  6199     11F7  1283               	bcf	3,5	;RP0=0, select bank0
  6200     11F8  1303               	bcf	3,6	;RP1=0, select bank0
  6201     11F9  00DC               	movwf	TCN75A_SetTemp@reg
  6202     11FA                     l3192:
  6203                           
  6204                           ;TCN75A.c: 72:     if(value < -40.0f) value = -40.0f;
  6205     11FA  0857               	movf	TCN75A_SetTemp@value+3,w
  6206     11FB  00CB               	movwf	___flge@ff1+3
  6207     11FC  0856               	movf	TCN75A_SetTemp@value+2,w
  6208     11FD  00CA               	movwf	___flge@ff1+2
  6209     11FE  0855               	movf	TCN75A_SetTemp@value+1,w
  6210     11FF  00C9               	movwf	___flge@ff1+1
  6211     1200  0854               	movf	TCN75A_SetTemp@value,w
  6212     1201  00C8               	movwf	___flge@ff1
  6213     1202  30C2               	movlw	194
  6214     1203  00CF               	movwf	___flge@ff2+3
  6215     1204  3020               	movlw	32
  6216     1205  00CE               	movwf	___flge@ff2+2
  6217     1206  3000               	movlw	0
  6218     1207  00CD               	movwf	___flge@ff2+1
  6219     1208  3000               	movlw	0
  6220     1209  00CC               	movwf	___flge@ff2
  6221     120A  160A  158A  275C  160A  118A  	fcall	___flge
  6222     120F  1803               	btfsc	3,0
  6223     1210  2A12               	goto	u4501
  6224     1211  2A13               	goto	u4500
  6225     1212                     u4501:
  6226     1212  2A1D               	goto	l3196
  6227     1213                     u4500:
  6228     1213                     l3194:
  6229     1213  30C2               	movlw	194
  6230     1214  1283               	bcf	3,5	;RP0=0, select bank0
  6231     1215  1303               	bcf	3,6	;RP1=0, select bank0
  6232     1216  00D7               	movwf	TCN75A_SetTemp@value+3
  6233     1217  3020               	movlw	32
  6234     1218  00D6               	movwf	TCN75A_SetTemp@value+2
  6235     1219  3000               	movlw	0
  6236     121A  00D5               	movwf	TCN75A_SetTemp@value+1
  6237     121B  3000               	movlw	0
  6238     121C  00D4               	movwf	TCN75A_SetTemp@value
  6239     121D                     l3196:
  6240                           
  6241                           ;TCN75A.c: 73:     if(value > 125.0f) value = 125.0f;
  6242     121D  3042               	movlw	66
  6243     121E  1283               	bcf	3,5	;RP0=0, select bank0
  6244     121F  1303               	bcf	3,6	;RP1=0, select bank0
  6245     1220  00CB               	movwf	___flge@ff1+3
  6246     1221  30FA               	movlw	250
  6247     1222  00CA               	movwf	___flge@ff1+2
  6248     1223  3000               	movlw	0
  6249     1224  00C9               	movwf	___flge@ff1+1
  6250     1225  3000               	movlw	0
  6251     1226  00C8               	movwf	___flge@ff1
  6252     1227  0857               	movf	TCN75A_SetTemp@value+3,w
  6253     1228  00CF               	movwf	___flge@ff2+3
  6254     1229  0856               	movf	TCN75A_SetTemp@value+2,w
  6255     122A  00CE               	movwf	___flge@ff2+2
  6256     122B  0855               	movf	TCN75A_SetTemp@value+1,w
  6257     122C  00CD               	movwf	___flge@ff2+1
  6258     122D  0854               	movf	TCN75A_SetTemp@value,w
  6259     122E  00CC               	movwf	___flge@ff2
  6260     122F  160A  158A  275C  160A  118A  	fcall	___flge
  6261     1234  1803               	btfsc	3,0
  6262     1235  2A37               	goto	u4511
  6263     1236  2A38               	goto	u4510
  6264     1237                     u4511:
  6265     1237  2A42               	goto	l3200
  6266     1238                     u4510:
  6267     1238                     l3198:
  6268     1238  3042               	movlw	66
  6269     1239  1283               	bcf	3,5	;RP0=0, select bank0
  6270     123A  1303               	bcf	3,6	;RP1=0, select bank0
  6271     123B  00D7               	movwf	TCN75A_SetTemp@value+3
  6272     123C  30FA               	movlw	250
  6273     123D  00D6               	movwf	TCN75A_SetTemp@value+2
  6274     123E  3000               	movlw	0
  6275     123F  00D5               	movwf	TCN75A_SetTemp@value+1
  6276     1240  3000               	movlw	0
  6277     1241  00D4               	movwf	TCN75A_SetTemp@value
  6278     1242                     l3200:
  6279                           
  6280                           ;TCN75A.c: 75:     uint8_t tempHigh = (uint8_t)value;
  6281     1242  1283               	bcf	3,5	;RP0=0, select bank0
  6282     1243  1303               	bcf	3,6	;RP1=0, select bank0
  6283     1244  0857               	movf	TCN75A_SetTemp@value+3,w
  6284     1245  00F3               	movwf	___fltol@f1+3
  6285     1246  0856               	movf	TCN75A_SetTemp@value+2,w
  6286     1247  00F2               	movwf	___fltol@f1+2
  6287     1248  0855               	movf	TCN75A_SetTemp@value+1,w
  6288     1249  00F1               	movwf	___fltol@f1+1
  6289     124A  0854               	movf	TCN75A_SetTemp@value,w
  6290     124B  00F0               	movwf	___fltol@f1
  6291     124C  160A  158A  265B  160A  118A  	fcall	___fltol
  6292     1251  0870               	movf	?___fltol,w
  6293     1252  1283               	bcf	3,5	;RP0=0, select bank0
  6294     1253  1303               	bcf	3,6	;RP1=0, select bank0
  6295     1254  00E0               	movwf	TCN75A_SetTemp@tempHigh
  6296     1255                     l3202:
  6297                           
  6298                           ;TCN75A.c: 76:     uint8_t tempLow = (uint8_t)((value - (float)tempHigh) >= 0.5f ? 0x80 
      +                          : 0x00);
  6299     1255  0860               	movf	TCN75A_SetTemp@tempHigh,w
  6300     1256  00D8               	movwf	??_TCN75A_SetTemp
  6301     1257  01D9               	clrf	??_TCN75A_SetTemp+1
  6302     1258  01DA               	clrf	??_TCN75A_SetTemp+2
  6303     1259  01DB               	clrf	??_TCN75A_SetTemp+3
  6304     125A  085B               	movf	??_TCN75A_SetTemp+3,w
  6305     125B  00F3               	movwf	___xxtofl@val+3
  6306     125C  085A               	movf	??_TCN75A_SetTemp+2,w
  6307     125D  00F2               	movwf	___xxtofl@val+2
  6308     125E  0859               	movf	??_TCN75A_SetTemp+1,w
  6309     125F  00F1               	movwf	___xxtofl@val+1
  6310     1260  0858               	movf	??_TCN75A_SetTemp,w
  6311     1261  00F0               	movwf	___xxtofl@val
  6312     1262  3000               	movlw	0
  6313     1263  160A  118A  2143  160A  118A  	fcall	___xxtofl
  6314     1268  0873               	movf	?___xxtofl+3,w
  6315     1269  1283               	bcf	3,5	;RP0=0, select bank0
  6316     126A  1303               	bcf	3,6	;RP1=0, select bank0
  6317     126B  00BD               	movwf	___flsub@a+3
  6318     126C  0872               	movf	?___xxtofl+2,w
  6319     126D  00BC               	movwf	___flsub@a+2
  6320     126E  0871               	movf	?___xxtofl+1,w
  6321     126F  00BB               	movwf	___flsub@a+1
  6322     1270  0870               	movf	?___xxtofl,w
  6323     1271  00BA               	movwf	___flsub@a
  6324     1272  0857               	movf	TCN75A_SetTemp@value+3,w
  6325     1273  00C1               	movwf	___flsub@b+3
  6326     1274  0856               	movf	TCN75A_SetTemp@value+2,w
  6327     1275  00C0               	movwf	___flsub@b+2
  6328     1276  0855               	movf	TCN75A_SetTemp@value+1,w
  6329     1277  00BF               	movwf	___flsub@b+1
  6330     1278  0854               	movf	TCN75A_SetTemp@value,w
  6331     1279  00BE               	movwf	___flsub@b
  6332     127A  160A  158A  23B3  160A  118A  	fcall	___flsub
  6333     127F  1283               	bcf	3,5	;RP0=0, select bank0
  6334     1280  1303               	bcf	3,6	;RP1=0, select bank0
  6335     1281  083D               	movf	?___flsub+3,w
  6336     1282  00CB               	movwf	___flge@ff1+3
  6337     1283  083C               	movf	?___flsub+2,w
  6338     1284  00CA               	movwf	___flge@ff1+2
  6339     1285  083B               	movf	?___flsub+1,w
  6340     1286  00C9               	movwf	___flge@ff1+1
  6341     1287  083A               	movf	?___flsub,w
  6342     1288  00C8               	movwf	___flge@ff1
  6343     1289  303F               	movlw	63
  6344     128A  00CF               	movwf	___flge@ff2+3
  6345     128B  3000               	movlw	0
  6346     128C  00CE               	movwf	___flge@ff2+2
  6347     128D  3000               	movlw	0
  6348     128E  00CD               	movwf	___flge@ff2+1
  6349     128F  3000               	movlw	0
  6350     1290  00CC               	movwf	___flge@ff2
  6351     1291  160A  158A  275C  160A  118A  	fcall	___flge
  6352     1296  1803               	btfsc	3,0
  6353     1297  2A99               	goto	u4521
  6354     1298  2A9A               	goto	u4520
  6355     1299                     u4521:
  6356     1299  2A9F               	goto	l3206
  6357     129A                     u4520:
  6358     129A                     l3204:
  6359     129A  1283               	bcf	3,5	;RP0=0, select bank0
  6360     129B  1303               	bcf	3,6	;RP1=0, select bank0
  6361     129C  01DD               	clrf	_TCN75A_SetTemp$229
  6362     129D  01DE               	clrf	_TCN75A_SetTemp$229+1
  6363     129E  2AA5               	goto	l244
  6364     129F                     l3206:
  6365     129F  3080               	movlw	128
  6366     12A0  1283               	bcf	3,5	;RP0=0, select bank0
  6367     12A1  1303               	bcf	3,6	;RP1=0, select bank0
  6368     12A2  00DD               	movwf	_TCN75A_SetTemp$229
  6369     12A3  3000               	movlw	0
  6370     12A4  00DE               	movwf	_TCN75A_SetTemp$229+1
  6371     12A5                     l244:
  6372     12A5  085D               	movf	_TCN75A_SetTemp$229,w
  6373     12A6  00DF               	movwf	TCN75A_SetTemp@tempLow
  6374     12A7                     l3208:
  6375                           
  6376                           ;TCN75A.c: 78:     I2C_Master_Start();
  6377     12A7  160A  158A  21D5  160A  118A  	fcall	_I2C_Master_Start
  6378     12AC                     l3210:
  6379                           
  6380                           ;TCN75A.c: 79:     I2C_Master_Write((unsigned char)(TCN75A_Address << 1));
  6381     12AC  1683               	bsf	3,5	;RP0=1, select bank1
  6382     12AD  1303               	bcf	3,6	;RP1=0, select bank1
  6383     12AE  086F               	movf	_TCN75A_Address^(0+128),w
  6384     12AF  1283               	bcf	3,5	;RP0=0, select bank0
  6385     12B0  1303               	bcf	3,6	;RP1=0, select bank0
  6386     12B1  00D8               	movwf	??_TCN75A_SetTemp
  6387     12B2  0758               	addwf	??_TCN75A_SetTemp,w
  6388     12B3  160A  158A  222F  160A  118A  	fcall	_I2C_Master_Write
  6389     12B8                     l3212:
  6390                           
  6391                           ;TCN75A.c: 80:     I2C_Master_Write(reg);
  6392     12B8  1283               	bcf	3,5	;RP0=0, select bank0
  6393     12B9  1303               	bcf	3,6	;RP1=0, select bank0
  6394     12BA  085C               	movf	TCN75A_SetTemp@reg,w
  6395     12BB  160A  158A  222F  160A  118A  	fcall	_I2C_Master_Write
  6396     12C0                     l3214:
  6397                           
  6398                           ;TCN75A.c: 81:     I2C_Master_Write(tempHigh);
  6399     12C0  1283               	bcf	3,5	;RP0=0, select bank0
  6400     12C1  1303               	bcf	3,6	;RP1=0, select bank0
  6401     12C2  0860               	movf	TCN75A_SetTemp@tempHigh,w
  6402     12C3  160A  158A  222F  160A  118A  	fcall	_I2C_Master_Write
  6403     12C8                     l3216:
  6404                           
  6405                           ;TCN75A.c: 82:     I2C_Master_Write(tempLow);
  6406     12C8  1283               	bcf	3,5	;RP0=0, select bank0
  6407     12C9  1303               	bcf	3,6	;RP1=0, select bank0
  6408     12CA  085F               	movf	TCN75A_SetTemp@tempLow,w
  6409     12CB  160A  158A  222F  160A  118A  	fcall	_I2C_Master_Write
  6410     12D0                     l3218:
  6411                           
  6412                           ;TCN75A.c: 83:     I2C_Master_Stop();
  6413     12D0  160A  158A  21DE  160A  118A  	fcall	_I2C_Master_Stop
  6414     12D5                     l245:
  6415     12D5  0008               	return
  6416     12D6                     __end_of_TCN75A_SetTemp:
  6417                           
  6418                           	psect	text25
  6419     1E5B                     __ptext25:	
  6420 ;; *************** function ___fltol *****************
  6421 ;; Defined at:
  6422 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  f1              4    0[COMMON] void 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  exp1            1    9[COMMON] unsigned char 
  6427 ;;  sign1           1    8[COMMON] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  4    0[COMMON] long 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6437 ;;      Params:         4       0       0       0       0
  6438 ;;      Locals:         2       0       0       0       0
  6439 ;;      Temps:          4       0       0       0       0
  6440 ;;      Totals:        10       0       0       0       0
  6441 ;;Total ram usage:       10 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_TCN75A_SetTemp
  6447 ;;		_efgtoa
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451     1E5B                     ___fltol:	
  6452                           ;psect for function ___fltol
  6453                           
  6454     1E5B                     l2720:	
  6455                           ;incstack = 0
  6456                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6457                           
  6458     1E5B  1003               	clrc
  6459     1E5C  0D72               	rlf	___fltol@f1+2,w
  6460     1E5D  0D73               	rlf	___fltol@f1+3,w
  6461     1E5E  00F9               	movwf	___fltol@exp1
  6462     1E5F  0879               	movf	___fltol@exp1,w
  6463     1E60  1D03               	btfss	3,2
  6464     1E61  2E63               	goto	u3331
  6465     1E62  2E64               	goto	u3330
  6466     1E63                     u3331:
  6467     1E63  2E6D               	goto	l2726
  6468     1E64                     u3330:
  6469     1E64                     l2722:
  6470     1E64  3000               	movlw	0
  6471     1E65  00F3               	movwf	?___fltol+3
  6472     1E66  3000               	movlw	0
  6473     1E67  00F2               	movwf	?___fltol+2
  6474     1E68  3000               	movlw	0
  6475     1E69  00F1               	movwf	?___fltol+1
  6476     1E6A  3000               	movlw	0
  6477     1E6B  00F0               	movwf	?___fltol
  6478     1E6C  2ECE               	goto	l571
  6479     1E6D                     l2726:
  6480     1E6D  0870               	movf	___fltol@f1,w
  6481     1E6E  00F4               	movwf	??___fltol
  6482     1E6F  0871               	movf	___fltol@f1+1,w
  6483     1E70  00F5               	movwf	??___fltol+1
  6484     1E71  0872               	movf	___fltol@f1+2,w
  6485     1E72  00F6               	movwf	??___fltol+2
  6486     1E73  0873               	movf	___fltol@f1+3,w
  6487     1E74  00F7               	movwf	??___fltol+3
  6488     1E75  301F               	movlw	31
  6489     1E76                     u3345:
  6490     1E76  1003               	clrc
  6491     1E77  0CF7               	rrf	??___fltol+3,f
  6492     1E78  0CF6               	rrf	??___fltol+2,f
  6493     1E79  0CF5               	rrf	??___fltol+1,f
  6494     1E7A  0CF4               	rrf	??___fltol,f
  6495     1E7B                     u3340:
  6496     1E7B  3EFF               	addlw	-1
  6497     1E7C  1D03               	skipz
  6498     1E7D  2E76               	goto	u3345
  6499     1E7E  0874               	movf	??___fltol,w
  6500     1E7F  00F8               	movwf	___fltol@sign1
  6501     1E80                     l2728:
  6502     1E80  17F2               	bsf	___fltol@f1+2,7
  6503     1E81                     l2730:
  6504     1E81  30FF               	movlw	255
  6505     1E82  05F0               	andwf	___fltol@f1,f
  6506     1E83  30FF               	movlw	255
  6507     1E84  05F1               	andwf	___fltol@f1+1,f
  6508     1E85  30FF               	movlw	255
  6509     1E86  05F2               	andwf	___fltol@f1+2,f
  6510     1E87  3000               	movlw	0
  6511     1E88  05F3               	andwf	___fltol@f1+3,f
  6512     1E89                     l2732:
  6513     1E89  3096               	movlw	150
  6514     1E8A  02F9               	subwf	___fltol@exp1,f
  6515     1E8B                     l2734:
  6516     1E8B  1FF9               	btfss	___fltol@exp1,7
  6517     1E8C  2E8E               	goto	u3351
  6518     1E8D  2E8F               	goto	u3350
  6519     1E8E                     u3351:
  6520     1E8E  2EA7               	goto	l2744
  6521     1E8F                     u3350:
  6522     1E8F                     l2736:
  6523     1E8F  0879               	movf	___fltol@exp1,w
  6524     1E90  3A80               	xorlw	128
  6525     1E91  3E97               	addlw	151
  6526     1E92  1803               	skipnc
  6527     1E93  2E95               	goto	u3361
  6528     1E94  2E96               	goto	u3360
  6529     1E95                     u3361:
  6530     1E95  2E97               	goto	l2742
  6531     1E96                     u3360:
  6532     1E96  2E64               	goto	l2722
  6533     1E97                     l2742:
  6534     1E97  3001               	movlw	1
  6535     1E98                     u3375:
  6536     1E98  1003               	clrc
  6537     1E99  0CF3               	rrf	___fltol@f1+3,f
  6538     1E9A  0CF2               	rrf	___fltol@f1+2,f
  6539     1E9B  0CF1               	rrf	___fltol@f1+1,f
  6540     1E9C  0CF0               	rrf	___fltol@f1,f
  6541     1E9D  3EFF               	addlw	-1
  6542     1E9E  1D03               	skipz
  6543     1E9F  2E98               	goto	u3375
  6544     1EA0  3001               	movlw	1
  6545     1EA1  07F9               	addwf	___fltol@exp1,f
  6546     1EA2  1D03               	btfss	3,2
  6547     1EA3  2EA5               	goto	u3381
  6548     1EA4  2EA6               	goto	u3380
  6549     1EA5                     u3381:
  6550     1EA5  2E97               	goto	l2742
  6551     1EA6                     u3380:
  6552     1EA6  2EBE               	goto	l2752
  6553     1EA7                     l2744:
  6554     1EA7  3020               	movlw	32
  6555     1EA8  0279               	subwf	___fltol@exp1,w
  6556     1EA9  1C03               	skipc
  6557     1EAA  2EAC               	goto	u3391
  6558     1EAB  2EAD               	goto	u3390
  6559     1EAC                     u3391:
  6560     1EAC  2EB9               	goto	l578
  6561     1EAD                     u3390:
  6562     1EAD  2E64               	goto	l2722
  6563     1EAE                     l2750:
  6564     1EAE  3001               	movlw	1
  6565     1EAF  00F4               	movwf	??___fltol
  6566     1EB0                     u3405:
  6567     1EB0  1003               	clrc
  6568     1EB1  0DF0               	rlf	___fltol@f1,f
  6569     1EB2  0DF1               	rlf	___fltol@f1+1,f
  6570     1EB3  0DF2               	rlf	___fltol@f1+2,f
  6571     1EB4  0DF3               	rlf	___fltol@f1+3,f
  6572     1EB5  0BF4               	decfsz	??___fltol,f
  6573     1EB6  2EB0               	goto	u3405
  6574     1EB7  3001               	movlw	1
  6575     1EB8  02F9               	subwf	___fltol@exp1,f
  6576     1EB9                     l578:
  6577     1EB9  0879               	movf	___fltol@exp1,w
  6578     1EBA  1D03               	btfss	3,2
  6579     1EBB  2EBD               	goto	u3411
  6580     1EBC  2EBE               	goto	u3410
  6581     1EBD                     u3411:
  6582     1EBD  2EAE               	goto	l2750
  6583     1EBE                     u3410:
  6584     1EBE                     l2752:
  6585     1EBE  0878               	movf	___fltol@sign1,w
  6586     1EBF  1903               	btfsc	3,2
  6587     1EC0  2EC2               	goto	u3421
  6588     1EC1  2EC3               	goto	u3420
  6589     1EC2                     u3421:
  6590     1EC2  2ECE               	goto	l581
  6591     1EC3                     u3420:
  6592     1EC3                     l2754:
  6593     1EC3  09F0               	comf	___fltol@f1,f
  6594     1EC4  09F1               	comf	___fltol@f1+1,f
  6595     1EC5  09F2               	comf	___fltol@f1+2,f
  6596     1EC6  09F3               	comf	___fltol@f1+3,f
  6597     1EC7  0AF0               	incf	___fltol@f1,f
  6598     1EC8  1903               	skipnz
  6599     1EC9  0AF1               	incf	___fltol@f1+1,f
  6600     1ECA  1903               	skipnz
  6601     1ECB  0AF2               	incf	___fltol@f1+2,f
  6602     1ECC  1903               	skipnz
  6603     1ECD  0AF3               	incf	___fltol@f1+3,f
  6604     1ECE                     l581:
  6605     1ECE                     l571:
  6606     1ECE  0008               	return
  6607     1ECF                     __end_of___fltol:
  6608                           
  6609                           	psect	text26
  6610     1BB3                     __ptext26:	
  6611 ;; *************** function ___flsub *****************
  6612 ;; Defined at:
  6613 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  a               4   26[BANK0 ] long 
  6616 ;;  b               4   30[BANK0 ] long 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  4   26[BANK0 ] long 
  6621 ;; Registers used:
  6622 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         0       8       0       0       0
  6629 ;;      Locals:         0       0       0       0       0
  6630 ;;      Temps:          0       0       0       0       0
  6631 ;;      Totals:         0       8       0       0       0
  6632 ;;Total ram usage:        8 bytes
  6633 ;; Hardware stack levels used: 1
  6634 ;; Hardware stack levels required when called: 1
  6635 ;; This function calls:
  6636 ;;		___fladd
  6637 ;; This function is called by:
  6638 ;;		_TCN75A_SetTemp
  6639 ;;		_efgtoa
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643     1BB3                     ___flsub:	
  6644                           ;psect for function ___flsub
  6645                           
  6646     1BB3                     l2756:	
  6647                           ;incstack = 0
  6648                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6649                           
  6650     1BB3  3080               	movlw	128
  6651     1BB4  1283               	bcf	3,5	;RP0=0, select bank0
  6652     1BB5  1303               	bcf	3,6	;RP1=0, select bank0
  6653     1BB6  06BD               	xorwf	___flsub@a+3,f
  6654     1BB7                     l2758:
  6655     1BB7  0841               	movf	___flsub@b+3,w
  6656     1BB8  00A3               	movwf	___fladd@b+3
  6657     1BB9  0840               	movf	___flsub@b+2,w
  6658     1BBA  00A2               	movwf	___fladd@b+2
  6659     1BBB  083F               	movf	___flsub@b+1,w
  6660     1BBC  00A1               	movwf	___fladd@b+1
  6661     1BBD  083E               	movf	___flsub@b,w
  6662     1BBE  00A0               	movwf	___fladd@b
  6663     1BBF  083D               	movf	___flsub@a+3,w
  6664     1BC0  00A7               	movwf	___fladd@a+3
  6665     1BC1  083C               	movf	___flsub@a+2,w
  6666     1BC2  00A6               	movwf	___fladd@a+2
  6667     1BC3  083B               	movf	___flsub@a+1,w
  6668     1BC4  00A5               	movwf	___fladd@a+1
  6669     1BC5  083A               	movf	___flsub@a,w
  6670     1BC6  00A4               	movwf	___fladd@a
  6671     1BC7  120A  158A  201D  160A  158A  	fcall	___fladd
  6672     1BCC  1283               	bcf	3,5	;RP0=0, select bank0
  6673     1BCD  1303               	bcf	3,6	;RP1=0, select bank0
  6674     1BCE  0823               	movf	?___fladd+3,w
  6675     1BCF  00BD               	movwf	?___flsub+3
  6676     1BD0  0822               	movf	?___fladd+2,w
  6677     1BD1  00BC               	movwf	?___flsub+2
  6678     1BD2  0821               	movf	?___fladd+1,w
  6679     1BD3  00BB               	movwf	?___flsub+1
  6680     1BD4  0820               	movf	?___fladd,w
  6681     1BD5  00BA               	movwf	?___flsub
  6682     1BD6                     l724:
  6683     1BD6  0008               	return
  6684     1BD7                     __end_of___flsub:
  6685                           
  6686                           	psect	text27
  6687     1F5C                     __ptext27:	
  6688 ;; *************** function ___flge *****************
  6689 ;; Defined at:
  6690 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  ff1             4   40[BANK0 ] long 
  6693 ;;  ff2             4   44[BANK0 ] long 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;		None
  6696 ;; Return value:  Size  Location     Type
  6697 ;;		None               void
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6705 ;;      Params:         0       8       0       0       0
  6706 ;;      Locals:         0       0       0       0       0
  6707 ;;      Temps:          0       4       0       0       0
  6708 ;;      Totals:         0      12       0       0       0
  6709 ;;Total ram usage:       12 bytes
  6710 ;; Hardware stack levels used: 1
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_main
  6715 ;;		_TCN75A_SetTemp
  6716 ;;		_efgtoa
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720     1F5C                     ___flge:	
  6721                           ;psect for function ___flge
  6722                           
  6723     1F5C                     l2692:	
  6724                           ;incstack = 0
  6725                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6726                           
  6727     1F5C  3000               	movlw	0
  6728     1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  6729     1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  6730     1F5F  0548               	andwf	___flge@ff1,w
  6731     1F60  00D0               	movwf	??___flge
  6732     1F61  3000               	movlw	0
  6733     1F62  0549               	andwf	___flge@ff1+1,w
  6734     1F63  00D1               	movwf	??___flge+1
  6735     1F64  3080               	movlw	128
  6736     1F65  054A               	andwf	___flge@ff1+2,w
  6737     1F66  00D2               	movwf	??___flge+2
  6738     1F67  307F               	movlw	127
  6739     1F68  054B               	andwf	___flge@ff1+3,w
  6740     1F69  00D3               	movwf	??___flge+3
  6741     1F6A  0853               	movf	??___flge+3,w
  6742     1F6B  0452               	iorwf	??___flge+2,w
  6743     1F6C  0451               	iorwf	??___flge+1,w
  6744     1F6D  0450               	iorwf	??___flge,w
  6745     1F6E  1D03               	skipz
  6746     1F6F  2F71               	goto	u3251
  6747     1F70  2F72               	goto	u3250
  6748     1F71                     u3251:
  6749     1F71  2F7A               	goto	l555
  6750     1F72                     u3250:
  6751     1F72                     l2694:
  6752     1F72  3000               	movlw	0
  6753     1F73  00CB               	movwf	___flge@ff1+3
  6754     1F74  3000               	movlw	0
  6755     1F75  00CA               	movwf	___flge@ff1+2
  6756     1F76  3000               	movlw	0
  6757     1F77  00C9               	movwf	___flge@ff1+1
  6758     1F78  3000               	movlw	0
  6759     1F79  00C8               	movwf	___flge@ff1
  6760     1F7A                     l555:
  6761     1F7A  3000               	movlw	0
  6762     1F7B  054C               	andwf	___flge@ff2,w
  6763     1F7C  00D0               	movwf	??___flge
  6764     1F7D  3000               	movlw	0
  6765     1F7E  054D               	andwf	___flge@ff2+1,w
  6766     1F7F  00D1               	movwf	??___flge+1
  6767     1F80  3080               	movlw	128
  6768     1F81  054E               	andwf	___flge@ff2+2,w
  6769     1F82  00D2               	movwf	??___flge+2
  6770     1F83  307F               	movlw	127
  6771     1F84  054F               	andwf	___flge@ff2+3,w
  6772     1F85  00D3               	movwf	??___flge+3
  6773     1F86  0853               	movf	??___flge+3,w
  6774     1F87  0452               	iorwf	??___flge+2,w
  6775     1F88  0451               	iorwf	??___flge+1,w
  6776     1F89  0450               	iorwf	??___flge,w
  6777     1F8A  1D03               	skipz
  6778     1F8B  2F8D               	goto	u3261
  6779     1F8C  2F8E               	goto	u3260
  6780     1F8D                     u3261:
  6781     1F8D  2F96               	goto	l2698
  6782     1F8E                     u3260:
  6783     1F8E                     l2696:
  6784     1F8E  3000               	movlw	0
  6785     1F8F  00CF               	movwf	___flge@ff2+3
  6786     1F90  3000               	movlw	0
  6787     1F91  00CE               	movwf	___flge@ff2+2
  6788     1F92  3000               	movlw	0
  6789     1F93  00CD               	movwf	___flge@ff2+1
  6790     1F94  3000               	movlw	0
  6791     1F95  00CC               	movwf	___flge@ff2
  6792     1F96                     l2698:
  6793     1F96  1FCB               	btfss	___flge@ff1+3,7
  6794     1F97  2F99               	goto	u3271
  6795     1F98  2F9A               	goto	u3270
  6796     1F99                     u3271:
  6797     1F99  2FBE               	goto	l2702
  6798     1F9A                     u3270:
  6799     1F9A                     l2700:
  6800     1F9A  3000               	movlw	0
  6801     1F9B  00D0               	movwf	??___flge
  6802     1F9C  3000               	movlw	0
  6803     1F9D  00D1               	movwf	??___flge+1
  6804     1F9E  3000               	movlw	0
  6805     1F9F  00D2               	movwf	??___flge+2
  6806     1FA0  3080               	movlw	128
  6807     1FA1  00D3               	movwf	??___flge+3
  6808     1FA2  0848               	movf	___flge@ff1,w
  6809     1FA3  02D0               	subwf	??___flge,f
  6810     1FA4  0849               	movf	___flge@ff1+1,w
  6811     1FA5  1C03               	skipc
  6812     1FA6  0F49               	incfsz	___flge@ff1+1,w
  6813     1FA7  2FA9               	goto	u3281
  6814     1FA8  2FAA               	goto	u3282
  6815     1FA9                     u3281:
  6816     1FA9  02D1               	subwf	??___flge+1,f
  6817     1FAA                     u3282:
  6818     1FAA  084A               	movf	___flge@ff1+2,w
  6819     1FAB  1C03               	skipc
  6820     1FAC  0F4A               	incfsz	___flge@ff1+2,w
  6821     1FAD  2FAF               	goto	u3283
  6822     1FAE  2FB0               	goto	u3284
  6823     1FAF                     u3283:
  6824     1FAF  02D2               	subwf	??___flge+2,f
  6825     1FB0                     u3284:
  6826     1FB0  084B               	movf	___flge@ff1+3,w
  6827     1FB1  1C03               	skipc
  6828     1FB2  0F4B               	incfsz	___flge@ff1+3,w
  6829     1FB3  2FB5               	goto	u3285
  6830     1FB4  2FB6               	goto	u3286
  6831     1FB5                     u3285:
  6832     1FB5  02D3               	subwf	??___flge+3,f
  6833     1FB6                     u3286:
  6834     1FB6  0853               	movf	??___flge+3,w
  6835     1FB7  00CB               	movwf	___flge@ff1+3
  6836     1FB8  0852               	movf	??___flge+2,w
  6837     1FB9  00CA               	movwf	___flge@ff1+2
  6838     1FBA  0851               	movf	??___flge+1,w
  6839     1FBB  00C9               	movwf	___flge@ff1+1
  6840     1FBC  0850               	movf	??___flge,w
  6841     1FBD  00C8               	movwf	___flge@ff1
  6842     1FBE                     l2702:
  6843     1FBE  1FCF               	btfss	___flge@ff2+3,7
  6844     1FBF  2FC1               	goto	u3291
  6845     1FC0  2FC2               	goto	u3290
  6846     1FC1                     u3291:
  6847     1FC1  2FE6               	goto	l558
  6848     1FC2                     u3290:
  6849     1FC2                     l2704:
  6850     1FC2  3000               	movlw	0
  6851     1FC3  00D0               	movwf	??___flge
  6852     1FC4  3000               	movlw	0
  6853     1FC5  00D1               	movwf	??___flge+1
  6854     1FC6  3000               	movlw	0
  6855     1FC7  00D2               	movwf	??___flge+2
  6856     1FC8  3080               	movlw	128
  6857     1FC9  00D3               	movwf	??___flge+3
  6858     1FCA  084C               	movf	___flge@ff2,w
  6859     1FCB  02D0               	subwf	??___flge,f
  6860     1FCC  084D               	movf	___flge@ff2+1,w
  6861     1FCD  1C03               	skipc
  6862     1FCE  0F4D               	incfsz	___flge@ff2+1,w
  6863     1FCF  2FD1               	goto	u3301
  6864     1FD0  2FD2               	goto	u3302
  6865     1FD1                     u3301:
  6866     1FD1  02D1               	subwf	??___flge+1,f
  6867     1FD2                     u3302:
  6868     1FD2  084E               	movf	___flge@ff2+2,w
  6869     1FD3  1C03               	skipc
  6870     1FD4  0F4E               	incfsz	___flge@ff2+2,w
  6871     1FD5  2FD7               	goto	u3303
  6872     1FD6  2FD8               	goto	u3304
  6873     1FD7                     u3303:
  6874     1FD7  02D2               	subwf	??___flge+2,f
  6875     1FD8                     u3304:
  6876     1FD8  084F               	movf	___flge@ff2+3,w
  6877     1FD9  1C03               	skipc
  6878     1FDA  0F4F               	incfsz	___flge@ff2+3,w
  6879     1FDB  2FDD               	goto	u3305
  6880     1FDC  2FDE               	goto	u3306
  6881     1FDD                     u3305:
  6882     1FDD  02D3               	subwf	??___flge+3,f
  6883     1FDE                     u3306:
  6884     1FDE  0853               	movf	??___flge+3,w
  6885     1FDF  00CF               	movwf	___flge@ff2+3
  6886     1FE0  0852               	movf	??___flge+2,w
  6887     1FE1  00CE               	movwf	___flge@ff2+2
  6888     1FE2  0851               	movf	??___flge+1,w
  6889     1FE3  00CD               	movwf	___flge@ff2+1
  6890     1FE4  0850               	movf	??___flge,w
  6891     1FE5  00CC               	movwf	___flge@ff2
  6892     1FE6                     l558:
  6893     1FE6  3080               	movlw	128
  6894     1FE7  06CB               	xorwf	___flge@ff1+3,f
  6895     1FE8  3080               	movlw	128
  6896     1FE9  06CF               	xorwf	___flge@ff2+3,f
  6897     1FEA  084F               	movf	___flge@ff2+3,w
  6898     1FEB  024B               	subwf	___flge@ff1+3,w
  6899     1FEC  1D03               	skipz
  6900     1FED  2FF8               	goto	u3315
  6901     1FEE  084E               	movf	___flge@ff2+2,w
  6902     1FEF  024A               	subwf	___flge@ff1+2,w
  6903     1FF0  1D03               	skipz
  6904     1FF1  2FF8               	goto	u3315
  6905     1FF2  084D               	movf	___flge@ff2+1,w
  6906     1FF3  0249               	subwf	___flge@ff1+1,w
  6907     1FF4  1D03               	skipz
  6908     1FF5  2FF8               	goto	u3315
  6909     1FF6  084C               	movf	___flge@ff2,w
  6910     1FF7  0248               	subwf	___flge@ff1,w
  6911     1FF8                     u3315:
  6912     1FF8  1803               	skipnc
  6913     1FF9  2FFB               	goto	u3311
  6914     1FFA  2FFC               	goto	u3310
  6915     1FFB                     u3311:
  6916     1FFB  2FFE               	goto	l2708
  6917     1FFC                     u3310:
  6918     1FFC                     l2706:
  6919     1FFC  1003               	clrc
  6920     1FFD  2FFF               	goto	l563
  6921     1FFE                     l2708:
  6922     1FFE  1403               	setc
  6923     1FFF                     l563:
  6924     1FFF  0008               	return
  6925     2000                     __end_of___flge:
  6926                           
  6927                           	psect	text28
  6928     0801                     __ptext28:	
  6929 ;; *************** function _TCN75A_SetFaultQueue *****************
  6930 ;; Defined at:
  6931 ;;		line 146 in file "TCN75A.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  val             1    wreg     unsigned char 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  val             1    4[COMMON] unsigned char 
  6936 ;;  config          1    5[COMMON] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      void 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0, pclath, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6946 ;;      Params:         0       0       0       0       0
  6947 ;;      Locals:         2       0       0       0       0
  6948 ;;      Temps:          1       0       0       0       0
  6949 ;;      Totals:         3       0       0       0       0
  6950 ;;Total ram usage:        3 bytes
  6951 ;; Hardware stack levels used: 1
  6952 ;; Hardware stack levels required when called: 3
  6953 ;; This function calls:
  6954 ;;		_TCN75A_ReadConfig
  6955 ;;		_TCN75A_WriteConfig
  6956 ;; This function is called by:
  6957 ;;		_setupSensorForNormalMode
  6958 ;;		_setupSensorForSafetyMode
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962     0801                     _TCN75A_SetFaultQueue:	
  6963                           ;psect for function _TCN75A_SetFaultQueue
  6964                           
  6965                           
  6966                           ;incstack = 0
  6967                           ; Regs used in _TCN75A_SetFaultQueue: [wreg+status,2+status,0+pclath+cstack]
  6968                           ;TCN75A_SetFaultQueue@val stored from wreg
  6969     0801  00F4               	movwf	TCN75A_SetFaultQueue@val
  6970     0802                     l3552:
  6971                           
  6972                           ;TCN75A.c: 147:     uint8_t config = TCN75A_ReadConfig();
  6973     0802  160A  158A  24ED  120A  158A  	fcall	_TCN75A_ReadConfig
  6974     0807  00F5               	movwf	TCN75A_SetFaultQueue@config
  6975     0808                     l3554:
  6976                           
  6977                           ;TCN75A.c: 148:     val = val & 0x03;
  6978     0808  3003               	movlw	3
  6979     0809  05F4               	andwf	TCN75A_SetFaultQueue@val,f
  6980     080A                     l3556:
  6981                           
  6982                           ;TCN75A.c: 149:     config = (config & 0xE7) | (uint8_t)(val << 3);
  6983     080A  0874               	movf	TCN75A_SetFaultQueue@val,w
  6984     080B  00F3               	movwf	??_TCN75A_SetFaultQueue
  6985     080C  3003               	movlw	3
  6986     080D                     u4955:
  6987     080D  1003               	clrc
  6988     080E  0DF3               	rlf	??_TCN75A_SetFaultQueue,f
  6989     080F  3EFF               	addlw	-1
  6990     0810  1D03               	skipz
  6991     0811  280D               	goto	u4955
  6992     0812  0875               	movf	TCN75A_SetFaultQueue@config,w
  6993     0813  39E7               	andlw	231
  6994     0814  0473               	iorwf	??_TCN75A_SetFaultQueue,w
  6995     0815  00F5               	movwf	TCN75A_SetFaultQueue@config
  6996                           
  6997                           ;TCN75A.c: 150:     TCN75A_WriteConfig(config);
  6998     0816  0875               	movf	TCN75A_SetFaultQueue@config,w
  6999     0817  160A  158A  2391  120A  158A  	fcall	_TCN75A_WriteConfig
  7000     081C                     l269:
  7001     081C  0008               	return
  7002     081D                     __end_of_TCN75A_SetFaultQueue:
  7003                           
  7004                           	psect	text29
  7005     1AFF                     __ptext29:	
  7006 ;; *************** function _TCN75A_SetAlertPolarity *****************
  7007 ;; Defined at:
  7008 ;;		line 153 in file "TCN75A.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  sw              1    wreg     unsigned char 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  sw              1    3[COMMON] unsigned char 
  7013 ;;  config          1    4[COMMON] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7023 ;;      Params:         0       0       0       0       0
  7024 ;;      Locals:         2       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0
  7026 ;;      Totals:         2       0       0       0       0
  7027 ;;Total ram usage:        2 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 3
  7030 ;; This function calls:
  7031 ;;		_TCN75A_ReadConfig
  7032 ;;		_TCN75A_WriteConfig
  7033 ;; This function is called by:
  7034 ;;		_setupSensorForNormalMode
  7035 ;;		_setupSensorForSafetyMode
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039     1AFF                     _TCN75A_SetAlertPolarity:	
  7040                           ;psect for function _TCN75A_SetAlertPolarity
  7041                           
  7042                           
  7043                           ;incstack = 0
  7044                           ; Regs used in _TCN75A_SetAlertPolarity: [wreg+status,2+status,0+pclath+cstack]
  7045                           ;TCN75A_SetAlertPolarity@sw stored from wreg
  7046     1AFF  00F3               	movwf	TCN75A_SetAlertPolarity@sw
  7047     1B00                     l3540:
  7048                           
  7049                           ;TCN75A.c: 154:     uint8_t config = TCN75A_ReadConfig();
  7050     1B00  160A  158A  24ED  160A  158A  	fcall	_TCN75A_ReadConfig
  7051     1B05  00F4               	movwf	TCN75A_SetAlertPolarity@config
  7052     1B06                     l3542:
  7053                           
  7054                           ;TCN75A.c: 155:     if (sw) config |= (1 << 2); else config &= ~(1 << 2);
  7055     1B06  0873               	movf	TCN75A_SetAlertPolarity@sw,w
  7056     1B07  1903               	btfsc	3,2
  7057     1B08  2B0A               	goto	u4941
  7058     1B09  2B0B               	goto	u4940
  7059     1B0A                     u4941:
  7060     1B0A  2B0D               	goto	l3546
  7061     1B0B                     u4940:
  7062     1B0B                     l3544:
  7063     1B0B  1574               	bsf	TCN75A_SetAlertPolarity@config,2
  7064     1B0C  2B0F               	goto	l3548
  7065     1B0D                     l3546:
  7066     1B0D  30FB               	movlw	251
  7067     1B0E  05F4               	andwf	TCN75A_SetAlertPolarity@config,f
  7068     1B0F                     l3548:
  7069                           
  7070                           ;TCN75A.c: 156:     TCN75A_WriteConfig(config);
  7071     1B0F  0874               	movf	TCN75A_SetAlertPolarity@config,w
  7072     1B10  160A  158A  2391  160A  158A  	fcall	_TCN75A_WriteConfig
  7073     1B15                     l274:
  7074     1B15  0008               	return
  7075     1B16                     __end_of_TCN75A_SetAlertPolarity:
  7076                           
  7077                           	psect	text30
  7078     1AE8                     __ptext30:	
  7079 ;; *************** function _TCN75A_SetAlertMode *****************
  7080 ;; Defined at:
  7081 ;;		line 159 in file "TCN75A.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  sw              1    wreg     unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  sw              1    3[COMMON] unsigned char 
  7086 ;;  config          1    4[COMMON] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      void 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0, pclath, cstack
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7096 ;;      Params:         0       0       0       0       0
  7097 ;;      Locals:         2       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0
  7099 ;;      Totals:         2       0       0       0       0
  7100 ;;Total ram usage:        2 bytes
  7101 ;; Hardware stack levels used: 1
  7102 ;; Hardware stack levels required when called: 3
  7103 ;; This function calls:
  7104 ;;		_TCN75A_ReadConfig
  7105 ;;		_TCN75A_WriteConfig
  7106 ;; This function is called by:
  7107 ;;		_setupSensorForNormalMode
  7108 ;;		_setupSensorForSafetyMode
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112     1AE8                     _TCN75A_SetAlertMode:	
  7113                           ;psect for function _TCN75A_SetAlertMode
  7114                           
  7115                           
  7116                           ;incstack = 0
  7117                           ; Regs used in _TCN75A_SetAlertMode: [wreg+status,2+status,0+pclath+cstack]
  7118                           ;TCN75A_SetAlertMode@sw stored from wreg
  7119     1AE8  00F3               	movwf	TCN75A_SetAlertMode@sw
  7120     1AE9                     l3530:
  7121                           
  7122                           ;TCN75A.c: 160:     uint8_t config = TCN75A_ReadConfig();
  7123     1AE9  160A  158A  24ED  160A  158A  	fcall	_TCN75A_ReadConfig
  7124     1AEE  00F4               	movwf	TCN75A_SetAlertMode@config
  7125     1AEF                     l3532:
  7126                           
  7127                           ;TCN75A.c: 161:     if (sw) config |= (1 << 1); else config &= ~(1 << 1);
  7128     1AEF  0873               	movf	TCN75A_SetAlertMode@sw,w
  7129     1AF0  1903               	btfsc	3,2
  7130     1AF1  2AF3               	goto	u4931
  7131     1AF2  2AF4               	goto	u4930
  7132     1AF3                     u4931:
  7133     1AF3  2AF6               	goto	l3536
  7134     1AF4                     u4930:
  7135     1AF4                     l3534:
  7136     1AF4  14F4               	bsf	TCN75A_SetAlertMode@config,1
  7137     1AF5  2AF8               	goto	l3538
  7138     1AF6                     l3536:
  7139     1AF6  30FD               	movlw	253
  7140     1AF7  05F4               	andwf	TCN75A_SetAlertMode@config,f
  7141     1AF8                     l3538:
  7142                           
  7143                           ;TCN75A.c: 162:     TCN75A_WriteConfig(config);
  7144     1AF8  0874               	movf	TCN75A_SetAlertMode@config,w
  7145     1AF9  160A  158A  2391  160A  158A  	fcall	_TCN75A_WriteConfig
  7146     1AFE                     l279:
  7147     1AFE  0008               	return
  7148     1AFF                     __end_of_TCN75A_SetAlertMode:
  7149                           
  7150                           	psect	text31
  7151     1B16                     __ptext31:	
  7152 ;; *************** function _restartSensor *****************
  7153 ;; Defined at:
  7154 ;;		line 34 in file "newmain.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2, status,0, pclath, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7168 ;;      Params:         0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0
  7170 ;;      Temps:          3       0       0       0       0
  7171 ;;      Totals:         3       0       0       0       0
  7172 ;;Total ram usage:        3 bytes
  7173 ;; Hardware stack levels used: 1
  7174 ;; Hardware stack levels required when called: 4
  7175 ;; This function calls:
  7176 ;;		_TCN75A_SetShutdown
  7177 ;; This function is called by:
  7178 ;;		_main
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182     1B16                     _restartSensor:	
  7183                           ;psect for function _restartSensor
  7184                           
  7185     1B16                     l3620:	
  7186                           ;incstack = 0
  7187                           ; Regs used in _restartSensor: [wreg+status,2+status,0+pclath+cstack]
  7188                           
  7189                           
  7190                           ;newmain.c: 35:     TCN75A_SetShutdown(1);
  7191     1B16  3001               	movlw	1
  7192     1B17  160A  158A  22D1  160A  158A  	fcall	_TCN75A_SetShutdown
  7193     1B1C                     l3622:
  7194                           
  7195                           ;newmain.c: 36:     _delay((unsigned long)((500)*(16000000/4000.0)));
  7196     1B1C  300B               	movlw	11
  7197     1B1D  00F7               	movwf	??_restartSensor+2
  7198     1B1E  3026               	movlw	38
  7199     1B1F  00F6               	movwf	??_restartSensor+1
  7200     1B20  305D               	movlw	93
  7201     1B21  00F5               	movwf	??_restartSensor
  7202     1B22                     u5147:
  7203     1B22  0BF5               	decfsz	??_restartSensor,f
  7204     1B23  2B22               	goto	u5147
  7205     1B24  0BF6               	decfsz	??_restartSensor+1,f
  7206     1B25  2B22               	goto	u5147
  7207     1B26  0BF7               	decfsz	??_restartSensor+2,f
  7208     1B27  2B22               	goto	u5147
  7209     1B28  2B29               	nop2
  7210     1B29                     l3624:
  7211                           
  7212                           ;newmain.c: 37:     TCN75A_SetShutdown(0);
  7213     1B29  3000               	movlw	0
  7214     1B2A  160A  158A  22D1  160A  158A  	fcall	_TCN75A_SetShutdown
  7215     1B2F                     l51:
  7216     1B2F  0008               	return
  7217     1B30                     __end_of_restartSensor:
  7218                           
  7219                           	psect	text32
  7220     1AD1                     __ptext32:	
  7221 ;; *************** function _TCN75A_SetShutdown *****************
  7222 ;; Defined at:
  7223 ;;		line 165 in file "TCN75A.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  sw              1    wreg     unsigned char 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  sw              1    3[COMMON] unsigned char 
  7228 ;;  config          1    4[COMMON] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0, pclath, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7238 ;;      Params:         0       0       0       0       0
  7239 ;;      Locals:         2       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0
  7241 ;;      Totals:         2       0       0       0       0
  7242 ;;Total ram usage:        2 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 3
  7245 ;; This function calls:
  7246 ;;		_TCN75A_ReadConfig
  7247 ;;		_TCN75A_WriteConfig
  7248 ;; This function is called by:
  7249 ;;		_restartSensor
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253     1AD1                     _TCN75A_SetShutdown:	
  7254                           ;psect for function _TCN75A_SetShutdown
  7255                           
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _TCN75A_SetShutdown: [wreg+status,2+status,0+pclath+cstack]
  7259                           ;TCN75A_SetShutdown@sw stored from wreg
  7260     1AD1  00F3               	movwf	TCN75A_SetShutdown@sw
  7261     1AD2                     l3558:
  7262                           
  7263                           ;TCN75A.c: 166:     uint8_t config = TCN75A_ReadConfig();
  7264     1AD2  160A  158A  24ED  160A  158A  	fcall	_TCN75A_ReadConfig
  7265     1AD7  00F4               	movwf	TCN75A_SetShutdown@config
  7266     1AD8                     l3560:
  7267                           
  7268                           ;TCN75A.c: 167:     if (sw) config |= (1 << 0); else config &= ~(1 << 0);
  7269     1AD8  0873               	movf	TCN75A_SetShutdown@sw,w
  7270     1AD9  1903               	btfsc	3,2
  7271     1ADA  2ADC               	goto	u4961
  7272     1ADB  2ADD               	goto	u4960
  7273     1ADC                     u4961:
  7274     1ADC  2ADF               	goto	l3564
  7275     1ADD                     u4960:
  7276     1ADD                     l3562:
  7277     1ADD  1474               	bsf	TCN75A_SetShutdown@config,0
  7278     1ADE  2AE1               	goto	l3566
  7279     1ADF                     l3564:
  7280     1ADF  30FE               	movlw	254
  7281     1AE0  05F4               	andwf	TCN75A_SetShutdown@config,f
  7282     1AE1                     l3566:
  7283                           
  7284                           ;TCN75A.c: 168:     TCN75A_WriteConfig(config);
  7285     1AE1  0874               	movf	TCN75A_SetShutdown@config,w
  7286     1AE2  160A  158A  2391  160A  158A  	fcall	_TCN75A_WriteConfig
  7287     1AE7                     l284:
  7288     1AE7  0008               	return
  7289     1AE8                     __end_of_TCN75A_SetShutdown:
  7290                           
  7291                           	psect	text33
  7292     1B91                     __ptext33:	
  7293 ;; *************** function _TCN75A_WriteConfig *****************
  7294 ;; Defined at:
  7295 ;;		line 125 in file "TCN75A.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  config          1    wreg     unsigned char 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  config          1    2[COMMON] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, pclath, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7309 ;;      Params:         0       0       0       0       0
  7310 ;;      Locals:         1       0       0       0       0
  7311 ;;      Temps:          1       0       0       0       0
  7312 ;;      Totals:         2       0       0       0       0
  7313 ;;Total ram usage:        2 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 2
  7316 ;; This function calls:
  7317 ;;		_I2C_Master_Start
  7318 ;;		_I2C_Master_Stop
  7319 ;;		_I2C_Master_Write
  7320 ;; This function is called by:
  7321 ;;		_TCN75A_SetFaultQueue
  7322 ;;		_TCN75A_SetAlertPolarity
  7323 ;;		_TCN75A_SetAlertMode
  7324 ;;		_TCN75A_SetShutdown
  7325 ;;		_TCN75A_SetOneShot
  7326 ;;		_TCN75A_SetResolution
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330     1B91                     _TCN75A_WriteConfig:	
  7331                           ;psect for function _TCN75A_WriteConfig
  7332                           
  7333                           
  7334                           ;incstack = 0
  7335                           ; Regs used in _TCN75A_WriteConfig: [wreg+status,2+status,0+pclath+cstack]
  7336                           ;TCN75A_WriteConfig@config stored from wreg
  7337     1B91  00F2               	movwf	TCN75A_WriteConfig@config
  7338     1B92                     l3472:
  7339                           
  7340                           ;TCN75A.c: 126:     I2C_Master_Start();
  7341     1B92  160A  158A  21D5  160A  158A  	fcall	_I2C_Master_Start
  7342                           
  7343                           ;TCN75A.c: 127:     I2C_Master_Write((unsigned char)(TCN75A_Address << 1));
  7344     1B97  1683               	bsf	3,5	;RP0=1, select bank1
  7345     1B98  1303               	bcf	3,6	;RP1=0, select bank1
  7346     1B99  086F               	movf	_TCN75A_Address^(0+128),w
  7347     1B9A  00F1               	movwf	??_TCN75A_WriteConfig
  7348     1B9B  0771               	addwf	??_TCN75A_WriteConfig,w
  7349     1B9C  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Write
  7350                           
  7351                           ;TCN75A.c: 128:     I2C_Master_Write(0x01);
  7352     1BA1  3001               	movlw	1
  7353     1BA2  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Write
  7354                           
  7355                           ;TCN75A.c: 129:     I2C_Master_Write(config);
  7356     1BA7  0872               	movf	TCN75A_WriteConfig@config,w
  7357     1BA8  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Write
  7358                           
  7359                           ;TCN75A.c: 130:     I2C_Master_Stop();
  7360     1BAD  160A  158A  21DE  160A  158A  	fcall	_I2C_Master_Stop
  7361     1BB2                     l258:
  7362     1BB2  0008               	return
  7363     1BB3                     __end_of_TCN75A_WriteConfig:
  7364                           
  7365                           	psect	text34
  7366     1CED                     __ptext34:	
  7367 ;; *************** function _TCN75A_ReadConfig *****************
  7368 ;; Defined at:
  7369 ;;		line 108 in file "TCN75A.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  config          1    2[COMMON] unsigned char 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      unsigned char 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0, pclath, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7383 ;;      Params:         0       0       0       0       0
  7384 ;;      Locals:         1       0       0       0       0
  7385 ;;      Temps:          1       0       0       0       0
  7386 ;;      Totals:         2       0       0       0       0
  7387 ;;Total ram usage:        2 bytes
  7388 ;; Hardware stack levels used: 1
  7389 ;; Hardware stack levels required when called: 2
  7390 ;; This function calls:
  7391 ;;		_I2C_Master_Start
  7392 ;;		_I2C_Master_Stop
  7393 ;;		_I2C_Master_Write
  7394 ;;		_I2C_NACK
  7395 ;;		_I2C_Read_Byte
  7396 ;; This function is called by:
  7397 ;;		_TCN75A_SetFaultQueue
  7398 ;;		_TCN75A_SetAlertPolarity
  7399 ;;		_TCN75A_SetAlertMode
  7400 ;;		_TCN75A_SetShutdown
  7401 ;;		_TCN75A_SetOneShot
  7402 ;;		_TCN75A_SetResolution
  7403 ;;		_TCN75A_CheckConfig
  7404 ;;		_TCN75A_CheckAlert
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408     1CED                     _TCN75A_ReadConfig:	
  7409                           ;psect for function _TCN75A_ReadConfig
  7410                           
  7411     1CED                     l3466:	
  7412                           ;incstack = 0
  7413                           ; Regs used in _TCN75A_ReadConfig: [wreg+status,2+status,0+pclath+cstack]
  7414                           
  7415                           
  7416                           ;TCN75A.c: 109:     uint8_t config;;TCN75A.c: 111:     I2C_Master_Start();
  7417     1CED  160A  158A  21D5  160A  158A  	fcall	_I2C_Master_Start
  7418                           
  7419                           ;TCN75A.c: 112:     I2C_Master_Write((unsigned char)(TCN75A_Address << 1));
  7420     1CF2  1683               	bsf	3,5	;RP0=1, select bank1
  7421     1CF3  1303               	bcf	3,6	;RP1=0, select bank1
  7422     1CF4  086F               	movf	_TCN75A_Address^(0+128),w
  7423     1CF5  00F1               	movwf	??_TCN75A_ReadConfig
  7424     1CF6  0771               	addwf	??_TCN75A_ReadConfig,w
  7425     1CF7  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Write
  7426                           
  7427                           ;TCN75A.c: 113:     I2C_Master_Write(0x01);
  7428     1CFC  3001               	movlw	1
  7429     1CFD  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Write
  7430                           
  7431                           ;TCN75A.c: 114:     I2C_Master_Stop();
  7432     1D02  160A  158A  21DE  160A  158A  	fcall	_I2C_Master_Stop
  7433                           
  7434                           ;TCN75A.c: 116:     I2C_Master_Start();
  7435     1D07  160A  158A  21D5  160A  158A  	fcall	_I2C_Master_Start
  7436                           
  7437                           ;TCN75A.c: 117:     I2C_Master_Write((unsigned char)((TCN75A_Address << 1) | 1));
  7438     1D0C  1403               	setc
  7439     1D0D  1683               	bsf	3,5	;RP0=1, select bank1
  7440     1D0E  1303               	bcf	3,6	;RP1=0, select bank1
  7441     1D0F  0D6F               	rlf	_TCN75A_Address^(0+128),w
  7442     1D10  160A  158A  222F  160A  158A  	fcall	_I2C_Master_Write
  7443                           
  7444                           ;TCN75A.c: 118:     config = I2C_Read_Byte();
  7445     1D15  160A  158A  22BA  160A  158A  	fcall	_I2C_Read_Byte
  7446     1D1A  00F2               	movwf	TCN75A_ReadConfig@config
  7447                           
  7448                           ;TCN75A.c: 119:     I2C_NACK();
  7449     1D1B  160A  158A  2209  160A  158A  	fcall	_I2C_NACK
  7450                           
  7451                           ;TCN75A.c: 120:     I2C_Master_Stop();
  7452     1D20  160A  158A  21DE  160A  158A  	fcall	_I2C_Master_Stop
  7453     1D25                     l3468:
  7454                           
  7455                           ;TCN75A.c: 122:     return config;
  7456     1D25  0872               	movf	TCN75A_ReadConfig@config,w
  7457     1D26                     l255:
  7458     1D26  0008               	return
  7459     1D27                     __end_of_TCN75A_ReadConfig:
  7460                           
  7461                           	psect	text35
  7462     1C21                     __ptext35:	
  7463 ;; *************** function _UART_Write_Text *****************
  7464 ;; Defined at:
  7465 ;;		line 26 in file "uart.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  text            2    1[COMMON] PTR const unsigned char 
  7468 ;;		 -> STR_11(39), STR_9(12), STR_8(39), STR_6(14), 
  7469 ;;		 -> STR_5(36), STR_3(16), displayText(64), STR_1(19), 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7481 ;;      Params:         2       0       0       0       0
  7482 ;;      Locals:         0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0
  7484 ;;      Totals:         2       0       0       0       0
  7485 ;;Total ram usage:        2 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; Hardware stack levels required when called: 2
  7488 ;; This function calls:
  7489 ;;		_UART_Write
  7490 ;; This function is called by:
  7491 ;;		_main
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495     1C21                     _UART_Write_Text:	
  7496                           ;psect for function _UART_Write_Text
  7497                           
  7498     1C21                     l3632:	
  7499                           ;incstack = 0
  7500                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7501                           
  7502                           
  7503                           ;uart.c: 27:     while (*text != '\0') {
  7504     1C21  2C36               	goto	l3638
  7505     1C22                     l3634:
  7506                           
  7507                           ;uart.c: 28:         UART_Write(*text++);
  7508     1C22  0872               	movf	UART_Write_Text@text+1,w
  7509     1C23  00FF               	movwf	btemp+1
  7510     1C24  0871               	movf	UART_Write_Text@text,w
  7511     1C25  0084               	movwf	4
  7512     1C26  160A  158A  216E  160A  158A  	fcall	stringtab
  7513     1C2B  160A  158A  223F  160A  158A  	fcall	_UART_Write
  7514     1C30                     l3636:
  7515     1C30  3001               	movlw	1
  7516     1C31  07F1               	addwf	UART_Write_Text@text,f
  7517     1C32  1803               	skipnc
  7518     1C33  0AF2               	incf	UART_Write_Text@text+1,f
  7519     1C34  3000               	movlw	0
  7520     1C35  07F2               	addwf	UART_Write_Text@text+1,f
  7521     1C36                     l3638:
  7522                           
  7523                           ;uart.c: 27:     while (*text != '\0') {
  7524     1C36  0872               	movf	UART_Write_Text@text+1,w
  7525     1C37  1283               	bcf	3,5	;RP0=0, select bank0
  7526     1C38  1303               	bcf	3,6	;RP1=0, select bank0
  7527     1C39  00FF               	movwf	btemp+1
  7528     1C3A  0871               	movf	UART_Write_Text@text,w
  7529     1C3B  0084               	movwf	4
  7530     1C3C  160A  158A  216E  160A  158A  	fcall	stringtab
  7531     1C41  3A00               	xorlw	0
  7532     1C42  1D03               	skipz
  7533     1C43  2C45               	goto	u5011
  7534     1C44  2C46               	goto	u5010
  7535     1C45                     u5011:
  7536     1C45  2C22               	goto	l3634
  7537     1C46                     u5010:
  7538     1C46                     l177:
  7539     1C46  0008               	return
  7540     1C47                     __end_of_UART_Write_Text:
  7541                           
  7542                           	psect	text36
  7543     1A3F                     __ptext36:	
  7544 ;; *************** function _UART_Write *****************
  7545 ;; Defined at:
  7546 ;;		line 21 in file "uart.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  data            1    wreg     unsigned char 
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;  data            1    0[COMMON] unsigned char 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, pclath, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7560 ;;      Params:         0       0       0       0       0
  7561 ;;      Locals:         1       0       0       0       0
  7562 ;;      Temps:          0       0       0       0       0
  7563 ;;      Totals:         1       0       0       0       0
  7564 ;;Total ram usage:        1 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 1
  7567 ;; This function calls:
  7568 ;;		_UART_TX_Empty
  7569 ;; This function is called by:
  7570 ;;		_UART_Write_Text
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574     1A3F                     _UART_Write:	
  7575                           ;psect for function _UART_Write
  7576                           
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _UART_Write: [wreg+pclath+cstack]
  7580                           ;UART_Write@data stored from wreg
  7581     1A3F  00F0               	movwf	UART_Write@data
  7582     1A40                     l3578:
  7583     1A40                     l3580:	
  7584                           ;uart.c: 22:     while (!UART_TX_Empty());
  7585                           
  7586     1A40  160A  158A  21C7  160A  158A  	fcall	_UART_TX_Empty
  7587     1A45  3A00               	xorlw	0
  7588     1A46  1903               	skipnz
  7589     1A47  2A49               	goto	u4971
  7590     1A48  2A4A               	goto	u4970
  7591     1A49                     u4971:
  7592     1A49  2A40               	goto	l3580
  7593     1A4A                     u4970:
  7594     1A4A                     l3582:
  7595                           
  7596                           ;uart.c: 23:     TXREG = data;
  7597     1A4A  0870               	movf	UART_Write@data,w
  7598     1A4B  1283               	bcf	3,5	;RP0=0, select bank0
  7599     1A4C  1303               	bcf	3,6	;RP1=0, select bank0
  7600     1A4D  0099               	movwf	25	;volatile
  7601     1A4E                     l171:
  7602     1A4E  0008               	return
  7603     1A4F                     __end_of_UART_Write:
  7604                           
  7605                           	psect	text37
  7606     19C7                     __ptext37:	
  7607 ;; *************** function _UART_TX_Empty *****************
  7608 ;; Defined at:
  7609 ;;		line 17 in file "uart.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;		None
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      unsigned char 
  7616 ;; Registers used:
  7617 ;;		wreg
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7623 ;;      Params:         0       0       0       0       0
  7624 ;;      Locals:         0       0       0       0       0
  7625 ;;      Temps:          0       0       0       0       0
  7626 ;;      Totals:         0       0       0       0       0
  7627 ;;Total ram usage:        0 bytes
  7628 ;; Hardware stack levels used: 1
  7629 ;; This function calls:
  7630 ;;		Nothing
  7631 ;; This function is called by:
  7632 ;;		_UART_Write
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636     19C7                     _UART_TX_Empty:	
  7637                           ;psect for function _UART_TX_Empty
  7638                           
  7639     19C7                     l3458:	
  7640                           ;incstack = 0
  7641                           ; Regs used in _UART_TX_Empty: [wreg]
  7642                           
  7643                           
  7644                           ;uart.c: 18:     return TRMT;
  7645     19C7  3000               	movlw	0
  7646     19C8  1683               	bsf	3,5	;RP0=1, select bank1
  7647     19C9  1303               	bcf	3,6	;RP1=0, select bank1
  7648     19CA  1898               	btfsc	24,1	;volatile
  7649     19CB  3001               	movlw	1
  7650     19CC                     l165:
  7651     19CC  0008               	return
  7652     19CD                     __end_of_UART_TX_Empty:
  7653                           
  7654                           	psect	text38
  7655     1A93                     __ptext38:	
  7656 ;; *************** function _UART_TX_Init *****************
  7657 ;; Defined at:
  7658 ;;		line 6 in file "uart.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		None
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7672 ;;      Params:         0       0       0       0       0
  7673 ;;      Locals:         0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0
  7675 ;;      Totals:         0       0       0       0       0
  7676 ;;Total ram usage:        0 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_main
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685     1A93                     _UART_TX_Init:	
  7686                           ;psect for function _UART_TX_Init
  7687                           
  7688     1A93                     l3626:	
  7689                           ;incstack = 0
  7690                           ; Regs used in _UART_TX_Init: []
  7691                           
  7692                           
  7693                           ;uart.c: 7:     BRGH = 1;
  7694     1A93  1683               	bsf	3,5	;RP0=1, select bank1
  7695     1A94  1303               	bcf	3,6	;RP1=0, select bank1
  7696     1A95  1518               	bsf	24,2	;volatile
  7697                           
  7698                           ;uart.c: 8:     SPBRG = 51;
  7699     1A96  3033               	movlw	51
  7700     1A97  0099               	movwf	25	;volatile
  7701                           
  7702                           ;uart.c: 9:     SYNC = 0;
  7703     1A98  1218               	bcf	24,4	;volatile
  7704                           
  7705                           ;uart.c: 10:     SPEN = 1;
  7706     1A99  1283               	bcf	3,5	;RP0=0, select bank0
  7707     1A9A  1303               	bcf	3,6	;RP1=0, select bank0
  7708     1A9B  1798               	bsf	24,7	;volatile
  7709                           
  7710                           ;uart.c: 11:     TRISC6 = 0;
  7711     1A9C  1683               	bsf	3,5	;RP0=1, select bank1
  7712     1A9D  1303               	bcf	3,6	;RP1=0, select bank1
  7713     1A9E  1307               	bcf	7,6	;volatile
  7714                           
  7715                           ;uart.c: 12:     TRISC7 = 1;
  7716     1A9F  1787               	bsf	7,7	;volatile
  7717                           
  7718                           ;uart.c: 13:     TXEN = 1;
  7719     1AA0  1698               	bsf	24,5	;volatile
  7720                           
  7721                           ;uart.c: 14:     CREN = 1;
  7722     1AA1  1283               	bcf	3,5	;RP0=0, select bank0
  7723     1AA2  1303               	bcf	3,6	;RP1=0, select bank0
  7724     1AA3  1618               	bsf	24,4	;volatile
  7725     1AA4                     l162:
  7726     1AA4  0008               	return
  7727     1AA5                     __end_of_UART_TX_Init:
  7728                           
  7729                           	psect	text39
  7730     0008                     __ptext39:	
  7731 ;; *************** function _TCN75A_ReadTemperature *****************
  7732 ;; Defined at:
  7733 ;;		line 13 in file "TCN75A.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;		None
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  temp            4   35[BANK0 ] float 
  7738 ;;  tempRaw         2   41[BANK0 ] short 
  7739 ;;  tempLow         1   40[BANK0 ] unsigned char 
  7740 ;;  tempHigh        1   39[BANK0 ] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  4   26[BANK0 ] float 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         0       4       0       0       0
  7751 ;;      Locals:         0       8       0       0       0
  7752 ;;      Temps:          0       5       0       0       0
  7753 ;;      Totals:         0      17       0       0       0
  7754 ;;Total ram usage:       17 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; Hardware stack levels required when called: 2
  7757 ;; This function calls:
  7758 ;;		_I2C_ACK
  7759 ;;		_I2C_Master_Start
  7760 ;;		_I2C_Master_Stop
  7761 ;;		_I2C_Master_Write
  7762 ;;		_I2C_NACK
  7763 ;;		_I2C_Read_Byte
  7764 ;;		___flmul
  7765 ;;		___xxtofl
  7766 ;; This function is called by:
  7767 ;;		_main
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771     0008                     _TCN75A_ReadTemperature:	
  7772                           ;psect for function _TCN75A_ReadTemperature
  7773                           
  7774     0008                     l3640:	
  7775                           ;incstack = 0
  7776                           ; Regs used in _TCN75A_ReadTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7777                           
  7778                           
  7779                           ;TCN75A.c: 14:     uint8_t tempHigh, tempLow;;TCN75A.c: 15:     int16_t tempRaw;;TCN75A.
      +                          c: 16:     float temp;;TCN75A.c: 19:     I2C_Master_Start();
  7780     0008  160A  158A  21D5  120A  118A  	fcall	_I2C_Master_Start
  7781                           
  7782                           ;TCN75A.c: 20:     I2C_Master_Write((unsigned char)(TCN75A_Address << 1));
  7783     000D  1683               	bsf	3,5	;RP0=1, select bank1
  7784     000E  1303               	bcf	3,6	;RP1=0, select bank1
  7785     000F  086F               	movf	_TCN75A_Address^(0+128),w
  7786     0010  1283               	bcf	3,5	;RP0=0, select bank0
  7787     0011  1303               	bcf	3,6	;RP1=0, select bank0
  7788     0012  00BE               	movwf	??_TCN75A_ReadTemperature
  7789     0013  073E               	addwf	??_TCN75A_ReadTemperature,w
  7790     0014  160A  158A  222F  120A  118A  	fcall	_I2C_Master_Write
  7791                           
  7792                           ;TCN75A.c: 21:     I2C_Master_Write(0x00);
  7793     0019  3000               	movlw	0
  7794     001A  160A  158A  222F  120A  118A  	fcall	_I2C_Master_Write
  7795                           
  7796                           ;TCN75A.c: 22:     I2C_Master_Stop();
  7797     001F  160A  158A  21DE  120A  118A  	fcall	_I2C_Master_Stop
  7798                           
  7799                           ;TCN75A.c: 25:     I2C_Master_Start();
  7800     0024  160A  158A  21D5  120A  118A  	fcall	_I2C_Master_Start
  7801                           
  7802                           ;TCN75A.c: 26:     I2C_Master_Write((unsigned char)((TCN75A_Address << 1) | 1));
  7803     0029  1403               	setc
  7804     002A  1683               	bsf	3,5	;RP0=1, select bank1
  7805     002B  1303               	bcf	3,6	;RP1=0, select bank1
  7806     002C  0D6F               	rlf	_TCN75A_Address^(0+128),w
  7807     002D  160A  158A  222F  120A  118A  	fcall	_I2C_Master_Write
  7808                           
  7809                           ;TCN75A.c: 29:     tempHigh = I2C_Read_Byte();
  7810     0032  160A  158A  22BA  120A  118A  	fcall	_I2C_Read_Byte
  7811     0037  1283               	bcf	3,5	;RP0=0, select bank0
  7812     0038  1303               	bcf	3,6	;RP1=0, select bank0
  7813     0039  00C7               	movwf	TCN75A_ReadTemperature@tempHigh
  7814                           
  7815                           ;TCN75A.c: 30:     I2C_ACK();
  7816     003A  160A  158A  21FD  120A  118A  	fcall	_I2C_ACK
  7817                           
  7818                           ;TCN75A.c: 31:     tempLow = I2C_Read_Byte();
  7819     003F  160A  158A  22BA  120A  118A  	fcall	_I2C_Read_Byte
  7820     0044  1283               	bcf	3,5	;RP0=0, select bank0
  7821     0045  1303               	bcf	3,6	;RP1=0, select bank0
  7822     0046  00C8               	movwf	TCN75A_ReadTemperature@tempLow
  7823                           
  7824                           ;TCN75A.c: 32:     I2C_NACK();
  7825     0047  160A  158A  2209  120A  118A  	fcall	_I2C_NACK
  7826                           
  7827                           ;TCN75A.c: 33:     I2C_Master_Stop();
  7828     004C  160A  158A  21DE  120A  118A  	fcall	_I2C_Master_Stop
  7829     0051                     l3642:
  7830                           
  7831                           ;TCN75A.c: 36:     tempRaw = (int16_t)((tempHigh << 4) | (tempLow >> 4));
  7832     0051  1283               	bcf	3,5	;RP0=0, select bank0
  7833     0052  1303               	bcf	3,6	;RP1=0, select bank0
  7834     0053  0848               	movf	TCN75A_ReadTemperature@tempLow,w
  7835     0054  00BE               	movwf	??_TCN75A_ReadTemperature
  7836     0055  3004               	movlw	4
  7837     0056                     u5025:
  7838     0056  1003               	clrc
  7839     0057  0CBE               	rrf	??_TCN75A_ReadTemperature,f
  7840     0058  3EFF               	addlw	-1
  7841     0059  1D03               	skipz
  7842     005A  2856               	goto	u5025
  7843     005B  083E               	movf	??_TCN75A_ReadTemperature,w
  7844     005C  00BF               	movwf	??_TCN75A_ReadTemperature+1
  7845     005D  01C0               	clrf	??_TCN75A_ReadTemperature+2
  7846     005E  0847               	movf	TCN75A_ReadTemperature@tempHigh,w
  7847     005F  00C1               	movwf	??_TCN75A_ReadTemperature+3
  7848     0060  01C2               	clrf	??_TCN75A_ReadTemperature+4
  7849     0061  0EC1               	swapf	??_TCN75A_ReadTemperature+3,f
  7850     0062  0EC2               	swapf	??_TCN75A_ReadTemperature+4,f
  7851     0063  30F0               	movlw	240
  7852     0064  05C2               	andwf	??_TCN75A_ReadTemperature+4,f
  7853     0065  0841               	movf	??_TCN75A_ReadTemperature+3,w
  7854     0066  390F               	andlw	15
  7855     0067  04C2               	iorwf	??_TCN75A_ReadTemperature+4,f
  7856     0068  30F0               	movlw	240
  7857     0069  05C1               	andwf	??_TCN75A_ReadTemperature+3,f
  7858     006A  083F               	movf	??_TCN75A_ReadTemperature+1,w
  7859     006B  0441               	iorwf	??_TCN75A_ReadTemperature+3,w
  7860     006C  00C9               	movwf	TCN75A_ReadTemperature@tempRaw
  7861     006D  0840               	movf	??_TCN75A_ReadTemperature+2,w
  7862     006E  0442               	iorwf	??_TCN75A_ReadTemperature+4,w
  7863     006F  00CA               	movwf	TCN75A_ReadTemperature@tempRaw+1
  7864     0070                     l3644:
  7865                           
  7866                           ;TCN75A.c: 39:     if (tempRaw & 0x0800) {
  7867     0070  1DCA               	btfss	TCN75A_ReadTemperature@tempRaw+1,3
  7868     0071  2873               	goto	u5031
  7869     0072  2874               	goto	u5030
  7870     0073                     u5031:
  7871     0073  2878               	goto	l3648
  7872     0074                     u5030:
  7873     0074                     l3646:
  7874                           
  7875                           ;TCN75A.c: 40:         tempRaw |= 0xF000;
  7876     0074  3000               	movlw	0
  7877     0075  04C9               	iorwf	TCN75A_ReadTemperature@tempRaw,f
  7878     0076  30F0               	movlw	240
  7879     0077  04CA               	iorwf	TCN75A_ReadTemperature@tempRaw+1,f
  7880     0078                     l3648:
  7881                           
  7882                           ;TCN75A.c: 44:     temp = tempRaw * 0.0625f;
  7883     0078  303D               	movlw	61
  7884     0079  00A3               	movwf	___flmul@b+3
  7885     007A  3080               	movlw	128
  7886     007B  00A2               	movwf	___flmul@b+2
  7887     007C  3000               	movlw	0
  7888     007D  00A1               	movwf	___flmul@b+1
  7889     007E  3000               	movlw	0
  7890     007F  00A0               	movwf	___flmul@b
  7891     0080  0849               	movf	TCN75A_ReadTemperature@tempRaw,w
  7892     0081  00F0               	movwf	___xxtofl@val
  7893     0082  084A               	movf	TCN75A_ReadTemperature@tempRaw+1,w
  7894     0083  00F1               	movwf	___xxtofl@val+1
  7895     0084  3000               	movlw	0
  7896     0085  1BF1               	btfsc	___xxtofl@val+1,7
  7897     0086  30FF               	movlw	255
  7898     0087  00F2               	movwf	___xxtofl@val+2
  7899     0088  00F3               	movwf	___xxtofl@val+3
  7900     0089  3001               	movlw	1
  7901     008A  160A  118A  2143  120A  118A  	fcall	___xxtofl
  7902     008F  0873               	movf	?___xxtofl+3,w
  7903     0090  1283               	bcf	3,5	;RP0=0, select bank0
  7904     0091  1303               	bcf	3,6	;RP1=0, select bank0
  7905     0092  00A7               	movwf	___flmul@a+3
  7906     0093  0872               	movf	?___xxtofl+2,w
  7907     0094  00A6               	movwf	___flmul@a+2
  7908     0095  0871               	movf	?___xxtofl+1,w
  7909     0096  00A5               	movwf	___flmul@a+1
  7910     0097  0870               	movf	?___xxtofl,w
  7911     0098  00A4               	movwf	___flmul@a
  7912     0099  120A  158A  24BE  120A  118A  	fcall	___flmul
  7913     009E  1283               	bcf	3,5	;RP0=0, select bank0
  7914     009F  1303               	bcf	3,6	;RP1=0, select bank0
  7915     00A0  0823               	movf	?___flmul+3,w
  7916     00A1  00C6               	movwf	TCN75A_ReadTemperature@temp+3
  7917     00A2  0822               	movf	?___flmul+2,w
  7918     00A3  00C5               	movwf	TCN75A_ReadTemperature@temp+2
  7919     00A4  0821               	movf	?___flmul+1,w
  7920     00A5  00C4               	movwf	TCN75A_ReadTemperature@temp+1
  7921     00A6  0820               	movf	?___flmul,w
  7922     00A7  00C3               	movwf	TCN75A_ReadTemperature@temp
  7923     00A8                     l3650:
  7924                           
  7925                           ;TCN75A.c: 46:     return temp;
  7926     00A8  0846               	movf	TCN75A_ReadTemperature@temp+3,w
  7927     00A9  00BD               	movwf	?_TCN75A_ReadTemperature+3
  7928     00AA  0845               	movf	TCN75A_ReadTemperature@temp+2,w
  7929     00AB  00BC               	movwf	?_TCN75A_ReadTemperature+2
  7930     00AC  0844               	movf	TCN75A_ReadTemperature@temp+1,w
  7931     00AD  00BB               	movwf	?_TCN75A_ReadTemperature+1
  7932     00AE  0843               	movf	TCN75A_ReadTemperature@temp,w
  7933     00AF  00BA               	movwf	?_TCN75A_ReadTemperature
  7934     00B0                     l221:
  7935     00B0  0008               	return
  7936     00B1                     __end_of_TCN75A_ReadTemperature:
  7937                           
  7938                           	psect	text40
  7939     0CBE                     __ptext40:	
  7940 ;; *************** function ___flmul *****************
  7941 ;; Defined at:
  7942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  b               4    0[BANK0 ] float 
  7945 ;;  a               4    4[BANK0 ] float 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  prod            4   20[BANK0 ] struct .
  7948 ;;  grs             4   14[BANK0 ] unsigned long 
  7949 ;;  temp            2   24[BANK0 ] struct .
  7950 ;;  bexp            1   19[BANK0 ] unsigned char 
  7951 ;;  aexp            1   18[BANK0 ] unsigned char 
  7952 ;;  sign            1   13[BANK0 ] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  4    0[BANK0 ] unsigned char 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7962 ;;      Params:         0       8       0       0       0
  7963 ;;      Locals:         0      13       0       0       0
  7964 ;;      Temps:          0       5       0       0       0
  7965 ;;      Totals:         0      26       0       0       0
  7966 ;;Total ram usage:       26 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 1
  7969 ;; This function calls:
  7970 ;;		__Umul8_16
  7971 ;; This function is called by:
  7972 ;;		_TCN75A_ReadTemperature
  7973 ;;		_efgtoa
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977     0CBE                     ___flmul:	
  7978                           ;psect for function ___flmul
  7979                           
  7980     0CBE                     l2906:	
  7981                           ;incstack = 0
  7982                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7983                           
  7984     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  7985     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  7986     0CC0  0823               	movf	___flmul@b+3,w
  7987     0CC1  00AD               	movwf	___flmul@sign
  7988     0CC2                     l2908:
  7989     0CC2  3080               	movlw	128
  7990     0CC3  05AD               	andwf	___flmul@sign,f
  7991     0CC4                     l2910:
  7992     0CC4  0823               	movf	___flmul@b+3,w
  7993     0CC5  00A8               	movwf	??___flmul
  7994     0CC6  0728               	addwf	??___flmul,w
  7995     0CC7  00B3               	movwf	___flmul@bexp
  7996     0CC8                     l2912:
  7997     0CC8  1FA2               	btfss	___flmul@b+2,7
  7998     0CC9  2CCB               	goto	u3731
  7999     0CCA  2CCC               	goto	u3730
  8000     0CCB                     u3731:
  8001     0CCB  2CCD               	goto	l2916
  8002     0CCC                     u3730:
  8003     0CCC                     l2914:
  8004     0CCC  1433               	bsf	___flmul@bexp,0
  8005     0CCD                     l2916:
  8006     0CCD  0833               	movf	___flmul@bexp,w
  8007     0CCE  1903               	btfsc	3,2
  8008     0CCF  2CD1               	goto	u3741
  8009     0CD0  2CD2               	goto	u3740
  8010     0CD1                     u3741:
  8011     0CD1  2CE1               	goto	l2924
  8012     0CD2                     u3740:
  8013     0CD2                     l2918:
  8014     0CD2  0A33               	incf	___flmul@bexp,w
  8015     0CD3  1D03               	btfss	3,2
  8016     0CD4  2CD6               	goto	u3751
  8017     0CD5  2CD7               	goto	u3750
  8018     0CD6                     u3751:
  8019     0CD6  2CDF               	goto	l2922
  8020     0CD7                     u3750:
  8021     0CD7                     l2920:
  8022     0CD7  3000               	movlw	0
  8023     0CD8  00A3               	movwf	___flmul@b+3
  8024     0CD9  3000               	movlw	0
  8025     0CDA  00A2               	movwf	___flmul@b+2
  8026     0CDB  3000               	movlw	0
  8027     0CDC  00A1               	movwf	___flmul@b+1
  8028     0CDD  3000               	movlw	0
  8029     0CDE  00A0               	movwf	___flmul@b
  8030     0CDF                     l2922:
  8031     0CDF  17A2               	bsf	___flmul@b+2,7
  8032     0CE0  2CE9               	goto	l2926
  8033     0CE1                     l2924:
  8034     0CE1  3000               	movlw	0
  8035     0CE2  00A3               	movwf	___flmul@b+3
  8036     0CE3  3000               	movlw	0
  8037     0CE4  00A2               	movwf	___flmul@b+2
  8038     0CE5  3000               	movlw	0
  8039     0CE6  00A1               	movwf	___flmul@b+1
  8040     0CE7  3000               	movlw	0
  8041     0CE8  00A0               	movwf	___flmul@b
  8042     0CE9                     l2926:
  8043     0CE9  0827               	movf	___flmul@a+3,w
  8044     0CEA  3980               	andlw	128
  8045     0CEB  06AD               	xorwf	___flmul@sign,f
  8046     0CEC                     l2928:
  8047     0CEC  0827               	movf	___flmul@a+3,w
  8048     0CED  00A8               	movwf	??___flmul
  8049     0CEE  0728               	addwf	??___flmul,w
  8050     0CEF  00B2               	movwf	___flmul@aexp
  8051     0CF0                     l2930:
  8052     0CF0  1FA6               	btfss	___flmul@a+2,7
  8053     0CF1  2CF3               	goto	u3761
  8054     0CF2  2CF4               	goto	u3760
  8055     0CF3                     u3761:
  8056     0CF3  2CF5               	goto	l2934
  8057     0CF4                     u3760:
  8058     0CF4                     l2932:
  8059     0CF4  1432               	bsf	___flmul@aexp,0
  8060     0CF5                     l2934:
  8061     0CF5  0832               	movf	___flmul@aexp,w
  8062     0CF6  1903               	btfsc	3,2
  8063     0CF7  2CF9               	goto	u3771
  8064     0CF8  2CFA               	goto	u3770
  8065     0CF9                     u3771:
  8066     0CF9  2D09               	goto	l2942
  8067     0CFA                     u3770:
  8068     0CFA                     l2936:
  8069     0CFA  0A32               	incf	___flmul@aexp,w
  8070     0CFB  1D03               	btfss	3,2
  8071     0CFC  2CFE               	goto	u3781
  8072     0CFD  2CFF               	goto	u3780
  8073     0CFE                     u3781:
  8074     0CFE  2D07               	goto	l2940
  8075     0CFF                     u3780:
  8076     0CFF                     l2938:
  8077     0CFF  3000               	movlw	0
  8078     0D00  00A7               	movwf	___flmul@a+3
  8079     0D01  3000               	movlw	0
  8080     0D02  00A6               	movwf	___flmul@a+2
  8081     0D03  3000               	movlw	0
  8082     0D04  00A5               	movwf	___flmul@a+1
  8083     0D05  3000               	movlw	0
  8084     0D06  00A4               	movwf	___flmul@a
  8085     0D07                     l2940:
  8086     0D07  17A6               	bsf	___flmul@a+2,7
  8087     0D08  2D11               	goto	l2944
  8088     0D09                     l2942:
  8089     0D09  3000               	movlw	0
  8090     0D0A  00A7               	movwf	___flmul@a+3
  8091     0D0B  3000               	movlw	0
  8092     0D0C  00A6               	movwf	___flmul@a+2
  8093     0D0D  3000               	movlw	0
  8094     0D0E  00A5               	movwf	___flmul@a+1
  8095     0D0F  3000               	movlw	0
  8096     0D10  00A4               	movwf	___flmul@a
  8097     0D11                     l2944:
  8098     0D11  0832               	movf	___flmul@aexp,w
  8099     0D12  1903               	btfsc	3,2
  8100     0D13  2D15               	goto	u3791
  8101     0D14  2D16               	goto	u3790
  8102     0D15                     u3791:
  8103     0D15  2D1B               	goto	l2948
  8104     0D16                     u3790:
  8105     0D16                     l2946:
  8106     0D16  0833               	movf	___flmul@bexp,w
  8107     0D17  1D03               	btfss	3,2
  8108     0D18  2D1A               	goto	u3801
  8109     0D19  2D1B               	goto	u3800
  8110     0D1A                     u3801:
  8111     0D1A  2D24               	goto	l2952
  8112     0D1B                     u3800:
  8113     0D1B                     l2948:
  8114     0D1B  3000               	movlw	0
  8115     0D1C  00A3               	movwf	?___flmul+3
  8116     0D1D  3000               	movlw	0
  8117     0D1E  00A2               	movwf	?___flmul+2
  8118     0D1F  3000               	movlw	0
  8119     0D20  00A1               	movwf	?___flmul+1
  8120     0D21  3000               	movlw	0
  8121     0D22  00A0               	movwf	?___flmul
  8122     0D23  2FFF               	goto	l774
  8123     0D24                     l2952:
  8124     0D24  0820               	movf	___flmul@b,w
  8125     0D25  00F0               	movwf	__Umul8_16@multiplicand
  8126     0D26  0826               	movf	___flmul@a+2,w
  8127     0D27  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8128     0D2C  0871               	movf	?__Umul8_16+1,w
  8129     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  8130     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  8131     0D2F  00B9               	movwf	___flmul@temp+1
  8132     0D30  0870               	movf	?__Umul8_16,w
  8133     0D31  00B8               	movwf	___flmul@temp
  8134     0D32                     l2954:
  8135     0D32  0838               	movf	___flmul@temp,w
  8136     0D33  00A8               	movwf	??___flmul
  8137     0D34  01A9               	clrf	??___flmul+1
  8138     0D35  01AA               	clrf	??___flmul+2
  8139     0D36  01AB               	clrf	??___flmul+3
  8140     0D37  082B               	movf	??___flmul+3,w
  8141     0D38  00B1               	movwf	___flmul@grs+3
  8142     0D39  082A               	movf	??___flmul+2,w
  8143     0D3A  00B0               	movwf	___flmul@grs+2
  8144     0D3B  0829               	movf	??___flmul+1,w
  8145     0D3C  00AF               	movwf	___flmul@grs+1
  8146     0D3D  0828               	movf	??___flmul,w
  8147     0D3E  00AE               	movwf	___flmul@grs
  8148     0D3F                     l2956:
  8149     0D3F  0839               	movf	___flmul@temp+1,w
  8150     0D40  00A8               	movwf	??___flmul
  8151     0D41  01A9               	clrf	??___flmul+1
  8152     0D42  01AA               	clrf	??___flmul+2
  8153     0D43  01AB               	clrf	??___flmul+3
  8154     0D44  082B               	movf	??___flmul+3,w
  8155     0D45  00B7               	movwf	___flmul@prod+3
  8156     0D46  082A               	movf	??___flmul+2,w
  8157     0D47  00B6               	movwf	___flmul@prod+2
  8158     0D48  0829               	movf	??___flmul+1,w
  8159     0D49  00B5               	movwf	___flmul@prod+1
  8160     0D4A  0828               	movf	??___flmul,w
  8161     0D4B  00B4               	movwf	___flmul@prod
  8162     0D4C  0821               	movf	___flmul@b+1,w
  8163     0D4D  00F0               	movwf	__Umul8_16@multiplicand
  8164     0D4E  0825               	movf	___flmul@a+1,w
  8165     0D4F  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8166     0D54  0871               	movf	?__Umul8_16+1,w
  8167     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  8168     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  8169     0D57  00B9               	movwf	___flmul@temp+1
  8170     0D58  0870               	movf	?__Umul8_16,w
  8171     0D59  00B8               	movwf	___flmul@temp
  8172     0D5A                     l2958:
  8173     0D5A  0838               	movf	___flmul@temp,w
  8174     0D5B  00A8               	movwf	??___flmul
  8175     0D5C  01A9               	clrf	??___flmul+1
  8176     0D5D  01AA               	clrf	??___flmul+2
  8177     0D5E  01AB               	clrf	??___flmul+3
  8178     0D5F  0828               	movf	??___flmul,w
  8179     0D60  07AE               	addwf	___flmul@grs,f
  8180     0D61  0829               	movf	??___flmul+1,w
  8181     0D62  1103               	clrz
  8182     0D63  1803               	skipnc
  8183     0D64  3E01               	addlw	1
  8184     0D65  1903               	skipnz
  8185     0D66  2D68               	goto	u3811
  8186     0D67  07AF               	addwf	___flmul@grs+1,f
  8187     0D68                     u3811:
  8188     0D68  082A               	movf	??___flmul+2,w
  8189     0D69  1103               	clrz
  8190     0D6A  1803               	skipnc
  8191     0D6B  3E01               	addlw	1
  8192     0D6C  1903               	skipnz
  8193     0D6D  2D6F               	goto	u3812
  8194     0D6E  07B0               	addwf	___flmul@grs+2,f
  8195     0D6F                     u3812:
  8196     0D6F  082B               	movf	??___flmul+3,w
  8197     0D70  1103               	clrz
  8198     0D71  1803               	skipnc
  8199     0D72  3E01               	addlw	1
  8200     0D73  1903               	skipnz
  8201     0D74  2D76               	goto	u3813
  8202     0D75  07B1               	addwf	___flmul@grs+3,f
  8203     0D76                     u3813:
  8204     0D76                     l2960:
  8205     0D76  0839               	movf	___flmul@temp+1,w
  8206     0D77  00A8               	movwf	??___flmul
  8207     0D78  01A9               	clrf	??___flmul+1
  8208     0D79  01AA               	clrf	??___flmul+2
  8209     0D7A  01AB               	clrf	??___flmul+3
  8210     0D7B  0828               	movf	??___flmul,w
  8211     0D7C  07B4               	addwf	___flmul@prod,f
  8212     0D7D  0829               	movf	??___flmul+1,w
  8213     0D7E  1103               	clrz
  8214     0D7F  1803               	skipnc
  8215     0D80  3E01               	addlw	1
  8216     0D81  1903               	skipnz
  8217     0D82  2D84               	goto	u3821
  8218     0D83  07B5               	addwf	___flmul@prod+1,f
  8219     0D84                     u3821:
  8220     0D84  082A               	movf	??___flmul+2,w
  8221     0D85  1103               	clrz
  8222     0D86  1803               	skipnc
  8223     0D87  3E01               	addlw	1
  8224     0D88  1903               	skipnz
  8225     0D89  2D8B               	goto	u3822
  8226     0D8A  07B6               	addwf	___flmul@prod+2,f
  8227     0D8B                     u3822:
  8228     0D8B  082B               	movf	??___flmul+3,w
  8229     0D8C  1103               	clrz
  8230     0D8D  1803               	skipnc
  8231     0D8E  3E01               	addlw	1
  8232     0D8F  1903               	skipnz
  8233     0D90  2D92               	goto	u3823
  8234     0D91  07B7               	addwf	___flmul@prod+3,f
  8235     0D92                     u3823:
  8236     0D92  0822               	movf	___flmul@b+2,w
  8237     0D93  00F0               	movwf	__Umul8_16@multiplicand
  8238     0D94  0824               	movf	___flmul@a,w
  8239     0D95  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8240     0D9A  0871               	movf	?__Umul8_16+1,w
  8241     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  8242     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  8243     0D9D  00B9               	movwf	___flmul@temp+1
  8244     0D9E  0870               	movf	?__Umul8_16,w
  8245     0D9F  00B8               	movwf	___flmul@temp
  8246     0DA0                     l2962:
  8247     0DA0  0838               	movf	___flmul@temp,w
  8248     0DA1  00A8               	movwf	??___flmul
  8249     0DA2  01A9               	clrf	??___flmul+1
  8250     0DA3  01AA               	clrf	??___flmul+2
  8251     0DA4  01AB               	clrf	??___flmul+3
  8252     0DA5  0828               	movf	??___flmul,w
  8253     0DA6  07AE               	addwf	___flmul@grs,f
  8254     0DA7  0829               	movf	??___flmul+1,w
  8255     0DA8  1103               	clrz
  8256     0DA9  1803               	skipnc
  8257     0DAA  3E01               	addlw	1
  8258     0DAB  1903               	skipnz
  8259     0DAC  2DAE               	goto	u3831
  8260     0DAD  07AF               	addwf	___flmul@grs+1,f
  8261     0DAE                     u3831:
  8262     0DAE  082A               	movf	??___flmul+2,w
  8263     0DAF  1103               	clrz
  8264     0DB0  1803               	skipnc
  8265     0DB1  3E01               	addlw	1
  8266     0DB2  1903               	skipnz
  8267     0DB3  2DB5               	goto	u3832
  8268     0DB4  07B0               	addwf	___flmul@grs+2,f
  8269     0DB5                     u3832:
  8270     0DB5  082B               	movf	??___flmul+3,w
  8271     0DB6  1103               	clrz
  8272     0DB7  1803               	skipnc
  8273     0DB8  3E01               	addlw	1
  8274     0DB9  1903               	skipnz
  8275     0DBA  2DBC               	goto	u3833
  8276     0DBB  07B1               	addwf	___flmul@grs+3,f
  8277     0DBC                     u3833:
  8278     0DBC                     l2964:
  8279     0DBC  0839               	movf	___flmul@temp+1,w
  8280     0DBD  00A8               	movwf	??___flmul
  8281     0DBE  01A9               	clrf	??___flmul+1
  8282     0DBF  01AA               	clrf	??___flmul+2
  8283     0DC0  01AB               	clrf	??___flmul+3
  8284     0DC1  0828               	movf	??___flmul,w
  8285     0DC2  07B4               	addwf	___flmul@prod,f
  8286     0DC3  0829               	movf	??___flmul+1,w
  8287     0DC4  1103               	clrz
  8288     0DC5  1803               	skipnc
  8289     0DC6  3E01               	addlw	1
  8290     0DC7  1903               	skipnz
  8291     0DC8  2DCA               	goto	u3841
  8292     0DC9  07B5               	addwf	___flmul@prod+1,f
  8293     0DCA                     u3841:
  8294     0DCA  082A               	movf	??___flmul+2,w
  8295     0DCB  1103               	clrz
  8296     0DCC  1803               	skipnc
  8297     0DCD  3E01               	addlw	1
  8298     0DCE  1903               	skipnz
  8299     0DCF  2DD1               	goto	u3842
  8300     0DD0  07B6               	addwf	___flmul@prod+2,f
  8301     0DD1                     u3842:
  8302     0DD1  082B               	movf	??___flmul+3,w
  8303     0DD2  1103               	clrz
  8304     0DD3  1803               	skipnc
  8305     0DD4  3E01               	addlw	1
  8306     0DD5  1903               	skipnz
  8307     0DD6  2DD8               	goto	u3843
  8308     0DD7  07B7               	addwf	___flmul@prod+3,f
  8309     0DD8                     u3843:
  8310     0DD8                     l2966:
  8311     0DD8  3008               	movlw	8
  8312     0DD9  00A8               	movwf	??___flmul
  8313     0DDA                     u3855:
  8314     0DDA  1003               	clrc
  8315     0DDB  0DAE               	rlf	___flmul@grs,f
  8316     0DDC  0DAF               	rlf	___flmul@grs+1,f
  8317     0DDD  0DB0               	rlf	___flmul@grs+2,f
  8318     0DDE  0DB1               	rlf	___flmul@grs+3,f
  8319     0DDF  0BA8               	decfsz	??___flmul,f
  8320     0DE0  2DDA               	goto	u3855
  8321     0DE1                     l2968:
  8322     0DE1  0821               	movf	___flmul@b+1,w
  8323     0DE2  00F0               	movwf	__Umul8_16@multiplicand
  8324     0DE3  0824               	movf	___flmul@a,w
  8325     0DE4  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8326     0DE9  0871               	movf	?__Umul8_16+1,w
  8327     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  8328     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  8329     0DEC  00B9               	movwf	___flmul@temp+1
  8330     0DED  0870               	movf	?__Umul8_16,w
  8331     0DEE  00B8               	movwf	___flmul@temp
  8332     0DEF                     l2970:
  8333     0DEF  0838               	movf	___flmul@temp,w
  8334     0DF0  00A8               	movwf	??___flmul
  8335     0DF1  0839               	movf	___flmul@temp+1,w
  8336     0DF2  00A9               	movwf	??___flmul+1
  8337     0DF3  01AA               	clrf	??___flmul+2
  8338     0DF4  01AB               	clrf	??___flmul+3
  8339     0DF5  0828               	movf	??___flmul,w
  8340     0DF6  07AE               	addwf	___flmul@grs,f
  8341     0DF7  0829               	movf	??___flmul+1,w
  8342     0DF8  1103               	clrz
  8343     0DF9  1803               	skipnc
  8344     0DFA  3E01               	addlw	1
  8345     0DFB  1903               	skipnz
  8346     0DFC  2DFE               	goto	u3861
  8347     0DFD  07AF               	addwf	___flmul@grs+1,f
  8348     0DFE                     u3861:
  8349     0DFE  082A               	movf	??___flmul+2,w
  8350     0DFF  1103               	clrz
  8351     0E00  1803               	skipnc
  8352     0E01  3E01               	addlw	1
  8353     0E02  1903               	skipnz
  8354     0E03  2E05               	goto	u3862
  8355     0E04  07B0               	addwf	___flmul@grs+2,f
  8356     0E05                     u3862:
  8357     0E05  082B               	movf	??___flmul+3,w
  8358     0E06  1103               	clrz
  8359     0E07  1803               	skipnc
  8360     0E08  3E01               	addlw	1
  8361     0E09  1903               	skipnz
  8362     0E0A  2E0C               	goto	u3863
  8363     0E0B  07B1               	addwf	___flmul@grs+3,f
  8364     0E0C                     u3863:
  8365     0E0C                     l2972:
  8366     0E0C  0820               	movf	___flmul@b,w
  8367     0E0D  00F0               	movwf	__Umul8_16@multiplicand
  8368     0E0E  0825               	movf	___flmul@a+1,w
  8369     0E0F  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8370     0E14  0871               	movf	?__Umul8_16+1,w
  8371     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  8372     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  8373     0E17  00B9               	movwf	___flmul@temp+1
  8374     0E18  0870               	movf	?__Umul8_16,w
  8375     0E19  00B8               	movwf	___flmul@temp
  8376     0E1A                     l2974:
  8377     0E1A  0838               	movf	___flmul@temp,w
  8378     0E1B  00A8               	movwf	??___flmul
  8379     0E1C  0839               	movf	___flmul@temp+1,w
  8380     0E1D  00A9               	movwf	??___flmul+1
  8381     0E1E  01AA               	clrf	??___flmul+2
  8382     0E1F  01AB               	clrf	??___flmul+3
  8383     0E20  0828               	movf	??___flmul,w
  8384     0E21  07AE               	addwf	___flmul@grs,f
  8385     0E22  0829               	movf	??___flmul+1,w
  8386     0E23  1103               	clrz
  8387     0E24  1803               	skipnc
  8388     0E25  3E01               	addlw	1
  8389     0E26  1903               	skipnz
  8390     0E27  2E29               	goto	u3871
  8391     0E28  07AF               	addwf	___flmul@grs+1,f
  8392     0E29                     u3871:
  8393     0E29  082A               	movf	??___flmul+2,w
  8394     0E2A  1103               	clrz
  8395     0E2B  1803               	skipnc
  8396     0E2C  3E01               	addlw	1
  8397     0E2D  1903               	skipnz
  8398     0E2E  2E30               	goto	u3872
  8399     0E2F  07B0               	addwf	___flmul@grs+2,f
  8400     0E30                     u3872:
  8401     0E30  082B               	movf	??___flmul+3,w
  8402     0E31  1103               	clrz
  8403     0E32  1803               	skipnc
  8404     0E33  3E01               	addlw	1
  8405     0E34  1903               	skipnz
  8406     0E35  2E37               	goto	u3873
  8407     0E36  07B1               	addwf	___flmul@grs+3,f
  8408     0E37                     u3873:
  8409     0E37                     l2976:
  8410     0E37  3008               	movlw	8
  8411     0E38  00A8               	movwf	??___flmul
  8412     0E39                     u3885:
  8413     0E39  1003               	clrc
  8414     0E3A  0DAE               	rlf	___flmul@grs,f
  8415     0E3B  0DAF               	rlf	___flmul@grs+1,f
  8416     0E3C  0DB0               	rlf	___flmul@grs+2,f
  8417     0E3D  0DB1               	rlf	___flmul@grs+3,f
  8418     0E3E  0BA8               	decfsz	??___flmul,f
  8419     0E3F  2E39               	goto	u3885
  8420     0E40  0820               	movf	___flmul@b,w
  8421     0E41  00F0               	movwf	__Umul8_16@multiplicand
  8422     0E42  0824               	movf	___flmul@a,w
  8423     0E43  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8424     0E48  0871               	movf	?__Umul8_16+1,w
  8425     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  8426     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  8427     0E4B  00B9               	movwf	___flmul@temp+1
  8428     0E4C  0870               	movf	?__Umul8_16,w
  8429     0E4D  00B8               	movwf	___flmul@temp
  8430     0E4E                     l2978:
  8431     0E4E  0838               	movf	___flmul@temp,w
  8432     0E4F  00A8               	movwf	??___flmul
  8433     0E50  0839               	movf	___flmul@temp+1,w
  8434     0E51  00A9               	movwf	??___flmul+1
  8435     0E52  01AA               	clrf	??___flmul+2
  8436     0E53  01AB               	clrf	??___flmul+3
  8437     0E54  0828               	movf	??___flmul,w
  8438     0E55  07AE               	addwf	___flmul@grs,f
  8439     0E56  0829               	movf	??___flmul+1,w
  8440     0E57  1103               	clrz
  8441     0E58  1803               	skipnc
  8442     0E59  3E01               	addlw	1
  8443     0E5A  1903               	skipnz
  8444     0E5B  2E5D               	goto	u3891
  8445     0E5C  07AF               	addwf	___flmul@grs+1,f
  8446     0E5D                     u3891:
  8447     0E5D  082A               	movf	??___flmul+2,w
  8448     0E5E  1103               	clrz
  8449     0E5F  1803               	skipnc
  8450     0E60  3E01               	addlw	1
  8451     0E61  1903               	skipnz
  8452     0E62  2E64               	goto	u3892
  8453     0E63  07B0               	addwf	___flmul@grs+2,f
  8454     0E64                     u3892:
  8455     0E64  082B               	movf	??___flmul+3,w
  8456     0E65  1103               	clrz
  8457     0E66  1803               	skipnc
  8458     0E67  3E01               	addlw	1
  8459     0E68  1903               	skipnz
  8460     0E69  2E6B               	goto	u3893
  8461     0E6A  07B1               	addwf	___flmul@grs+3,f
  8462     0E6B                     u3893:
  8463     0E6B                     l2980:
  8464     0E6B  0821               	movf	___flmul@b+1,w
  8465     0E6C  00F0               	movwf	__Umul8_16@multiplicand
  8466     0E6D  0826               	movf	___flmul@a+2,w
  8467     0E6E  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8468     0E73  0871               	movf	?__Umul8_16+1,w
  8469     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  8470     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  8471     0E76  00B9               	movwf	___flmul@temp+1
  8472     0E77  0870               	movf	?__Umul8_16,w
  8473     0E78  00B8               	movwf	___flmul@temp
  8474     0E79  0838               	movf	___flmul@temp,w
  8475     0E7A  00A8               	movwf	??___flmul
  8476     0E7B  0839               	movf	___flmul@temp+1,w
  8477     0E7C  00A9               	movwf	??___flmul+1
  8478     0E7D  01AA               	clrf	??___flmul+2
  8479     0E7E  01AB               	clrf	??___flmul+3
  8480     0E7F  0828               	movf	??___flmul,w
  8481     0E80  07B4               	addwf	___flmul@prod,f
  8482     0E81  0829               	movf	??___flmul+1,w
  8483     0E82  1103               	clrz
  8484     0E83  1803               	skipnc
  8485     0E84  3E01               	addlw	1
  8486     0E85  1903               	skipnz
  8487     0E86  2E88               	goto	u3901
  8488     0E87  07B5               	addwf	___flmul@prod+1,f
  8489     0E88                     u3901:
  8490     0E88  082A               	movf	??___flmul+2,w
  8491     0E89  1103               	clrz
  8492     0E8A  1803               	skipnc
  8493     0E8B  3E01               	addlw	1
  8494     0E8C  1903               	skipnz
  8495     0E8D  2E8F               	goto	u3902
  8496     0E8E  07B6               	addwf	___flmul@prod+2,f
  8497     0E8F                     u3902:
  8498     0E8F  082B               	movf	??___flmul+3,w
  8499     0E90  1103               	clrz
  8500     0E91  1803               	skipnc
  8501     0E92  3E01               	addlw	1
  8502     0E93  1903               	skipnz
  8503     0E94  2E96               	goto	u3903
  8504     0E95  07B7               	addwf	___flmul@prod+3,f
  8505     0E96                     u3903:
  8506     0E96                     l2982:
  8507     0E96  0822               	movf	___flmul@b+2,w
  8508     0E97  00F0               	movwf	__Umul8_16@multiplicand
  8509     0E98  0825               	movf	___flmul@a+1,w
  8510     0E99  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8511     0E9E  0871               	movf	?__Umul8_16+1,w
  8512     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  8513     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  8514     0EA1  00B9               	movwf	___flmul@temp+1
  8515     0EA2  0870               	movf	?__Umul8_16,w
  8516     0EA3  00B8               	movwf	___flmul@temp
  8517     0EA4                     l2984:
  8518     0EA4  0838               	movf	___flmul@temp,w
  8519     0EA5  00A8               	movwf	??___flmul
  8520     0EA6  0839               	movf	___flmul@temp+1,w
  8521     0EA7  00A9               	movwf	??___flmul+1
  8522     0EA8  01AA               	clrf	??___flmul+2
  8523     0EA9  01AB               	clrf	??___flmul+3
  8524     0EAA  0828               	movf	??___flmul,w
  8525     0EAB  07B4               	addwf	___flmul@prod,f
  8526     0EAC  0829               	movf	??___flmul+1,w
  8527     0EAD  1103               	clrz
  8528     0EAE  1803               	skipnc
  8529     0EAF  3E01               	addlw	1
  8530     0EB0  1903               	skipnz
  8531     0EB1  2EB3               	goto	u3911
  8532     0EB2  07B5               	addwf	___flmul@prod+1,f
  8533     0EB3                     u3911:
  8534     0EB3  082A               	movf	??___flmul+2,w
  8535     0EB4  1103               	clrz
  8536     0EB5  1803               	skipnc
  8537     0EB6  3E01               	addlw	1
  8538     0EB7  1903               	skipnz
  8539     0EB8  2EBA               	goto	u3912
  8540     0EB9  07B6               	addwf	___flmul@prod+2,f
  8541     0EBA                     u3912:
  8542     0EBA  082B               	movf	??___flmul+3,w
  8543     0EBB  1103               	clrz
  8544     0EBC  1803               	skipnc
  8545     0EBD  3E01               	addlw	1
  8546     0EBE  1903               	skipnz
  8547     0EBF  2EC1               	goto	u3913
  8548     0EC0  07B7               	addwf	___flmul@prod+3,f
  8549     0EC1                     u3913:
  8550     0EC1  0822               	movf	___flmul@b+2,w
  8551     0EC2  00F0               	movwf	__Umul8_16@multiplicand
  8552     0EC3  0826               	movf	___flmul@a+2,w
  8553     0EC4  160A  158A  2447  120A  158A  	fcall	__Umul8_16
  8554     0EC9  0871               	movf	?__Umul8_16+1,w
  8555     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  8556     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  8557     0ECC  00B9               	movwf	___flmul@temp+1
  8558     0ECD  0870               	movf	?__Umul8_16,w
  8559     0ECE  00B8               	movwf	___flmul@temp
  8560     0ECF                     l2986:
  8561     0ECF  0838               	movf	___flmul@temp,w
  8562     0ED0  00A8               	movwf	??___flmul
  8563     0ED1  0839               	movf	___flmul@temp+1,w
  8564     0ED2  00A9               	movwf	??___flmul+1
  8565     0ED3  01AA               	clrf	??___flmul+2
  8566     0ED4  01AB               	clrf	??___flmul+3
  8567     0ED5  3008               	movlw	8
  8568     0ED6                     u3925:
  8569     0ED6  1003               	clrc
  8570     0ED7  0DA8               	rlf	??___flmul,f
  8571     0ED8  0DA9               	rlf	??___flmul+1,f
  8572     0ED9  0DAA               	rlf	??___flmul+2,f
  8573     0EDA  0DAB               	rlf	??___flmul+3,f
  8574     0EDB                     u3920:
  8575     0EDB  3EFF               	addlw	-1
  8576     0EDC  1D03               	skipz
  8577     0EDD  2ED6               	goto	u3925
  8578     0EDE  0828               	movf	??___flmul,w
  8579     0EDF  07B4               	addwf	___flmul@prod,f
  8580     0EE0  0829               	movf	??___flmul+1,w
  8581     0EE1  1103               	clrz
  8582     0EE2  1803               	skipnc
  8583     0EE3  3E01               	addlw	1
  8584     0EE4  1903               	skipnz
  8585     0EE5  2EE7               	goto	u3931
  8586     0EE6  07B5               	addwf	___flmul@prod+1,f
  8587     0EE7                     u3931:
  8588     0EE7  082A               	movf	??___flmul+2,w
  8589     0EE8  1103               	clrz
  8590     0EE9  1803               	skipnc
  8591     0EEA  3E01               	addlw	1
  8592     0EEB  1903               	skipnz
  8593     0EEC  2EEE               	goto	u3932
  8594     0EED  07B6               	addwf	___flmul@prod+2,f
  8595     0EEE                     u3932:
  8596     0EEE  082B               	movf	??___flmul+3,w
  8597     0EEF  1103               	clrz
  8598     0EF0  1803               	skipnc
  8599     0EF1  3E01               	addlw	1
  8600     0EF2  1903               	skipnz
  8601     0EF3  2EF5               	goto	u3933
  8602     0EF4  07B7               	addwf	___flmul@prod+3,f
  8603     0EF5                     u3933:
  8604     0EF5                     l2988:
  8605     0EF5  082E               	movf	___flmul@grs,w
  8606     0EF6  00A8               	movwf	??___flmul
  8607     0EF7  082F               	movf	___flmul@grs+1,w
  8608     0EF8  00A9               	movwf	??___flmul+1
  8609     0EF9  0830               	movf	___flmul@grs+2,w
  8610     0EFA  00AA               	movwf	??___flmul+2
  8611     0EFB  0831               	movf	___flmul@grs+3,w
  8612     0EFC  00AB               	movwf	??___flmul+3
  8613     0EFD  3018               	movlw	24
  8614     0EFE                     u3945:
  8615     0EFE  1003               	clrc
  8616     0EFF  0CAB               	rrf	??___flmul+3,f
  8617     0F00  0CAA               	rrf	??___flmul+2,f
  8618     0F01  0CA9               	rrf	??___flmul+1,f
  8619     0F02  0CA8               	rrf	??___flmul,f
  8620     0F03                     u3940:
  8621     0F03  3EFF               	addlw	-1
  8622     0F04  1D03               	skipz
  8623     0F05  2EFE               	goto	u3945
  8624     0F06  0828               	movf	??___flmul,w
  8625     0F07  07B4               	addwf	___flmul@prod,f
  8626     0F08  0829               	movf	??___flmul+1,w
  8627     0F09  1103               	clrz
  8628     0F0A  1803               	skipnc
  8629     0F0B  3E01               	addlw	1
  8630     0F0C  1903               	skipnz
  8631     0F0D  2F0F               	goto	u3951
  8632     0F0E  07B5               	addwf	___flmul@prod+1,f
  8633     0F0F                     u3951:
  8634     0F0F  082A               	movf	??___flmul+2,w
  8635     0F10  1103               	clrz
  8636     0F11  1803               	skipnc
  8637     0F12  3E01               	addlw	1
  8638     0F13  1903               	skipnz
  8639     0F14  2F16               	goto	u3952
  8640     0F15  07B6               	addwf	___flmul@prod+2,f
  8641     0F16                     u3952:
  8642     0F16  082B               	movf	??___flmul+3,w
  8643     0F17  1103               	clrz
  8644     0F18  1803               	skipnc
  8645     0F19  3E01               	addlw	1
  8646     0F1A  1903               	skipnz
  8647     0F1B  2F1D               	goto	u3953
  8648     0F1C  07B7               	addwf	___flmul@prod+3,f
  8649     0F1D                     u3953:
  8650     0F1D                     l2990:
  8651     0F1D  3008               	movlw	8
  8652     0F1E  00A8               	movwf	??___flmul
  8653     0F1F                     u3965:
  8654     0F1F  1003               	clrc
  8655     0F20  0DAE               	rlf	___flmul@grs,f
  8656     0F21  0DAF               	rlf	___flmul@grs+1,f
  8657     0F22  0DB0               	rlf	___flmul@grs+2,f
  8658     0F23  0DB1               	rlf	___flmul@grs+3,f
  8659     0F24  0BA8               	decfsz	??___flmul,f
  8660     0F25  2F1F               	goto	u3965
  8661     0F26                     l2992:
  8662     0F26  0833               	movf	___flmul@bexp,w
  8663     0F27  0732               	addwf	___flmul@aexp,w
  8664     0F28  00A8               	movwf	??___flmul
  8665     0F29  01A9               	clrf	??___flmul+1
  8666     0F2A  0DA9               	rlf	??___flmul+1,f
  8667     0F2B  0828               	movf	??___flmul,w
  8668     0F2C  3E82               	addlw	130
  8669     0F2D  00B8               	movwf	___flmul@temp
  8670     0F2E  0829               	movf	??___flmul+1,w
  8671     0F2F  1803               	skipnc
  8672     0F30  3E01               	addlw	1
  8673     0F31  3EFF               	addlw	255
  8674     0F32  00B9               	movwf	___flmul@temp+1
  8675     0F33  2F51               	goto	l3004
  8676     0F34                     l2994:
  8677     0F34  3001               	movlw	1
  8678     0F35  00A8               	movwf	??___flmul
  8679     0F36                     u3975:
  8680     0F36  1003               	clrc
  8681     0F37  0DB4               	rlf	___flmul@prod,f
  8682     0F38  0DB5               	rlf	___flmul@prod+1,f
  8683     0F39  0DB6               	rlf	___flmul@prod+2,f
  8684     0F3A  0DB7               	rlf	___flmul@prod+3,f
  8685     0F3B  0BA8               	decfsz	??___flmul,f
  8686     0F3C  2F36               	goto	u3975
  8687     0F3D                     l2996:
  8688     0F3D  1FB1               	btfss	___flmul@grs+3,7
  8689     0F3E  2F40               	goto	u3981
  8690     0F3F  2F41               	goto	u3980
  8691     0F40                     u3981:
  8692     0F40  2F42               	goto	l3000
  8693     0F41                     u3980:
  8694     0F41                     l2998:
  8695     0F41  1434               	bsf	___flmul@prod,0
  8696     0F42                     l3000:
  8697     0F42  3001               	movlw	1
  8698     0F43  00A8               	movwf	??___flmul
  8699     0F44                     u3995:
  8700     0F44  1003               	clrc
  8701     0F45  0DAE               	rlf	___flmul@grs,f
  8702     0F46  0DAF               	rlf	___flmul@grs+1,f
  8703     0F47  0DB0               	rlf	___flmul@grs+2,f
  8704     0F48  0DB1               	rlf	___flmul@grs+3,f
  8705     0F49  0BA8               	decfsz	??___flmul,f
  8706     0F4A  2F44               	goto	u3995
  8707     0F4B                     l3002:
  8708     0F4B  30FF               	movlw	255
  8709     0F4C  07B8               	addwf	___flmul@temp,f
  8710     0F4D  1803               	skipnc
  8711     0F4E  0AB9               	incf	___flmul@temp+1,f
  8712     0F4F  30FF               	movlw	255
  8713     0F50  07B9               	addwf	___flmul@temp+1,f
  8714     0F51                     l3004:
  8715     0F51  1FB6               	btfss	___flmul@prod+2,7
  8716     0F52  2F54               	goto	u4001
  8717     0F53  2F55               	goto	u4000
  8718     0F54                     u4001:
  8719     0F54  2F34               	goto	l2994
  8720     0F55                     u4000:
  8721     0F55                     l3006:
  8722     0F55  01B2               	clrf	___flmul@aexp
  8723     0F56                     l3008:
  8724     0F56  1FB1               	btfss	___flmul@grs+3,7
  8725     0F57  2F59               	goto	u4011
  8726     0F58  2F5A               	goto	u4010
  8727     0F59                     u4011:
  8728     0F59  2F76               	goto	l3016
  8729     0F5A                     u4010:
  8730     0F5A                     l3010:
  8731     0F5A  30FF               	movlw	255
  8732     0F5B  052E               	andwf	___flmul@grs,w
  8733     0F5C  00A8               	movwf	??___flmul
  8734     0F5D  30FF               	movlw	255
  8735     0F5E  052F               	andwf	___flmul@grs+1,w
  8736     0F5F  00A9               	movwf	??___flmul+1
  8737     0F60  30FF               	movlw	255
  8738     0F61  0530               	andwf	___flmul@grs+2,w
  8739     0F62  00AA               	movwf	??___flmul+2
  8740     0F63  307F               	movlw	127
  8741     0F64  0531               	andwf	___flmul@grs+3,w
  8742     0F65  00AB               	movwf	??___flmul+3
  8743     0F66  082B               	movf	??___flmul+3,w
  8744     0F67  042A               	iorwf	??___flmul+2,w
  8745     0F68  0429               	iorwf	??___flmul+1,w
  8746     0F69  0428               	iorwf	??___flmul,w
  8747     0F6A  1903               	skipnz
  8748     0F6B  2F6D               	goto	u4021
  8749     0F6C  2F6E               	goto	u4020
  8750     0F6D                     u4021:
  8751     0F6D  2F71               	goto	l780
  8752     0F6E                     u4020:
  8753     0F6E                     l3012:
  8754     0F6E  3001               	movlw	1
  8755     0F6F  00B2               	movwf	___flmul@aexp
  8756     0F70  2F76               	goto	l3016
  8757     0F71                     l780:
  8758     0F71  1C34               	btfss	___flmul@prod,0
  8759     0F72  2F74               	goto	u4031
  8760     0F73  2F75               	goto	u4030
  8761     0F74                     u4031:
  8762     0F74  2F76               	goto	l3016
  8763     0F75                     u4030:
  8764     0F75  2F6E               	goto	l3012
  8765     0F76                     l3016:
  8766     0F76  0832               	movf	___flmul@aexp,w
  8767     0F77  1903               	btfsc	3,2
  8768     0F78  2F7A               	goto	u4041
  8769     0F79  2F7B               	goto	u4040
  8770     0F7A                     u4041:
  8771     0F7A  2FAC               	goto	l3026
  8772     0F7B                     u4040:
  8773     0F7B                     l3018:
  8774     0F7B  3001               	movlw	1
  8775     0F7C  07B4               	addwf	___flmul@prod,f
  8776     0F7D  3000               	movlw	0
  8777     0F7E  1803               	skipnc
  8778     0F7F  3001               	movlw	1
  8779     0F80  07B5               	addwf	___flmul@prod+1,f
  8780     0F81  3000               	movlw	0
  8781     0F82  1803               	skipnc
  8782     0F83  3001               	movlw	1
  8783     0F84  07B6               	addwf	___flmul@prod+2,f
  8784     0F85  3000               	movlw	0
  8785     0F86  1803               	skipnc
  8786     0F87  3001               	movlw	1
  8787     0F88  07B7               	addwf	___flmul@prod+3,f
  8788     0F89                     l3020:
  8789     0F89  1C37               	btfss	___flmul@prod+3,0
  8790     0F8A  2F8C               	goto	u4051
  8791     0F8B  2F8D               	goto	u4050
  8792     0F8C                     u4051:
  8793     0F8C  2FAC               	goto	l3026
  8794     0F8D                     u4050:
  8795     0F8D                     l3022:
  8796     0F8D  0834               	movf	___flmul@prod,w
  8797     0F8E  00A8               	movwf	??___flmul
  8798     0F8F  0835               	movf	___flmul@prod+1,w
  8799     0F90  00A9               	movwf	??___flmul+1
  8800     0F91  0836               	movf	___flmul@prod+2,w
  8801     0F92  00AA               	movwf	??___flmul+2
  8802     0F93  0837               	movf	___flmul@prod+3,w
  8803     0F94  00AB               	movwf	??___flmul+3
  8804     0F95  3001               	movlw	1
  8805     0F96  00AC               	movwf	??___flmul+4
  8806     0F97                     u4065:
  8807     0F97  0D2B               	rlf	??___flmul+3,w
  8808     0F98  0CAB               	rrf	??___flmul+3,f
  8809     0F99  0CAA               	rrf	??___flmul+2,f
  8810     0F9A  0CA9               	rrf	??___flmul+1,f
  8811     0F9B  0CA8               	rrf	??___flmul,f
  8812     0F9C                     u4060:
  8813     0F9C  0BAC               	decfsz	??___flmul+4,f
  8814     0F9D  2F97               	goto	u4065
  8815     0F9E  082B               	movf	??___flmul+3,w
  8816     0F9F  00B7               	movwf	___flmul@prod+3
  8817     0FA0  082A               	movf	??___flmul+2,w
  8818     0FA1  00B6               	movwf	___flmul@prod+2
  8819     0FA2  0829               	movf	??___flmul+1,w
  8820     0FA3  00B5               	movwf	___flmul@prod+1
  8821     0FA4  0828               	movf	??___flmul,w
  8822     0FA5  00B4               	movwf	___flmul@prod
  8823     0FA6                     l3024:
  8824     0FA6  3001               	movlw	1
  8825     0FA7  07B8               	addwf	___flmul@temp,f
  8826     0FA8  1803               	skipnc
  8827     0FA9  0AB9               	incf	___flmul@temp+1,f
  8828     0FAA  3000               	movlw	0
  8829     0FAB  07B9               	addwf	___flmul@temp+1,f
  8830     0FAC                     l3026:
  8831     0FAC  0839               	movf	___flmul@temp+1,w
  8832     0FAD  3A80               	xorlw	128
  8833     0FAE  00FF               	movwf	btemp+1
  8834     0FAF  3080               	movlw	128
  8835     0FB0  027F               	subwf	btemp+1,w
  8836     0FB1  1D03               	skipz
  8837     0FB2  2FB5               	goto	u4075
  8838     0FB3  30FF               	movlw	255
  8839     0FB4  0238               	subwf	___flmul@temp,w
  8840     0FB5                     u4075:
  8841     0FB5  1C03               	skipc
  8842     0FB6  2FB8               	goto	u4071
  8843     0FB7  2FB9               	goto	u4070
  8844     0FB8                     u4071:
  8845     0FB8  2FC4               	goto	l3030
  8846     0FB9                     u4070:
  8847     0FB9                     l3028:
  8848     0FB9  307F               	movlw	127
  8849     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  8850     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  8851     0FBC  00B7               	movwf	___flmul@prod+3
  8852     0FBD  3080               	movlw	128
  8853     0FBE  00B6               	movwf	___flmul@prod+2
  8854     0FBF  3000               	movlw	0
  8855     0FC0  00B5               	movwf	___flmul@prod+1
  8856     0FC1  3000               	movlw	0
  8857     0FC2  00B4               	movwf	___flmul@prod
  8858     0FC3  2FF5               	goto	l786
  8859     0FC4                     l3030:
  8860     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  8861     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  8862     0FC6  0839               	movf	___flmul@temp+1,w
  8863     0FC7  3A80               	xorlw	128
  8864     0FC8  00FF               	movwf	btemp+1
  8865     0FC9  3080               	movlw	128
  8866     0FCA  027F               	subwf	btemp+1,w
  8867     0FCB  1D03               	skipz
  8868     0FCC  2FCF               	goto	u4085
  8869     0FCD  3001               	movlw	1
  8870     0FCE  0238               	subwf	___flmul@temp,w
  8871     0FCF                     u4085:
  8872     0FCF  1803               	skipnc
  8873     0FD0  2FD2               	goto	u4081
  8874     0FD1  2FD3               	goto	u4080
  8875     0FD2                     u4081:
  8876     0FD2  2FDF               	goto	l3036
  8877     0FD3                     u4080:
  8878     0FD3                     l3032:
  8879     0FD3  3000               	movlw	0
  8880     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  8881     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  8882     0FD6  00B7               	movwf	___flmul@prod+3
  8883     0FD7  3000               	movlw	0
  8884     0FD8  00B6               	movwf	___flmul@prod+2
  8885     0FD9  3000               	movlw	0
  8886     0FDA  00B5               	movwf	___flmul@prod+1
  8887     0FDB  3000               	movlw	0
  8888     0FDC  00B4               	movwf	___flmul@prod
  8889     0FDD                     l3034:
  8890     0FDD  01AD               	clrf	___flmul@sign
  8891     0FDE  2FF5               	goto	l786
  8892     0FDF                     l3036:
  8893     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  8894     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  8895     0FE1  0838               	movf	___flmul@temp,w
  8896     0FE2  00B3               	movwf	___flmul@bexp
  8897     0FE3  30FF               	movlw	255
  8898     0FE4  05B4               	andwf	___flmul@prod,f
  8899     0FE5  30FF               	movlw	255
  8900     0FE6  05B5               	andwf	___flmul@prod+1,f
  8901     0FE7  307F               	movlw	127
  8902     0FE8  05B6               	andwf	___flmul@prod+2,f
  8903     0FE9  3000               	movlw	0
  8904     0FEA  05B7               	andwf	___flmul@prod+3,f
  8905     0FEB                     l3038:
  8906     0FEB  1C33               	btfss	___flmul@bexp,0
  8907     0FEC  2FEE               	goto	u4091
  8908     0FED  2FEF               	goto	u4090
  8909     0FEE                     u4091:
  8910     0FEE  2FF0               	goto	l3042
  8911     0FEF                     u4090:
  8912     0FEF                     l3040:
  8913     0FEF  17B6               	bsf	___flmul@prod+2,7
  8914     0FF0                     l3042:
  8915     0FF0  0833               	movf	___flmul@bexp,w
  8916     0FF1  00A8               	movwf	??___flmul
  8917     0FF2  1003               	clrc
  8918     0FF3  0C28               	rrf	??___flmul,w
  8919     0FF4  00B7               	movwf	___flmul@prod+3
  8920     0FF5                     l786:
  8921     0FF5  082D               	movf	___flmul@sign,w
  8922     0FF6  04B7               	iorwf	___flmul@prod+3,f
  8923     0FF7                     l3044:
  8924     0FF7  0837               	movf	___flmul@prod+3,w
  8925     0FF8  00A3               	movwf	?___flmul+3
  8926     0FF9  0836               	movf	___flmul@prod+2,w
  8927     0FFA  00A2               	movwf	?___flmul+2
  8928     0FFB  0835               	movf	___flmul@prod+1,w
  8929     0FFC  00A1               	movwf	?___flmul+1
  8930     0FFD  0834               	movf	___flmul@prod,w
  8931     0FFE  00A0               	movwf	?___flmul
  8932     0FFF                     l774:
  8933     0FFF  0008               	return
  8934     1000                     __end_of___flmul:
  8935                           
  8936                           	psect	text41
  8937     1C47                     __ptext41:	
  8938 ;; *************** function __Umul8_16 *****************
  8939 ;; Defined at:
  8940 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  multiplier      1    wreg     unsigned char 
  8943 ;;  multiplicand    1    0[COMMON] unsigned char 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;  multiplier      1    8[COMMON] unsigned char 
  8946 ;;  word_mpld       2    6[COMMON] unsigned short 
  8947 ;;  product         2    4[COMMON] unsigned short 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  2    0[COMMON] unsigned int 
  8950 ;; Registers used:
  8951 ;;		wreg, status,2, status,0
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8957 ;;      Params:         2       0       0       0       0
  8958 ;;      Locals:         5       0       0       0       0
  8959 ;;      Temps:          2       0       0       0       0
  8960 ;;      Totals:         9       0       0       0       0
  8961 ;;Total ram usage:        9 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		___flmul
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970     1C47                     __Umul8_16:	
  8971                           ;psect for function __Umul8_16
  8972                           
  8973                           
  8974                           ;incstack = 0
  8975                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8976                           ;__Umul8_16@multiplier stored from wreg
  8977     1C47  00F8               	movwf	__Umul8_16@multiplier
  8978     1C48                     l2632:
  8979     1C48  01F4               	clrf	__Umul8_16@product
  8980     1C49  01F5               	clrf	__Umul8_16@product+1
  8981     1C4A                     l2634:
  8982     1C4A  0870               	movf	__Umul8_16@multiplicand,w
  8983     1C4B  00F2               	movwf	??__Umul8_16
  8984     1C4C  01F3               	clrf	??__Umul8_16+1
  8985     1C4D  0872               	movf	??__Umul8_16,w
  8986     1C4E  00F6               	movwf	__Umul8_16@word_mpld
  8987     1C4F  0873               	movf	??__Umul8_16+1,w
  8988     1C50  00F7               	movwf	__Umul8_16@word_mpld+1
  8989     1C51                     l2636:
  8990     1C51  1C78               	btfss	__Umul8_16@multiplier,0
  8991     1C52  2C54               	goto	u3131
  8992     1C53  2C55               	goto	u3130
  8993     1C54                     u3131:
  8994     1C54  2C5B               	goto	l793
  8995     1C55                     u3130:
  8996     1C55                     l2638:
  8997     1C55  0876               	movf	__Umul8_16@word_mpld,w
  8998     1C56  07F4               	addwf	__Umul8_16@product,f
  8999     1C57  1803               	skipnc
  9000     1C58  0AF5               	incf	__Umul8_16@product+1,f
  9001     1C59  0877               	movf	__Umul8_16@word_mpld+1,w
  9002     1C5A  07F5               	addwf	__Umul8_16@product+1,f
  9003     1C5B                     l793:
  9004     1C5B  3001               	movlw	1
  9005     1C5C                     u3145:
  9006     1C5C  1003               	clrc
  9007     1C5D  0DF6               	rlf	__Umul8_16@word_mpld,f
  9008     1C5E  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9009     1C5F  3EFF               	addlw	-1
  9010     1C60  1D03               	skipz
  9011     1C61  2C5C               	goto	u3145
  9012     1C62  1003               	clrc
  9013     1C63  0CF8               	rrf	__Umul8_16@multiplier,f
  9014     1C64                     l2640:
  9015     1C64  0878               	movf	__Umul8_16@multiplier,w
  9016     1C65  1D03               	btfss	3,2
  9017     1C66  2C68               	goto	u3151
  9018     1C67  2C69               	goto	u3150
  9019     1C68                     u3151:
  9020     1C68  2C51               	goto	l2636
  9021     1C69                     u3150:
  9022     1C69                     l2642:
  9023     1C69  0875               	movf	__Umul8_16@product+1,w
  9024     1C6A  00F1               	movwf	?__Umul8_16+1
  9025     1C6B  0874               	movf	__Umul8_16@product,w
  9026     1C6C  00F0               	movwf	?__Umul8_16
  9027     1C6D                     l795:
  9028     1C6D  0008               	return
  9029     1C6E                     __end_of__Umul8_16:
  9030                           
  9031                           	psect	text42
  9032     19E7                     __ptext42:	
  9033 ;; *************** function _TCN75A_Init *****************
  9034 ;; Defined at:
  9035 ;;		line 7 in file "TCN75A.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  adr             1    wreg     unsigned char 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  adr             1    0[COMMON] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, pclath, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9049 ;;      Params:         0       0       0       0       0
  9050 ;;      Locals:         1       0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0
  9052 ;;      Totals:         1       0       0       0       0
  9053 ;;Total ram usage:        1 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 1
  9056 ;; This function calls:
  9057 ;;		_I2C_Master_Init
  9058 ;; This function is called by:
  9059 ;;		_main
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063     19E7                     _TCN75A_Init:	
  9064                           ;psect for function _TCN75A_Init
  9065                           
  9066                           
  9067                           ;incstack = 0
  9068                           ; Regs used in _TCN75A_Init: [wreg+status,2+status,0+pclath+cstack]
  9069                           ;TCN75A_Init@adr stored from wreg
  9070     19E7  00F0               	movwf	TCN75A_Init@adr
  9071     19E8                     l3628:
  9072                           
  9073                           ;TCN75A.c: 8:     TCN75A_Address = adr;
  9074     19E8  0870               	movf	TCN75A_Init@adr,w
  9075     19E9  1683               	bsf	3,5	;RP0=1, select bank1
  9076     19EA  1303               	bcf	3,6	;RP1=0, select bank1
  9077     19EB  00EF               	movwf	_TCN75A_Address^(0+128)
  9078     19EC                     l3630:
  9079                           
  9080                           ;TCN75A.c: 9:     I2C_Master_Init();
  9081     19EC  160A  158A  2222  160A  158A  	fcall	_I2C_Master_Init
  9082     19F1                     l217:
  9083     19F1  0008               	return
  9084     19F2                     __end_of_TCN75A_Init:
  9085                           
  9086                           	psect	text43
  9087     1A22                     __ptext43:	
  9088 ;; *************** function _I2C_Master_Init *****************
  9089 ;; Defined at:
  9090 ;;		line 4 in file "i2c.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;		None
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		status,2
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9104 ;;      Params:         0       0       0       0       0
  9105 ;;      Locals:         0       0       0       0       0
  9106 ;;      Temps:          0       0       0       0       0
  9107 ;;      Totals:         0       0       0       0       0
  9108 ;;Total ram usage:        0 bytes
  9109 ;; Hardware stack levels used: 1
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_main
  9114 ;;		_TCN75A_Init
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118     1A22                     _I2C_Master_Init:	
  9119                           ;psect for function _I2C_Master_Init
  9120                           
  9121     1A22                     l3568:	
  9122                           ;incstack = 0
  9123                           ; Regs used in _I2C_Master_Init: [status,2]
  9124                           
  9125                           
  9126                           ;i2c.c: 5:     SSPCON = 0x28;
  9127     1A22  3028               	movlw	40
  9128     1A23  1283               	bcf	3,5	;RP0=0, select bank0
  9129     1A24  1303               	bcf	3,6	;RP1=0, select bank0
  9130     1A25  0094               	movwf	20	;volatile
  9131     1A26                     l3570:
  9132                           
  9133                           ;i2c.c: 6:     SSPCON2 = 0x00;
  9134     1A26  1683               	bsf	3,5	;RP0=1, select bank1
  9135     1A27  1303               	bcf	3,6	;RP1=0, select bank1
  9136     1A28  0191               	clrf	17	;volatile
  9137                           
  9138                           ;i2c.c: 7:     SSPSTAT = 0x00;
  9139     1A29  0194               	clrf	20	;volatile
  9140     1A2A                     l3572:
  9141                           
  9142                           ;i2c.c: 8:     SSPADD = ((16000000/4)/100000) - 1;
  9143     1A2A  3027               	movlw	39
  9144     1A2B  0093               	movwf	19	;volatile
  9145     1A2C                     l3574:
  9146                           
  9147                           ;i2c.c: 9:     TRISC3 = 1;
  9148     1A2C  1587               	bsf	7,3	;volatile
  9149     1A2D                     l3576:
  9150                           
  9151                           ;i2c.c: 10:     TRISC4 = 1;
  9152     1A2D  1607               	bsf	7,4	;volatile
  9153     1A2E                     l100:
  9154     1A2E  0008               	return
  9155     1A2F                     __end_of_I2C_Master_Init:
  9156                           
  9157                           	psect	text44
  9158     1A60                     __ptext44:	
  9159 ;; *************** function _TCN75A_GetLimitTemp *****************
  9160 ;; Defined at:
  9161 ;;		line 62 in file "TCN75A.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;		None
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;		None
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  4   36[BANK0 ] float 
  9168 ;; Registers used:
  9169 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9175 ;;      Params:         0       4       0       0       0
  9176 ;;      Locals:         0       0       0       0       0
  9177 ;;      Temps:          0       0       0       0       0
  9178 ;;      Totals:         0       4       0       0       0
  9179 ;;Total ram usage:        4 bytes
  9180 ;; Hardware stack levels used: 1
  9181 ;; Hardware stack levels required when called: 3
  9182 ;; This function calls:
  9183 ;;		_TCN75A_GetTemp
  9184 ;; This function is called by:
  9185 ;;		_main
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189     1A60                     _TCN75A_GetLimitTemp:	
  9190                           ;psect for function _TCN75A_GetLimitTemp
  9191                           
  9192     1A60                     l3668:	
  9193                           ;incstack = 0
  9194                           ; Regs used in _TCN75A_GetLimitTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9195                           
  9196                           
  9197                           ;TCN75A.c: 63:     return TCN75A_GetTemp(0x03);
  9198     1A60  3003               	movlw	3
  9199     1A61  160A  118A  209D  160A  158A  	fcall	_TCN75A_GetTemp
  9200     1A66  1283               	bcf	3,5	;RP0=0, select bank0
  9201     1A67  1303               	bcf	3,6	;RP1=0, select bank0
  9202     1A68  0837               	movf	?_TCN75A_GetTemp+3,w
  9203     1A69  00C7               	movwf	?_TCN75A_GetLimitTemp+3
  9204     1A6A  0836               	movf	?_TCN75A_GetTemp+2,w
  9205     1A6B  00C6               	movwf	?_TCN75A_GetLimitTemp+2
  9206     1A6C  0835               	movf	?_TCN75A_GetTemp+1,w
  9207     1A6D  00C5               	movwf	?_TCN75A_GetLimitTemp+1
  9208     1A6E  0834               	movf	?_TCN75A_GetTemp,w
  9209     1A6F  00C4               	movwf	?_TCN75A_GetLimitTemp
  9210     1A70                     l233:
  9211     1A70  0008               	return
  9212     1A71                     __end_of_TCN75A_GetLimitTemp:
  9213                           
  9214                           	psect	text45
  9215     1A4F                     __ptext45:	
  9216 ;; *************** function _TCN75A_GetHystTemp *****************
  9217 ;; Defined at:
  9218 ;;		line 66 in file "TCN75A.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;		None
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  4   36[BANK0 ] float 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9232 ;;      Params:         0       4       0       0       0
  9233 ;;      Locals:         0       0       0       0       0
  9234 ;;      Temps:          0       0       0       0       0
  9235 ;;      Totals:         0       4       0       0       0
  9236 ;;Total ram usage:        4 bytes
  9237 ;; Hardware stack levels used: 1
  9238 ;; Hardware stack levels required when called: 3
  9239 ;; This function calls:
  9240 ;;		_TCN75A_GetTemp
  9241 ;; This function is called by:
  9242 ;;		_main
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246     1A4F                     _TCN75A_GetHystTemp:	
  9247                           ;psect for function _TCN75A_GetHystTemp
  9248                           
  9249     1A4F                     l3672:	
  9250                           ;incstack = 0
  9251                           ; Regs used in _TCN75A_GetHystTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9252                           
  9253                           
  9254                           ;TCN75A.c: 67:     return TCN75A_GetTemp(0x02);
  9255     1A4F  3002               	movlw	2
  9256     1A50  160A  118A  209D  160A  158A  	fcall	_TCN75A_GetTemp
  9257     1A55  1283               	bcf	3,5	;RP0=0, select bank0
  9258     1A56  1303               	bcf	3,6	;RP1=0, select bank0
  9259     1A57  0837               	movf	?_TCN75A_GetTemp+3,w
  9260     1A58  00C7               	movwf	?_TCN75A_GetHystTemp+3
  9261     1A59  0836               	movf	?_TCN75A_GetTemp+2,w
  9262     1A5A  00C6               	movwf	?_TCN75A_GetHystTemp+2
  9263     1A5B  0835               	movf	?_TCN75A_GetTemp+1,w
  9264     1A5C  00C5               	movwf	?_TCN75A_GetHystTemp+1
  9265     1A5D  0834               	movf	?_TCN75A_GetTemp,w
  9266     1A5E  00C4               	movwf	?_TCN75A_GetHystTemp
  9267     1A5F                     l236:
  9268     1A5F  0008               	return
  9269     1A60                     __end_of_TCN75A_GetHystTemp:
  9270                           
  9271                           	psect	text46
  9272     109D                     __ptext46:	
  9273 ;; *************** function _TCN75A_GetTemp *****************
  9274 ;; Defined at:
  9275 ;;		line 86 in file "TCN75A.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  reg             1    wreg     unsigned char 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  reg             1   29[BANK0 ] unsigned char 
  9280 ;;  temp            4   25[BANK0 ] float 
  9281 ;;  tempLow         1   35[BANK0 ] unsigned char 
  9282 ;;  tempHigh        1   34[BANK0 ] char 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  4   20[BANK0 ] float 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9292 ;;      Params:         0       4       0       0       0
  9293 ;;      Locals:         0      11       0       0       0
  9294 ;;      Temps:          0       1       0       0       0
  9295 ;;      Totals:         0      16       0       0       0
  9296 ;;Total ram usage:       16 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; Hardware stack levels required when called: 2
  9299 ;; This function calls:
  9300 ;;		_I2C_ACK
  9301 ;;		_I2C_Master_Start
  9302 ;;		_I2C_Master_Stop
  9303 ;;		_I2C_Master_Write
  9304 ;;		_I2C_NACK
  9305 ;;		_I2C_Read_Byte
  9306 ;;		___fladd
  9307 ;;		___xxtofl
  9308 ;; This function is called by:
  9309 ;;		_TCN75A_GetLimitTemp
  9310 ;;		_TCN75A_GetHystTemp
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314     109D                     _TCN75A_GetTemp:	
  9315                           ;psect for function _TCN75A_GetTemp
  9316                           
  9317                           
  9318                           ;incstack = 0
  9319                           ; Regs used in _TCN75A_GetTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9320                           ;TCN75A_GetTemp@reg stored from wreg
  9321     109D  1283               	bcf	3,5	;RP0=0, select bank0
  9322     109E  1303               	bcf	3,6	;RP1=0, select bank0
  9323     109F  00BD               	movwf	TCN75A_GetTemp@reg
  9324     10A0                     l3584:
  9325                           
  9326                           ;TCN75A.c: 87:     int8_t tempHigh;;TCN75A.c: 88:     uint8_t tempLow;;TCN75A.c: 89:    
      +                           float temp;;TCN75A.c: 91:     I2C_Master_Start();
  9327     10A0  160A  158A  21D5  160A  118A  	fcall	_I2C_Master_Start
  9328                           
  9329                           ;TCN75A.c: 92:     I2C_Master_Write((unsigned char)(TCN75A_Address << 1));
  9330     10A5  1683               	bsf	3,5	;RP0=1, select bank1
  9331     10A6  1303               	bcf	3,6	;RP1=0, select bank1
  9332     10A7  086F               	movf	_TCN75A_Address^(0+128),w
  9333     10A8  1283               	bcf	3,5	;RP0=0, select bank0
  9334     10A9  1303               	bcf	3,6	;RP1=0, select bank0
  9335     10AA  00B8               	movwf	??_TCN75A_GetTemp
  9336     10AB  0738               	addwf	??_TCN75A_GetTemp,w
  9337     10AC  160A  158A  222F  160A  118A  	fcall	_I2C_Master_Write
  9338                           
  9339                           ;TCN75A.c: 93:     I2C_Master_Write(reg);
  9340     10B1  1283               	bcf	3,5	;RP0=0, select bank0
  9341     10B2  1303               	bcf	3,6	;RP1=0, select bank0
  9342     10B3  083D               	movf	TCN75A_GetTemp@reg,w
  9343     10B4  160A  158A  222F  160A  118A  	fcall	_I2C_Master_Write
  9344                           
  9345                           ;TCN75A.c: 94:     I2C_Master_Stop();
  9346     10B9  160A  158A  21DE  160A  118A  	fcall	_I2C_Master_Stop
  9347                           
  9348                           ;TCN75A.c: 96:     I2C_Master_Start();
  9349     10BE  160A  158A  21D5  160A  118A  	fcall	_I2C_Master_Start
  9350                           
  9351                           ;TCN75A.c: 97:     I2C_Master_Write((unsigned char)((TCN75A_Address << 1) | 1));
  9352     10C3  1403               	setc
  9353     10C4  1683               	bsf	3,5	;RP0=1, select bank1
  9354     10C5  1303               	bcf	3,6	;RP1=0, select bank1
  9355     10C6  0D6F               	rlf	_TCN75A_Address^(0+128),w
  9356     10C7  160A  158A  222F  160A  118A  	fcall	_I2C_Master_Write
  9357                           
  9358                           ;TCN75A.c: 98:     tempHigh = (int8_t)I2C_Read_Byte();
  9359     10CC  160A  158A  22BA  160A  118A  	fcall	_I2C_Read_Byte
  9360     10D1  1283               	bcf	3,5	;RP0=0, select bank0
  9361     10D2  1303               	bcf	3,6	;RP1=0, select bank0
  9362     10D3  00C2               	movwf	TCN75A_GetTemp@tempHigh
  9363                           
  9364                           ;TCN75A.c: 99:     I2C_ACK();
  9365     10D4  160A  158A  21FD  160A  118A  	fcall	_I2C_ACK
  9366                           
  9367                           ;TCN75A.c: 100:     tempLow = I2C_Read_Byte();
  9368     10D9  160A  158A  22BA  160A  118A  	fcall	_I2C_Read_Byte
  9369     10DE  1283               	bcf	3,5	;RP0=0, select bank0
  9370     10DF  1303               	bcf	3,6	;RP1=0, select bank0
  9371     10E0  00C3               	movwf	TCN75A_GetTemp@tempLow
  9372                           
  9373                           ;TCN75A.c: 101:     I2C_NACK();
  9374     10E1  160A  158A  2209  160A  118A  	fcall	_I2C_NACK
  9375                           
  9376                           ;TCN75A.c: 102:     I2C_Master_Stop();
  9377     10E6  160A  158A  21DE  160A  118A  	fcall	_I2C_Master_Stop
  9378     10EB                     l3586:
  9379                           
  9380                           ;TCN75A.c: 104:     temp = (float)tempHigh + ((tempLow >> 7) ? 0.5f : 0.0f);
  9381     10EB  1283               	bcf	3,5	;RP0=0, select bank0
  9382     10EC  1303               	bcf	3,6	;RP1=0, select bank0
  9383     10ED  0843               	movf	TCN75A_GetTemp@tempLow,w
  9384     10EE  00B8               	movwf	??_TCN75A_GetTemp
  9385     10EF  3007               	movlw	7
  9386     10F0                     u4985:
  9387     10F0  1003               	clrc
  9388     10F1  0CB8               	rrf	??_TCN75A_GetTemp,f
  9389     10F2  3EFF               	addlw	-1
  9390     10F3  1D03               	skipz
  9391     10F4  28F0               	goto	u4985
  9392     10F5  0838               	movf	??_TCN75A_GetTemp,w
  9393     10F6  1D03               	btfss	3,2
  9394     10F7  28F9               	goto	u4991
  9395     10F8  28FA               	goto	u4990
  9396     10F9                     u4991:
  9397     10F9  2903               	goto	l3590
  9398     10FA                     u4990:
  9399     10FA                     l3588:
  9400     10FA  3000               	movlw	0
  9401     10FB  00C1               	movwf	_TCN75A_GetTemp$235+3
  9402     10FC  3000               	movlw	0
  9403     10FD  00C0               	movwf	_TCN75A_GetTemp$235+2
  9404     10FE  3000               	movlw	0
  9405     10FF  00BF               	movwf	_TCN75A_GetTemp$235+1
  9406     1100  3000               	movlw	0
  9407     1101  00BE               	movwf	_TCN75A_GetTemp$235
  9408     1102  290B               	goto	l3592
  9409     1103                     l3590:
  9410     1103  303F               	movlw	63
  9411     1104  00C1               	movwf	_TCN75A_GetTemp$235+3
  9412     1105  3000               	movlw	0
  9413     1106  00C0               	movwf	_TCN75A_GetTemp$235+2
  9414     1107  3000               	movlw	0
  9415     1108  00BF               	movwf	_TCN75A_GetTemp$235+1
  9416     1109  3000               	movlw	0
  9417     110A  00BE               	movwf	_TCN75A_GetTemp$235
  9418     110B                     l3592:
  9419     110B  0841               	movf	_TCN75A_GetTemp$235+3,w
  9420     110C  00A3               	movwf	___fladd@b+3
  9421     110D  0840               	movf	_TCN75A_GetTemp$235+2,w
  9422     110E  00A2               	movwf	___fladd@b+2
  9423     110F  083F               	movf	_TCN75A_GetTemp$235+1,w
  9424     1110  00A1               	movwf	___fladd@b+1
  9425     1111  083E               	movf	_TCN75A_GetTemp$235,w
  9426     1112  00A0               	movwf	___fladd@b
  9427     1113  0842               	movf	TCN75A_GetTemp@tempHigh,w
  9428     1114  00F0               	movwf	___xxtofl@val
  9429     1115  3980               	andlw	128
  9430     1116  1D03               	skipz
  9431     1117  30FF               	movlw	255
  9432     1118  00F1               	movwf	___xxtofl@val+1
  9433     1119  00F2               	movwf	___xxtofl@val+2
  9434     111A  00F3               	movwf	___xxtofl@val+3
  9435     111B  3001               	movlw	1
  9436     111C  160A  118A  2143  160A  118A  	fcall	___xxtofl
  9437     1121  0873               	movf	?___xxtofl+3,w
  9438     1122  1283               	bcf	3,5	;RP0=0, select bank0
  9439     1123  1303               	bcf	3,6	;RP1=0, select bank0
  9440     1124  00A7               	movwf	___fladd@a+3
  9441     1125  0872               	movf	?___xxtofl+2,w
  9442     1126  00A6               	movwf	___fladd@a+2
  9443     1127  0871               	movf	?___xxtofl+1,w
  9444     1128  00A5               	movwf	___fladd@a+1
  9445     1129  0870               	movf	?___xxtofl,w
  9446     112A  00A4               	movwf	___fladd@a
  9447     112B  120A  158A  201D  160A  118A  	fcall	___fladd
  9448     1130  1283               	bcf	3,5	;RP0=0, select bank0
  9449     1131  1303               	bcf	3,6	;RP1=0, select bank0
  9450     1132  0823               	movf	?___fladd+3,w
  9451     1133  00BC               	movwf	TCN75A_GetTemp@temp+3
  9452     1134  0822               	movf	?___fladd+2,w
  9453     1135  00BB               	movwf	TCN75A_GetTemp@temp+2
  9454     1136  0821               	movf	?___fladd+1,w
  9455     1137  00BA               	movwf	TCN75A_GetTemp@temp+1
  9456     1138  0820               	movf	?___fladd,w
  9457     1139  00B9               	movwf	TCN75A_GetTemp@temp
  9458     113A                     l3594:
  9459                           
  9460                           ;TCN75A.c: 105:     return temp;
  9461     113A  083C               	movf	TCN75A_GetTemp@temp+3,w
  9462     113B  00B7               	movwf	?_TCN75A_GetTemp+3
  9463     113C  083B               	movf	TCN75A_GetTemp@temp+2,w
  9464     113D  00B6               	movwf	?_TCN75A_GetTemp+2
  9465     113E  083A               	movf	TCN75A_GetTemp@temp+1,w
  9466     113F  00B5               	movwf	?_TCN75A_GetTemp+1
  9467     1140  0839               	movf	TCN75A_GetTemp@temp,w
  9468     1141  00B4               	movwf	?_TCN75A_GetTemp
  9469     1142                     l252:
  9470     1142  0008               	return
  9471     1143                     __end_of_TCN75A_GetTemp:
  9472                           
  9473                           	psect	text47
  9474     1143                     __ptext47:	
  9475 ;; *************** function ___xxtofl *****************
  9476 ;; Defined at:
  9477 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;  sign            1    wreg     unsigned char 
  9480 ;;  val             4    0[COMMON] long 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;  sign            1    8[COMMON] unsigned char 
  9483 ;;  arg             4   10[COMMON] unsigned long 
  9484 ;;  exp             1    9[COMMON] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  4    0[COMMON] unsigned char 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9494 ;;      Params:         4       0       0       0       0
  9495 ;;      Locals:         6       0       0       0       0
  9496 ;;      Temps:          4       0       0       0       0
  9497 ;;      Totals:        14       0       0       0       0
  9498 ;;Total ram usage:       14 bytes
  9499 ;; Hardware stack levels used: 1
  9500 ;; This function calls:
  9501 ;;		Nothing
  9502 ;; This function is called by:
  9503 ;;		_TCN75A_ReadTemperature
  9504 ;;		_TCN75A_SetTemp
  9505 ;;		_TCN75A_GetTemp
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509     1143                     ___xxtofl:	
  9510                           ;psect for function ___xxtofl
  9511                           
  9512                           
  9513                           ;incstack = 0
  9514                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9515                           ;___xxtofl@sign stored from wreg
  9516     1143  00F8               	movwf	___xxtofl@sign
  9517     1144                     l3048:
  9518     1144  0878               	movf	___xxtofl@sign,w
  9519     1145  1903               	btfsc	3,2
  9520     1146  2948               	goto	u4101
  9521     1147  2949               	goto	u4100
  9522     1148                     u4101:
  9523     1148  295D               	goto	l3054
  9524     1149                     u4100:
  9525     1149                     l3050:
  9526     1149  1FF3               	btfss	___xxtofl@val+3,7
  9527     114A  294C               	goto	u4111
  9528     114B  294D               	goto	u4110
  9529     114C                     u4111:
  9530     114C  295D               	goto	l3054
  9531     114D                     u4110:
  9532     114D                     l3052:
  9533     114D  0970               	comf	___xxtofl@val,w
  9534     114E  00FA               	movwf	___xxtofl@arg
  9535     114F  0971               	comf	___xxtofl@val+1,w
  9536     1150  00FB               	movwf	___xxtofl@arg+1
  9537     1151  0972               	comf	___xxtofl@val+2,w
  9538     1152  00FC               	movwf	___xxtofl@arg+2
  9539     1153  0973               	comf	___xxtofl@val+3,w
  9540     1154  00FD               	movwf	___xxtofl@arg+3
  9541     1155  0AFA               	incf	___xxtofl@arg,f
  9542     1156  1903               	skipnz
  9543     1157  0AFB               	incf	___xxtofl@arg+1,f
  9544     1158  1903               	skipnz
  9545     1159  0AFC               	incf	___xxtofl@arg+2,f
  9546     115A  1903               	skipnz
  9547     115B  0AFD               	incf	___xxtofl@arg+3,f
  9548     115C  2965               	goto	l818
  9549     115D                     l3054:
  9550     115D  0873               	movf	___xxtofl@val+3,w
  9551     115E  00FD               	movwf	___xxtofl@arg+3
  9552     115F  0872               	movf	___xxtofl@val+2,w
  9553     1160  00FC               	movwf	___xxtofl@arg+2
  9554     1161  0871               	movf	___xxtofl@val+1,w
  9555     1162  00FB               	movwf	___xxtofl@arg+1
  9556     1163  0870               	movf	___xxtofl@val,w
  9557     1164  00FA               	movwf	___xxtofl@arg
  9558     1165                     l818:
  9559     1165  0873               	movf	___xxtofl@val+3,w
  9560     1166  0472               	iorwf	___xxtofl@val+2,w
  9561     1167  0471               	iorwf	___xxtofl@val+1,w
  9562     1168  0470               	iorwf	___xxtofl@val,w
  9563     1169  1D03               	skipz
  9564     116A  296C               	goto	u4121
  9565     116B  296D               	goto	u4120
  9566     116C                     u4121:
  9567     116C  2976               	goto	l819
  9568     116D                     u4120:
  9569     116D                     l3056:
  9570     116D  3000               	movlw	0
  9571     116E  00F3               	movwf	?___xxtofl+3
  9572     116F  3000               	movlw	0
  9573     1170  00F2               	movwf	?___xxtofl+2
  9574     1171  3000               	movlw	0
  9575     1172  00F1               	movwf	?___xxtofl+1
  9576     1173  3000               	movlw	0
  9577     1174  00F0               	movwf	?___xxtofl
  9578     1175  29F6               	goto	l820
  9579     1176                     l819:
  9580     1176  3096               	movlw	150
  9581     1177  00F9               	movwf	___xxtofl@exp
  9582     1178  2984               	goto	l3062
  9583     1179                     l3060:
  9584     1179  3001               	movlw	1
  9585     117A  07F9               	addwf	___xxtofl@exp,f
  9586     117B  3001               	movlw	1
  9587     117C                     u4135:
  9588     117C  1003               	clrc
  9589     117D  0CFD               	rrf	___xxtofl@arg+3,f
  9590     117E  0CFC               	rrf	___xxtofl@arg+2,f
  9591     117F  0CFB               	rrf	___xxtofl@arg+1,f
  9592     1180  0CFA               	rrf	___xxtofl@arg,f
  9593     1181  3EFF               	addlw	-1
  9594     1182  1D03               	skipz
  9595     1183  297C               	goto	u4135
  9596     1184                     l3062:
  9597     1184  30FE               	movlw	254
  9598     1185  057D               	andwf	___xxtofl@arg+3,w
  9599     1186  1D03               	btfss	3,2
  9600     1187  2989               	goto	u4141
  9601     1188  298A               	goto	u4140
  9602     1189                     u4141:
  9603     1189  2979               	goto	l3060
  9604     118A                     u4140:
  9605     118A  29A4               	goto	l824
  9606     118B                     l3064:
  9607     118B  3001               	movlw	1
  9608     118C  07F9               	addwf	___xxtofl@exp,f
  9609     118D                     l3066:
  9610     118D  3001               	movlw	1
  9611     118E  07FA               	addwf	___xxtofl@arg,f
  9612     118F  3000               	movlw	0
  9613     1190  1803               	skipnc
  9614     1191  3001               	movlw	1
  9615     1192  07FB               	addwf	___xxtofl@arg+1,f
  9616     1193  3000               	movlw	0
  9617     1194  1803               	skipnc
  9618     1195  3001               	movlw	1
  9619     1196  07FC               	addwf	___xxtofl@arg+2,f
  9620     1197  3000               	movlw	0
  9621     1198  1803               	skipnc
  9622     1199  3001               	movlw	1
  9623     119A  07FD               	addwf	___xxtofl@arg+3,f
  9624     119B                     l3068:
  9625     119B  3001               	movlw	1
  9626     119C                     u4155:
  9627     119C  1003               	clrc
  9628     119D  0CFD               	rrf	___xxtofl@arg+3,f
  9629     119E  0CFC               	rrf	___xxtofl@arg+2,f
  9630     119F  0CFB               	rrf	___xxtofl@arg+1,f
  9631     11A0  0CFA               	rrf	___xxtofl@arg,f
  9632     11A1  3EFF               	addlw	-1
  9633     11A2  1D03               	skipz
  9634     11A3  299C               	goto	u4155
  9635     11A4                     l824:
  9636     11A4  30FF               	movlw	255
  9637     11A5  057D               	andwf	___xxtofl@arg+3,w
  9638     11A6  1D03               	btfss	3,2
  9639     11A7  29A9               	goto	u4161
  9640     11A8  29AA               	goto	u4160
  9641     11A9                     u4161:
  9642     11A9  298B               	goto	l3064
  9643     11AA                     u4160:
  9644     11AA  29B6               	goto	l3072
  9645     11AB                     l3070:
  9646     11AB  3001               	movlw	1
  9647     11AC  02F9               	subwf	___xxtofl@exp,f
  9648     11AD  3001               	movlw	1
  9649     11AE  00F4               	movwf	??___xxtofl
  9650     11AF                     u4175:
  9651     11AF  1003               	clrc
  9652     11B0  0DFA               	rlf	___xxtofl@arg,f
  9653     11B1  0DFB               	rlf	___xxtofl@arg+1,f
  9654     11B2  0DFC               	rlf	___xxtofl@arg+2,f
  9655     11B3  0DFD               	rlf	___xxtofl@arg+3,f
  9656     11B4  0BF4               	decfsz	??___xxtofl,f
  9657     11B5  29AF               	goto	u4175
  9658     11B6                     l3072:
  9659     11B6  1BFC               	btfsc	___xxtofl@arg+2,7
  9660     11B7  29B9               	goto	u4181
  9661     11B8  29BA               	goto	u4180
  9662     11B9                     u4181:
  9663     11B9  29C0               	goto	l831
  9664     11BA                     u4180:
  9665     11BA                     l3074:
  9666     11BA  3002               	movlw	2
  9667     11BB  0279               	subwf	___xxtofl@exp,w
  9668     11BC  1803               	skipnc
  9669     11BD  29BF               	goto	u4191
  9670     11BE  29C0               	goto	u4190
  9671     11BF                     u4191:
  9672     11BF  29AB               	goto	l3070
  9673     11C0                     u4190:
  9674     11C0                     l831:
  9675     11C0  1879               	btfsc	___xxtofl@exp,0
  9676     11C1  29C3               	goto	u4201
  9677     11C2  29C4               	goto	u4200
  9678     11C3                     u4201:
  9679     11C3  29CC               	goto	l832
  9680     11C4                     u4200:
  9681     11C4                     l3076:
  9682     11C4  30FF               	movlw	255
  9683     11C5  05FA               	andwf	___xxtofl@arg,f
  9684     11C6  30FF               	movlw	255
  9685     11C7  05FB               	andwf	___xxtofl@arg+1,f
  9686     11C8  307F               	movlw	127
  9687     11C9  05FC               	andwf	___xxtofl@arg+2,f
  9688     11CA  30FF               	movlw	255
  9689     11CB  05FD               	andwf	___xxtofl@arg+3,f
  9690     11CC                     l832:
  9691     11CC  1003               	clrc
  9692     11CD  0CF9               	rrf	___xxtofl@exp,f
  9693     11CE                     l3078:
  9694     11CE  0879               	movf	___xxtofl@exp,w
  9695     11CF  00F4               	movwf	??___xxtofl
  9696     11D0  01F5               	clrf	??___xxtofl+1
  9697     11D1  01F6               	clrf	??___xxtofl+2
  9698     11D2  01F7               	clrf	??___xxtofl+3
  9699     11D3  3018               	movlw	24
  9700     11D4                     u4215:
  9701     11D4  1003               	clrc
  9702     11D5  0DF4               	rlf	??___xxtofl,f
  9703     11D6  0DF5               	rlf	??___xxtofl+1,f
  9704     11D7  0DF6               	rlf	??___xxtofl+2,f
  9705     11D8  0DF7               	rlf	??___xxtofl+3,f
  9706     11D9                     u4210:
  9707     11D9  3EFF               	addlw	-1
  9708     11DA  1D03               	skipz
  9709     11DB  29D4               	goto	u4215
  9710     11DC  0874               	movf	??___xxtofl,w
  9711     11DD  04FA               	iorwf	___xxtofl@arg,f
  9712     11DE  0875               	movf	??___xxtofl+1,w
  9713     11DF  04FB               	iorwf	___xxtofl@arg+1,f
  9714     11E0  0876               	movf	??___xxtofl+2,w
  9715     11E1  04FC               	iorwf	___xxtofl@arg+2,f
  9716     11E2  0877               	movf	??___xxtofl+3,w
  9717     11E3  04FD               	iorwf	___xxtofl@arg+3,f
  9718     11E4                     l3080:
  9719     11E4  0878               	movf	___xxtofl@sign,w
  9720     11E5  1903               	btfsc	3,2
  9721     11E6  29E8               	goto	u4221
  9722     11E7  29E9               	goto	u4220
  9723     11E8                     u4221:
  9724     11E8  29EE               	goto	l3086
  9725     11E9                     u4220:
  9726     11E9                     l3082:
  9727     11E9  1FF3               	btfss	___xxtofl@val+3,7
  9728     11EA  29EC               	goto	u4231
  9729     11EB  29ED               	goto	u4230
  9730     11EC                     u4231:
  9731     11EC  29EE               	goto	l3086
  9732     11ED                     u4230:
  9733     11ED                     l3084:
  9734     11ED  17FD               	bsf	___xxtofl@arg+3,7
  9735     11EE                     l3086:
  9736     11EE  087D               	movf	___xxtofl@arg+3,w
  9737     11EF  00F3               	movwf	?___xxtofl+3
  9738     11F0  087C               	movf	___xxtofl@arg+2,w
  9739     11F1  00F2               	movwf	?___xxtofl+2
  9740     11F2  087B               	movf	___xxtofl@arg+1,w
  9741     11F3  00F1               	movwf	?___xxtofl+1
  9742     11F4  087A               	movf	___xxtofl@arg,w
  9743     11F5  00F0               	movwf	?___xxtofl
  9744     11F6                     l820:
  9745     11F6  0008               	return
  9746     11F7                     __end_of___xxtofl:
  9747                           
  9748                           	psect	text48
  9749     081D                     __ptext48:	
  9750 ;; *************** function ___fladd *****************
  9751 ;; Defined at:
  9752 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  b               4    0[BANK0 ] unsigned char 
  9755 ;;  a               4    4[BANK0 ] unsigned char 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  grs             1   19[BANK0 ] unsigned char 
  9758 ;;  bexp            1   18[BANK0 ] unsigned char 
  9759 ;;  aexp            1   17[BANK0 ] unsigned char 
  9760 ;;  signs           1   16[BANK0 ] unsigned char 
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  4    0[BANK0 ] unsigned char 
  9763 ;; Registers used:
  9764 ;;		wreg, status,2, status,0, btemp+1
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9770 ;;      Params:         0       8       0       0       0
  9771 ;;      Locals:         0       4       0       0       0
  9772 ;;      Temps:          0       8       0       0       0
  9773 ;;      Totals:         0      20       0       0       0
  9774 ;;Total ram usage:       20 bytes
  9775 ;; Hardware stack levels used: 1
  9776 ;; This function calls:
  9777 ;;		Nothing
  9778 ;; This function is called by:
  9779 ;;		_TCN75A_GetTemp
  9780 ;;		___flsub
  9781 ;;		_efgtoa
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785     081D                     ___fladd:	
  9786                           ;psect for function ___fladd
  9787                           
  9788     081D                     l2434:	
  9789                           ;incstack = 0
  9790                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9791                           
  9792     081D  1283               	bcf	3,5	;RP0=0, select bank0
  9793     081E  1303               	bcf	3,6	;RP1=0, select bank0
  9794     081F  0823               	movf	___fladd@b+3,w
  9795     0820  00B0               	movwf	___fladd@signs
  9796     0821                     l2436:
  9797     0821  3080               	movlw	128
  9798     0822  05B0               	andwf	___fladd@signs,f
  9799     0823                     l2438:
  9800     0823  0823               	movf	___fladd@b+3,w
  9801     0824  00A8               	movwf	??___fladd
  9802     0825  0728               	addwf	??___fladd,w
  9803     0826  00B2               	movwf	___fladd@bexp
  9804     0827                     l2440:
  9805     0827  1FA2               	btfss	___fladd@b+2,7
  9806     0828  282A               	goto	u2671
  9807     0829  282B               	goto	u2670
  9808     082A                     u2671:
  9809     082A  282C               	goto	l2444
  9810     082B                     u2670:
  9811     082B                     l2442:
  9812     082B  1432               	bsf	___fladd@bexp,0
  9813     082C                     l2444:
  9814     082C  0832               	movf	___fladd@bexp,w
  9815     082D  1903               	btfsc	3,2
  9816     082E  2830               	goto	u2681
  9817     082F  2831               	goto	u2680
  9818     0830                     u2681:
  9819     0830  2841               	goto	l2454
  9820     0831                     u2680:
  9821     0831                     l2446:
  9822     0831  0A32               	incf	___fladd@bexp,w
  9823     0832  1D03               	btfss	3,2
  9824     0833  2835               	goto	u2691
  9825     0834  2836               	goto	u2690
  9826     0835                     u2691:
  9827     0835  283E               	goto	l2450
  9828     0836                     u2690:
  9829     0836                     l2448:
  9830     0836  3000               	movlw	0
  9831     0837  00A3               	movwf	___fladd@b+3
  9832     0838  3000               	movlw	0
  9833     0839  00A2               	movwf	___fladd@b+2
  9834     083A  3000               	movlw	0
  9835     083B  00A1               	movwf	___fladd@b+1
  9836     083C  3000               	movlw	0
  9837     083D  00A0               	movwf	___fladd@b
  9838     083E                     l2450:
  9839     083E  17A2               	bsf	___fladd@b+2,7
  9840     083F                     l2452:
  9841     083F  01A3               	clrf	___fladd@b+3
  9842     0840  2849               	goto	l673
  9843     0841                     l2454:
  9844     0841  3000               	movlw	0
  9845     0842  00A3               	movwf	___fladd@b+3
  9846     0843  3000               	movlw	0
  9847     0844  00A2               	movwf	___fladd@b+2
  9848     0845  3000               	movlw	0
  9849     0846  00A1               	movwf	___fladd@b+1
  9850     0847  3000               	movlw	0
  9851     0848  00A0               	movwf	___fladd@b
  9852     0849                     l673:
  9853     0849  0827               	movf	___fladd@a+3,w
  9854     084A  00B1               	movwf	___fladd@aexp
  9855     084B                     l2456:
  9856     084B  3080               	movlw	128
  9857     084C  05B1               	andwf	___fladd@aexp,f
  9858     084D                     l2458:
  9859     084D  0831               	movf	___fladd@aexp,w
  9860     084E  0630               	xorwf	___fladd@signs,w
  9861     084F  1903               	skipnz
  9862     0850  2852               	goto	u2701
  9863     0851  2853               	goto	u2700
  9864     0852                     u2701:
  9865     0852  2854               	goto	l2462
  9866     0853                     u2700:
  9867     0853                     l2460:
  9868     0853  1730               	bsf	___fladd@signs,6
  9869     0854                     l2462:
  9870     0854  0827               	movf	___fladd@a+3,w
  9871     0855  00A8               	movwf	??___fladd
  9872     0856  0728               	addwf	??___fladd,w
  9873     0857  00B1               	movwf	___fladd@aexp
  9874     0858                     l2464:
  9875     0858  1FA6               	btfss	___fladd@a+2,7
  9876     0859  285B               	goto	u2711
  9877     085A  285C               	goto	u2710
  9878     085B                     u2711:
  9879     085B  285D               	goto	l2468
  9880     085C                     u2710:
  9881     085C                     l2466:
  9882     085C  1431               	bsf	___fladd@aexp,0
  9883     085D                     l2468:
  9884     085D  0831               	movf	___fladd@aexp,w
  9885     085E  1903               	btfsc	3,2
  9886     085F  2861               	goto	u2721
  9887     0860  2862               	goto	u2720
  9888     0861                     u2721:
  9889     0861  2872               	goto	l2478
  9890     0862                     u2720:
  9891     0862                     l2470:
  9892     0862  0A31               	incf	___fladd@aexp,w
  9893     0863  1D03               	btfss	3,2
  9894     0864  2866               	goto	u2731
  9895     0865  2867               	goto	u2730
  9896     0866                     u2731:
  9897     0866  286F               	goto	l2474
  9898     0867                     u2730:
  9899     0867                     l2472:
  9900     0867  3000               	movlw	0
  9901     0868  00A7               	movwf	___fladd@a+3
  9902     0869  3000               	movlw	0
  9903     086A  00A6               	movwf	___fladd@a+2
  9904     086B  3000               	movlw	0
  9905     086C  00A5               	movwf	___fladd@a+1
  9906     086D  3000               	movlw	0
  9907     086E  00A4               	movwf	___fladd@a
  9908     086F                     l2474:
  9909     086F  17A6               	bsf	___fladd@a+2,7
  9910     0870                     l2476:
  9911     0870  01A7               	clrf	___fladd@a+3
  9912     0871  287A               	goto	l678
  9913     0872                     l2478:
  9914     0872  3000               	movlw	0
  9915     0873  00A7               	movwf	___fladd@a+3
  9916     0874  3000               	movlw	0
  9917     0875  00A6               	movwf	___fladd@a+2
  9918     0876  3000               	movlw	0
  9919     0877  00A5               	movwf	___fladd@a+1
  9920     0878  3000               	movlw	0
  9921     0879  00A4               	movwf	___fladd@a
  9922     087A                     l678:
  9923     087A  0832               	movf	___fladd@bexp,w
  9924     087B  0231               	subwf	___fladd@aexp,w
  9925     087C  1803               	skipnc
  9926     087D  287F               	goto	u2741
  9927     087E  2880               	goto	u2740
  9928     087F                     u2741:
  9929     087F  28A4               	goto	l2514
  9930     0880                     u2740:
  9931     0880                     l2480:
  9932     0880  1F30               	btfss	___fladd@signs,6
  9933     0881  2883               	goto	u2751
  9934     0882  2884               	goto	u2750
  9935     0883                     u2751:
  9936     0883  2886               	goto	l2484
  9937     0884                     u2750:
  9938     0884                     l2482:
  9939     0884  3080               	movlw	128
  9940     0885  06B0               	xorwf	___fladd@signs,f
  9941     0886                     l2484:
  9942     0886  0832               	movf	___fladd@bexp,w
  9943     0887  00B3               	movwf	___fladd@grs
  9944     0888                     l2486:
  9945     0888  0831               	movf	___fladd@aexp,w
  9946     0889  00B2               	movwf	___fladd@bexp
  9947     088A                     l2488:
  9948     088A  0833               	movf	___fladd@grs,w
  9949     088B  00B1               	movwf	___fladd@aexp
  9950     088C                     l2490:
  9951     088C  0820               	movf	___fladd@b,w
  9952     088D  00B3               	movwf	___fladd@grs
  9953     088E                     l2492:
  9954     088E  0824               	movf	___fladd@a,w
  9955     088F  00A0               	movwf	___fladd@b
  9956     0890                     l2494:
  9957     0890  0833               	movf	___fladd@grs,w
  9958     0891  00A4               	movwf	___fladd@a
  9959     0892                     l2496:
  9960     0892  0821               	movf	___fladd@b+1,w
  9961     0893  00B3               	movwf	___fladd@grs
  9962     0894                     l2498:
  9963     0894  0825               	movf	___fladd@a+1,w
  9964     0895  00A1               	movwf	___fladd@b+1
  9965     0896                     l2500:
  9966     0896  0833               	movf	___fladd@grs,w
  9967     0897  00A5               	movwf	___fladd@a+1
  9968     0898                     l2502:
  9969     0898  0822               	movf	___fladd@b+2,w
  9970     0899  00B3               	movwf	___fladd@grs
  9971     089A                     l2504:
  9972     089A  0826               	movf	___fladd@a+2,w
  9973     089B  00A2               	movwf	___fladd@b+2
  9974     089C                     l2506:
  9975     089C  0833               	movf	___fladd@grs,w
  9976     089D  00A6               	movwf	___fladd@a+2
  9977     089E                     l2508:
  9978     089E  0823               	movf	___fladd@b+3,w
  9979     089F  00B3               	movwf	___fladd@grs
  9980     08A0                     l2510:
  9981     08A0  0827               	movf	___fladd@a+3,w
  9982     08A1  00A3               	movwf	___fladd@b+3
  9983     08A2                     l2512:
  9984     08A2  0833               	movf	___fladd@grs,w
  9985     08A3  00A7               	movwf	___fladd@a+3
  9986     08A4                     l2514:
  9987     08A4  01B3               	clrf	___fladd@grs
  9988     08A5                     l2516:
  9989     08A5  0831               	movf	___fladd@aexp,w
  9990     08A6  00A8               	movwf	??___fladd
  9991     08A7  01A9               	clrf	??___fladd+1
  9992     08A8  0829               	movf	??___fladd+1,w
  9993     08A9  00AB               	movwf	??___fladd+3
  9994     08AA  0832               	movf	___fladd@bexp,w
  9995     08AB  0228               	subwf	??___fladd,w
  9996     08AC  00AA               	movwf	??___fladd+2
  9997     08AD  1C03               	skipc
  9998     08AE  03AB               	decf	??___fladd+3,f
  9999     08AF  082B               	movf	??___fladd+3,w
 10000     08B0  3A80               	xorlw	128
 10001     08B1  00FF               	movwf	btemp+1
 10002     08B2  3080               	movlw	128
 10003     08B3  027F               	subwf	btemp+1,w
 10004     08B4  1D03               	skipz
 10005     08B5  28B8               	goto	u2765
 10006     08B6  301A               	movlw	26
 10007     08B7  022A               	subwf	??___fladd+2,w
 10008     08B8                     u2765:
 10009     08B8  1C03               	skipc
 10010     08B9  28BB               	goto	u2761
 10011     08BA  28BC               	goto	u2760
 10012     08BB                     u2761:
 10013     08BB  28F1               	goto	l2532
 10014     08BC                     u2760:
 10015     08BC                     l2518:
 10016     08BC  1283               	bcf	3,5	;RP0=0, select bank0
 10017     08BD  1303               	bcf	3,6	;RP1=0, select bank0
 10018     08BE  0823               	movf	___fladd@b+3,w
 10019     08BF  0422               	iorwf	___fladd@b+2,w
 10020     08C0  0421               	iorwf	___fladd@b+1,w
 10021     08C1  0420               	iorwf	___fladd@b,w
 10022     08C2  1D03               	skipz
 10023     08C3  28C5               	goto	u2771
 10024     08C4  28C7               	goto	u2770
 10025     08C5                     u2771:
 10026     08C5  3001               	movlw	1
 10027     08C6  28C8               	goto	u2780
 10028     08C7                     u2770:
 10029     08C7  3000               	movlw	0
 10030     08C8                     u2780:
 10031     08C8  00B3               	movwf	___fladd@grs
 10032     08C9  3000               	movlw	0
 10033     08CA  00A3               	movwf	___fladd@b+3
 10034     08CB  3000               	movlw	0
 10035     08CC  00A2               	movwf	___fladd@b+2
 10036     08CD  3000               	movlw	0
 10037     08CE  00A1               	movwf	___fladd@b+1
 10038     08CF  3000               	movlw	0
 10039     08D0  00A0               	movwf	___fladd@b
 10040     08D1  0831               	movf	___fladd@aexp,w
 10041     08D2  00B2               	movwf	___fladd@bexp
 10042     08D3  28F9               	goto	l682
 10043     08D4                     l684:
 10044     08D4  1C33               	btfss	___fladd@grs,0
 10045     08D5  28D7               	goto	u2791
 10046     08D6  28D8               	goto	u2790
 10047     08D7                     u2791:
 10048     08D7  28DF               	goto	l2522
 10049     08D8                     u2790:
 10050     08D8                     l2520:
 10051     08D8  0833               	movf	___fladd@grs,w
 10052     08D9  00A8               	movwf	??___fladd
 10053     08DA  1003               	clrc
 10054     08DB  0C28               	rrf	??___fladd,w
 10055     08DC  3801               	iorlw	1
 10056     08DD  00B3               	movwf	___fladd@grs
 10057     08DE  28E1               	goto	l2524
 10058     08DF                     l2522:
 10059     08DF  1003               	clrc
 10060     08E0  0CB3               	rrf	___fladd@grs,f
 10061     08E1                     l2524:
 10062     08E1  1C20               	btfss	___fladd@b,0
 10063     08E2  28E4               	goto	u2801
 10064     08E3  28E5               	goto	u2800
 10065     08E4                     u2801:
 10066     08E4  28E6               	goto	l2528
 10067     08E5                     u2800:
 10068     08E5                     l2526:
 10069     08E5  17B3               	bsf	___fladd@grs,7
 10070     08E6                     l2528:
 10071     08E6  3001               	movlw	1
 10072     08E7  00A8               	movwf	??___fladd
 10073     08E8                     u2815:
 10074     08E8  0D23               	rlf	___fladd@b+3,w
 10075     08E9  0CA3               	rrf	___fladd@b+3,f
 10076     08EA  0CA2               	rrf	___fladd@b+2,f
 10077     08EB  0CA1               	rrf	___fladd@b+1,f
 10078     08EC  0CA0               	rrf	___fladd@b,f
 10079     08ED  0BA8               	decfsz	??___fladd& (0+127),f
 10080     08EE  28E8               	goto	u2815
 10081     08EF                     l2530:
 10082     08EF  3001               	movlw	1
 10083     08F0  07B2               	addwf	___fladd@bexp,f
 10084     08F1                     l2532:
 10085     08F1  1283               	bcf	3,5	;RP0=0, select bank0
 10086     08F2  1303               	bcf	3,6	;RP1=0, select bank0
 10087     08F3  0831               	movf	___fladd@aexp,w
 10088     08F4  0232               	subwf	___fladd@bexp,w
 10089     08F5  1C03               	skipc
 10090     08F6  28F8               	goto	u2821
 10091     08F7  28F9               	goto	u2820
 10092     08F8                     u2821:
 10093     08F8  28D4               	goto	l684
 10094     08F9                     u2820:
 10095     08F9                     l682:
 10096     08F9  1B30               	btfsc	___fladd@signs,6
 10097     08FA  28FC               	goto	u2831
 10098     08FB  28FD               	goto	u2830
 10099     08FC                     u2831:
 10100     08FC  2944               	goto	l2558
 10101     08FD                     u2830:
 10102     08FD                     l2534:
 10103     08FD  0832               	movf	___fladd@bexp,w
 10104     08FE  1D03               	btfss	3,2
 10105     08FF  2901               	goto	u2841
 10106     0900  2902               	goto	u2840
 10107     0901                     u2841:
 10108     0901  290B               	goto	l2540
 10109     0902                     u2840:
 10110     0902                     l2536:
 10111     0902  3000               	movlw	0
 10112     0903  00A3               	movwf	?___fladd+3
 10113     0904  3000               	movlw	0
 10114     0905  00A2               	movwf	?___fladd+2
 10115     0906  3000               	movlw	0
 10116     0907  00A1               	movwf	?___fladd+1
 10117     0908  3000               	movlw	0
 10118     0909  00A0               	movwf	?___fladd
 10119     090A  2A6C               	goto	l691
 10120     090B                     l2540:
 10121     090B  0824               	movf	___fladd@a,w
 10122     090C  07A0               	addwf	___fladd@b,f
 10123     090D  0825               	movf	___fladd@a+1,w
 10124     090E  1103               	clrz
 10125     090F  1803               	skipnc
 10126     0910  3E01               	addlw	1
 10127     0911  1903               	skipnz
 10128     0912  2914               	goto	u2851
 10129     0913  07A1               	addwf	___fladd@b+1,f
 10130     0914                     u2851:
 10131     0914  0826               	movf	___fladd@a+2,w
 10132     0915  1103               	clrz
 10133     0916  1803               	skipnc
 10134     0917  3E01               	addlw	1
 10135     0918  1903               	skipnz
 10136     0919  291B               	goto	u2852
 10137     091A  07A2               	addwf	___fladd@b+2,f
 10138     091B                     u2852:
 10139     091B  0827               	movf	___fladd@a+3,w
 10140     091C  1103               	clrz
 10141     091D  1803               	skipnc
 10142     091E  3E01               	addlw	1
 10143     091F  1903               	skipnz
 10144     0920  2922               	goto	u2853
 10145     0921  07A3               	addwf	___fladd@b+3,f
 10146     0922                     u2853:
 10147     0922                     l2542:
 10148     0922  1C23               	btfss	___fladd@b+3,0
 10149     0923  2925               	goto	u2861
 10150     0924  2926               	goto	u2860
 10151     0925                     u2861:
 10152     0925  29F8               	goto	l2594
 10153     0926                     u2860:
 10154     0926                     l2544:
 10155     0926  1C33               	btfss	___fladd@grs,0
 10156     0927  2929               	goto	u2871
 10157     0928  292A               	goto	u2870
 10158     0929                     u2871:
 10159     0929  2931               	goto	l2548
 10160     092A                     u2870:
 10161     092A                     l2546:
 10162     092A  0833               	movf	___fladd@grs,w
 10163     092B  00A8               	movwf	??___fladd
 10164     092C  1003               	clrc
 10165     092D  0C28               	rrf	??___fladd,w
 10166     092E  3801               	iorlw	1
 10167     092F  00B3               	movwf	___fladd@grs
 10168     0930  2933               	goto	l2550
 10169     0931                     l2548:
 10170     0931  1003               	clrc
 10171     0932  0CB3               	rrf	___fladd@grs,f
 10172     0933                     l2550:
 10173     0933  1C20               	btfss	___fladd@b,0
 10174     0934  2936               	goto	u2881
 10175     0935  2937               	goto	u2880
 10176     0936                     u2881:
 10177     0936  2938               	goto	l2554
 10178     0937                     u2880:
 10179     0937                     l2552:
 10180     0937  17B3               	bsf	___fladd@grs,7
 10181     0938                     l2554:
 10182     0938  3001               	movlw	1
 10183     0939  00A8               	movwf	??___fladd
 10184     093A                     u2895:
 10185     093A  0D23               	rlf	___fladd@b+3,w
 10186     093B  0CA3               	rrf	___fladd@b+3,f
 10187     093C  0CA2               	rrf	___fladd@b+2,f
 10188     093D  0CA1               	rrf	___fladd@b+1,f
 10189     093E  0CA0               	rrf	___fladd@b,f
 10190     093F  0BA8               	decfsz	??___fladd& (0+127),f
 10191     0940  293A               	goto	u2895
 10192     0941                     l2556:
 10193     0941  3001               	movlw	1
 10194     0942  07B2               	addwf	___fladd@bexp,f
 10195     0943  29F8               	goto	l2594
 10196     0944                     l2558:
 10197     0944  0823               	movf	___fladd@b+3,w
 10198     0945  3A80               	xorlw	128
 10199     0946  00FF               	movwf	btemp+1
 10200     0947  0827               	movf	___fladd@a+3,w
 10201     0948  3A80               	xorlw	128
 10202     0949  027F               	subwf	btemp+1,w
 10203     094A  1D03               	skipz
 10204     094B  2956               	goto	u2903
 10205     094C  0826               	movf	___fladd@a+2,w
 10206     094D  0222               	subwf	___fladd@b+2,w
 10207     094E  1D03               	skipz
 10208     094F  2956               	goto	u2903
 10209     0950  0825               	movf	___fladd@a+1,w
 10210     0951  0221               	subwf	___fladd@b+1,w
 10211     0952  1D03               	skipz
 10212     0953  2956               	goto	u2903
 10213     0954  0824               	movf	___fladd@a,w
 10214     0955  0220               	subwf	___fladd@b,w
 10215     0956                     u2903:
 10216     0956  1803               	skipnc
 10217     0957  2959               	goto	u2901
 10218     0958  295A               	goto	u2900
 10219     0959                     u2901:
 10220     0959  29B1               	goto	l2570
 10221     095A                     u2900:
 10222     095A                     l2560:
 10223     095A  30FF               	movlw	255
 10224     095B  00A8               	movwf	??___fladd
 10225     095C  30FF               	movlw	255
 10226     095D  00A9               	movwf	??___fladd+1
 10227     095E  30FF               	movlw	255
 10228     095F  00AA               	movwf	??___fladd+2
 10229     0960  30FF               	movlw	255
 10230     0961  00AB               	movwf	??___fladd+3
 10231     0962  0824               	movf	___fladd@a,w
 10232     0963  00AC               	movwf	??___fladd+4
 10233     0964  0825               	movf	___fladd@a+1,w
 10234     0965  00AD               	movwf	??___fladd+5
 10235     0966  0826               	movf	___fladd@a+2,w
 10236     0967  00AE               	movwf	??___fladd+6
 10237     0968  0827               	movf	___fladd@a+3,w
 10238     0969  00AF               	movwf	??___fladd+7
 10239     096A  0820               	movf	___fladd@b,w
 10240     096B  02AC               	subwf	??___fladd+4,f
 10241     096C  0821               	movf	___fladd@b+1,w
 10242     096D  1C03               	skipc
 10243     096E  0F21               	incfsz	___fladd@b+1,w
 10244     096F  2971               	goto	u2911
 10245     0970  2972               	goto	u2912
 10246     0971                     u2911:
 10247     0971  02AD               	subwf	??___fladd+5,f
 10248     0972                     u2912:
 10249     0972  0822               	movf	___fladd@b+2,w
 10250     0973  1C03               	skipc
 10251     0974  0F22               	incfsz	___fladd@b+2,w
 10252     0975  2977               	goto	u2913
 10253     0976  2978               	goto	u2914
 10254     0977                     u2913:
 10255     0977  02AE               	subwf	??___fladd+6,f
 10256     0978                     u2914:
 10257     0978  0823               	movf	___fladd@b+3,w
 10258     0979  1C03               	skipc
 10259     097A  0F23               	incfsz	___fladd@b+3,w
 10260     097B  297D               	goto	u2915
 10261     097C  297E               	goto	u2916
 10262     097D                     u2915:
 10263     097D  02AF               	subwf	??___fladd+7,f
 10264     097E                     u2916:
 10265     097E  082C               	movf	??___fladd+4,w
 10266     097F  07A8               	addwf	??___fladd,f
 10267     0980  082D               	movf	??___fladd+5,w
 10268     0981  1803               	skipnc
 10269     0982  0F2D               	incfsz	??___fladd+5,w
 10270     0983  2985               	goto	u2920
 10271     0984  2986               	goto	u2921
 10272     0985                     u2920:
 10273     0985  07A9               	addwf	??___fladd+1,f
 10274     0986                     u2921:
 10275     0986  082E               	movf	??___fladd+6,w
 10276     0987  1803               	skipnc
 10277     0988  0F2E               	incfsz	??___fladd+6,w
 10278     0989  298B               	goto	u2922
 10279     098A  298C               	goto	u2923
 10280     098B                     u2922:
 10281     098B  07AA               	addwf	??___fladd+2,f
 10282     098C                     u2923:
 10283     098C  082F               	movf	??___fladd+7,w
 10284     098D  1803               	skipnc
 10285     098E  0A2F               	incf	??___fladd+7,w
 10286     098F  07AB               	addwf	??___fladd+3,f
 10287     0990  082B               	movf	??___fladd+3,w
 10288     0991  00A3               	movwf	___fladd@b+3
 10289     0992  082A               	movf	??___fladd+2,w
 10290     0993  00A2               	movwf	___fladd@b+2
 10291     0994  0829               	movf	??___fladd+1,w
 10292     0995  00A1               	movwf	___fladd@b+1
 10293     0996  0828               	movf	??___fladd,w
 10294     0997  00A0               	movwf	___fladd@b
 10295     0998                     l2562:
 10296     0998  3080               	movlw	128
 10297     0999  06B0               	xorwf	___fladd@signs,f
 10298     099A                     l2564:
 10299     099A  0333               	decf	___fladd@grs,w
 10300     099B  3AFF               	xorlw	255
 10301     099C  00B3               	movwf	___fladd@grs
 10302     099D                     l2566:
 10303     099D  0833               	movf	___fladd@grs,w
 10304     099E  1D03               	btfss	3,2
 10305     099F  29A1               	goto	u2931
 10306     09A0  29A2               	goto	u2930
 10307     09A1                     u2931:
 10308     09A1  29BF               	goto	l699
 10309     09A2                     u2930:
 10310     09A2                     l2568:
 10311     09A2  3001               	movlw	1
 10312     09A3  07A0               	addwf	___fladd@b,f
 10313     09A4  3000               	movlw	0
 10314     09A5  1803               	skipnc
 10315     09A6  3001               	movlw	1
 10316     09A7  07A1               	addwf	___fladd@b+1,f
 10317     09A8  3000               	movlw	0
 10318     09A9  1803               	skipnc
 10319     09AA  3001               	movlw	1
 10320     09AB  07A2               	addwf	___fladd@b+2,f
 10321     09AC  3000               	movlw	0
 10322     09AD  1803               	skipnc
 10323     09AE  3001               	movlw	1
 10324     09AF  07A3               	addwf	___fladd@b+3,f
 10325     09B0  29BF               	goto	l699
 10326     09B1                     l2570:
 10327     09B1  0824               	movf	___fladd@a,w
 10328     09B2  02A0               	subwf	___fladd@b,f
 10329     09B3  0825               	movf	___fladd@a+1,w
 10330     09B4  1C03               	skipc
 10331     09B5  0F25               	incfsz	___fladd@a+1,w
 10332     09B6  02A1               	subwf	___fladd@b+1,f
 10333     09B7  0826               	movf	___fladd@a+2,w
 10334     09B8  1C03               	skipc
 10335     09B9  0F26               	incfsz	___fladd@a+2,w
 10336     09BA  02A2               	subwf	___fladd@b+2,f
 10337     09BB  0827               	movf	___fladd@a+3,w
 10338     09BC  1C03               	skipc
 10339     09BD  0F27               	incfsz	___fladd@a+3,w
 10340     09BE  02A3               	subwf	___fladd@b+3,f
 10341     09BF                     l699:
 10342     09BF  0823               	movf	___fladd@b+3,w
 10343     09C0  0422               	iorwf	___fladd@b+2,w
 10344     09C1  0421               	iorwf	___fladd@b+1,w
 10345     09C2  0420               	iorwf	___fladd@b,w
 10346     09C3  1D03               	skipz
 10347     09C4  29C6               	goto	u2941
 10348     09C5  29C7               	goto	u2940
 10349     09C6                     u2941:
 10350     09C6  29F4               	goto	l2592
 10351     09C7                     u2940:
 10352     09C7                     l2572:
 10353     09C7  0833               	movf	___fladd@grs,w
 10354     09C8  1D03               	btfss	3,2
 10355     09C9  29CB               	goto	u2951
 10356     09CA  29CC               	goto	u2950
 10357     09CB                     u2951:
 10358     09CB  29F4               	goto	l2592
 10359     09CC                     u2950:
 10360     09CC                     l2574:
 10361     09CC  3000               	movlw	0
 10362     09CD  00A3               	movwf	?___fladd+3
 10363     09CE  3000               	movlw	0
 10364     09CF  00A2               	movwf	?___fladd+2
 10365     09D0  3000               	movlw	0
 10366     09D1  00A1               	movwf	?___fladd+1
 10367     09D2  3000               	movlw	0
 10368     09D3  00A0               	movwf	?___fladd
 10369     09D4  2A6C               	goto	l691
 10370     09D5                     l2578:
 10371     09D5  3001               	movlw	1
 10372     09D6  00A8               	movwf	??___fladd
 10373     09D7                     u2965:
 10374     09D7  1003               	clrc
 10375     09D8  0DA0               	rlf	___fladd@b,f
 10376     09D9  0DA1               	rlf	___fladd@b+1,f
 10377     09DA  0DA2               	rlf	___fladd@b+2,f
 10378     09DB  0DA3               	rlf	___fladd@b+3,f
 10379     09DC  0BA8               	decfsz	??___fladd,f
 10380     09DD  29D7               	goto	u2965
 10381     09DE                     l2580:
 10382     09DE  1FB3               	btfss	___fladd@grs,7
 10383     09DF  29E1               	goto	u2971
 10384     09E0  29E2               	goto	u2970
 10385     09E1                     u2971:
 10386     09E1  29E3               	goto	l703
 10387     09E2                     u2970:
 10388     09E2                     l2582:
 10389     09E2  1420               	bsf	___fladd@b,0
 10390     09E3                     l703:
 10391     09E3  1C33               	btfss	___fladd@grs,0
 10392     09E4  29E6               	goto	u2981
 10393     09E5  29E7               	goto	u2980
 10394     09E6                     u2981:
 10395     09E6  29EB               	goto	l2586
 10396     09E7                     u2980:
 10397     09E7                     l2584:
 10398     09E7  1403               	setc
 10399     09E8  0D33               	rlf	___fladd@grs,w
 10400     09E9  00B3               	movwf	___fladd@grs
 10401     09EA  29ED               	goto	l2588
 10402     09EB                     l2586:
 10403     09EB  1003               	clrc
 10404     09EC  0DB3               	rlf	___fladd@grs,f
 10405     09ED                     l2588:
 10406     09ED  0832               	movf	___fladd@bexp,w
 10407     09EE  1903               	btfsc	3,2
 10408     09EF  29F1               	goto	u2991
 10409     09F0  29F2               	goto	u2990
 10410     09F1                     u2991:
 10411     09F1  29F4               	goto	l2592
 10412     09F2                     u2990:
 10413     09F2                     l2590:
 10414     09F2  3001               	movlw	1
 10415     09F3  02B2               	subwf	___fladd@bexp,f
 10416     09F4                     l2592:
 10417     09F4  1FA2               	btfss	___fladd@b+2,7
 10418     09F5  29F7               	goto	u3001
 10419     09F6  29F8               	goto	u3000
 10420     09F7                     u3001:
 10421     09F7  29D5               	goto	l2578
 10422     09F8                     u3000:
 10423     09F8                     l2594:
 10424     09F8  01B1               	clrf	___fladd@aexp
 10425     09F9                     l2596:
 10426     09F9  1FB3               	btfss	___fladd@grs,7
 10427     09FA  29FC               	goto	u3011
 10428     09FB  29FD               	goto	u3010
 10429     09FC                     u3011:
 10430     09FC  2A0B               	goto	l2604
 10431     09FD                     u3010:
 10432     09FD                     l2598:
 10433     09FD  0833               	movf	___fladd@grs,w
 10434     09FE  397F               	andlw	127
 10435     09FF  1903               	btfsc	3,2
 10436     0A00  2A02               	goto	u3021
 10437     0A01  2A03               	goto	u3020
 10438     0A02                     u3021:
 10439     0A02  2A06               	goto	l709
 10440     0A03                     u3020:
 10441     0A03                     l2600:
 10442     0A03  3001               	movlw	1
 10443     0A04  00B1               	movwf	___fladd@aexp
 10444     0A05  2A0B               	goto	l2604
 10445     0A06                     l709:
 10446     0A06  1C20               	btfss	___fladd@b,0
 10447     0A07  2A09               	goto	u3031
 10448     0A08  2A0A               	goto	u3030
 10449     0A09                     u3031:
 10450     0A09  2A0B               	goto	l2604
 10451     0A0A                     u3030:
 10452     0A0A  2A03               	goto	l2600
 10453     0A0B                     l2604:
 10454     0A0B  0831               	movf	___fladd@aexp,w
 10455     0A0C  1903               	btfsc	3,2
 10456     0A0D  2A0F               	goto	u3041
 10457     0A0E  2A10               	goto	u3040
 10458     0A0F                     u3041:
 10459     0A0F  2A42               	goto	l712
 10460     0A10                     u3040:
 10461     0A10                     l2606:
 10462     0A10  3001               	movlw	1
 10463     0A11  07A0               	addwf	___fladd@b,f
 10464     0A12  3000               	movlw	0
 10465     0A13  1803               	skipnc
 10466     0A14  3001               	movlw	1
 10467     0A15  07A1               	addwf	___fladd@b+1,f
 10468     0A16  3000               	movlw	0
 10469     0A17  1803               	skipnc
 10470     0A18  3001               	movlw	1
 10471     0A19  07A2               	addwf	___fladd@b+2,f
 10472     0A1A  3000               	movlw	0
 10473     0A1B  1803               	skipnc
 10474     0A1C  3001               	movlw	1
 10475     0A1D  07A3               	addwf	___fladd@b+3,f
 10476     0A1E                     l2608:
 10477     0A1E  1C23               	btfss	___fladd@b+3,0
 10478     0A1F  2A21               	goto	u3051
 10479     0A20  2A22               	goto	u3050
 10480     0A21                     u3051:
 10481     0A21  2A42               	goto	l712
 10482     0A22                     u3050:
 10483     0A22                     l2610:
 10484     0A22  0820               	movf	___fladd@b,w
 10485     0A23  00A8               	movwf	??___fladd
 10486     0A24  0821               	movf	___fladd@b+1,w
 10487     0A25  00A9               	movwf	??___fladd+1
 10488     0A26  0822               	movf	___fladd@b+2,w
 10489     0A27  00AA               	movwf	??___fladd+2
 10490     0A28  0823               	movf	___fladd@b+3,w
 10491     0A29  00AB               	movwf	??___fladd+3
 10492     0A2A  3001               	movlw	1
 10493     0A2B  00AC               	movwf	??___fladd+4
 10494     0A2C                     u3065:
 10495     0A2C  0D2B               	rlf	??___fladd+3,w
 10496     0A2D  0CAB               	rrf	??___fladd+3,f
 10497     0A2E  0CAA               	rrf	??___fladd+2,f
 10498     0A2F  0CA9               	rrf	??___fladd+1,f
 10499     0A30  0CA8               	rrf	??___fladd,f
 10500     0A31                     u3060:
 10501     0A31  0BAC               	decfsz	??___fladd+4,f
 10502     0A32  2A2C               	goto	u3065
 10503     0A33  082B               	movf	??___fladd+3,w
 10504     0A34  00A3               	movwf	___fladd@b+3
 10505     0A35  082A               	movf	??___fladd+2,w
 10506     0A36  00A2               	movwf	___fladd@b+2
 10507     0A37  0829               	movf	??___fladd+1,w
 10508     0A38  00A1               	movwf	___fladd@b+1
 10509     0A39  0828               	movf	??___fladd,w
 10510     0A3A  00A0               	movwf	___fladd@b
 10511     0A3B  0A32               	incf	___fladd@bexp,w
 10512     0A3C  1903               	btfsc	3,2
 10513     0A3D  2A3F               	goto	u3071
 10514     0A3E  2A40               	goto	u3070
 10515     0A3F                     u3071:
 10516     0A3F  2A42               	goto	l712
 10517     0A40                     u3070:
 10518     0A40                     l2612:
 10519     0A40  3001               	movlw	1
 10520     0A41  07B2               	addwf	___fladd@bexp,f
 10521     0A42                     l712:
 10522     0A42  0A32               	incf	___fladd@bexp,w
 10523     0A43  1903               	btfsc	3,2
 10524     0A44  2A46               	goto	u3081
 10525     0A45  2A47               	goto	u3080
 10526     0A46                     u3081:
 10527     0A46  2A4C               	goto	l2616
 10528     0A47                     u3080:
 10529     0A47                     l2614:
 10530     0A47  0832               	movf	___fladd@bexp,w
 10531     0A48  1D03               	btfss	3,2
 10532     0A49  2A4B               	goto	u3091
 10533     0A4A  2A4C               	goto	u3090
 10534     0A4B                     u3091:
 10535     0A4B  2A5A               	goto	l2622
 10536     0A4C                     u3090:
 10537     0A4C                     l2616:
 10538     0A4C  3000               	movlw	0
 10539     0A4D  00A3               	movwf	___fladd@b+3
 10540     0A4E  3000               	movlw	0
 10541     0A4F  00A2               	movwf	___fladd@b+2
 10542     0A50  3000               	movlw	0
 10543     0A51  00A1               	movwf	___fladd@b+1
 10544     0A52  3000               	movlw	0
 10545     0A53  00A0               	movwf	___fladd@b
 10546     0A54                     l2618:
 10547     0A54  0832               	movf	___fladd@bexp,w
 10548     0A55  1D03               	btfss	3,2
 10549     0A56  2A58               	goto	u3101
 10550     0A57  2A59               	goto	u3100
 10551     0A58                     u3101:
 10552     0A58  2A5A               	goto	l2622
 10553     0A59                     u3100:
 10554     0A59                     l2620:
 10555     0A59  01B0               	clrf	___fladd@signs
 10556     0A5A                     l2622:
 10557     0A5A  1C32               	btfss	___fladd@bexp,0
 10558     0A5B  2A5D               	goto	u3111
 10559     0A5C  2A5E               	goto	u3110
 10560     0A5D                     u3111:
 10561     0A5D  2A60               	goto	l2626
 10562     0A5E                     u3110:
 10563     0A5E                     l2624:
 10564     0A5E  17A2               	bsf	___fladd@b+2,7
 10565     0A5F  2A62               	goto	l720
 10566     0A60                     l2626:
 10567     0A60  307F               	movlw	127
 10568     0A61  05A2               	andwf	___fladd@b+2,f
 10569     0A62                     l720:
 10570     0A62  0832               	movf	___fladd@bexp,w
 10571     0A63  00A8               	movwf	??___fladd
 10572     0A64  1003               	clrc
 10573     0A65  0C28               	rrf	??___fladd,w
 10574     0A66  00A3               	movwf	___fladd@b+3
 10575     0A67                     l2628:
 10576     0A67  1FB0               	btfss	___fladd@signs,7
 10577     0A68  2A6A               	goto	u3121
 10578     0A69  2A6B               	goto	u3120
 10579     0A6A                     u3121:
 10580     0A6A  2A6C               	goto	l721
 10581     0A6B                     u3120:
 10582     0A6B                     l2630:
 10583     0A6B  17A3               	bsf	___fladd@b+3,7
 10584     0A6C                     l721:
 10585     0A6C                     l691:
 10586     0A6C  0008               	return
 10587     0A6D                     __end_of___fladd:
 10588                           
 10589                           	psect	text49
 10590     1ABA                     __ptext49:	
 10591 ;; *************** function _I2C_Read_Byte *****************
 10592 ;; Defined at:
 10593 ;;		line 52 in file "i2c.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;		None
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      unsigned char 
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0, pclath, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10607 ;;      Params:         0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0
 10609 ;;      Temps:          0       0       0       0       0
 10610 ;;      Totals:         0       0       0       0       0
 10611 ;;Total ram usage:        0 bytes
 10612 ;; Hardware stack levels used: 1
 10613 ;; Hardware stack levels required when called: 1
 10614 ;; This function calls:
 10615 ;;		_I2C_Master_Wait
 10616 ;; This function is called by:
 10617 ;;		_TCN75A_ReadTemperature
 10618 ;;		_TCN75A_GetTemp
 10619 ;;		_TCN75A_ReadConfig
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623     1ABA                     _I2C_Read_Byte:	
 10624                           ;psect for function _I2C_Read_Byte
 10625                           
 10626     1ABA                     l3182:	
 10627                           ;incstack = 0
 10628                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
 10629                           
 10630                           
 10631                           ;i2c.c: 53:     I2C_Master_Wait();
 10632     1ABA  160A  158A  2215  160A  158A  	fcall	_I2C_Master_Wait
 10633     1ABF                     l3184:
 10634                           
 10635                           ;i2c.c: 54:     RCEN = 1;
 10636     1ABF  1683               	bsf	3,5	;RP0=1, select bank1
 10637     1AC0  1303               	bcf	3,6	;RP1=0, select bank1
 10638     1AC1  1591               	bsf	17,3	;volatile
 10639     1AC2                     l130:	
 10640                           ;i2c.c: 55:     while(!SSPIF);
 10641                           
 10642     1AC2  1283               	bcf	3,5	;RP0=0, select bank0
 10643     1AC3  1D8C               	btfss	12,3	;volatile
 10644     1AC4  2AC6               	goto	u4491
 10645     1AC5  2AC7               	goto	u4490
 10646     1AC6                     u4491:
 10647     1AC6  2AC2               	goto	l130
 10648     1AC7                     u4490:
 10649     1AC7                     l132:
 10650                           
 10651                           ;i2c.c: 56:     SSPIF = 0;
 10652     1AC7  118C               	bcf	12,3	;volatile
 10653     1AC8                     l3186:
 10654                           
 10655                           ;i2c.c: 57:     I2C_Master_Wait();
 10656     1AC8  160A  158A  2215  160A  158A  	fcall	_I2C_Master_Wait
 10657     1ACD                     l3188:
 10658                           
 10659                           ;i2c.c: 58:     return SSPBUF;
 10660     1ACD  1283               	bcf	3,5	;RP0=0, select bank0
 10661     1ACE  1303               	bcf	3,6	;RP1=0, select bank0
 10662     1ACF  0813               	movf	19,w	;volatile
 10663     1AD0                     l133:
 10664     1AD0  0008               	return
 10665     1AD1                     __end_of_I2C_Read_Byte:
 10666                           
 10667                           	psect	text50
 10668     1A09                     __ptext50:	
 10669 ;; *************** function _I2C_NACK *****************
 10670 ;; Defined at:
 10671 ;;		line 38 in file "i2c.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;		None
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		wreg, status,2, status,0, pclath, cstack
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10685 ;;      Params:         0       0       0       0       0
 10686 ;;      Locals:         0       0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0
 10688 ;;      Totals:         0       0       0       0       0
 10689 ;;Total ram usage:        0 bytes
 10690 ;; Hardware stack levels used: 1
 10691 ;; Hardware stack levels required when called: 1
 10692 ;; This function calls:
 10693 ;;		_I2C_Master_Wait
 10694 ;; This function is called by:
 10695 ;;		_TCN75A_ReadTemperature
 10696 ;;		_TCN75A_GetTemp
 10697 ;;		_TCN75A_ReadConfig
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701     1A09                     _I2C_NACK:	
 10702                           ;psect for function _I2C_NACK
 10703                           
 10704     1A09                     l3176:	
 10705                           ;incstack = 0
 10706                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
 10707                           
 10708                           
 10709                           ;i2c.c: 39:     ACKDT = 1;
 10710     1A09  1683               	bsf	3,5	;RP0=1, select bank1
 10711     1A0A  1303               	bcf	3,6	;RP1=0, select bank1
 10712     1A0B  1691               	bsf	17,5	;volatile
 10713     1A0C                     l3178:
 10714                           
 10715                           ;i2c.c: 40:     I2C_Master_Wait();
 10716     1A0C  160A  158A  2215  160A  158A  	fcall	_I2C_Master_Wait
 10717     1A11                     l3180:
 10718                           
 10719                           ;i2c.c: 41:     ACKEN = 1;
 10720     1A11  1683               	bsf	3,5	;RP0=1, select bank1
 10721     1A12  1303               	bcf	3,6	;RP1=0, select bank1
 10722     1A13  1611               	bsf	17,4	;volatile
 10723     1A14                     l121:
 10724     1A14  0008               	return
 10725     1A15                     __end_of_I2C_NACK:
 10726                           
 10727                           	psect	text51
 10728     1A2F                     __ptext51:	
 10729 ;; *************** function _I2C_Master_Write *****************
 10730 ;; Defined at:
 10731 ;;		line 44 in file "i2c.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;  data            1    wreg     unsigned char 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  data            1    0[COMMON] unsigned char 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      unsigned char 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2, status,0, pclath, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10745 ;;      Params:         0       0       0       0       0
 10746 ;;      Locals:         1       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0
 10748 ;;      Totals:         1       0       0       0       0
 10749 ;;Total ram usage:        1 bytes
 10750 ;; Hardware stack levels used: 1
 10751 ;; Hardware stack levels required when called: 1
 10752 ;; This function calls:
 10753 ;;		_I2C_Master_Wait
 10754 ;; This function is called by:
 10755 ;;		_TCN75A_ReadTemperature
 10756 ;;		_TCN75A_SetTemp
 10757 ;;		_TCN75A_GetTemp
 10758 ;;		_TCN75A_ReadConfig
 10759 ;;		_TCN75A_WriteConfig
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763     1A2F                     _I2C_Master_Write:	
 10764                           ;psect for function _I2C_Master_Write
 10765                           
 10766                           
 10767                           ;incstack = 0
 10768                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10769                           ;I2C_Master_Write@data stored from wreg
 10770     1A2F  00F0               	movwf	I2C_Master_Write@data
 10771     1A30                     l2662:
 10772                           
 10773                           ;i2c.c: 45:     I2C_Master_Wait();
 10774     1A30  160A  158A  2215  160A  158A  	fcall	_I2C_Master_Wait
 10775     1A35                     l2664:
 10776                           
 10777                           ;i2c.c: 46:     SSPBUF = data;
 10778     1A35  0870               	movf	I2C_Master_Write@data,w
 10779     1A36  1283               	bcf	3,5	;RP0=0, select bank0
 10780     1A37  1303               	bcf	3,6	;RP1=0, select bank0
 10781     1A38  0093               	movwf	19	;volatile
 10782     1A39                     l124:	
 10783                           ;i2c.c: 47:     while(!SSPIF);
 10784                           
 10785     1A39  1D8C               	btfss	12,3	;volatile
 10786     1A3A  2A3C               	goto	u3171
 10787     1A3B  2A3D               	goto	u3170
 10788     1A3C                     u3171:
 10789     1A3C  2A39               	goto	l124
 10790     1A3D                     u3170:
 10791     1A3D                     l126:
 10792                           
 10793                           ;i2c.c: 48:     SSPIF = 0;
 10794     1A3D  118C               	bcf	12,3	;volatile
 10795     1A3E                     l127:	
 10796                           ;i2c.c: 49:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
 10797                           
 10798     1A3E  0008               	return
 10799     1A3F                     __end_of_I2C_Master_Write:
 10800                           
 10801                           	psect	text52
 10802     19DE                     __ptext52:	
 10803 ;; *************** function _I2C_Master_Stop *****************
 10804 ;; Defined at:
 10805 ;;		line 27 in file "i2c.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;		None
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;		None
 10810 ;; Return value:  Size  Location     Type
 10811 ;;                  1    wreg      void 
 10812 ;; Registers used:
 10813 ;;		wreg, status,2, status,0, pclath, cstack
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10819 ;;      Params:         0       0       0       0       0
 10820 ;;      Locals:         0       0       0       0       0
 10821 ;;      Temps:          0       0       0       0       0
 10822 ;;      Totals:         0       0       0       0       0
 10823 ;;Total ram usage:        0 bytes
 10824 ;; Hardware stack levels used: 1
 10825 ;; Hardware stack levels required when called: 1
 10826 ;; This function calls:
 10827 ;;		_I2C_Master_Wait
 10828 ;; This function is called by:
 10829 ;;		_TCN75A_ReadTemperature
 10830 ;;		_TCN75A_SetTemp
 10831 ;;		_TCN75A_GetTemp
 10832 ;;		_TCN75A_ReadConfig
 10833 ;;		_TCN75A_WriteConfig
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837     19DE                     _I2C_Master_Stop:	
 10838                           ;psect for function _I2C_Master_Stop
 10839                           
 10840     19DE                     l2658:	
 10841                           ;incstack = 0
 10842                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10843                           
 10844                           
 10845                           ;i2c.c: 28:     I2C_Master_Wait();
 10846     19DE  160A  158A  2215  160A  158A  	fcall	_I2C_Master_Wait
 10847     19E3                     l2660:
 10848                           
 10849                           ;i2c.c: 29:     PEN = 1;
 10850     19E3  1683               	bsf	3,5	;RP0=1, select bank1
 10851     19E4  1303               	bcf	3,6	;RP1=0, select bank1
 10852     19E5  1511               	bsf	17,2	;volatile
 10853     19E6                     l115:
 10854     19E6  0008               	return
 10855     19E7                     __end_of_I2C_Master_Stop:
 10856                           
 10857                           	psect	text53
 10858     19D5                     __ptext53:	
 10859 ;; *************** function _I2C_Master_Start *****************
 10860 ;; Defined at:
 10861 ;;		line 17 in file "i2c.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;		None
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0, pclath, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10875 ;;      Params:         0       0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0
 10878 ;;      Totals:         0       0       0       0       0
 10879 ;;Total ram usage:        0 bytes
 10880 ;; Hardware stack levels used: 1
 10881 ;; Hardware stack levels required when called: 1
 10882 ;; This function calls:
 10883 ;;		_I2C_Master_Wait
 10884 ;; This function is called by:
 10885 ;;		_TCN75A_ReadTemperature
 10886 ;;		_TCN75A_SetTemp
 10887 ;;		_TCN75A_GetTemp
 10888 ;;		_TCN75A_ReadConfig
 10889 ;;		_TCN75A_WriteConfig
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893     19D5                     _I2C_Master_Start:	
 10894                           ;psect for function _I2C_Master_Start
 10895                           
 10896     19D5                     l2654:	
 10897                           ;incstack = 0
 10898                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10899                           
 10900                           
 10901                           ;i2c.c: 18:     I2C_Master_Wait();
 10902     19D5  160A  158A  2215  160A  158A  	fcall	_I2C_Master_Wait
 10903     19DA                     l2656:
 10904                           
 10905                           ;i2c.c: 19:     SEN = 1;
 10906     19DA  1683               	bsf	3,5	;RP0=1, select bank1
 10907     19DB  1303               	bcf	3,6	;RP1=0, select bank1
 10908     19DC  1411               	bsf	17,0	;volatile
 10909     19DD                     l109:
 10910     19DD  0008               	return
 10911     19DE                     __end_of_I2C_Master_Start:
 10912                           
 10913                           	psect	text54
 10914     19FD                     __ptext54:	
 10915 ;; *************** function _I2C_ACK *****************
 10916 ;; Defined at:
 10917 ;;		line 32 in file "i2c.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;		None
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;		None
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      void 
 10924 ;; Registers used:
 10925 ;;		wreg, status,2, status,0, pclath, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10931 ;;      Params:         0       0       0       0       0
 10932 ;;      Locals:         0       0       0       0       0
 10933 ;;      Temps:          0       0       0       0       0
 10934 ;;      Totals:         0       0       0       0       0
 10935 ;;Total ram usage:        0 bytes
 10936 ;; Hardware stack levels used: 1
 10937 ;; Hardware stack levels required when called: 1
 10938 ;; This function calls:
 10939 ;;		_I2C_Master_Wait
 10940 ;; This function is called by:
 10941 ;;		_TCN75A_ReadTemperature
 10942 ;;		_TCN75A_GetTemp
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946     19FD                     _I2C_ACK:	
 10947                           ;psect for function _I2C_ACK
 10948                           
 10949     19FD                     l3452:	
 10950                           ;incstack = 0
 10951                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
 10952                           
 10953                           
 10954                           ;i2c.c: 33:     ACKDT = 0;
 10955     19FD  1683               	bsf	3,5	;RP0=1, select bank1
 10956     19FE  1303               	bcf	3,6	;RP1=0, select bank1
 10957     19FF  1291               	bcf	17,5	;volatile
 10958     1A00                     l3454:
 10959                           
 10960                           ;i2c.c: 34:     I2C_Master_Wait();
 10961     1A00  160A  158A  2215  160A  158A  	fcall	_I2C_Master_Wait
 10962     1A05                     l3456:
 10963                           
 10964                           ;i2c.c: 35:     ACKEN = 1;
 10965     1A05  1683               	bsf	3,5	;RP0=1, select bank1
 10966     1A06  1303               	bcf	3,6	;RP1=0, select bank1
 10967     1A07  1611               	bsf	17,4	;volatile
 10968     1A08                     l118:
 10969     1A08  0008               	return
 10970     1A09                     __end_of_I2C_ACK:
 10971                           
 10972                           	psect	text55
 10973     1A15                     __ptext55:	
 10974 ;; *************** function _I2C_Master_Wait *****************
 10975 ;; Defined at:
 10976 ;;		line 13 in file "i2c.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;		None
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1    wreg      void 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10990 ;;      Params:         0       0       0       0       0
 10991 ;;      Locals:         0       0       0       0       0
 10992 ;;      Temps:          0       0       0       0       0
 10993 ;;      Totals:         0       0       0       0       0
 10994 ;;Total ram usage:        0 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; This function calls:
 10997 ;;		Nothing
 10998 ;; This function is called by:
 10999 ;;		_I2C_Master_Start
 11000 ;;		_I2C_Master_Stop
 11001 ;;		_I2C_ACK
 11002 ;;		_I2C_NACK
 11003 ;;		_I2C_Master_Write
 11004 ;;		_I2C_Read_Byte
 11005 ;;		_I2C_Master_RepeatedStart
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009     1A15                     _I2C_Master_Wait:	
 11010                           ;psect for function _I2C_Master_Wait
 11011                           
 11012     1A15                     l2430:	
 11013                           ;incstack = 0
 11014                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11015                           
 11016     1A15                     l103:	
 11017                           ;i2c.c: 14:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11018                           
 11019     1A15  1683               	bsf	3,5	;RP0=1, select bank1
 11020     1A16  1303               	bcf	3,6	;RP1=0, select bank1
 11021     1A17  1914               	btfsc	20,2	;volatile
 11022     1A18  2A1A               	goto	u2651
 11023     1A19  2A1B               	goto	u2650
 11024     1A1A                     u2651:
 11025     1A1A  2A15               	goto	l103
 11026     1A1B                     u2650:
 11027     1A1B                     l2432:
 11028     1A1B  0811               	movf	17,w	;volatile
 11029     1A1C  391F               	andlw	31
 11030     1A1D  1D03               	btfss	3,2
 11031     1A1E  2A20               	goto	u2661
 11032     1A1F  2A21               	goto	u2660
 11033     1A20                     u2661:
 11034     1A20  2A15               	goto	l103
 11035     1A21                     u2660:
 11036     1A21                     l106:
 11037     1A21  0008               	return
 11038     1A22                     __end_of_I2C_Master_Wait:
 11039     0002                     ___latbits      equ	2
 11040     007E                     btemp           set	126	;btemp
 11041     007E                     wtemp0          set	126
 11042                           
 11043                           	psect	text6_split_1
 11044     00B1                     l3270:
 11045                           
 11046                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 11047     00B1  303F               	movlw	63
 11048     00B2  1683               	bsf	3,5	;RP0=1, select bank1
 11049     00B3  1303               	bcf	3,6	;RP1=0, select bank1
 11050     00B4  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11051     00B5  3080               	movlw	128
 11052     00B6  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11053     00B7  3000               	movlw	0
 11054     00B8  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11055     00B9  3000               	movlw	0
 11056     00BA  00C8               	movwf	efgtoa@u^(0+128)
 11057     00BB                     l3272:
 11058                           
 11059                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 11060     00BB  01AF               	clrf	efgtoa@e^(0+128)
 11061     00BC  01B0               	clrf	(efgtoa@e+1)^(0+128)
 11062     00BD                     l3274:
 11063                           
 11064                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 11065     00BD  0847               	movf	(efgtoa@g+3)^(0+128),w
 11066     00BE  00F3               	movwf	___fleq@ff1+3
 11067     00BF  0846               	movf	(efgtoa@g+2)^(0+128),w
 11068     00C0  00F2               	movwf	___fleq@ff1+2
 11069     00C1  0845               	movf	(efgtoa@g+1)^(0+128),w
 11070     00C2  00F1               	movwf	___fleq@ff1+1
 11071     00C3  0844               	movf	efgtoa@g^(0+128),w
 11072     00C4  00F0               	movwf	___fleq@ff1
 11073     00C5  3000               	movlw	0
 11074     00C6  00F7               	movwf	___fleq@ff2+3
 11075     00C7  3000               	movlw	0
 11076     00C8  00F6               	movwf	___fleq@ff2+2
 11077     00C9  3000               	movlw	0
 11078     00CA  00F5               	movwf	___fleq@ff2+1
 11079     00CB  3000               	movlw	0
 11080     00CC  00F4               	movwf	___fleq@ff2
 11081     00CD  160A  158A  25A0  120A  118A  	fcall	___fleq
 11082     00D2  1803               	btfsc	3,0
 11083     00D3  28D5               	goto	u4601
 11084     00D4  28D6               	goto	u4600
 11085     00D5                     u4601:
 11086     00D5  2AE7               	goto	l3300
 11087     00D6                     u4600:
 11088     00D6  28E7               	goto	l3280
 11089     00D7                     l3278:
 11090                           
 11091                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 11092     00D7  1683               	bsf	3,5	;RP0=1, select bank1
 11093     00D8  1303               	bcf	3,6	;RP1=0, select bank1
 11094     00D9  0836               	movf	(efgtoa@ou+3)^(0+128),w
 11095     00DA  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11096     00DB  0835               	movf	(efgtoa@ou+2)^(0+128),w
 11097     00DC  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11098     00DD  0834               	movf	(efgtoa@ou+1)^(0+128),w
 11099     00DE  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11100     00DF  0833               	movf	efgtoa@ou^(0+128),w
 11101     00E0  00C8               	movwf	efgtoa@u^(0+128)
 11102                           
 11103                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
 11104     00E1  3001               	movlw	1
 11105     00E2  07AF               	addwf	efgtoa@e^(0+128),f
 11106     00E3  1803               	skipnc
 11107     00E4  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 11108     00E5  3000               	movlw	0
 11109     00E6  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 11110     00E7                     l3280:
 11111                           
 11112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 11113     00E7  3041               	movlw	65
 11114     00E8  1283               	bcf	3,5	;RP0=0, select bank0
 11115     00E9  1303               	bcf	3,6	;RP1=0, select bank0
 11116     00EA  00A3               	movwf	___flmul@b+3
 11117     00EB  3020               	movlw	32
 11118     00EC  00A2               	movwf	___flmul@b+2
 11119     00ED  3000               	movlw	0
 11120     00EE  00A1               	movwf	___flmul@b+1
 11121     00EF  3000               	movlw	0
 11122     00F0  00A0               	movwf	___flmul@b
 11123     00F1  1683               	bsf	3,5	;RP0=1, select bank1
 11124     00F2  1303               	bcf	3,6	;RP1=0, select bank1
 11125     00F3  084B               	movf	(efgtoa@u+3)^(0+128),w
 11126     00F4  1283               	bcf	3,5	;RP0=0, select bank0
 11127     00F5  1303               	bcf	3,6	;RP1=0, select bank0
 11128     00F6  00A7               	movwf	___flmul@a+3
 11129     00F7  1683               	bsf	3,5	;RP0=1, select bank1
 11130     00F8  1303               	bcf	3,6	;RP1=0, select bank1
 11131     00F9  084A               	movf	(efgtoa@u+2)^(0+128),w
 11132     00FA  1283               	bcf	3,5	;RP0=0, select bank0
 11133     00FB  1303               	bcf	3,6	;RP1=0, select bank0
 11134     00FC  00A6               	movwf	___flmul@a+2
 11135     00FD  1683               	bsf	3,5	;RP0=1, select bank1
 11136     00FE  1303               	bcf	3,6	;RP1=0, select bank1
 11137     00FF  0849               	movf	(efgtoa@u+1)^(0+128),w
 11138     0100  1283               	bcf	3,5	;RP0=0, select bank0
 11139     0101  1303               	bcf	3,6	;RP1=0, select bank0
 11140     0102  00A5               	movwf	___flmul@a+1
 11141     0103  1683               	bsf	3,5	;RP0=1, select bank1
 11142     0104  1303               	bcf	3,6	;RP1=0, select bank1
 11143     0105  0848               	movf	efgtoa@u^(0+128),w
 11144     0106  1283               	bcf	3,5	;RP0=0, select bank0
 11145     0107  1303               	bcf	3,6	;RP1=0, select bank0
 11146     0108  00A4               	movwf	___flmul@a
 11147     0109  120A  158A  24BE  120A  118A  	fcall	___flmul
 11148     010E  1283               	bcf	3,5	;RP0=0, select bank0
 11149     010F  1303               	bcf	3,6	;RP1=0, select bank0
 11150     0110  0823               	movf	?___flmul+3,w
 11151     0111  1683               	bsf	3,5	;RP0=1, select bank1
 11152     0112  1303               	bcf	3,6	;RP1=0, select bank1
 11153     0113  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 11154     0114  1283               	bcf	3,5	;RP0=0, select bank0
 11155     0115  1303               	bcf	3,6	;RP1=0, select bank0
 11156     0116  0822               	movf	?___flmul+2,w
 11157     0117  1683               	bsf	3,5	;RP0=1, select bank1
 11158     0118  1303               	bcf	3,6	;RP1=0, select bank1
 11159     0119  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 11160     011A  1283               	bcf	3,5	;RP0=0, select bank0
 11161     011B  1303               	bcf	3,6	;RP1=0, select bank0
 11162     011C  0821               	movf	?___flmul+1,w
 11163     011D  1683               	bsf	3,5	;RP0=1, select bank1
 11164     011E  1303               	bcf	3,6	;RP1=0, select bank1
 11165     011F  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 11166     0120  1283               	bcf	3,5	;RP0=0, select bank0
 11167     0121  1303               	bcf	3,6	;RP1=0, select bank0
 11168     0122  0820               	movf	?___flmul,w
 11169     0123  1683               	bsf	3,5	;RP0=1, select bank1
 11170     0124  1303               	bcf	3,6	;RP1=0, select bank1
 11171     0125  00B3               	movwf	efgtoa@ou^(0+128)
 11172     0126                     l3282:
 11173     0126  0844               	movf	efgtoa@g^(0+128),w
 11174     0127  1283               	bcf	3,5	;RP0=0, select bank0
 11175     0128  1303               	bcf	3,6	;RP1=0, select bank0
 11176     0129  00DB               	movwf	??_efgtoa
 11177     012A  1683               	bsf	3,5	;RP0=1, select bank1
 11178     012B  1303               	bcf	3,6	;RP1=0, select bank1
 11179     012C  0845               	movf	(efgtoa@g+1)^(0+128),w
 11180     012D  1283               	bcf	3,5	;RP0=0, select bank0
 11181     012E  1303               	bcf	3,6	;RP1=0, select bank0
 11182     012F  00DC               	movwf	??_efgtoa+1
 11183     0130  1683               	bsf	3,5	;RP0=1, select bank1
 11184     0131  1303               	bcf	3,6	;RP1=0, select bank1
 11185     0132  0846               	movf	(efgtoa@g+2)^(0+128),w
 11186     0133  1283               	bcf	3,5	;RP0=0, select bank0
 11187     0134  1303               	bcf	3,6	;RP1=0, select bank0
 11188     0135  00DD               	movwf	??_efgtoa+2
 11189     0136  1683               	bsf	3,5	;RP0=1, select bank1
 11190     0137  1303               	bcf	3,6	;RP1=0, select bank1
 11191     0138  0847               	movf	(efgtoa@g+3)^(0+128),w
 11192     0139  1283               	bcf	3,5	;RP0=0, select bank0
 11193     013A  1303               	bcf	3,6	;RP1=0, select bank0
 11194     013B  00DE               	movwf	??_efgtoa+3
 11195     013C  1683               	bsf	3,5	;RP0=1, select bank1
 11196     013D  1303               	bcf	3,6	;RP1=0, select bank1
 11197     013E  0833               	movf	efgtoa@ou^(0+128),w
 11198     013F  1283               	bcf	3,5	;RP0=0, select bank0
 11199     0140  1303               	bcf	3,6	;RP1=0, select bank0
 11200     0141  02DB               	subwf	??_efgtoa,f
 11201     0142  1683               	bsf	3,5	;RP0=1, select bank1
 11202     0143  1303               	bcf	3,6	;RP1=0, select bank1
 11203     0144  0834               	movf	(efgtoa@ou+1)^(0+128),w
 11204     0145  1C03               	skipc
 11205     0146  0F34               	incfsz	(efgtoa@ou+1)^(0+128),w
 11206     0147  2949               	goto	u4611
 11207     0148  294C               	goto	u4612
 11208     0149                     u4611:
 11209     0149  1283               	bcf	3,5	;RP0=0, select bank0
 11210     014A  1303               	bcf	3,6	;RP1=0, select bank0
 11211     014B  02DC               	subwf	??_efgtoa+1,f
 11212     014C                     u4612:
 11213     014C  1683               	bsf	3,5	;RP0=1, select bank1
 11214     014D  1303               	bcf	3,6	;RP1=0, select bank1
 11215     014E  0835               	movf	(efgtoa@ou+2)^(0+128),w
 11216     014F  1C03               	skipc
 11217     0150  0F35               	incfsz	(efgtoa@ou+2)^(0+128),w
 11218     0151  2953               	goto	u4613
 11219     0152  2956               	goto	u4614
 11220     0153                     u4613:
 11221     0153  1283               	bcf	3,5	;RP0=0, select bank0
 11222     0154  1303               	bcf	3,6	;RP1=0, select bank0
 11223     0155  02DD               	subwf	??_efgtoa+2,f
 11224     0156                     u4614:
 11225     0156  1683               	bsf	3,5	;RP0=1, select bank1
 11226     0157  1303               	bcf	3,6	;RP1=0, select bank1
 11227     0158  0836               	movf	(efgtoa@ou+3)^(0+128),w
 11228     0159  1C03               	skipc
 11229     015A  0F36               	incfsz	(efgtoa@ou+3)^(0+128),w
 11230     015B  295D               	goto	u4615
 11231     015C  2960               	goto	u4616
 11232     015D                     u4615:
 11233     015D  1283               	bcf	3,5	;RP0=0, select bank0
 11234     015E  1303               	bcf	3,6	;RP1=0, select bank0
 11235     015F  02DE               	subwf	??_efgtoa+3,f
 11236     0160                     u4616:
 11237     0160  1683               	bsf	3,5	;RP0=1, select bank1
 11238     0161  1303               	bcf	3,6	;RP1=0, select bank1
 11239     0162  1283               	bcf	3,5	;RP0=0, select bank0
 11240     0163  1303               	bcf	3,6	;RP1=0, select bank0
 11241     0164  085E               	movf	??_efgtoa+3,w
 11242     0165  00F3               	movwf	labs@a+3
 11243     0166  085D               	movf	??_efgtoa+2,w
 11244     0167  00F2               	movwf	labs@a+2
 11245     0168  085C               	movf	??_efgtoa+1,w
 11246     0169  00F1               	movwf	labs@a+1
 11247     016A  085B               	movf	??_efgtoa,w
 11248     016B  00F0               	movwf	labs@a
 11249     016C  160A  158A  22A5  120A  118A  	fcall	_labs
 11250     0171  1BF3               	btfsc	?_labs+3,7
 11251     0172  2983               	goto	u4621
 11252     0173  0873               	movf	?_labs+3,w
 11253     0174  1D03               	btfss	3,2
 11254     0175  2984               	goto	u4620
 11255     0176  0872               	movf	?_labs+2,w
 11256     0177  1D03               	btfss	3,2
 11257     0178  2984               	goto	u4620
 11258     0179  0871               	movf	?_labs+1,w
 11259     017A  1D03               	btfss	3,2
 11260     017B  2984               	goto	u4620
 11261     017C  3002               	movlw	2
 11262     017D  0270               	subwf	?_labs,w
 11263     017E  1D03               	skipz
 11264     017F  2980               	goto	u4623
 11265     0180                     u4623:
 11266     0180  1C03               	btfss	3,0
 11267     0181  2983               	goto	u4621
 11268     0182  2984               	goto	u4620
 11269     0183                     u4621:
 11270     0183  28D7               	goto	l3278
 11271     0184                     u4620:
 11272     0184                     l3284:
 11273     0184  1683               	bsf	3,5	;RP0=1, select bank1
 11274     0185  1303               	bcf	3,6	;RP1=0, select bank1
 11275     0186  0836               	movf	(efgtoa@ou+3)^(0+128),w
 11276     0187  1283               	bcf	3,5	;RP0=0, select bank0
 11277     0188  1303               	bcf	3,6	;RP1=0, select bank0
 11278     0189  00CB               	movwf	___flge@ff1+3
 11279     018A  1683               	bsf	3,5	;RP0=1, select bank1
 11280     018B  1303               	bcf	3,6	;RP1=0, select bank1
 11281     018C  0835               	movf	(efgtoa@ou+2)^(0+128),w
 11282     018D  1283               	bcf	3,5	;RP0=0, select bank0
 11283     018E  1303               	bcf	3,6	;RP1=0, select bank0
 11284     018F  00CA               	movwf	___flge@ff1+2
 11285     0190  1683               	bsf	3,5	;RP0=1, select bank1
 11286     0191  1303               	bcf	3,6	;RP1=0, select bank1
 11287     0192  0834               	movf	(efgtoa@ou+1)^(0+128),w
 11288     0193  1283               	bcf	3,5	;RP0=0, select bank0
 11289     0194  1303               	bcf	3,6	;RP1=0, select bank0
 11290     0195  00C9               	movwf	___flge@ff1+1
 11291     0196  1683               	bsf	3,5	;RP0=1, select bank1
 11292     0197  1303               	bcf	3,6	;RP1=0, select bank1
 11293     0198  0833               	movf	efgtoa@ou^(0+128),w
 11294     0199  1283               	bcf	3,5	;RP0=0, select bank0
 11295     019A  1303               	bcf	3,6	;RP1=0, select bank0
 11296     019B  00C8               	movwf	___flge@ff1
 11297     019C  1683               	bsf	3,5	;RP0=1, select bank1
 11298     019D  1303               	bcf	3,6	;RP1=0, select bank1
 11299     019E  0847               	movf	(efgtoa@g+3)^(0+128),w
 11300     019F  1283               	bcf	3,5	;RP0=0, select bank0
 11301     01A0  1303               	bcf	3,6	;RP1=0, select bank0
 11302     01A1  00CF               	movwf	___flge@ff2+3
 11303     01A2  1683               	bsf	3,5	;RP0=1, select bank1
 11304     01A3  1303               	bcf	3,6	;RP1=0, select bank1
 11305     01A4  0846               	movf	(efgtoa@g+2)^(0+128),w
 11306     01A5  1283               	bcf	3,5	;RP0=0, select bank0
 11307     01A6  1303               	bcf	3,6	;RP1=0, select bank0
 11308     01A7  00CE               	movwf	___flge@ff2+2
 11309     01A8  1683               	bsf	3,5	;RP0=1, select bank1
 11310     01A9  1303               	bcf	3,6	;RP1=0, select bank1
 11311     01AA  0845               	movf	(efgtoa@g+1)^(0+128),w
 11312     01AB  1283               	bcf	3,5	;RP0=0, select bank0
 11313     01AC  1303               	bcf	3,6	;RP1=0, select bank0
 11314     01AD  00CD               	movwf	___flge@ff2+1
 11315     01AE  1683               	bsf	3,5	;RP0=1, select bank1
 11316     01AF  1303               	bcf	3,6	;RP1=0, select bank1
 11317     01B0  0844               	movf	efgtoa@g^(0+128),w
 11318     01B1  1283               	bcf	3,5	;RP0=0, select bank0
 11319     01B2  1303               	bcf	3,6	;RP1=0, select bank0
 11320     01B3  00CC               	movwf	___flge@ff2
 11321     01B4  160A  158A  275C  120A  118A  	fcall	___flge
 11322     01B9  1C03               	btfss	3,0
 11323     01BA  29BC               	goto	u4631
 11324     01BB  29BD               	goto	u4630
 11325     01BC                     u4631:
 11326     01BC  28D7               	goto	l3278
 11327     01BD                     u4630:
 11328     01BD                     l3286:
 11329                           
 11330                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 11331     01BD  1683               	bsf	3,5	;RP0=1, select bank1
 11332     01BE  1303               	bcf	3,6	;RP1=0, select bank1
 11333     01BF  0844               	movf	efgtoa@g^(0+128),w
 11334     01C0  1283               	bcf	3,5	;RP0=0, select bank0
 11335     01C1  1303               	bcf	3,6	;RP1=0, select bank0
 11336     01C2  00DB               	movwf	??_efgtoa
 11337     01C3  1683               	bsf	3,5	;RP0=1, select bank1
 11338     01C4  1303               	bcf	3,6	;RP1=0, select bank1
 11339     01C5  0845               	movf	(efgtoa@g+1)^(0+128),w
 11340     01C6  1283               	bcf	3,5	;RP0=0, select bank0
 11341     01C7  1303               	bcf	3,6	;RP1=0, select bank0
 11342     01C8  00DC               	movwf	??_efgtoa+1
 11343     01C9  1683               	bsf	3,5	;RP0=1, select bank1
 11344     01CA  1303               	bcf	3,6	;RP1=0, select bank1
 11345     01CB  0846               	movf	(efgtoa@g+2)^(0+128),w
 11346     01CC  1283               	bcf	3,5	;RP0=0, select bank0
 11347     01CD  1303               	bcf	3,6	;RP1=0, select bank0
 11348     01CE  00DD               	movwf	??_efgtoa+2
 11349     01CF  1683               	bsf	3,5	;RP0=1, select bank1
 11350     01D0  1303               	bcf	3,6	;RP1=0, select bank1
 11351     01D1  0847               	movf	(efgtoa@g+3)^(0+128),w
 11352     01D2  1283               	bcf	3,5	;RP0=0, select bank0
 11353     01D3  1303               	bcf	3,6	;RP1=0, select bank0
 11354     01D4  00DE               	movwf	??_efgtoa+3
 11355     01D5  1683               	bsf	3,5	;RP0=1, select bank1
 11356     01D6  1303               	bcf	3,6	;RP1=0, select bank1
 11357     01D7  0848               	movf	efgtoa@u^(0+128),w
 11358     01D8  1283               	bcf	3,5	;RP0=0, select bank0
 11359     01D9  1303               	bcf	3,6	;RP1=0, select bank0
 11360     01DA  02DB               	subwf	??_efgtoa,f
 11361     01DB  1683               	bsf	3,5	;RP0=1, select bank1
 11362     01DC  1303               	bcf	3,6	;RP1=0, select bank1
 11363     01DD  0849               	movf	(efgtoa@u+1)^(0+128),w
 11364     01DE  1C03               	skipc
 11365     01DF  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 11366     01E0  29E2               	goto	u4641
 11367     01E1  29E5               	goto	u4642
 11368     01E2                     u4641:
 11369     01E2  1283               	bcf	3,5	;RP0=0, select bank0
 11370     01E3  1303               	bcf	3,6	;RP1=0, select bank0
 11371     01E4  02DC               	subwf	??_efgtoa+1,f
 11372     01E5                     u4642:
 11373     01E5  1683               	bsf	3,5	;RP0=1, select bank1
 11374     01E6  1303               	bcf	3,6	;RP1=0, select bank1
 11375     01E7  084A               	movf	(efgtoa@u+2)^(0+128),w
 11376     01E8  1C03               	skipc
 11377     01E9  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 11378     01EA  29EC               	goto	u4643
 11379     01EB  29EF               	goto	u4644
 11380     01EC                     u4643:
 11381     01EC  1283               	bcf	3,5	;RP0=0, select bank0
 11382     01ED  1303               	bcf	3,6	;RP1=0, select bank0
 11383     01EE  02DD               	subwf	??_efgtoa+2,f
 11384     01EF                     u4644:
 11385     01EF  1683               	bsf	3,5	;RP0=1, select bank1
 11386     01F0  1303               	bcf	3,6	;RP1=0, select bank1
 11387     01F1  084B               	movf	(efgtoa@u+3)^(0+128),w
 11388     01F2  1C03               	skipc
 11389     01F3  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 11390     01F4  29F6               	goto	u4645
 11391     01F5  29F9               	goto	u4646
 11392     01F6                     u4645:
 11393     01F6  1283               	bcf	3,5	;RP0=0, select bank0
 11394     01F7  1303               	bcf	3,6	;RP1=0, select bank0
 11395     01F8  02DE               	subwf	??_efgtoa+3,f
 11396     01F9                     u4646:
 11397     01F9  1683               	bsf	3,5	;RP0=1, select bank1
 11398     01FA  1303               	bcf	3,6	;RP1=0, select bank1
 11399     01FB  1283               	bcf	3,5	;RP0=0, select bank0
 11400     01FC  1303               	bcf	3,6	;RP1=0, select bank0
 11401     01FD  085E               	movf	??_efgtoa+3,w
 11402     01FE  00F3               	movwf	labs@a+3
 11403     01FF  085D               	movf	??_efgtoa+2,w
 11404     0200  00F2               	movwf	labs@a+2
 11405     0201  085C               	movf	??_efgtoa+1,w
 11406     0202  00F1               	movwf	labs@a+1
 11407     0203  085B               	movf	??_efgtoa,w
 11408     0204  00F0               	movwf	labs@a
 11409     0205  160A  158A  22A5  120A  118A  	fcall	_labs
 11410     020A  1BF3               	btfsc	?_labs+3,7
 11411     020B  2A1D               	goto	u4650
 11412     020C  0873               	movf	?_labs+3,w
 11413     020D  1D03               	btfss	3,2
 11414     020E  2A1C               	goto	u4651
 11415     020F  0872               	movf	?_labs+2,w
 11416     0210  1D03               	btfss	3,2
 11417     0211  2A1C               	goto	u4651
 11418     0212  0871               	movf	?_labs+1,w
 11419     0213  1D03               	btfss	3,2
 11420     0214  2A1C               	goto	u4651
 11421     0215  3002               	movlw	2
 11422     0216  0270               	subwf	?_labs,w
 11423     0217  1D03               	skipz
 11424     0218  2A19               	goto	u4653
 11425     0219                     u4653:
 11426     0219  1803               	btfsc	3,0
 11427     021A  2A1C               	goto	u4651
 11428     021B  2A1D               	goto	u4650
 11429     021C                     u4651:
 11430     021C  2AAE               	goto	l3298
 11431     021D                     u4650:
 11432     021D                     l3288:
 11433                           
 11434                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
 11435     021D  1683               	bsf	3,5	;RP0=1, select bank1
 11436     021E  1303               	bcf	3,6	;RP1=0, select bank1
 11437     021F  084B               	movf	(efgtoa@u+3)^(0+128),w
 11438     0220  00C7               	movwf	(efgtoa@g+3)^(0+128)
 11439     0221  084A               	movf	(efgtoa@u+2)^(0+128),w
 11440     0222  00C6               	movwf	(efgtoa@g+2)^(0+128)
 11441     0223  0849               	movf	(efgtoa@u+1)^(0+128),w
 11442     0224  00C5               	movwf	(efgtoa@g+1)^(0+128)
 11443     0225  0848               	movf	efgtoa@u^(0+128),w
 11444     0226  00C4               	movwf	efgtoa@g^(0+128)
 11445                           
 11446                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
 11447     0227  2AE7               	goto	l3300
 11448     0228                     l3290:
 11449                           
 11450                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 11451     0228  3041               	movlw	65
 11452     0229  00F3               	movwf	___fldiv@a+3
 11453     022A  3020               	movlw	32
 11454     022B  00F2               	movwf	___fldiv@a+2
 11455     022C  3000               	movlw	0
 11456     022D  00F1               	movwf	___fldiv@a+1
 11457     022E  3000               	movlw	0
 11458     022F  00F0               	movwf	___fldiv@a
 11459     0230  1683               	bsf	3,5	;RP0=1, select bank1
 11460     0231  1303               	bcf	3,6	;RP1=0, select bank1
 11461     0232  084B               	movf	(efgtoa@u+3)^(0+128),w
 11462     0233  00F7               	movwf	___fldiv@b+3
 11463     0234  084A               	movf	(efgtoa@u+2)^(0+128),w
 11464     0235  00F6               	movwf	___fldiv@b+2
 11465     0236  0849               	movf	(efgtoa@u+1)^(0+128),w
 11466     0237  00F5               	movwf	___fldiv@b+1
 11467     0238  0848               	movf	efgtoa@u^(0+128),w
 11468     0239  00F4               	movwf	___fldiv@b
 11469     023A  160A  118A  2630  120A  118A  	fcall	___fldiv
 11470     023F  0873               	movf	?___fldiv+3,w
 11471     0240  1683               	bsf	3,5	;RP0=1, select bank1
 11472     0241  1303               	bcf	3,6	;RP1=0, select bank1
 11473     0242  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11474     0243  0872               	movf	?___fldiv+2,w
 11475     0244  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11476     0245  0871               	movf	?___fldiv+1,w
 11477     0246  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11478     0247  0870               	movf	?___fldiv,w
 11479     0248  00C8               	movwf	efgtoa@u^(0+128)
 11480     0249                     l3292:
 11481                           
 11482                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
 11483     0249  30FF               	movlw	255
 11484     024A  07AF               	addwf	efgtoa@e^(0+128),f
 11485     024B  1803               	skipnc
 11486     024C  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 11487     024D  30FF               	movlw	255
 11488     024E  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 11489     024F                     l3294:
 11490                           
 11491                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 11492     024F  0844               	movf	efgtoa@g^(0+128),w
 11493     0250  1283               	bcf	3,5	;RP0=0, select bank0
 11494     0251  1303               	bcf	3,6	;RP1=0, select bank0
 11495     0252  00DB               	movwf	??_efgtoa
 11496     0253  1683               	bsf	3,5	;RP0=1, select bank1
 11497     0254  1303               	bcf	3,6	;RP1=0, select bank1
 11498     0255  0845               	movf	(efgtoa@g+1)^(0+128),w
 11499     0256  1283               	bcf	3,5	;RP0=0, select bank0
 11500     0257  1303               	bcf	3,6	;RP1=0, select bank0
 11501     0258  00DC               	movwf	??_efgtoa+1
 11502     0259  1683               	bsf	3,5	;RP0=1, select bank1
 11503     025A  1303               	bcf	3,6	;RP1=0, select bank1
 11504     025B  0846               	movf	(efgtoa@g+2)^(0+128),w
 11505     025C  1283               	bcf	3,5	;RP0=0, select bank0
 11506     025D  1303               	bcf	3,6	;RP1=0, select bank0
 11507     025E  00DD               	movwf	??_efgtoa+2
 11508     025F  1683               	bsf	3,5	;RP0=1, select bank1
 11509     0260  1303               	bcf	3,6	;RP1=0, select bank1
 11510     0261  0847               	movf	(efgtoa@g+3)^(0+128),w
 11511     0262  1283               	bcf	3,5	;RP0=0, select bank0
 11512     0263  1303               	bcf	3,6	;RP1=0, select bank0
 11513     0264  00DE               	movwf	??_efgtoa+3
 11514     0265  1683               	bsf	3,5	;RP0=1, select bank1
 11515     0266  1303               	bcf	3,6	;RP1=0, select bank1
 11516     0267  0848               	movf	efgtoa@u^(0+128),w
 11517     0268  1283               	bcf	3,5	;RP0=0, select bank0
 11518     0269  1303               	bcf	3,6	;RP1=0, select bank0
 11519     026A  02DB               	subwf	??_efgtoa,f
 11520     026B  1683               	bsf	3,5	;RP0=1, select bank1
 11521     026C  1303               	bcf	3,6	;RP1=0, select bank1
 11522     026D  0849               	movf	(efgtoa@u+1)^(0+128),w
 11523     026E  1C03               	skipc
 11524     026F  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 11525     0270  2A72               	goto	u4661
 11526     0271  2A75               	goto	u4662
 11527     0272                     u4661:
 11528     0272  1283               	bcf	3,5	;RP0=0, select bank0
 11529     0273  1303               	bcf	3,6	;RP1=0, select bank0
 11530     0274  02DC               	subwf	??_efgtoa+1,f
 11531     0275                     u4662:
 11532     0275  1683               	bsf	3,5	;RP0=1, select bank1
 11533     0276  1303               	bcf	3,6	;RP1=0, select bank1
 11534     0277  084A               	movf	(efgtoa@u+2)^(0+128),w
 11535     0278  1C03               	skipc
 11536     0279  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 11537     027A  2A7C               	goto	u4663
 11538     027B  2A7F               	goto	u4664
 11539     027C                     u4663:
 11540     027C  1283               	bcf	3,5	;RP0=0, select bank0
 11541     027D  1303               	bcf	3,6	;RP1=0, select bank0
 11542     027E  02DD               	subwf	??_efgtoa+2,f
 11543     027F                     u4664:
 11544     027F  1683               	bsf	3,5	;RP0=1, select bank1
 11545     0280  1303               	bcf	3,6	;RP1=0, select bank1
 11546     0281  084B               	movf	(efgtoa@u+3)^(0+128),w
 11547     0282  1C03               	skipc
 11548     0283  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 11549     0284  2A86               	goto	u4665
 11550     0285  2A89               	goto	u4666
 11551     0286                     u4665:
 11552     0286  1283               	bcf	3,5	;RP0=0, select bank0
 11553     0287  1303               	bcf	3,6	;RP1=0, select bank0
 11554     0288  02DE               	subwf	??_efgtoa+3,f
 11555     0289                     u4666:
 11556     0289  1683               	bsf	3,5	;RP0=1, select bank1
 11557     028A  1303               	bcf	3,6	;RP1=0, select bank1
 11558     028B  1283               	bcf	3,5	;RP0=0, select bank0
 11559     028C  1303               	bcf	3,6	;RP1=0, select bank0
 11560     028D  085E               	movf	??_efgtoa+3,w
 11561     028E  00F3               	movwf	labs@a+3
 11562     028F  085D               	movf	??_efgtoa+2,w
 11563     0290  00F2               	movwf	labs@a+2
 11564     0291  085C               	movf	??_efgtoa+1,w
 11565     0292  00F1               	movwf	labs@a+1
 11566     0293  085B               	movf	??_efgtoa,w
 11567     0294  00F0               	movwf	labs@a
 11568     0295  160A  158A  22A5  120A  118A  	fcall	_labs
 11569     029A  1BF3               	btfsc	?_labs+3,7
 11570     029B  2AAD               	goto	u4670
 11571     029C  0873               	movf	?_labs+3,w
 11572     029D  1D03               	btfss	3,2
 11573     029E  2AAC               	goto	u4671
 11574     029F  0872               	movf	?_labs+2,w
 11575     02A0  1D03               	btfss	3,2
 11576     02A1  2AAC               	goto	u4671
 11577     02A2  0871               	movf	?_labs+1,w
 11578     02A3  1D03               	btfss	3,2
 11579     02A4  2AAC               	goto	u4671
 11580     02A5  3002               	movlw	2
 11581     02A6  0270               	subwf	?_labs,w
 11582     02A7  1D03               	skipz
 11583     02A8  2AA9               	goto	u4673
 11584     02A9                     u4673:
 11585     02A9  1803               	btfsc	3,0
 11586     02AA  2AAC               	goto	u4671
 11587     02AB  2AAD               	goto	u4670
 11588     02AC                     u4671:
 11589     02AC  2AAE               	goto	l3298
 11590     02AD                     u4670:
 11591     02AD  2A1D               	goto	l3288
 11592     02AE                     l3298:
 11593                           
 11594                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 11595     02AE  1683               	bsf	3,5	;RP0=1, select bank1
 11596     02AF  1303               	bcf	3,6	;RP1=0, select bank1
 11597     02B0  0847               	movf	(efgtoa@g+3)^(0+128),w
 11598     02B1  1283               	bcf	3,5	;RP0=0, select bank0
 11599     02B2  1303               	bcf	3,6	;RP1=0, select bank0
 11600     02B3  00CB               	movwf	___flge@ff1+3
 11601     02B4  1683               	bsf	3,5	;RP0=1, select bank1
 11602     02B5  1303               	bcf	3,6	;RP1=0, select bank1
 11603     02B6  0846               	movf	(efgtoa@g+2)^(0+128),w
 11604     02B7  1283               	bcf	3,5	;RP0=0, select bank0
 11605     02B8  1303               	bcf	3,6	;RP1=0, select bank0
 11606     02B9  00CA               	movwf	___flge@ff1+2
 11607     02BA  1683               	bsf	3,5	;RP0=1, select bank1
 11608     02BB  1303               	bcf	3,6	;RP1=0, select bank1
 11609     02BC  0845               	movf	(efgtoa@g+1)^(0+128),w
 11610     02BD  1283               	bcf	3,5	;RP0=0, select bank0
 11611     02BE  1303               	bcf	3,6	;RP1=0, select bank0
 11612     02BF  00C9               	movwf	___flge@ff1+1
 11613     02C0  1683               	bsf	3,5	;RP0=1, select bank1
 11614     02C1  1303               	bcf	3,6	;RP1=0, select bank1
 11615     02C2  0844               	movf	efgtoa@g^(0+128),w
 11616     02C3  1283               	bcf	3,5	;RP0=0, select bank0
 11617     02C4  1303               	bcf	3,6	;RP1=0, select bank0
 11618     02C5  00C8               	movwf	___flge@ff1
 11619     02C6  1683               	bsf	3,5	;RP0=1, select bank1
 11620     02C7  1303               	bcf	3,6	;RP1=0, select bank1
 11621     02C8  084B               	movf	(efgtoa@u+3)^(0+128),w
 11622     02C9  1283               	bcf	3,5	;RP0=0, select bank0
 11623     02CA  1303               	bcf	3,6	;RP1=0, select bank0
 11624     02CB  00CF               	movwf	___flge@ff2+3
 11625     02CC  1683               	bsf	3,5	;RP0=1, select bank1
 11626     02CD  1303               	bcf	3,6	;RP1=0, select bank1
 11627     02CE  084A               	movf	(efgtoa@u+2)^(0+128),w
 11628     02CF  1283               	bcf	3,5	;RP0=0, select bank0
 11629     02D0  1303               	bcf	3,6	;RP1=0, select bank0
 11630     02D1  00CE               	movwf	___flge@ff2+2
 11631     02D2  1683               	bsf	3,5	;RP0=1, select bank1
 11632     02D3  1303               	bcf	3,6	;RP1=0, select bank1
 11633     02D4  0849               	movf	(efgtoa@u+1)^(0+128),w
 11634     02D5  1283               	bcf	3,5	;RP0=0, select bank0
 11635     02D6  1303               	bcf	3,6	;RP1=0, select bank0
 11636     02D7  00CD               	movwf	___flge@ff2+1
 11637     02D8  1683               	bsf	3,5	;RP0=1, select bank1
 11638     02D9  1303               	bcf	3,6	;RP1=0, select bank1
 11639     02DA  0848               	movf	efgtoa@u^(0+128),w
 11640     02DB  1283               	bcf	3,5	;RP0=0, select bank0
 11641     02DC  1303               	bcf	3,6	;RP1=0, select bank0
 11642     02DD  00CC               	movwf	___flge@ff2
 11643     02DE  160A  158A  275C  120A  118A  	fcall	___flge
 11644     02E3  1C03               	btfss	3,0
 11645     02E4  2AE6               	goto	u4681
 11646     02E5  2AE7               	goto	u4680
 11647     02E6                     u4681:
 11648     02E6  2A28               	goto	l3290
 11649     02E7                     u4680:
 11650     02E7                     l3300:
 11651                           
 11652                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 11653     02E7  1283               	bcf	3,5	;RP0=0, select bank0
 11654     02E8  1303               	bcf	3,6	;RP1=0, select bank0
 11655     02E9  085A               	movf	efgtoa@c,w
 11656     02EA  1683               	bsf	3,5	;RP0=1, select bank1
 11657     02EB  1303               	bcf	3,6	;RP1=0, select bank1
 11658     02EC  00A9               	movwf	efgtoa@mode^(0+128)
 11659                           
 11660                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 11661     02ED  0829               	movf	efgtoa@mode^(0+128),w
 11662     02EE  00AA               	movwf	efgtoa@nmode^(0+128)
 11663     02EF                     l3302:
 11664                           
 11665                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 11666     02EF  1BED               	btfsc	(_prec+1)^(0+128),7
 11667     02F0  2AF2               	goto	u4691
 11668     02F1  2AF3               	goto	u4690
 11669     02F2                     u4691:
 11670     02F2  2AF8               	goto	l3306
 11671     02F3                     u4690:
 11672     02F3                     l3304:
 11673     02F3  086D               	movf	(_prec+1)^(0+128),w
 11674     02F4  00A3               	movwf	(efgtoa@p+1)^(0+128)
 11675     02F5  086C               	movf	_prec^(0+128),w
 11676     02F6  00A2               	movwf	efgtoa@p^(0+128)
 11677     02F7  2AFC               	goto	l914
 11678     02F8                     l3306:
 11679     02F8  3006               	movlw	6
 11680     02F9  00A2               	movwf	efgtoa@p^(0+128)
 11681     02FA  3000               	movlw	0
 11682     02FB  00A3               	movwf	(efgtoa@p^(0+128)+1)
 11683     02FC                     l914:
 11684                           
 11685                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
 11686     02FC  0823               	movf	(efgtoa@p+1)^(0+128),w
 11687     02FD  00AE               	movwf	(efgtoa@m+1)^(0+128)
 11688     02FE  0822               	movf	efgtoa@p^(0+128),w
 11689     02FF  00AD               	movwf	efgtoa@m^(0+128)
 11690                           
 11691                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
 11692     0300  3001               	movlw	1
 11693     0301  07AD               	addwf	efgtoa@m^(0+128),f
 11694     0302  1803               	skipnc
 11695     0303  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 11696     0304  3000               	movlw	0
 11697     0305  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 11698     0306                     l3308:
 11699                           
 11700                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 11701     0306  3066               	movlw	102
 11702     0307  062A               	xorwf	efgtoa@nmode^(0+128),w
 11703     0308  1D03               	btfss	3,2
 11704     0309  2B0B               	goto	u4701
 11705     030A  2B0C               	goto	u4700
 11706     030B                     u4701:
 11707     030B  2B26               	goto	l3320
 11708     030C                     u4700:
 11709     030C                     l3310:
 11710                           
 11711                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 11712     030C  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
 11713     030D  2B0F               	goto	u4711
 11714     030E  2B10               	goto	u4710
 11715     030F                     u4711:
 11716     030F  2B1A               	goto	l3316
 11717     0310                     u4710:
 11718     0310                     l3312:
 11719                           
 11720                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 11721     0310  303F               	movlw	63
 11722     0311  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11723     0312  3080               	movlw	128
 11724     0313  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11725     0314  3000               	movlw	0
 11726     0315  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11727     0316  3000               	movlw	0
 11728     0317  00C8               	movwf	efgtoa@u^(0+128)
 11729     0318                     l3314:
 11730                           
 11731                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 11732     0318  01AF               	clrf	efgtoa@e^(0+128)
 11733     0319  01B0               	clrf	(efgtoa@e+1)^(0+128)
 11734     031A                     l3316:
 11735                           
 11736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 11737     031A  3067               	movlw	103
 11738     031B  0629               	xorwf	efgtoa@mode^(0+128),w
 11739     031C  1903               	btfsc	3,2
 11740     031D  2B1F               	goto	u4721
 11741     031E  2B20               	goto	u4720
 11742     031F                     u4721:
 11743     031F  2B26               	goto	l3320
 11744     0320                     u4720:
 11745     0320                     l3318:
 11746                           
 11747                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 11748     0320  082F               	movf	efgtoa@e^(0+128),w
 11749     0321  07AD               	addwf	efgtoa@m^(0+128),f
 11750     0322  1803               	skipnc
 11751     0323  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 11752     0324  0830               	movf	(efgtoa@e+1)^(0+128),w
 11753     0325  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 11754     0326                     l3320:
 11755                           
 11756                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 11757     0326  01B7               	clrf	efgtoa@i^(0+128)
 11758     0327  01B8               	clrf	(efgtoa@i+1)^(0+128)
 11759     0328                     l3322:
 11760                           
 11761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 11762     0328  0847               	movf	(efgtoa@g+3)^(0+128),w
 11763     0329  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11764     032A  0846               	movf	(efgtoa@g+2)^(0+128),w
 11765     032B  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11766     032C  0845               	movf	(efgtoa@g+1)^(0+128),w
 11767     032D  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11768     032E  0844               	movf	efgtoa@g^(0+128),w
 11769     032F  00B9               	movwf	efgtoa@h^(0+128)
 11770     0330                     l3324:
 11771                           
 11772                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 11773     0330  084B               	movf	(efgtoa@u+3)^(0+128),w
 11774     0331  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 11775     0332  084A               	movf	(efgtoa@u+2)^(0+128),w
 11776     0333  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 11777     0334  0849               	movf	(efgtoa@u+1)^(0+128),w
 11778     0335  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 11779     0336  0848               	movf	efgtoa@u^(0+128),w
 11780     0337  00B3               	movwf	efgtoa@ou^(0+128)
 11781                           
 11782                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11783     0338  2C21               	goto	l3336
 11784     0339                     l3326:
 11785                           
 11786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 11787     0339  1683               	bsf	3,5	;RP0=1, select bank1
 11788     033A  1303               	bcf	3,6	;RP1=0, select bank1
 11789     033B  084B               	movf	(efgtoa@u+3)^(0+128),w
 11790     033C  00F3               	movwf	___fldiv@a+3
 11791     033D  084A               	movf	(efgtoa@u+2)^(0+128),w
 11792     033E  00F2               	movwf	___fldiv@a+2
 11793     033F  0849               	movf	(efgtoa@u+1)^(0+128),w
 11794     0340  00F1               	movwf	___fldiv@a+1
 11795     0341  0848               	movf	efgtoa@u^(0+128),w
 11796     0342  00F0               	movwf	___fldiv@a
 11797     0343  083C               	movf	(efgtoa@h+3)^(0+128),w
 11798     0344  00F7               	movwf	___fldiv@b+3
 11799     0345  083B               	movf	(efgtoa@h+2)^(0+128),w
 11800     0346  00F6               	movwf	___fldiv@b+2
 11801     0347  083A               	movf	(efgtoa@h+1)^(0+128),w
 11802     0348  00F5               	movwf	___fldiv@b+1
 11803     0349  0839               	movf	efgtoa@h^(0+128),w
 11804     034A  00F4               	movwf	___fldiv@b
 11805     034B  160A  118A  2630  120A  118A  	fcall	___fldiv
 11806     0350  0873               	movf	?___fldiv+3,w
 11807     0351  1283               	bcf	3,5	;RP0=0, select bank0
 11808     0352  1303               	bcf	3,6	;RP1=0, select bank0
 11809     0353  00B0               	movwf	floorf@x+3
 11810     0354  0872               	movf	?___fldiv+2,w
 11811     0355  00AF               	movwf	floorf@x+2
 11812     0356  0871               	movf	?___fldiv+1,w
 11813     0357  00AE               	movwf	floorf@x+1
 11814     0358  0870               	movf	?___fldiv,w
 11815     0359  00AD               	movwf	floorf@x
 11816     035A  160A  118A  22D6  120A  118A  	fcall	_floorf
 11817     035F  1283               	bcf	3,5	;RP0=0, select bank0
 11818     0360  1303               	bcf	3,6	;RP1=0, select bank0
 11819     0361  0830               	movf	?_floorf+3,w
 11820     0362  1683               	bsf	3,5	;RP0=1, select bank1
 11821     0363  1303               	bcf	3,6	;RP1=0, select bank1
 11822     0364  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11823     0365  1283               	bcf	3,5	;RP0=0, select bank0
 11824     0366  1303               	bcf	3,6	;RP1=0, select bank0
 11825     0367  082F               	movf	?_floorf+2,w
 11826     0368  1683               	bsf	3,5	;RP0=1, select bank1
 11827     0369  1303               	bcf	3,6	;RP1=0, select bank1
 11828     036A  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11829     036B  1283               	bcf	3,5	;RP0=0, select bank0
 11830     036C  1303               	bcf	3,6	;RP1=0, select bank0
 11831     036D  082E               	movf	?_floorf+1,w
 11832     036E  1683               	bsf	3,5	;RP0=1, select bank1
 11833     036F  1303               	bcf	3,6	;RP1=0, select bank1
 11834     0370  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11835     0371  1283               	bcf	3,5	;RP0=0, select bank0
 11836     0372  1303               	bcf	3,6	;RP1=0, select bank0
 11837     0373  082D               	movf	?_floorf,w
 11838     0374  1683               	bsf	3,5	;RP0=1, select bank1
 11839     0375  1303               	bcf	3,6	;RP1=0, select bank1
 11840     0376  00BD               	movwf	efgtoa@l^(0+128)
 11841     0377                     l3328:
 11842                           
 11843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 11844     0377  0840               	movf	(efgtoa@l+3)^(0+128),w
 11845     0378  00F3               	movwf	___fltol@f1+3
 11846     0379  083F               	movf	(efgtoa@l+2)^(0+128),w
 11847     037A  00F2               	movwf	___fltol@f1+2
 11848     037B  083E               	movf	(efgtoa@l+1)^(0+128),w
 11849     037C  00F1               	movwf	___fltol@f1+1
 11850     037D  083D               	movf	efgtoa@l^(0+128),w
 11851     037E  00F0               	movwf	___fltol@f1
 11852     037F  160A  158A  265B  120A  118A  	fcall	___fltol
 11853     0384  0871               	movf	?___fltol+1,w
 11854     0385  1683               	bsf	3,5	;RP0=1, select bank1
 11855     0386  1303               	bcf	3,6	;RP1=0, select bank1
 11856     0387  00AC               	movwf	(efgtoa@d+1)^(0+128)
 11857     0388  0870               	movf	?___fltol,w
 11858     0389  00AB               	movwf	efgtoa@d^(0+128)
 11859     038A                     l3330:
 11860                           
 11861                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 11862     038A  084B               	movf	(efgtoa@u+3)^(0+128),w
 11863     038B  1283               	bcf	3,5	;RP0=0, select bank0
 11864     038C  1303               	bcf	3,6	;RP1=0, select bank0
 11865     038D  00A7               	movwf	___flmul@a+3
 11866     038E  1683               	bsf	3,5	;RP0=1, select bank1
 11867     038F  1303               	bcf	3,6	;RP1=0, select bank1
 11868     0390  084A               	movf	(efgtoa@u+2)^(0+128),w
 11869     0391  1283               	bcf	3,5	;RP0=0, select bank0
 11870     0392  1303               	bcf	3,6	;RP1=0, select bank0
 11871     0393  00A6               	movwf	___flmul@a+2
 11872     0394  1683               	bsf	3,5	;RP0=1, select bank1
 11873     0395  1303               	bcf	3,6	;RP1=0, select bank1
 11874     0396  0849               	movf	(efgtoa@u+1)^(0+128),w
 11875     0397  1283               	bcf	3,5	;RP0=0, select bank0
 11876     0398  1303               	bcf	3,6	;RP1=0, select bank0
 11877     0399  00A5               	movwf	___flmul@a+1
 11878     039A  1683               	bsf	3,5	;RP0=1, select bank1
 11879     039B  1303               	bcf	3,6	;RP1=0, select bank1
 11880     039C  0848               	movf	efgtoa@u^(0+128),w
 11881     039D  1283               	bcf	3,5	;RP0=0, select bank0
 11882     039E  1303               	bcf	3,6	;RP1=0, select bank0
 11883     039F  00A4               	movwf	___flmul@a
 11884     03A0  1683               	bsf	3,5	;RP0=1, select bank1
 11885     03A1  1303               	bcf	3,6	;RP1=0, select bank1
 11886     03A2  0840               	movf	(efgtoa@l+3)^(0+128),w
 11887     03A3  1283               	bcf	3,5	;RP0=0, select bank0
 11888     03A4  1303               	bcf	3,6	;RP1=0, select bank0
 11889     03A5  00A3               	movwf	___flmul@b+3
 11890     03A6  1683               	bsf	3,5	;RP0=1, select bank1
 11891     03A7  1303               	bcf	3,6	;RP1=0, select bank1
 11892     03A8  083F               	movf	(efgtoa@l+2)^(0+128),w
 11893     03A9  1283               	bcf	3,5	;RP0=0, select bank0
 11894     03AA  1303               	bcf	3,6	;RP1=0, select bank0
 11895     03AB  00A2               	movwf	___flmul@b+2
 11896     03AC  1683               	bsf	3,5	;RP0=1, select bank1
 11897     03AD  1303               	bcf	3,6	;RP1=0, select bank1
 11898     03AE  083E               	movf	(efgtoa@l+1)^(0+128),w
 11899     03AF  1283               	bcf	3,5	;RP0=0, select bank0
 11900     03B0  1303               	bcf	3,6	;RP1=0, select bank0
 11901     03B1  00A1               	movwf	___flmul@b+1
 11902     03B2  1683               	bsf	3,5	;RP0=1, select bank1
 11903     03B3  1303               	bcf	3,6	;RP1=0, select bank1
 11904     03B4  083D               	movf	efgtoa@l^(0+128),w
 11905     03B5  1283               	bcf	3,5	;RP0=0, select bank0
 11906     03B6  1303               	bcf	3,6	;RP1=0, select bank0
 11907     03B7  00A0               	movwf	___flmul@b
 11908     03B8  120A  158A  24BE  120A  118A  	fcall	___flmul
 11909     03BD  1283               	bcf	3,5	;RP0=0, select bank0
 11910     03BE  1303               	bcf	3,6	;RP1=0, select bank0
 11911     03BF  0823               	movf	?___flmul+3,w
 11912     03C0  00BD               	movwf	___flsub@a+3
 11913     03C1  0822               	movf	?___flmul+2,w
 11914     03C2  00BC               	movwf	___flsub@a+2
 11915     03C3  0821               	movf	?___flmul+1,w
 11916     03C4  00BB               	movwf	___flsub@a+1
 11917     03C5  0820               	movf	?___flmul,w
 11918     03C6  00BA               	movwf	___flsub@a
 11919     03C7  1683               	bsf	3,5	;RP0=1, select bank1
 11920     03C8  1303               	bcf	3,6	;RP1=0, select bank1
 11921     03C9  083C               	movf	(efgtoa@h+3)^(0+128),w
 11922     03CA  1283               	bcf	3,5	;RP0=0, select bank0
 11923     03CB  1303               	bcf	3,6	;RP1=0, select bank0
 11924     03CC  00C1               	movwf	___flsub@b+3
 11925     03CD  1683               	bsf	3,5	;RP0=1, select bank1
 11926     03CE  1303               	bcf	3,6	;RP1=0, select bank1
 11927     03CF  083B               	movf	(efgtoa@h+2)^(0+128),w
 11928     03D0  1283               	bcf	3,5	;RP0=0, select bank0
 11929     03D1  1303               	bcf	3,6	;RP1=0, select bank0
 11930     03D2  00C0               	movwf	___flsub@b+2
 11931     03D3  1683               	bsf	3,5	;RP0=1, select bank1
 11932     03D4  1303               	bcf	3,6	;RP1=0, select bank1
 11933     03D5  083A               	movf	(efgtoa@h+1)^(0+128),w
 11934     03D6  1283               	bcf	3,5	;RP0=0, select bank0
 11935     03D7  1303               	bcf	3,6	;RP1=0, select bank0
 11936     03D8  00BF               	movwf	___flsub@b+1
 11937     03D9  1683               	bsf	3,5	;RP0=1, select bank1
 11938     03DA  1303               	bcf	3,6	;RP1=0, select bank1
 11939     03DB  0839               	movf	efgtoa@h^(0+128),w
 11940     03DC  1283               	bcf	3,5	;RP0=0, select bank0
 11941     03DD  1303               	bcf	3,6	;RP1=0, select bank0
 11942     03DE  00BE               	movwf	___flsub@b
 11943     03DF  160A  158A  23B3  120A  118A  	fcall	___flsub
 11944     03E4  1283               	bcf	3,5	;RP0=0, select bank0
 11945     03E5  1303               	bcf	3,6	;RP1=0, select bank0
 11946     03E6  083D               	movf	?___flsub+3,w
 11947     03E7  1683               	bsf	3,5	;RP0=1, select bank1
 11948     03E8  1303               	bcf	3,6	;RP1=0, select bank1
 11949     03E9  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11950     03EA  1283               	bcf	3,5	;RP0=0, select bank0
 11951     03EB  1303               	bcf	3,6	;RP1=0, select bank0
 11952     03EC  083C               	movf	?___flsub+2,w
 11953     03ED  1683               	bsf	3,5	;RP0=1, select bank1
 11954     03EE  1303               	bcf	3,6	;RP1=0, select bank1
 11955     03EF  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11956     03F0  1283               	bcf	3,5	;RP0=0, select bank0
 11957     03F1  1303               	bcf	3,6	;RP1=0, select bank0
 11958     03F2  083B               	movf	?___flsub+1,w
 11959     03F3  1683               	bsf	3,5	;RP0=1, select bank1
 11960     03F4  1303               	bcf	3,6	;RP1=0, select bank1
 11961     03F5  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11962     03F6  1283               	bcf	3,5	;RP0=0, select bank0
 11963     03F7  1303               	bcf	3,6	;RP1=0, select bank0
 11964     03F8  083A               	movf	?___flsub,w
 11965     03F9  1683               	bsf	3,5	;RP0=1, select bank1
 11966     03FA  1303               	bcf	3,6	;RP1=0, select bank1
 11967     03FB  00B9               	movwf	efgtoa@h^(0+128)
 11968     03FC                     l3332:
 11969                           
 11970                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 11971     03FC  3041               	movlw	65
 11972     03FD  00F3               	movwf	___fldiv@a+3
 11973     03FE  3020               	movlw	32
 11974     03FF  00F2               	movwf	___fldiv@a+2
 11975     0400  3000               	movlw	0
 11976     0401  00F1               	movwf	___fldiv@a+1
 11977     0402  3000               	movlw	0
 11978     0403  00F0               	movwf	___fldiv@a
 11979     0404  084B               	movf	(efgtoa@u+3)^(0+128),w
 11980     0405  00F7               	movwf	___fldiv@b+3
 11981     0406  084A               	movf	(efgtoa@u+2)^(0+128),w
 11982     0407  00F6               	movwf	___fldiv@b+2
 11983     0408  0849               	movf	(efgtoa@u+1)^(0+128),w
 11984     0409  00F5               	movwf	___fldiv@b+1
 11985     040A  0848               	movf	efgtoa@u^(0+128),w
 11986     040B  00F4               	movwf	___fldiv@b
 11987     040C  160A  118A  2630  120A  118A  	fcall	___fldiv
 11988     0411  0873               	movf	?___fldiv+3,w
 11989     0412  1683               	bsf	3,5	;RP0=1, select bank1
 11990     0413  1303               	bcf	3,6	;RP1=0, select bank1
 11991     0414  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11992     0415  0872               	movf	?___fldiv+2,w
 11993     0416  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11994     0417  0871               	movf	?___fldiv+1,w
 11995     0418  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11996     0419  0870               	movf	?___fldiv,w
 11997     041A  00C8               	movwf	efgtoa@u^(0+128)
 11998     041B                     l3334:
 11999                           
 12000                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12001     041B  3001               	movlw	1
 12002     041C  07B7               	addwf	efgtoa@i^(0+128),f
 12003     041D  1803               	skipnc
 12004     041E  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 12005     041F  3000               	movlw	0
 12006     0420  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 12007     0421                     l3336:
 12008                           
 12009                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12010     0421  0838               	movf	(efgtoa@i+1)^(0+128),w
 12011     0422  3A80               	xorlw	128
 12012     0423  1283               	bcf	3,5	;RP0=0, select bank0
 12013     0424  1303               	bcf	3,6	;RP1=0, select bank0
 12014     0425  00DB               	movwf	??_efgtoa
 12015     0426  1683               	bsf	3,5	;RP0=1, select bank1
 12016     0427  1303               	bcf	3,6	;RP1=0, select bank1
 12017     0428  082E               	movf	(efgtoa@m+1)^(0+128),w
 12018     0429  3A80               	xorlw	128
 12019     042A  1283               	bcf	3,5	;RP0=0, select bank0
 12020     042B  1303               	bcf	3,6	;RP1=0, select bank0
 12021     042C  025B               	subwf	??_efgtoa,w
 12022     042D  1D03               	skipz
 12023     042E  2C33               	goto	u4735
 12024     042F  1683               	bsf	3,5	;RP0=1, select bank1
 12025     0430  1303               	bcf	3,6	;RP1=0, select bank1
 12026     0431  082D               	movf	efgtoa@m^(0+128),w
 12027     0432  0237               	subwf	efgtoa@i^(0+128),w
 12028     0433                     u4735:
 12029     0433  1C03               	skipc
 12030     0434  2C36               	goto	u4731
 12031     0435  2C37               	goto	u4730
 12032     0436                     u4731:
 12033     0436  2B39               	goto	l3326
 12034     0437                     u4730:
 12035     0437                     l3338:
 12036                           
 12037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12038     0437  3040               	movlw	64
 12039     0438  1283               	bcf	3,5	;RP0=0, select bank0
 12040     0439  1303               	bcf	3,6	;RP1=0, select bank0
 12041     043A  00A3               	movwf	___flmul@b+3
 12042     043B  30A0               	movlw	160
 12043     043C  00A2               	movwf	___flmul@b+2
 12044     043D  3000               	movlw	0
 12045     043E  00A1               	movwf	___flmul@b+1
 12046     043F  3000               	movlw	0
 12047     0440  00A0               	movwf	___flmul@b
 12048     0441  1683               	bsf	3,5	;RP0=1, select bank1
 12049     0442  1303               	bcf	3,6	;RP1=0, select bank1
 12050     0443  084B               	movf	(efgtoa@u+3)^(0+128),w
 12051     0444  1283               	bcf	3,5	;RP0=0, select bank0
 12052     0445  1303               	bcf	3,6	;RP1=0, select bank0
 12053     0446  00A7               	movwf	___flmul@a+3
 12054     0447  1683               	bsf	3,5	;RP0=1, select bank1
 12055     0448  1303               	bcf	3,6	;RP1=0, select bank1
 12056     0449  084A               	movf	(efgtoa@u+2)^(0+128),w
 12057     044A  1283               	bcf	3,5	;RP0=0, select bank0
 12058     044B  1303               	bcf	3,6	;RP1=0, select bank0
 12059     044C  00A6               	movwf	___flmul@a+2
 12060     044D  1683               	bsf	3,5	;RP0=1, select bank1
 12061     044E  1303               	bcf	3,6	;RP1=0, select bank1
 12062     044F  0849               	movf	(efgtoa@u+1)^(0+128),w
 12063     0450  1283               	bcf	3,5	;RP0=0, select bank0
 12064     0451  1303               	bcf	3,6	;RP1=0, select bank0
 12065     0452  00A5               	movwf	___flmul@a+1
 12066     0453  1683               	bsf	3,5	;RP0=1, select bank1
 12067     0454  1303               	bcf	3,6	;RP1=0, select bank1
 12068     0455  0848               	movf	efgtoa@u^(0+128),w
 12069     0456  1283               	bcf	3,5	;RP0=0, select bank0
 12070     0457  1303               	bcf	3,6	;RP1=0, select bank0
 12071     0458  00A4               	movwf	___flmul@a
 12072     0459  120A  158A  24BE  120A  118A  	fcall	___flmul
 12073     045E  1283               	bcf	3,5	;RP0=0, select bank0
 12074     045F  1303               	bcf	3,6	;RP1=0, select bank0
 12075     0460  0823               	movf	?___flmul+3,w
 12076     0461  1683               	bsf	3,5	;RP0=1, select bank1
 12077     0462  1303               	bcf	3,6	;RP1=0, select bank1
 12078     0463  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12079     0464  1283               	bcf	3,5	;RP0=0, select bank0
 12080     0465  1303               	bcf	3,6	;RP1=0, select bank0
 12081     0466  0822               	movf	?___flmul+2,w
 12082     0467  1683               	bsf	3,5	;RP0=1, select bank1
 12083     0468  1303               	bcf	3,6	;RP1=0, select bank1
 12084     0469  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12085     046A  1283               	bcf	3,5	;RP0=0, select bank0
 12086     046B  1303               	bcf	3,6	;RP1=0, select bank0
 12087     046C  0821               	movf	?___flmul+1,w
 12088     046D  1683               	bsf	3,5	;RP0=1, select bank1
 12089     046E  1303               	bcf	3,6	;RP1=0, select bank1
 12090     046F  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12091     0470  1283               	bcf	3,5	;RP0=0, select bank0
 12092     0471  1303               	bcf	3,6	;RP1=0, select bank0
 12093     0472  0820               	movf	?___flmul,w
 12094     0473  1683               	bsf	3,5	;RP0=1, select bank1
 12095     0474  1303               	bcf	3,6	;RP1=0, select bank1
 12096     0475  00BD               	movwf	efgtoa@l^(0+128)
 12097     0476                     l3340:
 12098                           
 12099                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12100     0476  083C               	movf	(efgtoa@h+3)^(0+128),w
 12101     0477  1283               	bcf	3,5	;RP0=0, select bank0
 12102     0478  1303               	bcf	3,6	;RP1=0, select bank0
 12103     0479  00CB               	movwf	___flge@ff1+3
 12104     047A  1683               	bsf	3,5	;RP0=1, select bank1
 12105     047B  1303               	bcf	3,6	;RP1=0, select bank1
 12106     047C  083B               	movf	(efgtoa@h+2)^(0+128),w
 12107     047D  1283               	bcf	3,5	;RP0=0, select bank0
 12108     047E  1303               	bcf	3,6	;RP1=0, select bank0
 12109     047F  00CA               	movwf	___flge@ff1+2
 12110     0480  1683               	bsf	3,5	;RP0=1, select bank1
 12111     0481  1303               	bcf	3,6	;RP1=0, select bank1
 12112     0482  083A               	movf	(efgtoa@h+1)^(0+128),w
 12113     0483  1283               	bcf	3,5	;RP0=0, select bank0
 12114     0484  1303               	bcf	3,6	;RP1=0, select bank0
 12115     0485  00C9               	movwf	___flge@ff1+1
 12116     0486  1683               	bsf	3,5	;RP0=1, select bank1
 12117     0487  1303               	bcf	3,6	;RP1=0, select bank1
 12118     0488  0839               	movf	efgtoa@h^(0+128),w
 12119     0489  1283               	bcf	3,5	;RP0=0, select bank0
 12120     048A  1303               	bcf	3,6	;RP1=0, select bank0
 12121     048B  00C8               	movwf	___flge@ff1
 12122     048C  1683               	bsf	3,5	;RP0=1, select bank1
 12123     048D  1303               	bcf	3,6	;RP1=0, select bank1
 12124     048E  0840               	movf	(efgtoa@l+3)^(0+128),w
 12125     048F  1283               	bcf	3,5	;RP0=0, select bank0
 12126     0490  1303               	bcf	3,6	;RP1=0, select bank0
 12127     0491  00CF               	movwf	___flge@ff2+3
 12128     0492  1683               	bsf	3,5	;RP0=1, select bank1
 12129     0493  1303               	bcf	3,6	;RP1=0, select bank1
 12130     0494  083F               	movf	(efgtoa@l+2)^(0+128),w
 12131     0495  1283               	bcf	3,5	;RP0=0, select bank0
 12132     0496  1303               	bcf	3,6	;RP1=0, select bank0
 12133     0497  00CE               	movwf	___flge@ff2+2
 12134     0498  1683               	bsf	3,5	;RP0=1, select bank1
 12135     0499  1303               	bcf	3,6	;RP1=0, select bank1
 12136     049A  083E               	movf	(efgtoa@l+1)^(0+128),w
 12137     049B  1283               	bcf	3,5	;RP0=0, select bank0
 12138     049C  1303               	bcf	3,6	;RP1=0, select bank0
 12139     049D  00CD               	movwf	___flge@ff2+1
 12140     049E  1683               	bsf	3,5	;RP0=1, select bank1
 12141     049F  1303               	bcf	3,6	;RP1=0, select bank1
 12142     04A0  083D               	movf	efgtoa@l^(0+128),w
 12143     04A1  1283               	bcf	3,5	;RP0=0, select bank0
 12144     04A2  1303               	bcf	3,6	;RP1=0, select bank0
 12145     04A3  00CC               	movwf	___flge@ff2
 12146     04A4  160A  158A  275C  120A  118A  	fcall	___flge
 12147     04A9  1803               	btfsc	3,0
 12148     04AA  2CAC               	goto	u4741
 12149     04AB  2CAD               	goto	u4740
 12150     04AC                     u4741:
 12151     04AC  2CB8               	goto	l3344
 12152     04AD                     u4740:
 12153     04AD                     l3342:
 12154                           
 12155                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12156     04AD  3000               	movlw	0
 12157     04AE  1683               	bsf	3,5	;RP0=1, select bank1
 12158     04AF  1303               	bcf	3,6	;RP1=0, select bank1
 12159     04B0  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12160     04B1  3000               	movlw	0
 12161     04B2  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12162     04B3  3000               	movlw	0
 12163     04B4  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12164     04B5  3000               	movlw	0
 12165     04B6  00BD               	movwf	efgtoa@l^(0+128)
 12166                           
 12167                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
 12168     04B7  2CE1               	goto	l3350
 12169     04B8                     l3344:
 12170                           
 12171                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12172     04B8  1683               	bsf	3,5	;RP0=1, select bank1
 12173     04B9  1303               	bcf	3,6	;RP1=0, select bank1
 12174     04BA  083C               	movf	(efgtoa@h+3)^(0+128),w
 12175     04BB  00F3               	movwf	___fleq@ff1+3
 12176     04BC  083B               	movf	(efgtoa@h+2)^(0+128),w
 12177     04BD  00F2               	movwf	___fleq@ff1+2
 12178     04BE  083A               	movf	(efgtoa@h+1)^(0+128),w
 12179     04BF  00F1               	movwf	___fleq@ff1+1
 12180     04C0  0839               	movf	efgtoa@h^(0+128),w
 12181     04C1  00F0               	movwf	___fleq@ff1
 12182     04C2  0840               	movf	(efgtoa@l+3)^(0+128),w
 12183     04C3  00F7               	movwf	___fleq@ff2+3
 12184     04C4  083F               	movf	(efgtoa@l+2)^(0+128),w
 12185     04C5  00F6               	movwf	___fleq@ff2+2
 12186     04C6  083E               	movf	(efgtoa@l+1)^(0+128),w
 12187     04C7  00F5               	movwf	___fleq@ff2+1
 12188     04C8  083D               	movf	efgtoa@l^(0+128),w
 12189     04C9  00F4               	movwf	___fleq@ff2
 12190     04CA  160A  158A  25A0  120A  118A  	fcall	___fleq
 12191     04CF  1C03               	btfss	3,0
 12192     04D0  2CD2               	goto	u4751
 12193     04D1  2CD3               	goto	u4750
 12194     04D2                     u4751:
 12195     04D2  2CE1               	goto	l3350
 12196     04D3                     u4750:
 12197     04D3                     l3346:
 12198     04D3  1683               	bsf	3,5	;RP0=1, select bank1
 12199     04D4  1303               	bcf	3,6	;RP1=0, select bank1
 12200     04D5  182B               	btfsc	efgtoa@d^(0+128),0
 12201     04D6  2CD8               	goto	u4761
 12202     04D7  2CD9               	goto	u4760
 12203     04D8                     u4761:
 12204     04D8  2CE1               	goto	l3350
 12205     04D9                     u4760:
 12206     04D9                     l3348:
 12207                           
 12208                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12209     04D9  3000               	movlw	0
 12210     04DA  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12211     04DB  3000               	movlw	0
 12212     04DC  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12213     04DD  3000               	movlw	0
 12214     04DE  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12215     04DF  3000               	movlw	0
 12216     04E0  00BD               	movwf	efgtoa@l^(0+128)
 12217     04E1                     l3350:
 12218                           
 12219                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12220     04E1  1683               	bsf	3,5	;RP0=1, select bank1
 12221     04E2  1303               	bcf	3,6	;RP1=0, select bank1
 12222     04E3  0840               	movf	(efgtoa@l+3)^(0+128),w
 12223     04E4  1283               	bcf	3,5	;RP0=0, select bank0
 12224     04E5  1303               	bcf	3,6	;RP1=0, select bank0
 12225     04E6  00A3               	movwf	___fladd@b+3
 12226     04E7  1683               	bsf	3,5	;RP0=1, select bank1
 12227     04E8  1303               	bcf	3,6	;RP1=0, select bank1
 12228     04E9  083F               	movf	(efgtoa@l+2)^(0+128),w
 12229     04EA  1283               	bcf	3,5	;RP0=0, select bank0
 12230     04EB  1303               	bcf	3,6	;RP1=0, select bank0
 12231     04EC  00A2               	movwf	___fladd@b+2
 12232     04ED  1683               	bsf	3,5	;RP0=1, select bank1
 12233     04EE  1303               	bcf	3,6	;RP1=0, select bank1
 12234     04EF  083E               	movf	(efgtoa@l+1)^(0+128),w
 12235     04F0  1283               	bcf	3,5	;RP0=0, select bank0
 12236     04F1  1303               	bcf	3,6	;RP1=0, select bank0
 12237     04F2  00A1               	movwf	___fladd@b+1
 12238     04F3  1683               	bsf	3,5	;RP0=1, select bank1
 12239     04F4  1303               	bcf	3,6	;RP1=0, select bank1
 12240     04F5  083D               	movf	efgtoa@l^(0+128),w
 12241     04F6  1283               	bcf	3,5	;RP0=0, select bank0
 12242     04F7  1303               	bcf	3,6	;RP1=0, select bank0
 12243     04F8  00A0               	movwf	___fladd@b
 12244     04F9  1683               	bsf	3,5	;RP0=1, select bank1
 12245     04FA  1303               	bcf	3,6	;RP1=0, select bank1
 12246     04FB  0847               	movf	(efgtoa@g+3)^(0+128),w
 12247     04FC  1283               	bcf	3,5	;RP0=0, select bank0
 12248     04FD  1303               	bcf	3,6	;RP1=0, select bank0
 12249     04FE  00A7               	movwf	___fladd@a+3
 12250     04FF  1683               	bsf	3,5	;RP0=1, select bank1
 12251     0500  1303               	bcf	3,6	;RP1=0, select bank1
 12252     0501  0846               	movf	(efgtoa@g+2)^(0+128),w
 12253     0502  1283               	bcf	3,5	;RP0=0, select bank0
 12254     0503  1303               	bcf	3,6	;RP1=0, select bank0
 12255     0504  00A6               	movwf	___fladd@a+2
 12256     0505  1683               	bsf	3,5	;RP0=1, select bank1
 12257     0506  1303               	bcf	3,6	;RP1=0, select bank1
 12258     0507  0845               	movf	(efgtoa@g+1)^(0+128),w
 12259     0508  1283               	bcf	3,5	;RP0=0, select bank0
 12260     0509  1303               	bcf	3,6	;RP1=0, select bank0
 12261     050A  00A5               	movwf	___fladd@a+1
 12262     050B  1683               	bsf	3,5	;RP0=1, select bank1
 12263     050C  1303               	bcf	3,6	;RP1=0, select bank1
 12264     050D  0844               	movf	efgtoa@g^(0+128),w
 12265     050E  1283               	bcf	3,5	;RP0=0, select bank0
 12266     050F  1303               	bcf	3,6	;RP1=0, select bank0
 12267     0510  00A4               	movwf	___fladd@a
 12268     0511  120A  158A  201D  120A  118A  	fcall	___fladd
 12269     0516  1283               	bcf	3,5	;RP0=0, select bank0
 12270     0517  1303               	bcf	3,6	;RP1=0, select bank0
 12271     0518  0823               	movf	?___fladd+3,w
 12272     0519  1683               	bsf	3,5	;RP0=1, select bank1
 12273     051A  1303               	bcf	3,6	;RP1=0, select bank1
 12274     051B  00BC               	movwf	(efgtoa@h+3)^(0+128)
 12275     051C  1283               	bcf	3,5	;RP0=0, select bank0
 12276     051D  1303               	bcf	3,6	;RP1=0, select bank0
 12277     051E  0822               	movf	?___fladd+2,w
 12278     051F  1683               	bsf	3,5	;RP0=1, select bank1
 12279     0520  1303               	bcf	3,6	;RP1=0, select bank1
 12280     0521  00BB               	movwf	(efgtoa@h+2)^(0+128)
 12281     0522  1283               	bcf	3,5	;RP0=0, select bank0
 12282     0523  1303               	bcf	3,6	;RP1=0, select bank0
 12283     0524  0821               	movf	?___fladd+1,w
 12284     0525  1683               	bsf	3,5	;RP0=1, select bank1
 12285     0526  1303               	bcf	3,6	;RP1=0, select bank1
 12286     0527  00BA               	movwf	(efgtoa@h+1)^(0+128)
 12287     0528  1283               	bcf	3,5	;RP0=0, select bank0
 12288     0529  1303               	bcf	3,6	;RP1=0, select bank0
 12289     052A  0820               	movf	?___fladd,w
 12290     052B  1683               	bsf	3,5	;RP0=1, select bank1
 12291     052C  1303               	bcf	3,6	;RP1=0, select bank1
 12292     052D  00B9               	movwf	efgtoa@h^(0+128)
 12293     052E                     l3352:
 12294                           
 12295                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12296     052E  083C               	movf	(efgtoa@h+3)^(0+128),w
 12297     052F  1283               	bcf	3,5	;RP0=0, select bank0
 12298     0530  1303               	bcf	3,6	;RP1=0, select bank0
 12299     0531  00CB               	movwf	___flge@ff1+3
 12300     0532  1683               	bsf	3,5	;RP0=1, select bank1
 12301     0533  1303               	bcf	3,6	;RP1=0, select bank1
 12302     0534  083B               	movf	(efgtoa@h+2)^(0+128),w
 12303     0535  1283               	bcf	3,5	;RP0=0, select bank0
 12304     0536  1303               	bcf	3,6	;RP1=0, select bank0
 12305     0537  00CA               	movwf	___flge@ff1+2
 12306     0538  1683               	bsf	3,5	;RP0=1, select bank1
 12307     0539  1303               	bcf	3,6	;RP1=0, select bank1
 12308     053A  083A               	movf	(efgtoa@h+1)^(0+128),w
 12309     053B  1283               	bcf	3,5	;RP0=0, select bank0
 12310     053C  1303               	bcf	3,6	;RP1=0, select bank0
 12311     053D  00C9               	movwf	___flge@ff1+1
 12312     053E  1683               	bsf	3,5	;RP0=1, select bank1
 12313     053F  1303               	bcf	3,6	;RP1=0, select bank1
 12314     0540  0839               	movf	efgtoa@h^(0+128),w
 12315     0541  1283               	bcf	3,5	;RP0=0, select bank0
 12316     0542  1303               	bcf	3,6	;RP1=0, select bank0
 12317     0543  00C8               	movwf	___flge@ff1
 12318     0544  3041               	movlw	65
 12319     0545  00A3               	movwf	___flmul@b+3
 12320     0546  3020               	movlw	32
 12321     0547  00A2               	movwf	___flmul@b+2
 12322     0548  3000               	movlw	0
 12323     0549  00A1               	movwf	___flmul@b+1
 12324     054A  3000               	movlw	0
 12325     054B  00A0               	movwf	___flmul@b
 12326     054C  1683               	bsf	3,5	;RP0=1, select bank1
 12327     054D  1303               	bcf	3,6	;RP1=0, select bank1
 12328     054E  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12329     054F  1283               	bcf	3,5	;RP0=0, select bank0
 12330     0550  1303               	bcf	3,6	;RP1=0, select bank0
 12331     0551  00A7               	movwf	___flmul@a+3
 12332     0552  1683               	bsf	3,5	;RP0=1, select bank1
 12333     0553  1303               	bcf	3,6	;RP1=0, select bank1
 12334     0554  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12335     0555  1283               	bcf	3,5	;RP0=0, select bank0
 12336     0556  1303               	bcf	3,6	;RP1=0, select bank0
 12337     0557  00A6               	movwf	___flmul@a+2
 12338     0558  1683               	bsf	3,5	;RP0=1, select bank1
 12339     0559  1303               	bcf	3,6	;RP1=0, select bank1
 12340     055A  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12341     055B  1283               	bcf	3,5	;RP0=0, select bank0
 12342     055C  1303               	bcf	3,6	;RP1=0, select bank0
 12343     055D  00A5               	movwf	___flmul@a+1
 12344     055E  1683               	bsf	3,5	;RP0=1, select bank1
 12345     055F  1303               	bcf	3,6	;RP1=0, select bank1
 12346     0560  0833               	movf	efgtoa@ou^(0+128),w
 12347     0561  1283               	bcf	3,5	;RP0=0, select bank0
 12348     0562  1303               	bcf	3,6	;RP1=0, select bank0
 12349     0563  00A4               	movwf	___flmul@a
 12350     0564  120A  158A  24BE  120A  118A  	fcall	___flmul
 12351     0569  1283               	bcf	3,5	;RP0=0, select bank0
 12352     056A  1303               	bcf	3,6	;RP1=0, select bank0
 12353     056B  0823               	movf	?___flmul+3,w
 12354     056C  00CF               	movwf	___flge@ff2+3
 12355     056D  0822               	movf	?___flmul+2,w
 12356     056E  00CE               	movwf	___flge@ff2+2
 12357     056F  0821               	movf	?___flmul+1,w
 12358     0570  00CD               	movwf	___flge@ff2+1
 12359     0571  0820               	movf	?___flmul,w
 12360     0572  00CC               	movwf	___flge@ff2
 12361     0573  160A  158A  275C  120A  118A  	fcall	___flge
 12362     0578  1C03               	btfss	3,0
 12363     0579  2D7B               	goto	u4771
 12364     057A  2D7C               	goto	u4770
 12365     057B                     u4771:
 12366     057B  2DCF               	goto	l924
 12367     057C                     u4770:
 12368     057C                     l3354:
 12369                           
 12370                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
 12371     057C  3001               	movlw	1
 12372     057D  1683               	bsf	3,5	;RP0=1, select bank1
 12373     057E  1303               	bcf	3,6	;RP1=0, select bank1
 12374     057F  07AF               	addwf	efgtoa@e^(0+128),f
 12375     0580  1803               	skipnc
 12376     0581  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 12377     0582  3000               	movlw	0
 12378     0583  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 12379     0584                     l3356:
 12380                           
 12381                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12382     0584  3041               	movlw	65
 12383     0585  1283               	bcf	3,5	;RP0=0, select bank0
 12384     0586  1303               	bcf	3,6	;RP1=0, select bank0
 12385     0587  00A3               	movwf	___flmul@b+3
 12386     0588  3020               	movlw	32
 12387     0589  00A2               	movwf	___flmul@b+2
 12388     058A  3000               	movlw	0
 12389     058B  00A1               	movwf	___flmul@b+1
 12390     058C  3000               	movlw	0
 12391     058D  00A0               	movwf	___flmul@b
 12392     058E  1683               	bsf	3,5	;RP0=1, select bank1
 12393     058F  1303               	bcf	3,6	;RP1=0, select bank1
 12394     0590  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12395     0591  1283               	bcf	3,5	;RP0=0, select bank0
 12396     0592  1303               	bcf	3,6	;RP1=0, select bank0
 12397     0593  00A7               	movwf	___flmul@a+3
 12398     0594  1683               	bsf	3,5	;RP0=1, select bank1
 12399     0595  1303               	bcf	3,6	;RP1=0, select bank1
 12400     0596  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12401     0597  1283               	bcf	3,5	;RP0=0, select bank0
 12402     0598  1303               	bcf	3,6	;RP1=0, select bank0
 12403     0599  00A6               	movwf	___flmul@a+2
 12404     059A  1683               	bsf	3,5	;RP0=1, select bank1
 12405     059B  1303               	bcf	3,6	;RP1=0, select bank1
 12406     059C  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12407     059D  1283               	bcf	3,5	;RP0=0, select bank0
 12408     059E  1303               	bcf	3,6	;RP1=0, select bank0
 12409     059F  00A5               	movwf	___flmul@a+1
 12410     05A0  1683               	bsf	3,5	;RP0=1, select bank1
 12411     05A1  1303               	bcf	3,6	;RP1=0, select bank1
 12412     05A2  0833               	movf	efgtoa@ou^(0+128),w
 12413     05A3  1283               	bcf	3,5	;RP0=0, select bank0
 12414     05A4  1303               	bcf	3,6	;RP1=0, select bank0
 12415     05A5  00A4               	movwf	___flmul@a
 12416     05A6  120A  158A  24BE  120A  118A  	fcall	___flmul
 12417     05AB  1283               	bcf	3,5	;RP0=0, select bank0
 12418     05AC  1303               	bcf	3,6	;RP1=0, select bank0
 12419     05AD  0823               	movf	?___flmul+3,w
 12420     05AE  1683               	bsf	3,5	;RP0=1, select bank1
 12421     05AF  1303               	bcf	3,6	;RP1=0, select bank1
 12422     05B0  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 12423     05B1  1283               	bcf	3,5	;RP0=0, select bank0
 12424     05B2  1303               	bcf	3,6	;RP1=0, select bank0
 12425     05B3  0822               	movf	?___flmul+2,w
 12426     05B4  1683               	bsf	3,5	;RP0=1, select bank1
 12427     05B5  1303               	bcf	3,6	;RP1=0, select bank1
 12428     05B6  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 12429     05B7  1283               	bcf	3,5	;RP0=0, select bank0
 12430     05B8  1303               	bcf	3,6	;RP1=0, select bank0
 12431     05B9  0821               	movf	?___flmul+1,w
 12432     05BA  1683               	bsf	3,5	;RP0=1, select bank1
 12433     05BB  1303               	bcf	3,6	;RP1=0, select bank1
 12434     05BC  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 12435     05BD  1283               	bcf	3,5	;RP0=0, select bank0
 12436     05BE  1303               	bcf	3,6	;RP1=0, select bank0
 12437     05BF  0820               	movf	?___flmul,w
 12438     05C0  1683               	bsf	3,5	;RP0=1, select bank1
 12439     05C1  1303               	bcf	3,6	;RP1=0, select bank1
 12440     05C2  00B3               	movwf	efgtoa@ou^(0+128)
 12441     05C3                     l3358:
 12442                           
 12443                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12444     05C3  3066               	movlw	102
 12445     05C4  062A               	xorwf	efgtoa@nmode^(0+128),w
 12446     05C5  1D03               	btfss	3,2
 12447     05C6  2DC8               	goto	u4781
 12448     05C7  2DC9               	goto	u4780
 12449     05C8                     u4781:
 12450     05C8  2DCF               	goto	l924
 12451     05C9                     u4780:
 12452     05C9                     l3360:
 12453                           
 12454                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
 12455     05C9  3001               	movlw	1
 12456     05CA  07AD               	addwf	efgtoa@m^(0+128),f
 12457     05CB  1803               	skipnc
 12458     05CC  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 12459     05CD  3000               	movlw	0
 12460     05CE  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 12461     05CF                     l924:	
 12462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 767:  }
 12463                           
 12464                           
 12465                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12466     05CF  1683               	bsf	3,5	;RP0=1, select bank1
 12467     05D0  1303               	bcf	3,6	;RP1=0, select bank1
 12468     05D1  0836               	movf	(efgtoa@ou+3)^(0+128),w
 12469     05D2  00CB               	movwf	(efgtoa@u+3)^(0+128)
 12470     05D3  0835               	movf	(efgtoa@ou+2)^(0+128),w
 12471     05D4  00CA               	movwf	(efgtoa@u+2)^(0+128)
 12472     05D5  0834               	movf	(efgtoa@ou+1)^(0+128),w
 12473     05D6  00C9               	movwf	(efgtoa@u+1)^(0+128)
 12474     05D7  0833               	movf	efgtoa@ou^(0+128),w
 12475     05D8  00C8               	movwf	efgtoa@u^(0+128)
 12476                           
 12477                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 12478     05D9  0830               	movf	(efgtoa@e+1)^(0+128),w
 12479     05DA  00A1               	movwf	(efgtoa@ne+1)^(0+128)
 12480     05DB  082F               	movf	efgtoa@e^(0+128),w
 12481     05DC  00A0               	movwf	efgtoa@ne^(0+128)
 12482     05DD                     l3362:
 12483                           
 12484                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12485     05DD  01A8               	clrf	efgtoa@pp^(0+128)
 12486     05DE                     l3364:
 12487                           
 12488                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12489     05DE  01A4               	clrf	efgtoa@t^(0+128)
 12490     05DF  01A5               	clrf	(efgtoa@t+1)^(0+128)
 12491     05E0                     l3366:
 12492                           
 12493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12494     05E0  01B7               	clrf	efgtoa@i^(0+128)
 12495     05E1  01B8               	clrf	(efgtoa@i+1)^(0+128)
 12496                           
 12497                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12498     05E2  2F43               	goto	l3410
 12499     05E3                     l3368:
 12500                           
 12501                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12502     05E3  1683               	bsf	3,5	;RP0=1, select bank1
 12503     05E4  1303               	bcf	3,6	;RP1=0, select bank1
 12504     05E5  084B               	movf	(efgtoa@u+3)^(0+128),w
 12505     05E6  00F3               	movwf	___fldiv@a+3
 12506     05E7  084A               	movf	(efgtoa@u+2)^(0+128),w
 12507     05E8  00F2               	movwf	___fldiv@a+2
 12508     05E9  0849               	movf	(efgtoa@u+1)^(0+128),w
 12509     05EA  00F1               	movwf	___fldiv@a+1
 12510     05EB  0848               	movf	efgtoa@u^(0+128),w
 12511     05EC  00F0               	movwf	___fldiv@a
 12512     05ED  083C               	movf	(efgtoa@h+3)^(0+128),w
 12513     05EE  00F7               	movwf	___fldiv@b+3
 12514     05EF  083B               	movf	(efgtoa@h+2)^(0+128),w
 12515     05F0  00F6               	movwf	___fldiv@b+2
 12516     05F1  083A               	movf	(efgtoa@h+1)^(0+128),w
 12517     05F2  00F5               	movwf	___fldiv@b+1
 12518     05F3  0839               	movf	efgtoa@h^(0+128),w
 12519     05F4  00F4               	movwf	___fldiv@b
 12520     05F5  160A  118A  2630  120A  118A  	fcall	___fldiv
 12521     05FA  0873               	movf	?___fldiv+3,w
 12522     05FB  1283               	bcf	3,5	;RP0=0, select bank0
 12523     05FC  1303               	bcf	3,6	;RP1=0, select bank0
 12524     05FD  00B0               	movwf	floorf@x+3
 12525     05FE  0872               	movf	?___fldiv+2,w
 12526     05FF  00AF               	movwf	floorf@x+2
 12527     0600  0871               	movf	?___fldiv+1,w
 12528     0601  00AE               	movwf	floorf@x+1
 12529     0602  0870               	movf	?___fldiv,w
 12530     0603  00AD               	movwf	floorf@x
 12531     0604  160A  118A  22D6  120A  118A  	fcall	_floorf
 12532     0609  1283               	bcf	3,5	;RP0=0, select bank0
 12533     060A  1303               	bcf	3,6	;RP1=0, select bank0
 12534     060B  0830               	movf	?_floorf+3,w
 12535     060C  1683               	bsf	3,5	;RP0=1, select bank1
 12536     060D  1303               	bcf	3,6	;RP1=0, select bank1
 12537     060E  00C0               	movwf	(efgtoa@l+3)^(0+128)
 12538     060F  1283               	bcf	3,5	;RP0=0, select bank0
 12539     0610  1303               	bcf	3,6	;RP1=0, select bank0
 12540     0611  082F               	movf	?_floorf+2,w
 12541     0612  1683               	bsf	3,5	;RP0=1, select bank1
 12542     0613  1303               	bcf	3,6	;RP1=0, select bank1
 12543     0614  00BF               	movwf	(efgtoa@l+2)^(0+128)
 12544     0615  1283               	bcf	3,5	;RP0=0, select bank0
 12545     0616  1303               	bcf	3,6	;RP1=0, select bank0
 12546     0617  082E               	movf	?_floorf+1,w
 12547     0618  1683               	bsf	3,5	;RP0=1, select bank1
 12548     0619  1303               	bcf	3,6	;RP1=0, select bank1
 12549     061A  00BE               	movwf	(efgtoa@l+1)^(0+128)
 12550     061B  1283               	bcf	3,5	;RP0=0, select bank0
 12551     061C  1303               	bcf	3,6	;RP1=0, select bank0
 12552     061D  082D               	movf	?_floorf,w
 12553     061E  1683               	bsf	3,5	;RP0=1, select bank1
 12554     061F  1303               	bcf	3,6	;RP1=0, select bank1
 12555     0620  00BD               	movwf	efgtoa@l^(0+128)
 12556                           
 12557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12558     0621  0840               	movf	(efgtoa@l+3)^(0+128),w
 12559     0622  00F3               	movwf	___fltol@f1+3
 12560     0623  083F               	movf	(efgtoa@l+2)^(0+128),w
 12561     0624  00F2               	movwf	___fltol@f1+2
 12562     0625  083E               	movf	(efgtoa@l+1)^(0+128),w
 12563     0626  00F1               	movwf	___fltol@f1+1
 12564     0627  083D               	movf	efgtoa@l^(0+128),w
 12565     0628  00F0               	movwf	___fltol@f1
 12566     0629  160A  158A  265B  120A  118A  	fcall	___fltol
 12567     062E  0871               	movf	?___fltol+1,w
 12568     062F  3A80               	xorlw	128
 12569     0630  00FF               	movwf	btemp+1
 12570     0631  3080               	movlw	128
 12571     0632  027F               	subwf	btemp+1,w
 12572     0633  1D03               	skipz
 12573     0634  2E37               	goto	u4795
 12574     0635  300A               	movlw	10
 12575     0636  0270               	subwf	?___fltol,w
 12576     0637                     u4795:
 12577     0637  1803               	skipnc
 12578     0638  2E3A               	goto	u4791
 12579     0639  2E3B               	goto	u4790
 12580     063A                     u4791:
 12581     063A  2E51               	goto	l3372
 12582     063B                     u4790:
 12583     063B                     l3370:
 12584     063B  1683               	bsf	3,5	;RP0=1, select bank1
 12585     063C  1303               	bcf	3,6	;RP1=0, select bank1
 12586     063D  0840               	movf	(efgtoa@l+3)^(0+128),w
 12587     063E  00F3               	movwf	___fltol@f1+3
 12588     063F  083F               	movf	(efgtoa@l+2)^(0+128),w
 12589     0640  00F2               	movwf	___fltol@f1+2
 12590     0641  083E               	movf	(efgtoa@l+1)^(0+128),w
 12591     0642  00F1               	movwf	___fltol@f1+1
 12592     0643  083D               	movf	efgtoa@l^(0+128),w
 12593     0644  00F0               	movwf	___fltol@f1
 12594     0645  160A  158A  265B  120A  118A  	fcall	___fltol
 12595     064A  0871               	movf	?___fltol+1,w
 12596     064B  1683               	bsf	3,5	;RP0=1, select bank1
 12597     064C  1303               	bcf	3,6	;RP1=0, select bank1
 12598     064D  00AC               	movwf	(efgtoa@d+1)^(0+128)
 12599     064E  0870               	movf	?___fltol,w
 12600     064F  00AB               	movwf	efgtoa@d^(0+128)
 12601     0650  2E57               	goto	l3374
 12602     0651                     l3372:
 12603     0651  3009               	movlw	9
 12604     0652  1683               	bsf	3,5	;RP0=1, select bank1
 12605     0653  1303               	bcf	3,6	;RP1=0, select bank1
 12606     0654  00AB               	movwf	efgtoa@d^(0+128)
 12607     0655  3000               	movlw	0
 12608     0656  00AC               	movwf	(efgtoa@d^(0+128)+1)
 12609     0657                     l3374:
 12610                           
 12611                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12612     0657  0828               	movf	efgtoa@pp^(0+128),w
 12613     0658  1D03               	btfss	3,2
 12614     0659  2E5B               	goto	u4801
 12615     065A  2E5C               	goto	u4800
 12616     065B                     u4801:
 12617     065B  2E8D               	goto	l3394
 12618     065C                     u4800:
 12619     065C                     l3376:
 12620     065C  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
 12621     065D  2E5F               	goto	u4811
 12622     065E  2E60               	goto	u4810
 12623     065F                     u4811:
 12624     065F  2E8D               	goto	l3394
 12625     0660                     u4810:
 12626     0660                     l3378:
 12627                           
 12628                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12629     0660  0842               	movf	efgtoa@n^(0+128),w
 12630     0661  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12631     0662  0084               	movwf	4
 12632     0663  302E               	movlw	46
 12633     0664  1783               	bsf	3,7	;select IRP bank2
 12634     0665  0080               	movwf	0
 12635     0666                     l3380:
 12636     0666  3001               	movlw	1
 12637     0667  07C2               	addwf	efgtoa@n^(0+128),f
 12638     0668  1803               	skipnc
 12639     0669  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12640     066A  3000               	movlw	0
 12641     066B  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12642     066C                     l3382:
 12643                           
 12644                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12645     066C  30FF               	movlw	255
 12646     066D  07B1               	addwf	efgtoa@w^(0+128),f
 12647     066E  1803               	skipnc
 12648     066F  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12649     0670  30FF               	movlw	255
 12650     0671  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12651     0672                     l3384:
 12652                           
 12653                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12654     0672  3001               	movlw	1
 12655     0673  00A8               	movwf	efgtoa@pp^(0+128)
 12656     0674  2E8D               	goto	l3394
 12657     0675                     l3386:
 12658                           
 12659                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12660     0675  0842               	movf	efgtoa@n^(0+128),w
 12661     0676  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12662     0677  0084               	movwf	4
 12663     0678  3030               	movlw	48
 12664     0679  1783               	bsf	3,7	;select IRP bank2
 12665     067A  0080               	movwf	0
 12666     067B                     l3388:
 12667     067B  3001               	movlw	1
 12668     067C  07C2               	addwf	efgtoa@n^(0+128),f
 12669     067D  1803               	skipnc
 12670     067E  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12671     067F  3000               	movlw	0
 12672     0680  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12673     0681                     l3390:
 12674                           
 12675                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12676     0681  30FF               	movlw	255
 12677     0682  07B1               	addwf	efgtoa@w^(0+128),f
 12678     0683  1803               	skipnc
 12679     0684  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12680     0685  30FF               	movlw	255
 12681     0686  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12682     0687                     l3392:
 12683                           
 12684                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12685     0687  30FF               	movlw	255
 12686     0688  07A4               	addwf	efgtoa@t^(0+128),f
 12687     0689  1803               	skipnc
 12688     068A  0AA5               	incf	(efgtoa@t+1)^(0+128),f
 12689     068B  30FF               	movlw	255
 12690     068C  07A5               	addwf	(efgtoa@t+1)^(0+128),f
 12691     068D                     l3394:
 12692                           
 12693                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12694     068D  0824               	movf	efgtoa@t^(0+128),w
 12695     068E  0425               	iorwf	(efgtoa@t+1)^(0+128),w
 12696     068F  1D03               	btfss	3,2
 12697     0690  2E92               	goto	u4821
 12698     0691  2E93               	goto	u4820
 12699     0692                     u4821:
 12700     0692  2E75               	goto	l3386
 12701     0693                     u4820:
 12702     0693                     l3396:
 12703                           
 12704                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12705     0693  0842               	movf	efgtoa@n^(0+128),w
 12706     0694  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12707     0695  0084               	movwf	4
 12708     0696  082B               	movf	efgtoa@d^(0+128),w
 12709     0697  3E30               	addlw	48
 12710     0698  1783               	bsf	3,7	;select IRP bank2
 12711     0699  0080               	movwf	0
 12712     069A                     l3398:
 12713     069A  3001               	movlw	1
 12714     069B  07C2               	addwf	efgtoa@n^(0+128),f
 12715     069C  1803               	skipnc
 12716     069D  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 12717     069E  3000               	movlw	0
 12718     069F  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 12719     06A0                     l3400:
 12720                           
 12721                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12722     06A0  30FF               	movlw	255
 12723     06A1  07B1               	addwf	efgtoa@w^(0+128),f
 12724     06A2  1803               	skipnc
 12725     06A3  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 12726     06A4  30FF               	movlw	255
 12727     06A5  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 12728     06A6                     l3402:
 12729                           
 12730                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 12731     06A6  084B               	movf	(efgtoa@u+3)^(0+128),w
 12732     06A7  1283               	bcf	3,5	;RP0=0, select bank0
 12733     06A8  1303               	bcf	3,6	;RP1=0, select bank0
 12734     06A9  00A7               	movwf	___flmul@a+3
 12735     06AA  1683               	bsf	3,5	;RP0=1, select bank1
 12736     06AB  1303               	bcf	3,6	;RP1=0, select bank1
 12737     06AC  084A               	movf	(efgtoa@u+2)^(0+128),w
 12738     06AD  1283               	bcf	3,5	;RP0=0, select bank0
 12739     06AE  1303               	bcf	3,6	;RP1=0, select bank0
 12740     06AF  00A6               	movwf	___flmul@a+2
 12741     06B0  1683               	bsf	3,5	;RP0=1, select bank1
 12742     06B1  1303               	bcf	3,6	;RP1=0, select bank1
 12743     06B2  0849               	movf	(efgtoa@u+1)^(0+128),w
 12744     06B3  1283               	bcf	3,5	;RP0=0, select bank0
 12745     06B4  1303               	bcf	3,6	;RP1=0, select bank0
 12746     06B5  00A5               	movwf	___flmul@a+1
 12747     06B6  1683               	bsf	3,5	;RP0=1, select bank1
 12748     06B7  1303               	bcf	3,6	;RP1=0, select bank1
 12749     06B8  0848               	movf	efgtoa@u^(0+128),w
 12750     06B9  1283               	bcf	3,5	;RP0=0, select bank0
 12751     06BA  1303               	bcf	3,6	;RP1=0, select bank0
 12752     06BB  00A4               	movwf	___flmul@a
 12753     06BC  1683               	bsf	3,5	;RP0=1, select bank1
 12754     06BD  1303               	bcf	3,6	;RP1=0, select bank1
 12755     06BE  0840               	movf	(efgtoa@l+3)^(0+128),w
 12756     06BF  1283               	bcf	3,5	;RP0=0, select bank0
 12757     06C0  1303               	bcf	3,6	;RP1=0, select bank0
 12758     06C1  00A3               	movwf	___flmul@b+3
 12759     06C2  1683               	bsf	3,5	;RP0=1, select bank1
 12760     06C3  1303               	bcf	3,6	;RP1=0, select bank1
 12761     06C4  083F               	movf	(efgtoa@l+2)^(0+128),w
 12762     06C5  1283               	bcf	3,5	;RP0=0, select bank0
 12763     06C6  1303               	bcf	3,6	;RP1=0, select bank0
 12764     06C7  00A2               	movwf	___flmul@b+2
 12765     06C8  1683               	bsf	3,5	;RP0=1, select bank1
 12766     06C9  1303               	bcf	3,6	;RP1=0, select bank1
 12767     06CA  083E               	movf	(efgtoa@l+1)^(0+128),w
 12768     06CB  1283               	bcf	3,5	;RP0=0, select bank0
 12769     06CC  1303               	bcf	3,6	;RP1=0, select bank0
 12770     06CD  00A1               	movwf	___flmul@b+1
 12771     06CE  1683               	bsf	3,5	;RP0=1, select bank1
 12772     06CF  1303               	bcf	3,6	;RP1=0, select bank1
 12773     06D0  083D               	movf	efgtoa@l^(0+128),w
 12774     06D1  1283               	bcf	3,5	;RP0=0, select bank0
 12775     06D2  1303               	bcf	3,6	;RP1=0, select bank0
 12776     06D3  00A0               	movwf	___flmul@b
 12777     06D4  120A  158A  24BE  120A  118A  	fcall	___flmul
 12778     06D9  1283               	bcf	3,5	;RP0=0, select bank0
 12779     06DA  1303               	bcf	3,6	;RP1=0, select bank0
 12780     06DB  0823               	movf	?___flmul+3,w
 12781     06DC  00BD               	movwf	___flsub@a+3
 12782     06DD  0822               	movf	?___flmul+2,w
 12783     06DE  00BC               	movwf	___flsub@a+2
 12784     06DF  0821               	movf	?___flmul+1,w
 12785     06E0  00BB               	movwf	___flsub@a+1
 12786     06E1  0820               	movf	?___flmul,w
 12787     06E2  00BA               	movwf	___flsub@a
 12788     06E3  1683               	bsf	3,5	;RP0=1, select bank1
 12789     06E4  1303               	bcf	3,6	;RP1=0, select bank1
 12790     06E5  083C               	movf	(efgtoa@h+3)^(0+128),w
 12791     06E6  1283               	bcf	3,5	;RP0=0, select bank0
 12792     06E7  1303               	bcf	3,6	;RP1=0, select bank0
 12793     06E8  00C1               	movwf	___flsub@b+3
 12794     06E9  1683               	bsf	3,5	;RP0=1, select bank1
 12795     06EA  1303               	bcf	3,6	;RP1=0, select bank1
 12796     06EB  083B               	movf	(efgtoa@h+2)^(0+128),w
 12797     06EC  1283               	bcf	3,5	;RP0=0, select bank0
 12798     06ED  1303               	bcf	3,6	;RP1=0, select bank0
 12799     06EE  00C0               	movwf	___flsub@b+2
 12800     06EF  1683               	bsf	3,5	;RP0=1, select bank1
 12801     06F0  1303               	bcf	3,6	;RP1=0, select bank1
 12802     06F1  083A               	movf	(efgtoa@h+1)^(0+128),w
 12803     06F2  1283               	bcf	3,5	;RP0=0, select bank0
 12804     06F3  1303               	bcf	3,6	;RP1=0, select bank0
 12805     06F4  00BF               	movwf	___flsub@b+1
 12806     06F5  1683               	bsf	3,5	;RP0=1, select bank1
 12807     06F6  1303               	bcf	3,6	;RP1=0, select bank1
 12808     06F7  0839               	movf	efgtoa@h^(0+128),w
 12809     06F8  1283               	bcf	3,5	;RP0=0, select bank0
 12810     06F9  1303               	bcf	3,6	;RP1=0, select bank0
 12811     06FA  00BE               	movwf	___flsub@b
 12812     06FB  160A  158A  23B3  120A  118A  	fcall	___flsub
 12813     0700  1283               	bcf	3,5	;RP0=0, select bank0
 12814     0701  1303               	bcf	3,6	;RP1=0, select bank0
 12815     0702  083D               	movf	?___flsub+3,w
 12816     0703  1683               	bsf	3,5	;RP0=1, select bank1
 12817     0704  1303               	bcf	3,6	;RP1=0, select bank1
 12818     0705  00BC               	movwf	(efgtoa@h+3)^(0+128)
 12819     0706  1283               	bcf	3,5	;RP0=0, select bank0
 12820     0707  1303               	bcf	3,6	;RP1=0, select bank0
 12821     0708  083C               	movf	?___flsub+2,w
 12822     0709  1683               	bsf	3,5	;RP0=1, select bank1
 12823     070A  1303               	bcf	3,6	;RP1=0, select bank1
 12824     070B  00BB               	movwf	(efgtoa@h+2)^(0+128)
 12825     070C  1283               	bcf	3,5	;RP0=0, select bank0
 12826     070D  1303               	bcf	3,6	;RP1=0, select bank0
 12827     070E  083B               	movf	?___flsub+1,w
 12828     070F  1683               	bsf	3,5	;RP0=1, select bank1
 12829     0710  1303               	bcf	3,6	;RP1=0, select bank1
 12830     0711  00BA               	movwf	(efgtoa@h+1)^(0+128)
 12831     0712  1283               	bcf	3,5	;RP0=0, select bank0
 12832     0713  1303               	bcf	3,6	;RP1=0, select bank0
 12833     0714  083A               	movf	?___flsub,w
 12834     0715  1683               	bsf	3,5	;RP0=1, select bank1
 12835     0716  1303               	bcf	3,6	;RP1=0, select bank1
 12836     0717  00B9               	movwf	efgtoa@h^(0+128)
 12837     0718                     l3404:
 12838                           
 12839                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12840     0718  3041               	movlw	65
 12841     0719  00F3               	movwf	___fldiv@a+3
 12842     071A  3020               	movlw	32
 12843     071B  00F2               	movwf	___fldiv@a+2
 12844     071C  3000               	movlw	0
 12845     071D  00F1               	movwf	___fldiv@a+1
 12846     071E  3000               	movlw	0
 12847     071F  00F0               	movwf	___fldiv@a
 12848     0720  084B               	movf	(efgtoa@u+3)^(0+128),w
 12849     0721  00F7               	movwf	___fldiv@b+3
 12850     0722  084A               	movf	(efgtoa@u+2)^(0+128),w
 12851     0723  00F6               	movwf	___fldiv@b+2
 12852     0724  0849               	movf	(efgtoa@u+1)^(0+128),w
 12853     0725  00F5               	movwf	___fldiv@b+1
 12854     0726  0848               	movf	efgtoa@u^(0+128),w
 12855     0727  00F4               	movwf	___fldiv@b
 12856     0728  160A  118A  2630  120A  118A  	fcall	___fldiv
 12857     072D  0873               	movf	?___fldiv+3,w
 12858     072E  1683               	bsf	3,5	;RP0=1, select bank1
 12859     072F  1303               	bcf	3,6	;RP1=0, select bank1
 12860     0730  00CB               	movwf	(efgtoa@u+3)^(0+128)
 12861     0731  0872               	movf	?___fldiv+2,w
 12862     0732  00CA               	movwf	(efgtoa@u+2)^(0+128)
 12863     0733  0871               	movf	?___fldiv+1,w
 12864     0734  00C9               	movwf	(efgtoa@u+1)^(0+128)
 12865     0735  0870               	movf	?___fldiv,w
 12866     0736  00C8               	movwf	efgtoa@u^(0+128)
 12867     0737                     l3406:
 12868                           
 12869                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 12870     0737  30FF               	movlw	255
 12871     0738  07A0               	addwf	efgtoa@ne^(0+128),f
 12872     0739  1803               	skipnc
 12873     073A  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
 12874     073B  30FF               	movlw	255
 12875     073C  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
 12876     073D                     l3408:
 12877                           
 12878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 12879     073D  3001               	movlw	1
 12880     073E  07B7               	addwf	efgtoa@i^(0+128),f
 12881     073F  1803               	skipnc
 12882     0740  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 12883     0741  3000               	movlw	0
 12884     0742  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 12885     0743                     l3410:
 12886                           
 12887                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12888     0743  0838               	movf	(efgtoa@i+1)^(0+128),w
 12889     0744  3A80               	xorlw	128
 12890     0745  1283               	bcf	3,5	;RP0=0, select bank0
 12891     0746  1303               	bcf	3,6	;RP1=0, select bank0
 12892     0747  00DB               	movwf	??_efgtoa
 12893     0748  1683               	bsf	3,5	;RP0=1, select bank1
 12894     0749  1303               	bcf	3,6	;RP1=0, select bank1
 12895     074A  082E               	movf	(efgtoa@m+1)^(0+128),w
 12896     074B  3A80               	xorlw	128
 12897     074C  1283               	bcf	3,5	;RP0=0, select bank0
 12898     074D  1303               	bcf	3,6	;RP1=0, select bank0
 12899     074E  025B               	subwf	??_efgtoa,w
 12900     074F  1D03               	skipz
 12901     0750  2F55               	goto	u4835
 12902     0751  1683               	bsf	3,5	;RP0=1, select bank1
 12903     0752  1303               	bcf	3,6	;RP1=0, select bank1
 12904     0753  082D               	movf	efgtoa@m^(0+128),w
 12905     0754  0237               	subwf	efgtoa@i^(0+128),w
 12906     0755                     u4835:
 12907     0755  1803               	skipnc
 12908     0756  2F58               	goto	u4831
 12909     0757  2F59               	goto	u4830
 12910     0758                     u4831:
 12911     0758  2F68               	goto	l3414
 12912     0759                     u4830:
 12913     0759                     l3412:
 12914     0759  1683               	bsf	3,5	;RP0=1, select bank1
 12915     075A  1303               	bcf	3,6	;RP1=0, select bank1
 12916     075B  0843               	movf	(efgtoa@n+1)^(0+128),w
 12917     075C  3A80               	xorlw	128
 12918     075D  00FF               	movwf	btemp+1
 12919     075E  3080               	movlw	128
 12920     075F  027F               	subwf	btemp+1,w
 12921     0760  1D03               	skipz
 12922     0761  2F64               	goto	u4845
 12923     0762  304B               	movlw	75
 12924     0763  0242               	subwf	efgtoa@n^(0+128),w
 12925     0764                     u4845:
 12926     0764  1C03               	skipc
 12927     0765  2F67               	goto	u4841
 12928     0766  2F68               	goto	u4840
 12929     0767                     u4841:
 12930     0767  2DE3               	goto	l3368
 12931     0768                     u4840:
 12932     0768                     l3414:
 12933                           
 12934                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 12935     0768  304F               	movlw	79
 12936     0769  1683               	bsf	3,5	;RP0=1, select bank1
 12937     076A  1303               	bcf	3,6	;RP1=0, select bank1
 12938     076B  00B7               	movwf	efgtoa@i^(0+128)
 12939     076C  3000               	movlw	0
 12940     076D  00B8               	movwf	(efgtoa@i^(0+128)+1)
 12941     076E                     l3416:
 12942                           
 12943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 12944     076E  0837               	movf	efgtoa@i^(0+128),w
 12945     076F  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12946     0770  0084               	movwf	4
 12947     0771  1783               	bsf	3,7	;select IRP bank2
 12948     0772  0180               	clrf	0
 12949     0773                     l3418:
 12950                           
 12951                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 12952     0773  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 12953     0774  1283               	bcf	3,5	;RP0=0, select bank0
 12954     0775  1303               	bcf	3,6	;RP1=0, select bank0
 12955     0776  00DB               	movwf	??_efgtoa
 12956     0777  1683               	bsf	3,5	;RP0=1, select bank1
 12957     0778  1303               	bcf	3,6	;RP1=0, select bank1
 12958     0779  0842               	movf	efgtoa@n^(0+128),w
 12959     077A  1283               	bcf	3,5	;RP0=0, select bank0
 12960     077B  1303               	bcf	3,6	;RP1=0, select bank0
 12961     077C  02DB               	subwf	??_efgtoa,f
 12962     077D  1683               	bsf	3,5	;RP0=1, select bank1
 12963     077E  1303               	bcf	3,6	;RP1=0, select bank1
 12964     077F  0837               	movf	efgtoa@i^(0+128),w
 12965     0780  1283               	bcf	3,5	;RP0=0, select bank0
 12966     0781  1303               	bcf	3,6	;RP1=0, select bank0
 12967     0782  075B               	addwf	??_efgtoa,w
 12968     0783  00F0               	movwf	memcpy@d1
 12969     0784  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 12970     0785  00F1               	movwf	memcpy@s1
 12971     0786  1683               	bsf	3,5	;RP0=1, select bank1
 12972     0787  1303               	bcf	3,6	;RP1=0, select bank1
 12973     0788  0843               	movf	(efgtoa@n+1)^(0+128),w
 12974     0789  00F3               	movwf	memcpy@n+1
 12975     078A  0842               	movf	efgtoa@n^(0+128),w
 12976     078B  00F2               	movwf	memcpy@n
 12977     078C  160A  158A  234F  120A  118A  	fcall	_memcpy
 12978     0791                     l3420:
 12979                           
 12980                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 12981     0791  1683               	bsf	3,5	;RP0=1, select bank1
 12982     0792  1303               	bcf	3,6	;RP1=0, select bank1
 12983     0793  0842               	movf	efgtoa@n^(0+128),w
 12984     0794  0237               	subwf	efgtoa@i^(0+128),w
 12985     0795  00C2               	movwf	efgtoa@n^(0+128)
 12986     0796  0843               	movf	(efgtoa@n+1)^(0+128),w
 12987     0797  1C03               	skipc
 12988     0798  0A43               	incf	(efgtoa@n+1)^(0+128),w
 12989     0799  0238               	subwf	(efgtoa@i+1)^(0+128),w
 12990     079A  00C3               	movwf	(efgtoa@n+1)^(0+128)
 12991     079B                     l3422:
 12992                           
 12993                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 12994     079B  0841               	movf	efgtoa@sign^(0+128),w
 12995     079C  1D03               	btfss	3,2
 12996     079D  2F9F               	goto	u4851
 12997     079E  2FA1               	goto	u4850
 12998     079F                     u4851:
 12999     079F  3001               	movlw	1
 13000     07A0  2FA2               	goto	u4860
 13001     07A1                     u4850:
 13002     07A1  3000               	movlw	0
 13003     07A2                     u4860:
 13004     07A2  1283               	bcf	3,5	;RP0=0, select bank0
 13005     07A3  1303               	bcf	3,6	;RP1=0, select bank0
 13006     07A4  00DB               	movwf	??_efgtoa
 13007     07A5  01DC               	clrf	??_efgtoa+1
 13008     07A6  085B               	movf	??_efgtoa,w
 13009     07A7  1683               	bsf	3,5	;RP0=1, select bank1
 13010     07A8  1303               	bcf	3,6	;RP1=0, select bank1
 13011     07A9  00B7               	movwf	efgtoa@i^(0+128)
 13012     07AA  1283               	bcf	3,5	;RP0=0, select bank0
 13013     07AB  1303               	bcf	3,6	;RP1=0, select bank0
 13014     07AC  085C               	movf	??_efgtoa+1,w
 13015     07AD  1683               	bsf	3,5	;RP0=1, select bank1
 13016     07AE  1303               	bcf	3,6	;RP1=0, select bank1
 13017     07AF  00B8               	movwf	(efgtoa@i+1)^(0+128)
 13018     07B0                     l3424:
 13019                           
 13020                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 13021     07B0  0841               	movf	efgtoa@sign^(0+128),w
 13022     07B1  1903               	btfsc	3,2
 13023     07B2  2FB4               	goto	u4871
 13024     07B3  2FB5               	goto	u4870
 13025     07B4                     u4871:
 13026     07B4  2FC1               	goto	l3428
 13027     07B5                     u4870:
 13028     07B5                     l3426:
 13029                           
 13030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 13031     07B5  30FF               	movlw	255
 13032     07B6  07C2               	addwf	efgtoa@n^(0+128),f
 13033     07B7  1803               	skipnc
 13034     07B8  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 13035     07B9  30FF               	movlw	255
 13036     07BA  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 13037     07BB  0842               	movf	efgtoa@n^(0+128),w
 13038     07BC  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13039     07BD  0084               	movwf	4
 13040     07BE  0841               	movf	efgtoa@sign^(0+128),w
 13041     07BF  1783               	bsf	3,7	;select IRP bank2
 13042     07C0  0080               	movwf	0
 13043     07C1                     l3428:
 13044                           
 13045                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 13046     07C1  0837               	movf	efgtoa@i^(0+128),w
 13047     07C2  02B1               	subwf	efgtoa@w^(0+128),f
 13048     07C3  0838               	movf	(efgtoa@i+1)^(0+128),w
 13049     07C4  1C03               	skipc
 13050     07C5  03B2               	decf	(efgtoa@w+1)^(0+128),f
 13051     07C6  02B2               	subwf	(efgtoa@w+1)^(0+128),f
 13052     07C7                     l3430:
 13053                           
 13054                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 13055     07C7  1283               	bcf	3,5	;RP0=0, select bank0
 13056     07C8  1303               	bcf	3,6	;RP1=0, select bank0
 13057     07C9  0854               	movf	efgtoa@fp,w
 13058     07CA  00A8               	movwf	pad@fp
 13059     07CB  0855               	movf	efgtoa@fp+1,w
 13060     07CC  00A9               	movwf	pad@fp+1
 13061     07CD  1683               	bsf	3,5	;RP0=1, select bank1
 13062     07CE  1303               	bcf	3,6	;RP1=0, select bank1
 13063     07CF  0842               	movf	efgtoa@n^(0+128),w
 13064     07D0  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13065     07D1  1283               	bcf	3,5	;RP0=0, select bank0
 13066     07D2  1303               	bcf	3,6	;RP1=0, select bank0
 13067     07D3  00AA               	movwf	pad@buf
 13068     07D4  1683               	bsf	3,5	;RP0=1, select bank1
 13069     07D5  1303               	bcf	3,6	;RP1=0, select bank1
 13070     07D6  0832               	movf	(efgtoa@w+1)^(0+128),w
 13071     07D7  1283               	bcf	3,5	;RP0=0, select bank0
 13072     07D8  1303               	bcf	3,6	;RP1=0, select bank0
 13073     07D9  00AC               	movwf	pad@p+1
 13074     07DA  1683               	bsf	3,5	;RP0=1, select bank1
 13075     07DB  1303               	bcf	3,6	;RP1=0, select bank1
 13076     07DC  0831               	movf	efgtoa@w^(0+128),w
 13077     07DD  1283               	bcf	3,5	;RP0=0, select bank0
 13078     07DE  1303               	bcf	3,6	;RP1=0, select bank0
 13079     07DF  00AB               	movwf	pad@p
 13080     07E0  160A  158A  2562  120A  118A  	fcall	_pad
 13081     07E5                     l898:
 13082     07E5  0008               	return
 13083     07E6                     __end_of_efgtoa:

Data Sizes:
    Strings     366
    Constant    0
    Data        0
    BSS         169
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     76      80
    BANK3            96      0      86
    BANK2            96      0      80

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> displayText(BANK3[64]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> displayText(BANK3[64]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S710$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> displayText(BANK3[64]), 

    S710$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_10(CODE[62]), STR_2(CODE[15]), STR_4(CODE[44]), STR_7(CODE[62]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> displayText(BANK3[64]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), STR_15(CODE[4]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 64
		 -> displayText(BANK3[64]), STR_1(CODE[19]), STR_11(CODE[39]), STR_3(CODE[16]), 
		 -> STR_5(CODE[36]), STR_6(CODE[14]), STR_8(CODE[39]), STR_9(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 62
		 -> STR_10(CODE[62]), STR_2(CODE[15]), STR_4(CODE[44]), STR_7(CODE[62]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 62
		 -> STR_10(CODE[62]), STR_2(CODE[15]), STR_4(CODE[44]), STR_7(CODE[62]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_10(CODE[62]), STR_2(CODE[15]), STR_4(CODE[44]), STR_7(CODE[62]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _floorf->___fldiv
    _TCN75A_SetTemp->___xxtofl
    ___flsub->___xxtofl
    ___flge->___xxtofl
    _TCN75A_SetFaultQueue->_TCN75A_ReadConfig
    _TCN75A_SetFaultQueue->_TCN75A_WriteConfig
    _TCN75A_SetAlertPolarity->_TCN75A_ReadConfig
    _TCN75A_SetAlertPolarity->_TCN75A_WriteConfig
    _TCN75A_SetAlertMode->_TCN75A_ReadConfig
    _TCN75A_SetAlertMode->_TCN75A_WriteConfig
    _restartSensor->_TCN75A_SetShutdown
    _TCN75A_SetShutdown->_TCN75A_ReadConfig
    _TCN75A_SetShutdown->_TCN75A_WriteConfig
    _TCN75A_WriteConfig->_I2C_Master_Write
    _TCN75A_ReadConfig->_I2C_Master_Write
    _UART_Write_Text->_UART_Write
    _TCN75A_ReadTemperature->___xxtofl
    ___flmul->___xxtofl
    _TCN75A_GetTemp->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _floorf->___fldiv
    _setupSensorForSafetyMode->_TCN75A_SetRangeTemp
    _setupSensorForNormalMode->_TCN75A_SetRangeTemp
    _TCN75A_SetRangeTemp->_TCN75A_SetHystTemp
    _TCN75A_SetRangeTemp->_TCN75A_SetLimitTemp
    _TCN75A_SetLimitTemp->_TCN75A_SetTemp
    _TCN75A_SetHystTemp->_TCN75A_SetTemp
    _TCN75A_SetTemp->___flge
    ___flsub->___flmul
    ___flge->_TCN75A_GetLimitTemp
    _TCN75A_ReadTemperature->___flmul
    _TCN75A_GetLimitTemp->_TCN75A_GetTemp
    _TCN75A_GetHystTemp->_TCN75A_GetTemp
    _TCN75A_GetTemp->___fladd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   33451
                                             73 BANK1      3     3      0
                    _I2C_Master_Init
                 _TCN75A_GetHystTemp
                _TCN75A_GetLimitTemp
                        _TCN75A_Init
             _TCN75A_ReadTemperature
                       _UART_TX_Init
                    _UART_Write_Text
                             ___flge
                      _restartSensor
           _setupSensorForNormalMode
           _setupSensorForSafetyMode
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    15     11   12440
                                             49 BANK1     24    13     11
                 _TCN75A_GetHystTemp (ARG)
                _TCN75A_GetLimitTemp (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     2      5   12229
                                             78 BANK0      2     2      0
                                             44 BANK1      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4   12095
                                             63 BANK0     15    11      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     276
                                              6 COMMON     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   11071
                                             52 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3      77
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     707
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     331
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4      69
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     137
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1132
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _setupSensorForSafetyMode                             0     0      0    6731
                _TCN75A_SetAlertMode
            _TCN75A_SetAlertPolarity
               _TCN75A_SetFaultQueue
                _TCN75A_SetRangeTemp
 ---------------------------------------------------------------------------------
 (1) _setupSensorForNormalMode                             0     0      0    6731
                _TCN75A_SetAlertMode
            _TCN75A_SetAlertPolarity
               _TCN75A_SetFaultQueue
                _TCN75A_SetRangeTemp
 ---------------------------------------------------------------------------------
 (2) _TCN75A_SetRangeTemp                                  8     0      8    6216
                                             69 BANK0      8     0      8
                 _TCN75A_SetHystTemp
                _TCN75A_SetLimitTemp
 ---------------------------------------------------------------------------------
 (3) _TCN75A_SetLimitTemp                                  4     0      4    3084
                                             65 BANK0      4     0      4
                     _TCN75A_SetTemp
 ---------------------------------------------------------------------------------
 (3) _TCN75A_SetHystTemp                                   4     0      4    3084
                                             65 BANK0      4     0      4
                     _TCN75A_SetTemp
 ---------------------------------------------------------------------------------
 (4) _TCN75A_SetTemp                                      13     9      4    3061
                                             52 BANK0     13     9      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___flge
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     233
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2043
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     204
                                             40 BANK0     12     4      8
                _TCN75A_GetLimitTemp (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _TCN75A_SetFaultQueue                                 3     3      0     187
                                              3 COMMON     3     3      0
                  _TCN75A_ReadConfig
                 _TCN75A_WriteConfig
 ---------------------------------------------------------------------------------
 (2) _TCN75A_SetAlertPolarity                              2     2      0     164
                                              3 COMMON     2     2      0
                  _TCN75A_ReadConfig
                 _TCN75A_WriteConfig
 ---------------------------------------------------------------------------------
 (2) _TCN75A_SetAlertMode                                  2     2      0     164
                                              3 COMMON     2     2      0
                  _TCN75A_ReadConfig
                 _TCN75A_WriteConfig
 ---------------------------------------------------------------------------------
 (1) _restartSensor                                        3     3      0     164
                                              5 COMMON     3     3      0
                 _TCN75A_SetShutdown
 ---------------------------------------------------------------------------------
 (2) _TCN75A_SetShutdown                                   2     2      0     164
                                              3 COMMON     2     2      0
                  _TCN75A_ReadConfig
                 _TCN75A_WriteConfig
 ---------------------------------------------------------------------------------
 (3) _TCN75A_WriteConfig                                   2     2      0      58
                                              1 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _TCN75A_ReadConfig                                    2     2      0      52
                                              1 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2      85
                                              1 COMMON     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              0 COMMON     1     1      0
                      _UART_TX_Empty
 ---------------------------------------------------------------------------------
 (3) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TCN75A_ReadTemperature                              17    13      4    2103
                                             26 BANK0     17    13      4
                            _I2C_ACK
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    1620
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _TCN75A_Init                                          1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TCN75A_GetLimitTemp                                  4     0      4    2482
                                             36 BANK0      4     0      4
                     _TCN75A_GetTemp
 ---------------------------------------------------------------------------------
 (1) _TCN75A_GetHystTemp                                   4     0      4    2482
                                             36 BANK0      4     0      4
                     _TCN75A_GetTemp
 ---------------------------------------------------------------------------------
 (2) _TCN75A_GetTemp                                      16    12      4    2482
                                             20 BANK0     16    12      4
                            _I2C_ACK
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
                            ___fladd
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     339
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1992
                                              0 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _TCN75A_GetHystTemp
     _TCN75A_GetTemp
       _I2C_ACK
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_NACK
         _I2C_Master_Wait
       _I2C_Read_Byte
         _I2C_Master_Wait
       ___fladd
         ___xxtofl (ARG)
       ___xxtofl
   _TCN75A_GetLimitTemp
     _TCN75A_GetTemp
   _TCN75A_Init
     _I2C_Master_Init
   _TCN75A_ReadTemperature
     _I2C_ACK
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_NACK
     _I2C_Read_Byte
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _UART_TX_Init
   _UART_Write_Text
     _UART_Write
       _UART_TX_Empty
   ___flge
     _TCN75A_GetLimitTemp (ARG)
     ___flmul (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   _restartSensor
     _TCN75A_SetShutdown
       _TCN75A_ReadConfig
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _I2C_NACK
         _I2C_Read_Byte
       _TCN75A_WriteConfig
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
   _setupSensorForNormalMode
     _TCN75A_SetAlertMode
       _TCN75A_ReadConfig
       _TCN75A_WriteConfig
     _TCN75A_SetAlertPolarity
       _TCN75A_ReadConfig
       _TCN75A_WriteConfig
     _TCN75A_SetFaultQueue
       _TCN75A_ReadConfig
       _TCN75A_WriteConfig
     _TCN75A_SetRangeTemp
       _TCN75A_SetHystTemp
         _TCN75A_SetTemp
           _I2C_Master_Start
           _I2C_Master_Stop
           _I2C_Master_Write
           ___flge
           ___flsub
           ___fltol
           ___xxtofl
       _TCN75A_SetLimitTemp
         _TCN75A_SetTemp
   _setupSensorForSafetyMode
     _TCN75A_SetAlertMode
     _TCN75A_SetAlertPolarity
     _TCN75A_SetFaultQueue
     _TCN75A_SetRangeTemp
   _sprintf
     _TCN75A_GetHystTemp (ARG)
     _TCN75A_GetLimitTemp (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     80      80    100.0%
BANK1               80     76      80    100.0%
BANK3               96      0      86     89.6%
BANK2               96      0      80     83.3%
STACK                0      0       0      0.0%
DATA                 0      0     340      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Nov 15 15:42:58 2024

                    ___fldiv@aexp 002C                      ___fldiv@bexp 002B                                 pc 0002  
                    ___fldiv@sign 0024                                l51 1B2F                                l60 0C0B  
                              l45 1C97                                l48 1CC1                                l57 0B6A  
                              fsr 0004               ___wmul@multiplicand 0072               __Umul8_16@word_mpld 0076  
                             l100 1A2E                               l103 1A15                               l121 1A14  
                             l106 1A21                               l130 1AC2                               l115 19E6  
                             l124 1A39                               l132 1AC7                               l109 19DD  
                             l133 1AD0                               l221 00B0                               l118 1A08  
                             l126 1A3D                               l230 1B4E                               l127 1A3E  
                             l224 1A81                               l233 1A70                               l217 19F1  
                             l162 1AA4                               l171 1A4E                               l227 1A92  
                             l252 1142                               l236 1A5F                               l244 12A5  
                             l165 19CC                               l245 12D5                               l255 1D26  
                             l177 1C46                               l258 1BB2                               l274 1B15  
                             l284 1AE7                               l269 081C                               l703 09E3  
                             l279 1AFE                               l720 0A62                               l712 0A42  
                             l552 1DED                               l721 0A6C                               l377 1BE3  
                             l546 1DBC                               l563 1FFF                               l555 1F7A  
                             l571 1ECE                               l547 1DD8                               l379 1BFB  
                             l820 11F6                               l724 1BD6                               l709 0A06  
                             l581 1ECE                               l558 1FE6                               l750 1779  
                             l734 1685                               l831 11C0                               l567 19FC  
                             l832 11CC                               l824 11A4                               l736 17FF  
                             l673 0849                               l682 08F9                               l818 1165  
                             l578 1EB9                               l914 02FC                               l691 0A6C  
                             l819 1176                               l684 08D4                               l780 0F71  
                             l756 17EB                               l924 05CF                               l678 087A  
                             l774 0FFF                               l758 17F7                               l856 1C20  
                             l793 1C5B                               l786 0FF5                               l699 09BF  
                             l795 1C6D                               l883 1D6A                               l947 1E5A  
                             l956 1572                               l990 1323                               l974 1D61  
                             l991 13E4                               l887 1D9F                               l895 1465  
                             l967 162F                               l984 1F5B                               l898 07E5  
                             l995 13DC                               _RB0 0030                               _RB1 0031  
                             _RB2 0032                               _PEN 048A                               _SEN 0488  
                 __end_of_I2C_ACK 1A09                               _pad 1D62                               fsr0 0004  
                             indf 0000                      ___flmul@aexp 0032                      ___flmul@bexp 0033  
                    ___flmul@sign 002D                      ___flmul@temp 0038                      ___flmul@prod 0034  
                    ___fltol@exp1 0079                              l1011 1B6F                              l1005 1AB9  
                            l1023 109C                              l1031 1CEC                              l1008 1B61  
                            l1040 1B90                              l1034 0007                              l3000 0F42  
                            l3010 0F5A                              l3002 0F4B                              l3020 0F89  
                            l3012 0F6E                              l3004 0F51                              l3100 1D92  
                            l3030 0FC4                              l3022 0F8D                              l3006 0F55  
                            l3110 1F25                              l3102 1ECF                              l3040 0FEF  
                            l3032 0FD3                              l3024 0FA6                              l3016 0F76  
                            l3008 0F56                              l3200 1242                              l3112 1F2A  
                            l3104 1EEF                              l3050 1149                              l3042 0FF0  
                            l3034 0FDD                              l3018 0F7B                              l3026 0FAC  
                            l3210 12AC                              l3202 1255                              l3122 1F57  
                            l3106 1F06                              l3130 1AA5                              l2500 0896  
                            l3060 1179                              l3052 114D                              l3044 0FF7  
                            l3036 0FDF                              l3028 0FB9                              l3212 12B8  
                            l3204 129A                              l3108 1F0C                              l3116 1F2F  
                            l3140 12F6                              l3132 1AA9                              l2420 100F  
                            l3300 02E7                              l3220 13E5                              l2430 1A15  
                            l2510 08A0                              l2502 0898                              l3070 11AB  
                            l3062 1184                              l3054 115D                              l3038 0FEB  
                            l3214 12C0                              l3206 129F                              l3118 1F35  
                            l3142 1315                              l3134 1AAA                              l2422 1016  
                            l3126 1B70                              l3310 030C                              l3302 02EF  
                            l3230 1442                              l3222 13E8                              l2432 1A1B  
                            l2600 0A03                              l2520 08D8                              l2512 08A2  
                            l2504 089A                              l2440 0827                              l3080 11E4  
                            l3072 11B6                              l3064 118B                              l3056 116D  
                            l3048 1144                              l3216 12C8                              l3208 12A7  
                            l3160 13B2                              l3152 1358                              l3144 1322  
                            l2424 102E                              l2416 1003                              l3128 1B72  
                            l3400 06A0                              l3312 0310                              l3320 0326  
                            l3304 02F3                              l3240 1461                              l3232 1446  
                            l3224 1400                              l2610 0A22                              l2530 08EF  
                            l2522 08DF                              l2506 089C                              l2514 08A4  
                            l2450 083E                              l2442 082B                              l2434 081D  
                            l3082 11E9                              l3074 11BA                              l3066 118D  
                            l3218 12D0                              l3162 13BB                              l3154 1371  
                            l3146 1329                              l3138 12D6                              l3170 1B54  
                            l2426 1060                              l2418 1009                              l3090 1D62  
                            l3402 06A6                              l3410 0743                              l3330 038A  
                            l3322 0328                              l3314 0318                              l3306 02F8  
                            l3250 149D                              l3242 1467                              l3234 1452  
                            l3226 1427                              l3180 1A11                              l2620 0A59  
                            l2612 0A40                              l2604 0A0B                              l2540 090B  
                            l2524 08E1                              l2532 08F1                              l2516 08A5  
                            l2508 089E                              l2460 0853                              l2452 083F  
                            l2444 082C                              l2436 0821                              l3084 11ED  
                            l3076 11C4                              l3068 119B                              l2700 1F9A  
                            l3164 13D4                              l3156 1388                              l3148 1343  
                            l3172 1B59                              l3092 1D68                              l3420 0791  
                            l3412 0759                              l3404 0718                              l3340 0476  
                            l3332 03FC                              l3324 0330                              l3316 031A  
                            l3308 0306                              l3260 14DF                              l3252 14A5  
                            l3244 147A                              l3236 1457                              l3228 142B  
                            l3500 1582                              l3182 1ABA                              l2630 0A6B  
                            l2622 0A5A                              l2614 0A47                              l2606 0A10  
                            l2550 0933                              l2542 0922                              l2534 08FD  
                            l2526 08E5                              l2518 08BC                              l2470 0862  
                            l2462 0854                              l2446 0831                              l2454 0841  
                            l2438 0823                              l3086 11EE                              l3078 11CE  
                            l2702 1FBE                              l3158 1399                              l3174 1B5B  
                            l3094 1D6D                              l3430 07C7                              l3422 079B  
                            l3414 0768                              l3406 0737                              l3350 04E1  
                            l3342 04AD                              l3334 041B                              l3326 0339  
                            l3318 0320                              l3262 14EF                              l3270 00B1  
                            l3246 1481                              l3238 145C                              l3510 15C3  
                            l3502 1591                              l3176 1A09                              l3184 1ABF  
                            l2624 0A5E                              l2616 0A4C                              l2608 0A1E  
                            l2560 095A                              l2552 0937                              l2544 0926  
                            l2536 0902                              l2528 08E6                              l2480 0880  
                            l2472 0867                              l2464 0858                              l2456 084B  
                            l2448 0836                              l2640 1C64                              l2632 1C48  
                            l2704 1FC2                              l2720 1E5B                              l3192 11FA  
                            l2800 167B                              l2712 19F2                              l3168 1B4F  
                            l3096 1D7C                              l3424 07B0                              l3416 076E  
                            l3408 073D                              l3360 05C9                              l3352 052E  
                            l3344 04B8                              l3328 0377                              l3336 0421  
                            l3280 00E7                              l3272 00BB                              l3248 1491  
                            l3256 14C1                              l3440 1E10                              l3512 15DA  
                            l3504 15A6                              l3520 1603                              l3600 1D34  
                            l3178 1A0C                              l3186 1AC8                              l2626 0A60  
                            l2618 0A54                              l2562 0998                              l2570 09B1  
                            l2554 0938                              l2546 092A                              l2490 088C  
                            l2482 0884                              l2474 086F                              l2466 085C  
                            l2458 084D                              l2642 1C69                              l2634 1C4A  
                            l3530 1AE9                              l2706 1FFC                              l2730 1E81  
                            l2722 1E64                              l3194 1213                              l3610 1C7A  
                            l2802 167D                              l2714 19FA                              l2650 1CD7  
                            l3098 1D84                              l3426 07B5                              l3418 0773  
                            l3370 063B                              l3362 05DD                              l3354 057C  
                            l3346 04D3                              l3338 0437                              l3290 0228  
                            l3282 0126                              l3274 00BD                              l3258 14D8  
                            l3442 1E1E                              l3434 1DEE                              l3602 1D4D  
                            l3452 19FD                              l2660 19E3                              l3188 1ACD  
                            l2628 0A67                              l2580 09DE                              l2572 09C7  
                            l2564 099A                              l2556 0941                              l2548 0931  
                            l2492 088E                              l2484 0886                              l2476 0870  
                            l2468 085D                              l2636 1C51                              l3620 1B16  
                            l3532 1AEF                              l3540 1B00                              l2708 1FFE  
                            l2732 1E89                              l3196 121D                              l3612 1C91  
                            l2900 17F5                              l2820 16C4                              l2804 168D  
                            l2812 16A4                              l2716 19FC                              l2652 1CDF  
                            l3428 07C1                              l3380 0666                              l3372 0651  
                            l3364 05DE                              l3356 0584                              l3348 04D9  
                            l3292 0249                              l3284 0184                              l3444 1E33  
                            l3436 1DF0                              l3508 15BB                              l3524 160E  
                            l3604 1D5D                              l3700 0B7C                              l3454 1A00  
                            l2654 19D5                              l2662 1A30                              l2590 09F2  
                            l2582 09E2                              l2574 09CC                              l2566 099D  
                            l2558 0944                              l2494 0890                              l2486 0888  
                            l2478 0872                              l3630 19EC                              l2638 1C55  
                            l2910 0CC4                              l3622 1B1C                              l3534 1AF4  
                            l3542 1B06                              l2750 1EAE                              l2742 1E97  
                            l2734 1E8B                              l2726 1E6D                              l3198 1238  
                            l3462 1A71                              l3550 1B30                              l3614 1C98  
                            l2830 16E3                              l2822 16CC                              l2814 16A9  
                            l2806 1699                              l2646 1CC2                              l3390 0681  
                            l3382 066C                              l3374 0657                              l3366 05E0  
                            l3358 05C3                              l3294 024F                              l3286 01BD  
                            l3278 00D7                              l2670 1BDD                              l3438 1E08  
                            l3446 1E3B                              l3518 15F6                              l3710 0C0F  
                            l3702 0B81                              l3456 1A05                              l2656 19DA  
                            l2664 1A35                              l2584 09E7                              l2592 09F4  
                            l2568 09A2                              l2496 0892                              l2488 088A  
                            l2920 0CD7                              l2912 0CC8                              l3640 0008  
                            l3632 1C21                              l3472 1B92                              l3560 1AD8  
                            l3624 1B29                              l3536 1AF6                              l3544 1B0B  
                            l3552 0802                              l2752 1EBE                              l2736 1E8F  
                            l2744 1EA7                              l2728 1E80                              l3464 1A82  
                            l3608 1C6E                              l3616 1CA4                              l2840 1715  
                            l2832 16F5                              l2824 16D4                              l2808 169B  
                            l2680 1DA0                              l2648 1CC7                              l3392 0687  
                            l3384 0672                              l3376 065C                              l3368 05E3  
                            l3288 021D                              l2672 1BEA                              l3448 1E56  
                            l3480 1524                              l3720 0C72                              l3712 0C18  
                            l3704 0BC8                              l2658 19DE                              l2586 09EB  
                            l2578 09D5                              l2594 09F8                              l2498 0894  
                            l3570 1A26                              l2930 0CF0                              l2922 0CDF  
                            l2914 0CCC                              l2906 0CBE                              l3650 00A8  
                            l3642 0051                              l3626 1A93                              l3458 19C7  
                            l3634 1C22                              l3466 1CED                              l3562 1ADD  
                            l3538 1AF8                              l3546 1B0D                              l3554 0808  
                            l2754 1EC3                              l3618 1CBB                              l2850 173A  
                            l2842 1716                              l2834 16F9                              l2826 16DC  
                            l2818 16B2                              l2770 163E                              l2762 1630  
                            l2682 1DB4                              l3386 0675                              l3378 0660  
                            l3394 068D                              l3298 02AE                              l2674 1BF1  
                            l2666 1BD7                              l3490 1560                              l3482 1528  
                            l3474 14FC                              l3722 0CA2                              l3714 0C1D  
                            l3706 0BD1                              l2596 09F9                              l2588 09ED  
                            l3572 1A2A                              l3628 19E8                              l2940 0D07  
                            l2932 0CF4                              l2924 0CE1                              l2916 0CCD  
                            l2908 0CC2                              l3644 0070                              l3580 1A40  
                            l3636 1C30                              l3468 1D25                              l3564 1ADF  
                            l3548 1B0F                              l3556 080A                              l2692 1F5C  
                            l2756 1BB3                              l2860 1753                              l2852 173C  
                            l2844 172A                              l2836 16FA                              l2828 16DE  
                            l2780 1652                              l2772 163F                              l2764 1634  
                            l2684 1DD0                              l3396 0693                              l3388 067B  
                            l2676 1BF7                              l2668 1BD9                              l3492 156B  
                            l3484 153F                              l3476 1514                              l3660 1C06  
                            l3716 0C22                              l3708 0C01                              l3724 0CAB  
                            l2598 09FD                              l3590 1103                              l3574 1A2C  
                            l2942 0D09                              l2934 0CF5                              l2926 0CE9  
                            l2918 0CD2                              l3646 0074                              l3582 1A4A  
                            l3638 1C36                              l3566 1AE1                              l3558 1AD2  
                            l2694 1F72                              l2758 1BB7                              l2870 1776  
                            l2854 1745                              l2862 1759                              l2838 1703  
                            l2846 172C                              l2790 1667                              l2774 1644  
                            l2782 1654                              l2766 1636                              l2686 1DEA  
                            l3398 069A                              l3494 1575                              l3486 1547  
                            l3478 151C                              l3662 1C08                              l3654 1BFC  
                            l3718 0C69                              ?_pad 0028                              l3592 110B  
                            l3584 10A0                              l3672 1A4F                              l3576 1A2D  
                            l3568 1A22                              l2960 0D76                              l2952 0D24  
                            l2944 0D11                              l2936 0CFA                              l2928 0CEC  
                            l3648 0078                              l2696 1F8E                              l2880 1795  
                            l2864 175D                              l2856 1749                              l2848 1732  
                            l2792 1668                              l2784 165C                              l2776 1649  
                            l2768 163A                              l2688 1DEC                              l3488 1556  
                            l3664 1C17                              l3656 1C00                              l3680 0A7D  
                            l3594 113A                              l3586 10EB                              l2970 0DEF  
                            l2962 0DA0                              l2954 0D32                              l2946 0D16  
                            l2938 0CFF                              l3578 1A40                              l2698 1F96  
                            l2890 17DE                              l2882 17AE                              l2874 177E  
                            l2866 175E                              l2858 174A                              l2794 166D  
                            l2786 165F                              l2778 1651                              l3498 1577  
                            l3658 1C04                              l3690 0AD7                              l3682 0A86  
                            l3588 10FA                              l3668 1A60                              l2980 0E6B  
                            l2972 0E0C                              l2964 0DBC                              l2956 0D3F  
                            l2948 0D1B                              l2892 17E2                              l2876 1783  
                            l2884 17B4                              l2868 1762                              l2796 1672  
                            l2788 1663                              l3692 0B30                              l3684 0AA3  
                            l3676 0A6D                              l2990 0F1D                              l2982 0E96  
                            l2974 0E1A                              l2966 0DD8                              l2958 0D5A  
                            l2894 17EA                              l2886 17C1                              l2878 1791  
                            l2798 167A                              l3598 1D27                              l3694 0B60  
                            l3686 0AC8                              l3678 0A77                              l2992 0F26  
                            l2984 0EA4                              l2976 0E37                              l2968 0DE1  
                            l2896 17EF                              l2888 17CF                              l3696 0B6E  
                            l3688 0AD1                              l2994 0F34                              l2986 0ECF  
                            l2978 0E4E                              l2898 17F3                              l3698 0B77  
                            l2996 0F3D                              l2988 0EF5                              l2998 0F41  
                            STR_1 191A                              STR_2 193D                              STR_3 192D  
                            STR_4 187C                              STR_5 18F6                              STR_6 194C  
                            STR_7 1800                              STR_8 18A8                              STR_9 195A  
                            _BRGH 04C2                              _CREN 00C4                              u3000 09F8  
                            u3001 09F7                              u3010 09FD                              u3011 09FC  
                            u3100 0A59                              u3020 0A03                              u3101 0A58  
                            u3021 0A02                              u3110 0A5E                              u3030 0A0A  
                            u3111 0A5D                              u3031 0A09                              u3120 0A6B  
                            u3040 0A10                              u4000 0F55                              u3121 0A6A  
                            u3041 0A0F                              u4001 0F54                              u3050 0A22  
                            u3130 1C55                              u4010 0F5A                              u3210 1BF7  
                            u3051 0A21                              u3131 1C54                              u4011 0F59  
                            u3211 1BF6                              u3060 0A31                              u4100 1149  
                            u4020 0F6E                              u3220 1DB4                              u4101 1148  
                            u4021 0F6D                              u3301 1FD1                              u3221 1DB3  
                            u3205 1BEB                              u3070 0A40                              u4110 114D  
                            u3150 1C69                              u4030 0F75                              u3310 1FFC  
                            u3302 1FD2                              u3230 1DD0                              u3071 0A3F  
                            u4111 114C                              u3151 1C68                              u4031 0F74  
                            u3311 1FFB                              u3303 1FD7                              u3231 1DCF  
                            u3080 0A47                              u4200 11C4                              u4120 116D  
                            u4040 0F7B                              u3304 1FD8                              u3240 1DEA  
                            u3320 19FA                              u2600 1009                              u3160 1CEC  
                            u5000 1D5D                              u3081 0A46                              u3065 0A2C  
                            u4201 11C3                              u4121 116C                              u3145 1C5C  
                            u4041 0F7A                              u3305 1FDD                              u3241 1DE9  
                            u3321 19F9                              u2601 1008                              u3161 1CEB  
                            u5001 1D5C                              u3170 1A3D                              u3090 0A4C  
                            u4210 11D9                              u4050 0F8D                              u5010 1C46  
                            u3306 1FDE                              u3250 1F72                              u3410 1EBE  
                            u3330 1E64                              u2610 100F                              u3171 1A3C  
                            u3091 0A4B                              u4051 0F8C                              u5011 1C45  
                            u3315 1FF8                              u3251 1F71                              u3411 1EBD  
                            u3331 1E63                              u2611 100E                              u2700 0853  
                            u4220 11E9                              u4140 118A                              u4060 0F9C  
                            u3260 1F8E                              u3420 1EC3                              u3340 1E7B  
                            u3500 16A9                              u4300 1F35                              u2620 102E  
                            u3180 1BDD                              u2701 0852                              u4221 11E8  
                            u4141 1189                              u3261 1F8D                              u3421 1EC2  
                            u3405 1EB0                              u3501 16A8                              u3245 1DE6  
                            u4301 1F34                              u2621 102D                              u3181 1BDC  
                            u2710 085C                              u4230 11ED                              u4070 0FB9  
                            u5030 0074                              u3270 1F9A                              u3350 1E8F  
                            u3510 16E3                              u3430 163E                              u4310 1F43  
                            u2630 1060                              u2711 085B                              u4231 11EC  
                            u4215 11D4                              u4135 117C                              u4071 0FB8  
                            u5031 0073                              u3271 1F99                              u3351 1E8E  
                            u3511 16E2                              u3431 163D                              u2631 105F  
                            u2800 08E5                              u2720 0862                              u4160 11AA  
                            u4080 0FD3                              u3360 1E96                              u3440 1644  
                            u4320 1F4F                              u4400 1357                              u2640 1081  
                            u4240 1D68                              u5040 0AD7                              u2801 08E4  
                            u2721 0861                              u4161 11A9                              u4081 0FD2  
                            u4065 0F97                              u5025 0056                              u3281 1FA9  
                            u3361 1E95                              u3345 1E76                              u3441 1643  
                            u4321 1F4D                              u4401 1356                              u4241 1D67  
                            u5041 0AD6                              u2650 1A1B                              u2730 0867  
                            u4090 0FEF                              u3290 1FC2                              u3282 1FAA  
                            u3610 1749                              u3450 1649                              u4330 1F50  
                            u4410 1366                              u4250 1D92                              u5050 0B60  
                            u2651 1A1A                              u2731 0866                              u4155 119C  
                            u4091 0FEE                              u4075 0FB5                              u3291 1FC1  
                            u3283 1FAF                              u3611 1748                              u3451 1648  
                            u4315 1F3E                              u2635 105C                              u4251 1D91  
                            u3195 1BE4                              u5051 0B5F                              u2660 1A21  
                            u2900 095A                              u2820 08F9                              u2740 0880  
                            u4180 11BA                              u3284 1FB0                              u3380 1EA6  
                            u4500 1213                              u3700 17C1                              u3540 16F9  
                            u3460 1667                              u4260 1EFD                              u4420 1371  
                            u4340 1B90                              u5060 0B6E                              u2661 1A20  
                            u2901 0959                              u2821 08F8                              u2741 087F  
                            u4181 11B9                              u4085 0FCF                              u3285 1FB5  
                            u3381 1EA5                              u4501 1212                              u3701 17C0  
                            u3605 173E                              u3541 16F8                              u3525 16E5  
                            u3461 1666                              u4421 1370                              u4341 1B8F  
                            u5061 0B6D                              u2830 08FD                              u2750 0884  
                            u2670 082B                              u4190 11C0                              u3286 1FB6  
                            u3390 1EAD                              u4510 1238                              u3710 17DE  
                            u3630 175D                              u3470 166D                              u4270 1F0C  
                            u4350 1AA9                              u5070 0C01                              u2911 0971  
                            u2903 0956                              u2831 08FC                              u2815 08E8  
                            u2751 0883                              u2671 082A                              u4191 11BF  
                            u4175 11AF                              u3391 1EAC                              u3375 1E98  
                            u4511 1237                              u3711 17DD                              u3631 175C  
                            u3535 16EE                              u3471 166C                              u4271 1F0B  
                            u4431 137A                              u4415 1361                              u4351 1AA8  
                            u4255 1D8E                              u5071 0C00                              u2920 0985  
                            u2912 0972                              u2840 0902                              u2760 08BC  
                            u2680 0831                              u3800 0D1B                              u4520 129A  
                            u3720 17F3                              u3640 1762                              u3560 1715  
                            u3480 1672                              u4280 1F1A                              u4440 13A7  
                            u4432 1381                              u4360 1304                              u4600 00D6  
                            u5080 0C0F                              u2921 0986                              u2913 0977  
                            u2841 0901                              u2761 08BB                              u2681 0830  
                            u3801 0D1A                              u4521 1299                              u3721 17F2  
                            u3705 17BD                              u3641 1761                              u3625 174C  
                            u3561 1714                              u3481 1671                              u4265 1EF8  
                            u4433 1388                              u4601 00D5                              u5137 0CB3  
                            u5081 0C0E                              u2930 09A2                              u2922 098B  
                            u2914 0978                              u2770 08C7                              u2690 0836  
                            u3730 0CCC                              u3650 1776                              u3570 172A  
                            u3490 168D                              u4290 1F25                              u4450 13B2  
                            u4370 1322                              u4530 1427                              u5090 0CA2  
                            u2931 09A1                              u2923 098C                              u2915 097D  
                            u2851 0914                              u2771 08C5                              u2691 0835  
                            u3811 0D68                              u3731 0CCB                              u5147 1B22  
                            u3715 17DA                              u3651 1775                              u3555 16FC  
                            u3491 168C                              u4291 1F24                              u4451 13B1  
                            u4371 1321                              u4611 0149                              u4531 1426  
                            u5091 0CA1                              u2940 09C7                              u2916 097E  
                            u2860 0926                              u2852 091B                              u2780 08C8  
                            u3812 0D6F                              u3740 0CD2                              u3660 177D  
                            u3580 1732                              u4460 13C9                              u4380 1329  
                            u4700 030C                              u4620 0184                              u4612 014C  
                            u4540 1457                              u2941 09C6                              u2861 0925  
                            u2853 0922                              u2765 08B8                              u3901 0E88  
                            u3821 0D84                              u3813 0D76                              u3741 0CD1  
                            u3661 177C                              u3581 1731                              u3565 1711  
                            u4285 1F15                              u4445 13A2                              u4381 1328  
                            u4365 12FF                              u4701 030B                              u4621 0183  
                            u4613 0153                              u4541 1456                              u2950 09CC  
                            u2870 092A                              u2790 08D8                              u3902 0E8F  
                            u3822 0D8B                              u3750 0CD7                              u3670 1783  
                            u3590 173A                              u4470 13D4                              u4390 1339  
                            u4710 0310                              u4630 01BD                              u4614 0156  
                            u4550 145C                              u2951 09CB                              u2871 0929  
                            u2791 08D7                              u3911 0EB3                              u3903 0E96  
                            u3831 0DAE                              u3823 0D92                              u3751 0CD6  
                            u3671 1782                              u3591 1739                              u3575 171D  
                            u4471 13D3                              u4375 131E                              u4711 030F  
                            u4631 01BC                              u4623 0180                              u4615 015D  
                            u4551 145B                              u2880 0937                              u3920 0EDB  
                            u3912 0EBA                              u3832 0DB5                              u3760 0CF4  
                            u3680 1795                              u3576 171E                              u4480 1B6F  
                            u4800 065C                              u4720 0320                              u4616 0160  
                            u4560 147A                              u2881 0936                              u3913 0EC1  
                            u3841 0DCA                              u3833 0DBC                              u3761 0CF3  
                            u3681 1794                              u3577 1723                              u4465 13C4  
                            u4481 1B6E                              u4801 065B                              u4721 031F  
                            u4641 01E2                              u4561 1479                              u4490 1AC7  
                            u2970 09E2                              u3842 0DD1                              u3770 0CFA  
                            u3690 17A4                              u3578 1724                              u4810 0660  
                            u4730 0437                              u4650 021D                              u4642 01E5  
                            u4570 1481                              u4491 1AC6                              u2971 09E1  
                            u3931 0EE7                              u3843 0DD8                              u3771 0CF9  
                            u3579 1729                              u4395 1334                              u4811 065F  
                            u4731 0436                              u4651 021C                              u4643 01EC  
                            u4571 1480                              u2980 09E7                              u3940 0F03  
                            u3932 0EEE                              u3780 0CFF                              u4820 0693  
                            u4740 04AD                              u4644 01EF                              u4580 14D8  
                            u4900 1514                              _RCEN 048B                              _RCIF 0065  
                            u2981 09E6                              u2965 09D7                              u3933 0EF5  
                            u3925 0ED6                              u3861 0DFE                              u3781 0CFE  
                            u4821 0692                              u4741 04AC                              u4661 0272  
                            u4653 0219                              u4645 01F6                              u4581 14D5  
                            u4901 1513                              u2990 09F2                              u3862 0E05  
                            u3790 0D16                              u4830 0759                              u4750 04D3  
                            u4670 02AD                              u4662 0275                              u4646 01F9  
                            u4590 14DF                              u4910 153F                              u2991 09F1  
                            u2895 093A                              u3951 0F0F                              u3871 0E29  
                            u3863 0E0C                              u3855 0DDA                              u3791 0D15  
                            u3695 179F                              u4831 0758                              u4751 04D2  
                            u4735 0433                              u4671 02AC                              u4663 027C  
                            u4591 14DE                              u4911 153E                              u3952 0F16  
                            u3872 0E30                              u4840 0768                              u4760 04D9  
                            u4680 02E7                              u4664 027F                              u4920 1590  
                            u3953 0F1D                              u3945 0EFE                              u3873 0E37  
                            u4841 0767                              u4761 04D8                              u4681 02E6  
                            u4673 02A9                              u4665 0286                              u4921 158F  
                            u4930 1AF4                              u4850 07A1                              u4770 057C  
                            u4690 02F3                              u4666 0289                              u3891 0E5D  
                            u4931 1AF3                              u4851 079F                              u4835 0755  
                            u4771 057B                              u4691 02F2                              u3980 0F41  
                            u3892 0E64                              u4940 1B0B                              u4860 07A2  
                            u4780 05C9                              u3981 0F40                              u3965 0F1F  
                            u3893 0E6B                              u3885 0E39                              u4941 1B0A  
                            u4845 0764                              u4781 05C8                              u4870 07B5  
                            u4790 063B                              u3975 0F36                              u4871 07B4  
                            u4791 063A                              u4960 1ADD                              u4880 1E08  
                            u4961 1ADC                              u4881 1E07                              u4970 1A4A  
                            u4890 1E56                              u3995 0F44                              u4971 1A49  
                            u4955 080D                              u4795 0637                              u4891 1E55  
                            u4990 10FA                              u4991 10F9                              u4985 10F0  
                            _SPEN 00C7                              _RSEN 0489                              _TRMT 04C1  
                            _TXEN 04C5                              _SYNC 04C4                  __end_of_I2C_NACK 1A15  
 __end_of_TCN75A_SetAlertPolarity 1B16                              _dbuf 0110                              _labs 1AA5  
                            _main 0A6D                              _prec 00EC                              pad@i 002D  
                            pad@p 002B                              btemp 007E                      ?_TCN75A_Init 0070  
                   ___fpclassifyf 1ECF                              start 0000                   ___fldiv@new_exp 0025  
        TCN75A_WriteConfig@config 0072         TCN75A_SetAlertMode@config 0074       __end_of_TCN75A_SetAlertMode 1AFF  
      __end_of_TCN75A_SetHystTemp 1A82           __end_of_UART_Write_Text 1C47        __end_of_TCN75A_SetShutdown 1AE8  
                           ??_pad 007D                  ?_I2C_Master_Init 0070                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                     ___fltol@sign1 0078                             ?_labs 0070  
                 __end_of___fladd 0A6D                             ?_main 0070                             _ACKEN 048C  
                           _ACKDT 048D                   __end_of___fldiv 1800                   __end_of___flneg 19FD  
                           STR_10 183E                             STR_11 18CF                             STR_12 1966  
                           STR_15 196A                   __end_of___flmul 1000                   __end_of___flsub 1BD7  
                 __end_of___fltol 1ECF                             _RCREG 001A                      vfpfcnvrt@fmt 0061  
                           _SPBRG 0099                             _SSPIF 0063                             _TXREG 0019  
                     ?_UART_Write 0070                             _flags 00EE               read_prec_or_width@c 007A  
             read_prec_or_width@n 007B                             _fputc 1003                             _fputs 1CC2  
                           labs@a 0070                             pad@fp 0028                             _width 01A4  
     __end_of_TCN75A_SetLimitTemp 1A93          _setupSensorForSafetyMode 1C98                             _putch 0007  
                           pclath 000A       __end_of_TCN75A_SetRangeTemp 1B4F                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 1C21                    ?___fpclassifyf 0070  
                 __initialization 07E6                      __end_of_labs 1ABA                      __end_of_main 0CBE  
              _TCN75A_GetTemp$235 003E                         ??_I2C_ACK 0070          _setupSensorForNormalMode 1C6E  
                          ??_labs 0074                            ??_main 00E9      __end_of_TCN75A_SetFaultQueue 081D  
              _TCN75A_GetHystTemp 1A4F        __end_of_read_prec_or_width 1E5B                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0070  
             ?_TCN75A_GetHystTemp 0044                            ?_fputc 0070                            ?_fputs 0020  
                          ?_putch 0070                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _TRISC6 043E                            _TRISC7 043F  
                          _SSPCON 0014                            _SSPBUF 0013                  __end_of___xxtofl 11F7  
        ??_TCN75A_ReadTemperature 003E                    TCN75A_Init@adr 0070         TCN75A_SetAlertPolarity@sw 0073  
                    vfprintf@cfmt 006E                            ___flge 1F5C                            ___fleq 1DA0  
            ??_TCN75A_GetHystTemp 007E                     _I2C_Read_Byte 1ABA                         ??___fladd 0028  
                          ___wmul 1BD7                         ??___fldiv 0078                         ??___flneg 0074  
                       ??___flmul 0028                  ?_UART_Write_Text 0071                         ??___flsub 007E  
                       ??___fltol 0074                            _efgtoa 13E5                            _floorf 12D6  
          TCN75A_GetTemp@tempHigh 0042                            _memcpy 1B4F              read_prec_or_width@ap 0077  
                          pad@buf 002A             __end_of_UART_TX_Empty 19CD                            _strcpy 1B70  
                       ?_I2C_NACK 0070                            fputc@c 0070                            fputs@c 0025  
                          fputs@i 0026                            fputs@s 0020                   ___fpclassifyf@e 0020  
                 ___fpclassifyf@u 0022                   ___fpclassifyf@x 0070                            putch@c 0070  
                __end_of_vfprintf 1D62                         ??_sprintf 00DC        __end_of_TCN75A_WriteConfig 1BB3  
                      ___flge@ff1 0048                        ___flge@ff2 004C                   ??___fpclassifyf 0074  
                    ___xxtofl@arg 007A                      ___xxtofl@exp 0079                      ___xxtofl@val 0070  
                      ___fleq@ff1 0070                        ___fleq@ff2 0074           __end_of__initialization 07FC  
                      ___flneg@f1 0070                        ___fltol@f1 0070                    ?_I2C_Read_Byte 0070  
                  __pcstackCOMMON 0070          TCN75A_SetShutdown@config 0074        TCN75A_ReadTemperature@temp 0043  
                   __end_of_fputc 109D                     __end_of_fputs 1CED                     __end_of_putch 0008  
             _TCN75A_GetLimitTemp 1A60                        ??_I2C_NACK 0070                           ??_fputc 0074  
                         ??_fputs 0023                           ??_putch 0070                        __pbssBANK1 00EC  
                      __pbssBANK2 0110                        __pbssBANK3 0190                    _TCN75A_Address 00EF  
            ?_TCN75A_GetLimitTemp 0044                        _actualTemp 01A0                    _TCN75A_GetTemp 109D  
            _TCN75A_SetFaultQueue 0801                 __end_of__Umul8_16 1C6E           TCN75A_ReadConfig@config 0072  
                      _efgtoa$835 00A6                        __pmaintext 0A6D                    _TCN75A_SetTemp 11F7  
           __end_of_restartSensor 1B30                           ?___flge 0048                           ?___fleq 0070  
                         ?___wmul 0070                           ?_efgtoa 0054             TCN75A_SetAlertMode@sw 0073  
                         _I2C_ACK 19FD                           ?_floorf 002D                           ?_memcpy 0070  
              _TCN75A_SetTemp$229 005D                           _ACKSTAT 048E                           ?_strcpy 0070  
      ??_setupSensorForSafetyMode 007E                _TCN75A_SetHystTemp 1A71         TCN75A_SetRangeTemp@val_up 0069  
                       ?___xxtofl 0070                      ??_UART_Write 0070                _TCN75A_SetShutdown 1AD1  
                         _SSPCON2 0091               ?_TCN75A_SetHystTemp 0061                           _SSPSTAT 0094  
                   ?_UART_TX_Init 0070                        __stringtab 196E            __end_of_TCN75A_GetTemp 1143  
             ?_TCN75A_SetShutdown 0070             ??_TCN75A_GetLimitTemp 007E             ?_TCN75A_SetFaultQueue 0070  
                 ??_I2C_Read_Byte 0070        ??_setupSensorForNormalMode 007E            __end_of_TCN75A_SetTemp 12D6  
          TCN75A_SetLimitTemp@val 0061                           ___fladd 081D                           ___fldiv 1630  
                         ___flneg 19F2              ??_TCN75A_SetHystTemp 007E                           ___flmul 0CBE  
                         ___flsub 1BB3                           ___fltol 1E5B                __end_of_UART_Write 1A4F  
                       ?_vfprintf 00CC              ??_TCN75A_SetShutdown 0073                           __ptext1 1BFC  
                         __ptext2 1D27                           __ptext3 14FC                           __ptext4 1DEE  
                         __ptext5 1BD7                           __ptext6 13E5                           __ptext7 1B70  
                         __ptext8 1D62                           __ptext9 1CC2           _TCN75A_SetAlertPolarity 1AFF  
          _TCN75A_ReadTemperature 0008             read_prec_or_width@fmt 0076                        ??___xxtofl 0074  
                         efgtoa@c 005A                           efgtoa@d 00AB                           efgtoa@e 00AF  
                         efgtoa@f 0056                           efgtoa@g 00C4                           efgtoa@h 00B9  
                         efgtoa@i 00B7                           efgtoa@l 00BD                           efgtoa@m 00AD  
                         efgtoa@n 00C2                           efgtoa@p 00A2                           efgtoa@t 00A4  
                         efgtoa@u 00C8                           efgtoa@w 00B1       TCN75A_SetRangeTemp@val_down 0065  
                  ??_UART_TX_Init 0070                           _sprintf 1BFC                           clrloop0 19CE  
            end_of_initialization 07FC                           floorf@e 003B                           floorf@m 0037  
                         floorf@u 003D                           floorf@x 002D                   ?_TCN75A_GetTemp 0034  
                         memcpy@d 0075                           memcpy@n 0072                           memcpy@s 0076  
                         fputc@fp 0072                           fputs@fp 0021        TCN75A_SetFaultQueue@config 0075  
              _read_prec_or_width 1DEE                   ?_TCN75A_SetTemp 0054                 __end_of_vfpfcnvrt 1630  
                      efgtoa@mode 00A9                        efgtoa@sign 00C1               ?_read_prec_or_width 0076  
                         psplit$0 130045                  vfpfcnvrt@convarg 0067  
               TCN75A_GetTemp@reg 003D                      __pstringtext 1800                        ??_vfprintf 007E  
                         strcpy@d 0075                    UART_Write@data 0070                       ___fladd@grs 0033  
                   ___xxtofl@sign 0078              ??_read_prec_or_width 0078                       ___fldiv@grs 0027  
                     ___fldiv@rem 0020                       ___flmul@grs 002E              TCN75A_SetShutdown@sw 0073  
          ??_TCN75A_SetFaultQueue 0073                _TCN75A_WriteConfig 1B91         ??_TCN75A_SetAlertPolarity 0073  
                  __end_of___flge 2000                    __end_of___fleq 1DEE                       vfpfcnvrt@ap 0062  
                     vfpfcnvrt@cp 006C                       vfpfcnvrt@fp 005F                    __end_of___wmul 1BFC  
                  __end_of_efgtoa 07E6  __end_of_setupSensorForSafetyMode 1CC2                    __end_of_floorf 13E5  
                  __end_of_memcpy 1B70                        floorf@F521 0190               ?_TCN75A_WriteConfig 0070  
                  __end_of_strcpy 1B91               start_initialization 07E6                       __end_of_pad 1DA0  
               pnum$text6_split_1 0045                         _LimitTemp 019C                 ??_I2C_Master_Init 0070  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070              ??_TCN75A_WriteConfig 0071  
           __end_of___fpclassifyf 1F5C                     ??_TCN75A_Init 0070  __end_of_setupSensorForNormalMode 1C98  
                     vfprintf@fmt 00CE                          ??___flge 0050                          ??___fleq 0078  
                        ??___wmul 0074             TCN75A_GetTemp@tempLow 0043                          ??_efgtoa 005B  
                       __Umul8_16 1C47              __end_of_UART_TX_Init 1AA5                          ?_I2C_ACK 0070  
                        ??_floorf 0031                          ??_memcpy 0074                          ??_strcpy 0073  
                       ___fladd@a 0024                         ___fladd@b 0020                         ___fldiv@a 0070  
                       ___fldiv@b 0074                         ___flmul@a 0024                         ___flmul@b 0020  
                       ___flsub@a 003A                         ___flsub@b 003E                         ___latbits 0002  
               _TCN75A_ReadConfig 1CED                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
              ?_TCN75A_ReadConfig 0070               _TCN75A_SetAlertMode 1AE8               ??_TCN75A_ReadConfig 0071  
                       __pnvBANK1 00EF                  _I2C_Master_Start 19D5                  _I2C_Master_Write 1A2F  
                        ?___fladd 0020                          ?___fldiv 0070               __end_of_TCN75A_Init 19F2  
                        ?___flneg 0070                          ?___flmul 0020                          ?___flsub 003A  
                        ?___fltol 0070                        ?__Umul8_16 0070                 TCN75A_SetTemp@reg 005C  
         ?_TCN75A_ReadTemperature 003A              ?_TCN75A_SetAlertMode 0070              I2C_Master_Write@data 0070  
                       __pstrings 196E                          _I2C_NACK 1A09         __end_of_TCN75A_ReadConfig 1D27  
                   _UART_TX_Empty 19C7               _TCN75A_SetLimitTemp 1A82               _TCN75A_SetRangeTemp 1B30  
                ??_TCN75A_GetTemp 0038       __end_of_TCN75A_GetLimitTemp 1A71                          ?_sprintf 00D1  
               ??_UART_Write_Text 0073            TCN75A_SetTemp@tempHigh 0060                  ??_TCN75A_SetTemp 0058  
             TCN75A_SetTemp@value 0054                    ___wmul@product 0074         ?_setupSensorForSafetyMode 0070  
                       clear_ram0 19CD              ?_TCN75A_SetLimitTemp 0061              ?_TCN75A_SetRangeTemp 0065  
           __end_of_I2C_Read_Byte 1AD1    __end_of_TCN75A_ReadTemperature 00B1                       _displayText 01A6  
           ??_TCN75A_SetAlertMode 0073                         _vfpfcnvrt 14FC                       __stringbase 1980  
                  ?_UART_TX_Empty 0070                 ___wmul@multiplier 0070         ?_setupSensorForNormalMode 0070  
                      vfpfcnvrt@c 006B           TCN75A_SetFaultQueue@val 0074             ??_TCN75A_SetLimitTemp 007E  
                     _TCN75A_Init 19E7             ??_TCN75A_SetRangeTemp 007E                          _HystTemp 0198  
                       memcpy@tmp 0074                        vfprintf@ap 00D0                        vfprintf@fp 00CC  
                   _restartSensor 1B16                       ??__Umul8_16 0072                        ?_vfpfcnvrt 005F  
              __end_of__stringtab 1980                ___fpclassifyf@F465 0194                        sprintf@fmt 00D2  
                 _I2C_Master_Init 1A22                          ___xxtofl 1143                   _I2C_Master_Wait 1A15  
                 _I2C_Master_Stop 19DE                          __ptext10 1003                          __ptext11 0007  
                        __ptext20 1C6E                          __ptext12 1B4F                          __ptext21 1B30  
                        __ptext13 1AA5                          __ptext30 1AE8                          __ptext22 1A82  
                        __ptext14 12D6                          __ptext31 1B16                          __ptext23 1A71  
                        __ptext15 1ECF                          __ptext40 0CBE                          __ptext32 1AD1  
                        __ptext24 11F7                          __ptext16 19F2                          __ptext41 1C47  
                        __ptext33 1B91                          __ptext25 1E5B                          __ptext17 1DA0  
                        __ptext50 1A09                          __ptext42 19E7                          __ptext34 1CED  
                        __ptext26 1BB3                          __ptext18 1630                          __ptext51 1A2F  
                        __ptext43 1A22                          __ptext35 1C21                          __ptext27 1F5C  
                        __ptext19 1C98                          __ptext52 19DE                          __ptext44 1A60  
                        __ptext36 1A3F                          __ptext28 0801                          __ptext53 19D5  
                        __ptext45 1A4F                          __ptext37 19C7                          __ptext29 1AFF  
                        __ptext54 19FD                          __ptext46 109D                          __ptext38 1A93  
                        __ptext55 1A15                          __ptext47 1143                          __ptext39 0008  
                        __ptext48 081D                          __ptext49 1ABA                      _UART_TX_Init 1A93  
                      strcpy@dest 0070               UART_Write_Text@text 0071                         pnum$text6 0013  
           TCN75A_SetTemp@tempLow 005F        __end_of_TCN75A_GetHystTemp 1A60                          efgtoa@fp 0054  
                        efgtoa@ne 00A0                          efgtoa@pp 00A8                          efgtoa@ou 00B3  
                  ?_restartSensor 0070                          _vfprintf 1D27                   ??_UART_TX_Empty 0070  
           TCN75A_SetHystTemp@val 0061          __end_of_I2C_Master_Start 19DE          __end_of_I2C_Master_Write 1A3F  
                        memcpy@d1 0070                          memcpy@s1 0071     TCN75A_SetAlertPolarity@config 0074  
                       sprintf@ap 00DD                         strcpy@src 0071                         stringcode 1978  
        ?_TCN75A_SetAlertPolarity 0070                       efgtoa@nmode 00AA           __end_of_I2C_Master_Init 1A2F  
         __end_of_I2C_Master_Wait 1A22    TCN75A_ReadTemperature@tempHigh 0047           __end_of_I2C_Master_Stop 19E7  
                     ??_vfpfcnvrt 0063                TCN75A_GetTemp@temp 0039            __Umul8_16@multiplicand 0070  
                 _UART_Write_Text 1C21                          sprintf@f 00DE                          sprintf@s 00D1  
                        stringtab 196E                        _UART_Write 1A3F     TCN75A_ReadTemperature@tempRaw 0049  
   TCN75A_ReadTemperature@tempLow 0048                     ___fladd@signs 0030                      ___fladd@aexp 0031  
                    ___fladd@bexp 0032              __Umul8_16@multiplier 0078                   ??_restartSensor 0075  
               __Umul8_16@product 0074  
