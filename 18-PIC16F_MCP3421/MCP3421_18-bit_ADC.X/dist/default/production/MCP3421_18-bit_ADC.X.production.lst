

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 05 15:02:30 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	psect	text6_split_1,local,class=CODE,space=0,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59     0000                     
    60                           ; Generated 12/10/2023 GMT
    61                           ; 
    62                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F877A Definitions
    92                           ; 
    93                           ; SFR Addresses
    94     0004                     fsr             equ	4
    95     0004                     fsr0            equ	4
    96     0000                     indf            equ	0
    97     0000                     indf0           equ	0
    98     0002                     pc              equ	2
    99     0002                     pcl             equ	2
   100     000A                     pclath          equ	10
   101     0003                     status          equ	3
   102     0000                     INDF            equ	0	;# 
   103     0001                     TMR0            equ	1	;# 
   104     0002                     PCL             equ	2	;# 
   105     0003                     STATUS          equ	3	;# 
   106     0004                     FSR             equ	4	;# 
   107     0005                     PORTA           equ	5	;# 
   108     0006                     PORTB           equ	6	;# 
   109     0007                     PORTC           equ	7	;# 
   110     0008                     PORTD           equ	8	;# 
   111     0009                     PORTE           equ	9	;# 
   112     000A                     PCLATH          equ	10	;# 
   113     000B                     INTCON          equ	11	;# 
   114     000C                     PIR1            equ	12	;# 
   115     000D                     PIR2            equ	13	;# 
   116     000E                     TMR1            equ	14	;# 
   117     000E                     TMR1L           equ	14	;# 
   118     000F                     TMR1H           equ	15	;# 
   119     0010                     T1CON           equ	16	;# 
   120     0011                     TMR2            equ	17	;# 
   121     0012                     T2CON           equ	18	;# 
   122     0013                     SSPBUF          equ	19	;# 
   123     0014                     SSPCON          equ	20	;# 
   124     0015                     CCPR1           equ	21	;# 
   125     0015                     CCPR1L          equ	21	;# 
   126     0016                     CCPR1H          equ	22	;# 
   127     0017                     CCP1CON         equ	23	;# 
   128     0018                     RCSTA           equ	24	;# 
   129     0019                     TXREG           equ	25	;# 
   130     001A                     RCREG           equ	26	;# 
   131     001B                     CCPR2           equ	27	;# 
   132     001B                     CCPR2L          equ	27	;# 
   133     001C                     CCPR2H          equ	28	;# 
   134     001D                     CCP2CON         equ	29	;# 
   135     001E                     ADRESH          equ	30	;# 
   136     001F                     ADCON0          equ	31	;# 
   137     0081                     OPTION_REG      equ	129	;# 
   138     0085                     TRISA           equ	133	;# 
   139     0086                     TRISB           equ	134	;# 
   140     0087                     TRISC           equ	135	;# 
   141     0088                     TRISD           equ	136	;# 
   142     0089                     TRISE           equ	137	;# 
   143     008C                     PIE1            equ	140	;# 
   144     008D                     PIE2            equ	141	;# 
   145     008E                     PCON            equ	142	;# 
   146     0091                     SSPCON2         equ	145	;# 
   147     0092                     PR2             equ	146	;# 
   148     0093                     SSPADD          equ	147	;# 
   149     0094                     SSPSTAT         equ	148	;# 
   150     0098                     TXSTA           equ	152	;# 
   151     0099                     SPBRG           equ	153	;# 
   152     009C                     CMCON           equ	156	;# 
   153     009D                     CVRCON          equ	157	;# 
   154     009E                     ADRESL          equ	158	;# 
   155     009F                     ADCON1          equ	159	;# 
   156     010C                     EEDATA          equ	268	;# 
   157     010D                     EEADR           equ	269	;# 
   158     010E                     EEDATH          equ	270	;# 
   159     010F                     EEADRH          equ	271	;# 
   160     018C                     EECON1          equ	396	;# 
   161     018D                     EECON2          equ	397	;# 
   162     0000                     INDF            equ	0	;# 
   163     0001                     TMR0            equ	1	;# 
   164     0002                     PCL             equ	2	;# 
   165     0003                     STATUS          equ	3	;# 
   166     0004                     FSR             equ	4	;# 
   167     0005                     PORTA           equ	5	;# 
   168     0006                     PORTB           equ	6	;# 
   169     0007                     PORTC           equ	7	;# 
   170     0008                     PORTD           equ	8	;# 
   171     0009                     PORTE           equ	9	;# 
   172     000A                     PCLATH          equ	10	;# 
   173     000B                     INTCON          equ	11	;# 
   174     000C                     PIR1            equ	12	;# 
   175     000D                     PIR2            equ	13	;# 
   176     000E                     TMR1            equ	14	;# 
   177     000E                     TMR1L           equ	14	;# 
   178     000F                     TMR1H           equ	15	;# 
   179     0010                     T1CON           equ	16	;# 
   180     0011                     TMR2            equ	17	;# 
   181     0012                     T2CON           equ	18	;# 
   182     0013                     SSPBUF          equ	19	;# 
   183     0014                     SSPCON          equ	20	;# 
   184     0015                     CCPR1           equ	21	;# 
   185     0015                     CCPR1L          equ	21	;# 
   186     0016                     CCPR1H          equ	22	;# 
   187     0017                     CCP1CON         equ	23	;# 
   188     0018                     RCSTA           equ	24	;# 
   189     0019                     TXREG           equ	25	;# 
   190     001A                     RCREG           equ	26	;# 
   191     001B                     CCPR2           equ	27	;# 
   192     001B                     CCPR2L          equ	27	;# 
   193     001C                     CCPR2H          equ	28	;# 
   194     001D                     CCP2CON         equ	29	;# 
   195     001E                     ADRESH          equ	30	;# 
   196     001F                     ADCON0          equ	31	;# 
   197     0081                     OPTION_REG      equ	129	;# 
   198     0085                     TRISA           equ	133	;# 
   199     0086                     TRISB           equ	134	;# 
   200     0087                     TRISC           equ	135	;# 
   201     0088                     TRISD           equ	136	;# 
   202     0089                     TRISE           equ	137	;# 
   203     008C                     PIE1            equ	140	;# 
   204     008D                     PIE2            equ	141	;# 
   205     008E                     PCON            equ	142	;# 
   206     0091                     SSPCON2         equ	145	;# 
   207     0092                     PR2             equ	146	;# 
   208     0093                     SSPADD          equ	147	;# 
   209     0094                     SSPSTAT         equ	148	;# 
   210     0098                     TXSTA           equ	152	;# 
   211     0099                     SPBRG           equ	153	;# 
   212     009C                     CMCON           equ	156	;# 
   213     009D                     CVRCON          equ	157	;# 
   214     009E                     ADRESL          equ	158	;# 
   215     009F                     ADCON1          equ	159	;# 
   216     010C                     EEDATA          equ	268	;# 
   217     010D                     EEADR           equ	269	;# 
   218     010E                     EEDATH          equ	270	;# 
   219     010F                     EEADRH          equ	271	;# 
   220     018C                     EECON1          equ	396	;# 
   221     018D                     EECON2          equ	397	;# 
   222     0000                     INDF            equ	0	;# 
   223     0001                     TMR0            equ	1	;# 
   224     0002                     PCL             equ	2	;# 
   225     0003                     STATUS          equ	3	;# 
   226     0004                     FSR             equ	4	;# 
   227     0005                     PORTA           equ	5	;# 
   228     0006                     PORTB           equ	6	;# 
   229     0007                     PORTC           equ	7	;# 
   230     0008                     PORTD           equ	8	;# 
   231     0009                     PORTE           equ	9	;# 
   232     000A                     PCLATH          equ	10	;# 
   233     000B                     INTCON          equ	11	;# 
   234     000C                     PIR1            equ	12	;# 
   235     000D                     PIR2            equ	13	;# 
   236     000E                     TMR1            equ	14	;# 
   237     000E                     TMR1L           equ	14	;# 
   238     000F                     TMR1H           equ	15	;# 
   239     0010                     T1CON           equ	16	;# 
   240     0011                     TMR2            equ	17	;# 
   241     0012                     T2CON           equ	18	;# 
   242     0013                     SSPBUF          equ	19	;# 
   243     0014                     SSPCON          equ	20	;# 
   244     0015                     CCPR1           equ	21	;# 
   245     0015                     CCPR1L          equ	21	;# 
   246     0016                     CCPR1H          equ	22	;# 
   247     0017                     CCP1CON         equ	23	;# 
   248     0018                     RCSTA           equ	24	;# 
   249     0019                     TXREG           equ	25	;# 
   250     001A                     RCREG           equ	26	;# 
   251     001B                     CCPR2           equ	27	;# 
   252     001B                     CCPR2L          equ	27	;# 
   253     001C                     CCPR2H          equ	28	;# 
   254     001D                     CCP2CON         equ	29	;# 
   255     001E                     ADRESH          equ	30	;# 
   256     001F                     ADCON0          equ	31	;# 
   257     0081                     OPTION_REG      equ	129	;# 
   258     0085                     TRISA           equ	133	;# 
   259     0086                     TRISB           equ	134	;# 
   260     0087                     TRISC           equ	135	;# 
   261     0088                     TRISD           equ	136	;# 
   262     0089                     TRISE           equ	137	;# 
   263     008C                     PIE1            equ	140	;# 
   264     008D                     PIE2            equ	141	;# 
   265     008E                     PCON            equ	142	;# 
   266     0091                     SSPCON2         equ	145	;# 
   267     0092                     PR2             equ	146	;# 
   268     0093                     SSPADD          equ	147	;# 
   269     0094                     SSPSTAT         equ	148	;# 
   270     0098                     TXSTA           equ	152	;# 
   271     0099                     SPBRG           equ	153	;# 
   272     009C                     CMCON           equ	156	;# 
   273     009D                     CVRCON          equ	157	;# 
   274     009E                     ADRESL          equ	158	;# 
   275     009F                     ADCON1          equ	159	;# 
   276     010C                     EEDATA          equ	268	;# 
   277     010D                     EEADR           equ	269	;# 
   278     010E                     EEDATH          equ	270	;# 
   279     010F                     EEADRH          equ	271	;# 
   280     018C                     EECON1          equ	396	;# 
   281     018D                     EECON2          equ	397	;# 
   282     0000                     INDF            equ	0	;# 
   283     0001                     TMR0            equ	1	;# 
   284     0002                     PCL             equ	2	;# 
   285     0003                     STATUS          equ	3	;# 
   286     0004                     FSR             equ	4	;# 
   287     0005                     PORTA           equ	5	;# 
   288     0006                     PORTB           equ	6	;# 
   289     0007                     PORTC           equ	7	;# 
   290     0008                     PORTD           equ	8	;# 
   291     0009                     PORTE           equ	9	;# 
   292     000A                     PCLATH          equ	10	;# 
   293     000B                     INTCON          equ	11	;# 
   294     000C                     PIR1            equ	12	;# 
   295     000D                     PIR2            equ	13	;# 
   296     000E                     TMR1            equ	14	;# 
   297     000E                     TMR1L           equ	14	;# 
   298     000F                     TMR1H           equ	15	;# 
   299     0010                     T1CON           equ	16	;# 
   300     0011                     TMR2            equ	17	;# 
   301     0012                     T2CON           equ	18	;# 
   302     0013                     SSPBUF          equ	19	;# 
   303     0014                     SSPCON          equ	20	;# 
   304     0015                     CCPR1           equ	21	;# 
   305     0015                     CCPR1L          equ	21	;# 
   306     0016                     CCPR1H          equ	22	;# 
   307     0017                     CCP1CON         equ	23	;# 
   308     0018                     RCSTA           equ	24	;# 
   309     0019                     TXREG           equ	25	;# 
   310     001A                     RCREG           equ	26	;# 
   311     001B                     CCPR2           equ	27	;# 
   312     001B                     CCPR2L          equ	27	;# 
   313     001C                     CCPR2H          equ	28	;# 
   314     001D                     CCP2CON         equ	29	;# 
   315     001E                     ADRESH          equ	30	;# 
   316     001F                     ADCON0          equ	31	;# 
   317     0081                     OPTION_REG      equ	129	;# 
   318     0085                     TRISA           equ	133	;# 
   319     0086                     TRISB           equ	134	;# 
   320     0087                     TRISC           equ	135	;# 
   321     0088                     TRISD           equ	136	;# 
   322     0089                     TRISE           equ	137	;# 
   323     008C                     PIE1            equ	140	;# 
   324     008D                     PIE2            equ	141	;# 
   325     008E                     PCON            equ	142	;# 
   326     0091                     SSPCON2         equ	145	;# 
   327     0092                     PR2             equ	146	;# 
   328     0093                     SSPADD          equ	147	;# 
   329     0094                     SSPSTAT         equ	148	;# 
   330     0098                     TXSTA           equ	152	;# 
   331     0099                     SPBRG           equ	153	;# 
   332     009C                     CMCON           equ	156	;# 
   333     009D                     CVRCON          equ	157	;# 
   334     009E                     ADRESL          equ	158	;# 
   335     009F                     ADCON1          equ	159	;# 
   336     010C                     EEDATA          equ	268	;# 
   337     010D                     EEADR           equ	269	;# 
   338     010E                     EEDATH          equ	270	;# 
   339     010F                     EEADRH          equ	271	;# 
   340     018C                     EECON1          equ	396	;# 
   341     018D                     EECON2          equ	397	;# 
   342     0000                     INDF            equ	0	;# 
   343     0001                     TMR0            equ	1	;# 
   344     0002                     PCL             equ	2	;# 
   345     0003                     STATUS          equ	3	;# 
   346     0004                     FSR             equ	4	;# 
   347     0005                     PORTA           equ	5	;# 
   348     0006                     PORTB           equ	6	;# 
   349     0007                     PORTC           equ	7	;# 
   350     0008                     PORTD           equ	8	;# 
   351     0009                     PORTE           equ	9	;# 
   352     000A                     PCLATH          equ	10	;# 
   353     000B                     INTCON          equ	11	;# 
   354     000C                     PIR1            equ	12	;# 
   355     000D                     PIR2            equ	13	;# 
   356     000E                     TMR1            equ	14	;# 
   357     000E                     TMR1L           equ	14	;# 
   358     000F                     TMR1H           equ	15	;# 
   359     0010                     T1CON           equ	16	;# 
   360     0011                     TMR2            equ	17	;# 
   361     0012                     T2CON           equ	18	;# 
   362     0013                     SSPBUF          equ	19	;# 
   363     0014                     SSPCON          equ	20	;# 
   364     0015                     CCPR1           equ	21	;# 
   365     0015                     CCPR1L          equ	21	;# 
   366     0016                     CCPR1H          equ	22	;# 
   367     0017                     CCP1CON         equ	23	;# 
   368     0018                     RCSTA           equ	24	;# 
   369     0019                     TXREG           equ	25	;# 
   370     001A                     RCREG           equ	26	;# 
   371     001B                     CCPR2           equ	27	;# 
   372     001B                     CCPR2L          equ	27	;# 
   373     001C                     CCPR2H          equ	28	;# 
   374     001D                     CCP2CON         equ	29	;# 
   375     001E                     ADRESH          equ	30	;# 
   376     001F                     ADCON0          equ	31	;# 
   377     0081                     OPTION_REG      equ	129	;# 
   378     0085                     TRISA           equ	133	;# 
   379     0086                     TRISB           equ	134	;# 
   380     0087                     TRISC           equ	135	;# 
   381     0088                     TRISD           equ	136	;# 
   382     0089                     TRISE           equ	137	;# 
   383     008C                     PIE1            equ	140	;# 
   384     008D                     PIE2            equ	141	;# 
   385     008E                     PCON            equ	142	;# 
   386     0091                     SSPCON2         equ	145	;# 
   387     0092                     PR2             equ	146	;# 
   388     0093                     SSPADD          equ	147	;# 
   389     0094                     SSPSTAT         equ	148	;# 
   390     0098                     TXSTA           equ	152	;# 
   391     0099                     SPBRG           equ	153	;# 
   392     009C                     CMCON           equ	156	;# 
   393     009D                     CVRCON          equ	157	;# 
   394     009E                     ADRESL          equ	158	;# 
   395     009F                     ADCON1          equ	159	;# 
   396     010C                     EEDATA          equ	268	;# 
   397     010D                     EEADR           equ	269	;# 
   398     010E                     EEDATH          equ	270	;# 
   399     010F                     EEADRH          equ	271	;# 
   400     018C                     EECON1          equ	396	;# 
   401     018D                     EECON2          equ	397	;# 
   402     0019                     _TXREG          set	25
   403     0013                     _SSPBUF         set	19
   404     0014                     _SSPCON         set	20
   405     00C4                     _CREN           set	196
   406     00C7                     _SPEN           set	199
   407     0063                     _SSPIF          set	99
   408     0099                     _SPBRG          set	153
   409     0093                     _SSPADD         set	147
   410     0094                     _SSPSTAT        set	148
   411     0091                     _SSPCON2        set	145
   412     04C1                     _TRMT           set	1217
   413     04C5                     _TXEN           set	1221
   414     043F                     _TRISC7         set	1087
   415     043E                     _TRISC6         set	1086
   416     04C4                     _SYNC           set	1220
   417     04C2                     _BRGH           set	1218
   418     04A0                     _BF             set	1184
   419     048B                     _RCEN           set	1163
   420     048E                     _ACKSTAT        set	1166
   421     048C                     _ACKEN          set	1164
   422     048D                     _ACKDT          set	1165
   423     048A                     _PEN            set	1162
   424     0489                     _RSEN           set	1161
   425     0488                     _SEN            set	1160
   426     043C                     _TRISC4         set	1084
   427     043B                     _TRISC3         set	1083
   428                           
   429                           	psect	strings
   430     1800                     __pstrings:
   431     1800                     stringtab:
   432     1800                     __stringtab:
   433     1800                     stringcode:	
   434                           ;	String table - string pointers are 1 byte each
   435                           
   436     1800                     stringdir:
   437     1800  3018               	movlw	high stringdir
   438     1801  008A               	movwf	10
   439     1802  0804               	movf	4,w
   440     1803  0A84               	incf	4,f
   441     1804  0782               	addwf	2,f
   442     1805                     __stringbase:
   443     1805  3400               	retlw	0
   444     1806                     __end_of__stringtab:
   445     1806                     STR_1:
   446     1806  3456               	retlw	86	;'V'
   447     1807  346F               	retlw	111	;'o'
   448     1808  346C               	retlw	108	;'l'
   449     1809  3474               	retlw	116	;'t'
   450     180A  3461               	retlw	97	;'a'
   451     180B  3467               	retlw	103	;'g'
   452     180C  3465               	retlw	101	;'e'
   453     180D  343A               	retlw	58	;':'
   454     180E  3420               	retlw	32	;' '
   455     180F  3425               	retlw	37	;'%'
   456     1810  342E               	retlw	46	;'.'
   457     1811  3432               	retlw	50	;'2'
   458     1812  3466               	retlw	102	;'f'
   459     1813  3420               	retlw	32	;' '
   460     1814  346D               	retlw	109	;'m'
   461     1815  3456               	retlw	86	;'V'
   462     1816  340A               	retlw	10
   463     1817  340D               	retlw	13
   464     1818  3400               	retlw	0
   465     1819                     STR_2:
   466     1819  3469               	retlw	105	;'i'
   467     181A  346E               	retlw	110	;'n'
   468     181B  3466               	retlw	102	;'f'
   469     181C  3400               	retlw	0
   470     181D                     STR_5:
   471     181D  346E               	retlw	110	;'n'
   472     181E  3461               	retlw	97	;'a'
   473     181F  346E               	retlw	110	;'n'
   474     1820  3400               	retlw	0
   475     181D                     STR_6           equ	STR_5
   476     181D                     STR_7           equ	STR_5
   477     1819                     STR_3           equ	STR_2
   478     1819                     STR_4           equ	STR_2
   479                           
   480                           	psect	cinit
   481     07E4                     start_initialization:	
   482                           ; #config settings
   483                           
   484     07E4                     __initialization:
   485                           
   486                           ; Clear objects allocated to BANK1
   487     07E4  1683               	bsf	3,5	;RP0=1, select bank1
   488     07E5  1303               	bcf	3,6	;RP1=0, select bank1
   489     07E6  01EA               	clrf	__pbssBANK1& (0+127)
   490     07E7  01EB               	clrf	(__pbssBANK1+1)& (0+127)
   491     07E8  01EC               	clrf	(__pbssBANK1+2)& (0+127)
   492     07E9  01ED               	clrf	(__pbssBANK1+3)& (0+127)
   493     07EA  01EE               	clrf	(__pbssBANK1+4)& (0+127)
   494                           
   495                           ; Clear objects allocated to BANK3
   496     07EB  1783               	bsf	3,7	;select IRP bank2
   497     07EC  30BD               	movlw	low __pbssBANK3
   498     07ED  0084               	movwf	4
   499     07EE  30C5               	movlw	low (__pbssBANK3+8)
   500     07EF  160A  158A  24FC  120A  118A  	fcall	clear_ram0
   501                           
   502                           ; Clear objects allocated to BANK2
   503     07F4  3010               	movlw	low __pbssBANK2
   504     07F5  0084               	movwf	4
   505     07F6  3060               	movlw	low (__pbssBANK2+80)
   506     07F7  160A  158A  24FC  120A  118A  	fcall	clear_ram0
   507     07FC                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510     07FC                     __end_of__initialization:
   511     07FC  0183               	clrf	3
   512     07FD  120A  118A  2803   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssBANK1
   515     00EA                     __pbssBANK1:
   516     00EA                     _width:
   517     00EA                     	ds	2
   518     00EC                     _prec:
   519     00EC                     	ds	2
   520     00EE                     _flags:
   521     00EE                     	ds	1
   522                           
   523                           	psect	bssBANK3
   524     01BD                     __pbssBANK3:
   525     01BD                     floorf@F521:
   526     01BD                     	ds	4
   527     01C1                     ___fpclassifyf@F465:
   528     01C1                     	ds	4
   529                           
   530                           	psect	bssBANK2
   531     0110                     __pbssBANK2:
   532     0110                     _dbuf:
   533     0110                     	ds	80
   534                           
   535                           	psect	clrtext
   536     1CFC                     clear_ram0:	
   537                           ;	Called with FSR containing the base address, and
   538                           ;	W with the last address+1
   539                           
   540     1CFC  0064               	clrwdt	;clear the watchdog before getting into this loop
   541     1CFD                     clrloop0:
   542     1CFD  0180               	clrf	0	;clear RAM location pointed to by FSR
   543     1CFE  0A84               	incf	4,f	;increment pointer
   544     1CFF  0604               	xorwf	4,w	;XOR with final address
   545     1D00  1903               	btfsc	3,2	;have we reached the end yet?
   546     1D01  3400               	retlw	0	;all done for this memory range, return
   547     1D02  0604               	xorwf	4,w	;XOR again to restore value
   548     1D03  2CFD               	goto	clrloop0	;do the next byte
   549                           
   550                           	psect	cstackBANK3
   551     0190                     __pcstackBANK3:
   552     0190                     sprintf@ap:
   553                           
   554                           ; 1 bytes @ 0x0
   555     0190                     	ds	1
   556     0191                     sprintf@f:
   557                           
   558                           ; 11 bytes @ 0x1
   559     0191                     	ds	11
   560     019C                     main@buffer:
   561                           
   562                           ; 20 bytes @ 0xC
   563     019C                     	ds	20
   564     01B0                     main@voltage:
   565                           
   566                           ; 4 bytes @ 0x20
   567     01B0                     	ds	4
   568     01B4                     main@millivolts:
   569                           
   570                           ; 4 bytes @ 0x24
   571     01B4                     	ds	4
   572     01B8                     main@adc:
   573                           
   574                           ; 5 bytes @ 0x28
   575     01B8                     	ds	5
   576                           
   577                           	psect	cstackBANK1
   578     00A0                     __pcstackBANK1:
   579     00A0                     ??_efgtoa:
   580                           
   581                           ; 1 bytes @ 0x0
   582     00A0                     	ds	4
   583     00A4                     efgtoa@ne:
   584                           
   585                           ; 2 bytes @ 0x4
   586     00A4                     	ds	2
   587     00A6                     efgtoa@p:
   588                           
   589                           ; 2 bytes @ 0x6
   590     00A6                     	ds	2
   591     00A8                     efgtoa@t:
   592                           
   593                           ; 2 bytes @ 0x8
   594     00A8                     	ds	2
   595     00AA                     _efgtoa$748:
   596                           
   597                           ; 2 bytes @ 0xA
   598     00AA                     	ds	2
   599     00AC                     efgtoa@pp:
   600                           
   601                           ; 1 bytes @ 0xC
   602     00AC                     	ds	1
   603     00AD                     efgtoa@mode:
   604                           
   605                           ; 1 bytes @ 0xD
   606     00AD                     	ds	1
   607     00AE                     efgtoa@nmode:
   608                           
   609                           ; 1 bytes @ 0xE
   610     00AE                     	ds	1
   611     00AF                     efgtoa@d:
   612                           
   613                           ; 2 bytes @ 0xF
   614     00AF                     	ds	2
   615     00B1                     efgtoa@m:
   616                           
   617                           ; 2 bytes @ 0x11
   618     00B1                     	ds	2
   619     00B3                     efgtoa@e:
   620                           
   621                           ; 2 bytes @ 0x13
   622     00B3                     	ds	2
   623     00B5                     efgtoa@w:
   624                           
   625                           ; 2 bytes @ 0x15
   626     00B5                     	ds	2
   627     00B7                     efgtoa@ou:
   628                           
   629                           ; 4 bytes @ 0x17
   630     00B7                     	ds	4
   631     00BB                     efgtoa@i:
   632                           
   633                           ; 2 bytes @ 0x1B
   634     00BB                     	ds	2
   635     00BD                     efgtoa@h:
   636                           
   637                           ; 4 bytes @ 0x1D
   638     00BD                     	ds	4
   639     00C1                     efgtoa@l:
   640                           
   641                           ; 4 bytes @ 0x21
   642     00C1                     	ds	4
   643     00C5                     efgtoa@sign:
   644                           
   645                           ; 1 bytes @ 0x25
   646     00C5                     	ds	1
   647     00C6                     efgtoa@n:
   648                           
   649                           ; 2 bytes @ 0x26
   650     00C6                     	ds	2
   651     00C8                     efgtoa@g:
   652                           
   653                           ; 4 bytes @ 0x28
   654     00C8                     	ds	4
   655     00CC                     efgtoa@u:
   656                           
   657                           ; 4 bytes @ 0x2C
   658     00CC                     	ds	4
   659     00D0                     ?_vfpfcnvrt:
   660     00D0                     vfpfcnvrt@fp:	
   661                           ; 1 bytes @ 0x30
   662                           
   663                           
   664                           ; 2 bytes @ 0x30
   665     00D0                     	ds	2
   666     00D2                     vfpfcnvrt@fmt:
   667                           
   668                           ; 1 bytes @ 0x32
   669     00D2                     	ds	1
   670     00D3                     vfpfcnvrt@ap:
   671                           
   672                           ; 1 bytes @ 0x33
   673     00D3                     	ds	1
   674     00D4                     ??_vfpfcnvrt:
   675                           
   676                           ; 1 bytes @ 0x34
   677     00D4                     	ds	2
   678     00D6                     vfpfcnvrt@convarg:
   679                           
   680                           ; 4 bytes @ 0x36
   681     00D6                     	ds	4
   682     00DA                     vfpfcnvrt@c:
   683                           
   684                           ; 1 bytes @ 0x3A
   685     00DA                     	ds	1
   686     00DB                     vfpfcnvrt@cp:
   687                           
   688                           ; 1 bytes @ 0x3B
   689     00DB                     	ds	1
   690     00DC                     ?_vfprintf:
   691     00DC                     vfprintf@fp:	
   692                           ; 2 bytes @ 0x3C
   693                           
   694                           
   695                           ; 2 bytes @ 0x3C
   696     00DC                     	ds	2
   697     00DE                     vfprintf@fmt:
   698                           
   699                           ; 1 bytes @ 0x3E
   700     00DE                     	ds	1
   701     00DF                     vfprintf@ap:
   702                           
   703                           ; 1 bytes @ 0x3F
   704     00DF                     	ds	1
   705     00E0                     ?_sprintf:
   706     00E0                     sprintf@s:	
   707                           ; 2 bytes @ 0x40
   708                           
   709                           
   710                           ; 1 bytes @ 0x40
   711     00E0                     	ds	1
   712     00E1                     sprintf@fmt:
   713                           
   714                           ; 1 bytes @ 0x41
   715     00E1                     	ds	5
   716     00E6                     ??_sprintf:
   717                           
   718                           ; 1 bytes @ 0x46
   719     00E6                     	ds	1
   720     00E7                     ??_main:
   721                           
   722                           ; 1 bytes @ 0x47
   723     00E7                     	ds	3
   724                           
   725                           	psect	cstackCOMMON
   726     0070                     __pcstackCOMMON:
   727     0070                     ?_UART_TX_Init:
   728     0070                     ?_I2C_Master_Init:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ?_strcpy:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_memcpy:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ?_putch:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_main:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?_I2C_Master_Wait:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_I2C_Master_Start:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ?_I2C_Master_Stop:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ?_I2C_ACK:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ?_I2C_NACK:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ?_I2C_Master_Write:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ?_I2C_Read_Byte:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_UART_TX_Empty:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?_UART_Write:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ?___fleq:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ?__Umul8_16:	
   774                           ; 1 bit 
   775                           
   776     0070                     ?_fputc:	
   777                           ; 2 bytes @ 0x0
   778                           
   779     0070                     ?___fpclassifyf:	
   780                           ; 2 bytes @ 0x0
   781                           
   782     0070                     ?___wmul:	
   783                           ; 2 bytes @ 0x0
   784                           
   785     0070                     ?_labs:	
   786                           ; 2 bytes @ 0x0
   787                           
   788     0070                     ?___flneg:	
   789                           ; 4 bytes @ 0x0
   790                           
   791     0070                     ?___fltol:	
   792                           ; 4 bytes @ 0x0
   793                           
   794     0070                     ?___fladd:	
   795                           ; 4 bytes @ 0x0
   796                           
   797     0070                     ?___xxtofl:	
   798                           ; 4 bytes @ 0x0
   799                           
   800     0070                     I2C_Master_Write@data:	
   801                           ; 4 bytes @ 0x0
   802                           
   803     0070                     UART_Write@data:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0070                     __Umul8_16@multiplicand:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     memcpy@d1:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     putch@c:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     strcpy@dest:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ___wmul@multiplier:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     fputc@c:	
   822                           ; 2 bytes @ 0x0
   823                           
   824     0070                     ___fleq@ff1:	
   825                           ; 2 bytes @ 0x0
   826                           
   827     0070                     ___flneg@f1:	
   828                           ; 4 bytes @ 0x0
   829                           
   830     0070                     ___fltol@f1:	
   831                           ; 4 bytes @ 0x0
   832                           
   833     0070                     ___fladd@b:	
   834                           ; 4 bytes @ 0x0
   835                           
   836     0070                     ___xxtofl@val:	
   837                           ; 4 bytes @ 0x0
   838                           
   839     0070                     ___fpclassifyf@x:	
   840                           ; 4 bytes @ 0x0
   841                           
   842     0070                     labs@a:	
   843                           ; 4 bytes @ 0x0
   844                           
   845     0070                     ??_UART_TX_Init:	
   846                           ; 4 bytes @ 0x0
   847                           
   848     0070                     ??_I2C_Master_Init:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     0070                     ??_putch:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0070                     ??_I2C_Master_Wait:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0070                     ??_I2C_Master_Start:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0070                     ??_I2C_Master_Stop:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0070                     ??_I2C_ACK:	
   864                           ; 1 bytes @ 0x0
   865                           
   866     0070                     ??_I2C_NACK:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0070                     ??_I2C_Master_Write:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0070                     ??_I2C_Read_Byte:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0070                     ??_UART_TX_Empty:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ??_UART_Write:	
   879                           ; 1 bytes @ 0x0
   880                           
   881                           
   882                           ; 1 bytes @ 0x0
   883     0070                     	ds	1
   884     0071                     ?_MCP3421_Init:
   885     0071                     ?_UART_Write_Text:	
   886                           ; 1 bytes @ 0x1
   887                           
   888     0071                     ?_MCP3421_Ready:	
   889                           ; 1 bytes @ 0x1
   890                           
   891     0071                     ?_MCP3421_GetLong:	
   892                           ; 2 bytes @ 0x1
   893                           
   894     0071                     UART_Write_Text@text:	
   895                           ; 4 bytes @ 0x1
   896                           
   897     0071                     memcpy@s1:	
   898                           ; 1 bytes @ 0x1
   899                           
   900     0071                     strcpy@src:	
   901                           ; 1 bytes @ 0x1
   902                           
   903     0071                     MCP3421_Init@adc:	
   904                           ; 1 bytes @ 0x1
   905                           
   906     0071                     MCP3421_GetLong@adc:	
   907                           ; 2 bytes @ 0x1
   908                           
   909     0071                     MCP3421_Ready@adc:	
   910                           ; 2 bytes @ 0x1
   911                           
   912                           
   913                           ; 2 bytes @ 0x1
   914     0071                     	ds	1
   915     0072                     strcpy@d:
   916     0072                     ___wmul@multiplicand:	
   917                           ; 1 bytes @ 0x2
   918                           
   919     0072                     memcpy@n:	
   920                           ; 2 bytes @ 0x2
   921                           
   922     0072                     fputc@fp:	
   923                           ; 2 bytes @ 0x2
   924                           
   925     0072                     ??_UART_Write_Text:	
   926                           ; 2 bytes @ 0x2
   927                           
   928     0072                     ??__Umul8_16:	
   929                           ; 1 bytes @ 0x2
   930                           
   931     0072                     ??_strcpy:	
   932                           ; 1 bytes @ 0x2
   933                           
   934                           
   935                           ; 1 bytes @ 0x2
   936     0072                     	ds	1
   937     0073                     MCP3421_Init@address:
   938     0073                     ??_MCP3421_Ready:	
   939                           ; 2 bytes @ 0x3
   940                           
   941                           
   942                           ; 1 bytes @ 0x3
   943     0073                     	ds	1
   944     0074                     memcpy@tmp:
   945     0074                     ___wmul@product:	
   946                           ; 1 bytes @ 0x4
   947                           
   948     0074                     __Umul8_16@product:	
   949                           ; 2 bytes @ 0x4
   950                           
   951     0074                     ___fleq@ff2:	
   952                           ; 2 bytes @ 0x4
   953                           
   954     0074                     ___fladd@a:	
   955                           ; 4 bytes @ 0x4
   956                           
   957     0074                     ??_fputc:	
   958                           ; 4 bytes @ 0x4
   959                           
   960     0074                     ??___fpclassifyf:	
   961                           ; 1 bytes @ 0x4
   962                           
   963     0074                     ??_labs:	
   964                           ; 1 bytes @ 0x4
   965                           
   966     0074                     ??_memcpy:	
   967                           ; 1 bytes @ 0x4
   968                           
   969     0074                     ??___wmul:	
   970                           ; 1 bytes @ 0x4
   971                           
   972     0074                     ??___flneg:	
   973                           ; 1 bytes @ 0x4
   974                           
   975     0074                     ??___fltol:	
   976                           ; 1 bytes @ 0x4
   977                           
   978     0074                     ??___xxtofl:	
   979                           ; 1 bytes @ 0x4
   980                           
   981                           
   982                           ; 1 bytes @ 0x4
   983     0074                     	ds	1
   984     0075                     MCP3421_Init@sr:
   985     0075                     MCP3421_GetLong@b4:	
   986                           ; 1 bytes @ 0x5
   987                           
   988     0075                     MCP3421_Ready@confRead:	
   989                           ; 1 bytes @ 0x5
   990                           
   991     0075                     memcpy@d:	
   992                           ; 1 bytes @ 0x5
   993                           
   994                           
   995                           ; 1 bytes @ 0x5
   996     0075                     	ds	1
   997     0076                     ?_read_prec_or_width:
   998     0076                     MCP3421_Init@pga:	
   999                           ; 2 bytes @ 0x6
  1000                           
  1001     0076                     read_prec_or_width@fmt:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004     0076                     memcpy@s:	
  1005                           ; 1 bytes @ 0x6
  1006                           
  1007     0076                     __Umul8_16@word_mpld:	
  1008                           ; 1 bytes @ 0x6
  1009                           
  1010     0076                     MCP3421_GetLong@result:	
  1011                           ; 2 bytes @ 0x6
  1012                           
  1013                           
  1014                           ; 4 bytes @ 0x6
  1015     0076                     	ds	1
  1016     0077                     read_prec_or_width@ap:
  1017                           
  1018                           ; 1 bytes @ 0x7
  1019     0077                     	ds	1
  1020     0078                     ___fltol@sign1:
  1021     0078                     ___fladd@signs:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024     0078                     __Umul8_16@multiplier:	
  1025                           ; 1 bytes @ 0x8
  1026                           
  1027     0078                     ___xxtofl@sign:	
  1028                           ; 1 bytes @ 0x8
  1029                           
  1030     0078                     read_prec_or_width@c:	
  1031                           ; 1 bytes @ 0x8
  1032                           
  1033     0078                     ??___fleq:	
  1034                           ; 1 bytes @ 0x8
  1035                           
  1036     0078                     ??_read_prec_or_width:	
  1037                           ; 1 bytes @ 0x8
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x8
  1041     0078                     	ds	1
  1042     0079                     ___fltol@exp1:
  1043     0079                     ___fladd@aexp:	
  1044                           ; 1 bytes @ 0x9
  1045                           
  1046     0079                     ___xxtofl@exp:	
  1047                           ; 1 bytes @ 0x9
  1048                           
  1049     0079                     read_prec_or_width@n:	
  1050                           ; 1 bytes @ 0x9
  1051                           
  1052                           
  1053                           ; 2 bytes @ 0x9
  1054     0079                     	ds	1
  1055     007A                     MCP3421_GetLong@b3:
  1056     007A                     ___fladd@bexp:	
  1057                           ; 1 bytes @ 0xA
  1058                           
  1059     007A                     ___xxtofl@arg:	
  1060                           ; 1 bytes @ 0xA
  1061                           
  1062                           
  1063                           ; 4 bytes @ 0xA
  1064     007A                     	ds	1
  1065     007B                     MCP3421_GetLong@b2:
  1066     007B                     ___fladd@grs:	
  1067                           ; 1 bytes @ 0xB
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0xB
  1071     007B                     	ds	2
  1072     007D                     ??_pad:
  1073                           
  1074                           ; 1 bytes @ 0xD
  1075     007D                     	ds	1
  1076     007E                     ??_vfprintf:
  1077     007E                     ??___flsub:	
  1078                           ; 1 bytes @ 0xE
  1079                           
  1080                           
  1081                           	psect	cstackBANK0
  1082     0020                     __pcstackBANK0:	
  1083                           ; 1 bytes @ 0xE
  1084                           
  1085     0020                     ?_fputs:
  1086     0020                     ?___flmul:	
  1087                           ; 2 bytes @ 0x0
  1088                           
  1089     0020                     fputs@s:	
  1090                           ; 4 bytes @ 0x0
  1091                           
  1092     0020                     ___fpclassifyf@e:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095     0020                     ___flmul@b:	
  1096                           ; 2 bytes @ 0x0
  1097                           
  1098     0020                     ??_MCP3421_Init:	
  1099                           ; 4 bytes @ 0x0
  1100                           
  1101     0020                     ??_MCP3421_GetLong:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104     0020                     ??___fladd:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x0
  1109     0020                     	ds	1
  1110     0021                     fputs@fp:
  1111                           
  1112                           ; 2 bytes @ 0x1
  1113     0021                     	ds	1
  1114     0022                     ___fpclassifyf@u:
  1115                           
  1116                           ; 4 bytes @ 0x2
  1117     0022                     	ds	1
  1118     0023                     ??_fputs:
  1119                           
  1120                           ; 1 bytes @ 0x3
  1121     0023                     	ds	1
  1122     0024                     ___flmul@a:
  1123                           
  1124                           ; 4 bytes @ 0x4
  1125     0024                     	ds	1
  1126     0025                     fputs@c:
  1127                           
  1128                           ; 1 bytes @ 0x5
  1129     0025                     	ds	1
  1130     0026                     fputs@i:
  1131                           
  1132                           ; 2 bytes @ 0x6
  1133     0026                     	ds	2
  1134     0028                     ?_pad:
  1135     0028                     pad@fp:	
  1136                           ; 1 bytes @ 0x8
  1137                           
  1138     0028                     ??___flmul:	
  1139                           ; 2 bytes @ 0x8
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x8
  1143     0028                     	ds	2
  1144     002A                     pad@buf:
  1145                           
  1146                           ; 1 bytes @ 0xA
  1147     002A                     	ds	1
  1148     002B                     pad@p:
  1149                           
  1150                           ; 2 bytes @ 0xB
  1151     002B                     	ds	2
  1152     002D                     ___flmul@sign:
  1153     002D                     pad@i:	
  1154                           ; 1 bytes @ 0xD
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0xD
  1158     002D                     	ds	1
  1159     002E                     ___flmul@grs:
  1160                           
  1161                           ; 4 bytes @ 0xE
  1162     002E                     	ds	4
  1163     0032                     ___flmul@aexp:
  1164                           
  1165                           ; 1 bytes @ 0x12
  1166     0032                     	ds	1
  1167     0033                     ___flmul@bexp:
  1168                           
  1169                           ; 1 bytes @ 0x13
  1170     0033                     	ds	1
  1171     0034                     ___flmul@prod:
  1172                           
  1173                           ; 4 bytes @ 0x14
  1174     0034                     	ds	4
  1175     0038                     ___flmul@temp:
  1176                           
  1177                           ; 2 bytes @ 0x18
  1178     0038                     	ds	2
  1179     003A                     ?___flge:
  1180     003A                     ?___flsub:	
  1181                           ; 1 bit 
  1182                           
  1183     003A                     ?___fldiv:	
  1184                           ; 4 bytes @ 0x1A
  1185                           
  1186     003A                     ___flge@ff1:	
  1187                           ; 4 bytes @ 0x1A
  1188                           
  1189     003A                     ___flsub@a:	
  1190                           ; 4 bytes @ 0x1A
  1191                           
  1192     003A                     ___fldiv@a:	
  1193                           ; 4 bytes @ 0x1A
  1194                           
  1195                           
  1196                           ; 4 bytes @ 0x1A
  1197     003A                     	ds	4
  1198     003E                     ___flge@ff2:
  1199     003E                     ___flsub@b:	
  1200                           ; 4 bytes @ 0x1E
  1201                           
  1202     003E                     ___fldiv@b:	
  1203                           ; 4 bytes @ 0x1E
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x1E
  1207     003E                     	ds	4
  1208     0042                     ??___flge:
  1209     0042                     ??___fldiv:	
  1210                           ; 1 bytes @ 0x22
  1211                           
  1212                           
  1213                           ; 1 bytes @ 0x22
  1214     0042                     	ds	5
  1215     0047                     ___fldiv@rem:
  1216                           
  1217                           ; 4 bytes @ 0x27
  1218     0047                     	ds	4
  1219     004B                     ___fldiv@sign:
  1220                           
  1221                           ; 1 bytes @ 0x2B
  1222     004B                     	ds	1
  1223     004C                     ___fldiv@new_exp:
  1224                           
  1225                           ; 2 bytes @ 0x2C
  1226     004C                     	ds	2
  1227     004E                     ___fldiv@grs:
  1228                           
  1229                           ; 4 bytes @ 0x2E
  1230     004E                     	ds	4
  1231     0052                     ___fldiv@bexp:
  1232                           
  1233                           ; 1 bytes @ 0x32
  1234     0052                     	ds	1
  1235     0053                     ___fldiv@aexp:
  1236                           
  1237                           ; 1 bytes @ 0x33
  1238     0053                     	ds	1
  1239     0054                     ?_MCP3421_GetDouble:
  1240     0054                     ?_floorf:	
  1241                           ; 4 bytes @ 0x34
  1242                           
  1243     0054                     MCP3421_GetDouble@adc:	
  1244                           ; 4 bytes @ 0x34
  1245                           
  1246     0054                     floorf@x:	
  1247                           ; 2 bytes @ 0x34
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x34
  1251     0054                     	ds	4
  1252     0058                     ??_MCP3421_GetDouble:
  1253     0058                     ??_floorf:	
  1254                           ; 1 bytes @ 0x38
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x38
  1258     0058                     	ds	6
  1259     005E                     MCP3421_GetDouble@raw:
  1260     005E                     floorf@m:	
  1261                           ; 4 bytes @ 0x3E
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0x3E
  1265     005E                     	ds	4
  1266     0062                     floorf@e:
  1267     0062                     MCP3421_GetDouble@voltage:	
  1268                           ; 2 bytes @ 0x42
  1269                           
  1270                           
  1271                           ; 4 bytes @ 0x42
  1272     0062                     	ds	2
  1273     0064                     floorf@u:
  1274                           
  1275                           ; 4 bytes @ 0x44
  1276     0064                     	ds	4
  1277     0068                     ?_efgtoa:
  1278     0068                     efgtoa@fp:	
  1279                           ; 1 bytes @ 0x48
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x48
  1283     0068                     	ds	2
  1284     006A                     efgtoa@f:
  1285                           
  1286                           ; 4 bytes @ 0x4A
  1287     006A                     	ds	4
  1288     006E                     efgtoa@c:
  1289                           
  1290                           ; 1 bytes @ 0x4E
  1291     006E                     	ds	1
  1292     006F                     vfprintf@cfmt:
  1293                           
  1294                           ; 1 bytes @ 0x4F
  1295     006F                     	ds	1
  1296                           
  1297                           	psect	maintext
  1298     0003                     __pmaintext:	
  1299 ;;
  1300 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1301 ;;
  1302 ;; *************** function _main *****************
  1303 ;; Defined at:
  1304 ;;		line 7 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  buffer         20   12[BANK3 ] unsigned char [20]
  1309 ;;  millivolts      4   36[BANK3 ] unsigned char [20]
  1310 ;;  voltage         4   32[BANK3 ] unsigned char [20]
  1311 ;;  adc             5   40[BANK3 ] struct .
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : B00/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0      33       0
  1323 ;;      Temps:          0       0       3       0       0
  1324 ;;      Totals:         0       0       3      33       0
  1325 ;;Total ram usage:       36 bytes
  1326 ;; Hardware stack levels required when called: 8
  1327 ;; This function calls:
  1328 ;;		_I2C_Master_Init
  1329 ;;		_MCP3421_GetDouble
  1330 ;;		_MCP3421_Init
  1331 ;;		_MCP3421_Ready
  1332 ;;		_UART_TX_Init
  1333 ;;		_UART_Write_Text
  1334 ;;		___flmul
  1335 ;;		_sprintf
  1336 ;; This function is called by:
  1337 ;;		Startup code after reset
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341     0003                     _main:	
  1342                           ;psect for function _main
  1343                           
  1344     0003                     l3314:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1347                           
  1348                           
  1349                           ;main.c: 9:     UART_TX_Init();
  1350     0003  160A  158A  2568  120A  118A  	fcall	_UART_TX_Init
  1351                           
  1352                           ;main.c: 10:     I2C_Master_Init();
  1353     0008  160A  158A  252E  120A  118A  	fcall	_I2C_Master_Init
  1354     000D                     l3316:
  1355                           
  1356                           ;main.c: 13:     MCP3421 adc;;main.c: 14:     MCP3421_Init(&adc, 0x68, 2, 0);
  1357     000D  30B8               	movlw	low main@adc
  1358     000E  00F1               	movwf	MCP3421_Init@adc
  1359     000F  3001               	movlw	high main@adc
  1360     0010  00F2               	movwf	MCP3421_Init@adc+1
  1361     0011  3068               	movlw	104
  1362     0012  00F3               	movwf	MCP3421_Init@address
  1363     0013  3000               	movlw	0
  1364     0014  00F4               	movwf	MCP3421_Init@address+1
  1365     0015  3002               	movlw	2
  1366     0016  00F5               	movwf	MCP3421_Init@sr
  1367     0017  01F6               	clrf	MCP3421_Init@pga
  1368     0018  160A  118A  2261  120A  118A  	fcall	_MCP3421_Init
  1369     001D                     l3318:
  1370                           
  1371                           ;main.c: 19:         if (MCP3421_Ready(&adc)) {
  1372     001D  30B8               	movlw	low main@adc
  1373     001E  00F1               	movwf	MCP3421_Ready@adc
  1374     001F  3001               	movlw	high main@adc
  1375     0020  00F2               	movwf	MCP3421_Ready@adc+1
  1376     0021  160A  158A  26D2  120A  118A  	fcall	_MCP3421_Ready
  1377     0026  0871               	movf	?_MCP3421_Ready,w
  1378     0027  0472               	iorwf	?_MCP3421_Ready+1,w
  1379     0028  1903               	btfsc	3,2
  1380     0029  282B               	goto	u4841
  1381     002A  282C               	goto	u4840
  1382     002B                     u4841:
  1383     002B  281D               	goto	l3318
  1384     002C                     u4840:
  1385     002C                     l3320:
  1386                           
  1387                           ;main.c: 21:             double voltage = MCP3421_GetDouble(&adc);
  1388     002C  30B8               	movlw	low main@adc
  1389     002D  1283               	bcf	3,5	;RP0=0, select bank0
  1390     002E  1303               	bcf	3,6	;RP1=0, select bank0
  1391     002F  00D4               	movwf	MCP3421_GetDouble@adc
  1392     0030  3001               	movlw	high main@adc
  1393     0031  00D5               	movwf	MCP3421_GetDouble@adc+1
  1394     0032  160A  118A  2405  120A  118A  	fcall	_MCP3421_GetDouble
  1395     0037  1283               	bcf	3,5	;RP0=0, select bank0
  1396     0038  1303               	bcf	3,6	;RP1=0, select bank0
  1397     0039  0857               	movf	?_MCP3421_GetDouble+3,w
  1398     003A  1683               	bsf	3,5	;RP0=1, select bank3
  1399     003B  1703               	bsf	3,6	;RP1=1, select bank3
  1400     003C  00B3               	movwf	(main@voltage+3)^(0+384)
  1401     003D  1283               	bcf	3,5	;RP0=0, select bank0
  1402     003E  1303               	bcf	3,6	;RP1=0, select bank0
  1403     003F  0856               	movf	?_MCP3421_GetDouble+2,w
  1404     0040  1683               	bsf	3,5	;RP0=1, select bank3
  1405     0041  1703               	bsf	3,6	;RP1=1, select bank3
  1406     0042  00B2               	movwf	(main@voltage+2)^(0+384)
  1407     0043  1283               	bcf	3,5	;RP0=0, select bank0
  1408     0044  1303               	bcf	3,6	;RP1=0, select bank0
  1409     0045  0855               	movf	?_MCP3421_GetDouble+1,w
  1410     0046  1683               	bsf	3,5	;RP0=1, select bank3
  1411     0047  1703               	bsf	3,6	;RP1=1, select bank3
  1412     0048  00B1               	movwf	(main@voltage+1)^(0+384)
  1413     0049  1283               	bcf	3,5	;RP0=0, select bank0
  1414     004A  1303               	bcf	3,6	;RP1=0, select bank0
  1415     004B  0854               	movf	?_MCP3421_GetDouble,w
  1416     004C  1683               	bsf	3,5	;RP0=1, select bank3
  1417     004D  1703               	bsf	3,6	;RP1=1, select bank3
  1418     004E  00B0               	movwf	main@voltage^(0+384)
  1419     004F                     l3322:
  1420                           
  1421                           ;main.c: 22:             double millivolts = voltage*1000;
  1422     004F  3044               	movlw	68
  1423     0050  1283               	bcf	3,5	;RP0=0, select bank0
  1424     0051  1303               	bcf	3,6	;RP1=0, select bank0
  1425     0052  00A3               	movwf	___flmul@b+3
  1426     0053  307A               	movlw	122
  1427     0054  00A2               	movwf	___flmul@b+2
  1428     0055  3000               	movlw	0
  1429     0056  00A1               	movwf	___flmul@b+1
  1430     0057  3000               	movlw	0
  1431     0058  00A0               	movwf	___flmul@b
  1432     0059  1683               	bsf	3,5	;RP0=1, select bank3
  1433     005A  1703               	bsf	3,6	;RP1=1, select bank3
  1434     005B  0833               	movf	(main@voltage+3)^(0+384),w
  1435     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1436     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1437     005E  00A7               	movwf	___flmul@a+3
  1438     005F  1683               	bsf	3,5	;RP0=1, select bank3
  1439     0060  1703               	bsf	3,6	;RP1=1, select bank3
  1440     0061  0832               	movf	(main@voltage+2)^(0+384),w
  1441     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1442     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1443     0064  00A6               	movwf	___flmul@a+2
  1444     0065  1683               	bsf	3,5	;RP0=1, select bank3
  1445     0066  1703               	bsf	3,6	;RP1=1, select bank3
  1446     0067  0831               	movf	(main@voltage+1)^(0+384),w
  1447     0068  1283               	bcf	3,5	;RP0=0, select bank0
  1448     0069  1303               	bcf	3,6	;RP1=0, select bank0
  1449     006A  00A5               	movwf	___flmul@a+1
  1450     006B  1683               	bsf	3,5	;RP0=1, select bank3
  1451     006C  1703               	bsf	3,6	;RP1=1, select bank3
  1452     006D  0830               	movf	main@voltage^(0+384),w
  1453     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1454     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1455     0070  00A4               	movwf	___flmul@a
  1456     0071  120A  158A  24BE  120A  118A  	fcall	___flmul
  1457     0076  1283               	bcf	3,5	;RP0=0, select bank0
  1458     0077  1303               	bcf	3,6	;RP1=0, select bank0
  1459     0078  0823               	movf	?___flmul+3,w
  1460     0079  1683               	bsf	3,5	;RP0=1, select bank3
  1461     007A  1703               	bsf	3,6	;RP1=1, select bank3
  1462     007B  00B7               	movwf	(main@millivolts+3)^(0+384)
  1463     007C  1283               	bcf	3,5	;RP0=0, select bank0
  1464     007D  1303               	bcf	3,6	;RP1=0, select bank0
  1465     007E  0822               	movf	?___flmul+2,w
  1466     007F  1683               	bsf	3,5	;RP0=1, select bank3
  1467     0080  1703               	bsf	3,6	;RP1=1, select bank3
  1468     0081  00B6               	movwf	(main@millivolts+2)^(0+384)
  1469     0082  1283               	bcf	3,5	;RP0=0, select bank0
  1470     0083  1303               	bcf	3,6	;RP1=0, select bank0
  1471     0084  0821               	movf	?___flmul+1,w
  1472     0085  1683               	bsf	3,5	;RP0=1, select bank3
  1473     0086  1703               	bsf	3,6	;RP1=1, select bank3
  1474     0087  00B5               	movwf	(main@millivolts+1)^(0+384)
  1475     0088  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0089  1303               	bcf	3,6	;RP1=0, select bank0
  1477     008A  0820               	movf	?___flmul,w
  1478     008B  1683               	bsf	3,5	;RP0=1, select bank3
  1479     008C  1703               	bsf	3,6	;RP1=1, select bank3
  1480     008D  00B4               	movwf	main@millivolts^(0+384)
  1481     008E                     l3324:
  1482                           
  1483                           ;main.c: 24:             char buffer[20];;main.c: 25:             sprintf(buffer, "Volta
      +                          ge: %.2f mV\n\r", millivolts);
  1484     008E  309C               	movlw	(low (main@buffer| (0+256)))& (0+255)
  1485     008F  1683               	bsf	3,5	;RP0=1, select bank1
  1486     0090  1303               	bcf	3,6	;RP1=0, select bank1
  1487     0091  00E0               	movwf	sprintf@s^(0+128)
  1488     0092  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1489     0093  00E1               	movwf	sprintf@fmt^(0+128)
  1490     0094  1683               	bsf	3,5	;RP0=1, select bank3
  1491     0095  1703               	bsf	3,6	;RP1=1, select bank3
  1492     0096  0837               	movf	(main@millivolts+3)^(0+384),w
  1493     0097  1683               	bsf	3,5	;RP0=1, select bank1
  1494     0098  1303               	bcf	3,6	;RP1=0, select bank1
  1495     0099  00E5               	movwf	((?_sprintf+3)^(0+128)+2)
  1496     009A  1683               	bsf	3,5	;RP0=1, select bank3
  1497     009B  1703               	bsf	3,6	;RP1=1, select bank3
  1498     009C  0836               	movf	(main@millivolts+2)^(0+384),w
  1499     009D  1683               	bsf	3,5	;RP0=1, select bank1
  1500     009E  1303               	bcf	3,6	;RP1=0, select bank1
  1501     009F  00E4               	movwf	((?_sprintf+2)^(0+128)+2)
  1502     00A0  1683               	bsf	3,5	;RP0=1, select bank3
  1503     00A1  1703               	bsf	3,6	;RP1=1, select bank3
  1504     00A2  0835               	movf	(main@millivolts+1)^(0+384),w
  1505     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1506     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1507     00A5  00E3               	movwf	((?_sprintf+1)^(0+128)+2)
  1508     00A6  1683               	bsf	3,5	;RP0=1, select bank3
  1509     00A7  1703               	bsf	3,6	;RP1=1, select bank3
  1510     00A8  0834               	movf	main@millivolts^(0+384),w
  1511     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1512     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1513     00AB  00E2               	movwf	(?_sprintf^(0+128)+2)
  1514     00AC  160A  158A  26A7  120A  118A  	fcall	_sprintf
  1515     00B1                     l3326:
  1516                           
  1517                           ;main.c: 26:             UART_Write_Text(buffer);
  1518     00B1  309C               	movlw	(low (main@buffer| (0+256)))& (0+255)
  1519     00B2  00F1               	movwf	UART_Write_Text@text
  1520     00B3  160A  158A  257A  120A  118A  	fcall	_UART_Write_Text
  1521     00B8                     l3328:
  1522                           
  1523                           ;main.c: 29:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1524     00B8  3015               	movlw	21
  1525     00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1526     00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1527     00BB  00E9               	movwf	(??_main^(0+128)+2)
  1528     00BC  304B               	movlw	75
  1529     00BD  00E8               	movwf	(??_main^(0+128)+1)
  1530     00BE  30BD               	movlw	189
  1531     00BF  00E7               	movwf	??_main^(0+128)
  1532     00C0                     u4857:
  1533     00C0  0BE7               	decfsz	??_main^(0+128),f
  1534     00C1  28C0               	goto	u4857
  1535     00C2  0BE8               	decfsz	(??_main^(0+128)+1),f
  1536     00C3  28C0               	goto	u4857
  1537     00C4  0BE9               	decfsz	(??_main^(0+128)+2),f
  1538     00C5  28C0               	goto	u4857
  1539     00C6  28C7               	nop2
  1540     00C7  281D               	goto	l3318
  1541     00C8  120A  118A  2800   	ljmp	start
  1542     00CB                     __end_of_main:
  1543                           
  1544                           	psect	text1
  1545     1EA7                     __ptext1:	
  1546 ;; *************** function _sprintf *****************
  1547 ;; Defined at:
  1548 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  s               1   64[BANK1 ] PTR unsigned char 
  1551 ;;		 -> main@buffer(20), 
  1552 ;;  fmt             1   65[BANK1 ] PTR const unsigned char 
  1553 ;;		 -> STR_1(19), 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  f              11    1[BANK3 ] struct _IO_FILE
  1556 ;;  ret             2    0        int 
  1557 ;;  ap              1    0[BANK3 ] PTR void [1]
  1558 ;;		 -> ?_sprintf(2), 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2   64[BANK1 ] int 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       6       0       0
  1569 ;;      Locals:         0       0       0      12       0
  1570 ;;      Temps:          0       0       1       0       0
  1571 ;;      Totals:         0       0       7      12       0
  1572 ;;Total ram usage:       19 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 7
  1575 ;; This function calls:
  1576 ;;		_vfprintf
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582     1EA7                     _sprintf:	
  1583                           ;psect for function _sprintf
  1584                           
  1585     1EA7                     l3292:	
  1586                           ;incstack = 0
  1587                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1588                           
  1589     1EA7  30E2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1590     1EA8  1683               	bsf	3,5	;RP0=1, select bank3
  1591     1EA9  1703               	bsf	3,6	;RP1=1, select bank3
  1592     1EAA  0090               	movwf	sprintf@ap^(0+384)
  1593     1EAB                     l3294:
  1594     1EAB  1683               	bsf	3,5	;RP0=1, select bank1
  1595     1EAC  1303               	bcf	3,6	;RP1=0, select bank1
  1596     1EAD  0860               	movf	sprintf@s^(0+128),w
  1597     1EAE  1683               	bsf	3,5	;RP0=1, select bank3
  1598     1EAF  1703               	bsf	3,6	;RP1=1, select bank3
  1599     1EB0  0091               	movwf	sprintf@f^(0+384)
  1600     1EB1  3001               	movlw	1
  1601     1EB2  0092               	movwf	(sprintf@f+1)^(0+384)
  1602     1EB3                     l3296:
  1603     1EB3  0193               	clrf	(sprintf@f^(0+384)+2)
  1604     1EB4  0194               	clrf	((sprintf@f+1)^(0+384)+2)
  1605     1EB5                     l3298:
  1606     1EB5  019A               	clrf	(sprintf@f^(0+384)+9)
  1607     1EB6  019B               	clrf	((sprintf@f+1)^(0+384)+9)
  1608     1EB7                     l3300:
  1609     1EB7  3091               	movlw	low sprintf@f
  1610     1EB8  1683               	bsf	3,5	;RP0=1, select bank1
  1611     1EB9  1303               	bcf	3,6	;RP1=0, select bank1
  1612     1EBA  00DC               	movwf	vfprintf@fp^(0+128)
  1613     1EBB  3001               	movlw	high sprintf@f
  1614     1EBC  00DD               	movwf	(vfprintf@fp^(0+128)+1)
  1615     1EBD  0861               	movf	sprintf@fmt^(0+128),w
  1616     1EBE  00DE               	movwf	vfprintf@fmt^(0+128)
  1617     1EBF  3090               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  1618     1EC0  00DF               	movwf	vfprintf@ap^(0+128)
  1619     1EC1  160A  158A  2653  160A  158A  	fcall	_vfprintf
  1620     1EC6                     l3302:
  1621     1EC6  1683               	bsf	3,5	;RP0=1, select bank3
  1622     1EC7  1703               	bsf	3,6	;RP1=1, select bank3
  1623     1EC8  0813               	movf	(sprintf@f^(0+384)+2),w
  1624     1EC9  1683               	bsf	3,5	;RP0=1, select bank1
  1625     1ECA  1303               	bcf	3,6	;RP1=0, select bank1
  1626     1ECB  0760               	addwf	sprintf@s^(0+128),w
  1627     1ECC  00E6               	movwf	??_sprintf^(0+128)
  1628     1ECD  0866               	movf	??_sprintf^(0+128),w
  1629     1ECE  0084               	movwf	4
  1630     1ECF  1783               	bsf	3,7	;select IRP bank2
  1631     1ED0  0180               	clrf	0
  1632     1ED1                     l708:
  1633     1ED1  0008               	return
  1634     1ED2                     __end_of_sprintf:
  1635                           
  1636                           	psect	text2
  1637     1E53                     __ptext2:	
  1638 ;; *************** function _vfprintf *****************
  1639 ;; Defined at:
  1640 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  fp              2   60[BANK1 ] PTR struct _IO_FILE
  1643 ;;		 -> sprintf@f(11), 
  1644 ;;  fmt             1   62[BANK1 ] PTR const unsigned char 
  1645 ;;		 -> STR_1(19), 
  1646 ;;  ap              1   63[BANK1 ] PTR PTR void 
  1647 ;;		 -> sprintf@ap(1), 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  cfmt            1   79[BANK0 ] PTR unsigned char 
  1650 ;;		 -> STR_1(19), 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2   60[BANK1 ] int 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         0       0       4       0       0
  1661 ;;      Locals:         0       1       0       0       0
  1662 ;;      Temps:          0       0       0       0       0
  1663 ;;      Totals:         0       1       4       0       0
  1664 ;;Total ram usage:        5 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 6
  1667 ;; This function calls:
  1668 ;;		_vfpfcnvrt
  1669 ;; This function is called by:
  1670 ;;		_sprintf
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674     1E53                     _vfprintf:	
  1675                           ;psect for function _vfprintf
  1676                           
  1677     1E53                     l3226:	
  1678                           ;incstack = 0
  1679 ;; using string table level
  1680                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1681                           
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1684     1E53  1683               	bsf	3,5	;RP0=1, select bank1
  1685     1E54  1303               	bcf	3,6	;RP1=0, select bank1
  1686     1E55  085E               	movf	vfprintf@fmt^(0+128),w
  1687     1E56  1283               	bcf	3,5	;RP0=0, select bank0
  1688     1E57  1303               	bcf	3,6	;RP1=0, select bank0
  1689     1E58  00EF               	movwf	vfprintf@cfmt
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1692     1E59  2E69               	goto	l3230
  1693     1E5A                     l3228:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1696     1E5A  1683               	bsf	3,5	;RP0=1, select bank1
  1697     1E5B  1303               	bcf	3,6	;RP1=0, select bank1
  1698     1E5C  085C               	movf	vfprintf@fp^(0+128),w
  1699     1E5D  00D0               	movwf	vfpfcnvrt@fp^(0+128)
  1700     1E5E  085D               	movf	(vfprintf@fp+1)^(0+128),w
  1701     1E5F  00D1               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  1702     1E60  306F               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1703     1E61  00D2               	movwf	vfpfcnvrt@fmt^(0+128)
  1704     1E62  085F               	movf	vfprintf@ap^(0+128),w
  1705     1E63  00D3               	movwf	vfpfcnvrt@ap^(0+128)
  1706     1E64  160A  118A  24DF  160A  158A  	fcall	_vfpfcnvrt
  1707     1E69                     l3230:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1710     1E69  1283               	bcf	3,5	;RP0=0, select bank0
  1711     1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  1712     1E6B  086F               	movf	vfprintf@cfmt,w
  1713     1E6C  0084               	movwf	4
  1714     1E6D  160A  158A  2000  160A  158A  	fcall	stringdir
  1715     1E72  3A00               	xorlw	0
  1716     1E73  1D03               	skipz
  1717     1E74  2E76               	goto	u4771
  1718     1E75  2E77               	goto	u4770
  1719     1E76                     u4771:
  1720     1E76  2E5A               	goto	l3228
  1721     1E77                     u4770:
  1722     1E77                     l3232:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1725     1E77  1683               	bsf	3,5	;RP0=1, select bank1
  1726     1E78  1303               	bcf	3,6	;RP1=0, select bank1
  1727     1E79  01DC               	clrf	?_vfprintf^(0+128)
  1728     1E7A  01DD               	clrf	(?_vfprintf+1)^(0+128)
  1729     1E7B                     l826:
  1730     1E7B  0008               	return
  1731     1E7C                     __end_of_vfprintf:
  1732                           
  1733                           	psect	text3
  1734     14DF                     __ptext3:	
  1735 ;; *************** function _vfpfcnvrt *****************
  1736 ;; Defined at:
  1737 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  fp              2   48[BANK1 ] PTR struct _IO_FILE
  1740 ;;		 -> sprintf@f(11), 
  1741 ;;  fmt             1   50[BANK1 ] PTR PTR unsigned char 
  1742 ;;		 -> vfprintf@cfmt(1), 
  1743 ;;  ap              1   51[BANK1 ] PTR PTR void 
  1744 ;;		 -> sprintf@ap(1), 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  convarg         4   54[BANK1 ] struct .
  1747 ;;  cp              1   59[BANK1 ] PTR unsigned char 
  1748 ;;		 -> STR_1(19), 
  1749 ;;  c               1   58[BANK1 ] unsigned char 
  1750 ;;  done            1    0        _Bool 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       4       0       0
  1761 ;;      Locals:         0       0       6       0       0
  1762 ;;      Temps:          0       0       2       0       0
  1763 ;;      Totals:         0       0      12       0       0
  1764 ;;Total ram usage:       12 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 5
  1767 ;; This function calls:
  1768 ;;		_efgtoa
  1769 ;;		_fputc
  1770 ;;		_read_prec_or_width
  1771 ;; This function is called by:
  1772 ;;		_vfprintf
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776     14DF                     _vfpfcnvrt:	
  1777                           ;psect for function _vfpfcnvrt
  1778                           
  1779     14DF                     l3096:	
  1780                           ;incstack = 0
  1781 ;; using string table level
  1782                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1783                           
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1786     14DF  1683               	bsf	3,5	;RP0=1, select bank1
  1787     14E0  1303               	bcf	3,6	;RP1=0, select bank1
  1788     14E1  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  1789     14E2  0084               	movwf	4
  1790     14E3  1383               	bcf	3,7	;select IRP bank0
  1791     14E4  0800               	movf	0,w
  1792     14E5  0084               	movwf	4
  1793     14E6  160A  158A  2000  160A  118A  	fcall	stringdir
  1794     14EB  3A25               	xorlw	37
  1795     14EC  1D03               	skipz
  1796     14ED  2CEF               	goto	u4561
  1797     14EE  2CF0               	goto	u4560
  1798     14EF                     u4561:
  1799     14EF  2DCC               	goto	l3146
  1800     14F0                     u4560:
  1801     14F0                     l3098:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1804     14F0  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  1805     14F1  0084               	movwf	4
  1806     14F2  3001               	movlw	1
  1807     14F3  0780               	addwf	0,f
  1808     14F4                     l3100:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1811     14F4  01EA               	clrf	_width^(0+128)
  1812     14F5  01EB               	clrf	(_width+1)^(0+128)
  1813     14F6  3000               	movlw	0
  1814     14F7  00EE               	movwf	_flags^(0+128)
  1815     14F8                     l3102:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1818     14F8  30FF               	movlw	255
  1819     14F9  00EC               	movwf	_prec^(0+128)
  1820     14FA  30FF               	movlw	255
  1821     14FB  00ED               	movwf	(_prec^(0+128)+1)
  1822     14FC                     l3104:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1825     14FC  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  1826     14FD  0084               	movwf	4
  1827     14FE  0800               	movf	0,w
  1828     14FF  0084               	movwf	4
  1829     1500  160A  158A  2000  160A  118A  	fcall	stringdir
  1830     1505  3A2E               	xorlw	46
  1831     1506  1D03               	skipz
  1832     1507  2D09               	goto	u4571
  1833     1508  2D0A               	goto	u4570
  1834     1509                     u4571:
  1835     1509  2D1D               	goto	l3110
  1836     150A                     u4570:
  1837     150A                     l3106:
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1840     150A  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  1841     150B  0084               	movwf	4
  1842     150C  3001               	movlw	1
  1843     150D  0780               	addwf	0,f
  1844     150E                     l3108:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1847     150E  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  1848     150F  00F6               	movwf	read_prec_or_width@fmt
  1849     1510  0853               	movf	vfpfcnvrt@ap^(0+128),w
  1850     1511  00F7               	movwf	read_prec_or_width@ap
  1851     1512  160A  118A  201A  160A  118A  	fcall	_read_prec_or_width
  1852     1517  0877               	movf	?_read_prec_or_width+1,w
  1853     1518  1683               	bsf	3,5	;RP0=1, select bank1
  1854     1519  1303               	bcf	3,6	;RP1=0, select bank1
  1855     151A  00ED               	movwf	(_prec+1)^(0+128)
  1856     151B  0876               	movf	?_read_prec_or_width,w
  1857     151C  00EC               	movwf	_prec^(0+128)
  1858     151D                     l3110:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1861     151D  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  1862     151E  0084               	movwf	4
  1863     151F  1383               	bcf	3,7	;select IRP bank0
  1864     1520  0800               	movf	0,w
  1865     1521  00DB               	movwf	vfpfcnvrt@cp^(0+128)
  1866     1522                     l3112:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1869     1522  085B               	movf	vfpfcnvrt@cp^(0+128),w
  1870     1523  0084               	movwf	4
  1871     1524  160A  158A  2000  160A  118A  	fcall	stringdir
  1872     1529  00DA               	movwf	vfpfcnvrt@c^(0+128)
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1875     152A  2D33               	goto	l3120
  1876     152B                     l3114:
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1879     152B  3001               	movlw	1
  1880     152C  07DB               	addwf	vfpfcnvrt@cp^(0+128),f
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
  1883     152D  2D3E               	goto	l3122
  1884     152E                     l808:	
  1885                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  1886                           
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1889     152E  306C               	movlw	108
  1890     152F  00DA               	movwf	vfpfcnvrt@c^(0+128)
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
  1893     1530  2D3E               	goto	l3122
  1894     1531                     l3116:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1897     1531  01DA               	clrf	vfpfcnvrt@c^(0+128)
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
  1900     1532  2D3E               	goto	l3122
  1901     1533                     l3120:
  1902     1533  085A               	movf	vfpfcnvrt@c^(0+128),w
  1903                           
  1904                           ; Switch size 1, requested type "simple"
  1905                           ; Number of cases is 3, Range of values is 76 to 108
  1906                           ; switch strategies available:
  1907                           ; Name         Instructions Cycles
  1908                           ; simple_byte           10     6 (average)
  1909                           ; direct_byte          110    11 (fixed)
  1910                           ; jumptable            263     9 (fixed)
  1911                           ;	Chosen strategy is simple_byte
  1912     1534  3A4C               	xorlw	76	; case 76
  1913     1535  1903               	skipnz
  1914     1536  2D2B               	goto	l3114
  1915     1537  3A2A               	xorlw	42	; case 102
  1916     1538  1903               	skipnz
  1917     1539  2D2E               	goto	l808
  1918     153A  3A0A               	xorlw	10	; case 108
  1919     153B  1903               	skipnz
  1920     153C  2D2B               	goto	l3114
  1921     153D  2D31               	goto	l3116
  1922     153E                     l3122:
  1923     153E  085B               	movf	vfpfcnvrt@cp^(0+128),w
  1924     153F  0084               	movwf	4
  1925     1540  160A  158A  2000  160A  118A  	fcall	stringdir
  1926     1545  3A66               	xorlw	102
  1927     1546  1D03               	skipz
  1928     1547  2D49               	goto	u4581
  1929     1548  2D4A               	goto	u4580
  1930     1549                     u4581:
  1931     1549  2DC4               	goto	l3142
  1932     154A                     u4580:
  1933     154A  2D77               	goto	l3130
  1934     154B                     l3124:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1937     154B  0853               	movf	vfpfcnvrt@ap^(0+128),w
  1938     154C  0084               	movwf	4
  1939     154D  1783               	bsf	3,7	;select IRP bank2
  1940     154E  0800               	movf	0,w
  1941     154F  00FF               	movwf	btemp+1
  1942     1550  3004               	movlw	4
  1943     1551  0780               	addwf	0,f
  1944     1552  087F               	movf	btemp+1,w
  1945     1553  0084               	movwf	4
  1946     1554  1383               	bcf	3,7	;select IRP bank0
  1947     1555  0800               	movf	0,w
  1948     1556  00D6               	movwf	vfpfcnvrt@convarg^(0+128)
  1949     1557  0A84               	incf	4,f
  1950     1558  0800               	movf	0,w
  1951     1559  00D7               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  1952     155A  0A84               	incf	4,f
  1953     155B  0800               	movf	0,w
  1954     155C  00D8               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  1955     155D  0A84               	incf	4,f
  1956     155E  0800               	movf	0,w
  1957     155F  00D9               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
  1960     1560  2D7F               	goto	l3132
  1961     1561                     l3126:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1964     1561  0853               	movf	vfpfcnvrt@ap^(0+128),w
  1965     1562  0084               	movwf	4
  1966     1563  1783               	bsf	3,7	;select IRP bank2
  1967     1564  0800               	movf	0,w
  1968     1565  00FF               	movwf	btemp+1
  1969     1566  3004               	movlw	4
  1970     1567  0780               	addwf	0,f
  1971     1568  087F               	movf	btemp+1,w
  1972     1569  0084               	movwf	4
  1973     156A  1383               	bcf	3,7	;select IRP bank0
  1974     156B  0800               	movf	0,w
  1975     156C  00D6               	movwf	vfpfcnvrt@convarg^(0+128)
  1976     156D  0A84               	incf	4,f
  1977     156E  0800               	movf	0,w
  1978     156F  00D7               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  1979     1570  0A84               	incf	4,f
  1980     1571  0800               	movf	0,w
  1981     1572  00D8               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  1982     1573  0A84               	incf	4,f
  1983     1574  0800               	movf	0,w
  1984     1575  00D9               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
  1987     1576  2D7F               	goto	l3132
  1988     1577                     l3130:
  1989     1577  085A               	movf	vfpfcnvrt@c^(0+128),w
  1990                           
  1991                           ; Switch size 1, requested type "simple"
  1992                           ; Number of cases is 2, Range of values is 76 to 108
  1993                           ; switch strategies available:
  1994                           ; Name         Instructions Cycles
  1995                           ; simple_byte            7     4 (average)
  1996                           ; direct_byte          110    11 (fixed)
  1997                           ; jumptable            263     9 (fixed)
  1998                           ;	Chosen strategy is simple_byte
  1999     1578  3A4C               	xorlw	76	; case 76
  2000     1579  1903               	skipnz
  2001     157A  2D61               	goto	l3126
  2002     157B  3A20               	xorlw	32	; case 108
  2003     157C  1903               	skipnz
  2004     157D  2D4B               	goto	l3124
  2005     157E  2D7F               	goto	l3132
  2006     157F                     l3132:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2009     157F  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  2010     1580  0084               	movwf	4
  2011     1581  085B               	movf	vfpfcnvrt@cp^(0+128),w
  2012     1582  3E01               	addlw	1
  2013     1583  0080               	movwf	0
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2016     1584  2DB9               	goto	l3140
  2017     1585                     l3134:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2020     1585  0850               	movf	vfpfcnvrt@fp^(0+128),w
  2021     1586  1283               	bcf	3,5	;RP0=0, select bank0
  2022     1587  1303               	bcf	3,6	;RP1=0, select bank0
  2023     1588  00E8               	movwf	efgtoa@fp
  2024     1589  1683               	bsf	3,5	;RP0=1, select bank1
  2025     158A  1303               	bcf	3,6	;RP1=0, select bank1
  2026     158B  0851               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2027     158C  1283               	bcf	3,5	;RP0=0, select bank0
  2028     158D  1303               	bcf	3,6	;RP1=0, select bank0
  2029     158E  00E9               	movwf	efgtoa@fp+1
  2030     158F  1683               	bsf	3,5	;RP0=1, select bank1
  2031     1590  1303               	bcf	3,6	;RP1=0, select bank1
  2032     1591  0859               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  2033     1592  1283               	bcf	3,5	;RP0=0, select bank0
  2034     1593  1303               	bcf	3,6	;RP1=0, select bank0
  2035     1594  00ED               	movwf	efgtoa@f+3
  2036     1595  1683               	bsf	3,5	;RP0=1, select bank1
  2037     1596  1303               	bcf	3,6	;RP1=0, select bank1
  2038     1597  0858               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  2039     1598  1283               	bcf	3,5	;RP0=0, select bank0
  2040     1599  1303               	bcf	3,6	;RP1=0, select bank0
  2041     159A  00EC               	movwf	efgtoa@f+2
  2042     159B  1683               	bsf	3,5	;RP0=1, select bank1
  2043     159C  1303               	bcf	3,6	;RP1=0, select bank1
  2044     159D  0857               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  2045     159E  1283               	bcf	3,5	;RP0=0, select bank0
  2046     159F  1303               	bcf	3,6	;RP1=0, select bank0
  2047     15A0  00EB               	movwf	efgtoa@f+1
  2048     15A1  1683               	bsf	3,5	;RP0=1, select bank1
  2049     15A2  1303               	bcf	3,6	;RP1=0, select bank1
  2050     15A3  0856               	movf	vfpfcnvrt@convarg^(0+128),w
  2051     15A4  1283               	bcf	3,5	;RP0=0, select bank0
  2052     15A5  1303               	bcf	3,6	;RP1=0, select bank0
  2053     15A6  00EA               	movwf	efgtoa@f
  2054     15A7  1683               	bsf	3,5	;RP0=1, select bank1
  2055     15A8  1303               	bcf	3,6	;RP1=0, select bank1
  2056     15A9  085B               	movf	vfpfcnvrt@cp^(0+128),w
  2057     15AA  0084               	movwf	4
  2058     15AB  160A  158A  2000  160A  118A  	fcall	stringdir
  2059     15B0  1283               	bcf	3,5	;RP0=0, select bank0
  2060     15B1  1303               	bcf	3,6	;RP1=0, select bank0
  2061     15B2  00EE               	movwf	efgtoa@c
  2062     15B3  160A  118A  25E6  160A  118A  	fcall	_efgtoa
  2063     15B8  2DE5               	goto	l819
  2064     15B9                     l3140:
  2065     15B9  085B               	movf	vfpfcnvrt@cp^(0+128),w
  2066     15BA  0084               	movwf	4
  2067     15BB  160A  158A  2000  160A  118A  	fcall	stringdir
  2068                           
  2069                           ; Switch size 1, requested type "simple"
  2070                           ; Number of cases is 1, Range of values is 102 to 102
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte            4     3 (average)
  2074                           ; direct_byte           14    11 (fixed)
  2075                           ; jumptable            263     9 (fixed)
  2076                           ;	Chosen strategy is simple_byte
  2077     15C0  3A66               	xorlw	102	; case 102
  2078     15C1  1903               	skipnz
  2079     15C2  2D85               	goto	l3134
  2080     15C3  2DC4               	goto	l3142
  2081     15C4                     l3142:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2084     15C4  1683               	bsf	3,5	;RP0=1, select bank1
  2085     15C5  1303               	bcf	3,6	;RP1=0, select bank1
  2086     15C6  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  2087     15C7  0084               	movwf	4
  2088     15C8  3001               	movlw	1
  2089     15C9  1383               	bcf	3,7	;select IRP bank0
  2090     15CA  0780               	addwf	0,f
  2091     15CB  2DE5               	goto	l819
  2092     15CC                     l3146:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2095     15CC  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  2096     15CD  0084               	movwf	4
  2097     15CE  0800               	movf	0,w
  2098     15CF  0084               	movwf	4
  2099     15D0  160A  158A  2000  160A  118A  	fcall	stringdir
  2100     15D5  00D4               	movwf	??_vfpfcnvrt^(0+128)
  2101     15D6  01D5               	clrf	(??_vfpfcnvrt^(0+128)+1)
  2102     15D7  0854               	movf	??_vfpfcnvrt^(0+128),w
  2103     15D8  00F0               	movwf	fputc@c
  2104     15D9  0855               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2105     15DA  00F1               	movwf	fputc@c+1
  2106     15DB  0850               	movf	vfpfcnvrt@fp^(0+128),w
  2107     15DC  00F2               	movwf	fputc@fp
  2108     15DD  0851               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2109     15DE  00F3               	movwf	fputc@fp+1
  2110     15DF  160A  118A  206F  160A  118A  	fcall	_fputc
  2111     15E4  2DC4               	goto	l3142
  2112     15E5                     l819:
  2113     15E5  0008               	return
  2114     15E6                     __end_of_vfpfcnvrt:
  2115                           
  2116                           	psect	text4
  2117     101A                     __ptext4:	
  2118 ;; *************** function _read_prec_or_width *****************
  2119 ;; Defined at:
  2120 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  2123 ;;		 -> vfprintf@cfmt(1), 
  2124 ;;  ap              1    7[COMMON] PTR PTR void [1]
  2125 ;;		 -> sprintf@ap(1), 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  c               1    8[COMMON] unsigned char 
  2128 ;;  n               2    9[COMMON] int 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  2    6[COMMON] int 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         2       0       0       0       0
  2139 ;;      Locals:         3       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         5       0       0       0       0
  2142 ;;Total ram usage:        5 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		___wmul
  2147 ;; This function is called by:
  2148 ;;		_vfpfcnvrt
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152     101A                     _read_prec_or_width:	
  2153                           ;psect for function _read_prec_or_width
  2154                           
  2155     101A                     l3034:	
  2156                           ;incstack = 0
  2157                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2158                           
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2161     101A  01F9               	clrf	read_prec_or_width@n
  2162     101B  01FA               	clrf	read_prec_or_width@n+1
  2163     101C                     l3036:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2166     101C  0876               	movf	read_prec_or_width@fmt,w
  2167     101D  0084               	movwf	4
  2168     101E  1383               	bcf	3,7	;select IRP bank0
  2169     101F  0800               	movf	0,w
  2170     1020  0084               	movwf	4
  2171     1021  160A  158A  2000  160A  118A  	fcall	stringdir
  2172     1026  3A2A               	xorlw	42
  2173     1027  1D03               	skipz
  2174     1028  282A               	goto	u4511
  2175     1029  282B               	goto	u4510
  2176     102A                     u4511:
  2177     102A  2859               	goto	l3046
  2178     102B                     u4510:
  2179     102B                     l3038:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2182     102B  0876               	movf	read_prec_or_width@fmt,w
  2183     102C  0084               	movwf	4
  2184     102D  3001               	movlw	1
  2185     102E  0780               	addwf	0,f
  2186     102F                     l3040:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2189     102F  0877               	movf	read_prec_or_width@ap,w
  2190     1030  0084               	movwf	4
  2191     1031  1783               	bsf	3,7	;select IRP bank2
  2192     1032  0800               	movf	0,w
  2193     1033  00FF               	movwf	btemp+1
  2194     1034  3002               	movlw	2
  2195     1035  0780               	addwf	0,f
  2196     1036  087F               	movf	btemp+1,w
  2197     1037  0084               	movwf	4
  2198     1038  1383               	bcf	3,7	;select IRP bank0
  2199     1039  0800               	movf	0,w
  2200     103A  00F9               	movwf	read_prec_or_width@n
  2201     103B  0A84               	incf	4,f
  2202     103C  0800               	movf	0,w
  2203     103D  00FA               	movwf	read_prec_or_width@n+1
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2206     103E  286A               	goto	l3048
  2207     103F                     l3042:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2210     103F  087A               	movf	read_prec_or_width@n+1,w
  2211     1040  00F1               	movwf	___wmul@multiplier+1
  2212     1041  0879               	movf	read_prec_or_width@n,w
  2213     1042  00F0               	movwf	___wmul@multiplier
  2214     1043  300A               	movlw	10
  2215     1044  00F2               	movwf	___wmul@multiplicand
  2216     1045  3000               	movlw	0
  2217     1046  00F3               	movwf	___wmul@multiplicand+1
  2218     1047  160A  158A  2607  160A  118A  	fcall	___wmul
  2219     104C  0878               	movf	read_prec_or_width@c,w
  2220     104D  0770               	addwf	?___wmul,w
  2221     104E  00F9               	movwf	read_prec_or_width@n
  2222     104F  3000               	movlw	0
  2223     1050  1803               	skipnc
  2224     1051  3001               	movlw	1
  2225     1052  0771               	addwf	?___wmul+1,w
  2226     1053  00FA               	movwf	read_prec_or_width@n+1
  2227     1054                     l3044:
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2230     1054  0876               	movf	read_prec_or_width@fmt,w
  2231     1055  0084               	movwf	4
  2232     1056  3001               	movlw	1
  2233     1057  1383               	bcf	3,7	;select IRP bank0
  2234     1058  0780               	addwf	0,f
  2235     1059                     l3046:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2238     1059  0876               	movf	read_prec_or_width@fmt,w
  2239     105A  0084               	movwf	4
  2240     105B  0800               	movf	0,w
  2241     105C  0084               	movwf	4
  2242     105D  160A  158A  2000  160A  118A  	fcall	stringdir
  2243     1062  3ED0               	addlw	208
  2244     1063  00F8               	movwf	read_prec_or_width@c
  2245     1064  300A               	movlw	10
  2246     1065  0278               	subwf	read_prec_or_width@c,w
  2247     1066  1C03               	skipc
  2248     1067  2869               	goto	u4521
  2249     1068  286A               	goto	u4520
  2250     1069                     u4521:
  2251     1069  283F               	goto	l3042
  2252     106A                     u4520:
  2253     106A                     l3048:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2256     106A  087A               	movf	read_prec_or_width@n+1,w
  2257     106B  00F7               	movwf	?_read_prec_or_width+1
  2258     106C  0879               	movf	read_prec_or_width@n,w
  2259     106D  00F6               	movwf	?_read_prec_or_width
  2260     106E                     l799:
  2261     106E  0008               	return
  2262     106F                     __end_of_read_prec_or_width:
  2263                           
  2264                           	psect	text5
  2265     1E07                     __ptext5:	
  2266 ;; *************** function ___wmul *****************
  2267 ;; Defined at:
  2268 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  multiplier      2    0[COMMON] unsigned int 
  2271 ;;  multiplicand    2    2[COMMON] unsigned int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  product         2    4[COMMON] unsigned int 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2    0[COMMON] unsigned int 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         4       0       0       0       0
  2284 ;;      Locals:         2       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         6       0       0       0       0
  2287 ;;Total ram usage:        6 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_read_prec_or_width
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296     1E07                     ___wmul:	
  2297                           ;psect for function ___wmul
  2298                           
  2299     1E07                     l2348:	
  2300                           ;incstack = 0
  2301                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2302                           
  2303     1E07  01F4               	clrf	___wmul@product
  2304     1E08  01F5               	clrf	___wmul@product+1
  2305     1E09                     l2350:
  2306     1E09  1C70               	btfss	___wmul@multiplier,0
  2307     1E0A  2E0C               	goto	u2981
  2308     1E0B  2E0D               	goto	u2980
  2309     1E0C                     u2981:
  2310     1E0C  2E13               	goto	l245
  2311     1E0D                     u2980:
  2312     1E0D                     l2352:
  2313     1E0D  0872               	movf	___wmul@multiplicand,w
  2314     1E0E  07F4               	addwf	___wmul@product,f
  2315     1E0F  1803               	skipnc
  2316     1E10  0AF5               	incf	___wmul@product+1,f
  2317     1E11  0873               	movf	___wmul@multiplicand+1,w
  2318     1E12  07F5               	addwf	___wmul@product+1,f
  2319     1E13                     l245:
  2320     1E13  3001               	movlw	1
  2321     1E14                     u2995:
  2322     1E14  1003               	clrc
  2323     1E15  0DF2               	rlf	___wmul@multiplicand,f
  2324     1E16  0DF3               	rlf	___wmul@multiplicand+1,f
  2325     1E17  3EFF               	addlw	-1
  2326     1E18  1D03               	skipz
  2327     1E19  2E14               	goto	u2995
  2328     1E1A                     l2354:
  2329     1E1A  3001               	movlw	1
  2330     1E1B                     u3005:
  2331     1E1B  1003               	clrc
  2332     1E1C  0CF1               	rrf	___wmul@multiplier+1,f
  2333     1E1D  0CF0               	rrf	___wmul@multiplier,f
  2334     1E1E  3EFF               	addlw	-1
  2335     1E1F  1D03               	skipz
  2336     1E20  2E1B               	goto	u3005
  2337     1E21                     l2356:
  2338     1E21  0870               	movf	___wmul@multiplier,w
  2339     1E22  0471               	iorwf	___wmul@multiplier+1,w
  2340     1E23  1D03               	btfss	3,2
  2341     1E24  2E26               	goto	u3011
  2342     1E25  2E27               	goto	u3010
  2343     1E26                     u3011:
  2344     1E26  2E09               	goto	l2350
  2345     1E27                     u3010:
  2346     1E27                     l2358:
  2347     1E27  0875               	movf	___wmul@product+1,w
  2348     1E28  00F1               	movwf	?___wmul+1
  2349     1E29  0874               	movf	___wmul@product,w
  2350     1E2A  00F0               	movwf	?___wmul
  2351     1E2B                     l247:
  2352     1E2B  0008               	return
  2353     1E2C                     __end_of___wmul:
  2354                           
  2355                           	psect	text6
  2356     15E6                     __ptext6:	
  2357 ;; *************** function _efgtoa *****************
  2358 ;; Defined at:
  2359 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2362 ;;		 -> sprintf@f(11), 
  2363 ;;  f               4   74[BANK0 ] PTR struct _IO_FILE
  2364 ;;  c               1   78[BANK0 ] unsigned char 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  u               4   44[BANK1 ] struct flui
  2367 ;;  g               4   40[BANK1 ] struct flui
  2368 ;;  l               4   33[BANK1 ] struct flui
  2369 ;;  h               4   29[BANK1 ] struct flui
  2370 ;;  ou              4   23[BANK1 ] struct flui
  2371 ;;  n               2   38[BANK1 ] int 
  2372 ;;  i               2   27[BANK1 ] int 
  2373 ;;  w               2   21[BANK1 ] int 
  2374 ;;  e               2   19[BANK1 ] int 
  2375 ;;  m               2   17[BANK1 ] int 
  2376 ;;  d               2   15[BANK1 ] int 
  2377 ;;  t               2    8[BANK1 ] int 
  2378 ;;  p               2    6[BANK1 ] int 
  2379 ;;  ne              2    4[BANK1 ] int 
  2380 ;;  sign            1   37[BANK1 ] unsigned char 
  2381 ;;  nmode           1   14[BANK1 ] unsigned char 
  2382 ;;  mode            1   13[BANK1 ] unsigned char 
  2383 ;;  pp              1   12[BANK1 ] unsigned char 
  2384 ;;  esign           1    0        unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       7       0       0       0
  2395 ;;      Locals:         0       0      44       0       0
  2396 ;;      Temps:          0       0       4       0       0
  2397 ;;      Totals:         0       7      48       0       0
  2398 ;;Total ram usage:       55 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 4
  2401 ;; This function calls:
  2402 ;;		___fladd
  2403 ;;		___fldiv
  2404 ;;		___fleq
  2405 ;;		___flge
  2406 ;;		___flmul
  2407 ;;		___flneg
  2408 ;;		___flsub
  2409 ;;		___fltol
  2410 ;;		___fpclassifyf
  2411 ;;		_floorf
  2412 ;;		_labs
  2413 ;;		_memcpy
  2414 ;;		_pad
  2415 ;;		_strcpy
  2416 ;; This function is called by:
  2417 ;;		_vfpfcnvrt
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     15E6                     _efgtoa:	
  2422                           ;psect for function _efgtoa
  2423                           
  2424     15E6                     l2820:	
  2425                           ;incstack = 0
  2426                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2427                           
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2430     15E6  1683               	bsf	3,5	;RP0=1, select bank1
  2431     15E7  1303               	bcf	3,6	;RP1=0, select bank1
  2432     15E8  01C5               	clrf	efgtoa@sign^(0+128)
  2433     15E9                     l2822:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2436     15E9  1283               	bcf	3,5	;RP0=0, select bank0
  2437     15EA  1303               	bcf	3,6	;RP1=0, select bank0
  2438     15EB  086D               	movf	efgtoa@f+3,w
  2439     15EC  1683               	bsf	3,5	;RP0=1, select bank1
  2440     15ED  1303               	bcf	3,6	;RP1=0, select bank1
  2441     15EE  00CB               	movwf	(efgtoa@g+3)^(0+128)
  2442     15EF  1283               	bcf	3,5	;RP0=0, select bank0
  2443     15F0  1303               	bcf	3,6	;RP1=0, select bank0
  2444     15F1  086C               	movf	efgtoa@f+2,w
  2445     15F2  1683               	bsf	3,5	;RP0=1, select bank1
  2446     15F3  1303               	bcf	3,6	;RP1=0, select bank1
  2447     15F4  00CA               	movwf	(efgtoa@g+2)^(0+128)
  2448     15F5  1283               	bcf	3,5	;RP0=0, select bank0
  2449     15F6  1303               	bcf	3,6	;RP1=0, select bank0
  2450     15F7  086B               	movf	efgtoa@f+1,w
  2451     15F8  1683               	bsf	3,5	;RP0=1, select bank1
  2452     15F9  1303               	bcf	3,6	;RP1=0, select bank1
  2453     15FA  00C9               	movwf	(efgtoa@g+1)^(0+128)
  2454     15FB  1283               	bcf	3,5	;RP0=0, select bank0
  2455     15FC  1303               	bcf	3,6	;RP1=0, select bank0
  2456     15FD  086A               	movf	efgtoa@f,w
  2457     15FE  1683               	bsf	3,5	;RP0=1, select bank1
  2458     15FF  1303               	bcf	3,6	;RP1=0, select bank1
  2459     1600  00C8               	movwf	efgtoa@g^(0+128)
  2460     1601                     l2824:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2463     1601  084B               	movf	(efgtoa@g+3)^(0+128),w
  2464     1602  1283               	bcf	3,5	;RP0=0, select bank0
  2465     1603  1303               	bcf	3,6	;RP1=0, select bank0
  2466     1604  00BD               	movwf	___flge@ff1+3
  2467     1605  1683               	bsf	3,5	;RP0=1, select bank1
  2468     1606  1303               	bcf	3,6	;RP1=0, select bank1
  2469     1607  084A               	movf	(efgtoa@g+2)^(0+128),w
  2470     1608  1283               	bcf	3,5	;RP0=0, select bank0
  2471     1609  1303               	bcf	3,6	;RP1=0, select bank0
  2472     160A  00BC               	movwf	___flge@ff1+2
  2473     160B  1683               	bsf	3,5	;RP0=1, select bank1
  2474     160C  1303               	bcf	3,6	;RP1=0, select bank1
  2475     160D  0849               	movf	(efgtoa@g+1)^(0+128),w
  2476     160E  1283               	bcf	3,5	;RP0=0, select bank0
  2477     160F  1303               	bcf	3,6	;RP1=0, select bank0
  2478     1610  00BB               	movwf	___flge@ff1+1
  2479     1611  1683               	bsf	3,5	;RP0=1, select bank1
  2480     1612  1303               	bcf	3,6	;RP1=0, select bank1
  2481     1613  0848               	movf	efgtoa@g^(0+128),w
  2482     1614  1283               	bcf	3,5	;RP0=0, select bank0
  2483     1615  1303               	bcf	3,6	;RP1=0, select bank0
  2484     1616  00BA               	movwf	___flge@ff1
  2485     1617  3000               	movlw	0
  2486     1618  00C1               	movwf	___flge@ff2+3
  2487     1619  3000               	movlw	0
  2488     161A  00C0               	movwf	___flge@ff2+2
  2489     161B  3000               	movlw	0
  2490     161C  00BF               	movwf	___flge@ff2+1
  2491     161D  3000               	movlw	0
  2492     161E  00BE               	movwf	___flge@ff2
  2493     161F  160A  118A  2109  160A  118A  	fcall	___flge
  2494     1624  1803               	btfsc	3,0
  2495     1625  2E27               	goto	u4161
  2496     1626  2E28               	goto	u4160
  2497     1627                     u4161:
  2498     1627  2E43               	goto	l2830
  2499     1628                     u4160:
  2500     1628                     l2826:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2503     1628  3001               	movlw	1
  2504     1629  1683               	bsf	3,5	;RP0=1, select bank1
  2505     162A  1303               	bcf	3,6	;RP1=0, select bank1
  2506     162B  00C5               	movwf	efgtoa@sign^(0+128)
  2507     162C                     l2828:
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2510     162C  084B               	movf	(efgtoa@g+3)^(0+128),w
  2511     162D  00F3               	movwf	___flneg@f1+3
  2512     162E  084A               	movf	(efgtoa@g+2)^(0+128),w
  2513     162F  00F2               	movwf	___flneg@f1+2
  2514     1630  0849               	movf	(efgtoa@g+1)^(0+128),w
  2515     1631  00F1               	movwf	___flneg@f1+1
  2516     1632  0848               	movf	efgtoa@g^(0+128),w
  2517     1633  00F0               	movwf	___flneg@f1
  2518     1634  120A  158A  2000  160A  118A  	fcall	___flneg
  2519     1639  0873               	movf	?___flneg+3,w
  2520     163A  1683               	bsf	3,5	;RP0=1, select bank1
  2521     163B  1303               	bcf	3,6	;RP1=0, select bank1
  2522     163C  00CB               	movwf	(efgtoa@g+3)^(0+128)
  2523     163D  0872               	movf	?___flneg+2,w
  2524     163E  00CA               	movwf	(efgtoa@g+2)^(0+128)
  2525     163F  0871               	movf	?___flneg+1,w
  2526     1640  00C9               	movwf	(efgtoa@g+1)^(0+128)
  2527     1641  0870               	movf	?___flneg,w
  2528     1642  00C8               	movwf	efgtoa@g^(0+128)
  2529     1643                     l2830:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2532     1643  1683               	bsf	3,5	;RP0=1, select bank1
  2533     1644  1303               	bcf	3,6	;RP1=0, select bank1
  2534     1645  01C6               	clrf	efgtoa@n^(0+128)
  2535     1646  01C7               	clrf	(efgtoa@n+1)^(0+128)
  2536     1647                     l2832:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2539     1647  086B               	movf	(_width+1)^(0+128),w
  2540     1648  00B6               	movwf	(efgtoa@w+1)^(0+128)
  2541     1649  086A               	movf	_width^(0+128),w
  2542     164A  00B5               	movwf	efgtoa@w^(0+128)
  2543     164B                     l2834:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2546     164B  0845               	movf	efgtoa@sign^(0+128),w
  2547     164C  1903               	btfsc	3,2
  2548     164D  2E4F               	goto	u4171
  2549     164E  2E50               	goto	u4170
  2550     164F                     u4171:
  2551     164F  2E60               	goto	l2842
  2552     1650                     u4170:
  2553     1650                     l2836:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2556     1650  0845               	movf	efgtoa@sign^(0+128),w
  2557     1651  1D03               	btfss	3,2
  2558     1652  2E54               	goto	u4181
  2559     1653  2E55               	goto	u4180
  2560     1654                     u4181:
  2561     1654  2E5A               	goto	l2840
  2562     1655                     u4180:
  2563     1655                     l2838:
  2564     1655  302B               	movlw	43
  2565     1656  00AA               	movwf	_efgtoa$748^(0+128)
  2566     1657  3000               	movlw	0
  2567     1658  00AB               	movwf	(_efgtoa$748^(0+128)+1)
  2568     1659  2E5E               	goto	l747
  2569     165A                     l2840:
  2570     165A  302D               	movlw	45
  2571     165B  00AA               	movwf	_efgtoa$748^(0+128)
  2572     165C  3000               	movlw	0
  2573     165D  00AB               	movwf	(_efgtoa$748^(0+128)+1)
  2574     165E                     l747:
  2575     165E  082A               	movf	_efgtoa$748^(0+128),w
  2576     165F  00C5               	movwf	efgtoa@sign^(0+128)
  2577     1660                     l2842:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2580     1660  084B               	movf	(efgtoa@g+3)^(0+128),w
  2581     1661  00F3               	movwf	___fpclassifyf@x+3
  2582     1662  084A               	movf	(efgtoa@g+2)^(0+128),w
  2583     1663  00F2               	movwf	___fpclassifyf@x+2
  2584     1664  0849               	movf	(efgtoa@g+1)^(0+128),w
  2585     1665  00F1               	movwf	___fpclassifyf@x+1
  2586     1666  0848               	movf	efgtoa@g^(0+128),w
  2587     1667  00F0               	movwf	___fpclassifyf@x
  2588     1668  120A  158A  200B  160A  118A  	fcall	___fpclassifyf
  2589     166D  0370               	decf	?___fpclassifyf,w
  2590     166E  0471               	iorwf	?___fpclassifyf+1,w
  2591     166F  1D03               	btfss	3,2
  2592     1670  2E72               	goto	u4191
  2593     1671  2E73               	goto	u4190
  2594     1672                     u4191:
  2595     1672  2EB8               	goto	l2856
  2596     1673                     u4190:
  2597     1673                     l2844:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2600     1673  1683               	bsf	3,5	;RP0=1, select bank1
  2601     1674  1303               	bcf	3,6	;RP1=0, select bank1
  2602     1675  0845               	movf	efgtoa@sign^(0+128),w
  2603     1676  1903               	btfsc	3,2
  2604     1677  2E79               	goto	u4201
  2605     1678  2E7A               	goto	u4200
  2606     1679                     u4201:
  2607     1679  2E8A               	goto	l2848
  2608     167A                     u4200:
  2609     167A                     l2846:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2612     167A  0845               	movf	efgtoa@sign^(0+128),w
  2613     167B  1283               	bcf	3,5	;RP0=0, select bank2
  2614     167C  1703               	bsf	3,6	;RP1=1, select bank2
  2615     167D  0090               	movwf	_dbuf^(0+256)
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
  2618     167E  30FF               	movlw	255
  2619     167F  1683               	bsf	3,5	;RP0=1, select bank1
  2620     1680  1303               	bcf	3,6	;RP1=0, select bank1
  2621     1681  07B5               	addwf	efgtoa@w^(0+128),f
  2622     1682  1803               	skipnc
  2623     1683  0AB6               	incf	(efgtoa@w+1)^(0+128),f
  2624     1684  30FF               	movlw	255
  2625     1685  07B6               	addwf	(efgtoa@w+1)^(0+128),f
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2628     1686  3001               	movlw	1
  2629     1687  00C6               	movwf	efgtoa@n^(0+128)
  2630     1688  3000               	movlw	0
  2631     1689  00C7               	movwf	(efgtoa@n^(0+128)+1)
  2632     168A                     l2848:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2635     168A  0846               	movf	efgtoa@n^(0+128),w
  2636     168B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2637     168C  00F0               	movwf	strcpy@dest
  2638     168D  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2639     168E  00F1               	movwf	strcpy@src
  2640     168F  160A  118A  2001  160A  118A  	fcall	_strcpy
  2641     1694                     l2850:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2644     1694  30FD               	movlw	253
  2645     1695  1683               	bsf	3,5	;RP0=1, select bank1
  2646     1696  1303               	bcf	3,6	;RP1=0, select bank1
  2647     1697  07B5               	addwf	efgtoa@w^(0+128),f
  2648     1698  1803               	skipnc
  2649     1699  0AB6               	incf	(efgtoa@w+1)^(0+128),f
  2650     169A  30FF               	movlw	255
  2651     169B  07B6               	addwf	(efgtoa@w+1)^(0+128),f
  2652     169C                     l2852:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2655     169C  1283               	bcf	3,5	;RP0=0, select bank0
  2656     169D  1303               	bcf	3,6	;RP1=0, select bank0
  2657     169E  0868               	movf	efgtoa@fp,w
  2658     169F  00A8               	movwf	pad@fp
  2659     16A0  0869               	movf	efgtoa@fp+1,w
  2660     16A1  00A9               	movwf	pad@fp+1
  2661     16A2  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  2662     16A3  00AA               	movwf	pad@buf
  2663     16A4  1683               	bsf	3,5	;RP0=1, select bank1
  2664     16A5  1303               	bcf	3,6	;RP1=0, select bank1
  2665     16A6  0836               	movf	(efgtoa@w+1)^(0+128),w
  2666     16A7  1283               	bcf	3,5	;RP0=0, select bank0
  2667     16A8  1303               	bcf	3,6	;RP1=0, select bank0
  2668     16A9  00AC               	movwf	pad@p+1
  2669     16AA  1683               	bsf	3,5	;RP0=1, select bank1
  2670     16AB  1303               	bcf	3,6	;RP1=0, select bank1
  2671     16AC  0835               	movf	efgtoa@w^(0+128),w
  2672     16AD  1283               	bcf	3,5	;RP0=0, select bank0
  2673     16AE  1303               	bcf	3,6	;RP1=0, select bank0
  2674     16AF  00AB               	movwf	pad@p
  2675     16B0  160A  158A  2700  160A  118A  	fcall	_pad
  2676     16B5  120A  118A  2FE3   	goto	l750
  2677     16B8                     l2856:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2680     16B8  1683               	bsf	3,5	;RP0=1, select bank1
  2681     16B9  1303               	bcf	3,6	;RP1=0, select bank1
  2682     16BA  084B               	movf	(efgtoa@g+3)^(0+128),w
  2683     16BB  00F3               	movwf	___fpclassifyf@x+3
  2684     16BC  084A               	movf	(efgtoa@g+2)^(0+128),w
  2685     16BD  00F2               	movwf	___fpclassifyf@x+2
  2686     16BE  0849               	movf	(efgtoa@g+1)^(0+128),w
  2687     16BF  00F1               	movwf	___fpclassifyf@x+1
  2688     16C0  0848               	movf	efgtoa@g^(0+128),w
  2689     16C1  00F0               	movwf	___fpclassifyf@x
  2690     16C2  120A  158A  200B  160A  118A  	fcall	___fpclassifyf
  2691     16C7  0870               	movf	?___fpclassifyf,w
  2692     16C8  0471               	iorwf	?___fpclassifyf+1,w
  2693     16C9  1D03               	btfss	3,2
  2694     16CA  2ECC               	goto	u4211
  2695     16CB  2ECF               	goto	u4210
  2696     16CC                     u4211:
  2697     16CC  120A  118A  28CB   	goto	l2870
  2698     16CF                     u4210:
  2699     16CF                     l2858:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2702     16CF  1683               	bsf	3,5	;RP0=1, select bank1
  2703     16D0  1303               	bcf	3,6	;RP1=0, select bank1
  2704     16D1  0845               	movf	efgtoa@sign^(0+128),w
  2705     16D2  1903               	btfsc	3,2
  2706     16D3  2ED5               	goto	u4221
  2707     16D4  2ED6               	goto	u4220
  2708     16D5                     u4221:
  2709     16D5  2EE6               	goto	l2862
  2710     16D6                     u4220:
  2711     16D6                     l2860:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2714     16D6  0845               	movf	efgtoa@sign^(0+128),w
  2715     16D7  1283               	bcf	3,5	;RP0=0, select bank2
  2716     16D8  1703               	bsf	3,6	;RP1=1, select bank2
  2717     16D9  0090               	movwf	_dbuf^(0+256)
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
  2720     16DA  30FF               	movlw	255
  2721     16DB  1683               	bsf	3,5	;RP0=1, select bank1
  2722     16DC  1303               	bcf	3,6	;RP1=0, select bank1
  2723     16DD  07B5               	addwf	efgtoa@w^(0+128),f
  2724     16DE  1803               	skipnc
  2725     16DF  0AB6               	incf	(efgtoa@w+1)^(0+128),f
  2726     16E0  30FF               	movlw	255
  2727     16E1  07B6               	addwf	(efgtoa@w+1)^(0+128),f
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2730     16E2  3001               	movlw	1
  2731     16E3  00C6               	movwf	efgtoa@n^(0+128)
  2732     16E4  3000               	movlw	0
  2733     16E5  00C7               	movwf	(efgtoa@n^(0+128)+1)
  2734     16E6                     l2862:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2737     16E6  0846               	movf	efgtoa@n^(0+128),w
  2738     16E7  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2739     16E8  00F0               	movwf	strcpy@dest
  2740     16E9  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2741     16EA  00F1               	movwf	strcpy@src
  2742     16EB  160A  118A  2001  160A  118A  	fcall	_strcpy
  2743     16F0  2E94               	goto	l2850
  2744                           
  2745                           	psect	text7
  2746     1001                     __ptext7:	
  2747 ;; *************** function _strcpy *****************
  2748 ;; Defined at:
  2749 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  dest            1    0[COMMON] PTR unsigned char 
  2752 ;;		 -> dbuf(80), 
  2753 ;;  src             1    1[COMMON] PTR const unsigned char 
  2754 ;;		 -> STR_5(4), STR_2(4), 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  d               1    2[COMMON] PTR unsigned char 
  2757 ;;		 -> dbuf(80), 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    0[COMMON] PTR unsigned char 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         2       0       0       0       0
  2768 ;;      Locals:         1       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0
  2770 ;;      Totals:         3       0       0       0       0
  2771 ;;Total ram usage:        3 bytes
  2772 ;; Hardware stack levels used: 2
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_efgtoa
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780     1001                     _strcpy:	
  2781                           ;psect for function _strcpy
  2782                           
  2783     1001                     l2766:	
  2784                           ;incstack = 0
  2785                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2786                           
  2787     1001  0870               	movf	strcpy@dest,w
  2788     1002  00F2               	movwf	strcpy@d
  2789     1003                     l2768:
  2790     1003  3001               	movlw	1
  2791     1004  07F1               	addwf	strcpy@src,f
  2792     1005  30FF               	movlw	-1
  2793     1006  0771               	addwf	strcpy@src,w
  2794     1007  0084               	movwf	4
  2795     1008  160A  158A  2000  160A  118A  	fcall	stringdir
  2796     100D  00FF               	movwf	btemp+1
  2797     100E  0872               	movf	strcpy@d,w
  2798     100F  0AF2               	incf	strcpy@d,f
  2799     1010  0084               	movwf	4
  2800     1011  087F               	movf	btemp+1,w
  2801     1012  1783               	bsf	3,7	;select IRP bank2
  2802     1013  0080               	movwf	0
  2803     1014  0800               	movf	0,w
  2804     1015  1D03               	btfss	3,2
  2805     1016  2818               	goto	u3991
  2806     1017  2819               	goto	u3990
  2807     1018                     u3991:
  2808     1018  2803               	goto	l2768
  2809     1019                     u3990:
  2810     1019                     l892:
  2811     1019  0008               	return
  2812     101A                     __end_of_strcpy:
  2813                           
  2814                           	psect	text8
  2815     1F00                     __ptext8:	
  2816 ;; *************** function _pad *****************
  2817 ;; Defined at:
  2818 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  2821 ;;		 -> sprintf@f(11), 
  2822 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  2823 ;;		 -> dbuf(80), 
  2824 ;;  p               2   11[BANK0 ] int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  i               2   13[BANK0 ] int 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       5       0       0       0
  2837 ;;      Locals:         0       2       0       0       0
  2838 ;;      Temps:          1       0       0       0       0
  2839 ;;      Totals:         1       7       0       0       0
  2840 ;;Total ram usage:        8 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 3
  2843 ;; This function calls:
  2844 ;;		_fputc
  2845 ;;		_fputs
  2846 ;; This function is called by:
  2847 ;;		_efgtoa
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851     1F00                     _pad:	
  2852                           ;psect for function _pad
  2853                           
  2854     1F00                     l2730:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2857                           
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  2860     1F00  1283               	bcf	3,5	;RP0=0, select bank0
  2861     1F01  1303               	bcf	3,6	;RP1=0, select bank0
  2862     1F02  1FAC               	btfss	pad@p+1,7
  2863     1F03  2F05               	goto	u3891
  2864     1F04  2F06               	goto	u3890
  2865     1F05                     u3891:
  2866     1F05  2F08               	goto	l735
  2867     1F06                     u3890:
  2868     1F06                     l2732:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2871     1F06  01AB               	clrf	pad@p
  2872     1F07  01AC               	clrf	pad@p+1
  2873     1F08                     l735:	
  2874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  2875                           
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2878     1F08  01AD               	clrf	pad@i
  2879     1F09  01AE               	clrf	pad@i+1
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2882     1F0A  2F22               	goto	l2738
  2883     1F0B                     l2734:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2886     1F0B  3020               	movlw	32
  2887     1F0C  00F0               	movwf	fputc@c
  2888     1F0D  3000               	movlw	0
  2889     1F0E  00F1               	movwf	fputc@c+1
  2890     1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  2891     1F10  1303               	bcf	3,6	;RP1=0, select bank0
  2892     1F11  0828               	movf	pad@fp,w
  2893     1F12  00F2               	movwf	fputc@fp
  2894     1F13  0829               	movf	pad@fp+1,w
  2895     1F14  00F3               	movwf	fputc@fp+1
  2896     1F15  160A  118A  206F  160A  158A  	fcall	_fputc
  2897     1F1A                     l2736:
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2900     1F1A  3001               	movlw	1
  2901     1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  2902     1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  2903     1F1D  07AD               	addwf	pad@i,f
  2904     1F1E  1803               	skipnc
  2905     1F1F  0AAE               	incf	pad@i+1,f
  2906     1F20  3000               	movlw	0
  2907     1F21  07AE               	addwf	pad@i+1,f
  2908     1F22                     l2738:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2911     1F22  082E               	movf	pad@i+1,w
  2912     1F23  3A80               	xorlw	128
  2913     1F24  00FD               	movwf	??_pad
  2914     1F25  082C               	movf	pad@p+1,w
  2915     1F26  3A80               	xorlw	128
  2916     1F27  027D               	subwf	??_pad,w
  2917     1F28  1D03               	skipz
  2918     1F29  2F2C               	goto	u3905
  2919     1F2A  082B               	movf	pad@p,w
  2920     1F2B  022D               	subwf	pad@i,w
  2921     1F2C                     u3905:
  2922     1F2C  1C03               	skipc
  2923     1F2D  2F2F               	goto	u3901
  2924     1F2E  2F30               	goto	u3900
  2925     1F2F                     u3901:
  2926     1F2F  2F0B               	goto	l2734
  2927     1F30                     u3900:
  2928     1F30                     l2740:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2931     1F30  1283               	bcf	3,5	;RP0=0, select bank0
  2932     1F31  1303               	bcf	3,6	;RP1=0, select bank0
  2933     1F32  082A               	movf	pad@buf,w
  2934     1F33  00A0               	movwf	fputs@s
  2935     1F34  0828               	movf	pad@fp,w
  2936     1F35  00A1               	movwf	fputs@fp
  2937     1F36  0829               	movf	pad@fp+1,w
  2938     1F37  00A2               	movwf	fputs@fp+1
  2939     1F38  160A  158A  267C  160A  158A  	fcall	_fputs
  2940     1F3D                     l739:
  2941     1F3D  0008               	return
  2942     1F3E                     __end_of_pad:
  2943                           
  2944                           	psect	text9
  2945     1E7C                     __ptext9:	
  2946 ;; *************** function _fputs *****************
  2947 ;; Defined at:
  2948 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  2951 ;;		 -> dbuf(80), 
  2952 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  2953 ;;		 -> sprintf@f(11), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  i               2    6[BANK0 ] int 
  2956 ;;  c               1    5[BANK0 ] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2    0[BANK0 ] int 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       3       0       0       0
  2967 ;;      Locals:         0       3       0       0       0
  2968 ;;      Temps:          0       2       0       0       0
  2969 ;;      Totals:         0       8       0       0       0
  2970 ;;Total ram usage:        8 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 2
  2973 ;; This function calls:
  2974 ;;		_fputc
  2975 ;; This function is called by:
  2976 ;;		_pad
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     1E7C                     _fputs:	
  2981                           ;psect for function _fputs
  2982                           
  2983     1E7C                     l2340:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2986                           
  2987     1E7C  1283               	bcf	3,5	;RP0=0, select bank0
  2988     1E7D  1303               	bcf	3,6	;RP1=0, select bank0
  2989     1E7E  01A6               	clrf	fputs@i
  2990     1E7F  01A7               	clrf	fputs@i+1
  2991     1E80  2E99               	goto	l2346
  2992     1E81                     l2342:
  2993     1E81  0825               	movf	fputs@c,w
  2994     1E82  00A3               	movwf	??_fputs
  2995     1E83  01A4               	clrf	??_fputs+1
  2996     1E84  0823               	movf	??_fputs,w
  2997     1E85  00F0               	movwf	fputc@c
  2998     1E86  0824               	movf	??_fputs+1,w
  2999     1E87  00F1               	movwf	fputc@c+1
  3000     1E88  0821               	movf	fputs@fp,w
  3001     1E89  00F2               	movwf	fputc@fp
  3002     1E8A  0822               	movf	fputs@fp+1,w
  3003     1E8B  00F3               	movwf	fputc@fp+1
  3004     1E8C  160A  118A  206F  160A  158A  	fcall	_fputc
  3005     1E91                     l2344:
  3006     1E91  3001               	movlw	1
  3007     1E92  1283               	bcf	3,5	;RP0=0, select bank0
  3008     1E93  1303               	bcf	3,6	;RP1=0, select bank0
  3009     1E94  07A6               	addwf	fputs@i,f
  3010     1E95  1803               	skipnc
  3011     1E96  0AA7               	incf	fputs@i+1,f
  3012     1E97  3000               	movlw	0
  3013     1E98  07A7               	addwf	fputs@i+1,f
  3014     1E99                     l2346:
  3015     1E99  0826               	movf	fputs@i,w
  3016     1E9A  0720               	addwf	fputs@s,w
  3017     1E9B  00A3               	movwf	??_fputs
  3018     1E9C  0823               	movf	??_fputs,w
  3019     1E9D  0084               	movwf	4
  3020     1E9E  1783               	bsf	3,7	;select IRP bank2
  3021     1E9F  0800               	movf	0,w
  3022     1EA0  00A5               	movwf	fputs@c
  3023     1EA1  0825               	movf	fputs@c,w
  3024     1EA2  1D03               	btfss	3,2
  3025     1EA3  2EA5               	goto	u2971
  3026     1EA4  2EA6               	goto	u2970
  3027     1EA5                     u2971:
  3028     1EA5  2E81               	goto	l2342
  3029     1EA6                     u2970:
  3030     1EA6                     l883:
  3031     1EA6  0008               	return
  3032     1EA7                     __end_of_fputs:
  3033                           
  3034                           	psect	text10
  3035     106F                     __ptext10:	
  3036 ;; *************** function _fputc *****************
  3037 ;; Defined at:
  3038 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  c               2    0[COMMON] int 
  3041 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  3042 ;;		 -> sprintf@f(11), 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2    0[COMMON] int 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         4       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0
  3056 ;;      Temps:          9       0       0       0       0
  3057 ;;      Totals:        13       0       0       0       0
  3058 ;;Total ram usage:       13 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 1
  3061 ;; This function calls:
  3062 ;;		_putch
  3063 ;; This function is called by:
  3064 ;;		_pad
  3065 ;;		_vfpfcnvrt
  3066 ;;		_fputs
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070     106F                     _fputc:	
  3071                           ;psect for function _fputc
  3072                           
  3073     106F                     l2114:	
  3074                           ;incstack = 0
  3075                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3076                           
  3077     106F  0872               	movf	fputc@fp,w
  3078     1070  0473               	iorwf	fputc@fp+1,w
  3079     1071  1903               	btfsc	3,2
  3080     1072  2874               	goto	u2431
  3081     1073  2875               	goto	u2430
  3082     1074                     u2431:
  3083     1074  287B               	goto	l2118
  3084     1075                     u2430:
  3085     1075                     l2116:
  3086     1075  0872               	movf	fputc@fp,w
  3087     1076  0473               	iorwf	fputc@fp+1,w
  3088     1077  1D03               	btfss	3,2
  3089     1078  287A               	goto	u2441
  3090     1079  287B               	goto	u2440
  3091     107A                     u2441:
  3092     107A  2882               	goto	l2120
  3093     107B                     u2440:
  3094     107B                     l2118:
  3095     107B  0870               	movf	fputc@c,w
  3096     107C  160A  118A  2000  160A  118A  	fcall	_putch
  3097     1081  2908               	goto	l875
  3098     1082                     l2120:
  3099     1082  0872               	movf	fputc@fp,w
  3100     1083  3E09               	addlw	9
  3101     1084  00F4               	movwf	??_fputc
  3102     1085  0873               	movf	fputc@fp+1,w
  3103     1086  1803               	skipnc
  3104     1087  3E01               	addlw	1
  3105     1088  3E00               	addlw	0
  3106     1089  00F5               	movwf	??_fputc+1
  3107     108A  0874               	movf	??_fputc,w
  3108     108B  0084               	movwf	4
  3109     108C  1783               	bsf	3,7
  3110     108D  1C75               	btfss	??_fputc+1,0
  3111     108E  1383               	bcf	3,7
  3112     108F  0800               	movf	0,w
  3113     1090  00F6               	movwf	??_fputc+2
  3114     1091  0A84               	incf	4,f
  3115     1092  0800               	movf	0,w
  3116     1093  00F7               	movwf	??_fputc+3
  3117     1094  0876               	movf	??_fputc+2,w
  3118     1095  0477               	iorwf	??_fputc+3,w
  3119     1096  1903               	btfsc	3,2
  3120     1097  2899               	goto	u2451
  3121     1098  289A               	goto	u2450
  3122     1099                     u2451:
  3123     1099  28CC               	goto	l2124
  3124     109A                     u2450:
  3125     109A                     l2122:
  3126     109A  0872               	movf	fputc@fp,w
  3127     109B  3E09               	addlw	9
  3128     109C  00F4               	movwf	??_fputc
  3129     109D  0873               	movf	fputc@fp+1,w
  3130     109E  1803               	skipnc
  3131     109F  3E01               	addlw	1
  3132     10A0  3E00               	addlw	0
  3133     10A1  00F5               	movwf	??_fputc+1
  3134     10A2  0874               	movf	??_fputc,w
  3135     10A3  0084               	movwf	4
  3136     10A4  1783               	bsf	3,7
  3137     10A5  1C75               	btfss	??_fputc+1,0
  3138     10A6  1383               	bcf	3,7
  3139     10A7  0800               	movf	0,w
  3140     10A8  00F6               	movwf	??_fputc+2
  3141     10A9  0A84               	incf	4,f
  3142     10AA  0800               	movf	0,w
  3143     10AB  00F7               	movwf	??_fputc+3
  3144     10AC  0872               	movf	fputc@fp,w
  3145     10AD  3E02               	addlw	2
  3146     10AE  00F8               	movwf	??_fputc+4
  3147     10AF  0873               	movf	fputc@fp+1,w
  3148     10B0  1803               	skipnc
  3149     10B1  3E01               	addlw	1
  3150     10B2  3E00               	addlw	0
  3151     10B3  00F9               	movwf	??_fputc+5
  3152     10B4  0878               	movf	??_fputc+4,w
  3153     10B5  0084               	movwf	4
  3154     10B6  1783               	bsf	3,7
  3155     10B7  1C79               	btfss	??_fputc+5,0
  3156     10B8  1383               	bcf	3,7
  3157     10B9  0800               	movf	0,w
  3158     10BA  00FA               	movwf	??_fputc+6
  3159     10BB  0A84               	incf	4,f
  3160     10BC  0800               	movf	0,w
  3161     10BD  00FB               	movwf	??_fputc+7
  3162     10BE  087B               	movf	??_fputc+7,w
  3163     10BF  3A80               	xorlw	128
  3164     10C0  00FC               	movwf	??_fputc+8
  3165     10C1  0877               	movf	??_fputc+3,w
  3166     10C2  3A80               	xorlw	128
  3167     10C3  027C               	subwf	??_fputc+8,w
  3168     10C4  1D03               	skipz
  3169     10C5  28C8               	goto	u2465
  3170     10C6  0876               	movf	??_fputc+2,w
  3171     10C7  027A               	subwf	??_fputc+6,w
  3172     10C8                     u2465:
  3173     10C8  1803               	skipnc
  3174     10C9  28CB               	goto	u2461
  3175     10CA  28CC               	goto	u2460
  3176     10CB                     u2461:
  3177     10CB  2908               	goto	l875
  3178     10CC                     u2460:
  3179     10CC                     l2124:
  3180     10CC  0872               	movf	fputc@fp,w
  3181     10CD  0084               	movwf	4
  3182     10CE  1783               	bsf	3,7
  3183     10CF  1C73               	btfss	fputc@fp+1,0
  3184     10D0  1383               	bcf	3,7
  3185     10D1  0800               	movf	0,w
  3186     10D2  00F4               	movwf	??_fputc
  3187     10D3  0A84               	incf	4,f
  3188     10D4  0800               	movf	0,w
  3189     10D5  00F5               	movwf	??_fputc+1
  3190     10D6  0872               	movf	fputc@fp,w
  3191     10D7  3E02               	addlw	2
  3192     10D8  00F6               	movwf	??_fputc+2
  3193     10D9  0873               	movf	fputc@fp+1,w
  3194     10DA  1803               	skipnc
  3195     10DB  3E01               	addlw	1
  3196     10DC  3E00               	addlw	0
  3197     10DD  00F7               	movwf	??_fputc+3
  3198     10DE  0876               	movf	??_fputc+2,w
  3199     10DF  0084               	movwf	4
  3200     10E0  1783               	bsf	3,7
  3201     10E1  1C77               	btfss	??_fputc+3,0
  3202     10E2  1383               	bcf	3,7
  3203     10E3  0800               	movf	0,w
  3204     10E4  0774               	addwf	??_fputc,w
  3205     10E5  00F9               	movwf	??_fputc+5
  3206     10E6  0875               	movf	??_fputc+1,w
  3207     10E7  00F8               	movwf	??_fputc+4
  3208     10E8  1803               	skipnc
  3209     10E9  0AF8               	incf	??_fputc+4,f
  3210     10EA  1F80               	btfss	0,7
  3211     10EB  28ED               	goto	u2470
  3212     10EC  03F8               	decf	??_fputc+4,f
  3213     10ED                     u2470:
  3214     10ED  0878               	movf	??_fputc+4,w
  3215     10EE  00FA               	movwf	??_fputc+6
  3216     10EF  0879               	movf	??_fputc+5,w
  3217     10F0  0084               	movwf	4
  3218     10F1  1783               	bsf	3,7
  3219     10F2  1C7A               	btfss	??_fputc+6,0
  3220     10F3  1383               	bcf	3,7
  3221     10F4  0870               	movf	fputc@c,w
  3222     10F5  0080               	movwf	0
  3223     10F6  0872               	movf	fputc@fp,w
  3224     10F7  3E02               	addlw	2
  3225     10F8  00F4               	movwf	??_fputc
  3226     10F9  0873               	movf	fputc@fp+1,w
  3227     10FA  1803               	skipnc
  3228     10FB  3E01               	addlw	1
  3229     10FC  3E00               	addlw	0
  3230     10FD  00F5               	movwf	??_fputc+1
  3231     10FE  0874               	movf	??_fputc,w
  3232     10FF  0084               	movwf	4
  3233     1100  1783               	bsf	3,7
  3234     1101  1C75               	btfss	??_fputc+1,0
  3235     1102  1383               	bcf	3,7
  3236     1103  3001               	movlw	1
  3237     1104  0780               	addwf	0,f
  3238     1105  0A84               	incf	4,f
  3239     1106  1803               	skipnc
  3240     1107  0A80               	incf	0,f
  3241     1108                     l875:
  3242     1108  0008               	return
  3243     1109                     __end_of_fputc:
  3244                           
  3245                           	psect	text11
  3246     1000                     __ptext11:	
  3247 ;; *************** function _putch *****************
  3248 ;; Defined at:
  3249 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  c               1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  c               1    0[COMMON] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0       0       0       0       0
  3264 ;;      Locals:         0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0
  3266 ;;      Totals:         0       0       0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_fputc
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276     1000                     _putch:	
  3277                           ;psect for function _putch
  3278                           
  3279     1000                     l886:	
  3280                           ;incstack = 0
  3281                           ; Regs used in _putch: [wreg]
  3282                           
  3283     1000  0008               	return
  3284     1001                     __end_of_putch:
  3285                           
  3286                           	psect	text12
  3287     1DC2                     __ptext12:	
  3288 ;; *************** function _memcpy *****************
  3289 ;; Defined at:
  3290 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  d1              1    0[COMMON] PTR void 
  3293 ;;		 -> dbuf(80), 
  3294 ;;  s1              1    1[COMMON] PTR const void 
  3295 ;;		 -> dbuf(80), 
  3296 ;;  n               2    2[COMMON] unsigned int 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  s               1    6[COMMON] PTR const unsigned char 
  3299 ;;		 -> dbuf(80), 
  3300 ;;  d               1    5[COMMON] PTR unsigned char 
  3301 ;;		 -> dbuf(80), 
  3302 ;;  tmp             1    4[COMMON] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    0[COMMON] PTR void 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3312 ;;      Params:         4       0       0       0       0
  3313 ;;      Locals:         3       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0
  3315 ;;      Totals:         7       0       0       0       0
  3316 ;;Total ram usage:        7 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_efgtoa
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325     1DC2                     _memcpy:	
  3326                           ;psect for function _memcpy
  3327                           
  3328     1DC2                     l2808:	
  3329                           ;incstack = 0
  3330                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  3331                           
  3332     1DC2  0871               	movf	memcpy@s1,w
  3333     1DC3  00F6               	movwf	memcpy@s
  3334     1DC4  0870               	movf	memcpy@d1,w
  3335     1DC5  00F5               	movwf	memcpy@d
  3336     1DC6  2DD4               	goto	l860
  3337     1DC7                     l2810:
  3338     1DC7  0876               	movf	memcpy@s,w
  3339     1DC8  0084               	movwf	4
  3340     1DC9  1783               	bsf	3,7	;select IRP bank2
  3341     1DCA  0800               	movf	0,w
  3342     1DCB  00F4               	movwf	memcpy@tmp
  3343     1DCC                     l2812:
  3344     1DCC  3001               	movlw	1
  3345     1DCD  07F6               	addwf	memcpy@s,f
  3346     1DCE                     l2814:
  3347     1DCE  0875               	movf	memcpy@d,w
  3348     1DCF  0084               	movwf	4
  3349     1DD0  0874               	movf	memcpy@tmp,w
  3350     1DD1  0080               	movwf	0
  3351     1DD2  3001               	movlw	1
  3352     1DD3  07F5               	addwf	memcpy@d,f
  3353     1DD4                     l860:
  3354     1DD4  3001               	movlw	1
  3355     1DD5  02F2               	subwf	memcpy@n,f
  3356     1DD6  3000               	movlw	0
  3357     1DD7  1C03               	skipc
  3358     1DD8  03F3               	decf	memcpy@n+1,f
  3359     1DD9  02F3               	subwf	memcpy@n+1,f
  3360     1DDA  0A72               	incf	memcpy@n,w
  3361     1DDB  1D03               	skipz
  3362     1DDC  2DE1               	goto	u4131
  3363     1DDD  0A73               	incf	memcpy@n+1,w
  3364     1DDE  1D03               	btfss	3,2
  3365     1DDF  2DE1               	goto	u4131
  3366     1DE0  2DE2               	goto	u4130
  3367     1DE1                     u4131:
  3368     1DE1  2DC7               	goto	l2810
  3369     1DE2                     u4130:
  3370     1DE2                     l863:
  3371     1DE2  0008               	return
  3372     1DE3                     __end_of_memcpy:
  3373                           
  3374                           	psect	text13
  3375     1D8E                     __ptext13:	
  3376 ;; *************** function _labs *****************
  3377 ;; Defined at:
  3378 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  a               4    0[COMMON] long 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  4    0[COMMON] long 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         4       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0
  3395 ;;      Totals:         4       0       0       0       0
  3396 ;;Total ram usage:        4 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_efgtoa
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405     1D8E                     _labs:	
  3406                           ;psect for function _labs
  3407                           
  3408     1D8E                     l2770:	
  3409                           ;incstack = 0
  3410                           ; Regs used in _labs: [wreg+status,2+status,0]
  3411                           
  3412     1D8E  1BF3               	btfsc	labs@a+3,7
  3413     1D8F  2D91               	goto	u4001
  3414     1D90  2D92               	goto	u4000
  3415     1D91                     u4001:
  3416     1D91  2D93               	goto	l2774
  3417     1D92                     u4000:
  3418     1D92                     l2772:
  3419     1D92  2DA2               	goto	l857
  3420     1D93                     l2774:
  3421     1D93  0970               	comf	labs@a,w
  3422     1D94  00F0               	movwf	?_labs
  3423     1D95  0971               	comf	labs@a+1,w
  3424     1D96  00F1               	movwf	?_labs+1
  3425     1D97  0972               	comf	labs@a+2,w
  3426     1D98  00F2               	movwf	?_labs+2
  3427     1D99  0973               	comf	labs@a+3,w
  3428     1D9A  00F3               	movwf	?_labs+3
  3429     1D9B  0AF0               	incf	?_labs,f
  3430     1D9C  1903               	skipnz
  3431     1D9D  0AF1               	incf	?_labs+1,f
  3432     1D9E  1903               	skipnz
  3433     1D9F  0AF2               	incf	?_labs+2,f
  3434     1DA0  1903               	skipnz
  3435     1DA1  0AF3               	incf	?_labs+3,f
  3436     1DA2                     l857:
  3437     1DA2  0008               	return
  3438     1DA3                     __end_of_labs:
  3439                           
  3440                           	psect	text14
  3441     16F1                     __ptext14:	
  3442 ;; *************** function _floorf *****************
  3443 ;; Defined at:
  3444 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  x               4   52[BANK0 ] float 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  u               4   68[BANK0 ] struct .
  3449 ;;  m               4   62[BANK0 ] unsigned long 
  3450 ;;  e               2   66[BANK0 ] int 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  4   52[BANK0 ] float 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, btemp+1
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       4       0       0       0
  3461 ;;      Locals:         0      10       0       0       0
  3462 ;;      Temps:          0       6       0       0       0
  3463 ;;      Totals:         0      20       0       0       0
  3464 ;;Total ram usage:       20 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_efgtoa
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     16F1                     _floorf:	
  3474                           ;psect for function _floorf
  3475                           
  3476     16F1                     l2778:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  3479                           
  3480     16F1  1683               	bsf	3,5	;RP0=1, select bank3
  3481     16F2  1703               	bsf	3,6	;RP1=1, select bank3
  3482     16F3  0840               	movf	(floorf@F521+3)^(0+384),w
  3483     16F4  1283               	bcf	3,5	;RP0=0, select bank0
  3484     16F5  1303               	bcf	3,6	;RP1=0, select bank0
  3485     16F6  00E7               	movwf	floorf@u+3
  3486     16F7  1683               	bsf	3,5	;RP0=1, select bank3
  3487     16F8  1703               	bsf	3,6	;RP1=1, select bank3
  3488     16F9  083F               	movf	(floorf@F521+2)^(0+384),w
  3489     16FA  1283               	bcf	3,5	;RP0=0, select bank0
  3490     16FB  1303               	bcf	3,6	;RP1=0, select bank0
  3491     16FC  00E6               	movwf	floorf@u+2
  3492     16FD  1683               	bsf	3,5	;RP0=1, select bank3
  3493     16FE  1703               	bsf	3,6	;RP1=1, select bank3
  3494     16FF  083E               	movf	(floorf@F521+1)^(0+384),w
  3495     1700  1283               	bcf	3,5	;RP0=0, select bank0
  3496     1701  1303               	bcf	3,6	;RP1=0, select bank0
  3497     1702  00E5               	movwf	floorf@u+1
  3498     1703  1683               	bsf	3,5	;RP0=1, select bank3
  3499     1704  1703               	bsf	3,6	;RP1=1, select bank3
  3500     1705  083D               	movf	floorf@F521^(0+384),w
  3501     1706  1283               	bcf	3,5	;RP0=0, select bank0
  3502     1707  1303               	bcf	3,6	;RP1=0, select bank0
  3503     1708  00E4               	movwf	floorf@u
  3504     1709  0857               	movf	floorf@x+3,w
  3505     170A  00E7               	movwf	floorf@u+3
  3506     170B  0856               	movf	floorf@x+2,w
  3507     170C  00E6               	movwf	floorf@u+2
  3508     170D  0855               	movf	floorf@x+1,w
  3509     170E  00E5               	movwf	floorf@u+1
  3510     170F  0854               	movf	floorf@x,w
  3511     1710  00E4               	movwf	floorf@u
  3512     1711                     l2780:
  3513     1711  0864               	movf	floorf@u,w
  3514     1712  00D8               	movwf	??_floorf
  3515     1713  0865               	movf	floorf@u+1,w
  3516     1714  00D9               	movwf	??_floorf+1
  3517     1715  0866               	movf	floorf@u+2,w
  3518     1716  00DA               	movwf	??_floorf+2
  3519     1717  0867               	movf	floorf@u+3,w
  3520     1718  00DB               	movwf	??_floorf+3
  3521     1719  3017               	movlw	23
  3522     171A                     u4015:
  3523     171A  1003               	clrc
  3524     171B  0CDB               	rrf	??_floorf+3,f
  3525     171C  0CDA               	rrf	??_floorf+2,f
  3526     171D  0CD9               	rrf	??_floorf+1,f
  3527     171E  0CD8               	rrf	??_floorf,f
  3528     171F                     u4010:
  3529     171F  3EFF               	addlw	-1
  3530     1720  1D03               	skipz
  3531     1721  2F1A               	goto	u4015
  3532     1722  30FF               	movlw	255
  3533     1723  0558               	andwf	??_floorf,w
  3534     1724  00DC               	movwf	??_floorf+4
  3535     1725  3000               	movlw	0
  3536     1726  0559               	andwf	??_floorf+1,w
  3537     1727  00DD               	movwf	??_floorf+5
  3538     1728  085C               	movf	??_floorf+4,w
  3539     1729  3E81               	addlw	129
  3540     172A  00E2               	movwf	floorf@e
  3541     172B  085D               	movf	??_floorf+5,w
  3542     172C  1803               	skipnc
  3543     172D  3E01               	addlw	1
  3544     172E  3EFF               	addlw	255
  3545     172F  00E3               	movwf	floorf@e+1
  3546     1730                     l2782:
  3547     1730  0863               	movf	floorf@e+1,w
  3548     1731  3A80               	xorlw	128
  3549     1732  00FF               	movwf	btemp+1
  3550     1733  3080               	movlw	128
  3551     1734  027F               	subwf	btemp+1,w
  3552     1735  1D03               	skipz
  3553     1736  2F39               	goto	u4025
  3554     1737  3017               	movlw	23
  3555     1738  0262               	subwf	floorf@e,w
  3556     1739                     u4025:
  3557     1739  1C03               	skipc
  3558     173A  2F3C               	goto	u4021
  3559     173B  2F3D               	goto	u4020
  3560     173C                     u4021:
  3561     173C  2F3E               	goto	l842
  3562     173D                     u4020:
  3563     173D                     l2784:
  3564     173D  2FFF               	goto	l843
  3565     173E                     l842:
  3566     173E  1283               	bcf	3,5	;RP0=0, select bank0
  3567     173F  1303               	bcf	3,6	;RP1=0, select bank0
  3568     1740  1BE3               	btfsc	floorf@e+1,7
  3569     1741  2F43               	goto	u4031
  3570     1742  2F44               	goto	u4030
  3571     1743                     u4031:
  3572     1743  2FB4               	goto	l2798
  3573     1744                     u4030:
  3574     1744                     l2786:
  3575     1744  0A62               	incf	floorf@e,w
  3576     1745  00FF               	movwf	btemp+1
  3577     1746  30FF               	movlw	255
  3578     1747  00D8               	movwf	??_floorf
  3579     1748  30FF               	movlw	255
  3580     1749  00D9               	movwf	??_floorf+1
  3581     174A  307F               	movlw	127
  3582     174B  00DA               	movwf	??_floorf+2
  3583     174C  3000               	movlw	0
  3584     174D  00DB               	movwf	??_floorf+3
  3585     174E  2F54               	goto	u4040
  3586     174F                     u4045:
  3587     174F  0D5B               	rlf	??_floorf+3,w
  3588     1750  0CDB               	rrf	??_floorf+3,f
  3589     1751  0CDA               	rrf	??_floorf+2,f
  3590     1752  0CD9               	rrf	??_floorf+1,f
  3591     1753  0CD8               	rrf	??_floorf,f
  3592     1754                     u4040:
  3593     1754  0BFF               	decfsz	btemp+1,f
  3594     1755  2F4F               	goto	u4045
  3595     1756  085B               	movf	??_floorf+3,w
  3596     1757  00E1               	movwf	floorf@m+3
  3597     1758  085A               	movf	??_floorf+2,w
  3598     1759  00E0               	movwf	floorf@m+2
  3599     175A  0859               	movf	??_floorf+1,w
  3600     175B  00DF               	movwf	floorf@m+1
  3601     175C  0858               	movf	??_floorf,w
  3602     175D  00DE               	movwf	floorf@m
  3603     175E                     l2788:
  3604     175E  085E               	movf	floorf@m,w
  3605     175F  0564               	andwf	floorf@u,w
  3606     1760  00D8               	movwf	??_floorf
  3607     1761  085F               	movf	floorf@m+1,w
  3608     1762  0565               	andwf	floorf@u+1,w
  3609     1763  00D9               	movwf	??_floorf+1
  3610     1764  0860               	movf	floorf@m+2,w
  3611     1765  0566               	andwf	floorf@u+2,w
  3612     1766  00DA               	movwf	??_floorf+2
  3613     1767  0861               	movf	floorf@m+3,w
  3614     1768  0567               	andwf	floorf@u+3,w
  3615     1769  00DB               	movwf	??_floorf+3
  3616     176A  085B               	movf	??_floorf+3,w
  3617     176B  045A               	iorwf	??_floorf+2,w
  3618     176C  0459               	iorwf	??_floorf+1,w
  3619     176D  0458               	iorwf	??_floorf,w
  3620     176E  1D03               	skipz
  3621     176F  2F71               	goto	u4051
  3622     1770  2F72               	goto	u4050
  3623     1771                     u4051:
  3624     1771  2F73               	goto	l2792
  3625     1772                     u4050:
  3626     1772  2F3D               	goto	l2784
  3627     1773                     l2792:
  3628     1773  0864               	movf	floorf@u,w
  3629     1774  00D8               	movwf	??_floorf
  3630     1775  0865               	movf	floorf@u+1,w
  3631     1776  00D9               	movwf	??_floorf+1
  3632     1777  0866               	movf	floorf@u+2,w
  3633     1778  00DA               	movwf	??_floorf+2
  3634     1779  0867               	movf	floorf@u+3,w
  3635     177A  00DB               	movwf	??_floorf+3
  3636     177B  301F               	movlw	31
  3637     177C                     u4065:
  3638     177C  1003               	clrc
  3639     177D  0CDB               	rrf	??_floorf+3,f
  3640     177E  0CDA               	rrf	??_floorf+2,f
  3641     177F  0CD9               	rrf	??_floorf+1,f
  3642     1780  0CD8               	rrf	??_floorf,f
  3643     1781                     u4060:
  3644     1781  3EFF               	addlw	-1
  3645     1782  1D03               	skipz
  3646     1783  2F7C               	goto	u4065
  3647     1784  085B               	movf	??_floorf+3,w
  3648     1785  045A               	iorwf	??_floorf+2,w
  3649     1786  0459               	iorwf	??_floorf+1,w
  3650     1787  0458               	iorwf	??_floorf,w
  3651     1788  1903               	skipnz
  3652     1789  2F8B               	goto	u4071
  3653     178A  2F8C               	goto	u4070
  3654     178B                     u4071:
  3655     178B  2FA3               	goto	l2796
  3656     178C                     u4070:
  3657     178C                     l2794:
  3658     178C  085E               	movf	floorf@m,w
  3659     178D  07E4               	addwf	floorf@u,f
  3660     178E  085F               	movf	floorf@m+1,w
  3661     178F  1103               	clrz
  3662     1790  1803               	skipnc
  3663     1791  3E01               	addlw	1
  3664     1792  1903               	skipnz
  3665     1793  2F95               	goto	u4081
  3666     1794  07E5               	addwf	floorf@u+1,f
  3667     1795                     u4081:
  3668     1795  0860               	movf	floorf@m+2,w
  3669     1796  1103               	clrz
  3670     1797  1803               	skipnc
  3671     1798  3E01               	addlw	1
  3672     1799  1903               	skipnz
  3673     179A  2F9C               	goto	u4082
  3674     179B  07E6               	addwf	floorf@u+2,f
  3675     179C                     u4082:
  3676     179C  0861               	movf	floorf@m+3,w
  3677     179D  1103               	clrz
  3678     179E  1803               	skipnc
  3679     179F  3E01               	addlw	1
  3680     17A0  1903               	skipnz
  3681     17A1  2FA3               	goto	u4083
  3682     17A2  07E7               	addwf	floorf@u+3,f
  3683     17A3                     u4083:
  3684     17A3                     l2796:
  3685     17A3  095E               	comf	floorf@m,w
  3686     17A4  00D8               	movwf	??_floorf
  3687     17A5  095F               	comf	floorf@m+1,w
  3688     17A6  00D9               	movwf	??_floorf+1
  3689     17A7  0960               	comf	floorf@m+2,w
  3690     17A8  00DA               	movwf	??_floorf+2
  3691     17A9  0961               	comf	floorf@m+3,w
  3692     17AA  00DB               	movwf	??_floorf+3
  3693     17AB  0858               	movf	??_floorf,w
  3694     17AC  05E4               	andwf	floorf@u,f
  3695     17AD  0859               	movf	??_floorf+1,w
  3696     17AE  05E5               	andwf	floorf@u+1,f
  3697     17AF  085A               	movf	??_floorf+2,w
  3698     17B0  05E6               	andwf	floorf@u+2,f
  3699     17B1  085B               	movf	??_floorf+3,w
  3700     17B2  05E7               	andwf	floorf@u+3,f
  3701     17B3  2FF7               	goto	l847
  3702     17B4                     l2798:
  3703     17B4  0864               	movf	floorf@u,w
  3704     17B5  00D8               	movwf	??_floorf
  3705     17B6  0865               	movf	floorf@u+1,w
  3706     17B7  00D9               	movwf	??_floorf+1
  3707     17B8  0866               	movf	floorf@u+2,w
  3708     17B9  00DA               	movwf	??_floorf+2
  3709     17BA  0867               	movf	floorf@u+3,w
  3710     17BB  00DB               	movwf	??_floorf+3
  3711     17BC  301F               	movlw	31
  3712     17BD                     u4095:
  3713     17BD  1003               	clrc
  3714     17BE  0CDB               	rrf	??_floorf+3,f
  3715     17BF  0CDA               	rrf	??_floorf+2,f
  3716     17C0  0CD9               	rrf	??_floorf+1,f
  3717     17C1  0CD8               	rrf	??_floorf,f
  3718     17C2                     u4090:
  3719     17C2  3EFF               	addlw	-1
  3720     17C3  1D03               	skipz
  3721     17C4  2FBD               	goto	u4095
  3722     17C5  085B               	movf	??_floorf+3,w
  3723     17C6  045A               	iorwf	??_floorf+2,w
  3724     17C7  0459               	iorwf	??_floorf+1,w
  3725     17C8  0458               	iorwf	??_floorf,w
  3726     17C9  1D03               	skipz
  3727     17CA  2FCC               	goto	u4101
  3728     17CB  2FCD               	goto	u4100
  3729     17CC                     u4101:
  3730     17CC  2FD6               	goto	l2802
  3731     17CD                     u4100:
  3732     17CD                     l2800:
  3733     17CD  3000               	movlw	0
  3734     17CE  00E7               	movwf	floorf@u+3
  3735     17CF  3000               	movlw	0
  3736     17D0  00E6               	movwf	floorf@u+2
  3737     17D1  3000               	movlw	0
  3738     17D2  00E5               	movwf	floorf@u+1
  3739     17D3  3000               	movlw	0
  3740     17D4  00E4               	movwf	floorf@u
  3741     17D5  2FF7               	goto	l847
  3742     17D6                     l2802:
  3743     17D6  0864               	movf	floorf@u,w
  3744     17D7  00D8               	movwf	??_floorf
  3745     17D8  0865               	movf	floorf@u+1,w
  3746     17D9  00D9               	movwf	??_floorf+1
  3747     17DA  0866               	movf	floorf@u+2,w
  3748     17DB  00DA               	movwf	??_floorf+2
  3749     17DC  0867               	movf	floorf@u+3,w
  3750     17DD  00DB               	movwf	??_floorf+3
  3751     17DE  3001               	movlw	1
  3752     17DF                     u4115:
  3753     17DF  1003               	clrc
  3754     17E0  0DD8               	rlf	??_floorf,f
  3755     17E1  0DD9               	rlf	??_floorf+1,f
  3756     17E2  0DDA               	rlf	??_floorf+2,f
  3757     17E3  0DDB               	rlf	??_floorf+3,f
  3758     17E4                     u4110:
  3759     17E4  3EFF               	addlw	-1
  3760     17E5  1D03               	skipz
  3761     17E6  2FDF               	goto	u4115
  3762     17E7  085B               	movf	??_floorf+3,w
  3763     17E8  045A               	iorwf	??_floorf+2,w
  3764     17E9  0459               	iorwf	??_floorf+1,w
  3765     17EA  0458               	iorwf	??_floorf,w
  3766     17EB  1903               	skipnz
  3767     17EC  2FEE               	goto	u4121
  3768     17ED  2FEF               	goto	u4120
  3769     17EE                     u4121:
  3770     17EE  2FF7               	goto	l847
  3771     17EF                     u4120:
  3772     17EF                     l2804:
  3773     17EF  30BF               	movlw	191
  3774     17F0  00E7               	movwf	floorf@u+3
  3775     17F1  3080               	movlw	128
  3776     17F2  00E6               	movwf	floorf@u+2
  3777     17F3  3000               	movlw	0
  3778     17F4  00E5               	movwf	floorf@u+1
  3779     17F5  3000               	movlw	0
  3780     17F6  00E4               	movwf	floorf@u
  3781     17F7                     l847:
  3782     17F7  0867               	movf	floorf@u+3,w
  3783     17F8  00D7               	movwf	?_floorf+3
  3784     17F9  0866               	movf	floorf@u+2,w
  3785     17FA  00D6               	movwf	?_floorf+2
  3786     17FB  0865               	movf	floorf@u+1,w
  3787     17FC  00D5               	movwf	?_floorf+1
  3788     17FD  0864               	movf	floorf@u,w
  3789     17FE  00D4               	movwf	?_floorf
  3790     17FF                     l843:
  3791     17FF  0008               	return
  3792     1800                     __end_of_floorf:
  3793                           
  3794                           	psect	text15
  3795     080B                     __ptext15:	
  3796 ;; *************** function ___fpclassifyf *****************
  3797 ;; Defined at:
  3798 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  x               4    0[COMMON] float 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  u               4    2[BANK0 ] struct .
  3803 ;;  e               2    0[BANK0 ] int 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2    0[COMMON] int 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3813 ;;      Params:         4       0       0       0       0
  3814 ;;      Locals:         0       6       0       0       0
  3815 ;;      Temps:          6       0       0       0       0
  3816 ;;      Totals:        10       6       0       0       0
  3817 ;;Total ram usage:       16 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_efgtoa
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826     080B                     ___fpclassifyf:	
  3827                           ;psect for function ___fpclassifyf
  3828                           
  3829     080B                     l2742:	
  3830                           ;incstack = 0
  3831                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  3832                           
  3833     080B  1683               	bsf	3,5	;RP0=1, select bank3
  3834     080C  1703               	bsf	3,6	;RP1=1, select bank3
  3835     080D  0844               	movf	(___fpclassifyf@F465+3)^(0+384),w
  3836     080E  1283               	bcf	3,5	;RP0=0, select bank0
  3837     080F  1303               	bcf	3,6	;RP1=0, select bank0
  3838     0810  00A5               	movwf	___fpclassifyf@u+3
  3839     0811  1683               	bsf	3,5	;RP0=1, select bank3
  3840     0812  1703               	bsf	3,6	;RP1=1, select bank3
  3841     0813  0843               	movf	(___fpclassifyf@F465+2)^(0+384),w
  3842     0814  1283               	bcf	3,5	;RP0=0, select bank0
  3843     0815  1303               	bcf	3,6	;RP1=0, select bank0
  3844     0816  00A4               	movwf	___fpclassifyf@u+2
  3845     0817  1683               	bsf	3,5	;RP0=1, select bank3
  3846     0818  1703               	bsf	3,6	;RP1=1, select bank3
  3847     0819  0842               	movf	(___fpclassifyf@F465+1)^(0+384),w
  3848     081A  1283               	bcf	3,5	;RP0=0, select bank0
  3849     081B  1303               	bcf	3,6	;RP1=0, select bank0
  3850     081C  00A3               	movwf	___fpclassifyf@u+1
  3851     081D  1683               	bsf	3,5	;RP0=1, select bank3
  3852     081E  1703               	bsf	3,6	;RP1=1, select bank3
  3853     081F  0841               	movf	___fpclassifyf@F465^(0+384),w
  3854     0820  1283               	bcf	3,5	;RP0=0, select bank0
  3855     0821  1303               	bcf	3,6	;RP1=0, select bank0
  3856     0822  00A2               	movwf	___fpclassifyf@u
  3857     0823  0873               	movf	___fpclassifyf@x+3,w
  3858     0824  00A5               	movwf	___fpclassifyf@u+3
  3859     0825  0872               	movf	___fpclassifyf@x+2,w
  3860     0826  00A4               	movwf	___fpclassifyf@u+2
  3861     0827  0871               	movf	___fpclassifyf@x+1,w
  3862     0828  00A3               	movwf	___fpclassifyf@u+1
  3863     0829  0870               	movf	___fpclassifyf@x,w
  3864     082A  00A2               	movwf	___fpclassifyf@u
  3865     082B                     l2744:
  3866     082B  0822               	movf	___fpclassifyf@u,w
  3867     082C  00F4               	movwf	??___fpclassifyf
  3868     082D  0823               	movf	___fpclassifyf@u+1,w
  3869     082E  00F5               	movwf	??___fpclassifyf+1
  3870     082F  0824               	movf	___fpclassifyf@u+2,w
  3871     0830  00F6               	movwf	??___fpclassifyf+2
  3872     0831  0825               	movf	___fpclassifyf@u+3,w
  3873     0832  00F7               	movwf	??___fpclassifyf+3
  3874     0833  3017               	movlw	23
  3875     0834                     u3915:
  3876     0834  1003               	clrc
  3877     0835  0CF7               	rrf	??___fpclassifyf+3,f
  3878     0836  0CF6               	rrf	??___fpclassifyf+2,f
  3879     0837  0CF5               	rrf	??___fpclassifyf+1,f
  3880     0838  0CF4               	rrf	??___fpclassifyf,f
  3881     0839                     u3910:
  3882     0839  3EFF               	addlw	-1
  3883     083A  1D03               	skipz
  3884     083B  2834               	goto	u3915
  3885     083C  30FF               	movlw	255
  3886     083D  0574               	andwf	??___fpclassifyf,w
  3887     083E  00A0               	movwf	___fpclassifyf@e
  3888     083F  3000               	movlw	0
  3889     0840  0575               	andwf	??___fpclassifyf+1,w
  3890     0841  00A1               	movwf	___fpclassifyf@e+1
  3891     0842                     l2746:
  3892     0842  0820               	movf	___fpclassifyf@e,w
  3893     0843  0421               	iorwf	___fpclassifyf@e+1,w
  3894     0844  1D03               	btfss	3,2
  3895     0845  2847               	goto	u3921
  3896     0846  2848               	goto	u3920
  3897     0847                     u3921:
  3898     0847  286B               	goto	l2756
  3899     0848                     u3920:
  3900     0848                     l2748:
  3901     0848  0822               	movf	___fpclassifyf@u,w
  3902     0849  00F4               	movwf	??___fpclassifyf
  3903     084A  0823               	movf	___fpclassifyf@u+1,w
  3904     084B  00F5               	movwf	??___fpclassifyf+1
  3905     084C  0824               	movf	___fpclassifyf@u+2,w
  3906     084D  00F6               	movwf	??___fpclassifyf+2
  3907     084E  0825               	movf	___fpclassifyf@u+3,w
  3908     084F  00F7               	movwf	??___fpclassifyf+3
  3909     0850  3001               	movlw	1
  3910     0851                     u3935:
  3911     0851  1003               	clrc
  3912     0852  0DF4               	rlf	??___fpclassifyf,f
  3913     0853  0DF5               	rlf	??___fpclassifyf+1,f
  3914     0854  0DF6               	rlf	??___fpclassifyf+2,f
  3915     0855  0DF7               	rlf	??___fpclassifyf+3,f
  3916     0856                     u3930:
  3917     0856  3EFF               	addlw	-1
  3918     0857  1D03               	skipz
  3919     0858  2851               	goto	u3935
  3920     0859  0877               	movf	??___fpclassifyf+3,w
  3921     085A  0476               	iorwf	??___fpclassifyf+2,w
  3922     085B  0475               	iorwf	??___fpclassifyf+1,w
  3923     085C  0474               	iorwf	??___fpclassifyf,w
  3924     085D  1D03               	skipz
  3925     085E  2860               	goto	u3941
  3926     085F  2861               	goto	u3940
  3927     0860                     u3941:
  3928     0860  2866               	goto	l2752
  3929     0861                     u3940:
  3930     0861                     l2750:
  3931     0861  3002               	movlw	2
  3932     0862  00F0               	movwf	?___fpclassifyf
  3933     0863  3000               	movlw	0
  3934     0864  00F1               	movwf	?___fpclassifyf+1
  3935     0865  2897               	goto	l836
  3936     0866                     l2752:
  3937     0866  3003               	movlw	3
  3938     0867  00F0               	movwf	?___fpclassifyf
  3939     0868  3000               	movlw	0
  3940     0869  00F1               	movwf	?___fpclassifyf+1
  3941     086A  2897               	goto	l836
  3942     086B                     l2756:
  3943     086B  0A20               	incf	___fpclassifyf@e,w
  3944     086C  0421               	iorwf	___fpclassifyf@e+1,w
  3945     086D  1D03               	btfss	3,2
  3946     086E  2870               	goto	u3951
  3947     086F  2871               	goto	u3950
  3948     0870                     u3951:
  3949     0870  2893               	goto	l2762
  3950     0871                     u3950:
  3951     0871                     l2758:
  3952     0871  0822               	movf	___fpclassifyf@u,w
  3953     0872  00F4               	movwf	??___fpclassifyf
  3954     0873  0823               	movf	___fpclassifyf@u+1,w
  3955     0874  00F5               	movwf	??___fpclassifyf+1
  3956     0875  0824               	movf	___fpclassifyf@u+2,w
  3957     0876  00F6               	movwf	??___fpclassifyf+2
  3958     0877  0825               	movf	___fpclassifyf@u+3,w
  3959     0878  00F7               	movwf	??___fpclassifyf+3
  3960     0879  3009               	movlw	9
  3961     087A                     u3965:
  3962     087A  1003               	clrc
  3963     087B  0DF4               	rlf	??___fpclassifyf,f
  3964     087C  0DF5               	rlf	??___fpclassifyf+1,f
  3965     087D  0DF6               	rlf	??___fpclassifyf+2,f
  3966     087E  0DF7               	rlf	??___fpclassifyf+3,f
  3967     087F                     u3960:
  3968     087F  3EFF               	addlw	-1
  3969     0880  1D03               	skipz
  3970     0881  287A               	goto	u3965
  3971     0882  0877               	movf	??___fpclassifyf+3,w
  3972     0883  0476               	iorwf	??___fpclassifyf+2,w
  3973     0884  0475               	iorwf	??___fpclassifyf+1,w
  3974     0885  0474               	iorwf	??___fpclassifyf,w
  3975     0886  1903               	skipnz
  3976     0887  2889               	goto	u3971
  3977     0888  288B               	goto	u3970
  3978     0889                     u3971:
  3979     0889  3001               	movlw	1
  3980     088A  288C               	goto	u3980
  3981     088B                     u3970:
  3982     088B  3000               	movlw	0
  3983     088C                     u3980:
  3984     088C  00F8               	movwf	??___fpclassifyf+4
  3985     088D  01F9               	clrf	??___fpclassifyf+5
  3986     088E  0878               	movf	??___fpclassifyf+4,w
  3987     088F  00F0               	movwf	?___fpclassifyf
  3988     0890  0879               	movf	??___fpclassifyf+5,w
  3989     0891  00F1               	movwf	?___fpclassifyf+1
  3990     0892  2897               	goto	l836
  3991     0893                     l2762:
  3992     0893  3004               	movlw	4
  3993     0894  00F0               	movwf	?___fpclassifyf
  3994     0895  3000               	movlw	0
  3995     0896  00F1               	movwf	?___fpclassifyf+1
  3996     0897                     l836:
  3997     0897  0008               	return
  3998     0898                     __end_of___fpclassifyf:
  3999                           
  4000                           	psect	text16
  4001     1F8C                     __ptext16:	
  4002 ;; *************** function ___fltol *****************
  4003 ;; Defined at:
  4004 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  f1              4    0[COMMON] int 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  exp1            1    9[COMMON] unsigned char 
  4009 ;;  sign1           1    8[COMMON] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  4    0[COMMON] long 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4019 ;;      Params:         4       0       0       0       0
  4020 ;;      Locals:         2       0       0       0       0
  4021 ;;      Temps:          4       0       0       0       0
  4022 ;;      Totals:        10       0       0       0       0
  4023 ;;Total ram usage:       10 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_efgtoa
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032     1F8C                     ___fltol:	
  4033                           ;psect for function ___fltol
  4034                           
  4035     1F8C                     l2402:	
  4036                           ;incstack = 0
  4037                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4038                           
  4039     1F8C  1003               	clrc
  4040     1F8D  0D72               	rlf	___fltol@f1+2,w
  4041     1F8E  0D73               	rlf	___fltol@f1+3,w
  4042     1F8F  00F9               	movwf	___fltol@exp1
  4043     1F90  0879               	movf	___fltol@exp1,w
  4044     1F91  1D03               	btfss	3,2
  4045     1F92  2F94               	goto	u3131
  4046     1F93  2F95               	goto	u3130
  4047     1F94                     u3131:
  4048     1F94  2F9E               	goto	l2408
  4049     1F95                     u3130:
  4050     1F95                     l2404:
  4051     1F95  3000               	movlw	0
  4052     1F96  00F3               	movwf	?___fltol+3
  4053     1F97  3000               	movlw	0
  4054     1F98  00F2               	movwf	?___fltol+2
  4055     1F99  3000               	movlw	0
  4056     1F9A  00F1               	movwf	?___fltol+1
  4057     1F9B  3000               	movlw	0
  4058     1F9C  00F0               	movwf	?___fltol
  4059     1F9D  2FFF               	goto	l439
  4060     1F9E                     l2408:
  4061     1F9E  0870               	movf	___fltol@f1,w
  4062     1F9F  00F4               	movwf	??___fltol
  4063     1FA0  0871               	movf	___fltol@f1+1,w
  4064     1FA1  00F5               	movwf	??___fltol+1
  4065     1FA2  0872               	movf	___fltol@f1+2,w
  4066     1FA3  00F6               	movwf	??___fltol+2
  4067     1FA4  0873               	movf	___fltol@f1+3,w
  4068     1FA5  00F7               	movwf	??___fltol+3
  4069     1FA6  301F               	movlw	31
  4070     1FA7                     u3145:
  4071     1FA7  1003               	clrc
  4072     1FA8  0CF7               	rrf	??___fltol+3,f
  4073     1FA9  0CF6               	rrf	??___fltol+2,f
  4074     1FAA  0CF5               	rrf	??___fltol+1,f
  4075     1FAB  0CF4               	rrf	??___fltol,f
  4076     1FAC                     u3140:
  4077     1FAC  3EFF               	addlw	-1
  4078     1FAD  1D03               	skipz
  4079     1FAE  2FA7               	goto	u3145
  4080     1FAF  0874               	movf	??___fltol,w
  4081     1FB0  00F8               	movwf	___fltol@sign1
  4082     1FB1                     l2410:
  4083     1FB1  17F2               	bsf	___fltol@f1+2,7
  4084     1FB2                     l2412:
  4085     1FB2  30FF               	movlw	255
  4086     1FB3  05F0               	andwf	___fltol@f1,f
  4087     1FB4  30FF               	movlw	255
  4088     1FB5  05F1               	andwf	___fltol@f1+1,f
  4089     1FB6  30FF               	movlw	255
  4090     1FB7  05F2               	andwf	___fltol@f1+2,f
  4091     1FB8  3000               	movlw	0
  4092     1FB9  05F3               	andwf	___fltol@f1+3,f
  4093     1FBA                     l2414:
  4094     1FBA  3096               	movlw	150
  4095     1FBB  02F9               	subwf	___fltol@exp1,f
  4096     1FBC                     l2416:
  4097     1FBC  1FF9               	btfss	___fltol@exp1,7
  4098     1FBD  2FBF               	goto	u3151
  4099     1FBE  2FC0               	goto	u3150
  4100     1FBF                     u3151:
  4101     1FBF  2FD8               	goto	l2426
  4102     1FC0                     u3150:
  4103     1FC0                     l2418:
  4104     1FC0  0879               	movf	___fltol@exp1,w
  4105     1FC1  3A80               	xorlw	128
  4106     1FC2  3E97               	addlw	151
  4107     1FC3  1803               	skipnc
  4108     1FC4  2FC6               	goto	u3161
  4109     1FC5  2FC7               	goto	u3160
  4110     1FC6                     u3161:
  4111     1FC6  2FC8               	goto	l2424
  4112     1FC7                     u3160:
  4113     1FC7  2F95               	goto	l2404
  4114     1FC8                     l2424:
  4115     1FC8  3001               	movlw	1
  4116     1FC9                     u3175:
  4117     1FC9  1003               	clrc
  4118     1FCA  0CF3               	rrf	___fltol@f1+3,f
  4119     1FCB  0CF2               	rrf	___fltol@f1+2,f
  4120     1FCC  0CF1               	rrf	___fltol@f1+1,f
  4121     1FCD  0CF0               	rrf	___fltol@f1,f
  4122     1FCE  3EFF               	addlw	-1
  4123     1FCF  1D03               	skipz
  4124     1FD0  2FC9               	goto	u3175
  4125     1FD1  3001               	movlw	1
  4126     1FD2  07F9               	addwf	___fltol@exp1,f
  4127     1FD3  1D03               	btfss	3,2
  4128     1FD4  2FD6               	goto	u3181
  4129     1FD5  2FD7               	goto	u3180
  4130     1FD6                     u3181:
  4131     1FD6  2FC8               	goto	l2424
  4132     1FD7                     u3180:
  4133     1FD7  2FEF               	goto	l2434
  4134     1FD8                     l2426:
  4135     1FD8  3020               	movlw	32
  4136     1FD9  0279               	subwf	___fltol@exp1,w
  4137     1FDA  1C03               	skipc
  4138     1FDB  2FDD               	goto	u3191
  4139     1FDC  2FDE               	goto	u3190
  4140     1FDD                     u3191:
  4141     1FDD  2FEA               	goto	l446
  4142     1FDE                     u3190:
  4143     1FDE  2F95               	goto	l2404
  4144     1FDF                     l2432:
  4145     1FDF  3001               	movlw	1
  4146     1FE0  00F4               	movwf	??___fltol
  4147     1FE1                     u3205:
  4148     1FE1  1003               	clrc
  4149     1FE2  0DF0               	rlf	___fltol@f1,f
  4150     1FE3  0DF1               	rlf	___fltol@f1+1,f
  4151     1FE4  0DF2               	rlf	___fltol@f1+2,f
  4152     1FE5  0DF3               	rlf	___fltol@f1+3,f
  4153     1FE6  0BF4               	decfsz	??___fltol,f
  4154     1FE7  2FE1               	goto	u3205
  4155     1FE8  3001               	movlw	1
  4156     1FE9  02F9               	subwf	___fltol@exp1,f
  4157     1FEA                     l446:
  4158     1FEA  0879               	movf	___fltol@exp1,w
  4159     1FEB  1D03               	btfss	3,2
  4160     1FEC  2FEE               	goto	u3211
  4161     1FED  2FEF               	goto	u3210
  4162     1FEE                     u3211:
  4163     1FEE  2FDF               	goto	l2432
  4164     1FEF                     u3210:
  4165     1FEF                     l2434:
  4166     1FEF  0878               	movf	___fltol@sign1,w
  4167     1FF0  1903               	btfsc	3,2
  4168     1FF1  2FF3               	goto	u3221
  4169     1FF2  2FF4               	goto	u3220
  4170     1FF3                     u3221:
  4171     1FF3  2FFF               	goto	l449
  4172     1FF4                     u3220:
  4173     1FF4                     l2436:
  4174     1FF4  09F0               	comf	___fltol@f1,f
  4175     1FF5  09F1               	comf	___fltol@f1+1,f
  4176     1FF6  09F2               	comf	___fltol@f1+2,f
  4177     1FF7  09F3               	comf	___fltol@f1+3,f
  4178     1FF8  0AF0               	incf	___fltol@f1,f
  4179     1FF9  1903               	skipnz
  4180     1FFA  0AF1               	incf	___fltol@f1+1,f
  4181     1FFB  1903               	skipnz
  4182     1FFC  0AF2               	incf	___fltol@f1+2,f
  4183     1FFD  1903               	skipnz
  4184     1FFE  0AF3               	incf	___fltol@f1+3,f
  4185     1FFF                     l449:
  4186     1FFF                     l439:
  4187     1FFF  0008               	return
  4188     2000                     __end_of___fltol:
  4189                           
  4190                           	psect	text17
  4191     1DE3                     __ptext17:	
  4192 ;; *************** function ___flsub *****************
  4193 ;; Defined at:
  4194 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  a               4   26[BANK0 ] long 
  4197 ;;  b               4   30[BANK0 ] long 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  4   26[BANK0 ] long 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4209 ;;      Params:         0       8       0       0       0
  4210 ;;      Locals:         0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0
  4212 ;;      Totals:         0       8       0       0       0
  4213 ;;Total ram usage:        8 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; Hardware stack levels required when called: 1
  4216 ;; This function calls:
  4217 ;;		___fladd
  4218 ;; This function is called by:
  4219 ;;		_efgtoa
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223     1DE3                     ___flsub:	
  4224                           ;psect for function ___flsub
  4225                           
  4226     1DE3                     l2438:	
  4227                           ;incstack = 0
  4228                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4229                           
  4230     1DE3  3080               	movlw	128
  4231     1DE4  1283               	bcf	3,5	;RP0=0, select bank0
  4232     1DE5  1303               	bcf	3,6	;RP1=0, select bank0
  4233     1DE6  06BD               	xorwf	___flsub@a+3,f
  4234     1DE7                     l2440:
  4235     1DE7  0841               	movf	___flsub@b+3,w
  4236     1DE8  00F3               	movwf	___fladd@b+3
  4237     1DE9  0840               	movf	___flsub@b+2,w
  4238     1DEA  00F2               	movwf	___fladd@b+2
  4239     1DEB  083F               	movf	___flsub@b+1,w
  4240     1DEC  00F1               	movwf	___fladd@b+1
  4241     1DED  083E               	movf	___flsub@b,w
  4242     1DEE  00F0               	movwf	___fladd@b
  4243     1DEF  083D               	movf	___flsub@a+3,w
  4244     1DF0  00F7               	movwf	___fladd@a+3
  4245     1DF1  083C               	movf	___flsub@a+2,w
  4246     1DF2  00F6               	movwf	___fladd@a+2
  4247     1DF3  083B               	movf	___flsub@a+1,w
  4248     1DF4  00F5               	movwf	___fladd@a+1
  4249     1DF5  083A               	movf	___flsub@a,w
  4250     1DF6  00F4               	movwf	___fladd@a
  4251     1DF7  120A  158A  2262  160A  158A  	fcall	___fladd
  4252     1DFC  0873               	movf	?___fladd+3,w
  4253     1DFD  1283               	bcf	3,5	;RP0=0, select bank0
  4254     1DFE  1303               	bcf	3,6	;RP1=0, select bank0
  4255     1DFF  00BD               	movwf	?___flsub+3
  4256     1E00  0872               	movf	?___fladd+2,w
  4257     1E01  00BC               	movwf	?___flsub+2
  4258     1E02  0871               	movf	?___fladd+1,w
  4259     1E03  00BB               	movwf	?___flsub+1
  4260     1E04  0870               	movf	?___fladd,w
  4261     1E05  00BA               	movwf	?___flsub
  4262     1E06                     l592:
  4263     1E06  0008               	return
  4264     1E07                     __end_of___flsub:
  4265                           
  4266                           	psect	text18
  4267     0A62                     __ptext18:	
  4268 ;; *************** function ___fladd *****************
  4269 ;; Defined at:
  4270 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  b               4    0[COMMON] long 
  4273 ;;  a               4    4[COMMON] long 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  grs             1   11[COMMON] unsigned char 
  4276 ;;  bexp            1   10[COMMON] unsigned char 
  4277 ;;  aexp            1    9[COMMON] unsigned char 
  4278 ;;  signs           1    8[COMMON] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  4    0[COMMON] unsigned char 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, btemp+1
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         8       0       0       0       0
  4289 ;;      Locals:         4       0       0       0       0
  4290 ;;      Temps:          0       8       0       0       0
  4291 ;;      Totals:        12       8       0       0       0
  4292 ;;Total ram usage:       20 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		___flsub
  4298 ;;		_efgtoa
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302     0A62                     ___fladd:	
  4303                           ;psect for function ___fladd
  4304                           
  4305     0A62                     l2128:	
  4306                           ;incstack = 0
  4307                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4308                           
  4309     0A62  0873               	movf	___fladd@b+3,w
  4310     0A63  00F8               	movwf	___fladd@signs
  4311     0A64                     l2130:
  4312     0A64  3080               	movlw	128
  4313     0A65  05F8               	andwf	___fladd@signs,f
  4314     0A66                     l2132:
  4315     0A66  0873               	movf	___fladd@b+3,w
  4316     0A67  1283               	bcf	3,5	;RP0=0, select bank0
  4317     0A68  1303               	bcf	3,6	;RP1=0, select bank0
  4318     0A69  00A0               	movwf	??___fladd
  4319     0A6A  0720               	addwf	??___fladd,w
  4320     0A6B  00FA               	movwf	___fladd@bexp
  4321     0A6C                     l2134:
  4322     0A6C  1FF2               	btfss	___fladd@b+2,7
  4323     0A6D  2A6F               	goto	u2481
  4324     0A6E  2A70               	goto	u2480
  4325     0A6F                     u2481:
  4326     0A6F  2A71               	goto	l2138
  4327     0A70                     u2480:
  4328     0A70                     l2136:
  4329     0A70  147A               	bsf	___fladd@bexp,0
  4330     0A71                     l2138:
  4331     0A71  087A               	movf	___fladd@bexp,w
  4332     0A72  1903               	btfsc	3,2
  4333     0A73  2A75               	goto	u2491
  4334     0A74  2A76               	goto	u2490
  4335     0A75                     u2491:
  4336     0A75  2A86               	goto	l2148
  4337     0A76                     u2490:
  4338     0A76                     l2140:
  4339     0A76  0A7A               	incf	___fladd@bexp,w
  4340     0A77  1D03               	btfss	3,2
  4341     0A78  2A7A               	goto	u2501
  4342     0A79  2A7B               	goto	u2500
  4343     0A7A                     u2501:
  4344     0A7A  2A83               	goto	l2144
  4345     0A7B                     u2500:
  4346     0A7B                     l2142:
  4347     0A7B  3000               	movlw	0
  4348     0A7C  00F3               	movwf	___fladd@b+3
  4349     0A7D  3000               	movlw	0
  4350     0A7E  00F2               	movwf	___fladd@b+2
  4351     0A7F  3000               	movlw	0
  4352     0A80  00F1               	movwf	___fladd@b+1
  4353     0A81  3000               	movlw	0
  4354     0A82  00F0               	movwf	___fladd@b
  4355     0A83                     l2144:
  4356     0A83  17F2               	bsf	___fladd@b+2,7
  4357     0A84                     l2146:
  4358     0A84  01F3               	clrf	___fladd@b+3
  4359     0A85  2A8E               	goto	l541
  4360     0A86                     l2148:
  4361     0A86  3000               	movlw	0
  4362     0A87  00F3               	movwf	___fladd@b+3
  4363     0A88  3000               	movlw	0
  4364     0A89  00F2               	movwf	___fladd@b+2
  4365     0A8A  3000               	movlw	0
  4366     0A8B  00F1               	movwf	___fladd@b+1
  4367     0A8C  3000               	movlw	0
  4368     0A8D  00F0               	movwf	___fladd@b
  4369     0A8E                     l541:
  4370     0A8E  0877               	movf	___fladd@a+3,w
  4371     0A8F  00F9               	movwf	___fladd@aexp
  4372     0A90                     l2150:
  4373     0A90  3080               	movlw	128
  4374     0A91  05F9               	andwf	___fladd@aexp,f
  4375     0A92                     l2152:
  4376     0A92  0879               	movf	___fladd@aexp,w
  4377     0A93  0678               	xorwf	___fladd@signs,w
  4378     0A94  1903               	skipnz
  4379     0A95  2A97               	goto	u2511
  4380     0A96  2A98               	goto	u2510
  4381     0A97                     u2511:
  4382     0A97  2A99               	goto	l2156
  4383     0A98                     u2510:
  4384     0A98                     l2154:
  4385     0A98  1778               	bsf	___fladd@signs,6
  4386     0A99                     l2156:
  4387     0A99  0877               	movf	___fladd@a+3,w
  4388     0A9A  00A0               	movwf	??___fladd
  4389     0A9B  0720               	addwf	??___fladd,w
  4390     0A9C  00F9               	movwf	___fladd@aexp
  4391     0A9D                     l2158:
  4392     0A9D  1FF6               	btfss	___fladd@a+2,7
  4393     0A9E  2AA0               	goto	u2521
  4394     0A9F  2AA1               	goto	u2520
  4395     0AA0                     u2521:
  4396     0AA0  2AA2               	goto	l2162
  4397     0AA1                     u2520:
  4398     0AA1                     l2160:
  4399     0AA1  1479               	bsf	___fladd@aexp,0
  4400     0AA2                     l2162:
  4401     0AA2  0879               	movf	___fladd@aexp,w
  4402     0AA3  1903               	btfsc	3,2
  4403     0AA4  2AA6               	goto	u2531
  4404     0AA5  2AA7               	goto	u2530
  4405     0AA6                     u2531:
  4406     0AA6  2AB7               	goto	l2172
  4407     0AA7                     u2530:
  4408     0AA7                     l2164:
  4409     0AA7  0A79               	incf	___fladd@aexp,w
  4410     0AA8  1D03               	btfss	3,2
  4411     0AA9  2AAB               	goto	u2541
  4412     0AAA  2AAC               	goto	u2540
  4413     0AAB                     u2541:
  4414     0AAB  2AB4               	goto	l2168
  4415     0AAC                     u2540:
  4416     0AAC                     l2166:
  4417     0AAC  3000               	movlw	0
  4418     0AAD  00F7               	movwf	___fladd@a+3
  4419     0AAE  3000               	movlw	0
  4420     0AAF  00F6               	movwf	___fladd@a+2
  4421     0AB0  3000               	movlw	0
  4422     0AB1  00F5               	movwf	___fladd@a+1
  4423     0AB2  3000               	movlw	0
  4424     0AB3  00F4               	movwf	___fladd@a
  4425     0AB4                     l2168:
  4426     0AB4  17F6               	bsf	___fladd@a+2,7
  4427     0AB5                     l2170:
  4428     0AB5  01F7               	clrf	___fladd@a+3
  4429     0AB6  2ABF               	goto	l546
  4430     0AB7                     l2172:
  4431     0AB7  3000               	movlw	0
  4432     0AB8  00F7               	movwf	___fladd@a+3
  4433     0AB9  3000               	movlw	0
  4434     0ABA  00F6               	movwf	___fladd@a+2
  4435     0ABB  3000               	movlw	0
  4436     0ABC  00F5               	movwf	___fladd@a+1
  4437     0ABD  3000               	movlw	0
  4438     0ABE  00F4               	movwf	___fladd@a
  4439     0ABF                     l546:
  4440     0ABF  087A               	movf	___fladd@bexp,w
  4441     0AC0  0279               	subwf	___fladd@aexp,w
  4442     0AC1  1803               	skipnc
  4443     0AC2  2AC4               	goto	u2551
  4444     0AC3  2AC5               	goto	u2550
  4445     0AC4                     u2551:
  4446     0AC4  2AE9               	goto	l2208
  4447     0AC5                     u2550:
  4448     0AC5                     l2174:
  4449     0AC5  1F78               	btfss	___fladd@signs,6
  4450     0AC6  2AC8               	goto	u2561
  4451     0AC7  2AC9               	goto	u2560
  4452     0AC8                     u2561:
  4453     0AC8  2ACB               	goto	l2178
  4454     0AC9                     u2560:
  4455     0AC9                     l2176:
  4456     0AC9  3080               	movlw	128
  4457     0ACA  06F8               	xorwf	___fladd@signs,f
  4458     0ACB                     l2178:
  4459     0ACB  087A               	movf	___fladd@bexp,w
  4460     0ACC  00FB               	movwf	___fladd@grs
  4461     0ACD                     l2180:
  4462     0ACD  0879               	movf	___fladd@aexp,w
  4463     0ACE  00FA               	movwf	___fladd@bexp
  4464     0ACF                     l2182:
  4465     0ACF  087B               	movf	___fladd@grs,w
  4466     0AD0  00F9               	movwf	___fladd@aexp
  4467     0AD1                     l2184:
  4468     0AD1  0870               	movf	___fladd@b,w
  4469     0AD2  00FB               	movwf	___fladd@grs
  4470     0AD3                     l2186:
  4471     0AD3  0874               	movf	___fladd@a,w
  4472     0AD4  00F0               	movwf	___fladd@b
  4473     0AD5                     l2188:
  4474     0AD5  087B               	movf	___fladd@grs,w
  4475     0AD6  00F4               	movwf	___fladd@a
  4476     0AD7                     l2190:
  4477     0AD7  0871               	movf	___fladd@b+1,w
  4478     0AD8  00FB               	movwf	___fladd@grs
  4479     0AD9                     l2192:
  4480     0AD9  0875               	movf	___fladd@a+1,w
  4481     0ADA  00F1               	movwf	___fladd@b+1
  4482     0ADB                     l2194:
  4483     0ADB  087B               	movf	___fladd@grs,w
  4484     0ADC  00F5               	movwf	___fladd@a+1
  4485     0ADD                     l2196:
  4486     0ADD  0872               	movf	___fladd@b+2,w
  4487     0ADE  00FB               	movwf	___fladd@grs
  4488     0ADF                     l2198:
  4489     0ADF  0876               	movf	___fladd@a+2,w
  4490     0AE0  00F2               	movwf	___fladd@b+2
  4491     0AE1                     l2200:
  4492     0AE1  087B               	movf	___fladd@grs,w
  4493     0AE2  00F6               	movwf	___fladd@a+2
  4494     0AE3                     l2202:
  4495     0AE3  0873               	movf	___fladd@b+3,w
  4496     0AE4  00FB               	movwf	___fladd@grs
  4497     0AE5                     l2204:
  4498     0AE5  0877               	movf	___fladd@a+3,w
  4499     0AE6  00F3               	movwf	___fladd@b+3
  4500     0AE7                     l2206:
  4501     0AE7  087B               	movf	___fladd@grs,w
  4502     0AE8  00F7               	movwf	___fladd@a+3
  4503     0AE9                     l2208:
  4504     0AE9  01FB               	clrf	___fladd@grs
  4505     0AEA                     l2210:
  4506     0AEA  0879               	movf	___fladd@aexp,w
  4507     0AEB  00A0               	movwf	??___fladd
  4508     0AEC  01A1               	clrf	??___fladd+1
  4509     0AED  0821               	movf	??___fladd+1,w
  4510     0AEE  00A3               	movwf	??___fladd+3
  4511     0AEF  087A               	movf	___fladd@bexp,w
  4512     0AF0  0220               	subwf	??___fladd,w
  4513     0AF1  00A2               	movwf	??___fladd+2
  4514     0AF2  1C03               	skipc
  4515     0AF3  03A3               	decf	??___fladd+3,f
  4516     0AF4  0823               	movf	??___fladd+3,w
  4517     0AF5  3A80               	xorlw	128
  4518     0AF6  00FF               	movwf	btemp+1
  4519     0AF7  3080               	movlw	128
  4520     0AF8  027F               	subwf	btemp+1,w
  4521     0AF9  1D03               	skipz
  4522     0AFA  2AFD               	goto	u2575
  4523     0AFB  301A               	movlw	26
  4524     0AFC  0222               	subwf	??___fladd+2,w
  4525     0AFD                     u2575:
  4526     0AFD  1C03               	skipc
  4527     0AFE  2B00               	goto	u2571
  4528     0AFF  2B01               	goto	u2570
  4529     0B00                     u2571:
  4530     0B00  2B38               	goto	l2226
  4531     0B01                     u2570:
  4532     0B01                     l2212:
  4533     0B01  0873               	movf	___fladd@b+3,w
  4534     0B02  0472               	iorwf	___fladd@b+2,w
  4535     0B03  0471               	iorwf	___fladd@b+1,w
  4536     0B04  0470               	iorwf	___fladd@b,w
  4537     0B05  1D03               	skipz
  4538     0B06  2B08               	goto	u2581
  4539     0B07  2B0A               	goto	u2580
  4540     0B08                     u2581:
  4541     0B08  3001               	movlw	1
  4542     0B09  2B0B               	goto	u2590
  4543     0B0A                     u2580:
  4544     0B0A  3000               	movlw	0
  4545     0B0B                     u2590:
  4546     0B0B  00FB               	movwf	___fladd@grs
  4547     0B0C  3000               	movlw	0
  4548     0B0D  00F3               	movwf	___fladd@b+3
  4549     0B0E  3000               	movlw	0
  4550     0B0F  00F2               	movwf	___fladd@b+2
  4551     0B10  3000               	movlw	0
  4552     0B11  00F1               	movwf	___fladd@b+1
  4553     0B12  3000               	movlw	0
  4554     0B13  00F0               	movwf	___fladd@b
  4555     0B14  0879               	movf	___fladd@aexp,w
  4556     0B15  00FA               	movwf	___fladd@bexp
  4557     0B16  2B3E               	goto	l550
  4558     0B17                     l552:
  4559     0B17  1C7B               	btfss	___fladd@grs,0
  4560     0B18  2B1A               	goto	u2601
  4561     0B19  2B1B               	goto	u2600
  4562     0B1A                     u2601:
  4563     0B1A  2B24               	goto	l2216
  4564     0B1B                     u2600:
  4565     0B1B                     l2214:
  4566     0B1B  087B               	movf	___fladd@grs,w
  4567     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  4568     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  4569     0B1E  00A0               	movwf	??___fladd
  4570     0B1F  1003               	clrc
  4571     0B20  0C20               	rrf	??___fladd,w
  4572     0B21  3801               	iorlw	1
  4573     0B22  00FB               	movwf	___fladd@grs
  4574     0B23  2B26               	goto	l2218
  4575     0B24                     l2216:
  4576     0B24  1003               	clrc
  4577     0B25  0CFB               	rrf	___fladd@grs,f
  4578     0B26                     l2218:
  4579     0B26  1C70               	btfss	___fladd@b,0
  4580     0B27  2B29               	goto	u2611
  4581     0B28  2B2A               	goto	u2610
  4582     0B29                     u2611:
  4583     0B29  2B2B               	goto	l2222
  4584     0B2A                     u2610:
  4585     0B2A                     l2220:
  4586     0B2A  17FB               	bsf	___fladd@grs,7
  4587     0B2B                     l2222:
  4588     0B2B  3001               	movlw	1
  4589     0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  4590     0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  4591     0B2E  00A0               	movwf	??___fladd
  4592     0B2F                     u2625:
  4593     0B2F  0D73               	rlf	___fladd@b+3,w
  4594     0B30  0CF3               	rrf	___fladd@b+3,f
  4595     0B31  0CF2               	rrf	___fladd@b+2,f
  4596     0B32  0CF1               	rrf	___fladd@b+1,f
  4597     0B33  0CF0               	rrf	___fladd@b,f
  4598     0B34  0BA0               	decfsz	??___fladd& (0+127),f
  4599     0B35  2B2F               	goto	u2625
  4600     0B36                     l2224:
  4601     0B36  3001               	movlw	1
  4602     0B37  07FA               	addwf	___fladd@bexp,f
  4603     0B38                     l2226:
  4604     0B38  0879               	movf	___fladd@aexp,w
  4605     0B39  027A               	subwf	___fladd@bexp,w
  4606     0B3A  1C03               	skipc
  4607     0B3B  2B3D               	goto	u2631
  4608     0B3C  2B3E               	goto	u2630
  4609     0B3D                     u2631:
  4610     0B3D  2B17               	goto	l552
  4611     0B3E                     u2630:
  4612     0B3E                     l550:
  4613     0B3E  1B78               	btfsc	___fladd@signs,6
  4614     0B3F  2B41               	goto	u2641
  4615     0B40  2B42               	goto	u2640
  4616     0B41                     u2641:
  4617     0B41  2B8D               	goto	l2252
  4618     0B42                     u2640:
  4619     0B42                     l2228:
  4620     0B42  087A               	movf	___fladd@bexp,w
  4621     0B43  1D03               	btfss	3,2
  4622     0B44  2B46               	goto	u2651
  4623     0B45  2B47               	goto	u2650
  4624     0B46                     u2651:
  4625     0B46  2B50               	goto	l2234
  4626     0B47                     u2650:
  4627     0B47                     l2230:
  4628     0B47  3000               	movlw	0
  4629     0B48  00F3               	movwf	?___fladd+3
  4630     0B49  3000               	movlw	0
  4631     0B4A  00F2               	movwf	?___fladd+2
  4632     0B4B  3000               	movlw	0
  4633     0B4C  00F1               	movwf	?___fladd+1
  4634     0B4D  3000               	movlw	0
  4635     0B4E  00F0               	movwf	?___fladd
  4636     0B4F  2CBD               	goto	l559
  4637     0B50                     l2234:
  4638     0B50  0874               	movf	___fladd@a,w
  4639     0B51  07F0               	addwf	___fladd@b,f
  4640     0B52  0875               	movf	___fladd@a+1,w
  4641     0B53  1103               	clrz
  4642     0B54  1803               	skipnc
  4643     0B55  3E01               	addlw	1
  4644     0B56  1903               	skipnz
  4645     0B57  2B59               	goto	u2661
  4646     0B58  07F1               	addwf	___fladd@b+1,f
  4647     0B59                     u2661:
  4648     0B59  0876               	movf	___fladd@a+2,w
  4649     0B5A  1103               	clrz
  4650     0B5B  1803               	skipnc
  4651     0B5C  3E01               	addlw	1
  4652     0B5D  1903               	skipnz
  4653     0B5E  2B60               	goto	u2662
  4654     0B5F  07F2               	addwf	___fladd@b+2,f
  4655     0B60                     u2662:
  4656     0B60  0877               	movf	___fladd@a+3,w
  4657     0B61  1103               	clrz
  4658     0B62  1803               	skipnc
  4659     0B63  3E01               	addlw	1
  4660     0B64  1903               	skipnz
  4661     0B65  2B67               	goto	u2663
  4662     0B66  07F3               	addwf	___fladd@b+3,f
  4663     0B67                     u2663:
  4664     0B67                     l2236:
  4665     0B67  1C73               	btfss	___fladd@b+3,0
  4666     0B68  2B6A               	goto	u2671
  4667     0B69  2B6B               	goto	u2670
  4668     0B6A                     u2671:
  4669     0B6A  2C45               	goto	l2288
  4670     0B6B                     u2670:
  4671     0B6B                     l2238:
  4672     0B6B  1C7B               	btfss	___fladd@grs,0
  4673     0B6C  2B6E               	goto	u2681
  4674     0B6D  2B6F               	goto	u2680
  4675     0B6E                     u2681:
  4676     0B6E  2B78               	goto	l2242
  4677     0B6F                     u2680:
  4678     0B6F                     l2240:
  4679     0B6F  087B               	movf	___fladd@grs,w
  4680     0B70  1283               	bcf	3,5	;RP0=0, select bank0
  4681     0B71  1303               	bcf	3,6	;RP1=0, select bank0
  4682     0B72  00A0               	movwf	??___fladd
  4683     0B73  1003               	clrc
  4684     0B74  0C20               	rrf	??___fladd,w
  4685     0B75  3801               	iorlw	1
  4686     0B76  00FB               	movwf	___fladd@grs
  4687     0B77  2B7A               	goto	l2244
  4688     0B78                     l2242:
  4689     0B78  1003               	clrc
  4690     0B79  0CFB               	rrf	___fladd@grs,f
  4691     0B7A                     l2244:
  4692     0B7A  1C70               	btfss	___fladd@b,0
  4693     0B7B  2B7D               	goto	u2691
  4694     0B7C  2B7E               	goto	u2690
  4695     0B7D                     u2691:
  4696     0B7D  2B7F               	goto	l2248
  4697     0B7E                     u2690:
  4698     0B7E                     l2246:
  4699     0B7E  17FB               	bsf	___fladd@grs,7
  4700     0B7F                     l2248:
  4701     0B7F  3001               	movlw	1
  4702     0B80  1283               	bcf	3,5	;RP0=0, select bank0
  4703     0B81  1303               	bcf	3,6	;RP1=0, select bank0
  4704     0B82  00A0               	movwf	??___fladd
  4705     0B83                     u2705:
  4706     0B83  0D73               	rlf	___fladd@b+3,w
  4707     0B84  0CF3               	rrf	___fladd@b+3,f
  4708     0B85  0CF2               	rrf	___fladd@b+2,f
  4709     0B86  0CF1               	rrf	___fladd@b+1,f
  4710     0B87  0CF0               	rrf	___fladd@b,f
  4711     0B88  0BA0               	decfsz	??___fladd& (0+127),f
  4712     0B89  2B83               	goto	u2705
  4713     0B8A                     l2250:
  4714     0B8A  3001               	movlw	1
  4715     0B8B  07FA               	addwf	___fladd@bexp,f
  4716     0B8C  2C45               	goto	l2288
  4717     0B8D                     l2252:
  4718     0B8D  0873               	movf	___fladd@b+3,w
  4719     0B8E  3A80               	xorlw	128
  4720     0B8F  00FF               	movwf	btemp+1
  4721     0B90  0877               	movf	___fladd@a+3,w
  4722     0B91  3A80               	xorlw	128
  4723     0B92  027F               	subwf	btemp+1,w
  4724     0B93  1D03               	skipz
  4725     0B94  2B9F               	goto	u2713
  4726     0B95  0876               	movf	___fladd@a+2,w
  4727     0B96  0272               	subwf	___fladd@b+2,w
  4728     0B97  1D03               	skipz
  4729     0B98  2B9F               	goto	u2713
  4730     0B99  0875               	movf	___fladd@a+1,w
  4731     0B9A  0271               	subwf	___fladd@b+1,w
  4732     0B9B  1D03               	skipz
  4733     0B9C  2B9F               	goto	u2713
  4734     0B9D  0874               	movf	___fladd@a,w
  4735     0B9E  0270               	subwf	___fladd@b,w
  4736     0B9F                     u2713:
  4737     0B9F  1803               	skipnc
  4738     0BA0  2BA2               	goto	u2711
  4739     0BA1  2BA3               	goto	u2710
  4740     0BA2                     u2711:
  4741     0BA2  2BFC               	goto	l2264
  4742     0BA3                     u2710:
  4743     0BA3                     l2254:
  4744     0BA3  30FF               	movlw	255
  4745     0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  4746     0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  4747     0BA6  00A0               	movwf	??___fladd
  4748     0BA7  30FF               	movlw	255
  4749     0BA8  00A1               	movwf	??___fladd+1
  4750     0BA9  30FF               	movlw	255
  4751     0BAA  00A2               	movwf	??___fladd+2
  4752     0BAB  30FF               	movlw	255
  4753     0BAC  00A3               	movwf	??___fladd+3
  4754     0BAD  0874               	movf	___fladd@a,w
  4755     0BAE  00A4               	movwf	??___fladd+4
  4756     0BAF  0875               	movf	___fladd@a+1,w
  4757     0BB0  00A5               	movwf	??___fladd+5
  4758     0BB1  0876               	movf	___fladd@a+2,w
  4759     0BB2  00A6               	movwf	??___fladd+6
  4760     0BB3  0877               	movf	___fladd@a+3,w
  4761     0BB4  00A7               	movwf	??___fladd+7
  4762     0BB5  0870               	movf	___fladd@b,w
  4763     0BB6  02A4               	subwf	??___fladd+4,f
  4764     0BB7  0871               	movf	___fladd@b+1,w
  4765     0BB8  1C03               	skipc
  4766     0BB9  0F71               	incfsz	___fladd@b+1,w
  4767     0BBA  2BBC               	goto	u2721
  4768     0BBB  2BBD               	goto	u2722
  4769     0BBC                     u2721:
  4770     0BBC  02A5               	subwf	??___fladd+5,f
  4771     0BBD                     u2722:
  4772     0BBD  0872               	movf	___fladd@b+2,w
  4773     0BBE  1C03               	skipc
  4774     0BBF  0F72               	incfsz	___fladd@b+2,w
  4775     0BC0  2BC2               	goto	u2723
  4776     0BC1  2BC3               	goto	u2724
  4777     0BC2                     u2723:
  4778     0BC2  02A6               	subwf	??___fladd+6,f
  4779     0BC3                     u2724:
  4780     0BC3  0873               	movf	___fladd@b+3,w
  4781     0BC4  1C03               	skipc
  4782     0BC5  0F73               	incfsz	___fladd@b+3,w
  4783     0BC6  2BC8               	goto	u2725
  4784     0BC7  2BC9               	goto	u2726
  4785     0BC8                     u2725:
  4786     0BC8  02A7               	subwf	??___fladd+7,f
  4787     0BC9                     u2726:
  4788     0BC9  0824               	movf	??___fladd+4,w
  4789     0BCA  07A0               	addwf	??___fladd,f
  4790     0BCB  0825               	movf	??___fladd+5,w
  4791     0BCC  1803               	skipnc
  4792     0BCD  0F25               	incfsz	??___fladd+5,w
  4793     0BCE  2BD0               	goto	u2730
  4794     0BCF  2BD1               	goto	u2731
  4795     0BD0                     u2730:
  4796     0BD0  07A1               	addwf	??___fladd+1,f
  4797     0BD1                     u2731:
  4798     0BD1  0826               	movf	??___fladd+6,w
  4799     0BD2  1803               	skipnc
  4800     0BD3  0F26               	incfsz	??___fladd+6,w
  4801     0BD4  2BD6               	goto	u2732
  4802     0BD5  2BD7               	goto	u2733
  4803     0BD6                     u2732:
  4804     0BD6  07A2               	addwf	??___fladd+2,f
  4805     0BD7                     u2733:
  4806     0BD7  0827               	movf	??___fladd+7,w
  4807     0BD8  1803               	skipnc
  4808     0BD9  0A27               	incf	??___fladd+7,w
  4809     0BDA  07A3               	addwf	??___fladd+3,f
  4810     0BDB  0823               	movf	??___fladd+3,w
  4811     0BDC  00F3               	movwf	___fladd@b+3
  4812     0BDD  0822               	movf	??___fladd+2,w
  4813     0BDE  00F2               	movwf	___fladd@b+2
  4814     0BDF  0821               	movf	??___fladd+1,w
  4815     0BE0  00F1               	movwf	___fladd@b+1
  4816     0BE1  0820               	movf	??___fladd,w
  4817     0BE2  00F0               	movwf	___fladd@b
  4818     0BE3                     l2256:
  4819     0BE3  3080               	movlw	128
  4820     0BE4  06F8               	xorwf	___fladd@signs,f
  4821     0BE5                     l2258:
  4822     0BE5  037B               	decf	___fladd@grs,w
  4823     0BE6  3AFF               	xorlw	255
  4824     0BE7  00FB               	movwf	___fladd@grs
  4825     0BE8                     l2260:
  4826     0BE8  087B               	movf	___fladd@grs,w
  4827     0BE9  1D03               	btfss	3,2
  4828     0BEA  2BEC               	goto	u2741
  4829     0BEB  2BED               	goto	u2740
  4830     0BEC                     u2741:
  4831     0BEC  2C0A               	goto	l567
  4832     0BED                     u2740:
  4833     0BED                     l2262:
  4834     0BED  3001               	movlw	1
  4835     0BEE  07F0               	addwf	___fladd@b,f
  4836     0BEF  3000               	movlw	0
  4837     0BF0  1803               	skipnc
  4838     0BF1  3001               	movlw	1
  4839     0BF2  07F1               	addwf	___fladd@b+1,f
  4840     0BF3  3000               	movlw	0
  4841     0BF4  1803               	skipnc
  4842     0BF5  3001               	movlw	1
  4843     0BF6  07F2               	addwf	___fladd@b+2,f
  4844     0BF7  3000               	movlw	0
  4845     0BF8  1803               	skipnc
  4846     0BF9  3001               	movlw	1
  4847     0BFA  07F3               	addwf	___fladd@b+3,f
  4848     0BFB  2C0A               	goto	l567
  4849     0BFC                     l2264:
  4850     0BFC  0874               	movf	___fladd@a,w
  4851     0BFD  02F0               	subwf	___fladd@b,f
  4852     0BFE  0875               	movf	___fladd@a+1,w
  4853     0BFF  1C03               	skipc
  4854     0C00  0F75               	incfsz	___fladd@a+1,w
  4855     0C01  02F1               	subwf	___fladd@b+1,f
  4856     0C02  0876               	movf	___fladd@a+2,w
  4857     0C03  1C03               	skipc
  4858     0C04  0F76               	incfsz	___fladd@a+2,w
  4859     0C05  02F2               	subwf	___fladd@b+2,f
  4860     0C06  0877               	movf	___fladd@a+3,w
  4861     0C07  1C03               	skipc
  4862     0C08  0F77               	incfsz	___fladd@a+3,w
  4863     0C09  02F3               	subwf	___fladd@b+3,f
  4864     0C0A                     l567:
  4865     0C0A  0873               	movf	___fladd@b+3,w
  4866     0C0B  0472               	iorwf	___fladd@b+2,w
  4867     0C0C  0471               	iorwf	___fladd@b+1,w
  4868     0C0D  0470               	iorwf	___fladd@b,w
  4869     0C0E  1D03               	skipz
  4870     0C0F  2C11               	goto	u2751
  4871     0C10  2C12               	goto	u2750
  4872     0C11                     u2751:
  4873     0C11  2C41               	goto	l2286
  4874     0C12                     u2750:
  4875     0C12                     l2266:
  4876     0C12  087B               	movf	___fladd@grs,w
  4877     0C13  1D03               	btfss	3,2
  4878     0C14  2C16               	goto	u2761
  4879     0C15  2C17               	goto	u2760
  4880     0C16                     u2761:
  4881     0C16  2C41               	goto	l2286
  4882     0C17                     u2760:
  4883     0C17                     l2268:
  4884     0C17  3000               	movlw	0
  4885     0C18  00F3               	movwf	?___fladd+3
  4886     0C19  3000               	movlw	0
  4887     0C1A  00F2               	movwf	?___fladd+2
  4888     0C1B  3000               	movlw	0
  4889     0C1C  00F1               	movwf	?___fladd+1
  4890     0C1D  3000               	movlw	0
  4891     0C1E  00F0               	movwf	?___fladd
  4892     0C1F  2CBD               	goto	l559
  4893     0C20                     l2272:
  4894     0C20  3001               	movlw	1
  4895     0C21  1283               	bcf	3,5	;RP0=0, select bank0
  4896     0C22  1303               	bcf	3,6	;RP1=0, select bank0
  4897     0C23  00A0               	movwf	??___fladd
  4898     0C24                     u2775:
  4899     0C24  1003               	clrc
  4900     0C25  0DF0               	rlf	___fladd@b,f
  4901     0C26  0DF1               	rlf	___fladd@b+1,f
  4902     0C27  0DF2               	rlf	___fladd@b+2,f
  4903     0C28  0DF3               	rlf	___fladd@b+3,f
  4904     0C29  0BA0               	decfsz	??___fladd,f
  4905     0C2A  2C24               	goto	u2775
  4906     0C2B                     l2274:
  4907     0C2B  1FFB               	btfss	___fladd@grs,7
  4908     0C2C  2C2E               	goto	u2781
  4909     0C2D  2C2F               	goto	u2780
  4910     0C2E                     u2781:
  4911     0C2E  2C30               	goto	l571
  4912     0C2F                     u2780:
  4913     0C2F                     l2276:
  4914     0C2F  1470               	bsf	___fladd@b,0
  4915     0C30                     l571:
  4916     0C30  1C7B               	btfss	___fladd@grs,0
  4917     0C31  2C33               	goto	u2791
  4918     0C32  2C34               	goto	u2790
  4919     0C33                     u2791:
  4920     0C33  2C38               	goto	l2280
  4921     0C34                     u2790:
  4922     0C34                     l2278:
  4923     0C34  1403               	setc
  4924     0C35  0D7B               	rlf	___fladd@grs,w
  4925     0C36  00FB               	movwf	___fladd@grs
  4926     0C37  2C3A               	goto	l2282
  4927     0C38                     l2280:
  4928     0C38  1003               	clrc
  4929     0C39  0DFB               	rlf	___fladd@grs,f
  4930     0C3A                     l2282:
  4931     0C3A  087A               	movf	___fladd@bexp,w
  4932     0C3B  1903               	btfsc	3,2
  4933     0C3C  2C3E               	goto	u2801
  4934     0C3D  2C3F               	goto	u2800
  4935     0C3E                     u2801:
  4936     0C3E  2C41               	goto	l2286
  4937     0C3F                     u2800:
  4938     0C3F                     l2284:
  4939     0C3F  3001               	movlw	1
  4940     0C40  02FA               	subwf	___fladd@bexp,f
  4941     0C41                     l2286:
  4942     0C41  1FF2               	btfss	___fladd@b+2,7
  4943     0C42  2C44               	goto	u2811
  4944     0C43  2C45               	goto	u2810
  4945     0C44                     u2811:
  4946     0C44  2C20               	goto	l2272
  4947     0C45                     u2810:
  4948     0C45                     l2288:
  4949     0C45  01F9               	clrf	___fladd@aexp
  4950     0C46                     l2290:
  4951     0C46  1FFB               	btfss	___fladd@grs,7
  4952     0C47  2C49               	goto	u2821
  4953     0C48  2C4A               	goto	u2820
  4954     0C49                     u2821:
  4955     0C49  2C58               	goto	l2298
  4956     0C4A                     u2820:
  4957     0C4A                     l2292:
  4958     0C4A  087B               	movf	___fladd@grs,w
  4959     0C4B  397F               	andlw	127
  4960     0C4C  1903               	btfsc	3,2
  4961     0C4D  2C4F               	goto	u2831
  4962     0C4E  2C50               	goto	u2830
  4963     0C4F                     u2831:
  4964     0C4F  2C53               	goto	l577
  4965     0C50                     u2830:
  4966     0C50                     l2294:
  4967     0C50  3001               	movlw	1
  4968     0C51  00F9               	movwf	___fladd@aexp
  4969     0C52  2C58               	goto	l2298
  4970     0C53                     l577:
  4971     0C53  1C70               	btfss	___fladd@b,0
  4972     0C54  2C56               	goto	u2841
  4973     0C55  2C57               	goto	u2840
  4974     0C56                     u2841:
  4975     0C56  2C58               	goto	l2298
  4976     0C57                     u2840:
  4977     0C57  2C50               	goto	l2294
  4978     0C58                     l2298:
  4979     0C58  0879               	movf	___fladd@aexp,w
  4980     0C59  1903               	btfsc	3,2
  4981     0C5A  2C5C               	goto	u2851
  4982     0C5B  2C5D               	goto	u2850
  4983     0C5C                     u2851:
  4984     0C5C  2C91               	goto	l580
  4985     0C5D                     u2850:
  4986     0C5D                     l2300:
  4987     0C5D  3001               	movlw	1
  4988     0C5E  07F0               	addwf	___fladd@b,f
  4989     0C5F  3000               	movlw	0
  4990     0C60  1803               	skipnc
  4991     0C61  3001               	movlw	1
  4992     0C62  07F1               	addwf	___fladd@b+1,f
  4993     0C63  3000               	movlw	0
  4994     0C64  1803               	skipnc
  4995     0C65  3001               	movlw	1
  4996     0C66  07F2               	addwf	___fladd@b+2,f
  4997     0C67  3000               	movlw	0
  4998     0C68  1803               	skipnc
  4999     0C69  3001               	movlw	1
  5000     0C6A  07F3               	addwf	___fladd@b+3,f
  5001     0C6B                     l2302:
  5002     0C6B  1C73               	btfss	___fladd@b+3,0
  5003     0C6C  2C6E               	goto	u2861
  5004     0C6D  2C6F               	goto	u2860
  5005     0C6E                     u2861:
  5006     0C6E  2C91               	goto	l580
  5007     0C6F                     u2860:
  5008     0C6F                     l2304:
  5009     0C6F  0870               	movf	___fladd@b,w
  5010     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5011     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5012     0C72  00A0               	movwf	??___fladd
  5013     0C73  0871               	movf	___fladd@b+1,w
  5014     0C74  00A1               	movwf	??___fladd+1
  5015     0C75  0872               	movf	___fladd@b+2,w
  5016     0C76  00A2               	movwf	??___fladd+2
  5017     0C77  0873               	movf	___fladd@b+3,w
  5018     0C78  00A3               	movwf	??___fladd+3
  5019     0C79  3001               	movlw	1
  5020     0C7A  00A4               	movwf	??___fladd+4
  5021     0C7B                     u2875:
  5022     0C7B  0D23               	rlf	??___fladd+3,w
  5023     0C7C  0CA3               	rrf	??___fladd+3,f
  5024     0C7D  0CA2               	rrf	??___fladd+2,f
  5025     0C7E  0CA1               	rrf	??___fladd+1,f
  5026     0C7F  0CA0               	rrf	??___fladd,f
  5027     0C80                     u2870:
  5028     0C80  0BA4               	decfsz	??___fladd+4,f
  5029     0C81  2C7B               	goto	u2875
  5030     0C82  0823               	movf	??___fladd+3,w
  5031     0C83  00F3               	movwf	___fladd@b+3
  5032     0C84  0822               	movf	??___fladd+2,w
  5033     0C85  00F2               	movwf	___fladd@b+2
  5034     0C86  0821               	movf	??___fladd+1,w
  5035     0C87  00F1               	movwf	___fladd@b+1
  5036     0C88  0820               	movf	??___fladd,w
  5037     0C89  00F0               	movwf	___fladd@b
  5038     0C8A  0A7A               	incf	___fladd@bexp,w
  5039     0C8B  1903               	btfsc	3,2
  5040     0C8C  2C8E               	goto	u2881
  5041     0C8D  2C8F               	goto	u2880
  5042     0C8E                     u2881:
  5043     0C8E  2C91               	goto	l580
  5044     0C8F                     u2880:
  5045     0C8F                     l2306:
  5046     0C8F  3001               	movlw	1
  5047     0C90  07FA               	addwf	___fladd@bexp,f
  5048     0C91                     l580:
  5049     0C91  0A7A               	incf	___fladd@bexp,w
  5050     0C92  1903               	btfsc	3,2
  5051     0C93  2C95               	goto	u2891
  5052     0C94  2C96               	goto	u2890
  5053     0C95                     u2891:
  5054     0C95  2C9B               	goto	l2310
  5055     0C96                     u2890:
  5056     0C96                     l2308:
  5057     0C96  087A               	movf	___fladd@bexp,w
  5058     0C97  1D03               	btfss	3,2
  5059     0C98  2C9A               	goto	u2901
  5060     0C99  2C9B               	goto	u2900
  5061     0C9A                     u2901:
  5062     0C9A  2CA9               	goto	l2316
  5063     0C9B                     u2900:
  5064     0C9B                     l2310:
  5065     0C9B  3000               	movlw	0
  5066     0C9C  00F3               	movwf	___fladd@b+3
  5067     0C9D  3000               	movlw	0
  5068     0C9E  00F2               	movwf	___fladd@b+2
  5069     0C9F  3000               	movlw	0
  5070     0CA0  00F1               	movwf	___fladd@b+1
  5071     0CA1  3000               	movlw	0
  5072     0CA2  00F0               	movwf	___fladd@b
  5073     0CA3                     l2312:
  5074     0CA3  087A               	movf	___fladd@bexp,w
  5075     0CA4  1D03               	btfss	3,2
  5076     0CA5  2CA7               	goto	u2911
  5077     0CA6  2CA8               	goto	u2910
  5078     0CA7                     u2911:
  5079     0CA7  2CA9               	goto	l2316
  5080     0CA8                     u2910:
  5081     0CA8                     l2314:
  5082     0CA8  01F8               	clrf	___fladd@signs
  5083     0CA9                     l2316:
  5084     0CA9  1C7A               	btfss	___fladd@bexp,0
  5085     0CAA  2CAC               	goto	u2921
  5086     0CAB  2CAD               	goto	u2920
  5087     0CAC                     u2921:
  5088     0CAC  2CAF               	goto	l2320
  5089     0CAD                     u2920:
  5090     0CAD                     l2318:
  5091     0CAD  17F2               	bsf	___fladd@b+2,7
  5092     0CAE  2CB1               	goto	l588
  5093     0CAF                     l2320:
  5094     0CAF  307F               	movlw	127
  5095     0CB0  05F2               	andwf	___fladd@b+2,f
  5096     0CB1                     l588:
  5097     0CB1  087A               	movf	___fladd@bexp,w
  5098     0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  5099     0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  5100     0CB4  00A0               	movwf	??___fladd
  5101     0CB5  1003               	clrc
  5102     0CB6  0C20               	rrf	??___fladd,w
  5103     0CB7  00F3               	movwf	___fladd@b+3
  5104     0CB8                     l2322:
  5105     0CB8  1FF8               	btfss	___fladd@signs,7
  5106     0CB9  2CBB               	goto	u2931
  5107     0CBA  2CBC               	goto	u2930
  5108     0CBB                     u2931:
  5109     0CBB  2CBD               	goto	l589
  5110     0CBC                     u2930:
  5111     0CBC                     l2324:
  5112     0CBC  17F3               	bsf	___fladd@b+3,7
  5113     0CBD                     l589:
  5114     0CBD                     l559:
  5115     0CBD  0008               	return
  5116     0CBE                     __end_of___fladd:
  5117                           
  5118                           	psect	text19
  5119     0800                     __ptext19:	
  5120 ;; *************** function ___flneg *****************
  5121 ;; Defined at:
  5122 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  f1              4    0[COMMON] unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  4    0[COMMON] unsigned char 
  5129 ;; Registers used:
  5130 ;;		wreg
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5136 ;;      Params:         4       0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0
  5139 ;;      Totals:         4       0       0       0       0
  5140 ;;Total ram usage:        4 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_efgtoa
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149     0800                     ___flneg:	
  5150                           ;psect for function ___flneg
  5151                           
  5152     0800                     l2394:	
  5153                           ;incstack = 0
  5154                           ; Regs used in ___flneg: [wreg]
  5155                           
  5156     0800  0873               	movf	___flneg@f1+3,w
  5157     0801  0472               	iorwf	___flneg@f1+2,w
  5158     0802  0471               	iorwf	___flneg@f1+1,w
  5159     0803  0470               	iorwf	___flneg@f1,w
  5160     0804  1903               	skipnz
  5161     0805  2807               	goto	u3121
  5162     0806  2808               	goto	u3120
  5163     0807                     u3121:
  5164     0807  280A               	goto	l2398
  5165     0808                     u3120:
  5166     0808                     l2396:
  5167     0808  3080               	movlw	128
  5168     0809  06F3               	xorwf	___flneg@f1+3,f
  5169     080A                     l2398:
  5170     080A                     l435:
  5171     080A  0008               	return
  5172     080B                     __end_of___flneg:
  5173                           
  5174                           	psect	text20
  5175     1109                     __ptext20:	
  5176 ;; *************** function ___flge *****************
  5177 ;; Defined at:
  5178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  ff1             4   26[BANK0 ] unsigned char 
  5181 ;;  ff2             4   30[BANK0 ] unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;		None               void
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5193 ;;      Params:         0       8       0       0       0
  5194 ;;      Locals:         0       0       0       0       0
  5195 ;;      Temps:          0       4       0       0       0
  5196 ;;      Totals:         0      12       0       0       0
  5197 ;;Total ram usage:       12 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_efgtoa
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206     1109                     ___flge:	
  5207                           ;psect for function ___flge
  5208                           
  5209     1109                     l2374:	
  5210                           ;incstack = 0
  5211                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5212                           
  5213     1109  3000               	movlw	0
  5214     110A  1283               	bcf	3,5	;RP0=0, select bank0
  5215     110B  1303               	bcf	3,6	;RP1=0, select bank0
  5216     110C  053A               	andwf	___flge@ff1,w
  5217     110D  00C2               	movwf	??___flge
  5218     110E  3000               	movlw	0
  5219     110F  053B               	andwf	___flge@ff1+1,w
  5220     1110  00C3               	movwf	??___flge+1
  5221     1111  3080               	movlw	128
  5222     1112  053C               	andwf	___flge@ff1+2,w
  5223     1113  00C4               	movwf	??___flge+2
  5224     1114  307F               	movlw	127
  5225     1115  053D               	andwf	___flge@ff1+3,w
  5226     1116  00C5               	movwf	??___flge+3
  5227     1117  0845               	movf	??___flge+3,w
  5228     1118  0444               	iorwf	??___flge+2,w
  5229     1119  0443               	iorwf	??___flge+1,w
  5230     111A  0442               	iorwf	??___flge,w
  5231     111B  1D03               	skipz
  5232     111C  291E               	goto	u3051
  5233     111D  291F               	goto	u3050
  5234     111E                     u3051:
  5235     111E  2927               	goto	l423
  5236     111F                     u3050:
  5237     111F                     l2376:
  5238     111F  3000               	movlw	0
  5239     1120  00BD               	movwf	___flge@ff1+3
  5240     1121  3000               	movlw	0
  5241     1122  00BC               	movwf	___flge@ff1+2
  5242     1123  3000               	movlw	0
  5243     1124  00BB               	movwf	___flge@ff1+1
  5244     1125  3000               	movlw	0
  5245     1126  00BA               	movwf	___flge@ff1
  5246     1127                     l423:
  5247     1127  3000               	movlw	0
  5248     1128  053E               	andwf	___flge@ff2,w
  5249     1129  00C2               	movwf	??___flge
  5250     112A  3000               	movlw	0
  5251     112B  053F               	andwf	___flge@ff2+1,w
  5252     112C  00C3               	movwf	??___flge+1
  5253     112D  3080               	movlw	128
  5254     112E  0540               	andwf	___flge@ff2+2,w
  5255     112F  00C4               	movwf	??___flge+2
  5256     1130  307F               	movlw	127
  5257     1131  0541               	andwf	___flge@ff2+3,w
  5258     1132  00C5               	movwf	??___flge+3
  5259     1133  0845               	movf	??___flge+3,w
  5260     1134  0444               	iorwf	??___flge+2,w
  5261     1135  0443               	iorwf	??___flge+1,w
  5262     1136  0442               	iorwf	??___flge,w
  5263     1137  1D03               	skipz
  5264     1138  293A               	goto	u3061
  5265     1139  293B               	goto	u3060
  5266     113A                     u3061:
  5267     113A  2943               	goto	l2380
  5268     113B                     u3060:
  5269     113B                     l2378:
  5270     113B  3000               	movlw	0
  5271     113C  00C1               	movwf	___flge@ff2+3
  5272     113D  3000               	movlw	0
  5273     113E  00C0               	movwf	___flge@ff2+2
  5274     113F  3000               	movlw	0
  5275     1140  00BF               	movwf	___flge@ff2+1
  5276     1141  3000               	movlw	0
  5277     1142  00BE               	movwf	___flge@ff2
  5278     1143                     l2380:
  5279     1143  1FBD               	btfss	___flge@ff1+3,7
  5280     1144  2946               	goto	u3071
  5281     1145  2947               	goto	u3070
  5282     1146                     u3071:
  5283     1146  296B               	goto	l2384
  5284     1147                     u3070:
  5285     1147                     l2382:
  5286     1147  3000               	movlw	0
  5287     1148  00C2               	movwf	??___flge
  5288     1149  3000               	movlw	0
  5289     114A  00C3               	movwf	??___flge+1
  5290     114B  3000               	movlw	0
  5291     114C  00C4               	movwf	??___flge+2
  5292     114D  3080               	movlw	128
  5293     114E  00C5               	movwf	??___flge+3
  5294     114F  083A               	movf	___flge@ff1,w
  5295     1150  02C2               	subwf	??___flge,f
  5296     1151  083B               	movf	___flge@ff1+1,w
  5297     1152  1C03               	skipc
  5298     1153  0F3B               	incfsz	___flge@ff1+1,w
  5299     1154  2956               	goto	u3081
  5300     1155  2957               	goto	u3082
  5301     1156                     u3081:
  5302     1156  02C3               	subwf	??___flge+1,f
  5303     1157                     u3082:
  5304     1157  083C               	movf	___flge@ff1+2,w
  5305     1158  1C03               	skipc
  5306     1159  0F3C               	incfsz	___flge@ff1+2,w
  5307     115A  295C               	goto	u3083
  5308     115B  295D               	goto	u3084
  5309     115C                     u3083:
  5310     115C  02C4               	subwf	??___flge+2,f
  5311     115D                     u3084:
  5312     115D  083D               	movf	___flge@ff1+3,w
  5313     115E  1C03               	skipc
  5314     115F  0F3D               	incfsz	___flge@ff1+3,w
  5315     1160  2962               	goto	u3085
  5316     1161  2963               	goto	u3086
  5317     1162                     u3085:
  5318     1162  02C5               	subwf	??___flge+3,f
  5319     1163                     u3086:
  5320     1163  0845               	movf	??___flge+3,w
  5321     1164  00BD               	movwf	___flge@ff1+3
  5322     1165  0844               	movf	??___flge+2,w
  5323     1166  00BC               	movwf	___flge@ff1+2
  5324     1167  0843               	movf	??___flge+1,w
  5325     1168  00BB               	movwf	___flge@ff1+1
  5326     1169  0842               	movf	??___flge,w
  5327     116A  00BA               	movwf	___flge@ff1
  5328     116B                     l2384:
  5329     116B  1FC1               	btfss	___flge@ff2+3,7
  5330     116C  296E               	goto	u3091
  5331     116D  296F               	goto	u3090
  5332     116E                     u3091:
  5333     116E  2993               	goto	l426
  5334     116F                     u3090:
  5335     116F                     l2386:
  5336     116F  3000               	movlw	0
  5337     1170  00C2               	movwf	??___flge
  5338     1171  3000               	movlw	0
  5339     1172  00C3               	movwf	??___flge+1
  5340     1173  3000               	movlw	0
  5341     1174  00C4               	movwf	??___flge+2
  5342     1175  3080               	movlw	128
  5343     1176  00C5               	movwf	??___flge+3
  5344     1177  083E               	movf	___flge@ff2,w
  5345     1178  02C2               	subwf	??___flge,f
  5346     1179  083F               	movf	___flge@ff2+1,w
  5347     117A  1C03               	skipc
  5348     117B  0F3F               	incfsz	___flge@ff2+1,w
  5349     117C  297E               	goto	u3101
  5350     117D  297F               	goto	u3102
  5351     117E                     u3101:
  5352     117E  02C3               	subwf	??___flge+1,f
  5353     117F                     u3102:
  5354     117F  0840               	movf	___flge@ff2+2,w
  5355     1180  1C03               	skipc
  5356     1181  0F40               	incfsz	___flge@ff2+2,w
  5357     1182  2984               	goto	u3103
  5358     1183  2985               	goto	u3104
  5359     1184                     u3103:
  5360     1184  02C4               	subwf	??___flge+2,f
  5361     1185                     u3104:
  5362     1185  0841               	movf	___flge@ff2+3,w
  5363     1186  1C03               	skipc
  5364     1187  0F41               	incfsz	___flge@ff2+3,w
  5365     1188  298A               	goto	u3105
  5366     1189  298B               	goto	u3106
  5367     118A                     u3105:
  5368     118A  02C5               	subwf	??___flge+3,f
  5369     118B                     u3106:
  5370     118B  0845               	movf	??___flge+3,w
  5371     118C  00C1               	movwf	___flge@ff2+3
  5372     118D  0844               	movf	??___flge+2,w
  5373     118E  00C0               	movwf	___flge@ff2+2
  5374     118F  0843               	movf	??___flge+1,w
  5375     1190  00BF               	movwf	___flge@ff2+1
  5376     1191  0842               	movf	??___flge,w
  5377     1192  00BE               	movwf	___flge@ff2
  5378     1193                     l426:
  5379     1193  3080               	movlw	128
  5380     1194  06BD               	xorwf	___flge@ff1+3,f
  5381     1195  3080               	movlw	128
  5382     1196  06C1               	xorwf	___flge@ff2+3,f
  5383     1197  0841               	movf	___flge@ff2+3,w
  5384     1198  023D               	subwf	___flge@ff1+3,w
  5385     1199  1D03               	skipz
  5386     119A  29A5               	goto	u3115
  5387     119B  0840               	movf	___flge@ff2+2,w
  5388     119C  023C               	subwf	___flge@ff1+2,w
  5389     119D  1D03               	skipz
  5390     119E  29A5               	goto	u3115
  5391     119F  083F               	movf	___flge@ff2+1,w
  5392     11A0  023B               	subwf	___flge@ff1+1,w
  5393     11A1  1D03               	skipz
  5394     11A2  29A5               	goto	u3115
  5395     11A3  083E               	movf	___flge@ff2,w
  5396     11A4  023A               	subwf	___flge@ff1,w
  5397     11A5                     u3115:
  5398     11A5  1803               	skipnc
  5399     11A6  29A8               	goto	u3111
  5400     11A7  29A9               	goto	u3110
  5401     11A8                     u3111:
  5402     11A8  29AB               	goto	l2390
  5403     11A9                     u3110:
  5404     11A9                     l2388:
  5405     11A9  1003               	clrc
  5406     11AA  29AC               	goto	l431
  5407     11AB                     l2390:
  5408     11AB  1403               	setc
  5409     11AC                     l431:
  5410     11AC  0008               	return
  5411     11AD                     __end_of___flge:
  5412                           
  5413                           	psect	text21
  5414     1F3E                     __ptext21:	
  5415 ;; *************** function ___fleq *****************
  5416 ;; Defined at:
  5417 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  ff1             4    0[COMMON] unsigned char 
  5420 ;;  ff2             4    4[COMMON] unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;		None               void
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5432 ;;      Params:         8       0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0
  5434 ;;      Temps:          4       0       0       0       0
  5435 ;;      Totals:        12       0       0       0       0
  5436 ;;Total ram usage:       12 bytes
  5437 ;; Hardware stack levels used: 1
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_efgtoa
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445     1F3E                     ___fleq:	
  5446                           ;psect for function ___fleq
  5447                           
  5448     1F3E                     l2362:	
  5449                           ;incstack = 0
  5450                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5451                           
  5452     1F3E  3000               	movlw	0
  5453     1F3F  0570               	andwf	___fleq@ff1,w
  5454     1F40  00F8               	movwf	??___fleq
  5455     1F41  3000               	movlw	0
  5456     1F42  0571               	andwf	___fleq@ff1+1,w
  5457     1F43  00F9               	movwf	??___fleq+1
  5458     1F44  3080               	movlw	128
  5459     1F45  0572               	andwf	___fleq@ff1+2,w
  5460     1F46  00FA               	movwf	??___fleq+2
  5461     1F47  307F               	movlw	127
  5462     1F48  0573               	andwf	___fleq@ff1+3,w
  5463     1F49  00FB               	movwf	??___fleq+3
  5464     1F4A  087B               	movf	??___fleq+3,w
  5465     1F4B  047A               	iorwf	??___fleq+2,w
  5466     1F4C  0479               	iorwf	??___fleq+1,w
  5467     1F4D  0478               	iorwf	??___fleq,w
  5468     1F4E  1D03               	skipz
  5469     1F4F  2F51               	goto	u3021
  5470     1F50  2F52               	goto	u3020
  5471     1F51                     u3021:
  5472     1F51  2F5A               	goto	l414
  5473     1F52                     u3020:
  5474     1F52                     l2364:
  5475     1F52  3000               	movlw	0
  5476     1F53  00F3               	movwf	___fleq@ff1+3
  5477     1F54  3000               	movlw	0
  5478     1F55  00F2               	movwf	___fleq@ff1+2
  5479     1F56  3000               	movlw	0
  5480     1F57  00F1               	movwf	___fleq@ff1+1
  5481     1F58  3000               	movlw	0
  5482     1F59  00F0               	movwf	___fleq@ff1
  5483     1F5A                     l414:
  5484     1F5A  3000               	movlw	0
  5485     1F5B  0574               	andwf	___fleq@ff2,w
  5486     1F5C  00F8               	movwf	??___fleq
  5487     1F5D  3000               	movlw	0
  5488     1F5E  0575               	andwf	___fleq@ff2+1,w
  5489     1F5F  00F9               	movwf	??___fleq+1
  5490     1F60  3080               	movlw	128
  5491     1F61  0576               	andwf	___fleq@ff2+2,w
  5492     1F62  00FA               	movwf	??___fleq+2
  5493     1F63  307F               	movlw	127
  5494     1F64  0577               	andwf	___fleq@ff2+3,w
  5495     1F65  00FB               	movwf	??___fleq+3
  5496     1F66  087B               	movf	??___fleq+3,w
  5497     1F67  047A               	iorwf	??___fleq+2,w
  5498     1F68  0479               	iorwf	??___fleq+1,w
  5499     1F69  0478               	iorwf	??___fleq,w
  5500     1F6A  1D03               	skipz
  5501     1F6B  2F6D               	goto	u3031
  5502     1F6C  2F6E               	goto	u3030
  5503     1F6D                     u3031:
  5504     1F6D  2F76               	goto	l415
  5505     1F6E                     u3030:
  5506     1F6E                     l2366:
  5507     1F6E  3000               	movlw	0
  5508     1F6F  00F7               	movwf	___fleq@ff2+3
  5509     1F70  3000               	movlw	0
  5510     1F71  00F6               	movwf	___fleq@ff2+2
  5511     1F72  3000               	movlw	0
  5512     1F73  00F5               	movwf	___fleq@ff2+1
  5513     1F74  3000               	movlw	0
  5514     1F75  00F4               	movwf	___fleq@ff2
  5515     1F76                     l415:
  5516     1F76  0877               	movf	___fleq@ff2+3,w
  5517     1F77  0673               	xorwf	___fleq@ff1+3,w
  5518     1F78  1D03               	skipz
  5519     1F79  2F84               	goto	u3045
  5520     1F7A  0876               	movf	___fleq@ff2+2,w
  5521     1F7B  0672               	xorwf	___fleq@ff1+2,w
  5522     1F7C  1D03               	skipz
  5523     1F7D  2F84               	goto	u3045
  5524     1F7E  0875               	movf	___fleq@ff2+1,w
  5525     1F7F  0671               	xorwf	___fleq@ff1+1,w
  5526     1F80  1D03               	skipz
  5527     1F81  2F84               	goto	u3045
  5528     1F82  0874               	movf	___fleq@ff2,w
  5529     1F83  0670               	xorwf	___fleq@ff1,w
  5530     1F84                     u3045:
  5531     1F84  1903               	skipnz
  5532     1F85  2F87               	goto	u3041
  5533     1F86  2F88               	goto	u3040
  5534     1F87                     u3041:
  5535     1F87  2F8A               	goto	l2370
  5536     1F88                     u3040:
  5537     1F88                     l2368:
  5538     1F88  1003               	clrc
  5539     1F89  2F8B               	goto	l420
  5540     1F8A                     l2370:
  5541     1F8A  1403               	setc
  5542     1F8B                     l420:
  5543     1F8B  0008               	return
  5544     1F8C                     __end_of___fleq:
  5545                           
  5546                           	psect	text22
  5547     1D7A                     __ptext22:	
  5548 ;; *************** function _UART_Write_Text *****************
  5549 ;; Defined at:
  5550 ;;		line 32 in file "uart.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  text            1    1[COMMON] PTR const unsigned char 
  5553 ;;		 -> main@buffer(20), 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         1       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0
  5568 ;;      Totals:         1       0       0       0       0
  5569 ;;Total ram usage:        1 bytes
  5570 ;; Hardware stack levels used: 1
  5571 ;; Hardware stack levels required when called: 2
  5572 ;; This function calls:
  5573 ;;		_UART_Write
  5574 ;; This function is called by:
  5575 ;;		_main
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579     1D7A                     _UART_Write_Text:	
  5580                           ;psect for function _UART_Write_Text
  5581                           
  5582     1D7A                     l3306:	
  5583                           ;incstack = 0
  5584                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5585                           
  5586                           
  5587                           ;uart.c: 33:     while (*text != '\0') {
  5588     1D7A  2D85               	goto	l3312
  5589     1D7B                     l3308:
  5590                           
  5591                           ;uart.c: 34:         UART_Write(*text++);
  5592     1D7B  0871               	movf	UART_Write_Text@text,w
  5593     1D7C  0084               	movwf	4
  5594     1D7D  0800               	movf	0,w
  5595     1D7E  160A  158A  2558  160A  158A  	fcall	_UART_Write
  5596     1D83                     l3310:
  5597     1D83  3001               	movlw	1
  5598     1D84  07F1               	addwf	UART_Write_Text@text,f
  5599     1D85                     l3312:
  5600                           
  5601                           ;uart.c: 33:     while (*text != '\0') {
  5602     1D85  0871               	movf	UART_Write_Text@text,w
  5603     1D86  0084               	movwf	4
  5604     1D87  1783               	bsf	3,7	;select IRP bank2
  5605     1D88  0800               	movf	0,w
  5606     1D89  1D03               	btfss	3,2
  5607     1D8A  2D8C               	goto	u4831
  5608     1D8B  2D8D               	goto	u4830
  5609     1D8C                     u4831:
  5610     1D8C  2D7B               	goto	l3308
  5611     1D8D                     u4830:
  5612     1D8D                     l132:
  5613     1D8D  0008               	return
  5614     1D8E                     __end_of_UART_Write_Text:
  5615                           
  5616                           	psect	text23
  5617     1D58                     __ptext23:	
  5618 ;; *************** function _UART_Write *****************
  5619 ;; Defined at:
  5620 ;;		line 27 in file "uart.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  data            1    wreg     unsigned char 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  data            1    0[COMMON] unsigned char 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, pclath, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5634 ;;      Params:         0       0       0       0       0
  5635 ;;      Locals:         1       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0
  5637 ;;      Totals:         1       0       0       0       0
  5638 ;;Total ram usage:        1 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; Hardware stack levels required when called: 1
  5641 ;; This function calls:
  5642 ;;		_UART_TX_Empty
  5643 ;; This function is called by:
  5644 ;;		_UART_Write_Text
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648     1D58                     _UART_Write:	
  5649                           ;psect for function _UART_Write
  5650                           
  5651                           
  5652                           ;incstack = 0
  5653                           ; Regs used in _UART_Write: [wreg+pclath+cstack]
  5654                           ;UART_Write@data stored from wreg
  5655     1D58  00F0               	movwf	UART_Write@data
  5656     1D59                     l3152:
  5657     1D59                     l3154:	
  5658                           ;uart.c: 28:     while (!UART_TX_Empty());
  5659                           
  5660     1D59  160A  158A  24F6  160A  158A  	fcall	_UART_TX_Empty
  5661     1D5E  3A00               	xorlw	0
  5662     1D5F  1903               	skipnz
  5663     1D60  2D62               	goto	u4591
  5664     1D61  2D63               	goto	u4590
  5665     1D62                     u4591:
  5666     1D62  2D59               	goto	l3154
  5667     1D63                     u4590:
  5668     1D63                     l3156:
  5669                           
  5670                           ;uart.c: 29:     TXREG = data;
  5671     1D63  0870               	movf	UART_Write@data,w
  5672     1D64  1283               	bcf	3,5	;RP0=0, select bank0
  5673     1D65  1303               	bcf	3,6	;RP1=0, select bank0
  5674     1D66  0099               	movwf	25	;volatile
  5675     1D67                     l126:
  5676     1D67  0008               	return
  5677     1D68                     __end_of_UART_Write:
  5678                           
  5679                           	psect	text24
  5680     1CF6                     __ptext24:	
  5681 ;; *************** function _UART_TX_Empty *****************
  5682 ;; Defined at:
  5683 ;;		line 23 in file "uart.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;		None
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      unsigned char 
  5690 ;; Registers used:
  5691 ;;		wreg
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5697 ;;      Params:         0       0       0       0       0
  5698 ;;      Locals:         0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0
  5700 ;;      Totals:         0       0       0       0       0
  5701 ;;Total ram usage:        0 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_UART_Write
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710     1CF6                     _UART_TX_Empty:	
  5711                           ;psect for function _UART_TX_Empty
  5712                           
  5713     1CF6                     l3092:	
  5714                           ;incstack = 0
  5715                           ; Regs used in _UART_TX_Empty: [wreg]
  5716                           
  5717                           
  5718                           ;uart.c: 24:     return TRMT;
  5719     1CF6  3000               	movlw	0
  5720     1CF7  1683               	bsf	3,5	;RP0=1, select bank1
  5721     1CF8  1303               	bcf	3,6	;RP1=0, select bank1
  5722     1CF9  1898               	btfsc	24,1	;volatile
  5723     1CFA  3001               	movlw	1
  5724     1CFB                     l120:
  5725     1CFB  0008               	return
  5726     1CFC                     __end_of_UART_TX_Empty:
  5727                           
  5728                           	psect	text25
  5729     1D68                     __ptext25:	
  5730 ;; *************** function _UART_TX_Init *****************
  5731 ;; Defined at:
  5732 ;;		line 4 in file "uart.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		None
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_main
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759     1D68                     _UART_TX_Init:	
  5760                           ;psect for function _UART_TX_Init
  5761                           
  5762     1D68                     l3236:	
  5763                           ;incstack = 0
  5764                           ; Regs used in _UART_TX_Init: []
  5765                           
  5766                           
  5767                           ;uart.c: 6:     BRGH = 1;
  5768     1D68  1683               	bsf	3,5	;RP0=1, select bank1
  5769     1D69  1303               	bcf	3,6	;RP1=0, select bank1
  5770     1D6A  1518               	bsf	24,2	;volatile
  5771                           
  5772                           ;uart.c: 7:     SPBRG = 103;
  5773     1D6B  3067               	movlw	103
  5774     1D6C  0099               	movwf	25	;volatile
  5775                           
  5776                           ;uart.c: 10:     SYNC = 0;
  5777     1D6D  1218               	bcf	24,4	;volatile
  5778                           
  5779                           ;uart.c: 11:     SPEN = 1;
  5780     1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  5781     1D6F  1303               	bcf	3,6	;RP1=0, select bank0
  5782     1D70  1798               	bsf	24,7	;volatile
  5783                           
  5784                           ;uart.c: 14:     TRISC6 = 0;
  5785     1D71  1683               	bsf	3,5	;RP0=1, select bank1
  5786     1D72  1303               	bcf	3,6	;RP1=0, select bank1
  5787     1D73  1307               	bcf	7,6	;volatile
  5788                           
  5789                           ;uart.c: 15:     TRISC7 = 1;
  5790     1D74  1787               	bsf	7,7	;volatile
  5791                           
  5792                           ;uart.c: 18:     TXEN = 1;
  5793     1D75  1698               	bsf	24,5	;volatile
  5794                           
  5795                           ;uart.c: 20:     CREN = 1;
  5796     1D76  1283               	bcf	3,5	;RP0=0, select bank0
  5797     1D77  1303               	bcf	3,6	;RP1=0, select bank0
  5798     1D78  1618               	bsf	24,4	;volatile
  5799     1D79                     l117:
  5800     1D79  0008               	return
  5801     1D7A                     __end_of_UART_TX_Init:
  5802                           
  5803                           	psect	text26
  5804     1ED2                     __ptext26:	
  5805 ;; *************** function _MCP3421_Ready *****************
  5806 ;; Defined at:
  5807 ;;		line 64 in file "MCP3421.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  adc             2    1[COMMON] PTR struct .
  5810 ;;		 -> main@adc(5), 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  confRead        1    5[COMMON] unsigned char 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  2    1[COMMON] int 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5822 ;;      Params:         2       0       0       0       0
  5823 ;;      Locals:         1       0       0       0       0
  5824 ;;      Temps:          2       0       0       0       0
  5825 ;;      Totals:         5       0       0       0       0
  5826 ;;Total ram usage:        5 bytes
  5827 ;; Hardware stack levels used: 1
  5828 ;; Hardware stack levels required when called: 2
  5829 ;; This function calls:
  5830 ;;		_I2C_Master_Start
  5831 ;;		_I2C_Master_Stop
  5832 ;;		_I2C_Master_Write
  5833 ;;		_I2C_NACK
  5834 ;;		_I2C_Read_Byte
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840     1ED2                     _MCP3421_Ready:	
  5841                           ;psect for function _MCP3421_Ready
  5842                           
  5843     1ED2                     l3272:	
  5844                           ;incstack = 0
  5845                           ; Regs used in _MCP3421_Ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5846                           
  5847                           
  5848                           ;MCP3421.c: 65:     uint8_t confRead;;MCP3421.c: 66:     I2C_Master_Start();
  5849     1ED2  160A  158A  2504  160A  158A  	fcall	_I2C_Master_Start
  5850     1ED7                     l3274:
  5851                           
  5852                           ;MCP3421.c: 67:     I2C_Master_Write((adc->address << 1) | 1);
  5853     1ED7  1403               	setc
  5854     1ED8  0871               	movf	MCP3421_Ready@adc,w
  5855     1ED9  0084               	movwf	4
  5856     1EDA  1783               	bsf	3,7
  5857     1EDB  1C72               	btfss	MCP3421_Ready@adc+1,0
  5858     1EDC  1383               	bcf	3,7
  5859     1EDD  0D00               	rlf	0,w
  5860     1EDE  160A  158A  2548  160A  158A  	fcall	_I2C_Master_Write
  5861     1EE3                     l3276:
  5862                           
  5863                           ;MCP3421.c: 68:     confRead = I2C_Read_Byte();
  5864     1EE3  160A  158A  25A3  160A  158A  	fcall	_I2C_Read_Byte
  5865     1EE8  00F5               	movwf	MCP3421_Ready@confRead
  5866     1EE9                     l3278:
  5867                           
  5868                           ;MCP3421.c: 69:     I2C_NACK();
  5869     1EE9  160A  158A  2522  160A  158A  	fcall	_I2C_NACK
  5870     1EEE                     l3280:
  5871                           
  5872                           ;MCP3421.c: 70:     I2C_Master_Stop();
  5873     1EEE  160A  158A  250D  160A  158A  	fcall	_I2C_Master_Stop
  5874     1EF3                     l3282:
  5875                           
  5876                           ;MCP3421.c: 71:     return !(confRead & (1 << 7));
  5877     1EF3  1FF5               	btfss	MCP3421_Ready@confRead,7
  5878     1EF4  2EF6               	goto	u4791
  5879     1EF5  2EF8               	goto	u4790
  5880     1EF6                     u4791:
  5881     1EF6  3001               	movlw	1
  5882     1EF7  2EF9               	goto	u4800
  5883     1EF8                     u4790:
  5884     1EF8  3000               	movlw	0
  5885     1EF9                     u4800:
  5886     1EF9  00F3               	movwf	??_MCP3421_Ready
  5887     1EFA  01F4               	clrf	??_MCP3421_Ready+1
  5888     1EFB  0873               	movf	??_MCP3421_Ready,w
  5889     1EFC  00F1               	movwf	?_MCP3421_Ready
  5890     1EFD  0874               	movf	??_MCP3421_Ready+1,w
  5891     1EFE  00F2               	movwf	?_MCP3421_Ready+1
  5892     1EFF                     l159:
  5893     1EFF  0008               	return
  5894     1F00                     __end_of_MCP3421_Ready:
  5895                           
  5896                           	psect	text27
  5897     1261                     __ptext27:	
  5898 ;; *************** function _MCP3421_Init *****************
  5899 ;; Defined at:
  5900 ;;		line 5 in file "MCP3421.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  adc             2    1[COMMON] PTR struct .
  5903 ;;		 -> main@adc(5), 
  5904 ;;  address         2    3[COMMON] int 
  5905 ;;  sr              1    5[COMMON] unsigned char 
  5906 ;;  pga             1    6[COMMON] unsigned char 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;		None
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      void 
  5911 ;; Registers used:
  5912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5918 ;;      Params:         6       0       0       0       0
  5919 ;;      Locals:         0       0       0       0       0
  5920 ;;      Temps:          0       8       0       0       0
  5921 ;;      Totals:         6       8       0       0       0
  5922 ;;Total ram usage:       14 bytes
  5923 ;; Hardware stack levels used: 1
  5924 ;; Hardware stack levels required when called: 2
  5925 ;; This function calls:
  5926 ;;		_I2C_Master_Start
  5927 ;;		_I2C_Master_Stop
  5928 ;;		_I2C_Master_Write
  5929 ;; This function is called by:
  5930 ;;		_main
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934     1261                     _MCP3421_Init:	
  5935                           ;psect for function _MCP3421_Init
  5936                           
  5937     1261                     l3248:	
  5938                           ;incstack = 0
  5939                           ; Regs used in _MCP3421_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5940                           
  5941                           
  5942                           ;MCP3421.c: 6:     adc->address = address;
  5943     1261  0871               	movf	MCP3421_Init@adc,w
  5944     1262  0084               	movwf	4
  5945     1263  1783               	bsf	3,7
  5946     1264  1C72               	btfss	MCP3421_Init@adc+1,0
  5947     1265  1383               	bcf	3,7
  5948     1266  0873               	movf	MCP3421_Init@address,w
  5949     1267  0080               	movwf	0
  5950     1268  0A84               	incf	4,f
  5951     1269  0874               	movf	MCP3421_Init@address+1,w
  5952     126A  0080               	movwf	0
  5953     126B                     l3250:
  5954                           
  5955                           ;MCP3421.c: 7:     adc->sr = sr & 0x03;
  5956     126B  0871               	movf	MCP3421_Init@adc,w
  5957     126C  3E02               	addlw	2
  5958     126D  1283               	bcf	3,5	;RP0=0, select bank0
  5959     126E  1303               	bcf	3,6	;RP1=0, select bank0
  5960     126F  00A0               	movwf	??_MCP3421_Init
  5961     1270  0872               	movf	MCP3421_Init@adc+1,w
  5962     1271  1803               	skipnc
  5963     1272  3E01               	addlw	1
  5964     1273  3E00               	addlw	0
  5965     1274  00A1               	movwf	??_MCP3421_Init+1
  5966     1275  0820               	movf	??_MCP3421_Init,w
  5967     1276  0084               	movwf	4
  5968     1277  1783               	bsf	3,7
  5969     1278  1C21               	btfss	??_MCP3421_Init+1,0
  5970     1279  1383               	bcf	3,7
  5971     127A  0875               	movf	MCP3421_Init@sr,w
  5972     127B  0080               	movwf	0
  5973     127C                     l3252:
  5974     127C  0871               	movf	MCP3421_Init@adc,w
  5975     127D  3E02               	addlw	2
  5976     127E  00A0               	movwf	??_MCP3421_Init
  5977     127F  0872               	movf	MCP3421_Init@adc+1,w
  5978     1280  1803               	skipnc
  5979     1281  3E01               	addlw	1
  5980     1282  3E00               	addlw	0
  5981     1283  00A1               	movwf	??_MCP3421_Init+1
  5982     1284  0820               	movf	??_MCP3421_Init,w
  5983     1285  0084               	movwf	4
  5984     1286  1783               	bsf	3,7
  5985     1287  1C21               	btfss	??_MCP3421_Init+1,0
  5986     1288  1383               	bcf	3,7
  5987     1289  3003               	movlw	3
  5988     128A  0580               	andwf	0,f
  5989     128B                     l3254:
  5990                           
  5991                           ;MCP3421.c: 8:     adc->pga = pga & 0x03;
  5992     128B  0871               	movf	MCP3421_Init@adc,w
  5993     128C  3E03               	addlw	3
  5994     128D  00A0               	movwf	??_MCP3421_Init
  5995     128E  0872               	movf	MCP3421_Init@adc+1,w
  5996     128F  1803               	skipnc
  5997     1290  3E01               	addlw	1
  5998     1291  3E00               	addlw	0
  5999     1292  00A1               	movwf	??_MCP3421_Init+1
  6000     1293  0820               	movf	??_MCP3421_Init,w
  6001     1294  0084               	movwf	4
  6002     1295  1783               	bsf	3,7
  6003     1296  1C21               	btfss	??_MCP3421_Init+1,0
  6004     1297  1383               	bcf	3,7
  6005     1298  0876               	movf	MCP3421_Init@pga,w
  6006     1299  0080               	movwf	0
  6007     129A                     l3256:
  6008     129A  0871               	movf	MCP3421_Init@adc,w
  6009     129B  3E03               	addlw	3
  6010     129C  00A0               	movwf	??_MCP3421_Init
  6011     129D  0872               	movf	MCP3421_Init@adc+1,w
  6012     129E  1803               	skipnc
  6013     129F  3E01               	addlw	1
  6014     12A0  3E00               	addlw	0
  6015     12A1  00A1               	movwf	??_MCP3421_Init+1
  6016     12A2  0820               	movf	??_MCP3421_Init,w
  6017     12A3  0084               	movwf	4
  6018     12A4  1783               	bsf	3,7
  6019     12A5  1C21               	btfss	??_MCP3421_Init+1,0
  6020     12A6  1383               	bcf	3,7
  6021     12A7  3003               	movlw	3
  6022     12A8  0580               	andwf	0,f
  6023     12A9                     l3258:
  6024                           
  6025                           ;MCP3421.c: 10:     adc->config = (adc->sr << 2) | adc->pga;
  6026     12A9  0871               	movf	MCP3421_Init@adc,w
  6027     12AA  3E03               	addlw	3
  6028     12AB  00A0               	movwf	??_MCP3421_Init
  6029     12AC  0872               	movf	MCP3421_Init@adc+1,w
  6030     12AD  1803               	skipnc
  6031     12AE  3E01               	addlw	1
  6032     12AF  3E00               	addlw	0
  6033     12B0  00A1               	movwf	??_MCP3421_Init+1
  6034     12B1  0820               	movf	??_MCP3421_Init,w
  6035     12B2  0084               	movwf	4
  6036     12B3  1783               	bsf	3,7
  6037     12B4  1C21               	btfss	??_MCP3421_Init+1,0
  6038     12B5  1383               	bcf	3,7
  6039     12B6  0800               	movf	0,w
  6040     12B7  00A2               	movwf	??_MCP3421_Init+2
  6041     12B8  0871               	movf	MCP3421_Init@adc,w
  6042     12B9  3E02               	addlw	2
  6043     12BA  00A3               	movwf	??_MCP3421_Init+3
  6044     12BB  0872               	movf	MCP3421_Init@adc+1,w
  6045     12BC  1803               	skipnc
  6046     12BD  3E01               	addlw	1
  6047     12BE  3E00               	addlw	0
  6048     12BF  00A4               	movwf	??_MCP3421_Init+4
  6049     12C0  0823               	movf	??_MCP3421_Init+3,w
  6050     12C1  0084               	movwf	4
  6051     12C2  1783               	bsf	3,7
  6052     12C3  1C24               	btfss	??_MCP3421_Init+4,0
  6053     12C4  1383               	bcf	3,7
  6054     12C5  0800               	movf	0,w
  6055     12C6  00A5               	movwf	??_MCP3421_Init+5
  6056     12C7  3001               	movlw	1
  6057     12C8                     u4785:
  6058     12C8  1003               	clrc
  6059     12C9  0DA5               	rlf	??_MCP3421_Init+5,f
  6060     12CA  3EFF               	addlw	-1
  6061     12CB  1D03               	skipz
  6062     12CC  2AC8               	goto	u4785
  6063     12CD  1003               	clrc
  6064     12CE  0D25               	rlf	??_MCP3421_Init+5,w
  6065     12CF  0422               	iorwf	??_MCP3421_Init+2,w
  6066     12D0  00FF               	movwf	btemp+1
  6067     12D1  0871               	movf	MCP3421_Init@adc,w
  6068     12D2  3E04               	addlw	4
  6069     12D3  00A6               	movwf	??_MCP3421_Init+6
  6070     12D4  0872               	movf	MCP3421_Init@adc+1,w
  6071     12D5  1803               	skipnc
  6072     12D6  3E01               	addlw	1
  6073     12D7  3E00               	addlw	0
  6074     12D8  00A7               	movwf	??_MCP3421_Init+7
  6075     12D9  0826               	movf	??_MCP3421_Init+6,w
  6076     12DA  0084               	movwf	4
  6077     12DB  1783               	bsf	3,7
  6078     12DC  1C27               	btfss	??_MCP3421_Init+7,0
  6079     12DD  1383               	bcf	3,7
  6080     12DE  087F               	movf	btemp+1,w
  6081     12DF  0080               	movwf	0
  6082     12E0                     l3260:
  6083                           
  6084                           ;MCP3421.c: 11:     adc->config |= (1 << 7);
  6085     12E0  0871               	movf	MCP3421_Init@adc,w
  6086     12E1  3E04               	addlw	4
  6087     12E2  00A0               	movwf	??_MCP3421_Init
  6088     12E3  0872               	movf	MCP3421_Init@adc+1,w
  6089     12E4  1803               	skipnc
  6090     12E5  3E01               	addlw	1
  6091     12E6  3E00               	addlw	0
  6092     12E7  00A1               	movwf	??_MCP3421_Init+1
  6093     12E8  0820               	movf	??_MCP3421_Init,w
  6094     12E9  0084               	movwf	4
  6095     12EA  1783               	bsf	3,7
  6096     12EB  1C21               	btfss	??_MCP3421_Init+1,0
  6097     12EC  1383               	bcf	3,7
  6098     12ED  1780               	bsf	0,7
  6099     12EE                     l3262:
  6100                           
  6101                           ;MCP3421.c: 12:     adc->config |= (1 << 4);
  6102     12EE  0871               	movf	MCP3421_Init@adc,w
  6103     12EF  3E04               	addlw	4
  6104     12F0  00A0               	movwf	??_MCP3421_Init
  6105     12F1  0872               	movf	MCP3421_Init@adc+1,w
  6106     12F2  1803               	skipnc
  6107     12F3  3E01               	addlw	1
  6108     12F4  3E00               	addlw	0
  6109     12F5  00A1               	movwf	??_MCP3421_Init+1
  6110     12F6  0820               	movf	??_MCP3421_Init,w
  6111     12F7  0084               	movwf	4
  6112     12F8  1783               	bsf	3,7
  6113     12F9  1C21               	btfss	??_MCP3421_Init+1,0
  6114     12FA  1383               	bcf	3,7
  6115     12FB  1600               	bsf	0,4
  6116     12FC                     l3264:
  6117                           
  6118                           ;MCP3421.c: 14:     I2C_Master_Start();
  6119     12FC  160A  158A  2504  160A  118A  	fcall	_I2C_Master_Start
  6120     1301                     l3266:
  6121                           
  6122                           ;MCP3421.c: 15:     I2C_Master_Write(adc->address << 1);
  6123     1301  0871               	movf	MCP3421_Init@adc,w
  6124     1302  0084               	movwf	4
  6125     1303  1783               	bsf	3,7
  6126     1304  1C72               	btfss	MCP3421_Init@adc+1,0
  6127     1305  1383               	bcf	3,7
  6128     1306  0800               	movf	0,w
  6129     1307  1283               	bcf	3,5	;RP0=0, select bank0
  6130     1308  1303               	bcf	3,6	;RP1=0, select bank0
  6131     1309  00A0               	movwf	??_MCP3421_Init
  6132     130A  0720               	addwf	??_MCP3421_Init,w
  6133     130B  160A  158A  2548  160A  118A  	fcall	_I2C_Master_Write
  6134     1310                     l3268:
  6135                           
  6136                           ;MCP3421.c: 16:     I2C_Master_Write(adc->config);
  6137     1310  0871               	movf	MCP3421_Init@adc,w
  6138     1311  3E04               	addlw	4
  6139     1312  1283               	bcf	3,5	;RP0=0, select bank0
  6140     1313  1303               	bcf	3,6	;RP1=0, select bank0
  6141     1314  00A0               	movwf	??_MCP3421_Init
  6142     1315  0872               	movf	MCP3421_Init@adc+1,w
  6143     1316  1803               	skipnc
  6144     1317  3E01               	addlw	1
  6145     1318  3E00               	addlw	0
  6146     1319  00A1               	movwf	??_MCP3421_Init+1
  6147     131A  0820               	movf	??_MCP3421_Init,w
  6148     131B  0084               	movwf	4
  6149     131C  1783               	bsf	3,7
  6150     131D  1C21               	btfss	??_MCP3421_Init+1,0
  6151     131E  1383               	bcf	3,7
  6152     131F  0800               	movf	0,w
  6153     1320  160A  158A  2548  160A  118A  	fcall	_I2C_Master_Write
  6154     1325                     l3270:
  6155                           
  6156                           ;MCP3421.c: 17:     I2C_Master_Stop();
  6157     1325  160A  158A  250D  160A  118A  	fcall	_I2C_Master_Stop
  6158     132A                     l147:
  6159     132A  0008               	return
  6160     132B                     __end_of_MCP3421_Init:
  6161                           
  6162                           	psect	text28
  6163     1405                     __ptext28:	
  6164 ;; *************** function _MCP3421_GetDouble *****************
  6165 ;; Defined at:
  6166 ;;		line 56 in file "MCP3421.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  adc             2   52[BANK0 ] PTR struct .
  6169 ;;		 -> main@adc(5), 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  voltage         4   66[BANK0 ] PTR struct .
  6172 ;;  raw             4   62[BANK0 ] long 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  4   52[BANK0 ] long 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6182 ;;      Params:         0       4       0       0       0
  6183 ;;      Locals:         0       8       0       0       0
  6184 ;;      Temps:          0       6       0       0       0
  6185 ;;      Totals:         0      18       0       0       0
  6186 ;;Total ram usage:       18 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 3
  6189 ;; This function calls:
  6190 ;;		_MCP3421_GetLong
  6191 ;;		___fldiv
  6192 ;;		___flmul
  6193 ;;		___xxtofl
  6194 ;; This function is called by:
  6195 ;;		_main
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199     1405                     _MCP3421_GetDouble:	
  6200                           ;psect for function _MCP3421_GetDouble
  6201                           
  6202     1405                     l3286:	
  6203                           ;incstack = 0
  6204                           ; Regs used in _MCP3421_GetDouble: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6205                           
  6206                           
  6207                           ;MCP3421.c: 57:     long raw = MCP3421_GetLong(adc);
  6208     1405  1283               	bcf	3,5	;RP0=0, select bank0
  6209     1406  1303               	bcf	3,6	;RP1=0, select bank0
  6210     1407  0854               	movf	MCP3421_GetDouble@adc,w
  6211     1408  00F1               	movwf	MCP3421_GetLong@adc
  6212     1409  0855               	movf	MCP3421_GetDouble@adc+1,w
  6213     140A  00F2               	movwf	MCP3421_GetLong@adc+1
  6214     140B  160A  118A  232B  160A  118A  	fcall	_MCP3421_GetLong
  6215     1410  0874               	movf	?_MCP3421_GetLong+3,w
  6216     1411  1283               	bcf	3,5	;RP0=0, select bank0
  6217     1412  1303               	bcf	3,6	;RP1=0, select bank0
  6218     1413  00E1               	movwf	MCP3421_GetDouble@raw+3
  6219     1414  0873               	movf	?_MCP3421_GetLong+2,w
  6220     1415  00E0               	movwf	MCP3421_GetDouble@raw+2
  6221     1416  0872               	movf	?_MCP3421_GetLong+1,w
  6222     1417  00DF               	movwf	MCP3421_GetDouble@raw+1
  6223     1418  0871               	movf	?_MCP3421_GetLong,w
  6224     1419  00DE               	movwf	MCP3421_GetDouble@raw
  6225                           
  6226                           ;MCP3421.c: 58:     double voltage = raw * 1e-3 / (1 << (adc->sr * 2));
  6227     141A  0854               	movf	MCP3421_GetDouble@adc,w
  6228     141B  3E02               	addlw	2
  6229     141C  00D8               	movwf	??_MCP3421_GetDouble
  6230     141D  0855               	movf	MCP3421_GetDouble@adc+1,w
  6231     141E  1803               	skipnc
  6232     141F  3E01               	addlw	1
  6233     1420  3E00               	addlw	0
  6234     1421  00D9               	movwf	??_MCP3421_GetDouble+1
  6235     1422  0858               	movf	??_MCP3421_GetDouble,w
  6236     1423  0084               	movwf	4
  6237     1424  1783               	bsf	3,7
  6238     1425  1C59               	btfss	??_MCP3421_GetDouble+1,0
  6239     1426  1383               	bcf	3,7
  6240     1427  0800               	movf	0,w
  6241     1428  00DA               	movwf	??_MCP3421_GetDouble+2
  6242     1429  075A               	addwf	??_MCP3421_GetDouble+2,w
  6243     142A  00DB               	movwf	??_MCP3421_GetDouble+3
  6244     142B  0ADB               	incf	??_MCP3421_GetDouble+3,f
  6245     142C  3001               	movlw	1
  6246     142D  00DC               	movwf	??_MCP3421_GetDouble+4
  6247     142E  3000               	movlw	0
  6248     142F  00DD               	movwf	??_MCP3421_GetDouble+5
  6249     1430  2C34               	goto	u4814
  6250     1431                     u4815:
  6251     1431  1003               	clrc
  6252     1432  0DDC               	rlf	??_MCP3421_GetDouble+4,f
  6253     1433  0DDD               	rlf	??_MCP3421_GetDouble+5,f
  6254     1434                     u4814:
  6255     1434  0BDB               	decfsz	??_MCP3421_GetDouble+3,f
  6256     1435  2C31               	goto	u4815
  6257     1436  085C               	movf	??_MCP3421_GetDouble+4,w
  6258     1437  00F0               	movwf	___xxtofl@val
  6259     1438  085D               	movf	??_MCP3421_GetDouble+5,w
  6260     1439  00F1               	movwf	___xxtofl@val+1
  6261     143A  3000               	movlw	0
  6262     143B  1BF1               	btfsc	___xxtofl@val+1,7
  6263     143C  30FF               	movlw	255
  6264     143D  00F2               	movwf	___xxtofl@val+2
  6265     143E  00F3               	movwf	___xxtofl@val+3
  6266     143F  3001               	movlw	1
  6267     1440  160A  118A  21AD  160A  118A  	fcall	___xxtofl
  6268     1445  0873               	movf	?___xxtofl+3,w
  6269     1446  1283               	bcf	3,5	;RP0=0, select bank0
  6270     1447  1303               	bcf	3,6	;RP1=0, select bank0
  6271     1448  00BD               	movwf	___fldiv@a+3
  6272     1449  0872               	movf	?___xxtofl+2,w
  6273     144A  00BC               	movwf	___fldiv@a+2
  6274     144B  0871               	movf	?___xxtofl+1,w
  6275     144C  00BB               	movwf	___fldiv@a+1
  6276     144D  0870               	movf	?___xxtofl,w
  6277     144E  00BA               	movwf	___fldiv@a
  6278     144F  303A               	movlw	58
  6279     1450  00A3               	movwf	___flmul@b+3
  6280     1451  3083               	movlw	131
  6281     1452  00A2               	movwf	___flmul@b+2
  6282     1453  3012               	movlw	18
  6283     1454  00A1               	movwf	___flmul@b+1
  6284     1455  306F               	movlw	111
  6285     1456  00A0               	movwf	___flmul@b
  6286     1457  0861               	movf	MCP3421_GetDouble@raw+3,w
  6287     1458  00F3               	movwf	___xxtofl@val+3
  6288     1459  0860               	movf	MCP3421_GetDouble@raw+2,w
  6289     145A  00F2               	movwf	___xxtofl@val+2
  6290     145B  085F               	movf	MCP3421_GetDouble@raw+1,w
  6291     145C  00F1               	movwf	___xxtofl@val+1
  6292     145D  085E               	movf	MCP3421_GetDouble@raw,w
  6293     145E  00F0               	movwf	___xxtofl@val
  6294     145F  3001               	movlw	1
  6295     1460  160A  118A  21AD  160A  118A  	fcall	___xxtofl
  6296     1465  0873               	movf	?___xxtofl+3,w
  6297     1466  1283               	bcf	3,5	;RP0=0, select bank0
  6298     1467  1303               	bcf	3,6	;RP1=0, select bank0
  6299     1468  00A7               	movwf	___flmul@a+3
  6300     1469  0872               	movf	?___xxtofl+2,w
  6301     146A  00A6               	movwf	___flmul@a+2
  6302     146B  0871               	movf	?___xxtofl+1,w
  6303     146C  00A5               	movwf	___flmul@a+1
  6304     146D  0870               	movf	?___xxtofl,w
  6305     146E  00A4               	movwf	___flmul@a
  6306     146F  120A  158A  24BE  160A  118A  	fcall	___flmul
  6307     1474  1283               	bcf	3,5	;RP0=0, select bank0
  6308     1475  1303               	bcf	3,6	;RP1=0, select bank0
  6309     1476  0823               	movf	?___flmul+3,w
  6310     1477  00C1               	movwf	___fldiv@b+3
  6311     1478  0822               	movf	?___flmul+2,w
  6312     1479  00C0               	movwf	___fldiv@b+2
  6313     147A  0821               	movf	?___flmul+1,w
  6314     147B  00BF               	movwf	___fldiv@b+1
  6315     147C  0820               	movf	?___flmul,w
  6316     147D  00BE               	movwf	___fldiv@b
  6317     147E  120A  158A  2098  160A  118A  	fcall	___fldiv
  6318     1483  1283               	bcf	3,5	;RP0=0, select bank0
  6319     1484  1303               	bcf	3,6	;RP1=0, select bank0
  6320     1485  083D               	movf	?___fldiv+3,w
  6321     1486  00E5               	movwf	MCP3421_GetDouble@voltage+3
  6322     1487  083C               	movf	?___fldiv+2,w
  6323     1488  00E4               	movwf	MCP3421_GetDouble@voltage+2
  6324     1489  083B               	movf	?___fldiv+1,w
  6325     148A  00E3               	movwf	MCP3421_GetDouble@voltage+1
  6326     148B  083A               	movf	?___fldiv,w
  6327     148C  00E2               	movwf	MCP3421_GetDouble@voltage
  6328                           
  6329                           ;MCP3421.c: 59:     voltage /= (1 << adc->pga);
  6330     148D  0854               	movf	MCP3421_GetDouble@adc,w
  6331     148E  3E03               	addlw	3
  6332     148F  00D8               	movwf	??_MCP3421_GetDouble
  6333     1490  0855               	movf	MCP3421_GetDouble@adc+1,w
  6334     1491  1803               	skipnc
  6335     1492  3E01               	addlw	1
  6336     1493  3E00               	addlw	0
  6337     1494  00D9               	movwf	??_MCP3421_GetDouble+1
  6338     1495  0858               	movf	??_MCP3421_GetDouble,w
  6339     1496  0084               	movwf	4
  6340     1497  1783               	bsf	3,7
  6341     1498  1C59               	btfss	??_MCP3421_GetDouble+1,0
  6342     1499  1383               	bcf	3,7
  6343     149A  0A00               	incf	0,w
  6344     149B  00FF               	movwf	btemp+1
  6345     149C  3001               	movlw	1
  6346     149D  00DA               	movwf	??_MCP3421_GetDouble+2
  6347     149E  3000               	movlw	0
  6348     149F  00DB               	movwf	??_MCP3421_GetDouble+3
  6349     14A0  2CA4               	goto	u4824
  6350     14A1                     u4825:
  6351     14A1  1003               	clrc
  6352     14A2  0DDA               	rlf	??_MCP3421_GetDouble+2,f
  6353     14A3  0DDB               	rlf	??_MCP3421_GetDouble+3,f
  6354     14A4                     u4824:
  6355     14A4  0BFF               	decfsz	btemp+1,f
  6356     14A5  2CA1               	goto	u4825
  6357     14A6  085A               	movf	??_MCP3421_GetDouble+2,w
  6358     14A7  00F0               	movwf	___xxtofl@val
  6359     14A8  085B               	movf	??_MCP3421_GetDouble+3,w
  6360     14A9  00F1               	movwf	___xxtofl@val+1
  6361     14AA  3000               	movlw	0
  6362     14AB  1BF1               	btfsc	___xxtofl@val+1,7
  6363     14AC  30FF               	movlw	255
  6364     14AD  00F2               	movwf	___xxtofl@val+2
  6365     14AE  00F3               	movwf	___xxtofl@val+3
  6366     14AF  3001               	movlw	1
  6367     14B0  160A  118A  21AD  160A  118A  	fcall	___xxtofl
  6368     14B5  0873               	movf	?___xxtofl+3,w
  6369     14B6  1283               	bcf	3,5	;RP0=0, select bank0
  6370     14B7  1303               	bcf	3,6	;RP1=0, select bank0
  6371     14B8  00BD               	movwf	___fldiv@a+3
  6372     14B9  0872               	movf	?___xxtofl+2,w
  6373     14BA  00BC               	movwf	___fldiv@a+2
  6374     14BB  0871               	movf	?___xxtofl+1,w
  6375     14BC  00BB               	movwf	___fldiv@a+1
  6376     14BD  0870               	movf	?___xxtofl,w
  6377     14BE  00BA               	movwf	___fldiv@a
  6378     14BF  0865               	movf	MCP3421_GetDouble@voltage+3,w
  6379     14C0  00C1               	movwf	___fldiv@b+3
  6380     14C1  0864               	movf	MCP3421_GetDouble@voltage+2,w
  6381     14C2  00C0               	movwf	___fldiv@b+2
  6382     14C3  0863               	movf	MCP3421_GetDouble@voltage+1,w
  6383     14C4  00BF               	movwf	___fldiv@b+1
  6384     14C5  0862               	movf	MCP3421_GetDouble@voltage,w
  6385     14C6  00BE               	movwf	___fldiv@b
  6386     14C7  120A  158A  2098  160A  118A  	fcall	___fldiv
  6387     14CC  1283               	bcf	3,5	;RP0=0, select bank0
  6388     14CD  1303               	bcf	3,6	;RP1=0, select bank0
  6389     14CE  083D               	movf	?___fldiv+3,w
  6390     14CF  00E5               	movwf	MCP3421_GetDouble@voltage+3
  6391     14D0  083C               	movf	?___fldiv+2,w
  6392     14D1  00E4               	movwf	MCP3421_GetDouble@voltage+2
  6393     14D2  083B               	movf	?___fldiv+1,w
  6394     14D3  00E3               	movwf	MCP3421_GetDouble@voltage+1
  6395     14D4  083A               	movf	?___fldiv,w
  6396     14D5  00E2               	movwf	MCP3421_GetDouble@voltage
  6397     14D6                     l3288:
  6398                           
  6399                           ;MCP3421.c: 60:     return voltage;
  6400     14D6  0865               	movf	MCP3421_GetDouble@voltage+3,w
  6401     14D7  00D7               	movwf	?_MCP3421_GetDouble+3
  6402     14D8  0864               	movf	MCP3421_GetDouble@voltage+2,w
  6403     14D9  00D6               	movwf	?_MCP3421_GetDouble+2
  6404     14DA  0863               	movf	MCP3421_GetDouble@voltage+1,w
  6405     14DB  00D5               	movwf	?_MCP3421_GetDouble+1
  6406     14DC  0862               	movf	MCP3421_GetDouble@voltage,w
  6407     14DD  00D4               	movwf	?_MCP3421_GetDouble
  6408     14DE                     l156:
  6409     14DE  0008               	return
  6410     14DF                     __end_of_MCP3421_GetDouble:
  6411                           
  6412                           	psect	text29
  6413     11AD                     __ptext29:	
  6414 ;; *************** function ___xxtofl *****************
  6415 ;; Defined at:
  6416 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  sign            1    wreg     unsigned char 
  6419 ;;  val             4    0[COMMON] long 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  sign            1    8[COMMON] unsigned char 
  6422 ;;  arg             4   10[COMMON] unsigned long 
  6423 ;;  exp             1    9[COMMON] unsigned char 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  4    0[COMMON] unsigned char 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2, status,0
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6433 ;;      Params:         4       0       0       0       0
  6434 ;;      Locals:         6       0       0       0       0
  6435 ;;      Temps:          4       0       0       0       0
  6436 ;;      Totals:        14       0       0       0       0
  6437 ;;Total ram usage:       14 bytes
  6438 ;; Hardware stack levels used: 1
  6439 ;; This function calls:
  6440 ;;		Nothing
  6441 ;; This function is called by:
  6442 ;;		_MCP3421_GetDouble
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446     11AD                     ___xxtofl:	
  6447                           ;psect for function ___xxtofl
  6448                           
  6449                           
  6450                           ;incstack = 0
  6451                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6452                           ;___xxtofl@sign stored from wreg
  6453     11AD  00F8               	movwf	___xxtofl@sign
  6454     11AE                     l3184:
  6455     11AE  0878               	movf	___xxtofl@sign,w
  6456     11AF  1903               	btfsc	3,2
  6457     11B0  29B2               	goto	u4631
  6458     11B1  29B3               	goto	u4630
  6459     11B2                     u4631:
  6460     11B2  29C7               	goto	l3190
  6461     11B3                     u4630:
  6462     11B3                     l3186:
  6463     11B3  1FF3               	btfss	___xxtofl@val+3,7
  6464     11B4  29B6               	goto	u4641
  6465     11B5  29B7               	goto	u4640
  6466     11B6                     u4641:
  6467     11B6  29C7               	goto	l3190
  6468     11B7                     u4640:
  6469     11B7                     l3188:
  6470     11B7  0970               	comf	___xxtofl@val,w
  6471     11B8  00FA               	movwf	___xxtofl@arg
  6472     11B9  0971               	comf	___xxtofl@val+1,w
  6473     11BA  00FB               	movwf	___xxtofl@arg+1
  6474     11BB  0972               	comf	___xxtofl@val+2,w
  6475     11BC  00FC               	movwf	___xxtofl@arg+2
  6476     11BD  0973               	comf	___xxtofl@val+3,w
  6477     11BE  00FD               	movwf	___xxtofl@arg+3
  6478     11BF  0AFA               	incf	___xxtofl@arg,f
  6479     11C0  1903               	skipnz
  6480     11C1  0AFB               	incf	___xxtofl@arg+1,f
  6481     11C2  1903               	skipnz
  6482     11C3  0AFC               	incf	___xxtofl@arg+2,f
  6483     11C4  1903               	skipnz
  6484     11C5  0AFD               	incf	___xxtofl@arg+3,f
  6485     11C6  29CF               	goto	l686
  6486     11C7                     l3190:
  6487     11C7  0873               	movf	___xxtofl@val+3,w
  6488     11C8  00FD               	movwf	___xxtofl@arg+3
  6489     11C9  0872               	movf	___xxtofl@val+2,w
  6490     11CA  00FC               	movwf	___xxtofl@arg+2
  6491     11CB  0871               	movf	___xxtofl@val+1,w
  6492     11CC  00FB               	movwf	___xxtofl@arg+1
  6493     11CD  0870               	movf	___xxtofl@val,w
  6494     11CE  00FA               	movwf	___xxtofl@arg
  6495     11CF                     l686:
  6496     11CF  0873               	movf	___xxtofl@val+3,w
  6497     11D0  0472               	iorwf	___xxtofl@val+2,w
  6498     11D1  0471               	iorwf	___xxtofl@val+1,w
  6499     11D2  0470               	iorwf	___xxtofl@val,w
  6500     11D3  1D03               	skipz
  6501     11D4  29D6               	goto	u4651
  6502     11D5  29D7               	goto	u4650
  6503     11D6                     u4651:
  6504     11D6  29E0               	goto	l687
  6505     11D7                     u4650:
  6506     11D7                     l3192:
  6507     11D7  3000               	movlw	0
  6508     11D8  00F3               	movwf	?___xxtofl+3
  6509     11D9  3000               	movlw	0
  6510     11DA  00F2               	movwf	?___xxtofl+2
  6511     11DB  3000               	movlw	0
  6512     11DC  00F1               	movwf	?___xxtofl+1
  6513     11DD  3000               	movlw	0
  6514     11DE  00F0               	movwf	?___xxtofl
  6515     11DF  2A60               	goto	l688
  6516     11E0                     l687:
  6517     11E0  3096               	movlw	150
  6518     11E1  00F9               	movwf	___xxtofl@exp
  6519     11E2  29EE               	goto	l3198
  6520     11E3                     l3196:
  6521     11E3  3001               	movlw	1
  6522     11E4  07F9               	addwf	___xxtofl@exp,f
  6523     11E5  3001               	movlw	1
  6524     11E6                     u4665:
  6525     11E6  1003               	clrc
  6526     11E7  0CFD               	rrf	___xxtofl@arg+3,f
  6527     11E8  0CFC               	rrf	___xxtofl@arg+2,f
  6528     11E9  0CFB               	rrf	___xxtofl@arg+1,f
  6529     11EA  0CFA               	rrf	___xxtofl@arg,f
  6530     11EB  3EFF               	addlw	-1
  6531     11EC  1D03               	skipz
  6532     11ED  29E6               	goto	u4665
  6533     11EE                     l3198:
  6534     11EE  30FE               	movlw	254
  6535     11EF  057D               	andwf	___xxtofl@arg+3,w
  6536     11F0  1D03               	btfss	3,2
  6537     11F1  29F3               	goto	u4671
  6538     11F2  29F4               	goto	u4670
  6539     11F3                     u4671:
  6540     11F3  29E3               	goto	l3196
  6541     11F4                     u4670:
  6542     11F4  2A0E               	goto	l692
  6543     11F5                     l3200:
  6544     11F5  3001               	movlw	1
  6545     11F6  07F9               	addwf	___xxtofl@exp,f
  6546     11F7                     l3202:
  6547     11F7  3001               	movlw	1
  6548     11F8  07FA               	addwf	___xxtofl@arg,f
  6549     11F9  3000               	movlw	0
  6550     11FA  1803               	skipnc
  6551     11FB  3001               	movlw	1
  6552     11FC  07FB               	addwf	___xxtofl@arg+1,f
  6553     11FD  3000               	movlw	0
  6554     11FE  1803               	skipnc
  6555     11FF  3001               	movlw	1
  6556     1200  07FC               	addwf	___xxtofl@arg+2,f
  6557     1201  3000               	movlw	0
  6558     1202  1803               	skipnc
  6559     1203  3001               	movlw	1
  6560     1204  07FD               	addwf	___xxtofl@arg+3,f
  6561     1205                     l3204:
  6562     1205  3001               	movlw	1
  6563     1206                     u4685:
  6564     1206  1003               	clrc
  6565     1207  0CFD               	rrf	___xxtofl@arg+3,f
  6566     1208  0CFC               	rrf	___xxtofl@arg+2,f
  6567     1209  0CFB               	rrf	___xxtofl@arg+1,f
  6568     120A  0CFA               	rrf	___xxtofl@arg,f
  6569     120B  3EFF               	addlw	-1
  6570     120C  1D03               	skipz
  6571     120D  2A06               	goto	u4685
  6572     120E                     l692:
  6573     120E  30FF               	movlw	255
  6574     120F  057D               	andwf	___xxtofl@arg+3,w
  6575     1210  1D03               	btfss	3,2
  6576     1211  2A13               	goto	u4691
  6577     1212  2A14               	goto	u4690
  6578     1213                     u4691:
  6579     1213  29F5               	goto	l3200
  6580     1214                     u4690:
  6581     1214  2A20               	goto	l3208
  6582     1215                     l3206:
  6583     1215  3001               	movlw	1
  6584     1216  02F9               	subwf	___xxtofl@exp,f
  6585     1217  3001               	movlw	1
  6586     1218  00F4               	movwf	??___xxtofl
  6587     1219                     u4705:
  6588     1219  1003               	clrc
  6589     121A  0DFA               	rlf	___xxtofl@arg,f
  6590     121B  0DFB               	rlf	___xxtofl@arg+1,f
  6591     121C  0DFC               	rlf	___xxtofl@arg+2,f
  6592     121D  0DFD               	rlf	___xxtofl@arg+3,f
  6593     121E  0BF4               	decfsz	??___xxtofl,f
  6594     121F  2A19               	goto	u4705
  6595     1220                     l3208:
  6596     1220  1BFC               	btfsc	___xxtofl@arg+2,7
  6597     1221  2A23               	goto	u4711
  6598     1222  2A24               	goto	u4710
  6599     1223                     u4711:
  6600     1223  2A2A               	goto	l699
  6601     1224                     u4710:
  6602     1224                     l3210:
  6603     1224  3002               	movlw	2
  6604     1225  0279               	subwf	___xxtofl@exp,w
  6605     1226  1803               	skipnc
  6606     1227  2A29               	goto	u4721
  6607     1228  2A2A               	goto	u4720
  6608     1229                     u4721:
  6609     1229  2A15               	goto	l3206
  6610     122A                     u4720:
  6611     122A                     l699:
  6612     122A  1879               	btfsc	___xxtofl@exp,0
  6613     122B  2A2D               	goto	u4731
  6614     122C  2A2E               	goto	u4730
  6615     122D                     u4731:
  6616     122D  2A36               	goto	l700
  6617     122E                     u4730:
  6618     122E                     l3212:
  6619     122E  30FF               	movlw	255
  6620     122F  05FA               	andwf	___xxtofl@arg,f
  6621     1230  30FF               	movlw	255
  6622     1231  05FB               	andwf	___xxtofl@arg+1,f
  6623     1232  307F               	movlw	127
  6624     1233  05FC               	andwf	___xxtofl@arg+2,f
  6625     1234  30FF               	movlw	255
  6626     1235  05FD               	andwf	___xxtofl@arg+3,f
  6627     1236                     l700:
  6628     1236  1003               	clrc
  6629     1237  0CF9               	rrf	___xxtofl@exp,f
  6630     1238                     l3214:
  6631     1238  0879               	movf	___xxtofl@exp,w
  6632     1239  00F4               	movwf	??___xxtofl
  6633     123A  01F5               	clrf	??___xxtofl+1
  6634     123B  01F6               	clrf	??___xxtofl+2
  6635     123C  01F7               	clrf	??___xxtofl+3
  6636     123D  3018               	movlw	24
  6637     123E                     u4745:
  6638     123E  1003               	clrc
  6639     123F  0DF4               	rlf	??___xxtofl,f
  6640     1240  0DF5               	rlf	??___xxtofl+1,f
  6641     1241  0DF6               	rlf	??___xxtofl+2,f
  6642     1242  0DF7               	rlf	??___xxtofl+3,f
  6643     1243                     u4740:
  6644     1243  3EFF               	addlw	-1
  6645     1244  1D03               	skipz
  6646     1245  2A3E               	goto	u4745
  6647     1246  0874               	movf	??___xxtofl,w
  6648     1247  04FA               	iorwf	___xxtofl@arg,f
  6649     1248  0875               	movf	??___xxtofl+1,w
  6650     1249  04FB               	iorwf	___xxtofl@arg+1,f
  6651     124A  0876               	movf	??___xxtofl+2,w
  6652     124B  04FC               	iorwf	___xxtofl@arg+2,f
  6653     124C  0877               	movf	??___xxtofl+3,w
  6654     124D  04FD               	iorwf	___xxtofl@arg+3,f
  6655     124E                     l3216:
  6656     124E  0878               	movf	___xxtofl@sign,w
  6657     124F  1903               	btfsc	3,2
  6658     1250  2A52               	goto	u4751
  6659     1251  2A53               	goto	u4750
  6660     1252                     u4751:
  6661     1252  2A58               	goto	l3222
  6662     1253                     u4750:
  6663     1253                     l3218:
  6664     1253  1FF3               	btfss	___xxtofl@val+3,7
  6665     1254  2A56               	goto	u4761
  6666     1255  2A57               	goto	u4760
  6667     1256                     u4761:
  6668     1256  2A58               	goto	l3222
  6669     1257                     u4760:
  6670     1257                     l3220:
  6671     1257  17FD               	bsf	___xxtofl@arg+3,7
  6672     1258                     l3222:
  6673     1258  087D               	movf	___xxtofl@arg+3,w
  6674     1259  00F3               	movwf	?___xxtofl+3
  6675     125A  087C               	movf	___xxtofl@arg+2,w
  6676     125B  00F2               	movwf	?___xxtofl+2
  6677     125C  087B               	movf	___xxtofl@arg+1,w
  6678     125D  00F1               	movwf	?___xxtofl+1
  6679     125E  087A               	movf	___xxtofl@arg,w
  6680     125F  00F0               	movwf	?___xxtofl
  6681     1260                     l688:
  6682     1260  0008               	return
  6683     1261                     __end_of___xxtofl:
  6684                           
  6685                           	psect	text30
  6686     0CBE                     __ptext30:	
  6687 ;; *************** function ___flmul *****************
  6688 ;; Defined at:
  6689 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  b               4    0[BANK0 ] unsigned char 
  6692 ;;  a               4    4[BANK0 ] unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  prod            4   20[BANK0 ] struct .
  6695 ;;  grs             4   14[BANK0 ] unsigned long 
  6696 ;;  temp            2   24[BANK0 ] struct .
  6697 ;;  bexp            1   19[BANK0 ] unsigned char 
  6698 ;;  aexp            1   18[BANK0 ] unsigned char 
  6699 ;;  sign            1   13[BANK0 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  4    0[BANK0 ] unsigned char 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6709 ;;      Params:         0       8       0       0       0
  6710 ;;      Locals:         0      13       0       0       0
  6711 ;;      Temps:          0       5       0       0       0
  6712 ;;      Totals:         0      26       0       0       0
  6713 ;;Total ram usage:       26 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 1
  6716 ;; This function calls:
  6717 ;;		__Umul8_16
  6718 ;; This function is called by:
  6719 ;;		_main
  6720 ;;		_MCP3421_GetDouble
  6721 ;;		_efgtoa
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725     0CBE                     ___flmul:	
  6726                           ;psect for function ___flmul
  6727                           
  6728     0CBE                     l2588:	
  6729                           ;incstack = 0
  6730                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6731                           
  6732     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  6733     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  6734     0CC0  0823               	movf	___flmul@b+3,w
  6735     0CC1  00AD               	movwf	___flmul@sign
  6736     0CC2                     l2590:
  6737     0CC2  3080               	movlw	128
  6738     0CC3  05AD               	andwf	___flmul@sign,f
  6739     0CC4                     l2592:
  6740     0CC4  0823               	movf	___flmul@b+3,w
  6741     0CC5  00A8               	movwf	??___flmul
  6742     0CC6  0728               	addwf	??___flmul,w
  6743     0CC7  00B3               	movwf	___flmul@bexp
  6744     0CC8                     l2594:
  6745     0CC8  1FA2               	btfss	___flmul@b+2,7
  6746     0CC9  2CCB               	goto	u3521
  6747     0CCA  2CCC               	goto	u3520
  6748     0CCB                     u3521:
  6749     0CCB  2CCD               	goto	l2598
  6750     0CCC                     u3520:
  6751     0CCC                     l2596:
  6752     0CCC  1433               	bsf	___flmul@bexp,0
  6753     0CCD                     l2598:
  6754     0CCD  0833               	movf	___flmul@bexp,w
  6755     0CCE  1903               	btfsc	3,2
  6756     0CCF  2CD1               	goto	u3531
  6757     0CD0  2CD2               	goto	u3530
  6758     0CD1                     u3531:
  6759     0CD1  2CE1               	goto	l2606
  6760     0CD2                     u3530:
  6761     0CD2                     l2600:
  6762     0CD2  0A33               	incf	___flmul@bexp,w
  6763     0CD3  1D03               	btfss	3,2
  6764     0CD4  2CD6               	goto	u3541
  6765     0CD5  2CD7               	goto	u3540
  6766     0CD6                     u3541:
  6767     0CD6  2CDF               	goto	l2604
  6768     0CD7                     u3540:
  6769     0CD7                     l2602:
  6770     0CD7  3000               	movlw	0
  6771     0CD8  00A3               	movwf	___flmul@b+3
  6772     0CD9  3000               	movlw	0
  6773     0CDA  00A2               	movwf	___flmul@b+2
  6774     0CDB  3000               	movlw	0
  6775     0CDC  00A1               	movwf	___flmul@b+1
  6776     0CDD  3000               	movlw	0
  6777     0CDE  00A0               	movwf	___flmul@b
  6778     0CDF                     l2604:
  6779     0CDF  17A2               	bsf	___flmul@b+2,7
  6780     0CE0  2CE9               	goto	l2608
  6781     0CE1                     l2606:
  6782     0CE1  3000               	movlw	0
  6783     0CE2  00A3               	movwf	___flmul@b+3
  6784     0CE3  3000               	movlw	0
  6785     0CE4  00A2               	movwf	___flmul@b+2
  6786     0CE5  3000               	movlw	0
  6787     0CE6  00A1               	movwf	___flmul@b+1
  6788     0CE7  3000               	movlw	0
  6789     0CE8  00A0               	movwf	___flmul@b
  6790     0CE9                     l2608:
  6791     0CE9  0827               	movf	___flmul@a+3,w
  6792     0CEA  3980               	andlw	128
  6793     0CEB  06AD               	xorwf	___flmul@sign,f
  6794     0CEC                     l2610:
  6795     0CEC  0827               	movf	___flmul@a+3,w
  6796     0CED  00A8               	movwf	??___flmul
  6797     0CEE  0728               	addwf	??___flmul,w
  6798     0CEF  00B2               	movwf	___flmul@aexp
  6799     0CF0                     l2612:
  6800     0CF0  1FA6               	btfss	___flmul@a+2,7
  6801     0CF1  2CF3               	goto	u3551
  6802     0CF2  2CF4               	goto	u3550
  6803     0CF3                     u3551:
  6804     0CF3  2CF5               	goto	l2616
  6805     0CF4                     u3550:
  6806     0CF4                     l2614:
  6807     0CF4  1432               	bsf	___flmul@aexp,0
  6808     0CF5                     l2616:
  6809     0CF5  0832               	movf	___flmul@aexp,w
  6810     0CF6  1903               	btfsc	3,2
  6811     0CF7  2CF9               	goto	u3561
  6812     0CF8  2CFA               	goto	u3560
  6813     0CF9                     u3561:
  6814     0CF9  2D09               	goto	l2624
  6815     0CFA                     u3560:
  6816     0CFA                     l2618:
  6817     0CFA  0A32               	incf	___flmul@aexp,w
  6818     0CFB  1D03               	btfss	3,2
  6819     0CFC  2CFE               	goto	u3571
  6820     0CFD  2CFF               	goto	u3570
  6821     0CFE                     u3571:
  6822     0CFE  2D07               	goto	l2622
  6823     0CFF                     u3570:
  6824     0CFF                     l2620:
  6825     0CFF  3000               	movlw	0
  6826     0D00  00A7               	movwf	___flmul@a+3
  6827     0D01  3000               	movlw	0
  6828     0D02  00A6               	movwf	___flmul@a+2
  6829     0D03  3000               	movlw	0
  6830     0D04  00A5               	movwf	___flmul@a+1
  6831     0D05  3000               	movlw	0
  6832     0D06  00A4               	movwf	___flmul@a
  6833     0D07                     l2622:
  6834     0D07  17A6               	bsf	___flmul@a+2,7
  6835     0D08  2D11               	goto	l2626
  6836     0D09                     l2624:
  6837     0D09  3000               	movlw	0
  6838     0D0A  00A7               	movwf	___flmul@a+3
  6839     0D0B  3000               	movlw	0
  6840     0D0C  00A6               	movwf	___flmul@a+2
  6841     0D0D  3000               	movlw	0
  6842     0D0E  00A5               	movwf	___flmul@a+1
  6843     0D0F  3000               	movlw	0
  6844     0D10  00A4               	movwf	___flmul@a
  6845     0D11                     l2626:
  6846     0D11  0832               	movf	___flmul@aexp,w
  6847     0D12  1903               	btfsc	3,2
  6848     0D13  2D15               	goto	u3581
  6849     0D14  2D16               	goto	u3580
  6850     0D15                     u3581:
  6851     0D15  2D1B               	goto	l2630
  6852     0D16                     u3580:
  6853     0D16                     l2628:
  6854     0D16  0833               	movf	___flmul@bexp,w
  6855     0D17  1D03               	btfss	3,2
  6856     0D18  2D1A               	goto	u3591
  6857     0D19  2D1B               	goto	u3590
  6858     0D1A                     u3591:
  6859     0D1A  2D24               	goto	l2634
  6860     0D1B                     u3590:
  6861     0D1B                     l2630:
  6862     0D1B  3000               	movlw	0
  6863     0D1C  00A3               	movwf	?___flmul+3
  6864     0D1D  3000               	movlw	0
  6865     0D1E  00A2               	movwf	?___flmul+2
  6866     0D1F  3000               	movlw	0
  6867     0D20  00A1               	movwf	?___flmul+1
  6868     0D21  3000               	movlw	0
  6869     0D22  00A0               	movwf	?___flmul
  6870     0D23  2FFF               	goto	l642
  6871     0D24                     l2634:
  6872     0D24  0820               	movf	___flmul@b,w
  6873     0D25  00F0               	movwf	__Umul8_16@multiplicand
  6874     0D26  0826               	movf	___flmul@a+2,w
  6875     0D27  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  6876     0D2C  0871               	movf	?__Umul8_16+1,w
  6877     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  6878     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  6879     0D2F  00B9               	movwf	___flmul@temp+1
  6880     0D30  0870               	movf	?__Umul8_16,w
  6881     0D31  00B8               	movwf	___flmul@temp
  6882     0D32                     l2636:
  6883     0D32  0838               	movf	___flmul@temp,w
  6884     0D33  00A8               	movwf	??___flmul
  6885     0D34  01A9               	clrf	??___flmul+1
  6886     0D35  01AA               	clrf	??___flmul+2
  6887     0D36  01AB               	clrf	??___flmul+3
  6888     0D37  082B               	movf	??___flmul+3,w
  6889     0D38  00B1               	movwf	___flmul@grs+3
  6890     0D39  082A               	movf	??___flmul+2,w
  6891     0D3A  00B0               	movwf	___flmul@grs+2
  6892     0D3B  0829               	movf	??___flmul+1,w
  6893     0D3C  00AF               	movwf	___flmul@grs+1
  6894     0D3D  0828               	movf	??___flmul,w
  6895     0D3E  00AE               	movwf	___flmul@grs
  6896     0D3F                     l2638:
  6897     0D3F  0839               	movf	___flmul@temp+1,w
  6898     0D40  00A8               	movwf	??___flmul
  6899     0D41  01A9               	clrf	??___flmul+1
  6900     0D42  01AA               	clrf	??___flmul+2
  6901     0D43  01AB               	clrf	??___flmul+3
  6902     0D44  082B               	movf	??___flmul+3,w
  6903     0D45  00B7               	movwf	___flmul@prod+3
  6904     0D46  082A               	movf	??___flmul+2,w
  6905     0D47  00B6               	movwf	___flmul@prod+2
  6906     0D48  0829               	movf	??___flmul+1,w
  6907     0D49  00B5               	movwf	___flmul@prod+1
  6908     0D4A  0828               	movf	??___flmul,w
  6909     0D4B  00B4               	movwf	___flmul@prod
  6910     0D4C  0821               	movf	___flmul@b+1,w
  6911     0D4D  00F0               	movwf	__Umul8_16@multiplicand
  6912     0D4E  0825               	movf	___flmul@a+1,w
  6913     0D4F  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  6914     0D54  0871               	movf	?__Umul8_16+1,w
  6915     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  6916     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  6917     0D57  00B9               	movwf	___flmul@temp+1
  6918     0D58  0870               	movf	?__Umul8_16,w
  6919     0D59  00B8               	movwf	___flmul@temp
  6920     0D5A                     l2640:
  6921     0D5A  0838               	movf	___flmul@temp,w
  6922     0D5B  00A8               	movwf	??___flmul
  6923     0D5C  01A9               	clrf	??___flmul+1
  6924     0D5D  01AA               	clrf	??___flmul+2
  6925     0D5E  01AB               	clrf	??___flmul+3
  6926     0D5F  0828               	movf	??___flmul,w
  6927     0D60  07AE               	addwf	___flmul@grs,f
  6928     0D61  0829               	movf	??___flmul+1,w
  6929     0D62  1103               	clrz
  6930     0D63  1803               	skipnc
  6931     0D64  3E01               	addlw	1
  6932     0D65  1903               	skipnz
  6933     0D66  2D68               	goto	u3601
  6934     0D67  07AF               	addwf	___flmul@grs+1,f
  6935     0D68                     u3601:
  6936     0D68  082A               	movf	??___flmul+2,w
  6937     0D69  1103               	clrz
  6938     0D6A  1803               	skipnc
  6939     0D6B  3E01               	addlw	1
  6940     0D6C  1903               	skipnz
  6941     0D6D  2D6F               	goto	u3602
  6942     0D6E  07B0               	addwf	___flmul@grs+2,f
  6943     0D6F                     u3602:
  6944     0D6F  082B               	movf	??___flmul+3,w
  6945     0D70  1103               	clrz
  6946     0D71  1803               	skipnc
  6947     0D72  3E01               	addlw	1
  6948     0D73  1903               	skipnz
  6949     0D74  2D76               	goto	u3603
  6950     0D75  07B1               	addwf	___flmul@grs+3,f
  6951     0D76                     u3603:
  6952     0D76                     l2642:
  6953     0D76  0839               	movf	___flmul@temp+1,w
  6954     0D77  00A8               	movwf	??___flmul
  6955     0D78  01A9               	clrf	??___flmul+1
  6956     0D79  01AA               	clrf	??___flmul+2
  6957     0D7A  01AB               	clrf	??___flmul+3
  6958     0D7B  0828               	movf	??___flmul,w
  6959     0D7C  07B4               	addwf	___flmul@prod,f
  6960     0D7D  0829               	movf	??___flmul+1,w
  6961     0D7E  1103               	clrz
  6962     0D7F  1803               	skipnc
  6963     0D80  3E01               	addlw	1
  6964     0D81  1903               	skipnz
  6965     0D82  2D84               	goto	u3611
  6966     0D83  07B5               	addwf	___flmul@prod+1,f
  6967     0D84                     u3611:
  6968     0D84  082A               	movf	??___flmul+2,w
  6969     0D85  1103               	clrz
  6970     0D86  1803               	skipnc
  6971     0D87  3E01               	addlw	1
  6972     0D88  1903               	skipnz
  6973     0D89  2D8B               	goto	u3612
  6974     0D8A  07B6               	addwf	___flmul@prod+2,f
  6975     0D8B                     u3612:
  6976     0D8B  082B               	movf	??___flmul+3,w
  6977     0D8C  1103               	clrz
  6978     0D8D  1803               	skipnc
  6979     0D8E  3E01               	addlw	1
  6980     0D8F  1903               	skipnz
  6981     0D90  2D92               	goto	u3613
  6982     0D91  07B7               	addwf	___flmul@prod+3,f
  6983     0D92                     u3613:
  6984     0D92  0822               	movf	___flmul@b+2,w
  6985     0D93  00F0               	movwf	__Umul8_16@multiplicand
  6986     0D94  0824               	movf	___flmul@a,w
  6987     0D95  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  6988     0D9A  0871               	movf	?__Umul8_16+1,w
  6989     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  6990     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  6991     0D9D  00B9               	movwf	___flmul@temp+1
  6992     0D9E  0870               	movf	?__Umul8_16,w
  6993     0D9F  00B8               	movwf	___flmul@temp
  6994     0DA0                     l2644:
  6995     0DA0  0838               	movf	___flmul@temp,w
  6996     0DA1  00A8               	movwf	??___flmul
  6997     0DA2  01A9               	clrf	??___flmul+1
  6998     0DA3  01AA               	clrf	??___flmul+2
  6999     0DA4  01AB               	clrf	??___flmul+3
  7000     0DA5  0828               	movf	??___flmul,w
  7001     0DA6  07AE               	addwf	___flmul@grs,f
  7002     0DA7  0829               	movf	??___flmul+1,w
  7003     0DA8  1103               	clrz
  7004     0DA9  1803               	skipnc
  7005     0DAA  3E01               	addlw	1
  7006     0DAB  1903               	skipnz
  7007     0DAC  2DAE               	goto	u3621
  7008     0DAD  07AF               	addwf	___flmul@grs+1,f
  7009     0DAE                     u3621:
  7010     0DAE  082A               	movf	??___flmul+2,w
  7011     0DAF  1103               	clrz
  7012     0DB0  1803               	skipnc
  7013     0DB1  3E01               	addlw	1
  7014     0DB2  1903               	skipnz
  7015     0DB3  2DB5               	goto	u3622
  7016     0DB4  07B0               	addwf	___flmul@grs+2,f
  7017     0DB5                     u3622:
  7018     0DB5  082B               	movf	??___flmul+3,w
  7019     0DB6  1103               	clrz
  7020     0DB7  1803               	skipnc
  7021     0DB8  3E01               	addlw	1
  7022     0DB9  1903               	skipnz
  7023     0DBA  2DBC               	goto	u3623
  7024     0DBB  07B1               	addwf	___flmul@grs+3,f
  7025     0DBC                     u3623:
  7026     0DBC                     l2646:
  7027     0DBC  0839               	movf	___flmul@temp+1,w
  7028     0DBD  00A8               	movwf	??___flmul
  7029     0DBE  01A9               	clrf	??___flmul+1
  7030     0DBF  01AA               	clrf	??___flmul+2
  7031     0DC0  01AB               	clrf	??___flmul+3
  7032     0DC1  0828               	movf	??___flmul,w
  7033     0DC2  07B4               	addwf	___flmul@prod,f
  7034     0DC3  0829               	movf	??___flmul+1,w
  7035     0DC4  1103               	clrz
  7036     0DC5  1803               	skipnc
  7037     0DC6  3E01               	addlw	1
  7038     0DC7  1903               	skipnz
  7039     0DC8  2DCA               	goto	u3631
  7040     0DC9  07B5               	addwf	___flmul@prod+1,f
  7041     0DCA                     u3631:
  7042     0DCA  082A               	movf	??___flmul+2,w
  7043     0DCB  1103               	clrz
  7044     0DCC  1803               	skipnc
  7045     0DCD  3E01               	addlw	1
  7046     0DCE  1903               	skipnz
  7047     0DCF  2DD1               	goto	u3632
  7048     0DD0  07B6               	addwf	___flmul@prod+2,f
  7049     0DD1                     u3632:
  7050     0DD1  082B               	movf	??___flmul+3,w
  7051     0DD2  1103               	clrz
  7052     0DD3  1803               	skipnc
  7053     0DD4  3E01               	addlw	1
  7054     0DD5  1903               	skipnz
  7055     0DD6  2DD8               	goto	u3633
  7056     0DD7  07B7               	addwf	___flmul@prod+3,f
  7057     0DD8                     u3633:
  7058     0DD8                     l2648:
  7059     0DD8  3008               	movlw	8
  7060     0DD9  00A8               	movwf	??___flmul
  7061     0DDA                     u3645:
  7062     0DDA  1003               	clrc
  7063     0DDB  0DAE               	rlf	___flmul@grs,f
  7064     0DDC  0DAF               	rlf	___flmul@grs+1,f
  7065     0DDD  0DB0               	rlf	___flmul@grs+2,f
  7066     0DDE  0DB1               	rlf	___flmul@grs+3,f
  7067     0DDF  0BA8               	decfsz	??___flmul,f
  7068     0DE0  2DDA               	goto	u3645
  7069     0DE1                     l2650:
  7070     0DE1  0821               	movf	___flmul@b+1,w
  7071     0DE2  00F0               	movwf	__Umul8_16@multiplicand
  7072     0DE3  0824               	movf	___flmul@a,w
  7073     0DE4  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  7074     0DE9  0871               	movf	?__Umul8_16+1,w
  7075     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  7076     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  7077     0DEC  00B9               	movwf	___flmul@temp+1
  7078     0DED  0870               	movf	?__Umul8_16,w
  7079     0DEE  00B8               	movwf	___flmul@temp
  7080     0DEF                     l2652:
  7081     0DEF  0838               	movf	___flmul@temp,w
  7082     0DF0  00A8               	movwf	??___flmul
  7083     0DF1  0839               	movf	___flmul@temp+1,w
  7084     0DF2  00A9               	movwf	??___flmul+1
  7085     0DF3  01AA               	clrf	??___flmul+2
  7086     0DF4  01AB               	clrf	??___flmul+3
  7087     0DF5  0828               	movf	??___flmul,w
  7088     0DF6  07AE               	addwf	___flmul@grs,f
  7089     0DF7  0829               	movf	??___flmul+1,w
  7090     0DF8  1103               	clrz
  7091     0DF9  1803               	skipnc
  7092     0DFA  3E01               	addlw	1
  7093     0DFB  1903               	skipnz
  7094     0DFC  2DFE               	goto	u3651
  7095     0DFD  07AF               	addwf	___flmul@grs+1,f
  7096     0DFE                     u3651:
  7097     0DFE  082A               	movf	??___flmul+2,w
  7098     0DFF  1103               	clrz
  7099     0E00  1803               	skipnc
  7100     0E01  3E01               	addlw	1
  7101     0E02  1903               	skipnz
  7102     0E03  2E05               	goto	u3652
  7103     0E04  07B0               	addwf	___flmul@grs+2,f
  7104     0E05                     u3652:
  7105     0E05  082B               	movf	??___flmul+3,w
  7106     0E06  1103               	clrz
  7107     0E07  1803               	skipnc
  7108     0E08  3E01               	addlw	1
  7109     0E09  1903               	skipnz
  7110     0E0A  2E0C               	goto	u3653
  7111     0E0B  07B1               	addwf	___flmul@grs+3,f
  7112     0E0C                     u3653:
  7113     0E0C                     l2654:
  7114     0E0C  0820               	movf	___flmul@b,w
  7115     0E0D  00F0               	movwf	__Umul8_16@multiplicand
  7116     0E0E  0825               	movf	___flmul@a+1,w
  7117     0E0F  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  7118     0E14  0871               	movf	?__Umul8_16+1,w
  7119     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  7120     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  7121     0E17  00B9               	movwf	___flmul@temp+1
  7122     0E18  0870               	movf	?__Umul8_16,w
  7123     0E19  00B8               	movwf	___flmul@temp
  7124     0E1A                     l2656:
  7125     0E1A  0838               	movf	___flmul@temp,w
  7126     0E1B  00A8               	movwf	??___flmul
  7127     0E1C  0839               	movf	___flmul@temp+1,w
  7128     0E1D  00A9               	movwf	??___flmul+1
  7129     0E1E  01AA               	clrf	??___flmul+2
  7130     0E1F  01AB               	clrf	??___flmul+3
  7131     0E20  0828               	movf	??___flmul,w
  7132     0E21  07AE               	addwf	___flmul@grs,f
  7133     0E22  0829               	movf	??___flmul+1,w
  7134     0E23  1103               	clrz
  7135     0E24  1803               	skipnc
  7136     0E25  3E01               	addlw	1
  7137     0E26  1903               	skipnz
  7138     0E27  2E29               	goto	u3661
  7139     0E28  07AF               	addwf	___flmul@grs+1,f
  7140     0E29                     u3661:
  7141     0E29  082A               	movf	??___flmul+2,w
  7142     0E2A  1103               	clrz
  7143     0E2B  1803               	skipnc
  7144     0E2C  3E01               	addlw	1
  7145     0E2D  1903               	skipnz
  7146     0E2E  2E30               	goto	u3662
  7147     0E2F  07B0               	addwf	___flmul@grs+2,f
  7148     0E30                     u3662:
  7149     0E30  082B               	movf	??___flmul+3,w
  7150     0E31  1103               	clrz
  7151     0E32  1803               	skipnc
  7152     0E33  3E01               	addlw	1
  7153     0E34  1903               	skipnz
  7154     0E35  2E37               	goto	u3663
  7155     0E36  07B1               	addwf	___flmul@grs+3,f
  7156     0E37                     u3663:
  7157     0E37                     l2658:
  7158     0E37  3008               	movlw	8
  7159     0E38  00A8               	movwf	??___flmul
  7160     0E39                     u3675:
  7161     0E39  1003               	clrc
  7162     0E3A  0DAE               	rlf	___flmul@grs,f
  7163     0E3B  0DAF               	rlf	___flmul@grs+1,f
  7164     0E3C  0DB0               	rlf	___flmul@grs+2,f
  7165     0E3D  0DB1               	rlf	___flmul@grs+3,f
  7166     0E3E  0BA8               	decfsz	??___flmul,f
  7167     0E3F  2E39               	goto	u3675
  7168     0E40  0820               	movf	___flmul@b,w
  7169     0E41  00F0               	movwf	__Umul8_16@multiplicand
  7170     0E42  0824               	movf	___flmul@a,w
  7171     0E43  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  7172     0E48  0871               	movf	?__Umul8_16+1,w
  7173     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  7174     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  7175     0E4B  00B9               	movwf	___flmul@temp+1
  7176     0E4C  0870               	movf	?__Umul8_16,w
  7177     0E4D  00B8               	movwf	___flmul@temp
  7178     0E4E                     l2660:
  7179     0E4E  0838               	movf	___flmul@temp,w
  7180     0E4F  00A8               	movwf	??___flmul
  7181     0E50  0839               	movf	___flmul@temp+1,w
  7182     0E51  00A9               	movwf	??___flmul+1
  7183     0E52  01AA               	clrf	??___flmul+2
  7184     0E53  01AB               	clrf	??___flmul+3
  7185     0E54  0828               	movf	??___flmul,w
  7186     0E55  07AE               	addwf	___flmul@grs,f
  7187     0E56  0829               	movf	??___flmul+1,w
  7188     0E57  1103               	clrz
  7189     0E58  1803               	skipnc
  7190     0E59  3E01               	addlw	1
  7191     0E5A  1903               	skipnz
  7192     0E5B  2E5D               	goto	u3681
  7193     0E5C  07AF               	addwf	___flmul@grs+1,f
  7194     0E5D                     u3681:
  7195     0E5D  082A               	movf	??___flmul+2,w
  7196     0E5E  1103               	clrz
  7197     0E5F  1803               	skipnc
  7198     0E60  3E01               	addlw	1
  7199     0E61  1903               	skipnz
  7200     0E62  2E64               	goto	u3682
  7201     0E63  07B0               	addwf	___flmul@grs+2,f
  7202     0E64                     u3682:
  7203     0E64  082B               	movf	??___flmul+3,w
  7204     0E65  1103               	clrz
  7205     0E66  1803               	skipnc
  7206     0E67  3E01               	addlw	1
  7207     0E68  1903               	skipnz
  7208     0E69  2E6B               	goto	u3683
  7209     0E6A  07B1               	addwf	___flmul@grs+3,f
  7210     0E6B                     u3683:
  7211     0E6B                     l2662:
  7212     0E6B  0821               	movf	___flmul@b+1,w
  7213     0E6C  00F0               	movwf	__Umul8_16@multiplicand
  7214     0E6D  0826               	movf	___flmul@a+2,w
  7215     0E6E  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  7216     0E73  0871               	movf	?__Umul8_16+1,w
  7217     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  7218     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  7219     0E76  00B9               	movwf	___flmul@temp+1
  7220     0E77  0870               	movf	?__Umul8_16,w
  7221     0E78  00B8               	movwf	___flmul@temp
  7222     0E79  0838               	movf	___flmul@temp,w
  7223     0E7A  00A8               	movwf	??___flmul
  7224     0E7B  0839               	movf	___flmul@temp+1,w
  7225     0E7C  00A9               	movwf	??___flmul+1
  7226     0E7D  01AA               	clrf	??___flmul+2
  7227     0E7E  01AB               	clrf	??___flmul+3
  7228     0E7F  0828               	movf	??___flmul,w
  7229     0E80  07B4               	addwf	___flmul@prod,f
  7230     0E81  0829               	movf	??___flmul+1,w
  7231     0E82  1103               	clrz
  7232     0E83  1803               	skipnc
  7233     0E84  3E01               	addlw	1
  7234     0E85  1903               	skipnz
  7235     0E86  2E88               	goto	u3691
  7236     0E87  07B5               	addwf	___flmul@prod+1,f
  7237     0E88                     u3691:
  7238     0E88  082A               	movf	??___flmul+2,w
  7239     0E89  1103               	clrz
  7240     0E8A  1803               	skipnc
  7241     0E8B  3E01               	addlw	1
  7242     0E8C  1903               	skipnz
  7243     0E8D  2E8F               	goto	u3692
  7244     0E8E  07B6               	addwf	___flmul@prod+2,f
  7245     0E8F                     u3692:
  7246     0E8F  082B               	movf	??___flmul+3,w
  7247     0E90  1103               	clrz
  7248     0E91  1803               	skipnc
  7249     0E92  3E01               	addlw	1
  7250     0E93  1903               	skipnz
  7251     0E94  2E96               	goto	u3693
  7252     0E95  07B7               	addwf	___flmul@prod+3,f
  7253     0E96                     u3693:
  7254     0E96                     l2664:
  7255     0E96  0822               	movf	___flmul@b+2,w
  7256     0E97  00F0               	movwf	__Umul8_16@multiplicand
  7257     0E98  0825               	movf	___flmul@a+1,w
  7258     0E99  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  7259     0E9E  0871               	movf	?__Umul8_16+1,w
  7260     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  7261     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  7262     0EA1  00B9               	movwf	___flmul@temp+1
  7263     0EA2  0870               	movf	?__Umul8_16,w
  7264     0EA3  00B8               	movwf	___flmul@temp
  7265     0EA4                     l2666:
  7266     0EA4  0838               	movf	___flmul@temp,w
  7267     0EA5  00A8               	movwf	??___flmul
  7268     0EA6  0839               	movf	___flmul@temp+1,w
  7269     0EA7  00A9               	movwf	??___flmul+1
  7270     0EA8  01AA               	clrf	??___flmul+2
  7271     0EA9  01AB               	clrf	??___flmul+3
  7272     0EAA  0828               	movf	??___flmul,w
  7273     0EAB  07B4               	addwf	___flmul@prod,f
  7274     0EAC  0829               	movf	??___flmul+1,w
  7275     0EAD  1103               	clrz
  7276     0EAE  1803               	skipnc
  7277     0EAF  3E01               	addlw	1
  7278     0EB0  1903               	skipnz
  7279     0EB1  2EB3               	goto	u3701
  7280     0EB2  07B5               	addwf	___flmul@prod+1,f
  7281     0EB3                     u3701:
  7282     0EB3  082A               	movf	??___flmul+2,w
  7283     0EB4  1103               	clrz
  7284     0EB5  1803               	skipnc
  7285     0EB6  3E01               	addlw	1
  7286     0EB7  1903               	skipnz
  7287     0EB8  2EBA               	goto	u3702
  7288     0EB9  07B6               	addwf	___flmul@prod+2,f
  7289     0EBA                     u3702:
  7290     0EBA  082B               	movf	??___flmul+3,w
  7291     0EBB  1103               	clrz
  7292     0EBC  1803               	skipnc
  7293     0EBD  3E01               	addlw	1
  7294     0EBE  1903               	skipnz
  7295     0EBF  2EC1               	goto	u3703
  7296     0EC0  07B7               	addwf	___flmul@prod+3,f
  7297     0EC1                     u3703:
  7298     0EC1  0822               	movf	___flmul@b+2,w
  7299     0EC2  00F0               	movwf	__Umul8_16@multiplicand
  7300     0EC3  0826               	movf	___flmul@a+2,w
  7301     0EC4  160A  158A  262C  120A  158A  	fcall	__Umul8_16
  7302     0EC9  0871               	movf	?__Umul8_16+1,w
  7303     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  7304     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  7305     0ECC  00B9               	movwf	___flmul@temp+1
  7306     0ECD  0870               	movf	?__Umul8_16,w
  7307     0ECE  00B8               	movwf	___flmul@temp
  7308     0ECF                     l2668:
  7309     0ECF  0838               	movf	___flmul@temp,w
  7310     0ED0  00A8               	movwf	??___flmul
  7311     0ED1  0839               	movf	___flmul@temp+1,w
  7312     0ED2  00A9               	movwf	??___flmul+1
  7313     0ED3  01AA               	clrf	??___flmul+2
  7314     0ED4  01AB               	clrf	??___flmul+3
  7315     0ED5  3008               	movlw	8
  7316     0ED6                     u3715:
  7317     0ED6  1003               	clrc
  7318     0ED7  0DA8               	rlf	??___flmul,f
  7319     0ED8  0DA9               	rlf	??___flmul+1,f
  7320     0ED9  0DAA               	rlf	??___flmul+2,f
  7321     0EDA  0DAB               	rlf	??___flmul+3,f
  7322     0EDB                     u3710:
  7323     0EDB  3EFF               	addlw	-1
  7324     0EDC  1D03               	skipz
  7325     0EDD  2ED6               	goto	u3715
  7326     0EDE  0828               	movf	??___flmul,w
  7327     0EDF  07B4               	addwf	___flmul@prod,f
  7328     0EE0  0829               	movf	??___flmul+1,w
  7329     0EE1  1103               	clrz
  7330     0EE2  1803               	skipnc
  7331     0EE3  3E01               	addlw	1
  7332     0EE4  1903               	skipnz
  7333     0EE5  2EE7               	goto	u3721
  7334     0EE6  07B5               	addwf	___flmul@prod+1,f
  7335     0EE7                     u3721:
  7336     0EE7  082A               	movf	??___flmul+2,w
  7337     0EE8  1103               	clrz
  7338     0EE9  1803               	skipnc
  7339     0EEA  3E01               	addlw	1
  7340     0EEB  1903               	skipnz
  7341     0EEC  2EEE               	goto	u3722
  7342     0EED  07B6               	addwf	___flmul@prod+2,f
  7343     0EEE                     u3722:
  7344     0EEE  082B               	movf	??___flmul+3,w
  7345     0EEF  1103               	clrz
  7346     0EF0  1803               	skipnc
  7347     0EF1  3E01               	addlw	1
  7348     0EF2  1903               	skipnz
  7349     0EF3  2EF5               	goto	u3723
  7350     0EF4  07B7               	addwf	___flmul@prod+3,f
  7351     0EF5                     u3723:
  7352     0EF5                     l2670:
  7353     0EF5  082E               	movf	___flmul@grs,w
  7354     0EF6  00A8               	movwf	??___flmul
  7355     0EF7  082F               	movf	___flmul@grs+1,w
  7356     0EF8  00A9               	movwf	??___flmul+1
  7357     0EF9  0830               	movf	___flmul@grs+2,w
  7358     0EFA  00AA               	movwf	??___flmul+2
  7359     0EFB  0831               	movf	___flmul@grs+3,w
  7360     0EFC  00AB               	movwf	??___flmul+3
  7361     0EFD  3018               	movlw	24
  7362     0EFE                     u3735:
  7363     0EFE  1003               	clrc
  7364     0EFF  0CAB               	rrf	??___flmul+3,f
  7365     0F00  0CAA               	rrf	??___flmul+2,f
  7366     0F01  0CA9               	rrf	??___flmul+1,f
  7367     0F02  0CA8               	rrf	??___flmul,f
  7368     0F03                     u3730:
  7369     0F03  3EFF               	addlw	-1
  7370     0F04  1D03               	skipz
  7371     0F05  2EFE               	goto	u3735
  7372     0F06  0828               	movf	??___flmul,w
  7373     0F07  07B4               	addwf	___flmul@prod,f
  7374     0F08  0829               	movf	??___flmul+1,w
  7375     0F09  1103               	clrz
  7376     0F0A  1803               	skipnc
  7377     0F0B  3E01               	addlw	1
  7378     0F0C  1903               	skipnz
  7379     0F0D  2F0F               	goto	u3741
  7380     0F0E  07B5               	addwf	___flmul@prod+1,f
  7381     0F0F                     u3741:
  7382     0F0F  082A               	movf	??___flmul+2,w
  7383     0F10  1103               	clrz
  7384     0F11  1803               	skipnc
  7385     0F12  3E01               	addlw	1
  7386     0F13  1903               	skipnz
  7387     0F14  2F16               	goto	u3742
  7388     0F15  07B6               	addwf	___flmul@prod+2,f
  7389     0F16                     u3742:
  7390     0F16  082B               	movf	??___flmul+3,w
  7391     0F17  1103               	clrz
  7392     0F18  1803               	skipnc
  7393     0F19  3E01               	addlw	1
  7394     0F1A  1903               	skipnz
  7395     0F1B  2F1D               	goto	u3743
  7396     0F1C  07B7               	addwf	___flmul@prod+3,f
  7397     0F1D                     u3743:
  7398     0F1D                     l2672:
  7399     0F1D  3008               	movlw	8
  7400     0F1E  00A8               	movwf	??___flmul
  7401     0F1F                     u3755:
  7402     0F1F  1003               	clrc
  7403     0F20  0DAE               	rlf	___flmul@grs,f
  7404     0F21  0DAF               	rlf	___flmul@grs+1,f
  7405     0F22  0DB0               	rlf	___flmul@grs+2,f
  7406     0F23  0DB1               	rlf	___flmul@grs+3,f
  7407     0F24  0BA8               	decfsz	??___flmul,f
  7408     0F25  2F1F               	goto	u3755
  7409     0F26                     l2674:
  7410     0F26  0833               	movf	___flmul@bexp,w
  7411     0F27  0732               	addwf	___flmul@aexp,w
  7412     0F28  00A8               	movwf	??___flmul
  7413     0F29  01A9               	clrf	??___flmul+1
  7414     0F2A  0DA9               	rlf	??___flmul+1,f
  7415     0F2B  0828               	movf	??___flmul,w
  7416     0F2C  3E82               	addlw	130
  7417     0F2D  00B8               	movwf	___flmul@temp
  7418     0F2E  0829               	movf	??___flmul+1,w
  7419     0F2F  1803               	skipnc
  7420     0F30  3E01               	addlw	1
  7421     0F31  3EFF               	addlw	255
  7422     0F32  00B9               	movwf	___flmul@temp+1
  7423     0F33  2F51               	goto	l2686
  7424     0F34                     l2676:
  7425     0F34  3001               	movlw	1
  7426     0F35  00A8               	movwf	??___flmul
  7427     0F36                     u3765:
  7428     0F36  1003               	clrc
  7429     0F37  0DB4               	rlf	___flmul@prod,f
  7430     0F38  0DB5               	rlf	___flmul@prod+1,f
  7431     0F39  0DB6               	rlf	___flmul@prod+2,f
  7432     0F3A  0DB7               	rlf	___flmul@prod+3,f
  7433     0F3B  0BA8               	decfsz	??___flmul,f
  7434     0F3C  2F36               	goto	u3765
  7435     0F3D                     l2678:
  7436     0F3D  1FB1               	btfss	___flmul@grs+3,7
  7437     0F3E  2F40               	goto	u3771
  7438     0F3F  2F41               	goto	u3770
  7439     0F40                     u3771:
  7440     0F40  2F42               	goto	l2682
  7441     0F41                     u3770:
  7442     0F41                     l2680:
  7443     0F41  1434               	bsf	___flmul@prod,0
  7444     0F42                     l2682:
  7445     0F42  3001               	movlw	1
  7446     0F43  00A8               	movwf	??___flmul
  7447     0F44                     u3785:
  7448     0F44  1003               	clrc
  7449     0F45  0DAE               	rlf	___flmul@grs,f
  7450     0F46  0DAF               	rlf	___flmul@grs+1,f
  7451     0F47  0DB0               	rlf	___flmul@grs+2,f
  7452     0F48  0DB1               	rlf	___flmul@grs+3,f
  7453     0F49  0BA8               	decfsz	??___flmul,f
  7454     0F4A  2F44               	goto	u3785
  7455     0F4B                     l2684:
  7456     0F4B  30FF               	movlw	255
  7457     0F4C  07B8               	addwf	___flmul@temp,f
  7458     0F4D  1803               	skipnc
  7459     0F4E  0AB9               	incf	___flmul@temp+1,f
  7460     0F4F  30FF               	movlw	255
  7461     0F50  07B9               	addwf	___flmul@temp+1,f
  7462     0F51                     l2686:
  7463     0F51  1FB6               	btfss	___flmul@prod+2,7
  7464     0F52  2F54               	goto	u3791
  7465     0F53  2F55               	goto	u3790
  7466     0F54                     u3791:
  7467     0F54  2F34               	goto	l2676
  7468     0F55                     u3790:
  7469     0F55                     l2688:
  7470     0F55  01B2               	clrf	___flmul@aexp
  7471     0F56                     l2690:
  7472     0F56  1FB1               	btfss	___flmul@grs+3,7
  7473     0F57  2F59               	goto	u3801
  7474     0F58  2F5A               	goto	u3800
  7475     0F59                     u3801:
  7476     0F59  2F76               	goto	l2698
  7477     0F5A                     u3800:
  7478     0F5A                     l2692:
  7479     0F5A  30FF               	movlw	255
  7480     0F5B  052E               	andwf	___flmul@grs,w
  7481     0F5C  00A8               	movwf	??___flmul
  7482     0F5D  30FF               	movlw	255
  7483     0F5E  052F               	andwf	___flmul@grs+1,w
  7484     0F5F  00A9               	movwf	??___flmul+1
  7485     0F60  30FF               	movlw	255
  7486     0F61  0530               	andwf	___flmul@grs+2,w
  7487     0F62  00AA               	movwf	??___flmul+2
  7488     0F63  307F               	movlw	127
  7489     0F64  0531               	andwf	___flmul@grs+3,w
  7490     0F65  00AB               	movwf	??___flmul+3
  7491     0F66  082B               	movf	??___flmul+3,w
  7492     0F67  042A               	iorwf	??___flmul+2,w
  7493     0F68  0429               	iorwf	??___flmul+1,w
  7494     0F69  0428               	iorwf	??___flmul,w
  7495     0F6A  1903               	skipnz
  7496     0F6B  2F6D               	goto	u3811
  7497     0F6C  2F6E               	goto	u3810
  7498     0F6D                     u3811:
  7499     0F6D  2F71               	goto	l648
  7500     0F6E                     u3810:
  7501     0F6E                     l2694:
  7502     0F6E  3001               	movlw	1
  7503     0F6F  00B2               	movwf	___flmul@aexp
  7504     0F70  2F76               	goto	l2698
  7505     0F71                     l648:
  7506     0F71  1C34               	btfss	___flmul@prod,0
  7507     0F72  2F74               	goto	u3821
  7508     0F73  2F75               	goto	u3820
  7509     0F74                     u3821:
  7510     0F74  2F76               	goto	l2698
  7511     0F75                     u3820:
  7512     0F75  2F6E               	goto	l2694
  7513     0F76                     l2698:
  7514     0F76  0832               	movf	___flmul@aexp,w
  7515     0F77  1903               	btfsc	3,2
  7516     0F78  2F7A               	goto	u3831
  7517     0F79  2F7B               	goto	u3830
  7518     0F7A                     u3831:
  7519     0F7A  2FAC               	goto	l2708
  7520     0F7B                     u3830:
  7521     0F7B                     l2700:
  7522     0F7B  3001               	movlw	1
  7523     0F7C  07B4               	addwf	___flmul@prod,f
  7524     0F7D  3000               	movlw	0
  7525     0F7E  1803               	skipnc
  7526     0F7F  3001               	movlw	1
  7527     0F80  07B5               	addwf	___flmul@prod+1,f
  7528     0F81  3000               	movlw	0
  7529     0F82  1803               	skipnc
  7530     0F83  3001               	movlw	1
  7531     0F84  07B6               	addwf	___flmul@prod+2,f
  7532     0F85  3000               	movlw	0
  7533     0F86  1803               	skipnc
  7534     0F87  3001               	movlw	1
  7535     0F88  07B7               	addwf	___flmul@prod+3,f
  7536     0F89                     l2702:
  7537     0F89  1C37               	btfss	___flmul@prod+3,0
  7538     0F8A  2F8C               	goto	u3841
  7539     0F8B  2F8D               	goto	u3840
  7540     0F8C                     u3841:
  7541     0F8C  2FAC               	goto	l2708
  7542     0F8D                     u3840:
  7543     0F8D                     l2704:
  7544     0F8D  0834               	movf	___flmul@prod,w
  7545     0F8E  00A8               	movwf	??___flmul
  7546     0F8F  0835               	movf	___flmul@prod+1,w
  7547     0F90  00A9               	movwf	??___flmul+1
  7548     0F91  0836               	movf	___flmul@prod+2,w
  7549     0F92  00AA               	movwf	??___flmul+2
  7550     0F93  0837               	movf	___flmul@prod+3,w
  7551     0F94  00AB               	movwf	??___flmul+3
  7552     0F95  3001               	movlw	1
  7553     0F96  00AC               	movwf	??___flmul+4
  7554     0F97                     u3855:
  7555     0F97  0D2B               	rlf	??___flmul+3,w
  7556     0F98  0CAB               	rrf	??___flmul+3,f
  7557     0F99  0CAA               	rrf	??___flmul+2,f
  7558     0F9A  0CA9               	rrf	??___flmul+1,f
  7559     0F9B  0CA8               	rrf	??___flmul,f
  7560     0F9C                     u3850:
  7561     0F9C  0BAC               	decfsz	??___flmul+4,f
  7562     0F9D  2F97               	goto	u3855
  7563     0F9E  082B               	movf	??___flmul+3,w
  7564     0F9F  00B7               	movwf	___flmul@prod+3
  7565     0FA0  082A               	movf	??___flmul+2,w
  7566     0FA1  00B6               	movwf	___flmul@prod+2
  7567     0FA2  0829               	movf	??___flmul+1,w
  7568     0FA3  00B5               	movwf	___flmul@prod+1
  7569     0FA4  0828               	movf	??___flmul,w
  7570     0FA5  00B4               	movwf	___flmul@prod
  7571     0FA6                     l2706:
  7572     0FA6  3001               	movlw	1
  7573     0FA7  07B8               	addwf	___flmul@temp,f
  7574     0FA8  1803               	skipnc
  7575     0FA9  0AB9               	incf	___flmul@temp+1,f
  7576     0FAA  3000               	movlw	0
  7577     0FAB  07B9               	addwf	___flmul@temp+1,f
  7578     0FAC                     l2708:
  7579     0FAC  0839               	movf	___flmul@temp+1,w
  7580     0FAD  3A80               	xorlw	128
  7581     0FAE  00FF               	movwf	btemp+1
  7582     0FAF  3080               	movlw	128
  7583     0FB0  027F               	subwf	btemp+1,w
  7584     0FB1  1D03               	skipz
  7585     0FB2  2FB5               	goto	u3865
  7586     0FB3  30FF               	movlw	255
  7587     0FB4  0238               	subwf	___flmul@temp,w
  7588     0FB5                     u3865:
  7589     0FB5  1C03               	skipc
  7590     0FB6  2FB8               	goto	u3861
  7591     0FB7  2FB9               	goto	u3860
  7592     0FB8                     u3861:
  7593     0FB8  2FC4               	goto	l2712
  7594     0FB9                     u3860:
  7595     0FB9                     l2710:
  7596     0FB9  307F               	movlw	127
  7597     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  7598     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  7599     0FBC  00B7               	movwf	___flmul@prod+3
  7600     0FBD  3080               	movlw	128
  7601     0FBE  00B6               	movwf	___flmul@prod+2
  7602     0FBF  3000               	movlw	0
  7603     0FC0  00B5               	movwf	___flmul@prod+1
  7604     0FC1  3000               	movlw	0
  7605     0FC2  00B4               	movwf	___flmul@prod
  7606     0FC3  2FF5               	goto	l654
  7607     0FC4                     l2712:
  7608     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  7609     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  7610     0FC6  0839               	movf	___flmul@temp+1,w
  7611     0FC7  3A80               	xorlw	128
  7612     0FC8  00FF               	movwf	btemp+1
  7613     0FC9  3080               	movlw	128
  7614     0FCA  027F               	subwf	btemp+1,w
  7615     0FCB  1D03               	skipz
  7616     0FCC  2FCF               	goto	u3875
  7617     0FCD  3001               	movlw	1
  7618     0FCE  0238               	subwf	___flmul@temp,w
  7619     0FCF                     u3875:
  7620     0FCF  1803               	skipnc
  7621     0FD0  2FD2               	goto	u3871
  7622     0FD1  2FD3               	goto	u3870
  7623     0FD2                     u3871:
  7624     0FD2  2FDF               	goto	l2718
  7625     0FD3                     u3870:
  7626     0FD3                     l2714:
  7627     0FD3  3000               	movlw	0
  7628     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  7629     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  7630     0FD6  00B7               	movwf	___flmul@prod+3
  7631     0FD7  3000               	movlw	0
  7632     0FD8  00B6               	movwf	___flmul@prod+2
  7633     0FD9  3000               	movlw	0
  7634     0FDA  00B5               	movwf	___flmul@prod+1
  7635     0FDB  3000               	movlw	0
  7636     0FDC  00B4               	movwf	___flmul@prod
  7637     0FDD                     l2716:
  7638     0FDD  01AD               	clrf	___flmul@sign
  7639     0FDE  2FF5               	goto	l654
  7640     0FDF                     l2718:
  7641     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  7642     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  7643     0FE1  0838               	movf	___flmul@temp,w
  7644     0FE2  00B3               	movwf	___flmul@bexp
  7645     0FE3  30FF               	movlw	255
  7646     0FE4  05B4               	andwf	___flmul@prod,f
  7647     0FE5  30FF               	movlw	255
  7648     0FE6  05B5               	andwf	___flmul@prod+1,f
  7649     0FE7  307F               	movlw	127
  7650     0FE8  05B6               	andwf	___flmul@prod+2,f
  7651     0FE9  3000               	movlw	0
  7652     0FEA  05B7               	andwf	___flmul@prod+3,f
  7653     0FEB                     l2720:
  7654     0FEB  1C33               	btfss	___flmul@bexp,0
  7655     0FEC  2FEE               	goto	u3881
  7656     0FED  2FEF               	goto	u3880
  7657     0FEE                     u3881:
  7658     0FEE  2FF0               	goto	l2724
  7659     0FEF                     u3880:
  7660     0FEF                     l2722:
  7661     0FEF  17B6               	bsf	___flmul@prod+2,7
  7662     0FF0                     l2724:
  7663     0FF0  0833               	movf	___flmul@bexp,w
  7664     0FF1  00A8               	movwf	??___flmul
  7665     0FF2  1003               	clrc
  7666     0FF3  0C28               	rrf	??___flmul,w
  7667     0FF4  00B7               	movwf	___flmul@prod+3
  7668     0FF5                     l654:
  7669     0FF5  082D               	movf	___flmul@sign,w
  7670     0FF6  04B7               	iorwf	___flmul@prod+3,f
  7671     0FF7                     l2726:
  7672     0FF7  0837               	movf	___flmul@prod+3,w
  7673     0FF8  00A3               	movwf	?___flmul+3
  7674     0FF9  0836               	movf	___flmul@prod+2,w
  7675     0FFA  00A2               	movwf	?___flmul+2
  7676     0FFB  0835               	movf	___flmul@prod+1,w
  7677     0FFC  00A1               	movwf	?___flmul+1
  7678     0FFD  0834               	movf	___flmul@prod,w
  7679     0FFE  00A0               	movwf	?___flmul
  7680     0FFF                     l642:
  7681     0FFF  0008               	return
  7682     1000                     __end_of___flmul:
  7683                           
  7684                           	psect	text31
  7685     1E2C                     __ptext31:	
  7686 ;; *************** function __Umul8_16 *****************
  7687 ;; Defined at:
  7688 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  multiplier      1    wreg     unsigned char 
  7691 ;;  multiplicand    1    0[COMMON] unsigned char 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  multiplier      1    8[COMMON] unsigned char 
  7694 ;;  word_mpld       2    6[COMMON] unsigned short 
  7695 ;;  product         2    4[COMMON] unsigned short 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  2    0[COMMON] unsigned int 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7705 ;;      Params:         2       0       0       0       0
  7706 ;;      Locals:         5       0       0       0       0
  7707 ;;      Temps:          2       0       0       0       0
  7708 ;;      Totals:         9       0       0       0       0
  7709 ;;Total ram usage:        9 bytes
  7710 ;; Hardware stack levels used: 1
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		___flmul
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718     1E2C                     __Umul8_16:	
  7719                           ;psect for function __Umul8_16
  7720                           
  7721                           
  7722                           ;incstack = 0
  7723                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7724                           ;__Umul8_16@multiplier stored from wreg
  7725     1E2C  00F8               	movwf	__Umul8_16@multiplier
  7726     1E2D                     l2326:
  7727     1E2D  01F4               	clrf	__Umul8_16@product
  7728     1E2E  01F5               	clrf	__Umul8_16@product+1
  7729     1E2F                     l2328:
  7730     1E2F  0870               	movf	__Umul8_16@multiplicand,w
  7731     1E30  00F2               	movwf	??__Umul8_16
  7732     1E31  01F3               	clrf	??__Umul8_16+1
  7733     1E32  0872               	movf	??__Umul8_16,w
  7734     1E33  00F6               	movwf	__Umul8_16@word_mpld
  7735     1E34  0873               	movf	??__Umul8_16+1,w
  7736     1E35  00F7               	movwf	__Umul8_16@word_mpld+1
  7737     1E36                     l2330:
  7738     1E36  1C78               	btfss	__Umul8_16@multiplier,0
  7739     1E37  2E39               	goto	u2941
  7740     1E38  2E3A               	goto	u2940
  7741     1E39                     u2941:
  7742     1E39  2E40               	goto	l661
  7743     1E3A                     u2940:
  7744     1E3A                     l2332:
  7745     1E3A  0876               	movf	__Umul8_16@word_mpld,w
  7746     1E3B  07F4               	addwf	__Umul8_16@product,f
  7747     1E3C  1803               	skipnc
  7748     1E3D  0AF5               	incf	__Umul8_16@product+1,f
  7749     1E3E  0877               	movf	__Umul8_16@word_mpld+1,w
  7750     1E3F  07F5               	addwf	__Umul8_16@product+1,f
  7751     1E40                     l661:
  7752     1E40  3001               	movlw	1
  7753     1E41                     u2955:
  7754     1E41  1003               	clrc
  7755     1E42  0DF6               	rlf	__Umul8_16@word_mpld,f
  7756     1E43  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7757     1E44  3EFF               	addlw	-1
  7758     1E45  1D03               	skipz
  7759     1E46  2E41               	goto	u2955
  7760     1E47  1003               	clrc
  7761     1E48  0CF8               	rrf	__Umul8_16@multiplier,f
  7762     1E49                     l2334:
  7763     1E49  0878               	movf	__Umul8_16@multiplier,w
  7764     1E4A  1D03               	btfss	3,2
  7765     1E4B  2E4D               	goto	u2961
  7766     1E4C  2E4E               	goto	u2960
  7767     1E4D                     u2961:
  7768     1E4D  2E36               	goto	l2330
  7769     1E4E                     u2960:
  7770     1E4E                     l2336:
  7771     1E4E  0875               	movf	__Umul8_16@product+1,w
  7772     1E4F  00F1               	movwf	?__Umul8_16+1
  7773     1E50  0874               	movf	__Umul8_16@product,w
  7774     1E51  00F0               	movwf	?__Umul8_16
  7775     1E52                     l663:
  7776     1E52  0008               	return
  7777     1E53                     __end_of__Umul8_16:
  7778                           
  7779                           	psect	text32
  7780     0898                     __ptext32:	
  7781 ;; *************** function ___fldiv *****************
  7782 ;; Defined at:
  7783 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  a               4   26[BANK0 ] unsigned int 
  7786 ;;  b               4   30[BANK0 ] unsigned int 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  grs             4   46[BANK0 ] unsigned long 
  7789 ;;  rem             4   39[BANK0 ] unsigned long 
  7790 ;;  new_exp         2   44[BANK0 ] short 
  7791 ;;  aexp            1   51[BANK0 ] unsigned char 
  7792 ;;  bexp            1   50[BANK0 ] unsigned char 
  7793 ;;  sign            1   43[BANK0 ] unsigned char 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  4   26[BANK0 ] unsigned char 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0, btemp+1
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7803 ;;      Params:         0       8       0       0       0
  7804 ;;      Locals:         0      13       0       0       0
  7805 ;;      Temps:          0       5       0       0       0
  7806 ;;      Totals:         0      26       0       0       0
  7807 ;;Total ram usage:       26 bytes
  7808 ;; Hardware stack levels used: 1
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		_MCP3421_GetDouble
  7813 ;;		_efgtoa
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817     0898                     ___fldiv:	
  7818                           ;psect for function ___fldiv
  7819                           
  7820     0898                     l2444:	
  7821                           ;incstack = 0
  7822                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7823                           
  7824     0898  1283               	bcf	3,5	;RP0=0, select bank0
  7825     0899  1303               	bcf	3,6	;RP1=0, select bank0
  7826     089A  0841               	movf	___fldiv@b+3,w
  7827     089B  00CB               	movwf	___fldiv@sign
  7828     089C                     l2446:
  7829     089C  3080               	movlw	128
  7830     089D  05CB               	andwf	___fldiv@sign,f
  7831     089E                     l2448:
  7832     089E  0841               	movf	___fldiv@b+3,w
  7833     089F  00C2               	movwf	??___fldiv
  7834     08A0  0742               	addwf	??___fldiv,w
  7835     08A1  00D2               	movwf	___fldiv@bexp
  7836     08A2                     l2450:
  7837     08A2  1FC0               	btfss	___fldiv@b+2,7
  7838     08A3  28A5               	goto	u3231
  7839     08A4  28A6               	goto	u3230
  7840     08A5                     u3231:
  7841     08A5  28A7               	goto	l2454
  7842     08A6                     u3230:
  7843     08A6                     l2452:
  7844     08A6  1452               	bsf	___fldiv@bexp,0
  7845     08A7                     l2454:
  7846     08A7  0852               	movf	___fldiv@bexp,w
  7847     08A8  1903               	btfsc	3,2
  7848     08A9  28AB               	goto	u3241
  7849     08AA  28AC               	goto	u3240
  7850     08AB                     u3241:
  7851     08AB  28BC               	goto	l2464
  7852     08AC                     u3240:
  7853     08AC                     l2456:
  7854     08AC  0A52               	incf	___fldiv@bexp,w
  7855     08AD  1D03               	btfss	3,2
  7856     08AE  28B0               	goto	u3251
  7857     08AF  28B1               	goto	u3250
  7858     08B0                     u3251:
  7859     08B0  28B9               	goto	l2460
  7860     08B1                     u3250:
  7861     08B1                     l2458:
  7862     08B1  3000               	movlw	0
  7863     08B2  00C1               	movwf	___fldiv@b+3
  7864     08B3  3000               	movlw	0
  7865     08B4  00C0               	movwf	___fldiv@b+2
  7866     08B5  3000               	movlw	0
  7867     08B6  00BF               	movwf	___fldiv@b+1
  7868     08B7  3000               	movlw	0
  7869     08B8  00BE               	movwf	___fldiv@b
  7870     08B9                     l2460:
  7871     08B9  17C0               	bsf	___fldiv@b+2,7
  7872     08BA                     l2462:
  7873     08BA  01C1               	clrf	___fldiv@b+3
  7874     08BB  28C4               	goto	l2466
  7875     08BC                     l2464:
  7876     08BC  3000               	movlw	0
  7877     08BD  00C1               	movwf	___fldiv@b+3
  7878     08BE  3000               	movlw	0
  7879     08BF  00C0               	movwf	___fldiv@b+2
  7880     08C0  3000               	movlw	0
  7881     08C1  00BF               	movwf	___fldiv@b+1
  7882     08C2  3000               	movlw	0
  7883     08C3  00BE               	movwf	___fldiv@b
  7884     08C4                     l2466:
  7885     08C4  083D               	movf	___fldiv@a+3,w
  7886     08C5  3980               	andlw	128
  7887     08C6  06CB               	xorwf	___fldiv@sign,f
  7888     08C7                     l2468:
  7889     08C7  083D               	movf	___fldiv@a+3,w
  7890     08C8  00C2               	movwf	??___fldiv
  7891     08C9  0742               	addwf	??___fldiv,w
  7892     08CA  00D3               	movwf	___fldiv@aexp
  7893     08CB                     l2470:
  7894     08CB  1FBC               	btfss	___fldiv@a+2,7
  7895     08CC  28CE               	goto	u3261
  7896     08CD  28CF               	goto	u3260
  7897     08CE                     u3261:
  7898     08CE  28D0               	goto	l2474
  7899     08CF                     u3260:
  7900     08CF                     l2472:
  7901     08CF  1453               	bsf	___fldiv@aexp,0
  7902     08D0                     l2474:
  7903     08D0  0853               	movf	___fldiv@aexp,w
  7904     08D1  1903               	btfsc	3,2
  7905     08D2  28D4               	goto	u3271
  7906     08D3  28D5               	goto	u3270
  7907     08D4                     u3271:
  7908     08D4  28E5               	goto	l2484
  7909     08D5                     u3270:
  7910     08D5                     l2476:
  7911     08D5  0A53               	incf	___fldiv@aexp,w
  7912     08D6  1D03               	btfss	3,2
  7913     08D7  28D9               	goto	u3281
  7914     08D8  28DA               	goto	u3280
  7915     08D9                     u3281:
  7916     08D9  28E2               	goto	l2480
  7917     08DA                     u3280:
  7918     08DA                     l2478:
  7919     08DA  3000               	movlw	0
  7920     08DB  00BD               	movwf	___fldiv@a+3
  7921     08DC  3000               	movlw	0
  7922     08DD  00BC               	movwf	___fldiv@a+2
  7923     08DE  3000               	movlw	0
  7924     08DF  00BB               	movwf	___fldiv@a+1
  7925     08E0  3000               	movlw	0
  7926     08E1  00BA               	movwf	___fldiv@a
  7927     08E2                     l2480:
  7928     08E2  17BC               	bsf	___fldiv@a+2,7
  7929     08E3                     l2482:
  7930     08E3  01BD               	clrf	___fldiv@a+3
  7931     08E4  28ED               	goto	l602
  7932     08E5                     l2484:
  7933     08E5  3000               	movlw	0
  7934     08E6  00BD               	movwf	___fldiv@a+3
  7935     08E7  3000               	movlw	0
  7936     08E8  00BC               	movwf	___fldiv@a+2
  7937     08E9  3000               	movlw	0
  7938     08EA  00BB               	movwf	___fldiv@a+1
  7939     08EB  3000               	movlw	0
  7940     08EC  00BA               	movwf	___fldiv@a
  7941     08ED                     l602:
  7942     08ED  083D               	movf	___fldiv@a+3,w
  7943     08EE  043C               	iorwf	___fldiv@a+2,w
  7944     08EF  043B               	iorwf	___fldiv@a+1,w
  7945     08F0  043A               	iorwf	___fldiv@a,w
  7946     08F1  1D03               	skipz
  7947     08F2  28F4               	goto	u3291
  7948     08F3  28F5               	goto	u3290
  7949     08F4                     u3291:
  7950     08F4  290C               	goto	l2494
  7951     08F5                     u3290:
  7952     08F5                     l2486:
  7953     08F5  3000               	movlw	0
  7954     08F6  00C1               	movwf	___fldiv@b+3
  7955     08F7  3000               	movlw	0
  7956     08F8  00C0               	movwf	___fldiv@b+2
  7957     08F9  3000               	movlw	0
  7958     08FA  00BF               	movwf	___fldiv@b+1
  7959     08FB  3000               	movlw	0
  7960     08FC  00BE               	movwf	___fldiv@b
  7961     08FD  3080               	movlw	128
  7962     08FE  04C0               	iorwf	___fldiv@b+2,f
  7963     08FF  307F               	movlw	127
  7964     0900  04C1               	iorwf	___fldiv@b+3,f
  7965     0901                     l2488:
  7966     0901  084B               	movf	___fldiv@sign,w
  7967     0902  04C1               	iorwf	___fldiv@b+3,f
  7968     0903                     l2490:
  7969     0903  0841               	movf	___fldiv@b+3,w
  7970     0904  00BD               	movwf	?___fldiv+3
  7971     0905  0840               	movf	___fldiv@b+2,w
  7972     0906  00BC               	movwf	?___fldiv+2
  7973     0907  083F               	movf	___fldiv@b+1,w
  7974     0908  00BB               	movwf	?___fldiv+1
  7975     0909  083E               	movf	___fldiv@b,w
  7976     090A  00BA               	movwf	?___fldiv
  7977     090B  2A61               	goto	l604
  7978     090C                     l2494:
  7979     090C  0852               	movf	___fldiv@bexp,w
  7980     090D  1D03               	btfss	3,2
  7981     090E  2910               	goto	u3301
  7982     090F  2911               	goto	u3300
  7983     0910                     u3301:
  7984     0910  291A               	goto	l2500
  7985     0911                     u3300:
  7986     0911                     l2496:
  7987     0911  3000               	movlw	0
  7988     0912  00BD               	movwf	?___fldiv+3
  7989     0913  3000               	movlw	0
  7990     0914  00BC               	movwf	?___fldiv+2
  7991     0915  3000               	movlw	0
  7992     0916  00BB               	movwf	?___fldiv+1
  7993     0917  3000               	movlw	0
  7994     0918  00BA               	movwf	?___fldiv
  7995     0919  2A61               	goto	l604
  7996     091A                     l2500:
  7997     091A  0852               	movf	___fldiv@bexp,w
  7998     091B  00C2               	movwf	??___fldiv
  7999     091C  01C3               	clrf	??___fldiv+1
  8000     091D  0843               	movf	??___fldiv+1,w
  8001     091E  00C5               	movwf	??___fldiv+3
  8002     091F  0853               	movf	___fldiv@aexp,w
  8003     0920  0242               	subwf	??___fldiv,w
  8004     0921  00C4               	movwf	??___fldiv+2
  8005     0922  1C03               	skipc
  8006     0923  03C5               	decf	??___fldiv+3,f
  8007     0924  0844               	movf	??___fldiv+2,w
  8008     0925  3E7F               	addlw	127
  8009     0926  00CC               	movwf	___fldiv@new_exp
  8010     0927  0845               	movf	??___fldiv+3,w
  8011     0928  1803               	skipnc
  8012     0929  3E01               	addlw	1
  8013     092A  3E00               	addlw	0
  8014     092B  00CD               	movwf	___fldiv@new_exp+1
  8015     092C                     l2502:
  8016     092C  0841               	movf	___fldiv@b+3,w
  8017     092D  00CA               	movwf	___fldiv@rem+3
  8018     092E  0840               	movf	___fldiv@b+2,w
  8019     092F  00C9               	movwf	___fldiv@rem+2
  8020     0930  083F               	movf	___fldiv@b+1,w
  8021     0931  00C8               	movwf	___fldiv@rem+1
  8022     0932  083E               	movf	___fldiv@b,w
  8023     0933  00C7               	movwf	___fldiv@rem
  8024     0934                     l2504:
  8025     0934  3000               	movlw	0
  8026     0935  00C1               	movwf	___fldiv@b+3
  8027     0936  3000               	movlw	0
  8028     0937  00C0               	movwf	___fldiv@b+2
  8029     0938  3000               	movlw	0
  8030     0939  00BF               	movwf	___fldiv@b+1
  8031     093A  3000               	movlw	0
  8032     093B  00BE               	movwf	___fldiv@b
  8033     093C                     l2506:
  8034     093C  3000               	movlw	0
  8035     093D  00D1               	movwf	___fldiv@grs+3
  8036     093E  3000               	movlw	0
  8037     093F  00D0               	movwf	___fldiv@grs+2
  8038     0940  3000               	movlw	0
  8039     0941  00CF               	movwf	___fldiv@grs+1
  8040     0942  3000               	movlw	0
  8041     0943  00CE               	movwf	___fldiv@grs
  8042     0944                     l2508:
  8043     0944  01D3               	clrf	___fldiv@aexp
  8044     0945  298E               	goto	l2528
  8045     0946                     l2510:
  8046     0946  0853               	movf	___fldiv@aexp,w
  8047     0947  1903               	btfsc	3,2
  8048     0948  294A               	goto	u3311
  8049     0949  294B               	goto	u3310
  8050     094A                     u3311:
  8051     094A  296B               	goto	l2520
  8052     094B                     u3310:
  8053     094B                     l2512:
  8054     094B  3001               	movlw	1
  8055     094C  00C2               	movwf	??___fldiv
  8056     094D                     u3325:
  8057     094D  1003               	clrc
  8058     094E  0DC7               	rlf	___fldiv@rem,f
  8059     094F  0DC8               	rlf	___fldiv@rem+1,f
  8060     0950  0DC9               	rlf	___fldiv@rem+2,f
  8061     0951  0DCA               	rlf	___fldiv@rem+3,f
  8062     0952  0BC2               	decfsz	??___fldiv,f
  8063     0953  294D               	goto	u3325
  8064     0954  3001               	movlw	1
  8065     0955  00C2               	movwf	??___fldiv
  8066     0956                     u3335:
  8067     0956  1003               	clrc
  8068     0957  0DBE               	rlf	___fldiv@b,f
  8069     0958  0DBF               	rlf	___fldiv@b+1,f
  8070     0959  0DC0               	rlf	___fldiv@b+2,f
  8071     095A  0DC1               	rlf	___fldiv@b+3,f
  8072     095B  0BC2               	decfsz	??___fldiv,f
  8073     095C  2956               	goto	u3335
  8074     095D                     l2514:
  8075     095D  1FD1               	btfss	___fldiv@grs+3,7
  8076     095E  2960               	goto	u3341
  8077     095F  2961               	goto	u3340
  8078     0960                     u3341:
  8079     0960  2962               	goto	l2518
  8080     0961                     u3340:
  8081     0961                     l2516:
  8082     0961  143E               	bsf	___fldiv@b,0
  8083     0962                     l2518:
  8084     0962  3001               	movlw	1
  8085     0963  00C2               	movwf	??___fldiv
  8086     0964                     u3355:
  8087     0964  1003               	clrc
  8088     0965  0DCE               	rlf	___fldiv@grs,f
  8089     0966  0DCF               	rlf	___fldiv@grs+1,f
  8090     0967  0DD0               	rlf	___fldiv@grs+2,f
  8091     0968  0DD1               	rlf	___fldiv@grs+3,f
  8092     0969  0BC2               	decfsz	??___fldiv,f
  8093     096A  2964               	goto	u3355
  8094     096B                     l2520:
  8095     096B  083D               	movf	___fldiv@a+3,w
  8096     096C  024A               	subwf	___fldiv@rem+3,w
  8097     096D  1D03               	skipz
  8098     096E  2979               	goto	u3365
  8099     096F  083C               	movf	___fldiv@a+2,w
  8100     0970  0249               	subwf	___fldiv@rem+2,w
  8101     0971  1D03               	skipz
  8102     0972  2979               	goto	u3365
  8103     0973  083B               	movf	___fldiv@a+1,w
  8104     0974  0248               	subwf	___fldiv@rem+1,w
  8105     0975  1D03               	skipz
  8106     0976  2979               	goto	u3365
  8107     0977  083A               	movf	___fldiv@a,w
  8108     0978  0247               	subwf	___fldiv@rem,w
  8109     0979                     u3365:
  8110     0979  1C03               	skipc
  8111     097A  297C               	goto	u3361
  8112     097B  297D               	goto	u3360
  8113     097C                     u3361:
  8114     097C  298C               	goto	l2526
  8115     097D                     u3360:
  8116     097D                     l2522:
  8117     097D  1751               	bsf	___fldiv@grs+3,6
  8118     097E                     l2524:
  8119     097E  083A               	movf	___fldiv@a,w
  8120     097F  02C7               	subwf	___fldiv@rem,f
  8121     0980  083B               	movf	___fldiv@a+1,w
  8122     0981  1C03               	skipc
  8123     0982  0F3B               	incfsz	___fldiv@a+1,w
  8124     0983  02C8               	subwf	___fldiv@rem+1,f
  8125     0984  083C               	movf	___fldiv@a+2,w
  8126     0985  1C03               	skipc
  8127     0986  0F3C               	incfsz	___fldiv@a+2,w
  8128     0987  02C9               	subwf	___fldiv@rem+2,f
  8129     0988  083D               	movf	___fldiv@a+3,w
  8130     0989  1C03               	skipc
  8131     098A  0F3D               	incfsz	___fldiv@a+3,w
  8132     098B  02CA               	subwf	___fldiv@rem+3,f
  8133     098C                     l2526:
  8134     098C  3001               	movlw	1
  8135     098D  07D3               	addwf	___fldiv@aexp,f
  8136     098E                     l2528:
  8137     098E  301A               	movlw	26
  8138     098F  0253               	subwf	___fldiv@aexp,w
  8139     0990  1C03               	skipc
  8140     0991  2993               	goto	u3371
  8141     0992  2994               	goto	u3370
  8142     0993                     u3371:
  8143     0993  2946               	goto	l2510
  8144     0994                     u3370:
  8145     0994                     l2530:
  8146     0994  084A               	movf	___fldiv@rem+3,w
  8147     0995  0449               	iorwf	___fldiv@rem+2,w
  8148     0996  0448               	iorwf	___fldiv@rem+1,w
  8149     0997  0447               	iorwf	___fldiv@rem,w
  8150     0998  1903               	skipnz
  8151     0999  299B               	goto	u3381
  8152     099A  299C               	goto	u3380
  8153     099B                     u3381:
  8154     099B  29BB               	goto	l2544
  8155     099C                     u3380:
  8156     099C                     l2532:
  8157     099C  144E               	bsf	___fldiv@grs,0
  8158     099D  29BB               	goto	l2544
  8159     099E                     l2534:
  8160     099E  3001               	movlw	1
  8161     099F  00C2               	movwf	??___fldiv
  8162     09A0                     u3395:
  8163     09A0  1003               	clrc
  8164     09A1  0DBE               	rlf	___fldiv@b,f
  8165     09A2  0DBF               	rlf	___fldiv@b+1,f
  8166     09A3  0DC0               	rlf	___fldiv@b+2,f
  8167     09A4  0DC1               	rlf	___fldiv@b+3,f
  8168     09A5  0BC2               	decfsz	??___fldiv,f
  8169     09A6  29A0               	goto	u3395
  8170     09A7                     l2536:
  8171     09A7  1FD1               	btfss	___fldiv@grs+3,7
  8172     09A8  29AA               	goto	u3401
  8173     09A9  29AB               	goto	u3400
  8174     09AA                     u3401:
  8175     09AA  29AC               	goto	l2540
  8176     09AB                     u3400:
  8177     09AB                     l2538:
  8178     09AB  143E               	bsf	___fldiv@b,0
  8179     09AC                     l2540:
  8180     09AC  3001               	movlw	1
  8181     09AD  00C2               	movwf	??___fldiv
  8182     09AE                     u3415:
  8183     09AE  1003               	clrc
  8184     09AF  0DCE               	rlf	___fldiv@grs,f
  8185     09B0  0DCF               	rlf	___fldiv@grs+1,f
  8186     09B1  0DD0               	rlf	___fldiv@grs+2,f
  8187     09B2  0DD1               	rlf	___fldiv@grs+3,f
  8188     09B3  0BC2               	decfsz	??___fldiv,f
  8189     09B4  29AE               	goto	u3415
  8190     09B5                     l2542:
  8191     09B5  30FF               	movlw	255
  8192     09B6  07CC               	addwf	___fldiv@new_exp,f
  8193     09B7  1803               	skipnc
  8194     09B8  0ACD               	incf	___fldiv@new_exp+1,f
  8195     09B9  30FF               	movlw	255
  8196     09BA  07CD               	addwf	___fldiv@new_exp+1,f
  8197     09BB                     l2544:
  8198     09BB  1FC0               	btfss	___fldiv@b+2,7
  8199     09BC  29BE               	goto	u3421
  8200     09BD  29BF               	goto	u3420
  8201     09BE                     u3421:
  8202     09BE  299E               	goto	l2534
  8203     09BF                     u3420:
  8204     09BF                     l2546:
  8205     09BF  01D3               	clrf	___fldiv@aexp
  8206     09C0                     l2548:
  8207     09C0  1FD1               	btfss	___fldiv@grs+3,7
  8208     09C1  29C3               	goto	u3431
  8209     09C2  29C4               	goto	u3430
  8210     09C3                     u3431:
  8211     09C3  29E0               	goto	l2556
  8212     09C4                     u3430:
  8213     09C4                     l2550:
  8214     09C4  30FF               	movlw	255
  8215     09C5  054E               	andwf	___fldiv@grs,w
  8216     09C6  00C2               	movwf	??___fldiv
  8217     09C7  30FF               	movlw	255
  8218     09C8  054F               	andwf	___fldiv@grs+1,w
  8219     09C9  00C3               	movwf	??___fldiv+1
  8220     09CA  30FF               	movlw	255
  8221     09CB  0550               	andwf	___fldiv@grs+2,w
  8222     09CC  00C4               	movwf	??___fldiv+2
  8223     09CD  307F               	movlw	127
  8224     09CE  0551               	andwf	___fldiv@grs+3,w
  8225     09CF  00C5               	movwf	??___fldiv+3
  8226     09D0  0845               	movf	??___fldiv+3,w
  8227     09D1  0444               	iorwf	??___fldiv+2,w
  8228     09D2  0443               	iorwf	??___fldiv+1,w
  8229     09D3  0442               	iorwf	??___fldiv,w
  8230     09D4  1903               	skipnz
  8231     09D5  29D7               	goto	u3441
  8232     09D6  29D8               	goto	u3440
  8233     09D7                     u3441:
  8234     09D7  29DB               	goto	l618
  8235     09D8                     u3440:
  8236     09D8                     l2552:
  8237     09D8  3001               	movlw	1
  8238     09D9  00D3               	movwf	___fldiv@aexp
  8239     09DA  29E0               	goto	l2556
  8240     09DB                     l618:
  8241     09DB  1C3E               	btfss	___fldiv@b,0
  8242     09DC  29DE               	goto	u3451
  8243     09DD  29DF               	goto	u3450
  8244     09DE                     u3451:
  8245     09DE  29E0               	goto	l2556
  8246     09DF                     u3450:
  8247     09DF  29D8               	goto	l2552
  8248     09E0                     l2556:
  8249     09E0  0853               	movf	___fldiv@aexp,w
  8250     09E1  1903               	btfsc	3,2
  8251     09E2  29E4               	goto	u3461
  8252     09E3  29E5               	goto	u3460
  8253     09E4                     u3461:
  8254     09E4  2A16               	goto	l2566
  8255     09E5                     u3460:
  8256     09E5                     l2558:
  8257     09E5  3001               	movlw	1
  8258     09E6  07BE               	addwf	___fldiv@b,f
  8259     09E7  3000               	movlw	0
  8260     09E8  1803               	skipnc
  8261     09E9  3001               	movlw	1
  8262     09EA  07BF               	addwf	___fldiv@b+1,f
  8263     09EB  3000               	movlw	0
  8264     09EC  1803               	skipnc
  8265     09ED  3001               	movlw	1
  8266     09EE  07C0               	addwf	___fldiv@b+2,f
  8267     09EF  3000               	movlw	0
  8268     09F0  1803               	skipnc
  8269     09F1  3001               	movlw	1
  8270     09F2  07C1               	addwf	___fldiv@b+3,f
  8271     09F3                     l2560:
  8272     09F3  1C41               	btfss	___fldiv@b+3,0
  8273     09F4  29F6               	goto	u3471
  8274     09F5  29F7               	goto	u3470
  8275     09F6                     u3471:
  8276     09F6  2A16               	goto	l2566
  8277     09F7                     u3470:
  8278     09F7                     l2562:
  8279     09F7  083E               	movf	___fldiv@b,w
  8280     09F8  00C2               	movwf	??___fldiv
  8281     09F9  083F               	movf	___fldiv@b+1,w
  8282     09FA  00C3               	movwf	??___fldiv+1
  8283     09FB  0840               	movf	___fldiv@b+2,w
  8284     09FC  00C4               	movwf	??___fldiv+2
  8285     09FD  0841               	movf	___fldiv@b+3,w
  8286     09FE  00C5               	movwf	??___fldiv+3
  8287     09FF  3001               	movlw	1
  8288     0A00  00C6               	movwf	??___fldiv+4
  8289     0A01                     u3485:
  8290     0A01  0D45               	rlf	??___fldiv+3,w
  8291     0A02  0CC5               	rrf	??___fldiv+3,f
  8292     0A03  0CC4               	rrf	??___fldiv+2,f
  8293     0A04  0CC3               	rrf	??___fldiv+1,f
  8294     0A05  0CC2               	rrf	??___fldiv,f
  8295     0A06                     u3480:
  8296     0A06  0BC6               	decfsz	??___fldiv+4,f
  8297     0A07  2A01               	goto	u3485
  8298     0A08  0845               	movf	??___fldiv+3,w
  8299     0A09  00C1               	movwf	___fldiv@b+3
  8300     0A0A  0844               	movf	??___fldiv+2,w
  8301     0A0B  00C0               	movwf	___fldiv@b+2
  8302     0A0C  0843               	movf	??___fldiv+1,w
  8303     0A0D  00BF               	movwf	___fldiv@b+1
  8304     0A0E  0842               	movf	??___fldiv,w
  8305     0A0F  00BE               	movwf	___fldiv@b
  8306     0A10                     l2564:
  8307     0A10  3001               	movlw	1
  8308     0A11  07CC               	addwf	___fldiv@new_exp,f
  8309     0A12  1803               	skipnc
  8310     0A13  0ACD               	incf	___fldiv@new_exp+1,f
  8311     0A14  3000               	movlw	0
  8312     0A15  07CD               	addwf	___fldiv@new_exp+1,f
  8313     0A16                     l2566:
  8314     0A16  084D               	movf	___fldiv@new_exp+1,w
  8315     0A17  3A80               	xorlw	128
  8316     0A18  00FF               	movwf	btemp+1
  8317     0A19  3080               	movlw	128
  8318     0A1A  027F               	subwf	btemp+1,w
  8319     0A1B  1D03               	skipz
  8320     0A1C  2A1F               	goto	u3495
  8321     0A1D  30FF               	movlw	255
  8322     0A1E  024C               	subwf	___fldiv@new_exp,w
  8323     0A1F                     u3495:
  8324     0A1F  1C03               	skipc
  8325     0A20  2A22               	goto	u3491
  8326     0A21  2A23               	goto	u3490
  8327     0A22                     u3491:
  8328     0A22  2A31               	goto	l2570
  8329     0A23                     u3490:
  8330     0A23                     l2568:
  8331     0A23  30FF               	movlw	255
  8332     0A24  1283               	bcf	3,5	;RP0=0, select bank0
  8333     0A25  1303               	bcf	3,6	;RP1=0, select bank0
  8334     0A26  00CC               	movwf	___fldiv@new_exp
  8335     0A27  3000               	movlw	0
  8336     0A28  00CD               	movwf	___fldiv@new_exp+1
  8337     0A29  3000               	movlw	0
  8338     0A2A  00C1               	movwf	___fldiv@b+3
  8339     0A2B  3000               	movlw	0
  8340     0A2C  00C0               	movwf	___fldiv@b+2
  8341     0A2D  3000               	movlw	0
  8342     0A2E  00BF               	movwf	___fldiv@b+1
  8343     0A2F  3000               	movlw	0
  8344     0A30  00BE               	movwf	___fldiv@b
  8345     0A31                     l2570:
  8346     0A31  1283               	bcf	3,5	;RP0=0, select bank0
  8347     0A32  1303               	bcf	3,6	;RP1=0, select bank0
  8348     0A33  084D               	movf	___fldiv@new_exp+1,w
  8349     0A34  3A80               	xorlw	128
  8350     0A35  00FF               	movwf	btemp+1
  8351     0A36  3080               	movlw	128
  8352     0A37  027F               	subwf	btemp+1,w
  8353     0A38  1D03               	skipz
  8354     0A39  2A3C               	goto	u3505
  8355     0A3A  3001               	movlw	1
  8356     0A3B  024C               	subwf	___fldiv@new_exp,w
  8357     0A3C                     u3505:
  8358     0A3C  1803               	skipnc
  8359     0A3D  2A3F               	goto	u3501
  8360     0A3E  2A40               	goto	u3500
  8361     0A3F                     u3501:
  8362     0A3F  2A4D               	goto	l624
  8363     0A40                     u3500:
  8364     0A40                     l2572:
  8365     0A40  1283               	bcf	3,5	;RP0=0, select bank0
  8366     0A41  1303               	bcf	3,6	;RP1=0, select bank0
  8367     0A42  01CC               	clrf	___fldiv@new_exp
  8368     0A43  01CD               	clrf	___fldiv@new_exp+1
  8369     0A44                     l2574:
  8370     0A44  3000               	movlw	0
  8371     0A45  00C1               	movwf	___fldiv@b+3
  8372     0A46  3000               	movlw	0
  8373     0A47  00C0               	movwf	___fldiv@b+2
  8374     0A48  3000               	movlw	0
  8375     0A49  00BF               	movwf	___fldiv@b+1
  8376     0A4A  3000               	movlw	0
  8377     0A4B  00BE               	movwf	___fldiv@b
  8378     0A4C                     l2576:
  8379     0A4C  01CB               	clrf	___fldiv@sign
  8380     0A4D                     l624:
  8381     0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  8382     0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  8383     0A4F  084C               	movf	___fldiv@new_exp,w
  8384     0A50  00D2               	movwf	___fldiv@bexp
  8385     0A51                     l2578:
  8386     0A51  1C52               	btfss	___fldiv@bexp,0
  8387     0A52  2A54               	goto	u3511
  8388     0A53  2A55               	goto	u3510
  8389     0A54                     u3511:
  8390     0A54  2A57               	goto	l2582
  8391     0A55                     u3510:
  8392     0A55                     l2580:
  8393     0A55  17C0               	bsf	___fldiv@b+2,7
  8394     0A56  2A59               	goto	l626
  8395     0A57                     l2582:
  8396     0A57  307F               	movlw	127
  8397     0A58  05C0               	andwf	___fldiv@b+2,f
  8398     0A59                     l626:
  8399     0A59  0852               	movf	___fldiv@bexp,w
  8400     0A5A  00C2               	movwf	??___fldiv
  8401     0A5B  1003               	clrc
  8402     0A5C  0C42               	rrf	??___fldiv,w
  8403     0A5D  00C1               	movwf	___fldiv@b+3
  8404     0A5E  084B               	movf	___fldiv@sign,w
  8405     0A5F  04C1               	iorwf	___fldiv@b+3,f
  8406     0A60  2903               	goto	l2490
  8407     0A61                     l604:
  8408     0A61  0008               	return
  8409     0A62                     __end_of___fldiv:
  8410                           
  8411                           	psect	text33
  8412     132B                     __ptext33:	
  8413 ;; *************** function _MCP3421_GetLong *****************
  8414 ;; Defined at:
  8415 ;;		line 21 in file "MCP3421.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  adc             2    1[COMMON] PTR struct .
  8418 ;;		 -> main@adc(5), 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  result          4    6[COMMON] long 
  8421 ;;  b2              1   11[COMMON] unsigned char 
  8422 ;;  b3              1   10[COMMON] unsigned char 
  8423 ;;  b4              1    5[COMMON] unsigned char 
  8424 ;;  confRead        1    0        unsigned char 
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  4    1[COMMON] long 
  8427 ;; Registers used:
  8428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8434 ;;      Params:         4       0       0       0       0
  8435 ;;      Locals:         7       0       0       0       0
  8436 ;;      Temps:          0      14       0       0       0
  8437 ;;      Totals:        11      14       0       0       0
  8438 ;;Total ram usage:       25 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; Hardware stack levels required when called: 2
  8441 ;; This function calls:
  8442 ;;		_I2C_ACK
  8443 ;;		_I2C_Master_Start
  8444 ;;		_I2C_Master_Stop
  8445 ;;		_I2C_Master_Write
  8446 ;;		_I2C_NACK
  8447 ;;		_I2C_Read_Byte
  8448 ;; This function is called by:
  8449 ;;		_MCP3421_GetDouble
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453     132B                     _MCP3421_GetLong:	
  8454                           ;psect for function _MCP3421_GetLong
  8455                           
  8456     132B                     l3158:	
  8457                           ;incstack = 0
  8458                           ; Regs used in _MCP3421_GetLong: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8459                           
  8460     132B                     l3160:
  8461                           
  8462                           ;MCP3421.c: 25:     I2C_Master_Start();
  8463     132B  160A  158A  2504  160A  118A  	fcall	_I2C_Master_Start
  8464     1330                     l3162:
  8465                           
  8466                           ;MCP3421.c: 26:     I2C_Master_Write((adc->address << 1) | 1);
  8467     1330  1403               	setc
  8468     1331  0871               	movf	MCP3421_GetLong@adc,w
  8469     1332  0084               	movwf	4
  8470     1333  1783               	bsf	3,7
  8471     1334  1C72               	btfss	MCP3421_GetLong@adc+1,0
  8472     1335  1383               	bcf	3,7
  8473     1336  0D00               	rlf	0,w
  8474     1337  160A  158A  2548  160A  118A  	fcall	_I2C_Master_Write
  8475     133C                     l3164:
  8476                           
  8477                           ;MCP3421.c: 28:     if (adc->sr < 3) {
  8478     133C  0871               	movf	MCP3421_GetLong@adc,w
  8479     133D  3E02               	addlw	2
  8480     133E  1283               	bcf	3,5	;RP0=0, select bank0
  8481     133F  1303               	bcf	3,6	;RP1=0, select bank0
  8482     1340  00A0               	movwf	??_MCP3421_GetLong
  8483     1341  0872               	movf	MCP3421_GetLong@adc+1,w
  8484     1342  1803               	skipnc
  8485     1343  3E01               	addlw	1
  8486     1344  3E00               	addlw	0
  8487     1345  00A1               	movwf	??_MCP3421_GetLong+1
  8488     1346  0820               	movf	??_MCP3421_GetLong,w
  8489     1347  0084               	movwf	4
  8490     1348  1783               	bsf	3,7
  8491     1349  1C21               	btfss	??_MCP3421_GetLong+1,0
  8492     134A  1383               	bcf	3,7
  8493     134B  3003               	movlw	3
  8494     134C  0200               	subwf	0,w
  8495     134D  1803               	skipnc
  8496     134E  2B50               	goto	u4601
  8497     134F  2B51               	goto	u4600
  8498     1350                     u4601:
  8499     1350  2B88               	goto	l3170
  8500     1351                     u4600:
  8501     1351                     l3166:
  8502                           
  8503                           ;MCP3421.c: 30:         b2 = I2C_Read_Byte();
  8504     1351  160A  158A  25A3  160A  118A  	fcall	_I2C_Read_Byte
  8505     1356  00FB               	movwf	MCP3421_GetLong@b2
  8506                           
  8507                           ;MCP3421.c: 31:         I2C_ACK();
  8508     1357  160A  158A  2516  160A  118A  	fcall	_I2C_ACK
  8509                           
  8510                           ;MCP3421.c: 32:         b3 = I2C_Read_Byte();
  8511     135C  160A  158A  25A3  160A  118A  	fcall	_I2C_Read_Byte
  8512     1361  00FA               	movwf	MCP3421_GetLong@b3
  8513                           
  8514                           ;MCP3421.c: 33:         I2C_ACK();
  8515     1362  160A  158A  2516  160A  118A  	fcall	_I2C_ACK
  8516     1367  160A  158A  25A3  160A  118A  	fcall	_I2C_Read_Byte
  8517                           
  8518                           ;MCP3421.c: 35:         I2C_NACK();
  8519     136C  160A  158A  2522  160A  118A  	fcall	_I2C_NACK
  8520     1371                     l3168:
  8521                           
  8522                           ;MCP3421.c: 36:         result = (b2 << 8) | b3;
  8523     1371  087A               	movf	MCP3421_GetLong@b3,w
  8524     1372  1283               	bcf	3,5	;RP0=0, select bank0
  8525     1373  1303               	bcf	3,6	;RP1=0, select bank0
  8526     1374  00A0               	movwf	??_MCP3421_GetLong
  8527     1375  01A1               	clrf	??_MCP3421_GetLong+1
  8528     1376  087B               	movf	MCP3421_GetLong@b2,w
  8529     1377  00A2               	movwf	??_MCP3421_GetLong+2
  8530     1378  01A3               	clrf	??_MCP3421_GetLong+3
  8531     1379  0822               	movf	??_MCP3421_GetLong+2,w
  8532     137A  00A3               	movwf	??_MCP3421_GetLong+3
  8533     137B  01A2               	clrf	??_MCP3421_GetLong+2
  8534     137C  0820               	movf	??_MCP3421_GetLong,w
  8535     137D  0422               	iorwf	??_MCP3421_GetLong+2,w
  8536     137E  00F6               	movwf	MCP3421_GetLong@result
  8537     137F  0821               	movf	??_MCP3421_GetLong+1,w
  8538     1380  0423               	iorwf	??_MCP3421_GetLong+3,w
  8539     1381  00F7               	movwf	MCP3421_GetLong@result+1
  8540     1382  01F8               	clrf	MCP3421_GetLong@result+2
  8541     1383  1BF7               	btfsc	MCP3421_GetLong@result+1,7
  8542     1384  03F8               	decf	MCP3421_GetLong@result+2,f
  8543     1385  0878               	movf	MCP3421_GetLong@result+2,w
  8544     1386  00F9               	movwf	MCP3421_GetLong@result+3
  8545                           
  8546                           ;MCP3421.c: 37:         } else {
  8547     1387  2BF7               	goto	l3178
  8548     1388                     l3170:
  8549                           
  8550                           ;MCP3421.c: 39:         b2 = I2C_Read_Byte();
  8551     1388  160A  158A  25A3  160A  118A  	fcall	_I2C_Read_Byte
  8552     138D  00FB               	movwf	MCP3421_GetLong@b2
  8553                           
  8554                           ;MCP3421.c: 40:         I2C_ACK();
  8555     138E  160A  158A  2516  160A  118A  	fcall	_I2C_ACK
  8556                           
  8557                           ;MCP3421.c: 41:         b3 = I2C_Read_Byte();
  8558     1393  160A  158A  25A3  160A  118A  	fcall	_I2C_Read_Byte
  8559     1398  00FA               	movwf	MCP3421_GetLong@b3
  8560                           
  8561                           ;MCP3421.c: 42:         I2C_ACK();
  8562     1399  160A  158A  2516  160A  118A  	fcall	_I2C_ACK
  8563                           
  8564                           ;MCP3421.c: 43:         b4 = I2C_Read_Byte();
  8565     139E  160A  158A  25A3  160A  118A  	fcall	_I2C_Read_Byte
  8566     13A3  00F5               	movwf	MCP3421_GetLong@b4
  8567                           
  8568                           ;MCP3421.c: 44:         I2C_ACK();
  8569     13A4  160A  158A  2516  160A  118A  	fcall	_I2C_ACK
  8570     13A9  160A  158A  25A3  160A  118A  	fcall	_I2C_Read_Byte
  8571                           
  8572                           ;MCP3421.c: 46:         I2C_NACK();
  8573     13AE  160A  158A  2522  160A  118A  	fcall	_I2C_NACK
  8574     13B3                     l3172:
  8575                           
  8576                           ;MCP3421.c: 47:         result = ((long)b2 << 16) | (b3 << 8) | b4;
  8577     13B3  0875               	movf	MCP3421_GetLong@b4,w
  8578     13B4  1283               	bcf	3,5	;RP0=0, select bank0
  8579     13B5  1303               	bcf	3,6	;RP1=0, select bank0
  8580     13B6  00A0               	movwf	??_MCP3421_GetLong
  8581     13B7  01A1               	clrf	??_MCP3421_GetLong+1
  8582     13B8  01A2               	clrf	??_MCP3421_GetLong+2
  8583     13B9  01A3               	clrf	??_MCP3421_GetLong+3
  8584     13BA  087A               	movf	MCP3421_GetLong@b3,w
  8585     13BB  00A4               	movwf	??_MCP3421_GetLong+4
  8586     13BC  01A5               	clrf	??_MCP3421_GetLong+5
  8587     13BD  0824               	movf	??_MCP3421_GetLong+4,w
  8588     13BE  00A5               	movwf	??_MCP3421_GetLong+5
  8589     13BF  01A4               	clrf	??_MCP3421_GetLong+4
  8590     13C0  0824               	movf	??_MCP3421_GetLong+4,w
  8591     13C1  00A6               	movwf	??_MCP3421_GetLong+6
  8592     13C2  0825               	movf	??_MCP3421_GetLong+5,w
  8593     13C3  00A7               	movwf	??_MCP3421_GetLong+7
  8594     13C4  3000               	movlw	0
  8595     13C5  1BA7               	btfsc	??_MCP3421_GetLong+7,7
  8596     13C6  30FF               	movlw	255
  8597     13C7  00A8               	movwf	??_MCP3421_GetLong+8
  8598     13C8  00A9               	movwf	??_MCP3421_GetLong+9
  8599     13C9  087B               	movf	MCP3421_GetLong@b2,w
  8600     13CA  00AA               	movwf	??_MCP3421_GetLong+10
  8601     13CB  01AB               	clrf	??_MCP3421_GetLong+11
  8602     13CC  01AC               	clrf	??_MCP3421_GetLong+12
  8603     13CD  01AD               	clrf	??_MCP3421_GetLong+13
  8604     13CE  3010               	movlw	16
  8605     13CF                     u4615:
  8606     13CF  1003               	clrc
  8607     13D0  0DAA               	rlf	??_MCP3421_GetLong+10,f
  8608     13D1  0DAB               	rlf	??_MCP3421_GetLong+11,f
  8609     13D2  0DAC               	rlf	??_MCP3421_GetLong+12,f
  8610     13D3  0DAD               	rlf	??_MCP3421_GetLong+13,f
  8611     13D4                     u4610:
  8612     13D4  3EFF               	addlw	-1
  8613     13D5  1D03               	skipz
  8614     13D6  2BCF               	goto	u4615
  8615     13D7  082A               	movf	??_MCP3421_GetLong+10,w
  8616     13D8  04A6               	iorwf	??_MCP3421_GetLong+6,f
  8617     13D9  082B               	movf	??_MCP3421_GetLong+11,w
  8618     13DA  04A7               	iorwf	??_MCP3421_GetLong+7,f
  8619     13DB  082C               	movf	??_MCP3421_GetLong+12,w
  8620     13DC  04A8               	iorwf	??_MCP3421_GetLong+8,f
  8621     13DD  082D               	movf	??_MCP3421_GetLong+13,w
  8622     13DE  04A9               	iorwf	??_MCP3421_GetLong+9,f
  8623     13DF  0820               	movf	??_MCP3421_GetLong,w
  8624     13E0  0426               	iorwf	??_MCP3421_GetLong+6,w
  8625     13E1  00F6               	movwf	MCP3421_GetLong@result
  8626     13E2  0821               	movf	??_MCP3421_GetLong+1,w
  8627     13E3  0427               	iorwf	??_MCP3421_GetLong+7,w
  8628     13E4  00F7               	movwf	MCP3421_GetLong@result+1
  8629     13E5  0822               	movf	??_MCP3421_GetLong+2,w
  8630     13E6  0428               	iorwf	??_MCP3421_GetLong+8,w
  8631     13E7  00F8               	movwf	MCP3421_GetLong@result+2
  8632     13E8  0823               	movf	??_MCP3421_GetLong+3,w
  8633     13E9  0429               	iorwf	??_MCP3421_GetLong+9,w
  8634     13EA  00F9               	movwf	MCP3421_GetLong@result+3
  8635     13EB                     l3174:
  8636                           
  8637                           ;MCP3421.c: 48:         if (b2 & 0x10) result |= 0xFF000000;
  8638     13EB  1E7B               	btfss	MCP3421_GetLong@b2,4
  8639     13EC  2BEE               	goto	u4621
  8640     13ED  2BEF               	goto	u4620
  8641     13EE                     u4621:
  8642     13EE  2BF7               	goto	l3178
  8643     13EF                     u4620:
  8644     13EF                     l3176:
  8645     13EF  3000               	movlw	0
  8646     13F0  04F6               	iorwf	MCP3421_GetLong@result,f
  8647     13F1  3000               	movlw	0
  8648     13F2  04F7               	iorwf	MCP3421_GetLong@result+1,f
  8649     13F3  3000               	movlw	0
  8650     13F4  04F8               	iorwf	MCP3421_GetLong@result+2,f
  8651     13F5  30FF               	movlw	255
  8652     13F6  04F9               	iorwf	MCP3421_GetLong@result+3,f
  8653     13F7                     l3178:
  8654                           
  8655                           ;MCP3421.c: 51:     I2C_Master_Stop();
  8656     13F7  160A  158A  250D  160A  118A  	fcall	_I2C_Master_Stop
  8657     13FC                     l3180:
  8658                           
  8659                           ;MCP3421.c: 52:     return result;
  8660     13FC  0879               	movf	MCP3421_GetLong@result+3,w
  8661     13FD  00F4               	movwf	?_MCP3421_GetLong+3
  8662     13FE  0878               	movf	MCP3421_GetLong@result+2,w
  8663     13FF  00F3               	movwf	?_MCP3421_GetLong+2
  8664     1400  0877               	movf	MCP3421_GetLong@result+1,w
  8665     1401  00F2               	movwf	?_MCP3421_GetLong+1
  8666     1402  0876               	movf	MCP3421_GetLong@result,w
  8667     1403  00F1               	movwf	?_MCP3421_GetLong
  8668     1404                     l153:
  8669     1404  0008               	return
  8670     1405                     __end_of_MCP3421_GetLong:
  8671                           
  8672                           	psect	text34
  8673     1DA3                     __ptext34:	
  8674 ;; *************** function _I2C_Read_Byte *****************
  8675 ;; Defined at:
  8676 ;;		line 53 in file "i2c.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      unsigned char 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0, pclath, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8690 ;;      Params:         0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0
  8693 ;;      Totals:         0       0       0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 1
  8697 ;; This function calls:
  8698 ;;		_I2C_Master_Wait
  8699 ;; This function is called by:
  8700 ;;		_MCP3421_GetLong
  8701 ;;		_MCP3421_Ready
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705     1DA3                     _I2C_Read_Byte:	
  8706                           ;psect for function _I2C_Read_Byte
  8707                           
  8708     1DA3                     l3076:	
  8709                           ;incstack = 0
  8710                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  8711                           
  8712                           
  8713                           ;i2c.c: 54:     I2C_Master_Wait();
  8714     1DA3  160A  158A  253B  160A  158A  	fcall	_I2C_Master_Wait
  8715     1DA8                     l3078:
  8716                           
  8717                           ;i2c.c: 55:     RCEN = 1;
  8718     1DA8  1683               	bsf	3,5	;RP0=1, select bank1
  8719     1DA9  1303               	bcf	3,6	;RP1=0, select bank1
  8720     1DAA  1591               	bsf	17,3	;volatile
  8721     1DAB                     l90:	
  8722                           ;i2c.c: 56:     while (!SSPIF);
  8723                           
  8724     1DAB  1283               	bcf	3,5	;RP0=0, select bank0
  8725     1DAC  1D8C               	btfss	12,3	;volatile
  8726     1DAD  2DAF               	goto	u4541
  8727     1DAE  2DB0               	goto	u4540
  8728     1DAF                     u4541:
  8729     1DAF  2DAB               	goto	l90
  8730     1DB0                     u4540:
  8731     1DB0                     l92:
  8732                           
  8733                           ;i2c.c: 57:     SSPIF = 0;
  8734     1DB0  118C               	bcf	12,3	;volatile
  8735     1DB1                     l3080:
  8736                           
  8737                           ;i2c.c: 58:     I2C_Master_Wait();
  8738     1DB1  160A  158A  253B  160A  158A  	fcall	_I2C_Master_Wait
  8739     1DB6                     l3082:
  8740                           
  8741                           ;i2c.c: 60:     if (!BF) return 0;
  8742     1DB6  1683               	bsf	3,5	;RP0=1, select bank1
  8743     1DB7  1303               	bcf	3,6	;RP1=0, select bank1
  8744     1DB8  1814               	btfsc	20,0	;volatile
  8745     1DB9  2DBB               	goto	u4551
  8746     1DBA  2DBC               	goto	u4550
  8747     1DBB                     u4551:
  8748     1DBB  2DBE               	goto	l3088
  8749     1DBC                     u4550:
  8750     1DBC                     l3084:
  8751     1DBC  3000               	movlw	0
  8752     1DBD  2DC1               	goto	l94
  8753     1DBE                     l3088:
  8754                           
  8755                           ;i2c.c: 61:     return SSPBUF;
  8756     1DBE  1283               	bcf	3,5	;RP0=0, select bank0
  8757     1DBF  1303               	bcf	3,6	;RP1=0, select bank0
  8758     1DC0  0813               	movf	19,w	;volatile
  8759     1DC1                     l94:
  8760     1DC1  0008               	return
  8761     1DC2                     __end_of_I2C_Read_Byte:
  8762                           
  8763                           	psect	text35
  8764     1D22                     __ptext35:	
  8765 ;; *************** function _I2C_NACK *****************
  8766 ;; Defined at:
  8767 ;;		line 39 in file "i2c.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;		None
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      void 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, pclath, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8781 ;;      Params:         0       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0
  8784 ;;      Totals:         0       0       0       0       0
  8785 ;;Total ram usage:        0 bytes
  8786 ;; Hardware stack levels used: 1
  8787 ;; Hardware stack levels required when called: 1
  8788 ;; This function calls:
  8789 ;;		_I2C_Master_Wait
  8790 ;; This function is called by:
  8791 ;;		_MCP3421_GetLong
  8792 ;;		_MCP3421_Ready
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796     1D22                     _I2C_NACK:	
  8797                           ;psect for function _I2C_NACK
  8798                           
  8799     1D22                     l3066:	
  8800                           ;incstack = 0
  8801                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  8802                           
  8803                           
  8804                           ;i2c.c: 40:     ACKDT = 1;
  8805     1D22  1683               	bsf	3,5	;RP0=1, select bank1
  8806     1D23  1303               	bcf	3,6	;RP1=0, select bank1
  8807     1D24  1691               	bsf	17,5	;volatile
  8808     1D25                     l3068:
  8809                           
  8810                           ;i2c.c: 41:     I2C_Master_Wait();
  8811     1D25  160A  158A  253B  160A  158A  	fcall	_I2C_Master_Wait
  8812     1D2A                     l3070:
  8813                           
  8814                           ;i2c.c: 42:     ACKEN = 1;
  8815     1D2A  1683               	bsf	3,5	;RP0=1, select bank1
  8816     1D2B  1303               	bcf	3,6	;RP1=0, select bank1
  8817     1D2C  1611               	bsf	17,4	;volatile
  8818     1D2D                     l81:
  8819     1D2D  0008               	return
  8820     1D2E                     __end_of_I2C_NACK:
  8821                           
  8822                           	psect	text36
  8823     1D48                     __ptext36:	
  8824 ;; *************** function _I2C_Master_Write *****************
  8825 ;; Defined at:
  8826 ;;		line 45 in file "i2c.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  data            1    wreg     unsigned char 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  data            1    0[COMMON] unsigned char 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1    wreg      unsigned char 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0, pclath, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8840 ;;      Params:         0       0       0       0       0
  8841 ;;      Locals:         1       0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0
  8843 ;;      Totals:         1       0       0       0       0
  8844 ;;Total ram usage:        1 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 1
  8847 ;; This function calls:
  8848 ;;		_I2C_Master_Wait
  8849 ;; This function is called by:
  8850 ;;		_MCP3421_Init
  8851 ;;		_MCP3421_GetLong
  8852 ;;		_MCP3421_Ready
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856     1D48                     _I2C_Master_Write:	
  8857                           ;psect for function _I2C_Master_Write
  8858                           
  8859                           
  8860                           ;incstack = 0
  8861                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8862                           ;I2C_Master_Write@data stored from wreg
  8863     1D48  00F0               	movwf	I2C_Master_Write@data
  8864     1D49                     l3072:
  8865                           
  8866                           ;i2c.c: 46:     I2C_Master_Wait();
  8867     1D49  160A  158A  253B  160A  158A  	fcall	_I2C_Master_Wait
  8868     1D4E                     l3074:
  8869                           
  8870                           ;i2c.c: 47:     SSPBUF = data;
  8871     1D4E  0870               	movf	I2C_Master_Write@data,w
  8872     1D4F  1283               	bcf	3,5	;RP0=0, select bank0
  8873     1D50  1303               	bcf	3,6	;RP1=0, select bank0
  8874     1D51  0093               	movwf	19	;volatile
  8875     1D52                     l84:	
  8876                           ;i2c.c: 48:     while(!SSPIF);
  8877                           
  8878     1D52  1D8C               	btfss	12,3	;volatile
  8879     1D53  2D55               	goto	u4531
  8880     1D54  2D56               	goto	u4530
  8881     1D55                     u4531:
  8882     1D55  2D52               	goto	l84
  8883     1D56                     u4530:
  8884     1D56                     l86:
  8885                           
  8886                           ;i2c.c: 49:     SSPIF = 0;
  8887     1D56  118C               	bcf	12,3	;volatile
  8888     1D57                     l87:	
  8889                           ;i2c.c: 50:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  8890                           
  8891     1D57  0008               	return
  8892     1D58                     __end_of_I2C_Master_Write:
  8893                           
  8894                           	psect	text37
  8895     1D0D                     __ptext37:	
  8896 ;; *************** function _I2C_Master_Stop *****************
  8897 ;; Defined at:
  8898 ;;		line 28 in file "i2c.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0, pclath, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8912 ;;      Params:         0       0       0       0       0
  8913 ;;      Locals:         0       0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0
  8915 ;;      Totals:         0       0       0       0       0
  8916 ;;Total ram usage:        0 bytes
  8917 ;; Hardware stack levels used: 1
  8918 ;; Hardware stack levels required when called: 1
  8919 ;; This function calls:
  8920 ;;		_I2C_Master_Wait
  8921 ;; This function is called by:
  8922 ;;		_MCP3421_Init
  8923 ;;		_MCP3421_GetLong
  8924 ;;		_MCP3421_Ready
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928     1D0D                     _I2C_Master_Stop:	
  8929                           ;psect for function _I2C_Master_Stop
  8930                           
  8931     1D0D                     l3056:	
  8932                           ;incstack = 0
  8933                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8934                           
  8935                           
  8936                           ;i2c.c: 29:     I2C_Master_Wait();
  8937     1D0D  160A  158A  253B  160A  158A  	fcall	_I2C_Master_Wait
  8938     1D12                     l3058:
  8939                           
  8940                           ;i2c.c: 30:     PEN = 1;
  8941     1D12  1683               	bsf	3,5	;RP0=1, select bank1
  8942     1D13  1303               	bcf	3,6	;RP1=0, select bank1
  8943     1D14  1511               	bsf	17,2	;volatile
  8944     1D15                     l75:
  8945     1D15  0008               	return
  8946     1D16                     __end_of_I2C_Master_Stop:
  8947                           
  8948                           	psect	text38
  8949     1D04                     __ptext38:	
  8950 ;; *************** function _I2C_Master_Start *****************
  8951 ;; Defined at:
  8952 ;;		line 18 in file "i2c.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;		None
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0, pclath, cstack
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8966 ;;      Params:         0       0       0       0       0
  8967 ;;      Locals:         0       0       0       0       0
  8968 ;;      Temps:          0       0       0       0       0
  8969 ;;      Totals:         0       0       0       0       0
  8970 ;;Total ram usage:        0 bytes
  8971 ;; Hardware stack levels used: 1
  8972 ;; Hardware stack levels required when called: 1
  8973 ;; This function calls:
  8974 ;;		_I2C_Master_Wait
  8975 ;; This function is called by:
  8976 ;;		_MCP3421_Init
  8977 ;;		_MCP3421_GetLong
  8978 ;;		_MCP3421_Ready
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982     1D04                     _I2C_Master_Start:	
  8983                           ;psect for function _I2C_Master_Start
  8984                           
  8985     1D04                     l3052:	
  8986                           ;incstack = 0
  8987                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8988                           
  8989                           
  8990                           ;i2c.c: 19:     I2C_Master_Wait();
  8991     1D04  160A  158A  253B  160A  158A  	fcall	_I2C_Master_Wait
  8992     1D09                     l3054:
  8993                           
  8994                           ;i2c.c: 20:     SEN = 1;
  8995     1D09  1683               	bsf	3,5	;RP0=1, select bank1
  8996     1D0A  1303               	bcf	3,6	;RP1=0, select bank1
  8997     1D0B  1411               	bsf	17,0	;volatile
  8998     1D0C                     l69:
  8999     1D0C  0008               	return
  9000     1D0D                     __end_of_I2C_Master_Start:
  9001                           
  9002                           	psect	text39
  9003     1D16                     __ptext39:	
  9004 ;; *************** function _I2C_ACK *****************
  9005 ;; Defined at:
  9006 ;;		line 33 in file "i2c.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2, status,0, pclath, cstack
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9020 ;;      Params:         0       0       0       0       0
  9021 ;;      Locals:         0       0       0       0       0
  9022 ;;      Temps:          0       0       0       0       0
  9023 ;;      Totals:         0       0       0       0       0
  9024 ;;Total ram usage:        0 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 1
  9027 ;; This function calls:
  9028 ;;		_I2C_Master_Wait
  9029 ;; This function is called by:
  9030 ;;		_MCP3421_GetLong
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034     1D16                     _I2C_ACK:	
  9035                           ;psect for function _I2C_ACK
  9036                           
  9037     1D16                     l3060:	
  9038                           ;incstack = 0
  9039                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  9040                           
  9041                           
  9042                           ;i2c.c: 34:     ACKDT = 0;
  9043     1D16  1683               	bsf	3,5	;RP0=1, select bank1
  9044     1D17  1303               	bcf	3,6	;RP1=0, select bank1
  9045     1D18  1291               	bcf	17,5	;volatile
  9046     1D19                     l3062:
  9047                           
  9048                           ;i2c.c: 35:     I2C_Master_Wait();
  9049     1D19  160A  158A  253B  160A  158A  	fcall	_I2C_Master_Wait
  9050     1D1E                     l3064:
  9051                           
  9052                           ;i2c.c: 36:     ACKEN = 1;
  9053     1D1E  1683               	bsf	3,5	;RP0=1, select bank1
  9054     1D1F  1303               	bcf	3,6	;RP1=0, select bank1
  9055     1D20  1611               	bsf	17,4	;volatile
  9056     1D21                     l78:
  9057     1D21  0008               	return
  9058     1D22                     __end_of_I2C_ACK:
  9059                           
  9060                           	psect	text40
  9061     1D3B                     __ptext40:	
  9062 ;; *************** function _I2C_Master_Wait *****************
  9063 ;; Defined at:
  9064 ;;		line 14 in file "i2c.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;		None
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9078 ;;      Params:         0       0       0       0       0
  9079 ;;      Locals:         0       0       0       0       0
  9080 ;;      Temps:          0       0       0       0       0
  9081 ;;      Totals:         0       0       0       0       0
  9082 ;;Total ram usage:        0 bytes
  9083 ;; Hardware stack levels used: 1
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_I2C_Master_Start
  9088 ;;		_I2C_Master_Stop
  9089 ;;		_I2C_ACK
  9090 ;;		_I2C_NACK
  9091 ;;		_I2C_Master_Write
  9092 ;;		_I2C_Read_Byte
  9093 ;;		_I2C_Master_RepeatedStart
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097     1D3B                     _I2C_Master_Wait:	
  9098                           ;psect for function _I2C_Master_Wait
  9099                           
  9100     1D3B                     l2816:	
  9101                           ;incstack = 0
  9102                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9103                           
  9104     1D3B                     l63:	
  9105                           ;i2c.c: 15:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9106                           
  9107     1D3B  1683               	bsf	3,5	;RP0=1, select bank1
  9108     1D3C  1303               	bcf	3,6	;RP1=0, select bank1
  9109     1D3D  1914               	btfsc	20,2	;volatile
  9110     1D3E  2D40               	goto	u4141
  9111     1D3F  2D41               	goto	u4140
  9112     1D40                     u4141:
  9113     1D40  2D3B               	goto	l63
  9114     1D41                     u4140:
  9115     1D41                     l2818:
  9116     1D41  0811               	movf	17,w	;volatile
  9117     1D42  391F               	andlw	31
  9118     1D43  1D03               	btfss	3,2
  9119     1D44  2D46               	goto	u4151
  9120     1D45  2D47               	goto	u4150
  9121     1D46                     u4151:
  9122     1D46  2D3B               	goto	l63
  9123     1D47                     u4150:
  9124     1D47                     l66:
  9125     1D47  0008               	return
  9126     1D48                     __end_of_I2C_Master_Wait:
  9127                           
  9128                           	psect	text41
  9129     1D2E                     __ptext41:	
  9130 ;; *************** function _I2C_Master_Init *****************
  9131 ;; Defined at:
  9132 ;;		line 5 in file "i2c.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;		None
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		status,2
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9146 ;;      Params:         0       0       0       0       0
  9147 ;;      Locals:         0       0       0       0       0
  9148 ;;      Temps:          0       0       0       0       0
  9149 ;;      Totals:         0       0       0       0       0
  9150 ;;Total ram usage:        0 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_main
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159     1D2E                     _I2C_Master_Init:	
  9160                           ;psect for function _I2C_Master_Init
  9161                           
  9162     1D2E                     l3238:	
  9163                           ;incstack = 0
  9164                           ; Regs used in _I2C_Master_Init: [status,2]
  9165                           
  9166                           
  9167                           ;i2c.c: 6:     SSPCON = 0x28;
  9168     1D2E  3028               	movlw	40
  9169     1D2F  1283               	bcf	3,5	;RP0=0, select bank0
  9170     1D30  1303               	bcf	3,6	;RP1=0, select bank0
  9171     1D31  0094               	movwf	20	;volatile
  9172     1D32                     l3240:
  9173                           
  9174                           ;i2c.c: 7:     SSPCON2 = 0x00;
  9175     1D32  1683               	bsf	3,5	;RP0=1, select bank1
  9176     1D33  1303               	bcf	3,6	;RP1=0, select bank1
  9177     1D34  0191               	clrf	17	;volatile
  9178                           
  9179                           ;i2c.c: 8:     SSPSTAT = 0x00;
  9180     1D35  0194               	clrf	20	;volatile
  9181     1D36                     l3242:
  9182                           
  9183                           ;i2c.c: 9:     SSPADD = ((16000000/4)/100000) - 1;
  9184     1D36  3027               	movlw	39
  9185     1D37  0093               	movwf	19	;volatile
  9186     1D38                     l3244:
  9187                           
  9188                           ;i2c.c: 10:     TRISC3 = 1;
  9189     1D38  1587               	bsf	7,3	;volatile
  9190     1D39                     l3246:
  9191                           
  9192                           ;i2c.c: 11:     TRISC4 = 1;
  9193     1D39  1607               	bsf	7,4	;volatile
  9194     1D3A                     l60:
  9195     1D3A  0008               	return
  9196     1D3B                     __end_of_I2C_Master_Init:
  9197     0002                     ___latbits      equ	2
  9198     007E                     btemp           set	126	;btemp
  9199     007E                     wtemp0          set	126
  9200                           
  9201                           	psect	config
  9202                           
  9203                           ;Config register CONFIG @ 0x2007
  9204                           ;	Oscillator Selection bits
  9205                           ;	FOSC = XT, XT oscillator
  9206                           ;	Watchdog Timer Enable bit
  9207                           ;	WDTE = OFF, WDT disabled
  9208                           ;	Power-up Timer Enable bit
  9209                           ;	PWRTE = OFF, PWRT disabled
  9210                           ;	Brown-out Reset Enable bit
  9211                           ;	BOREN = ON, BOR enabled
  9212                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9213                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9214                           ;	Data EEPROM Memory Code Protection bit
  9215                           ;	CPD = OFF, Data EEPROM code protection off
  9216                           ;	Flash Program Memory Write Enable bits
  9217                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9218                           ;	In-Circuit Debugger Mode bit
  9219                           ;	DEBUG = 0x1, unprogrammed default
  9220                           ;	Flash Program Memory Code Protection bit
  9221                           ;	CP = OFF, Code protection off
  9222     2007                     	org	8199
  9223     2007  3F79               	dw	16249
  9224                           
  9225                           	psect	text6_split_1
  9226     00CB                     l2870:
  9227                           
  9228                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  9229     00CB  303F               	movlw	63
  9230     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  9231     00CD  1303               	bcf	3,6	;RP1=0, select bank1
  9232     00CE  00CF               	movwf	(efgtoa@u+3)^(0+128)
  9233     00CF  3080               	movlw	128
  9234     00D0  00CE               	movwf	(efgtoa@u+2)^(0+128)
  9235     00D1  3000               	movlw	0
  9236     00D2  00CD               	movwf	(efgtoa@u+1)^(0+128)
  9237     00D3  3000               	movlw	0
  9238     00D4  00CC               	movwf	efgtoa@u^(0+128)
  9239     00D5                     l2872:
  9240                           
  9241                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9242     00D5  01B3               	clrf	efgtoa@e^(0+128)
  9243     00D6  01B4               	clrf	(efgtoa@e+1)^(0+128)
  9244     00D7                     l2874:
  9245                           
  9246                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  9247     00D7  084B               	movf	(efgtoa@g+3)^(0+128),w
  9248     00D8  00F3               	movwf	___fleq@ff1+3
  9249     00D9  084A               	movf	(efgtoa@g+2)^(0+128),w
  9250     00DA  00F2               	movwf	___fleq@ff1+2
  9251     00DB  0849               	movf	(efgtoa@g+1)^(0+128),w
  9252     00DC  00F1               	movwf	___fleq@ff1+1
  9253     00DD  0848               	movf	efgtoa@g^(0+128),w
  9254     00DE  00F0               	movwf	___fleq@ff1
  9255     00DF  3000               	movlw	0
  9256     00E0  00F7               	movwf	___fleq@ff2+3
  9257     00E1  3000               	movlw	0
  9258     00E2  00F6               	movwf	___fleq@ff2+2
  9259     00E3  3000               	movlw	0
  9260     00E4  00F5               	movwf	___fleq@ff2+1
  9261     00E5  3000               	movlw	0
  9262     00E6  00F4               	movwf	___fleq@ff2
  9263     00E7  160A  158A  273E  120A  118A  	fcall	___fleq
  9264     00EC  1803               	btfsc	3,0
  9265     00ED  28EF               	goto	u4231
  9266     00EE  28F0               	goto	u4230
  9267     00EF                     u4231:
  9268     00EF  2AB9               	goto	l2900
  9269     00F0                     u4230:
  9270     00F0  2901               	goto	l2880
  9271     00F1                     l2878:
  9272                           
  9273                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9274     00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9275     00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9276     00F3  083A               	movf	(efgtoa@ou+3)^(0+128),w
  9277     00F4  00CF               	movwf	(efgtoa@u+3)^(0+128)
  9278     00F5  0839               	movf	(efgtoa@ou+2)^(0+128),w
  9279     00F6  00CE               	movwf	(efgtoa@u+2)^(0+128)
  9280     00F7  0838               	movf	(efgtoa@ou+1)^(0+128),w
  9281     00F8  00CD               	movwf	(efgtoa@u+1)^(0+128)
  9282     00F9  0837               	movf	efgtoa@ou^(0+128),w
  9283     00FA  00CC               	movwf	efgtoa@u^(0+128)
  9284                           
  9285                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9286     00FB  3001               	movlw	1
  9287     00FC  07B3               	addwf	efgtoa@e^(0+128),f
  9288     00FD  1803               	skipnc
  9289     00FE  0AB4               	incf	(efgtoa@e+1)^(0+128),f
  9290     00FF  3000               	movlw	0
  9291     0100  07B4               	addwf	(efgtoa@e+1)^(0+128),f
  9292     0101                     l2880:
  9293                           
  9294                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9295     0101  3041               	movlw	65
  9296     0102  1283               	bcf	3,5	;RP0=0, select bank0
  9297     0103  1303               	bcf	3,6	;RP1=0, select bank0
  9298     0104  00A3               	movwf	___flmul@b+3
  9299     0105  3020               	movlw	32
  9300     0106  00A2               	movwf	___flmul@b+2
  9301     0107  3000               	movlw	0
  9302     0108  00A1               	movwf	___flmul@b+1
  9303     0109  3000               	movlw	0
  9304     010A  00A0               	movwf	___flmul@b
  9305     010B  1683               	bsf	3,5	;RP0=1, select bank1
  9306     010C  1303               	bcf	3,6	;RP1=0, select bank1
  9307     010D  084F               	movf	(efgtoa@u+3)^(0+128),w
  9308     010E  1283               	bcf	3,5	;RP0=0, select bank0
  9309     010F  1303               	bcf	3,6	;RP1=0, select bank0
  9310     0110  00A7               	movwf	___flmul@a+3
  9311     0111  1683               	bsf	3,5	;RP0=1, select bank1
  9312     0112  1303               	bcf	3,6	;RP1=0, select bank1
  9313     0113  084E               	movf	(efgtoa@u+2)^(0+128),w
  9314     0114  1283               	bcf	3,5	;RP0=0, select bank0
  9315     0115  1303               	bcf	3,6	;RP1=0, select bank0
  9316     0116  00A6               	movwf	___flmul@a+2
  9317     0117  1683               	bsf	3,5	;RP0=1, select bank1
  9318     0118  1303               	bcf	3,6	;RP1=0, select bank1
  9319     0119  084D               	movf	(efgtoa@u+1)^(0+128),w
  9320     011A  1283               	bcf	3,5	;RP0=0, select bank0
  9321     011B  1303               	bcf	3,6	;RP1=0, select bank0
  9322     011C  00A5               	movwf	___flmul@a+1
  9323     011D  1683               	bsf	3,5	;RP0=1, select bank1
  9324     011E  1303               	bcf	3,6	;RP1=0, select bank1
  9325     011F  084C               	movf	efgtoa@u^(0+128),w
  9326     0120  1283               	bcf	3,5	;RP0=0, select bank0
  9327     0121  1303               	bcf	3,6	;RP1=0, select bank0
  9328     0122  00A4               	movwf	___flmul@a
  9329     0123  120A  158A  24BE  120A  118A  	fcall	___flmul
  9330     0128  1283               	bcf	3,5	;RP0=0, select bank0
  9331     0129  1303               	bcf	3,6	;RP1=0, select bank0
  9332     012A  0823               	movf	?___flmul+3,w
  9333     012B  1683               	bsf	3,5	;RP0=1, select bank1
  9334     012C  1303               	bcf	3,6	;RP1=0, select bank1
  9335     012D  00BA               	movwf	(efgtoa@ou+3)^(0+128)
  9336     012E  1283               	bcf	3,5	;RP0=0, select bank0
  9337     012F  1303               	bcf	3,6	;RP1=0, select bank0
  9338     0130  0822               	movf	?___flmul+2,w
  9339     0131  1683               	bsf	3,5	;RP0=1, select bank1
  9340     0132  1303               	bcf	3,6	;RP1=0, select bank1
  9341     0133  00B9               	movwf	(efgtoa@ou+2)^(0+128)
  9342     0134  1283               	bcf	3,5	;RP0=0, select bank0
  9343     0135  1303               	bcf	3,6	;RP1=0, select bank0
  9344     0136  0821               	movf	?___flmul+1,w
  9345     0137  1683               	bsf	3,5	;RP0=1, select bank1
  9346     0138  1303               	bcf	3,6	;RP1=0, select bank1
  9347     0139  00B8               	movwf	(efgtoa@ou+1)^(0+128)
  9348     013A  1283               	bcf	3,5	;RP0=0, select bank0
  9349     013B  1303               	bcf	3,6	;RP1=0, select bank0
  9350     013C  0820               	movf	?___flmul,w
  9351     013D  1683               	bsf	3,5	;RP0=1, select bank1
  9352     013E  1303               	bcf	3,6	;RP1=0, select bank1
  9353     013F  00B7               	movwf	efgtoa@ou^(0+128)
  9354     0140                     l2882:
  9355     0140  0848               	movf	efgtoa@g^(0+128),w
  9356     0141  00A0               	movwf	??_efgtoa^(0+128)
  9357     0142  0849               	movf	(efgtoa@g+1)^(0+128),w
  9358     0143  00A1               	movwf	(??_efgtoa^(0+128)+1)
  9359     0144  084A               	movf	(efgtoa@g+2)^(0+128),w
  9360     0145  00A2               	movwf	(??_efgtoa^(0+128)+2)
  9361     0146  084B               	movf	(efgtoa@g+3)^(0+128),w
  9362     0147  00A3               	movwf	(??_efgtoa^(0+128)+3)
  9363     0148  0837               	movf	efgtoa@ou^(0+128),w
  9364     0149  02A0               	subwf	??_efgtoa^(0+128),f
  9365     014A  0838               	movf	(efgtoa@ou+1)^(0+128),w
  9366     014B  1C03               	skipc
  9367     014C  0F38               	incfsz	(efgtoa@ou+1)^(0+128),w
  9368     014D  294F               	goto	u4241
  9369     014E  2950               	goto	u4242
  9370     014F                     u4241:
  9371     014F  02A1               	subwf	(??_efgtoa^(0+128)+1),f
  9372     0150                     u4242:
  9373     0150  0839               	movf	(efgtoa@ou+2)^(0+128),w
  9374     0151  1C03               	skipc
  9375     0152  0F39               	incfsz	(efgtoa@ou+2)^(0+128),w
  9376     0153  2955               	goto	u4243
  9377     0154  2956               	goto	u4244
  9378     0155                     u4243:
  9379     0155  02A2               	subwf	(??_efgtoa^(0+128)+2),f
  9380     0156                     u4244:
  9381     0156  083A               	movf	(efgtoa@ou+3)^(0+128),w
  9382     0157  1C03               	skipc
  9383     0158  0F3A               	incfsz	(efgtoa@ou+3)^(0+128),w
  9384     0159  295B               	goto	u4245
  9385     015A  295C               	goto	u4246
  9386     015B                     u4245:
  9387     015B  02A3               	subwf	(??_efgtoa^(0+128)+3),f
  9388     015C                     u4246:
  9389     015C  0823               	movf	(??_efgtoa+3)^(0+128),w
  9390     015D  00F3               	movwf	labs@a+3
  9391     015E  0822               	movf	(??_efgtoa+2)^(0+128),w
  9392     015F  00F2               	movwf	labs@a+2
  9393     0160  0821               	movf	(??_efgtoa+1)^(0+128),w
  9394     0161  00F1               	movwf	labs@a+1
  9395     0162  0820               	movf	??_efgtoa^(0+128),w
  9396     0163  00F0               	movwf	labs@a
  9397     0164  160A  158A  258E  120A  118A  	fcall	_labs
  9398     0169  1BF3               	btfsc	?_labs+3,7
  9399     016A  297B               	goto	u4251
  9400     016B  0873               	movf	?_labs+3,w
  9401     016C  1D03               	btfss	3,2
  9402     016D  297C               	goto	u4250
  9403     016E  0872               	movf	?_labs+2,w
  9404     016F  1D03               	btfss	3,2
  9405     0170  297C               	goto	u4250
  9406     0171  0871               	movf	?_labs+1,w
  9407     0172  1D03               	btfss	3,2
  9408     0173  297C               	goto	u4250
  9409     0174  3002               	movlw	2
  9410     0175  0270               	subwf	?_labs,w
  9411     0176  1D03               	skipz
  9412     0177  2978               	goto	u4253
  9413     0178                     u4253:
  9414     0178  1C03               	btfss	3,0
  9415     0179  297B               	goto	u4251
  9416     017A  297C               	goto	u4250
  9417     017B                     u4251:
  9418     017B  28F1               	goto	l2878
  9419     017C                     u4250:
  9420     017C                     l2884:
  9421     017C  1683               	bsf	3,5	;RP0=1, select bank1
  9422     017D  1303               	bcf	3,6	;RP1=0, select bank1
  9423     017E  083A               	movf	(efgtoa@ou+3)^(0+128),w
  9424     017F  1283               	bcf	3,5	;RP0=0, select bank0
  9425     0180  1303               	bcf	3,6	;RP1=0, select bank0
  9426     0181  00BD               	movwf	___flge@ff1+3
  9427     0182  1683               	bsf	3,5	;RP0=1, select bank1
  9428     0183  1303               	bcf	3,6	;RP1=0, select bank1
  9429     0184  0839               	movf	(efgtoa@ou+2)^(0+128),w
  9430     0185  1283               	bcf	3,5	;RP0=0, select bank0
  9431     0186  1303               	bcf	3,6	;RP1=0, select bank0
  9432     0187  00BC               	movwf	___flge@ff1+2
  9433     0188  1683               	bsf	3,5	;RP0=1, select bank1
  9434     0189  1303               	bcf	3,6	;RP1=0, select bank1
  9435     018A  0838               	movf	(efgtoa@ou+1)^(0+128),w
  9436     018B  1283               	bcf	3,5	;RP0=0, select bank0
  9437     018C  1303               	bcf	3,6	;RP1=0, select bank0
  9438     018D  00BB               	movwf	___flge@ff1+1
  9439     018E  1683               	bsf	3,5	;RP0=1, select bank1
  9440     018F  1303               	bcf	3,6	;RP1=0, select bank1
  9441     0190  0837               	movf	efgtoa@ou^(0+128),w
  9442     0191  1283               	bcf	3,5	;RP0=0, select bank0
  9443     0192  1303               	bcf	3,6	;RP1=0, select bank0
  9444     0193  00BA               	movwf	___flge@ff1
  9445     0194  1683               	bsf	3,5	;RP0=1, select bank1
  9446     0195  1303               	bcf	3,6	;RP1=0, select bank1
  9447     0196  084B               	movf	(efgtoa@g+3)^(0+128),w
  9448     0197  1283               	bcf	3,5	;RP0=0, select bank0
  9449     0198  1303               	bcf	3,6	;RP1=0, select bank0
  9450     0199  00C1               	movwf	___flge@ff2+3
  9451     019A  1683               	bsf	3,5	;RP0=1, select bank1
  9452     019B  1303               	bcf	3,6	;RP1=0, select bank1
  9453     019C  084A               	movf	(efgtoa@g+2)^(0+128),w
  9454     019D  1283               	bcf	3,5	;RP0=0, select bank0
  9455     019E  1303               	bcf	3,6	;RP1=0, select bank0
  9456     019F  00C0               	movwf	___flge@ff2+2
  9457     01A0  1683               	bsf	3,5	;RP0=1, select bank1
  9458     01A1  1303               	bcf	3,6	;RP1=0, select bank1
  9459     01A2  0849               	movf	(efgtoa@g+1)^(0+128),w
  9460     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  9461     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  9462     01A5  00BF               	movwf	___flge@ff2+1
  9463     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  9464     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  9465     01A8  0848               	movf	efgtoa@g^(0+128),w
  9466     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  9467     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  9468     01AB  00BE               	movwf	___flge@ff2
  9469     01AC  160A  118A  2109  120A  118A  	fcall	___flge
  9470     01B1  1C03               	btfss	3,0
  9471     01B2  29B4               	goto	u4261
  9472     01B3  29B5               	goto	u4260
  9473     01B4                     u4261:
  9474     01B4  28F1               	goto	l2878
  9475     01B5                     u4260:
  9476     01B5                     l2886:
  9477                           
  9478                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  9479     01B5  1683               	bsf	3,5	;RP0=1, select bank1
  9480     01B6  1303               	bcf	3,6	;RP1=0, select bank1
  9481     01B7  0848               	movf	efgtoa@g^(0+128),w
  9482     01B8  00A0               	movwf	??_efgtoa^(0+128)
  9483     01B9  0849               	movf	(efgtoa@g+1)^(0+128),w
  9484     01BA  00A1               	movwf	(??_efgtoa^(0+128)+1)
  9485     01BB  084A               	movf	(efgtoa@g+2)^(0+128),w
  9486     01BC  00A2               	movwf	(??_efgtoa^(0+128)+2)
  9487     01BD  084B               	movf	(efgtoa@g+3)^(0+128),w
  9488     01BE  00A3               	movwf	(??_efgtoa^(0+128)+3)
  9489     01BF  084C               	movf	efgtoa@u^(0+128),w
  9490     01C0  02A0               	subwf	??_efgtoa^(0+128),f
  9491     01C1  084D               	movf	(efgtoa@u+1)^(0+128),w
  9492     01C2  1C03               	skipc
  9493     01C3  0F4D               	incfsz	(efgtoa@u+1)^(0+128),w
  9494     01C4  29C6               	goto	u4271
  9495     01C5  29C7               	goto	u4272
  9496     01C6                     u4271:
  9497     01C6  02A1               	subwf	(??_efgtoa^(0+128)+1),f
  9498     01C7                     u4272:
  9499     01C7  084E               	movf	(efgtoa@u+2)^(0+128),w
  9500     01C8  1C03               	skipc
  9501     01C9  0F4E               	incfsz	(efgtoa@u+2)^(0+128),w
  9502     01CA  29CC               	goto	u4273
  9503     01CB  29CD               	goto	u4274
  9504     01CC                     u4273:
  9505     01CC  02A2               	subwf	(??_efgtoa^(0+128)+2),f
  9506     01CD                     u4274:
  9507     01CD  084F               	movf	(efgtoa@u+3)^(0+128),w
  9508     01CE  1C03               	skipc
  9509     01CF  0F4F               	incfsz	(efgtoa@u+3)^(0+128),w
  9510     01D0  29D2               	goto	u4275
  9511     01D1  29D3               	goto	u4276
  9512     01D2                     u4275:
  9513     01D2  02A3               	subwf	(??_efgtoa^(0+128)+3),f
  9514     01D3                     u4276:
  9515     01D3  0823               	movf	(??_efgtoa+3)^(0+128),w
  9516     01D4  00F3               	movwf	labs@a+3
  9517     01D5  0822               	movf	(??_efgtoa+2)^(0+128),w
  9518     01D6  00F2               	movwf	labs@a+2
  9519     01D7  0821               	movf	(??_efgtoa+1)^(0+128),w
  9520     01D8  00F1               	movwf	labs@a+1
  9521     01D9  0820               	movf	??_efgtoa^(0+128),w
  9522     01DA  00F0               	movwf	labs@a
  9523     01DB  160A  158A  258E  120A  118A  	fcall	_labs
  9524     01E0  1BF3               	btfsc	?_labs+3,7
  9525     01E1  29F3               	goto	u4280
  9526     01E2  0873               	movf	?_labs+3,w
  9527     01E3  1D03               	btfss	3,2
  9528     01E4  29F2               	goto	u4281
  9529     01E5  0872               	movf	?_labs+2,w
  9530     01E6  1D03               	btfss	3,2
  9531     01E7  29F2               	goto	u4281
  9532     01E8  0871               	movf	?_labs+1,w
  9533     01E9  1D03               	btfss	3,2
  9534     01EA  29F2               	goto	u4281
  9535     01EB  3002               	movlw	2
  9536     01EC  0270               	subwf	?_labs,w
  9537     01ED  1D03               	skipz
  9538     01EE  29EF               	goto	u4283
  9539     01EF                     u4283:
  9540     01EF  1803               	btfsc	3,0
  9541     01F0  29F2               	goto	u4281
  9542     01F1  29F3               	goto	u4280
  9543     01F2                     u4281:
  9544     01F2  2A80               	goto	l2898
  9545     01F3                     u4280:
  9546     01F3                     l2888:
  9547                           
  9548                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9549     01F3  1683               	bsf	3,5	;RP0=1, select bank1
  9550     01F4  1303               	bcf	3,6	;RP1=0, select bank1
  9551     01F5  084F               	movf	(efgtoa@u+3)^(0+128),w
  9552     01F6  00CB               	movwf	(efgtoa@g+3)^(0+128)
  9553     01F7  084E               	movf	(efgtoa@u+2)^(0+128),w
  9554     01F8  00CA               	movwf	(efgtoa@g+2)^(0+128)
  9555     01F9  084D               	movf	(efgtoa@u+1)^(0+128),w
  9556     01FA  00C9               	movwf	(efgtoa@g+1)^(0+128)
  9557     01FB  084C               	movf	efgtoa@u^(0+128),w
  9558     01FC  00C8               	movwf	efgtoa@g^(0+128)
  9559                           
  9560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
  9561     01FD  2AB9               	goto	l2900
  9562     01FE                     l2890:
  9563                           
  9564                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  9565     01FE  3041               	movlw	65
  9566     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  9567     0200  1303               	bcf	3,6	;RP1=0, select bank0
  9568     0201  00BD               	movwf	___fldiv@a+3
  9569     0202  3020               	movlw	32
  9570     0203  00BC               	movwf	___fldiv@a+2
  9571     0204  3000               	movlw	0
  9572     0205  00BB               	movwf	___fldiv@a+1
  9573     0206  3000               	movlw	0
  9574     0207  00BA               	movwf	___fldiv@a
  9575     0208  1683               	bsf	3,5	;RP0=1, select bank1
  9576     0209  1303               	bcf	3,6	;RP1=0, select bank1
  9577     020A  084F               	movf	(efgtoa@u+3)^(0+128),w
  9578     020B  1283               	bcf	3,5	;RP0=0, select bank0
  9579     020C  1303               	bcf	3,6	;RP1=0, select bank0
  9580     020D  00C1               	movwf	___fldiv@b+3
  9581     020E  1683               	bsf	3,5	;RP0=1, select bank1
  9582     020F  1303               	bcf	3,6	;RP1=0, select bank1
  9583     0210  084E               	movf	(efgtoa@u+2)^(0+128),w
  9584     0211  1283               	bcf	3,5	;RP0=0, select bank0
  9585     0212  1303               	bcf	3,6	;RP1=0, select bank0
  9586     0213  00C0               	movwf	___fldiv@b+2
  9587     0214  1683               	bsf	3,5	;RP0=1, select bank1
  9588     0215  1303               	bcf	3,6	;RP1=0, select bank1
  9589     0216  084D               	movf	(efgtoa@u+1)^(0+128),w
  9590     0217  1283               	bcf	3,5	;RP0=0, select bank0
  9591     0218  1303               	bcf	3,6	;RP1=0, select bank0
  9592     0219  00BF               	movwf	___fldiv@b+1
  9593     021A  1683               	bsf	3,5	;RP0=1, select bank1
  9594     021B  1303               	bcf	3,6	;RP1=0, select bank1
  9595     021C  084C               	movf	efgtoa@u^(0+128),w
  9596     021D  1283               	bcf	3,5	;RP0=0, select bank0
  9597     021E  1303               	bcf	3,6	;RP1=0, select bank0
  9598     021F  00BE               	movwf	___fldiv@b
  9599     0220  120A  158A  2098  120A  118A  	fcall	___fldiv
  9600     0225  1283               	bcf	3,5	;RP0=0, select bank0
  9601     0226  1303               	bcf	3,6	;RP1=0, select bank0
  9602     0227  083D               	movf	?___fldiv+3,w
  9603     0228  1683               	bsf	3,5	;RP0=1, select bank1
  9604     0229  1303               	bcf	3,6	;RP1=0, select bank1
  9605     022A  00CF               	movwf	(efgtoa@u+3)^(0+128)
  9606     022B  1283               	bcf	3,5	;RP0=0, select bank0
  9607     022C  1303               	bcf	3,6	;RP1=0, select bank0
  9608     022D  083C               	movf	?___fldiv+2,w
  9609     022E  1683               	bsf	3,5	;RP0=1, select bank1
  9610     022F  1303               	bcf	3,6	;RP1=0, select bank1
  9611     0230  00CE               	movwf	(efgtoa@u+2)^(0+128)
  9612     0231  1283               	bcf	3,5	;RP0=0, select bank0
  9613     0232  1303               	bcf	3,6	;RP1=0, select bank0
  9614     0233  083B               	movf	?___fldiv+1,w
  9615     0234  1683               	bsf	3,5	;RP0=1, select bank1
  9616     0235  1303               	bcf	3,6	;RP1=0, select bank1
  9617     0236  00CD               	movwf	(efgtoa@u+1)^(0+128)
  9618     0237  1283               	bcf	3,5	;RP0=0, select bank0
  9619     0238  1303               	bcf	3,6	;RP1=0, select bank0
  9620     0239  083A               	movf	?___fldiv,w
  9621     023A  1683               	bsf	3,5	;RP0=1, select bank1
  9622     023B  1303               	bcf	3,6	;RP1=0, select bank1
  9623     023C  00CC               	movwf	efgtoa@u^(0+128)
  9624     023D                     l2892:
  9625                           
  9626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
  9627     023D  30FF               	movlw	255
  9628     023E  07B3               	addwf	efgtoa@e^(0+128),f
  9629     023F  1803               	skipnc
  9630     0240  0AB4               	incf	(efgtoa@e+1)^(0+128),f
  9631     0241  30FF               	movlw	255
  9632     0242  07B4               	addwf	(efgtoa@e+1)^(0+128),f
  9633     0243                     l2894:
  9634                           
  9635                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  9636     0243  0848               	movf	efgtoa@g^(0+128),w
  9637     0244  00A0               	movwf	??_efgtoa^(0+128)
  9638     0245  0849               	movf	(efgtoa@g+1)^(0+128),w
  9639     0246  00A1               	movwf	(??_efgtoa^(0+128)+1)
  9640     0247  084A               	movf	(efgtoa@g+2)^(0+128),w
  9641     0248  00A2               	movwf	(??_efgtoa^(0+128)+2)
  9642     0249  084B               	movf	(efgtoa@g+3)^(0+128),w
  9643     024A  00A3               	movwf	(??_efgtoa^(0+128)+3)
  9644     024B  084C               	movf	efgtoa@u^(0+128),w
  9645     024C  02A0               	subwf	??_efgtoa^(0+128),f
  9646     024D  084D               	movf	(efgtoa@u+1)^(0+128),w
  9647     024E  1C03               	skipc
  9648     024F  0F4D               	incfsz	(efgtoa@u+1)^(0+128),w
  9649     0250  2A52               	goto	u4291
  9650     0251  2A53               	goto	u4292
  9651     0252                     u4291:
  9652     0252  02A1               	subwf	(??_efgtoa^(0+128)+1),f
  9653     0253                     u4292:
  9654     0253  084E               	movf	(efgtoa@u+2)^(0+128),w
  9655     0254  1C03               	skipc
  9656     0255  0F4E               	incfsz	(efgtoa@u+2)^(0+128),w
  9657     0256  2A58               	goto	u4293
  9658     0257  2A59               	goto	u4294
  9659     0258                     u4293:
  9660     0258  02A2               	subwf	(??_efgtoa^(0+128)+2),f
  9661     0259                     u4294:
  9662     0259  084F               	movf	(efgtoa@u+3)^(0+128),w
  9663     025A  1C03               	skipc
  9664     025B  0F4F               	incfsz	(efgtoa@u+3)^(0+128),w
  9665     025C  2A5E               	goto	u4295
  9666     025D  2A5F               	goto	u4296
  9667     025E                     u4295:
  9668     025E  02A3               	subwf	(??_efgtoa^(0+128)+3),f
  9669     025F                     u4296:
  9670     025F  0823               	movf	(??_efgtoa+3)^(0+128),w
  9671     0260  00F3               	movwf	labs@a+3
  9672     0261  0822               	movf	(??_efgtoa+2)^(0+128),w
  9673     0262  00F2               	movwf	labs@a+2
  9674     0263  0821               	movf	(??_efgtoa+1)^(0+128),w
  9675     0264  00F1               	movwf	labs@a+1
  9676     0265  0820               	movf	??_efgtoa^(0+128),w
  9677     0266  00F0               	movwf	labs@a
  9678     0267  160A  158A  258E  120A  118A  	fcall	_labs
  9679     026C  1BF3               	btfsc	?_labs+3,7
  9680     026D  2A7F               	goto	u4300
  9681     026E  0873               	movf	?_labs+3,w
  9682     026F  1D03               	btfss	3,2
  9683     0270  2A7E               	goto	u4301
  9684     0271  0872               	movf	?_labs+2,w
  9685     0272  1D03               	btfss	3,2
  9686     0273  2A7E               	goto	u4301
  9687     0274  0871               	movf	?_labs+1,w
  9688     0275  1D03               	btfss	3,2
  9689     0276  2A7E               	goto	u4301
  9690     0277  3002               	movlw	2
  9691     0278  0270               	subwf	?_labs,w
  9692     0279  1D03               	skipz
  9693     027A  2A7B               	goto	u4303
  9694     027B                     u4303:
  9695     027B  1803               	btfsc	3,0
  9696     027C  2A7E               	goto	u4301
  9697     027D  2A7F               	goto	u4300
  9698     027E                     u4301:
  9699     027E  2A80               	goto	l2898
  9700     027F                     u4300:
  9701     027F  29F3               	goto	l2888
  9702     0280                     l2898:
  9703                           
  9704                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  9705     0280  1683               	bsf	3,5	;RP0=1, select bank1
  9706     0281  1303               	bcf	3,6	;RP1=0, select bank1
  9707     0282  084B               	movf	(efgtoa@g+3)^(0+128),w
  9708     0283  1283               	bcf	3,5	;RP0=0, select bank0
  9709     0284  1303               	bcf	3,6	;RP1=0, select bank0
  9710     0285  00BD               	movwf	___flge@ff1+3
  9711     0286  1683               	bsf	3,5	;RP0=1, select bank1
  9712     0287  1303               	bcf	3,6	;RP1=0, select bank1
  9713     0288  084A               	movf	(efgtoa@g+2)^(0+128),w
  9714     0289  1283               	bcf	3,5	;RP0=0, select bank0
  9715     028A  1303               	bcf	3,6	;RP1=0, select bank0
  9716     028B  00BC               	movwf	___flge@ff1+2
  9717     028C  1683               	bsf	3,5	;RP0=1, select bank1
  9718     028D  1303               	bcf	3,6	;RP1=0, select bank1
  9719     028E  0849               	movf	(efgtoa@g+1)^(0+128),w
  9720     028F  1283               	bcf	3,5	;RP0=0, select bank0
  9721     0290  1303               	bcf	3,6	;RP1=0, select bank0
  9722     0291  00BB               	movwf	___flge@ff1+1
  9723     0292  1683               	bsf	3,5	;RP0=1, select bank1
  9724     0293  1303               	bcf	3,6	;RP1=0, select bank1
  9725     0294  0848               	movf	efgtoa@g^(0+128),w
  9726     0295  1283               	bcf	3,5	;RP0=0, select bank0
  9727     0296  1303               	bcf	3,6	;RP1=0, select bank0
  9728     0297  00BA               	movwf	___flge@ff1
  9729     0298  1683               	bsf	3,5	;RP0=1, select bank1
  9730     0299  1303               	bcf	3,6	;RP1=0, select bank1
  9731     029A  084F               	movf	(efgtoa@u+3)^(0+128),w
  9732     029B  1283               	bcf	3,5	;RP0=0, select bank0
  9733     029C  1303               	bcf	3,6	;RP1=0, select bank0
  9734     029D  00C1               	movwf	___flge@ff2+3
  9735     029E  1683               	bsf	3,5	;RP0=1, select bank1
  9736     029F  1303               	bcf	3,6	;RP1=0, select bank1
  9737     02A0  084E               	movf	(efgtoa@u+2)^(0+128),w
  9738     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  9739     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  9740     02A3  00C0               	movwf	___flge@ff2+2
  9741     02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9742     02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9743     02A6  084D               	movf	(efgtoa@u+1)^(0+128),w
  9744     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  9745     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  9746     02A9  00BF               	movwf	___flge@ff2+1
  9747     02AA  1683               	bsf	3,5	;RP0=1, select bank1
  9748     02AB  1303               	bcf	3,6	;RP1=0, select bank1
  9749     02AC  084C               	movf	efgtoa@u^(0+128),w
  9750     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  9751     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  9752     02AF  00BE               	movwf	___flge@ff2
  9753     02B0  160A  118A  2109  120A  118A  	fcall	___flge
  9754     02B5  1C03               	btfss	3,0
  9755     02B6  2AB8               	goto	u4311
  9756     02B7  2AB9               	goto	u4310
  9757     02B8                     u4311:
  9758     02B8  29FE               	goto	l2890
  9759     02B9                     u4310:
  9760     02B9                     l2900:
  9761                           
  9762                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  9763     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  9764     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  9765     02BB  086E               	movf	efgtoa@c,w
  9766     02BC  1683               	bsf	3,5	;RP0=1, select bank1
  9767     02BD  1303               	bcf	3,6	;RP1=0, select bank1
  9768     02BE  00AD               	movwf	efgtoa@mode^(0+128)
  9769                           
  9770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  9771     02BF  082D               	movf	efgtoa@mode^(0+128),w
  9772     02C0  00AE               	movwf	efgtoa@nmode^(0+128)
  9773     02C1                     l2902:
  9774                           
  9775                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  9776     02C1  1BED               	btfsc	(_prec+1)^(0+128),7
  9777     02C2  2AC4               	goto	u4321
  9778     02C3  2AC5               	goto	u4320
  9779     02C4                     u4321:
  9780     02C4  2ACA               	goto	l2906
  9781     02C5                     u4320:
  9782     02C5                     l2904:
  9783     02C5  086D               	movf	(_prec+1)^(0+128),w
  9784     02C6  00A7               	movwf	(efgtoa@p+1)^(0+128)
  9785     02C7  086C               	movf	_prec^(0+128),w
  9786     02C8  00A6               	movwf	efgtoa@p^(0+128)
  9787     02C9  2ACE               	goto	l766
  9788     02CA                     l2906:
  9789     02CA  3006               	movlw	6
  9790     02CB  00A6               	movwf	efgtoa@p^(0+128)
  9791     02CC  3000               	movlw	0
  9792     02CD  00A7               	movwf	(efgtoa@p^(0+128)+1)
  9793     02CE                     l766:
  9794                           
  9795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
  9796     02CE  0827               	movf	(efgtoa@p+1)^(0+128),w
  9797     02CF  00B2               	movwf	(efgtoa@m+1)^(0+128)
  9798     02D0  0826               	movf	efgtoa@p^(0+128),w
  9799     02D1  00B1               	movwf	efgtoa@m^(0+128)
  9800                           
  9801                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
  9802     02D2  3001               	movlw	1
  9803     02D3  07B1               	addwf	efgtoa@m^(0+128),f
  9804     02D4  1803               	skipnc
  9805     02D5  0AB2               	incf	(efgtoa@m+1)^(0+128),f
  9806     02D6  3000               	movlw	0
  9807     02D7  07B2               	addwf	(efgtoa@m+1)^(0+128),f
  9808     02D8                     l2908:
  9809                           
  9810                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  9811     02D8  3066               	movlw	102
  9812     02D9  062E               	xorwf	efgtoa@nmode^(0+128),w
  9813     02DA  1D03               	btfss	3,2
  9814     02DB  2ADD               	goto	u4331
  9815     02DC  2ADE               	goto	u4330
  9816     02DD                     u4331:
  9817     02DD  2AF8               	goto	l2920
  9818     02DE                     u4330:
  9819     02DE                     l2910:
  9820                           
  9821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  9822     02DE  1FB4               	btfss	(efgtoa@e+1)^(0+128),7
  9823     02DF  2AE1               	goto	u4341
  9824     02E0  2AE2               	goto	u4340
  9825     02E1                     u4341:
  9826     02E1  2AEC               	goto	l2916
  9827     02E2                     u4340:
  9828     02E2                     l2912:
  9829                           
  9830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  9831     02E2  303F               	movlw	63
  9832     02E3  00CF               	movwf	(efgtoa@u+3)^(0+128)
  9833     02E4  3080               	movlw	128
  9834     02E5  00CE               	movwf	(efgtoa@u+2)^(0+128)
  9835     02E6  3000               	movlw	0
  9836     02E7  00CD               	movwf	(efgtoa@u+1)^(0+128)
  9837     02E8  3000               	movlw	0
  9838     02E9  00CC               	movwf	efgtoa@u^(0+128)
  9839     02EA                     l2914:
  9840                           
  9841                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  9842     02EA  01B3               	clrf	efgtoa@e^(0+128)
  9843     02EB  01B4               	clrf	(efgtoa@e+1)^(0+128)
  9844     02EC                     l2916:
  9845                           
  9846                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  9847     02EC  3067               	movlw	103
  9848     02ED  062D               	xorwf	efgtoa@mode^(0+128),w
  9849     02EE  1903               	btfsc	3,2
  9850     02EF  2AF1               	goto	u4351
  9851     02F0  2AF2               	goto	u4350
  9852     02F1                     u4351:
  9853     02F1  2AF8               	goto	l2920
  9854     02F2                     u4350:
  9855     02F2                     l2918:
  9856                           
  9857                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  9858     02F2  0833               	movf	efgtoa@e^(0+128),w
  9859     02F3  07B1               	addwf	efgtoa@m^(0+128),f
  9860     02F4  1803               	skipnc
  9861     02F5  0AB2               	incf	(efgtoa@m+1)^(0+128),f
  9862     02F6  0834               	movf	(efgtoa@e+1)^(0+128),w
  9863     02F7  07B2               	addwf	(efgtoa@m+1)^(0+128),f
  9864     02F8                     l2920:
  9865                           
  9866                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  9867     02F8  01BB               	clrf	efgtoa@i^(0+128)
  9868     02F9  01BC               	clrf	(efgtoa@i+1)^(0+128)
  9869     02FA                     l2922:
  9870                           
  9871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  9872     02FA  084B               	movf	(efgtoa@g+3)^(0+128),w
  9873     02FB  00C0               	movwf	(efgtoa@h+3)^(0+128)
  9874     02FC  084A               	movf	(efgtoa@g+2)^(0+128),w
  9875     02FD  00BF               	movwf	(efgtoa@h+2)^(0+128)
  9876     02FE  0849               	movf	(efgtoa@g+1)^(0+128),w
  9877     02FF  00BE               	movwf	(efgtoa@h+1)^(0+128)
  9878     0300  0848               	movf	efgtoa@g^(0+128),w
  9879     0301  00BD               	movwf	efgtoa@h^(0+128)
  9880     0302                     l2924:
  9881                           
  9882                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  9883     0302  084F               	movf	(efgtoa@u+3)^(0+128),w
  9884     0303  00BA               	movwf	(efgtoa@ou+3)^(0+128)
  9885     0304  084E               	movf	(efgtoa@u+2)^(0+128),w
  9886     0305  00B9               	movwf	(efgtoa@ou+2)^(0+128)
  9887     0306  084D               	movf	(efgtoa@u+1)^(0+128),w
  9888     0307  00B8               	movwf	(efgtoa@ou+1)^(0+128)
  9889     0308  084C               	movf	efgtoa@u^(0+128),w
  9890     0309  00B7               	movwf	efgtoa@ou^(0+128)
  9891                           
  9892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  9893     030A  2C31               	goto	l2936
  9894     030B                     l2926:
  9895                           
  9896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  9897     030B  1683               	bsf	3,5	;RP0=1, select bank1
  9898     030C  1303               	bcf	3,6	;RP1=0, select bank1
  9899     030D  084F               	movf	(efgtoa@u+3)^(0+128),w
  9900     030E  1283               	bcf	3,5	;RP0=0, select bank0
  9901     030F  1303               	bcf	3,6	;RP1=0, select bank0
  9902     0310  00BD               	movwf	___fldiv@a+3
  9903     0311  1683               	bsf	3,5	;RP0=1, select bank1
  9904     0312  1303               	bcf	3,6	;RP1=0, select bank1
  9905     0313  084E               	movf	(efgtoa@u+2)^(0+128),w
  9906     0314  1283               	bcf	3,5	;RP0=0, select bank0
  9907     0315  1303               	bcf	3,6	;RP1=0, select bank0
  9908     0316  00BC               	movwf	___fldiv@a+2
  9909     0317  1683               	bsf	3,5	;RP0=1, select bank1
  9910     0318  1303               	bcf	3,6	;RP1=0, select bank1
  9911     0319  084D               	movf	(efgtoa@u+1)^(0+128),w
  9912     031A  1283               	bcf	3,5	;RP0=0, select bank0
  9913     031B  1303               	bcf	3,6	;RP1=0, select bank0
  9914     031C  00BB               	movwf	___fldiv@a+1
  9915     031D  1683               	bsf	3,5	;RP0=1, select bank1
  9916     031E  1303               	bcf	3,6	;RP1=0, select bank1
  9917     031F  084C               	movf	efgtoa@u^(0+128),w
  9918     0320  1283               	bcf	3,5	;RP0=0, select bank0
  9919     0321  1303               	bcf	3,6	;RP1=0, select bank0
  9920     0322  00BA               	movwf	___fldiv@a
  9921     0323  1683               	bsf	3,5	;RP0=1, select bank1
  9922     0324  1303               	bcf	3,6	;RP1=0, select bank1
  9923     0325  0840               	movf	(efgtoa@h+3)^(0+128),w
  9924     0326  1283               	bcf	3,5	;RP0=0, select bank0
  9925     0327  1303               	bcf	3,6	;RP1=0, select bank0
  9926     0328  00C1               	movwf	___fldiv@b+3
  9927     0329  1683               	bsf	3,5	;RP0=1, select bank1
  9928     032A  1303               	bcf	3,6	;RP1=0, select bank1
  9929     032B  083F               	movf	(efgtoa@h+2)^(0+128),w
  9930     032C  1283               	bcf	3,5	;RP0=0, select bank0
  9931     032D  1303               	bcf	3,6	;RP1=0, select bank0
  9932     032E  00C0               	movwf	___fldiv@b+2
  9933     032F  1683               	bsf	3,5	;RP0=1, select bank1
  9934     0330  1303               	bcf	3,6	;RP1=0, select bank1
  9935     0331  083E               	movf	(efgtoa@h+1)^(0+128),w
  9936     0332  1283               	bcf	3,5	;RP0=0, select bank0
  9937     0333  1303               	bcf	3,6	;RP1=0, select bank0
  9938     0334  00BF               	movwf	___fldiv@b+1
  9939     0335  1683               	bsf	3,5	;RP0=1, select bank1
  9940     0336  1303               	bcf	3,6	;RP1=0, select bank1
  9941     0337  083D               	movf	efgtoa@h^(0+128),w
  9942     0338  1283               	bcf	3,5	;RP0=0, select bank0
  9943     0339  1303               	bcf	3,6	;RP1=0, select bank0
  9944     033A  00BE               	movwf	___fldiv@b
  9945     033B  120A  158A  2098  120A  118A  	fcall	___fldiv
  9946     0340  1283               	bcf	3,5	;RP0=0, select bank0
  9947     0341  1303               	bcf	3,6	;RP1=0, select bank0
  9948     0342  083D               	movf	?___fldiv+3,w
  9949     0343  00D7               	movwf	floorf@x+3
  9950     0344  083C               	movf	?___fldiv+2,w
  9951     0345  00D6               	movwf	floorf@x+2
  9952     0346  083B               	movf	?___fldiv+1,w
  9953     0347  00D5               	movwf	floorf@x+1
  9954     0348  083A               	movf	?___fldiv,w
  9955     0349  00D4               	movwf	floorf@x
  9956     034A  160A  118A  26F1  120A  118A  	fcall	_floorf
  9957     034F  1283               	bcf	3,5	;RP0=0, select bank0
  9958     0350  1303               	bcf	3,6	;RP1=0, select bank0
  9959     0351  0857               	movf	?_floorf+3,w
  9960     0352  1683               	bsf	3,5	;RP0=1, select bank1
  9961     0353  1303               	bcf	3,6	;RP1=0, select bank1
  9962     0354  00C4               	movwf	(efgtoa@l+3)^(0+128)
  9963     0355  1283               	bcf	3,5	;RP0=0, select bank0
  9964     0356  1303               	bcf	3,6	;RP1=0, select bank0
  9965     0357  0856               	movf	?_floorf+2,w
  9966     0358  1683               	bsf	3,5	;RP0=1, select bank1
  9967     0359  1303               	bcf	3,6	;RP1=0, select bank1
  9968     035A  00C3               	movwf	(efgtoa@l+2)^(0+128)
  9969     035B  1283               	bcf	3,5	;RP0=0, select bank0
  9970     035C  1303               	bcf	3,6	;RP1=0, select bank0
  9971     035D  0855               	movf	?_floorf+1,w
  9972     035E  1683               	bsf	3,5	;RP0=1, select bank1
  9973     035F  1303               	bcf	3,6	;RP1=0, select bank1
  9974     0360  00C2               	movwf	(efgtoa@l+1)^(0+128)
  9975     0361  1283               	bcf	3,5	;RP0=0, select bank0
  9976     0362  1303               	bcf	3,6	;RP1=0, select bank0
  9977     0363  0854               	movf	?_floorf,w
  9978     0364  1683               	bsf	3,5	;RP0=1, select bank1
  9979     0365  1303               	bcf	3,6	;RP1=0, select bank1
  9980     0366  00C1               	movwf	efgtoa@l^(0+128)
  9981     0367                     l2928:
  9982                           
  9983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  9984     0367  0844               	movf	(efgtoa@l+3)^(0+128),w
  9985     0368  00F3               	movwf	___fltol@f1+3
  9986     0369  0843               	movf	(efgtoa@l+2)^(0+128),w
  9987     036A  00F2               	movwf	___fltol@f1+2
  9988     036B  0842               	movf	(efgtoa@l+1)^(0+128),w
  9989     036C  00F1               	movwf	___fltol@f1+1
  9990     036D  0841               	movf	efgtoa@l^(0+128),w
  9991     036E  00F0               	movwf	___fltol@f1
  9992     036F  160A  158A  278C  120A  118A  	fcall	___fltol
  9993     0374  0871               	movf	?___fltol+1,w
  9994     0375  1683               	bsf	3,5	;RP0=1, select bank1
  9995     0376  1303               	bcf	3,6	;RP1=0, select bank1
  9996     0377  00B0               	movwf	(efgtoa@d+1)^(0+128)
  9997     0378  0870               	movf	?___fltol,w
  9998     0379  00AF               	movwf	efgtoa@d^(0+128)
  9999     037A                     l2930:
 10000                           
 10001                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 10002     037A  084F               	movf	(efgtoa@u+3)^(0+128),w
 10003     037B  1283               	bcf	3,5	;RP0=0, select bank0
 10004     037C  1303               	bcf	3,6	;RP1=0, select bank0
 10005     037D  00A7               	movwf	___flmul@a+3
 10006     037E  1683               	bsf	3,5	;RP0=1, select bank1
 10007     037F  1303               	bcf	3,6	;RP1=0, select bank1
 10008     0380  084E               	movf	(efgtoa@u+2)^(0+128),w
 10009     0381  1283               	bcf	3,5	;RP0=0, select bank0
 10010     0382  1303               	bcf	3,6	;RP1=0, select bank0
 10011     0383  00A6               	movwf	___flmul@a+2
 10012     0384  1683               	bsf	3,5	;RP0=1, select bank1
 10013     0385  1303               	bcf	3,6	;RP1=0, select bank1
 10014     0386  084D               	movf	(efgtoa@u+1)^(0+128),w
 10015     0387  1283               	bcf	3,5	;RP0=0, select bank0
 10016     0388  1303               	bcf	3,6	;RP1=0, select bank0
 10017     0389  00A5               	movwf	___flmul@a+1
 10018     038A  1683               	bsf	3,5	;RP0=1, select bank1
 10019     038B  1303               	bcf	3,6	;RP1=0, select bank1
 10020     038C  084C               	movf	efgtoa@u^(0+128),w
 10021     038D  1283               	bcf	3,5	;RP0=0, select bank0
 10022     038E  1303               	bcf	3,6	;RP1=0, select bank0
 10023     038F  00A4               	movwf	___flmul@a
 10024     0390  1683               	bsf	3,5	;RP0=1, select bank1
 10025     0391  1303               	bcf	3,6	;RP1=0, select bank1
 10026     0392  0844               	movf	(efgtoa@l+3)^(0+128),w
 10027     0393  1283               	bcf	3,5	;RP0=0, select bank0
 10028     0394  1303               	bcf	3,6	;RP1=0, select bank0
 10029     0395  00A3               	movwf	___flmul@b+3
 10030     0396  1683               	bsf	3,5	;RP0=1, select bank1
 10031     0397  1303               	bcf	3,6	;RP1=0, select bank1
 10032     0398  0843               	movf	(efgtoa@l+2)^(0+128),w
 10033     0399  1283               	bcf	3,5	;RP0=0, select bank0
 10034     039A  1303               	bcf	3,6	;RP1=0, select bank0
 10035     039B  00A2               	movwf	___flmul@b+2
 10036     039C  1683               	bsf	3,5	;RP0=1, select bank1
 10037     039D  1303               	bcf	3,6	;RP1=0, select bank1
 10038     039E  0842               	movf	(efgtoa@l+1)^(0+128),w
 10039     039F  1283               	bcf	3,5	;RP0=0, select bank0
 10040     03A0  1303               	bcf	3,6	;RP1=0, select bank0
 10041     03A1  00A1               	movwf	___flmul@b+1
 10042     03A2  1683               	bsf	3,5	;RP0=1, select bank1
 10043     03A3  1303               	bcf	3,6	;RP1=0, select bank1
 10044     03A4  0841               	movf	efgtoa@l^(0+128),w
 10045     03A5  1283               	bcf	3,5	;RP0=0, select bank0
 10046     03A6  1303               	bcf	3,6	;RP1=0, select bank0
 10047     03A7  00A0               	movwf	___flmul@b
 10048     03A8  120A  158A  24BE  120A  118A  	fcall	___flmul
 10049     03AD  1283               	bcf	3,5	;RP0=0, select bank0
 10050     03AE  1303               	bcf	3,6	;RP1=0, select bank0
 10051     03AF  0823               	movf	?___flmul+3,w
 10052     03B0  00BD               	movwf	___flsub@a+3
 10053     03B1  0822               	movf	?___flmul+2,w
 10054     03B2  00BC               	movwf	___flsub@a+2
 10055     03B3  0821               	movf	?___flmul+1,w
 10056     03B4  00BB               	movwf	___flsub@a+1
 10057     03B5  0820               	movf	?___flmul,w
 10058     03B6  00BA               	movwf	___flsub@a
 10059     03B7  1683               	bsf	3,5	;RP0=1, select bank1
 10060     03B8  1303               	bcf	3,6	;RP1=0, select bank1
 10061     03B9  0840               	movf	(efgtoa@h+3)^(0+128),w
 10062     03BA  1283               	bcf	3,5	;RP0=0, select bank0
 10063     03BB  1303               	bcf	3,6	;RP1=0, select bank0
 10064     03BC  00C1               	movwf	___flsub@b+3
 10065     03BD  1683               	bsf	3,5	;RP0=1, select bank1
 10066     03BE  1303               	bcf	3,6	;RP1=0, select bank1
 10067     03BF  083F               	movf	(efgtoa@h+2)^(0+128),w
 10068     03C0  1283               	bcf	3,5	;RP0=0, select bank0
 10069     03C1  1303               	bcf	3,6	;RP1=0, select bank0
 10070     03C2  00C0               	movwf	___flsub@b+2
 10071     03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10072     03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10073     03C5  083E               	movf	(efgtoa@h+1)^(0+128),w
 10074     03C6  1283               	bcf	3,5	;RP0=0, select bank0
 10075     03C7  1303               	bcf	3,6	;RP1=0, select bank0
 10076     03C8  00BF               	movwf	___flsub@b+1
 10077     03C9  1683               	bsf	3,5	;RP0=1, select bank1
 10078     03CA  1303               	bcf	3,6	;RP1=0, select bank1
 10079     03CB  083D               	movf	efgtoa@h^(0+128),w
 10080     03CC  1283               	bcf	3,5	;RP0=0, select bank0
 10081     03CD  1303               	bcf	3,6	;RP1=0, select bank0
 10082     03CE  00BE               	movwf	___flsub@b
 10083     03CF  160A  158A  25E3  120A  118A  	fcall	___flsub
 10084     03D4  1283               	bcf	3,5	;RP0=0, select bank0
 10085     03D5  1303               	bcf	3,6	;RP1=0, select bank0
 10086     03D6  083D               	movf	?___flsub+3,w
 10087     03D7  1683               	bsf	3,5	;RP0=1, select bank1
 10088     03D8  1303               	bcf	3,6	;RP1=0, select bank1
 10089     03D9  00C0               	movwf	(efgtoa@h+3)^(0+128)
 10090     03DA  1283               	bcf	3,5	;RP0=0, select bank0
 10091     03DB  1303               	bcf	3,6	;RP1=0, select bank0
 10092     03DC  083C               	movf	?___flsub+2,w
 10093     03DD  1683               	bsf	3,5	;RP0=1, select bank1
 10094     03DE  1303               	bcf	3,6	;RP1=0, select bank1
 10095     03DF  00BF               	movwf	(efgtoa@h+2)^(0+128)
 10096     03E0  1283               	bcf	3,5	;RP0=0, select bank0
 10097     03E1  1303               	bcf	3,6	;RP1=0, select bank0
 10098     03E2  083B               	movf	?___flsub+1,w
 10099     03E3  1683               	bsf	3,5	;RP0=1, select bank1
 10100     03E4  1303               	bcf	3,6	;RP1=0, select bank1
 10101     03E5  00BE               	movwf	(efgtoa@h+1)^(0+128)
 10102     03E6  1283               	bcf	3,5	;RP0=0, select bank0
 10103     03E7  1303               	bcf	3,6	;RP1=0, select bank0
 10104     03E8  083A               	movf	?___flsub,w
 10105     03E9  1683               	bsf	3,5	;RP0=1, select bank1
 10106     03EA  1303               	bcf	3,6	;RP1=0, select bank1
 10107     03EB  00BD               	movwf	efgtoa@h^(0+128)
 10108     03EC                     l2932:
 10109                           
 10110                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 10111     03EC  3041               	movlw	65
 10112     03ED  1283               	bcf	3,5	;RP0=0, select bank0
 10113     03EE  1303               	bcf	3,6	;RP1=0, select bank0
 10114     03EF  00BD               	movwf	___fldiv@a+3
 10115     03F0  3020               	movlw	32
 10116     03F1  00BC               	movwf	___fldiv@a+2
 10117     03F2  3000               	movlw	0
 10118     03F3  00BB               	movwf	___fldiv@a+1
 10119     03F4  3000               	movlw	0
 10120     03F5  00BA               	movwf	___fldiv@a
 10121     03F6  1683               	bsf	3,5	;RP0=1, select bank1
 10122     03F7  1303               	bcf	3,6	;RP1=0, select bank1
 10123     03F8  084F               	movf	(efgtoa@u+3)^(0+128),w
 10124     03F9  1283               	bcf	3,5	;RP0=0, select bank0
 10125     03FA  1303               	bcf	3,6	;RP1=0, select bank0
 10126     03FB  00C1               	movwf	___fldiv@b+3
 10127     03FC  1683               	bsf	3,5	;RP0=1, select bank1
 10128     03FD  1303               	bcf	3,6	;RP1=0, select bank1
 10129     03FE  084E               	movf	(efgtoa@u+2)^(0+128),w
 10130     03FF  1283               	bcf	3,5	;RP0=0, select bank0
 10131     0400  1303               	bcf	3,6	;RP1=0, select bank0
 10132     0401  00C0               	movwf	___fldiv@b+2
 10133     0402  1683               	bsf	3,5	;RP0=1, select bank1
 10134     0403  1303               	bcf	3,6	;RP1=0, select bank1
 10135     0404  084D               	movf	(efgtoa@u+1)^(0+128),w
 10136     0405  1283               	bcf	3,5	;RP0=0, select bank0
 10137     0406  1303               	bcf	3,6	;RP1=0, select bank0
 10138     0407  00BF               	movwf	___fldiv@b+1
 10139     0408  1683               	bsf	3,5	;RP0=1, select bank1
 10140     0409  1303               	bcf	3,6	;RP1=0, select bank1
 10141     040A  084C               	movf	efgtoa@u^(0+128),w
 10142     040B  1283               	bcf	3,5	;RP0=0, select bank0
 10143     040C  1303               	bcf	3,6	;RP1=0, select bank0
 10144     040D  00BE               	movwf	___fldiv@b
 10145     040E  120A  158A  2098  120A  118A  	fcall	___fldiv
 10146     0413  1283               	bcf	3,5	;RP0=0, select bank0
 10147     0414  1303               	bcf	3,6	;RP1=0, select bank0
 10148     0415  083D               	movf	?___fldiv+3,w
 10149     0416  1683               	bsf	3,5	;RP0=1, select bank1
 10150     0417  1303               	bcf	3,6	;RP1=0, select bank1
 10151     0418  00CF               	movwf	(efgtoa@u+3)^(0+128)
 10152     0419  1283               	bcf	3,5	;RP0=0, select bank0
 10153     041A  1303               	bcf	3,6	;RP1=0, select bank0
 10154     041B  083C               	movf	?___fldiv+2,w
 10155     041C  1683               	bsf	3,5	;RP0=1, select bank1
 10156     041D  1303               	bcf	3,6	;RP1=0, select bank1
 10157     041E  00CE               	movwf	(efgtoa@u+2)^(0+128)
 10158     041F  1283               	bcf	3,5	;RP0=0, select bank0
 10159     0420  1303               	bcf	3,6	;RP1=0, select bank0
 10160     0421  083B               	movf	?___fldiv+1,w
 10161     0422  1683               	bsf	3,5	;RP0=1, select bank1
 10162     0423  1303               	bcf	3,6	;RP1=0, select bank1
 10163     0424  00CD               	movwf	(efgtoa@u+1)^(0+128)
 10164     0425  1283               	bcf	3,5	;RP0=0, select bank0
 10165     0426  1303               	bcf	3,6	;RP1=0, select bank0
 10166     0427  083A               	movf	?___fldiv,w
 10167     0428  1683               	bsf	3,5	;RP0=1, select bank1
 10168     0429  1303               	bcf	3,6	;RP1=0, select bank1
 10169     042A  00CC               	movwf	efgtoa@u^(0+128)
 10170     042B                     l2934:
 10171                           
 10172                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10173     042B  3001               	movlw	1
 10174     042C  07BB               	addwf	efgtoa@i^(0+128),f
 10175     042D  1803               	skipnc
 10176     042E  0ABC               	incf	(efgtoa@i+1)^(0+128),f
 10177     042F  3000               	movlw	0
 10178     0430  07BC               	addwf	(efgtoa@i+1)^(0+128),f
 10179     0431                     l2936:
 10180                           
 10181                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10182     0431  083C               	movf	(efgtoa@i+1)^(0+128),w
 10183     0432  3A80               	xorlw	128
 10184     0433  00A0               	movwf	??_efgtoa^(0+128)
 10185     0434  0832               	movf	(efgtoa@m+1)^(0+128),w
 10186     0435  3A80               	xorlw	128
 10187     0436  0220               	subwf	??_efgtoa^(0+128),w
 10188     0437  1D03               	skipz
 10189     0438  2C3B               	goto	u4365
 10190     0439  0831               	movf	efgtoa@m^(0+128),w
 10191     043A  023B               	subwf	efgtoa@i^(0+128),w
 10192     043B                     u4365:
 10193     043B  1C03               	skipc
 10194     043C  2C3E               	goto	u4361
 10195     043D  2C3F               	goto	u4360
 10196     043E                     u4361:
 10197     043E  2B0B               	goto	l2926
 10198     043F                     u4360:
 10199     043F                     l2938:
 10200                           
 10201                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 10202     043F  3040               	movlw	64
 10203     0440  1283               	bcf	3,5	;RP0=0, select bank0
 10204     0441  1303               	bcf	3,6	;RP1=0, select bank0
 10205     0442  00A3               	movwf	___flmul@b+3
 10206     0443  30A0               	movlw	160
 10207     0444  00A2               	movwf	___flmul@b+2
 10208     0445  3000               	movlw	0
 10209     0446  00A1               	movwf	___flmul@b+1
 10210     0447  3000               	movlw	0
 10211     0448  00A0               	movwf	___flmul@b
 10212     0449  1683               	bsf	3,5	;RP0=1, select bank1
 10213     044A  1303               	bcf	3,6	;RP1=0, select bank1
 10214     044B  084F               	movf	(efgtoa@u+3)^(0+128),w
 10215     044C  1283               	bcf	3,5	;RP0=0, select bank0
 10216     044D  1303               	bcf	3,6	;RP1=0, select bank0
 10217     044E  00A7               	movwf	___flmul@a+3
 10218     044F  1683               	bsf	3,5	;RP0=1, select bank1
 10219     0450  1303               	bcf	3,6	;RP1=0, select bank1
 10220     0451  084E               	movf	(efgtoa@u+2)^(0+128),w
 10221     0452  1283               	bcf	3,5	;RP0=0, select bank0
 10222     0453  1303               	bcf	3,6	;RP1=0, select bank0
 10223     0454  00A6               	movwf	___flmul@a+2
 10224     0455  1683               	bsf	3,5	;RP0=1, select bank1
 10225     0456  1303               	bcf	3,6	;RP1=0, select bank1
 10226     0457  084D               	movf	(efgtoa@u+1)^(0+128),w
 10227     0458  1283               	bcf	3,5	;RP0=0, select bank0
 10228     0459  1303               	bcf	3,6	;RP1=0, select bank0
 10229     045A  00A5               	movwf	___flmul@a+1
 10230     045B  1683               	bsf	3,5	;RP0=1, select bank1
 10231     045C  1303               	bcf	3,6	;RP1=0, select bank1
 10232     045D  084C               	movf	efgtoa@u^(0+128),w
 10233     045E  1283               	bcf	3,5	;RP0=0, select bank0
 10234     045F  1303               	bcf	3,6	;RP1=0, select bank0
 10235     0460  00A4               	movwf	___flmul@a
 10236     0461  120A  158A  24BE  120A  118A  	fcall	___flmul
 10237     0466  1283               	bcf	3,5	;RP0=0, select bank0
 10238     0467  1303               	bcf	3,6	;RP1=0, select bank0
 10239     0468  0823               	movf	?___flmul+3,w
 10240     0469  1683               	bsf	3,5	;RP0=1, select bank1
 10241     046A  1303               	bcf	3,6	;RP1=0, select bank1
 10242     046B  00C4               	movwf	(efgtoa@l+3)^(0+128)
 10243     046C  1283               	bcf	3,5	;RP0=0, select bank0
 10244     046D  1303               	bcf	3,6	;RP1=0, select bank0
 10245     046E  0822               	movf	?___flmul+2,w
 10246     046F  1683               	bsf	3,5	;RP0=1, select bank1
 10247     0470  1303               	bcf	3,6	;RP1=0, select bank1
 10248     0471  00C3               	movwf	(efgtoa@l+2)^(0+128)
 10249     0472  1283               	bcf	3,5	;RP0=0, select bank0
 10250     0473  1303               	bcf	3,6	;RP1=0, select bank0
 10251     0474  0821               	movf	?___flmul+1,w
 10252     0475  1683               	bsf	3,5	;RP0=1, select bank1
 10253     0476  1303               	bcf	3,6	;RP1=0, select bank1
 10254     0477  00C2               	movwf	(efgtoa@l+1)^(0+128)
 10255     0478  1283               	bcf	3,5	;RP0=0, select bank0
 10256     0479  1303               	bcf	3,6	;RP1=0, select bank0
 10257     047A  0820               	movf	?___flmul,w
 10258     047B  1683               	bsf	3,5	;RP0=1, select bank1
 10259     047C  1303               	bcf	3,6	;RP1=0, select bank1
 10260     047D  00C1               	movwf	efgtoa@l^(0+128)
 10261     047E                     l2940:
 10262                           
 10263                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 10264     047E  0840               	movf	(efgtoa@h+3)^(0+128),w
 10265     047F  1283               	bcf	3,5	;RP0=0, select bank0
 10266     0480  1303               	bcf	3,6	;RP1=0, select bank0
 10267     0481  00BD               	movwf	___flge@ff1+3
 10268     0482  1683               	bsf	3,5	;RP0=1, select bank1
 10269     0483  1303               	bcf	3,6	;RP1=0, select bank1
 10270     0484  083F               	movf	(efgtoa@h+2)^(0+128),w
 10271     0485  1283               	bcf	3,5	;RP0=0, select bank0
 10272     0486  1303               	bcf	3,6	;RP1=0, select bank0
 10273     0487  00BC               	movwf	___flge@ff1+2
 10274     0488  1683               	bsf	3,5	;RP0=1, select bank1
 10275     0489  1303               	bcf	3,6	;RP1=0, select bank1
 10276     048A  083E               	movf	(efgtoa@h+1)^(0+128),w
 10277     048B  1283               	bcf	3,5	;RP0=0, select bank0
 10278     048C  1303               	bcf	3,6	;RP1=0, select bank0
 10279     048D  00BB               	movwf	___flge@ff1+1
 10280     048E  1683               	bsf	3,5	;RP0=1, select bank1
 10281     048F  1303               	bcf	3,6	;RP1=0, select bank1
 10282     0490  083D               	movf	efgtoa@h^(0+128),w
 10283     0491  1283               	bcf	3,5	;RP0=0, select bank0
 10284     0492  1303               	bcf	3,6	;RP1=0, select bank0
 10285     0493  00BA               	movwf	___flge@ff1
 10286     0494  1683               	bsf	3,5	;RP0=1, select bank1
 10287     0495  1303               	bcf	3,6	;RP1=0, select bank1
 10288     0496  0844               	movf	(efgtoa@l+3)^(0+128),w
 10289     0497  1283               	bcf	3,5	;RP0=0, select bank0
 10290     0498  1303               	bcf	3,6	;RP1=0, select bank0
 10291     0499  00C1               	movwf	___flge@ff2+3
 10292     049A  1683               	bsf	3,5	;RP0=1, select bank1
 10293     049B  1303               	bcf	3,6	;RP1=0, select bank1
 10294     049C  0843               	movf	(efgtoa@l+2)^(0+128),w
 10295     049D  1283               	bcf	3,5	;RP0=0, select bank0
 10296     049E  1303               	bcf	3,6	;RP1=0, select bank0
 10297     049F  00C0               	movwf	___flge@ff2+2
 10298     04A0  1683               	bsf	3,5	;RP0=1, select bank1
 10299     04A1  1303               	bcf	3,6	;RP1=0, select bank1
 10300     04A2  0842               	movf	(efgtoa@l+1)^(0+128),w
 10301     04A3  1283               	bcf	3,5	;RP0=0, select bank0
 10302     04A4  1303               	bcf	3,6	;RP1=0, select bank0
 10303     04A5  00BF               	movwf	___flge@ff2+1
 10304     04A6  1683               	bsf	3,5	;RP0=1, select bank1
 10305     04A7  1303               	bcf	3,6	;RP1=0, select bank1
 10306     04A8  0841               	movf	efgtoa@l^(0+128),w
 10307     04A9  1283               	bcf	3,5	;RP0=0, select bank0
 10308     04AA  1303               	bcf	3,6	;RP1=0, select bank0
 10309     04AB  00BE               	movwf	___flge@ff2
 10310     04AC  160A  118A  2109  120A  118A  	fcall	___flge
 10311     04B1  1803               	btfsc	3,0
 10312     04B2  2CB4               	goto	u4371
 10313     04B3  2CB5               	goto	u4370
 10314     04B4                     u4371:
 10315     04B4  2CC0               	goto	l2944
 10316     04B5                     u4370:
 10317     04B5                     l2942:
 10318                           
 10319                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 10320     04B5  3000               	movlw	0
 10321     04B6  1683               	bsf	3,5	;RP0=1, select bank1
 10322     04B7  1303               	bcf	3,6	;RP1=0, select bank1
 10323     04B8  00C4               	movwf	(efgtoa@l+3)^(0+128)
 10324     04B9  3000               	movlw	0
 10325     04BA  00C3               	movwf	(efgtoa@l+2)^(0+128)
 10326     04BB  3000               	movlw	0
 10327     04BC  00C2               	movwf	(efgtoa@l+1)^(0+128)
 10328     04BD  3000               	movlw	0
 10329     04BE  00C1               	movwf	efgtoa@l^(0+128)
 10330                           
 10331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
 10332     04BF  2CE9               	goto	l2950
 10333     04C0                     l2944:
 10334                           
 10335                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 10336     04C0  1683               	bsf	3,5	;RP0=1, select bank1
 10337     04C1  1303               	bcf	3,6	;RP1=0, select bank1
 10338     04C2  0840               	movf	(efgtoa@h+3)^(0+128),w
 10339     04C3  00F3               	movwf	___fleq@ff1+3
 10340     04C4  083F               	movf	(efgtoa@h+2)^(0+128),w
 10341     04C5  00F2               	movwf	___fleq@ff1+2
 10342     04C6  083E               	movf	(efgtoa@h+1)^(0+128),w
 10343     04C7  00F1               	movwf	___fleq@ff1+1
 10344     04C8  083D               	movf	efgtoa@h^(0+128),w
 10345     04C9  00F0               	movwf	___fleq@ff1
 10346     04CA  0844               	movf	(efgtoa@l+3)^(0+128),w
 10347     04CB  00F7               	movwf	___fleq@ff2+3
 10348     04CC  0843               	movf	(efgtoa@l+2)^(0+128),w
 10349     04CD  00F6               	movwf	___fleq@ff2+2
 10350     04CE  0842               	movf	(efgtoa@l+1)^(0+128),w
 10351     04CF  00F5               	movwf	___fleq@ff2+1
 10352     04D0  0841               	movf	efgtoa@l^(0+128),w
 10353     04D1  00F4               	movwf	___fleq@ff2
 10354     04D2  160A  158A  273E  120A  118A  	fcall	___fleq
 10355     04D7  1C03               	btfss	3,0
 10356     04D8  2CDA               	goto	u4381
 10357     04D9  2CDB               	goto	u4380
 10358     04DA                     u4381:
 10359     04DA  2CE9               	goto	l2950
 10360     04DB                     u4380:
 10361     04DB                     l2946:
 10362     04DB  1683               	bsf	3,5	;RP0=1, select bank1
 10363     04DC  1303               	bcf	3,6	;RP1=0, select bank1
 10364     04DD  182F               	btfsc	efgtoa@d^(0+128),0
 10365     04DE  2CE0               	goto	u4391
 10366     04DF  2CE1               	goto	u4390
 10367     04E0                     u4391:
 10368     04E0  2CE9               	goto	l2950
 10369     04E1                     u4390:
 10370     04E1                     l2948:
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 10373     04E1  3000               	movlw	0
 10374     04E2  00C4               	movwf	(efgtoa@l+3)^(0+128)
 10375     04E3  3000               	movlw	0
 10376     04E4  00C3               	movwf	(efgtoa@l+2)^(0+128)
 10377     04E5  3000               	movlw	0
 10378     04E6  00C2               	movwf	(efgtoa@l+1)^(0+128)
 10379     04E7  3000               	movlw	0
 10380     04E8  00C1               	movwf	efgtoa@l^(0+128)
 10381     04E9                     l2950:
 10382                           
 10383                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 10384     04E9  1683               	bsf	3,5	;RP0=1, select bank1
 10385     04EA  1303               	bcf	3,6	;RP1=0, select bank1
 10386     04EB  0844               	movf	(efgtoa@l+3)^(0+128),w
 10387     04EC  00F3               	movwf	___fladd@b+3
 10388     04ED  0843               	movf	(efgtoa@l+2)^(0+128),w
 10389     04EE  00F2               	movwf	___fladd@b+2
 10390     04EF  0842               	movf	(efgtoa@l+1)^(0+128),w
 10391     04F0  00F1               	movwf	___fladd@b+1
 10392     04F1  0841               	movf	efgtoa@l^(0+128),w
 10393     04F2  00F0               	movwf	___fladd@b
 10394     04F3  084B               	movf	(efgtoa@g+3)^(0+128),w
 10395     04F4  00F7               	movwf	___fladd@a+3
 10396     04F5  084A               	movf	(efgtoa@g+2)^(0+128),w
 10397     04F6  00F6               	movwf	___fladd@a+2
 10398     04F7  0849               	movf	(efgtoa@g+1)^(0+128),w
 10399     04F8  00F5               	movwf	___fladd@a+1
 10400     04F9  0848               	movf	efgtoa@g^(0+128),w
 10401     04FA  00F4               	movwf	___fladd@a
 10402     04FB  120A  158A  2262  120A  118A  	fcall	___fladd
 10403     0500  0873               	movf	?___fladd+3,w
 10404     0501  1683               	bsf	3,5	;RP0=1, select bank1
 10405     0502  1303               	bcf	3,6	;RP1=0, select bank1
 10406     0503  00C0               	movwf	(efgtoa@h+3)^(0+128)
 10407     0504  0872               	movf	?___fladd+2,w
 10408     0505  00BF               	movwf	(efgtoa@h+2)^(0+128)
 10409     0506  0871               	movf	?___fladd+1,w
 10410     0507  00BE               	movwf	(efgtoa@h+1)^(0+128)
 10411     0508  0870               	movf	?___fladd,w
 10412     0509  00BD               	movwf	efgtoa@h^(0+128)
 10413     050A                     l2952:
 10414                           
 10415                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 10416     050A  0840               	movf	(efgtoa@h+3)^(0+128),w
 10417     050B  1283               	bcf	3,5	;RP0=0, select bank0
 10418     050C  1303               	bcf	3,6	;RP1=0, select bank0
 10419     050D  00BD               	movwf	___flge@ff1+3
 10420     050E  1683               	bsf	3,5	;RP0=1, select bank1
 10421     050F  1303               	bcf	3,6	;RP1=0, select bank1
 10422     0510  083F               	movf	(efgtoa@h+2)^(0+128),w
 10423     0511  1283               	bcf	3,5	;RP0=0, select bank0
 10424     0512  1303               	bcf	3,6	;RP1=0, select bank0
 10425     0513  00BC               	movwf	___flge@ff1+2
 10426     0514  1683               	bsf	3,5	;RP0=1, select bank1
 10427     0515  1303               	bcf	3,6	;RP1=0, select bank1
 10428     0516  083E               	movf	(efgtoa@h+1)^(0+128),w
 10429     0517  1283               	bcf	3,5	;RP0=0, select bank0
 10430     0518  1303               	bcf	3,6	;RP1=0, select bank0
 10431     0519  00BB               	movwf	___flge@ff1+1
 10432     051A  1683               	bsf	3,5	;RP0=1, select bank1
 10433     051B  1303               	bcf	3,6	;RP1=0, select bank1
 10434     051C  083D               	movf	efgtoa@h^(0+128),w
 10435     051D  1283               	bcf	3,5	;RP0=0, select bank0
 10436     051E  1303               	bcf	3,6	;RP1=0, select bank0
 10437     051F  00BA               	movwf	___flge@ff1
 10438     0520  3041               	movlw	65
 10439     0521  00A3               	movwf	___flmul@b+3
 10440     0522  3020               	movlw	32
 10441     0523  00A2               	movwf	___flmul@b+2
 10442     0524  3000               	movlw	0
 10443     0525  00A1               	movwf	___flmul@b+1
 10444     0526  3000               	movlw	0
 10445     0527  00A0               	movwf	___flmul@b
 10446     0528  1683               	bsf	3,5	;RP0=1, select bank1
 10447     0529  1303               	bcf	3,6	;RP1=0, select bank1
 10448     052A  083A               	movf	(efgtoa@ou+3)^(0+128),w
 10449     052B  1283               	bcf	3,5	;RP0=0, select bank0
 10450     052C  1303               	bcf	3,6	;RP1=0, select bank0
 10451     052D  00A7               	movwf	___flmul@a+3
 10452     052E  1683               	bsf	3,5	;RP0=1, select bank1
 10453     052F  1303               	bcf	3,6	;RP1=0, select bank1
 10454     0530  0839               	movf	(efgtoa@ou+2)^(0+128),w
 10455     0531  1283               	bcf	3,5	;RP0=0, select bank0
 10456     0532  1303               	bcf	3,6	;RP1=0, select bank0
 10457     0533  00A6               	movwf	___flmul@a+2
 10458     0534  1683               	bsf	3,5	;RP0=1, select bank1
 10459     0535  1303               	bcf	3,6	;RP1=0, select bank1
 10460     0536  0838               	movf	(efgtoa@ou+1)^(0+128),w
 10461     0537  1283               	bcf	3,5	;RP0=0, select bank0
 10462     0538  1303               	bcf	3,6	;RP1=0, select bank0
 10463     0539  00A5               	movwf	___flmul@a+1
 10464     053A  1683               	bsf	3,5	;RP0=1, select bank1
 10465     053B  1303               	bcf	3,6	;RP1=0, select bank1
 10466     053C  0837               	movf	efgtoa@ou^(0+128),w
 10467     053D  1283               	bcf	3,5	;RP0=0, select bank0
 10468     053E  1303               	bcf	3,6	;RP1=0, select bank0
 10469     053F  00A4               	movwf	___flmul@a
 10470     0540  120A  158A  24BE  120A  118A  	fcall	___flmul
 10471     0545  1283               	bcf	3,5	;RP0=0, select bank0
 10472     0546  1303               	bcf	3,6	;RP1=0, select bank0
 10473     0547  0823               	movf	?___flmul+3,w
 10474     0548  00C1               	movwf	___flge@ff2+3
 10475     0549  0822               	movf	?___flmul+2,w
 10476     054A  00C0               	movwf	___flge@ff2+2
 10477     054B  0821               	movf	?___flmul+1,w
 10478     054C  00BF               	movwf	___flge@ff2+1
 10479     054D  0820               	movf	?___flmul,w
 10480     054E  00BE               	movwf	___flge@ff2
 10481     054F  160A  118A  2109  120A  118A  	fcall	___flge
 10482     0554  1C03               	btfss	3,0
 10483     0555  2D57               	goto	u4401
 10484     0556  2D58               	goto	u4400
 10485     0557                     u4401:
 10486     0557  2DAB               	goto	l776
 10487     0558                     u4400:
 10488     0558                     l2954:
 10489                           
 10490                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
 10491     0558  3001               	movlw	1
 10492     0559  1683               	bsf	3,5	;RP0=1, select bank1
 10493     055A  1303               	bcf	3,6	;RP1=0, select bank1
 10494     055B  07B3               	addwf	efgtoa@e^(0+128),f
 10495     055C  1803               	skipnc
 10496     055D  0AB4               	incf	(efgtoa@e+1)^(0+128),f
 10497     055E  3000               	movlw	0
 10498     055F  07B4               	addwf	(efgtoa@e+1)^(0+128),f
 10499     0560                     l2956:
 10500                           
 10501                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 10502     0560  3041               	movlw	65
 10503     0561  1283               	bcf	3,5	;RP0=0, select bank0
 10504     0562  1303               	bcf	3,6	;RP1=0, select bank0
 10505     0563  00A3               	movwf	___flmul@b+3
 10506     0564  3020               	movlw	32
 10507     0565  00A2               	movwf	___flmul@b+2
 10508     0566  3000               	movlw	0
 10509     0567  00A1               	movwf	___flmul@b+1
 10510     0568  3000               	movlw	0
 10511     0569  00A0               	movwf	___flmul@b
 10512     056A  1683               	bsf	3,5	;RP0=1, select bank1
 10513     056B  1303               	bcf	3,6	;RP1=0, select bank1
 10514     056C  083A               	movf	(efgtoa@ou+3)^(0+128),w
 10515     056D  1283               	bcf	3,5	;RP0=0, select bank0
 10516     056E  1303               	bcf	3,6	;RP1=0, select bank0
 10517     056F  00A7               	movwf	___flmul@a+3
 10518     0570  1683               	bsf	3,5	;RP0=1, select bank1
 10519     0571  1303               	bcf	3,6	;RP1=0, select bank1
 10520     0572  0839               	movf	(efgtoa@ou+2)^(0+128),w
 10521     0573  1283               	bcf	3,5	;RP0=0, select bank0
 10522     0574  1303               	bcf	3,6	;RP1=0, select bank0
 10523     0575  00A6               	movwf	___flmul@a+2
 10524     0576  1683               	bsf	3,5	;RP0=1, select bank1
 10525     0577  1303               	bcf	3,6	;RP1=0, select bank1
 10526     0578  0838               	movf	(efgtoa@ou+1)^(0+128),w
 10527     0579  1283               	bcf	3,5	;RP0=0, select bank0
 10528     057A  1303               	bcf	3,6	;RP1=0, select bank0
 10529     057B  00A5               	movwf	___flmul@a+1
 10530     057C  1683               	bsf	3,5	;RP0=1, select bank1
 10531     057D  1303               	bcf	3,6	;RP1=0, select bank1
 10532     057E  0837               	movf	efgtoa@ou^(0+128),w
 10533     057F  1283               	bcf	3,5	;RP0=0, select bank0
 10534     0580  1303               	bcf	3,6	;RP1=0, select bank0
 10535     0581  00A4               	movwf	___flmul@a
 10536     0582  120A  158A  24BE  120A  118A  	fcall	___flmul
 10537     0587  1283               	bcf	3,5	;RP0=0, select bank0
 10538     0588  1303               	bcf	3,6	;RP1=0, select bank0
 10539     0589  0823               	movf	?___flmul+3,w
 10540     058A  1683               	bsf	3,5	;RP0=1, select bank1
 10541     058B  1303               	bcf	3,6	;RP1=0, select bank1
 10542     058C  00BA               	movwf	(efgtoa@ou+3)^(0+128)
 10543     058D  1283               	bcf	3,5	;RP0=0, select bank0
 10544     058E  1303               	bcf	3,6	;RP1=0, select bank0
 10545     058F  0822               	movf	?___flmul+2,w
 10546     0590  1683               	bsf	3,5	;RP0=1, select bank1
 10547     0591  1303               	bcf	3,6	;RP1=0, select bank1
 10548     0592  00B9               	movwf	(efgtoa@ou+2)^(0+128)
 10549     0593  1283               	bcf	3,5	;RP0=0, select bank0
 10550     0594  1303               	bcf	3,6	;RP1=0, select bank0
 10551     0595  0821               	movf	?___flmul+1,w
 10552     0596  1683               	bsf	3,5	;RP0=1, select bank1
 10553     0597  1303               	bcf	3,6	;RP1=0, select bank1
 10554     0598  00B8               	movwf	(efgtoa@ou+1)^(0+128)
 10555     0599  1283               	bcf	3,5	;RP0=0, select bank0
 10556     059A  1303               	bcf	3,6	;RP1=0, select bank0
 10557     059B  0820               	movf	?___flmul,w
 10558     059C  1683               	bsf	3,5	;RP0=1, select bank1
 10559     059D  1303               	bcf	3,6	;RP1=0, select bank1
 10560     059E  00B7               	movwf	efgtoa@ou^(0+128)
 10561     059F                     l2958:
 10562                           
 10563                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 10564     059F  3066               	movlw	102
 10565     05A0  062E               	xorwf	efgtoa@nmode^(0+128),w
 10566     05A1  1D03               	btfss	3,2
 10567     05A2  2DA4               	goto	u4411
 10568     05A3  2DA5               	goto	u4410
 10569     05A4                     u4411:
 10570     05A4  2DAB               	goto	l776
 10571     05A5                     u4410:
 10572     05A5                     l2960:
 10573                           
 10574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
 10575     05A5  3001               	movlw	1
 10576     05A6  07B1               	addwf	efgtoa@m^(0+128),f
 10577     05A7  1803               	skipnc
 10578     05A8  0AB2               	incf	(efgtoa@m+1)^(0+128),f
 10579     05A9  3000               	movlw	0
 10580     05AA  07B2               	addwf	(efgtoa@m+1)^(0+128),f
 10581     05AB                     l776:	
 10582                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 767:  }
 10583                           
 10584                           
 10585                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10586     05AB  1683               	bsf	3,5	;RP0=1, select bank1
 10587     05AC  1303               	bcf	3,6	;RP1=0, select bank1
 10588     05AD  083A               	movf	(efgtoa@ou+3)^(0+128),w
 10589     05AE  00CF               	movwf	(efgtoa@u+3)^(0+128)
 10590     05AF  0839               	movf	(efgtoa@ou+2)^(0+128),w
 10591     05B0  00CE               	movwf	(efgtoa@u+2)^(0+128)
 10592     05B1  0838               	movf	(efgtoa@ou+1)^(0+128),w
 10593     05B2  00CD               	movwf	(efgtoa@u+1)^(0+128)
 10594     05B3  0837               	movf	efgtoa@ou^(0+128),w
 10595     05B4  00CC               	movwf	efgtoa@u^(0+128)
 10596                           
 10597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10598     05B5  0834               	movf	(efgtoa@e+1)^(0+128),w
 10599     05B6  00A5               	movwf	(efgtoa@ne+1)^(0+128)
 10600     05B7  0833               	movf	efgtoa@e^(0+128),w
 10601     05B8  00A4               	movwf	efgtoa@ne^(0+128)
 10602     05B9                     l2962:
 10603                           
 10604                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10605     05B9  01AC               	clrf	efgtoa@pp^(0+128)
 10606     05BA                     l2964:
 10607                           
 10608                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10609     05BA  01A8               	clrf	efgtoa@t^(0+128)
 10610     05BB  01A9               	clrf	(efgtoa@t+1)^(0+128)
 10611     05BC                     l2966:
 10612                           
 10613                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10614     05BC  01BB               	clrf	efgtoa@i^(0+128)
 10615     05BD  01BC               	clrf	(efgtoa@i+1)^(0+128)
 10616                           
 10617                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 10618     05BE  2F5D               	goto	l3010
 10619     05BF                     l2968:
 10620                           
 10621                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 10622     05BF  1683               	bsf	3,5	;RP0=1, select bank1
 10623     05C0  1303               	bcf	3,6	;RP1=0, select bank1
 10624     05C1  084F               	movf	(efgtoa@u+3)^(0+128),w
 10625     05C2  1283               	bcf	3,5	;RP0=0, select bank0
 10626     05C3  1303               	bcf	3,6	;RP1=0, select bank0
 10627     05C4  00BD               	movwf	___fldiv@a+3
 10628     05C5  1683               	bsf	3,5	;RP0=1, select bank1
 10629     05C6  1303               	bcf	3,6	;RP1=0, select bank1
 10630     05C7  084E               	movf	(efgtoa@u+2)^(0+128),w
 10631     05C8  1283               	bcf	3,5	;RP0=0, select bank0
 10632     05C9  1303               	bcf	3,6	;RP1=0, select bank0
 10633     05CA  00BC               	movwf	___fldiv@a+2
 10634     05CB  1683               	bsf	3,5	;RP0=1, select bank1
 10635     05CC  1303               	bcf	3,6	;RP1=0, select bank1
 10636     05CD  084D               	movf	(efgtoa@u+1)^(0+128),w
 10637     05CE  1283               	bcf	3,5	;RP0=0, select bank0
 10638     05CF  1303               	bcf	3,6	;RP1=0, select bank0
 10639     05D0  00BB               	movwf	___fldiv@a+1
 10640     05D1  1683               	bsf	3,5	;RP0=1, select bank1
 10641     05D2  1303               	bcf	3,6	;RP1=0, select bank1
 10642     05D3  084C               	movf	efgtoa@u^(0+128),w
 10643     05D4  1283               	bcf	3,5	;RP0=0, select bank0
 10644     05D5  1303               	bcf	3,6	;RP1=0, select bank0
 10645     05D6  00BA               	movwf	___fldiv@a
 10646     05D7  1683               	bsf	3,5	;RP0=1, select bank1
 10647     05D8  1303               	bcf	3,6	;RP1=0, select bank1
 10648     05D9  0840               	movf	(efgtoa@h+3)^(0+128),w
 10649     05DA  1283               	bcf	3,5	;RP0=0, select bank0
 10650     05DB  1303               	bcf	3,6	;RP1=0, select bank0
 10651     05DC  00C1               	movwf	___fldiv@b+3
 10652     05DD  1683               	bsf	3,5	;RP0=1, select bank1
 10653     05DE  1303               	bcf	3,6	;RP1=0, select bank1
 10654     05DF  083F               	movf	(efgtoa@h+2)^(0+128),w
 10655     05E0  1283               	bcf	3,5	;RP0=0, select bank0
 10656     05E1  1303               	bcf	3,6	;RP1=0, select bank0
 10657     05E2  00C0               	movwf	___fldiv@b+2
 10658     05E3  1683               	bsf	3,5	;RP0=1, select bank1
 10659     05E4  1303               	bcf	3,6	;RP1=0, select bank1
 10660     05E5  083E               	movf	(efgtoa@h+1)^(0+128),w
 10661     05E6  1283               	bcf	3,5	;RP0=0, select bank0
 10662     05E7  1303               	bcf	3,6	;RP1=0, select bank0
 10663     05E8  00BF               	movwf	___fldiv@b+1
 10664     05E9  1683               	bsf	3,5	;RP0=1, select bank1
 10665     05EA  1303               	bcf	3,6	;RP1=0, select bank1
 10666     05EB  083D               	movf	efgtoa@h^(0+128),w
 10667     05EC  1283               	bcf	3,5	;RP0=0, select bank0
 10668     05ED  1303               	bcf	3,6	;RP1=0, select bank0
 10669     05EE  00BE               	movwf	___fldiv@b
 10670     05EF  120A  158A  2098  120A  118A  	fcall	___fldiv
 10671     05F4  1283               	bcf	3,5	;RP0=0, select bank0
 10672     05F5  1303               	bcf	3,6	;RP1=0, select bank0
 10673     05F6  083D               	movf	?___fldiv+3,w
 10674     05F7  00D7               	movwf	floorf@x+3
 10675     05F8  083C               	movf	?___fldiv+2,w
 10676     05F9  00D6               	movwf	floorf@x+2
 10677     05FA  083B               	movf	?___fldiv+1,w
 10678     05FB  00D5               	movwf	floorf@x+1
 10679     05FC  083A               	movf	?___fldiv,w
 10680     05FD  00D4               	movwf	floorf@x
 10681     05FE  160A  118A  26F1  120A  118A  	fcall	_floorf
 10682     0603  1283               	bcf	3,5	;RP0=0, select bank0
 10683     0604  1303               	bcf	3,6	;RP1=0, select bank0
 10684     0605  0857               	movf	?_floorf+3,w
 10685     0606  1683               	bsf	3,5	;RP0=1, select bank1
 10686     0607  1303               	bcf	3,6	;RP1=0, select bank1
 10687     0608  00C4               	movwf	(efgtoa@l+3)^(0+128)
 10688     0609  1283               	bcf	3,5	;RP0=0, select bank0
 10689     060A  1303               	bcf	3,6	;RP1=0, select bank0
 10690     060B  0856               	movf	?_floorf+2,w
 10691     060C  1683               	bsf	3,5	;RP0=1, select bank1
 10692     060D  1303               	bcf	3,6	;RP1=0, select bank1
 10693     060E  00C3               	movwf	(efgtoa@l+2)^(0+128)
 10694     060F  1283               	bcf	3,5	;RP0=0, select bank0
 10695     0610  1303               	bcf	3,6	;RP1=0, select bank0
 10696     0611  0855               	movf	?_floorf+1,w
 10697     0612  1683               	bsf	3,5	;RP0=1, select bank1
 10698     0613  1303               	bcf	3,6	;RP1=0, select bank1
 10699     0614  00C2               	movwf	(efgtoa@l+1)^(0+128)
 10700     0615  1283               	bcf	3,5	;RP0=0, select bank0
 10701     0616  1303               	bcf	3,6	;RP1=0, select bank0
 10702     0617  0854               	movf	?_floorf,w
 10703     0618  1683               	bsf	3,5	;RP0=1, select bank1
 10704     0619  1303               	bcf	3,6	;RP1=0, select bank1
 10705     061A  00C1               	movwf	efgtoa@l^(0+128)
 10706                           
 10707                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 10708     061B  0844               	movf	(efgtoa@l+3)^(0+128),w
 10709     061C  00F3               	movwf	___fltol@f1+3
 10710     061D  0843               	movf	(efgtoa@l+2)^(0+128),w
 10711     061E  00F2               	movwf	___fltol@f1+2
 10712     061F  0842               	movf	(efgtoa@l+1)^(0+128),w
 10713     0620  00F1               	movwf	___fltol@f1+1
 10714     0621  0841               	movf	efgtoa@l^(0+128),w
 10715     0622  00F0               	movwf	___fltol@f1
 10716     0623  160A  158A  278C  120A  118A  	fcall	___fltol
 10717     0628  0871               	movf	?___fltol+1,w
 10718     0629  3A80               	xorlw	128
 10719     062A  00FF               	movwf	btemp+1
 10720     062B  3080               	movlw	128
 10721     062C  027F               	subwf	btemp+1,w
 10722     062D  1D03               	skipz
 10723     062E  2E31               	goto	u4425
 10724     062F  300A               	movlw	10
 10725     0630  0270               	subwf	?___fltol,w
 10726     0631                     u4425:
 10727     0631  1803               	skipnc
 10728     0632  2E34               	goto	u4421
 10729     0633  2E35               	goto	u4420
 10730     0634                     u4421:
 10731     0634  2E4B               	goto	l2972
 10732     0635                     u4420:
 10733     0635                     l2970:
 10734     0635  1683               	bsf	3,5	;RP0=1, select bank1
 10735     0636  1303               	bcf	3,6	;RP1=0, select bank1
 10736     0637  0844               	movf	(efgtoa@l+3)^(0+128),w
 10737     0638  00F3               	movwf	___fltol@f1+3
 10738     0639  0843               	movf	(efgtoa@l+2)^(0+128),w
 10739     063A  00F2               	movwf	___fltol@f1+2
 10740     063B  0842               	movf	(efgtoa@l+1)^(0+128),w
 10741     063C  00F1               	movwf	___fltol@f1+1
 10742     063D  0841               	movf	efgtoa@l^(0+128),w
 10743     063E  00F0               	movwf	___fltol@f1
 10744     063F  160A  158A  278C  120A  118A  	fcall	___fltol
 10745     0644  0871               	movf	?___fltol+1,w
 10746     0645  1683               	bsf	3,5	;RP0=1, select bank1
 10747     0646  1303               	bcf	3,6	;RP1=0, select bank1
 10748     0647  00B0               	movwf	(efgtoa@d+1)^(0+128)
 10749     0648  0870               	movf	?___fltol,w
 10750     0649  00AF               	movwf	efgtoa@d^(0+128)
 10751     064A  2E51               	goto	l2974
 10752     064B                     l2972:
 10753     064B  3009               	movlw	9
 10754     064C  1683               	bsf	3,5	;RP0=1, select bank1
 10755     064D  1303               	bcf	3,6	;RP1=0, select bank1
 10756     064E  00AF               	movwf	efgtoa@d^(0+128)
 10757     064F  3000               	movlw	0
 10758     0650  00B0               	movwf	(efgtoa@d^(0+128)+1)
 10759     0651                     l2974:
 10760                           
 10761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 10762     0651  082C               	movf	efgtoa@pp^(0+128),w
 10763     0652  1D03               	btfss	3,2
 10764     0653  2E55               	goto	u4431
 10765     0654  2E56               	goto	u4430
 10766     0655                     u4431:
 10767     0655  2E87               	goto	l2994
 10768     0656                     u4430:
 10769     0656                     l2976:
 10770     0656  1FA5               	btfss	(efgtoa@ne+1)^(0+128),7
 10771     0657  2E59               	goto	u4441
 10772     0658  2E5A               	goto	u4440
 10773     0659                     u4441:
 10774     0659  2E87               	goto	l2994
 10775     065A                     u4440:
 10776     065A                     l2978:
 10777                           
 10778                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 10779     065A  0846               	movf	efgtoa@n^(0+128),w
 10780     065B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10781     065C  0084               	movwf	4
 10782     065D  302E               	movlw	46
 10783     065E  1783               	bsf	3,7	;select IRP bank2
 10784     065F  0080               	movwf	0
 10785     0660                     l2980:
 10786     0660  3001               	movlw	1
 10787     0661  07C6               	addwf	efgtoa@n^(0+128),f
 10788     0662  1803               	skipnc
 10789     0663  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 10790     0664  3000               	movlw	0
 10791     0665  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 10792     0666                     l2982:
 10793                           
 10794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 10795     0666  30FF               	movlw	255
 10796     0667  07B5               	addwf	efgtoa@w^(0+128),f
 10797     0668  1803               	skipnc
 10798     0669  0AB6               	incf	(efgtoa@w+1)^(0+128),f
 10799     066A  30FF               	movlw	255
 10800     066B  07B6               	addwf	(efgtoa@w+1)^(0+128),f
 10801     066C                     l2984:
 10802                           
 10803                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 10804     066C  3001               	movlw	1
 10805     066D  00AC               	movwf	efgtoa@pp^(0+128)
 10806     066E  2E87               	goto	l2994
 10807     066F                     l2986:
 10808                           
 10809                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 10810     066F  0846               	movf	efgtoa@n^(0+128),w
 10811     0670  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10812     0671  0084               	movwf	4
 10813     0672  3030               	movlw	48
 10814     0673  1783               	bsf	3,7	;select IRP bank2
 10815     0674  0080               	movwf	0
 10816     0675                     l2988:
 10817     0675  3001               	movlw	1
 10818     0676  07C6               	addwf	efgtoa@n^(0+128),f
 10819     0677  1803               	skipnc
 10820     0678  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 10821     0679  3000               	movlw	0
 10822     067A  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 10823     067B                     l2990:
 10824                           
 10825                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 10826     067B  30FF               	movlw	255
 10827     067C  07B5               	addwf	efgtoa@w^(0+128),f
 10828     067D  1803               	skipnc
 10829     067E  0AB6               	incf	(efgtoa@w+1)^(0+128),f
 10830     067F  30FF               	movlw	255
 10831     0680  07B6               	addwf	(efgtoa@w+1)^(0+128),f
 10832     0681                     l2992:
 10833                           
 10834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 10835     0681  30FF               	movlw	255
 10836     0682  07A8               	addwf	efgtoa@t^(0+128),f
 10837     0683  1803               	skipnc
 10838     0684  0AA9               	incf	(efgtoa@t+1)^(0+128),f
 10839     0685  30FF               	movlw	255
 10840     0686  07A9               	addwf	(efgtoa@t+1)^(0+128),f
 10841     0687                     l2994:
 10842                           
 10843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 10844     0687  0828               	movf	efgtoa@t^(0+128),w
 10845     0688  0429               	iorwf	(efgtoa@t+1)^(0+128),w
 10846     0689  1D03               	btfss	3,2
 10847     068A  2E8C               	goto	u4451
 10848     068B  2E8D               	goto	u4450
 10849     068C                     u4451:
 10850     068C  2E6F               	goto	l2986
 10851     068D                     u4450:
 10852     068D                     l2996:
 10853                           
 10854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 10855     068D  0846               	movf	efgtoa@n^(0+128),w
 10856     068E  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10857     068F  0084               	movwf	4
 10858     0690  082F               	movf	efgtoa@d^(0+128),w
 10859     0691  3E30               	addlw	48
 10860     0692  1783               	bsf	3,7	;select IRP bank2
 10861     0693  0080               	movwf	0
 10862     0694                     l2998:
 10863     0694  3001               	movlw	1
 10864     0695  07C6               	addwf	efgtoa@n^(0+128),f
 10865     0696  1803               	skipnc
 10866     0697  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 10867     0698  3000               	movlw	0
 10868     0699  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 10869     069A                     l3000:
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 10872     069A  30FF               	movlw	255
 10873     069B  07B5               	addwf	efgtoa@w^(0+128),f
 10874     069C  1803               	skipnc
 10875     069D  0AB6               	incf	(efgtoa@w+1)^(0+128),f
 10876     069E  30FF               	movlw	255
 10877     069F  07B6               	addwf	(efgtoa@w+1)^(0+128),f
 10878     06A0                     l3002:
 10879                           
 10880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 10881     06A0  084F               	movf	(efgtoa@u+3)^(0+128),w
 10882     06A1  1283               	bcf	3,5	;RP0=0, select bank0
 10883     06A2  1303               	bcf	3,6	;RP1=0, select bank0
 10884     06A3  00A7               	movwf	___flmul@a+3
 10885     06A4  1683               	bsf	3,5	;RP0=1, select bank1
 10886     06A5  1303               	bcf	3,6	;RP1=0, select bank1
 10887     06A6  084E               	movf	(efgtoa@u+2)^(0+128),w
 10888     06A7  1283               	bcf	3,5	;RP0=0, select bank0
 10889     06A8  1303               	bcf	3,6	;RP1=0, select bank0
 10890     06A9  00A6               	movwf	___flmul@a+2
 10891     06AA  1683               	bsf	3,5	;RP0=1, select bank1
 10892     06AB  1303               	bcf	3,6	;RP1=0, select bank1
 10893     06AC  084D               	movf	(efgtoa@u+1)^(0+128),w
 10894     06AD  1283               	bcf	3,5	;RP0=0, select bank0
 10895     06AE  1303               	bcf	3,6	;RP1=0, select bank0
 10896     06AF  00A5               	movwf	___flmul@a+1
 10897     06B0  1683               	bsf	3,5	;RP0=1, select bank1
 10898     06B1  1303               	bcf	3,6	;RP1=0, select bank1
 10899     06B2  084C               	movf	efgtoa@u^(0+128),w
 10900     06B3  1283               	bcf	3,5	;RP0=0, select bank0
 10901     06B4  1303               	bcf	3,6	;RP1=0, select bank0
 10902     06B5  00A4               	movwf	___flmul@a
 10903     06B6  1683               	bsf	3,5	;RP0=1, select bank1
 10904     06B7  1303               	bcf	3,6	;RP1=0, select bank1
 10905     06B8  0844               	movf	(efgtoa@l+3)^(0+128),w
 10906     06B9  1283               	bcf	3,5	;RP0=0, select bank0
 10907     06BA  1303               	bcf	3,6	;RP1=0, select bank0
 10908     06BB  00A3               	movwf	___flmul@b+3
 10909     06BC  1683               	bsf	3,5	;RP0=1, select bank1
 10910     06BD  1303               	bcf	3,6	;RP1=0, select bank1
 10911     06BE  0843               	movf	(efgtoa@l+2)^(0+128),w
 10912     06BF  1283               	bcf	3,5	;RP0=0, select bank0
 10913     06C0  1303               	bcf	3,6	;RP1=0, select bank0
 10914     06C1  00A2               	movwf	___flmul@b+2
 10915     06C2  1683               	bsf	3,5	;RP0=1, select bank1
 10916     06C3  1303               	bcf	3,6	;RP1=0, select bank1
 10917     06C4  0842               	movf	(efgtoa@l+1)^(0+128),w
 10918     06C5  1283               	bcf	3,5	;RP0=0, select bank0
 10919     06C6  1303               	bcf	3,6	;RP1=0, select bank0
 10920     06C7  00A1               	movwf	___flmul@b+1
 10921     06C8  1683               	bsf	3,5	;RP0=1, select bank1
 10922     06C9  1303               	bcf	3,6	;RP1=0, select bank1
 10923     06CA  0841               	movf	efgtoa@l^(0+128),w
 10924     06CB  1283               	bcf	3,5	;RP0=0, select bank0
 10925     06CC  1303               	bcf	3,6	;RP1=0, select bank0
 10926     06CD  00A0               	movwf	___flmul@b
 10927     06CE  120A  158A  24BE  120A  118A  	fcall	___flmul
 10928     06D3  1283               	bcf	3,5	;RP0=0, select bank0
 10929     06D4  1303               	bcf	3,6	;RP1=0, select bank0
 10930     06D5  0823               	movf	?___flmul+3,w
 10931     06D6  00BD               	movwf	___flsub@a+3
 10932     06D7  0822               	movf	?___flmul+2,w
 10933     06D8  00BC               	movwf	___flsub@a+2
 10934     06D9  0821               	movf	?___flmul+1,w
 10935     06DA  00BB               	movwf	___flsub@a+1
 10936     06DB  0820               	movf	?___flmul,w
 10937     06DC  00BA               	movwf	___flsub@a
 10938     06DD  1683               	bsf	3,5	;RP0=1, select bank1
 10939     06DE  1303               	bcf	3,6	;RP1=0, select bank1
 10940     06DF  0840               	movf	(efgtoa@h+3)^(0+128),w
 10941     06E0  1283               	bcf	3,5	;RP0=0, select bank0
 10942     06E1  1303               	bcf	3,6	;RP1=0, select bank0
 10943     06E2  00C1               	movwf	___flsub@b+3
 10944     06E3  1683               	bsf	3,5	;RP0=1, select bank1
 10945     06E4  1303               	bcf	3,6	;RP1=0, select bank1
 10946     06E5  083F               	movf	(efgtoa@h+2)^(0+128),w
 10947     06E6  1283               	bcf	3,5	;RP0=0, select bank0
 10948     06E7  1303               	bcf	3,6	;RP1=0, select bank0
 10949     06E8  00C0               	movwf	___flsub@b+2
 10950     06E9  1683               	bsf	3,5	;RP0=1, select bank1
 10951     06EA  1303               	bcf	3,6	;RP1=0, select bank1
 10952     06EB  083E               	movf	(efgtoa@h+1)^(0+128),w
 10953     06EC  1283               	bcf	3,5	;RP0=0, select bank0
 10954     06ED  1303               	bcf	3,6	;RP1=0, select bank0
 10955     06EE  00BF               	movwf	___flsub@b+1
 10956     06EF  1683               	bsf	3,5	;RP0=1, select bank1
 10957     06F0  1303               	bcf	3,6	;RP1=0, select bank1
 10958     06F1  083D               	movf	efgtoa@h^(0+128),w
 10959     06F2  1283               	bcf	3,5	;RP0=0, select bank0
 10960     06F3  1303               	bcf	3,6	;RP1=0, select bank0
 10961     06F4  00BE               	movwf	___flsub@b
 10962     06F5  160A  158A  25E3  120A  118A  	fcall	___flsub
 10963     06FA  1283               	bcf	3,5	;RP0=0, select bank0
 10964     06FB  1303               	bcf	3,6	;RP1=0, select bank0
 10965     06FC  083D               	movf	?___flsub+3,w
 10966     06FD  1683               	bsf	3,5	;RP0=1, select bank1
 10967     06FE  1303               	bcf	3,6	;RP1=0, select bank1
 10968     06FF  00C0               	movwf	(efgtoa@h+3)^(0+128)
 10969     0700  1283               	bcf	3,5	;RP0=0, select bank0
 10970     0701  1303               	bcf	3,6	;RP1=0, select bank0
 10971     0702  083C               	movf	?___flsub+2,w
 10972     0703  1683               	bsf	3,5	;RP0=1, select bank1
 10973     0704  1303               	bcf	3,6	;RP1=0, select bank1
 10974     0705  00BF               	movwf	(efgtoa@h+2)^(0+128)
 10975     0706  1283               	bcf	3,5	;RP0=0, select bank0
 10976     0707  1303               	bcf	3,6	;RP1=0, select bank0
 10977     0708  083B               	movf	?___flsub+1,w
 10978     0709  1683               	bsf	3,5	;RP0=1, select bank1
 10979     070A  1303               	bcf	3,6	;RP1=0, select bank1
 10980     070B  00BE               	movwf	(efgtoa@h+1)^(0+128)
 10981     070C  1283               	bcf	3,5	;RP0=0, select bank0
 10982     070D  1303               	bcf	3,6	;RP1=0, select bank0
 10983     070E  083A               	movf	?___flsub,w
 10984     070F  1683               	bsf	3,5	;RP0=1, select bank1
 10985     0710  1303               	bcf	3,6	;RP1=0, select bank1
 10986     0711  00BD               	movwf	efgtoa@h^(0+128)
 10987     0712                     l3004:
 10988                           
 10989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 10990     0712  3041               	movlw	65
 10991     0713  1283               	bcf	3,5	;RP0=0, select bank0
 10992     0714  1303               	bcf	3,6	;RP1=0, select bank0
 10993     0715  00BD               	movwf	___fldiv@a+3
 10994     0716  3020               	movlw	32
 10995     0717  00BC               	movwf	___fldiv@a+2
 10996     0718  3000               	movlw	0
 10997     0719  00BB               	movwf	___fldiv@a+1
 10998     071A  3000               	movlw	0
 10999     071B  00BA               	movwf	___fldiv@a
 11000     071C  1683               	bsf	3,5	;RP0=1, select bank1
 11001     071D  1303               	bcf	3,6	;RP1=0, select bank1
 11002     071E  084F               	movf	(efgtoa@u+3)^(0+128),w
 11003     071F  1283               	bcf	3,5	;RP0=0, select bank0
 11004     0720  1303               	bcf	3,6	;RP1=0, select bank0
 11005     0721  00C1               	movwf	___fldiv@b+3
 11006     0722  1683               	bsf	3,5	;RP0=1, select bank1
 11007     0723  1303               	bcf	3,6	;RP1=0, select bank1
 11008     0724  084E               	movf	(efgtoa@u+2)^(0+128),w
 11009     0725  1283               	bcf	3,5	;RP0=0, select bank0
 11010     0726  1303               	bcf	3,6	;RP1=0, select bank0
 11011     0727  00C0               	movwf	___fldiv@b+2
 11012     0728  1683               	bsf	3,5	;RP0=1, select bank1
 11013     0729  1303               	bcf	3,6	;RP1=0, select bank1
 11014     072A  084D               	movf	(efgtoa@u+1)^(0+128),w
 11015     072B  1283               	bcf	3,5	;RP0=0, select bank0
 11016     072C  1303               	bcf	3,6	;RP1=0, select bank0
 11017     072D  00BF               	movwf	___fldiv@b+1
 11018     072E  1683               	bsf	3,5	;RP0=1, select bank1
 11019     072F  1303               	bcf	3,6	;RP1=0, select bank1
 11020     0730  084C               	movf	efgtoa@u^(0+128),w
 11021     0731  1283               	bcf	3,5	;RP0=0, select bank0
 11022     0732  1303               	bcf	3,6	;RP1=0, select bank0
 11023     0733  00BE               	movwf	___fldiv@b
 11024     0734  120A  158A  2098  120A  118A  	fcall	___fldiv
 11025     0739  1283               	bcf	3,5	;RP0=0, select bank0
 11026     073A  1303               	bcf	3,6	;RP1=0, select bank0
 11027     073B  083D               	movf	?___fldiv+3,w
 11028     073C  1683               	bsf	3,5	;RP0=1, select bank1
 11029     073D  1303               	bcf	3,6	;RP1=0, select bank1
 11030     073E  00CF               	movwf	(efgtoa@u+3)^(0+128)
 11031     073F  1283               	bcf	3,5	;RP0=0, select bank0
 11032     0740  1303               	bcf	3,6	;RP1=0, select bank0
 11033     0741  083C               	movf	?___fldiv+2,w
 11034     0742  1683               	bsf	3,5	;RP0=1, select bank1
 11035     0743  1303               	bcf	3,6	;RP1=0, select bank1
 11036     0744  00CE               	movwf	(efgtoa@u+2)^(0+128)
 11037     0745  1283               	bcf	3,5	;RP0=0, select bank0
 11038     0746  1303               	bcf	3,6	;RP1=0, select bank0
 11039     0747  083B               	movf	?___fldiv+1,w
 11040     0748  1683               	bsf	3,5	;RP0=1, select bank1
 11041     0749  1303               	bcf	3,6	;RP1=0, select bank1
 11042     074A  00CD               	movwf	(efgtoa@u+1)^(0+128)
 11043     074B  1283               	bcf	3,5	;RP0=0, select bank0
 11044     074C  1303               	bcf	3,6	;RP1=0, select bank0
 11045     074D  083A               	movf	?___fldiv,w
 11046     074E  1683               	bsf	3,5	;RP0=1, select bank1
 11047     074F  1303               	bcf	3,6	;RP1=0, select bank1
 11048     0750  00CC               	movwf	efgtoa@u^(0+128)
 11049     0751                     l3006:
 11050                           
 11051                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 11052     0751  30FF               	movlw	255
 11053     0752  07A4               	addwf	efgtoa@ne^(0+128),f
 11054     0753  1803               	skipnc
 11055     0754  0AA5               	incf	(efgtoa@ne+1)^(0+128),f
 11056     0755  30FF               	movlw	255
 11057     0756  07A5               	addwf	(efgtoa@ne+1)^(0+128),f
 11058     0757                     l3008:
 11059                           
 11060                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 11061     0757  3001               	movlw	1
 11062     0758  07BB               	addwf	efgtoa@i^(0+128),f
 11063     0759  1803               	skipnc
 11064     075A  0ABC               	incf	(efgtoa@i+1)^(0+128),f
 11065     075B  3000               	movlw	0
 11066     075C  07BC               	addwf	(efgtoa@i+1)^(0+128),f
 11067     075D                     l3010:
 11068                           
 11069                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11070     075D  083C               	movf	(efgtoa@i+1)^(0+128),w
 11071     075E  3A80               	xorlw	128
 11072     075F  00A0               	movwf	??_efgtoa^(0+128)
 11073     0760  0832               	movf	(efgtoa@m+1)^(0+128),w
 11074     0761  3A80               	xorlw	128
 11075     0762  0220               	subwf	??_efgtoa^(0+128),w
 11076     0763  1D03               	skipz
 11077     0764  2F67               	goto	u4465
 11078     0765  0831               	movf	efgtoa@m^(0+128),w
 11079     0766  023B               	subwf	efgtoa@i^(0+128),w
 11080     0767                     u4465:
 11081     0767  1803               	skipnc
 11082     0768  2F6A               	goto	u4461
 11083     0769  2F6B               	goto	u4460
 11084     076A                     u4461:
 11085     076A  2F7A               	goto	l3014
 11086     076B                     u4460:
 11087     076B                     l3012:
 11088     076B  1683               	bsf	3,5	;RP0=1, select bank1
 11089     076C  1303               	bcf	3,6	;RP1=0, select bank1
 11090     076D  0847               	movf	(efgtoa@n+1)^(0+128),w
 11091     076E  3A80               	xorlw	128
 11092     076F  00FF               	movwf	btemp+1
 11093     0770  3080               	movlw	128
 11094     0771  027F               	subwf	btemp+1,w
 11095     0772  1D03               	skipz
 11096     0773  2F76               	goto	u4475
 11097     0774  304B               	movlw	75
 11098     0775  0246               	subwf	efgtoa@n^(0+128),w
 11099     0776                     u4475:
 11100     0776  1C03               	skipc
 11101     0777  2F79               	goto	u4471
 11102     0778  2F7A               	goto	u4470
 11103     0779                     u4471:
 11104     0779  2DBF               	goto	l2968
 11105     077A                     u4470:
 11106     077A                     l3014:
 11107                           
 11108                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 11109     077A  304F               	movlw	79
 11110     077B  1683               	bsf	3,5	;RP0=1, select bank1
 11111     077C  1303               	bcf	3,6	;RP1=0, select bank1
 11112     077D  00BB               	movwf	efgtoa@i^(0+128)
 11113     077E  3000               	movlw	0
 11114     077F  00BC               	movwf	(efgtoa@i^(0+128)+1)
 11115     0780                     l3016:
 11116                           
 11117                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 11118     0780  083B               	movf	efgtoa@i^(0+128),w
 11119     0781  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11120     0782  0084               	movwf	4
 11121     0783  1783               	bsf	3,7	;select IRP bank2
 11122     0784  0180               	clrf	0
 11123     0785                     l3018:
 11124                           
 11125                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 11126     0785  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11127     0786  00A0               	movwf	??_efgtoa^(0+128)
 11128     0787  0846               	movf	efgtoa@n^(0+128),w
 11129     0788  02A0               	subwf	??_efgtoa^(0+128),f
 11130     0789  083B               	movf	efgtoa@i^(0+128),w
 11131     078A  0720               	addwf	??_efgtoa^(0+128),w
 11132     078B  00F0               	movwf	memcpy@d1
 11133     078C  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11134     078D  00F1               	movwf	memcpy@s1
 11135     078E  0847               	movf	(efgtoa@n+1)^(0+128),w
 11136     078F  00F3               	movwf	memcpy@n+1
 11137     0790  0846               	movf	efgtoa@n^(0+128),w
 11138     0791  00F2               	movwf	memcpy@n
 11139     0792  160A  158A  25C2  120A  118A  	fcall	_memcpy
 11140     0797                     l3020:
 11141                           
 11142                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11143     0797  1683               	bsf	3,5	;RP0=1, select bank1
 11144     0798  1303               	bcf	3,6	;RP1=0, select bank1
 11145     0799  0846               	movf	efgtoa@n^(0+128),w
 11146     079A  023B               	subwf	efgtoa@i^(0+128),w
 11147     079B  00C6               	movwf	efgtoa@n^(0+128)
 11148     079C  0847               	movf	(efgtoa@n+1)^(0+128),w
 11149     079D  1C03               	skipc
 11150     079E  0A47               	incf	(efgtoa@n+1)^(0+128),w
 11151     079F  023C               	subwf	(efgtoa@i+1)^(0+128),w
 11152     07A0  00C7               	movwf	(efgtoa@n+1)^(0+128)
 11153     07A1                     l3022:
 11154                           
 11155                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 11156     07A1  0845               	movf	efgtoa@sign^(0+128),w
 11157     07A2  1D03               	btfss	3,2
 11158     07A3  2FA5               	goto	u4481
 11159     07A4  2FA7               	goto	u4480
 11160     07A5                     u4481:
 11161     07A5  3001               	movlw	1
 11162     07A6  2FA8               	goto	u4490
 11163     07A7                     u4480:
 11164     07A7  3000               	movlw	0
 11165     07A8                     u4490:
 11166     07A8  00A0               	movwf	??_efgtoa^(0+128)
 11167     07A9  01A1               	clrf	(??_efgtoa^(0+128)+1)
 11168     07AA  0820               	movf	??_efgtoa^(0+128),w
 11169     07AB  00BB               	movwf	efgtoa@i^(0+128)
 11170     07AC  0821               	movf	(??_efgtoa+1)^(0+128),w
 11171     07AD  00BC               	movwf	(efgtoa@i+1)^(0+128)
 11172     07AE                     l3024:
 11173                           
 11174                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11175     07AE  0845               	movf	efgtoa@sign^(0+128),w
 11176     07AF  1903               	btfsc	3,2
 11177     07B0  2FB2               	goto	u4501
 11178     07B1  2FB3               	goto	u4500
 11179     07B2                     u4501:
 11180     07B2  2FBF               	goto	l3028
 11181     07B3                     u4500:
 11182     07B3                     l3026:
 11183                           
 11184                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 11185     07B3  30FF               	movlw	255
 11186     07B4  07C6               	addwf	efgtoa@n^(0+128),f
 11187     07B5  1803               	skipnc
 11188     07B6  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 11189     07B7  30FF               	movlw	255
 11190     07B8  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 11191     07B9  0846               	movf	efgtoa@n^(0+128),w
 11192     07BA  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11193     07BB  0084               	movwf	4
 11194     07BC  0845               	movf	efgtoa@sign^(0+128),w
 11195     07BD  1783               	bsf	3,7	;select IRP bank2
 11196     07BE  0080               	movwf	0
 11197     07BF                     l3028:
 11198                           
 11199                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11200     07BF  083B               	movf	efgtoa@i^(0+128),w
 11201     07C0  02B5               	subwf	efgtoa@w^(0+128),f
 11202     07C1  083C               	movf	(efgtoa@i+1)^(0+128),w
 11203     07C2  1C03               	skipc
 11204     07C3  03B6               	decf	(efgtoa@w+1)^(0+128),f
 11205     07C4  02B6               	subwf	(efgtoa@w+1)^(0+128),f
 11206     07C5                     l3030:
 11207                           
 11208                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 11209     07C5  1283               	bcf	3,5	;RP0=0, select bank0
 11210     07C6  1303               	bcf	3,6	;RP1=0, select bank0
 11211     07C7  0868               	movf	efgtoa@fp,w
 11212     07C8  00A8               	movwf	pad@fp
 11213     07C9  0869               	movf	efgtoa@fp+1,w
 11214     07CA  00A9               	movwf	pad@fp+1
 11215     07CB  1683               	bsf	3,5	;RP0=1, select bank1
 11216     07CC  1303               	bcf	3,6	;RP1=0, select bank1
 11217     07CD  0846               	movf	efgtoa@n^(0+128),w
 11218     07CE  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11219     07CF  1283               	bcf	3,5	;RP0=0, select bank0
 11220     07D0  1303               	bcf	3,6	;RP1=0, select bank0
 11221     07D1  00AA               	movwf	pad@buf
 11222     07D2  1683               	bsf	3,5	;RP0=1, select bank1
 11223     07D3  1303               	bcf	3,6	;RP1=0, select bank1
 11224     07D4  0836               	movf	(efgtoa@w+1)^(0+128),w
 11225     07D5  1283               	bcf	3,5	;RP0=0, select bank0
 11226     07D6  1303               	bcf	3,6	;RP1=0, select bank0
 11227     07D7  00AC               	movwf	pad@p+1
 11228     07D8  1683               	bsf	3,5	;RP0=1, select bank1
 11229     07D9  1303               	bcf	3,6	;RP1=0, select bank1
 11230     07DA  0835               	movf	efgtoa@w^(0+128),w
 11231     07DB  1283               	bcf	3,5	;RP0=0, select bank0
 11232     07DC  1303               	bcf	3,6	;RP1=0, select bank0
 11233     07DD  00AB               	movwf	pad@p
 11234     07DE  160A  158A  2700  120A  118A  	fcall	_pad
 11235     07E3                     l750:
 11236     07E3  0008               	return
 11237     07E4                     __end_of_efgtoa:

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     74      79
    BANK3            96     45      53
    BANK2            96      0      80

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer(BANK3[20]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer(BANK3[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    MCP3421_GetDouble@adc	PTR struct . size(2) Largest target is 5
		 -> main@adc(BANK3[5]), 

    MCP3421_GetLong@adc	PTR struct . size(2) Largest target is 5
		 -> main@adc(BANK3[5]), 

    MCP3421_Init@adc	PTR struct . size(2) Largest target is 5
		 -> main@adc(BANK3[5]), 

    MCP3421_Ready@adc	PTR struct . size(2) Largest target is 5
		 -> main@adc(BANK3[5]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S623$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer(BANK3[20]), 

    S623$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK3[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK3[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _UART_Write_Text->_UART_Write
    _MCP3421_Ready->_I2C_Master_Write
    _MCP3421_Init->_I2C_Master_Write
    _MCP3421_GetDouble->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _MCP3421_GetLong->_I2C_Master_Write

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _MCP3421_GetDouble->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   18215
                                             71 BANK1      3     3      0
                                             12 BANK3     33    33      0
                    _I2C_Master_Init
                  _MCP3421_GetDouble
                       _MCP3421_Init
                      _MCP3421_Ready
                       _UART_TX_Init
                    _UART_Write_Text
                            ___flmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   12421
                                             64 BANK1      7     1      6
                                              0 BANK3     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4   12216
                                             79 BANK0      1     1      0
                                             60 BANK1      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4   12082
                                             48 BANK1     12     8      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     276
                                              6 COMMON     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   11058
                                             72 BANK0      7     0      7
                                              0 BANK1     48    48      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     1      2      77
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     707
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     331
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4      69
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     137
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2039
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1990
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     192
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      1     0      1      75
                                              1 COMMON     1     0      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              0 COMMON     1     1      0
                      _UART_TX_Empty
 ---------------------------------------------------------------------------------
 (3) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP3421_Ready                                        5     3      2      75
                                              1 COMMON     5     3      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _MCP3421_Init                                        14     8      6     363
                                              1 COMMON     6     0      6
                                              0 BANK0      8     8      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _MCP3421_GetDouble                                   18    14      4    3472
                                             52 BANK0     18    14      4
                    _MCP3421_GetLong
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     339
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    1622
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1136
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _MCP3421_GetLong                                     26    22      4     239
                                              1 COMMON    11     7      4
                                              0 BANK0     14    14      0
                            _I2C_ACK
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _MCP3421_GetDouble
     _MCP3421_GetLong
       _I2C_ACK
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_NACK
         _I2C_Master_Wait
       _I2C_Read_Byte
         _I2C_Master_Wait
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _MCP3421_Init
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _MCP3421_Ready
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_NACK
     _I2C_Read_Byte
   _UART_TX_Init
   _UART_Write_Text
     _UART_Write
       _UART_TX_Empty
   ___flmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     80      80    100.0%
BANK1               80     74      79     98.8%
BANK3               96     45      53     55.2%
BANK2               96      0      80     83.3%
STACK                0      0       0      0.0%
DATA                 0      0     306      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 05 15:02:30 2025

              ___fldiv@aexp 0053                ___fldiv@bexp 0052                           pc 0002  
              ___fldiv@sign 004B                          _BF 04A0                          l60 1D3A  
                        l63 1D3B                          l81 1D2D                          l66 1D47  
                        l90 1DAB                          l75 1D15                          l84 1D52  
                        l92 1DB0                          l69 1D0C                          l78 1D21  
                        l86 1D56                          l94 1DC1                          l87 1D57  
                        fsr 0004         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
                       l120 1CFB                         l132 1D8D                         l117 1D79  
                       l126 1D67                         l153 1404                         l147 132A  
                       l156 14DE                         l420 1F8B                         l245 1E13  
                       l414 1F5A                         l159 1EFF                         l415 1F76  
                       l431 11AC                         l423 1127                         l247 1E2B  
                       l602 08ED                         l426 1193                         l435 080A  
                       l604 0A61                         l700 1236                         l541 0A8E  
                       l550 0B3E                         l446 1FEA                         l439 1FFF  
                       l624 0A4D                         l552 0B17                         l449 1FFF  
                       l626 0A59                         l618 09DB                         l642 0FFF  
                       l546 0ABF                         l571 0C30                         l580 0C91  
                       l708 1ED1                         l661 1E40                         l654 0FF5  
                       l750 07E3                         l663 1E52                         l567 0C0A  
                       l559 0CBD                         l735 1F08                         l648 0F71  
                       l592 1E06                         l808 152E                         l577 0C53  
                       l842 173E                         l826 1E7B                         l843 17FF  
                       l739 1F3D                         l747 165E                         l819 15E5  
                       l692 120E                         l588 0CB1                         l836 0897  
                       l860 1DD4                         l589 0CBD                         l686 11CF  
                       l766 02CE                         l687 11E0                         l847 17F7  
                       l863 1DE2                         l688 1260                         l776 05AB  
                       l857 1DA2                         l699 122A                         l875 1108  
                       l883 1EA6                         l892 1019                         l886 1000  
                       l799 106E                         _PEN 048A                         _SEN 0488  
           __end_of_I2C_ACK 1D22                         _pad 1F00                         fsr0 0004  
                       indf 0000                ___flmul@aexp 0032                ___flmul@bexp 0033  
              ___flmul@sign 002D                ___flmul@temp 0038                ___flmul@prod 0034  
              ___fltol@exp1 0079                        l2200 0AE1                        l2120 1082  
                      l3000 069A                        l2210 0AEA                        l2202 0AE3  
                      l2130 0A64                        l2122 109A                        l2114 106F  
                      l3002 06A0                        l3010 075D                        l2300 0C5D  
                      l2220 0B2A                        l2212 0B01                        l2204 0AE5  
                      l2140 0A76                        l2132 0A66                        l2124 10CC  
                      l2116 1075                        l3020 0797                        l3012 076B  
                      l3004 0712                        l3100 14F4                        l2310 0C9B  
                      l2302 0C6B                        l2230 0B47                        l2222 0B2B  
                      l2214 0B1B                        l2206 0AE7                        l2150 0A90  
                      l2142 0A7B                        l2134 0A6C                        l2118 107B  
                      l3030 07C5                        l3022 07A1                        l3014 077A  
                      l3006 0751                        l3110 151D                        l3102 14F8  
                      l3200 11F5                        l2320 0CAF                        l2312 0CA3  
                      l2304 0C6F                        l2240 0B6F                        l2224 0B36  
                      l2216 0B24                        l2208 0AE9                        l2160 0AA1  
                      l2152 0A92                        l2144 0A83                        l2136 0A70  
                      l2128 0A62                        l3024 07AE                        l3016 0780  
                      l3008 0757                        l3040 102F                        l3120 1533  
                      l3112 1522                        l3104 14FC                        l2330 1E36  
                      l3210 1224                        l3202 11F7                        l2322 0CB8  
                      l2314 0CA8                        l2306 0C8F                        l2250 0B8A  
                      l2242 0B78                        l2234 0B50                        l2218 0B26  
                      l2226 0B38                        l2170 0AB5                        l2162 0AA2  
                      l2154 0A98                        l2146 0A84                        l2138 0A71  
                      l2410 1FB1                        l2402 1F8C                        l3026 07B3  
                      l3018 0785                        l3042 103F                        l3034 101A  
                      l3130 1577                        l3122 153E                        l3114 152B  
                      l3106 150A                        l3060 1D16                        l3052 1D04  
                      l2500 091A                        l2332 1E3A                        l3220 1257  
                      l3212 122E                        l3204 1205                        l2324 0CBC  
                      l2316 0CA9                        l2308 0C96                        l2260 0BE8  
                      l2244 0B7A                        l2236 0B67                        l2228 0B42  
                      l2252 0B8D                        l2180 0ACD                        l2164 0AA7  
                      l2172 0AB7                        l2156 0A99                        l2148 0A86  
                      l2412 1FB2                        l2404 1F95                        l2340 1E7C  
                      l3028 07BF                        l3044 1054                        l3036 101C  
                      l3140 15B9                        l3132 157F                        l3124 154B  
                      l3116 1531                        l3108 150E                        l3300 1EB7  
                      l3062 1D19                        l3054 1D09                        l3070 1D2A  
                      l2510 0946                        l2502 092C                        l2334 1E49  
                      l2326 1E2D                        l3222 1258                        l3214 1238  
                      l3206 1215                        l3310 1D83                        l2318 0CAD  
                      l2262 0BED                        l2254 0BA3                        l2246 0B7E  
                      l2238 0B6B                        l2190 0AD7                        l2182 0ACF  
                      l2174 0AC5                        l2166 0AAC                        l2158 0A9D  
                      l2414 1FBA                        l2342 1E81                        l2350 1E09  
                      l3038 102B                        l3046 1059                        l3134 1585  
                      l3126 1561                        l3142 15C4                        l3230 1E69  
                      l3302 1EC6                        l3240 1D32                        l3064 1D1E  
                      l3056 1D0D                        l3072 1D49                        l3080 1DB1  
                      l3160 132B                        l2512 094B                        l2520 096B  
                      l2504 0934                        l2336 1E4E                        l2328 1E2F  
                      l2600 0CD2                        l3216 124E                        l3208 1220  
                      l3152 1D59                        l3312 1D85                        l2280 0C38  
                      l2272 0C20                        l2256 0BE3                        l2264 0BFC  
                      l2248 0B7F                        l2192 0AD9                        l2184 0AD1  
                      l2176 0AC9                        l2168 0AB4                        l2440 1DE7  
                      l2432 1FDF                        l2424 1FC8                        l2416 1FBC  
                      l2408 1F9E                        l2344 1E91                        l2352 1E0D  
                      l3048 106A                        l3232 1E77                        l3320 002C  
                      l3242 1D36                        l3058 1D12                        l3074 1D4E  
                      l3066 1D22                        l3082 1DB6                        l3170 1388  
                      l3162 1330                        l2530 0994                        l2522 097D  
                      l2514 095D                        l2506 093C                        l2450 08A2  
                      l2610 0CEC                        l2602 0CD7                        l3218 1253  
                      l3250 126B                        l3154 1D59                        l3306 1D7A  
                      l2370 1F8A                        l2362 1F3E                        l2290 0C46  
                      l2282 0C3A                        l2274 0C2B                        l2266 0C12  
                      l2258 0BE5                        l2194 0ADB                        l2186 0AD3  
                      l2178 0ACB                        l2434 1FEF                        l2418 1FC0  
                      l2426 1FD8                        l2346 1E99                        l2354 1E1A  
                      l3146 15CC                        l3226 1E53                        l3322 004F  
                      l3314 0003                        l3244 1D38                        l3068 1D25  
                      l3084 1DBC                        l3076 1DA3                        l3180 13FC  
                      l3172 13B3                        l3164 133C                        l2540 09AC  
                      l2532 099C                        l2524 097E                        l2516 0961  
                      l2508 0944                        l2460 08B9                        l2452 08A6  
                      l2444 0898                        l2700 0F7B                        l2620 0CFF  
                      l2612 0CF0                        l2604 0CDF                        l3260 12E0  
                      l3252 127C                        l3236 1D68                        l3092 1CF6  
                      l3156 1D63                        l3308 1D7B                        l2364 1F52  
                      l2380 1143                        l2292 0C4A                        l2284 0C3F  
                      l2276 0C2F                        l2268 0C17                        l2196 0ADD  
                      l2188 0AD5                        l2436 1FF4                        l2356 1E21  
                      l2348 1E07                        l3228 1E5A                        l3324 008E  
                      l3316 000D                        l3246 1D39                        l3238 1D2E  
                      l3078 1DA8                        l3174 13EB                        l3166 1351  
                      l3158 132B                        l2550 09C4                        l2542 09B5  
                      l2534 099E                        l2526 098C                        l2518 0962  
                      l2470 08CB                        l2462 08BA                        l2454 08A7  
                      l2446 089C                        l2710 0FB9                        l2702 0F89  
                      l2630 0D1B                        l2622 0D07                        l2614 0CF4  
                      l2606 0CE1                        l3190 11C7                        l3270 1325  
                      l3262 12EE                        l3254 128B                        l2366 1F6E  
                      l2390 11AB                        l2382 1147                        l2374 1109  
                      l2294 0C50                        l2278 0C34                        l2286 0C41  
                      l2198 0ADF                        l2438 1DE3                        l2358 1E27  
                      l3326 00B1                        l3318 001D                        l3088 1DBE  
                      l3176 13EF                        l3168 1371                        l2560 09F3  
                      l2552 09D8                        l2536 09A7                        l2544 09BB  
                      l2528 098E                        l2480 08E2                        l2472 08CF  
                      l2456 08AC                        l2464 08BC                        l2448 089E  
                      l2720 0FEB                        l2712 0FC4                        l2704 0F8D  
                      l2640 0D5A                        l2624 0D09                        l2616 0CF5  
                      l2608 0CE9                        l3192 11D7                        l3184 11AE  
                      l3264 12FC                        l3256 129A                        l3248 1261  
                      l3280 1EEE                        l3272 1ED2                        l2368 1F88  
                      l2384 116B                        l2376 111F                        l2288 0C45  
                      l2800 17CD                        l3096 14DF                        l3328 00B8  
                      l3178 13F7                        l2570 0A31                        l2562 09F7  
                      l2546 09BF                        l2538 09AB                        l2490 0903  
                      l2482 08E3                        l2474 08D0                        l2466 08C4  
                      l2458 08B1                        l2722 0FEF                        l2714 0FD3  
                      l2706 0FA6                        l2650 0DE1                        l2642 0D76  
                      l2634 0D24                        l2626 0D11                        l2618 0CFA  
                      l3186 11B3                        l3266 1301                        l3258 12A9  
                      l3282 1EF3                        l3274 1ED7                        l2386 116F  
                      l2378 113B                        l2394 0800                        l2298 0C58  
                      l2802 17D6                        l2810 1DC7                        l2730 1F00  
                      l3098 14F0                        l2580 0A55                        l2572 0A40  
                      l2564 0A10                        l2556 09E0                        l2548 09C0  
                      l2476 08D5                        l2484 08E5                        l2468 08C7  
                      l2724 0FF0                        l2716 0FDD                        l2708 0FAC  
                      l2660 0E4E                        l2652 0DEF                        l2644 0DA0  
                      l2636 0D32                        l2628 0D16                        l3196 11E3  
                      l3188 11B7                        l3268 1310                        l3276 1EE3  
                      l2388 11A9                        l2396 0808                        l2804 17EF  
                      l2812 1DCC                        l2740 1F30                        l2732 1F06  
                      l2900 02B9                        l2820 15E6                        l3292 1EA7  
                      l2582 0A57                        l2574 0A44                        l2558 09E5  
                      l2566 0A16                        l2486 08F5                        l2494 090C  
                      l2478 08DA                        l2726 0FF7                        l2718 0FDF  
                      l2670 0EF5                        l2662 0E6B                        l2654 0E0C  
                      l2646 0DBC                        l2638 0D3F                        l2590 0CC2  
                      l3198 11EE                        l3286 1405                        l3278 1EE9  
                      l2398 080A                        l2750 0861                        l2742 080B  
                      l2814 1DCE                        l2734 1F0B                        l2910 02DE  
                      l2902 02C1                        l2830 1643                        l2822 15E9  
                      l3294 1EAB                        l2816 1D3B                        l2576 0A4C  
                      l2568 0A23                        l2496 0911                        l2488 0901  
                      l2680 0F41                        l2672 0F1D                        l2664 0E96  
                      l2656 0E1A                        l2648 0DD8                        l2592 0CC4  
                      l3288 14D6                        l2752 0866                        l2744 082B  
                      l2808 1DC2                        l2736 1F1A                        l2912 02E2  
                      l2920 02F8                        l2904 02C5                        l2840 165A  
                      l2832 1647                        l2824 1601                        l3296 1EB3  
                      l2818 1D41                        l2578 0A51                        l2690 0F56  
                      l2682 0F42                        l2674 0F26                        l2666 0EA4  
                      l2658 0E37                        l2594 0CC8                        l2762 0893  
                      l2746 0842                        l2770 1D8E                        l2738 1F22  
                      l2930 037A                        l2922 02FA                        l2914 02EA  
                      l2906 02CA                        l2850 1694                        l2842 1660  
                      l2834 164B                        l2826 1628                        l3298 1EB5  
                      l2692 0F5A                        l2684 0F4B                        l2676 0F34  
                      l2668 0ECF                        l2596 0CCC                        l2588 0CBE  
                      l2748 0848                        l2756 086B                        l2780 1711  
                      l2772 1D92                        l2940 047E                        l2932 03EC  
                      l2924 0302                        l2916 02EC                        l2908 02D8  
                      l2860 16D6                        l2852 169C                        l2844 1673  
                      l2836 1650                        l2828 162C                        l2694 0F6E  
                      l2678 0F3D                        l2686 0F51                        l2598 0CCD  
                      l2758 0871                        l2782 1730                        l2774 1D93  
                      l2766 1001                        l2950 04E9                        l2942 04B5  
                      l2934 042B                        l2926 030B                        l2918 02F2  
                      l2862 16E6                        l2870 00CB                        l2846 167A  
                      l2838 1655                        ?_pad 0028                        l2688 0F55  
                      l2792 1773                        l2784 173D                        l2768 1003  
                      l2960 05A5                        l2952 050A                        l2944 04C0  
                      l2928 0367                        l2936 0431                        l2880 0101  
                      l2872 00D5                        l2848 168A                        l2856 16B8  
                      l2698 0F76                        l2794 178C                        l2786 1744  
                      l2778 16F1                        l2970 0635                        l2962 05B9  
                      l2954 0558                        l2946 04DB                        l2938 043F  
                      l2890 01FE                        l2882 0140                        l2874 00D7  
                      l2858 16CF                        l2796 17A3                        l2788 175E  
                      l2980 0660                        l2972 064B                        l2964 05BA  
                      l2956 0560                        l2948 04E1                        l2892 023D  
                      l2884 017C                        l2798 17B4                        l2990 067B  
                      l2982 0666                        l2974 0651                        l2966 05BC  
                      l2958 059F                        l2894 0243                        l2886 01B5  
                      l2878 00F1                        l2992 0681                        l2984 066C  
                      l2976 0656                        l2968 05BF                        l2888 01F3  
                      l2986 066F                        l2978 065A                        l2994 0687  
                      l2898 0280                        l2996 068D                        l2988 0675  
                      l2998 0694                        STR_1 1806                        STR_2 1819  
                      STR_5 181D                        _BRGH 04C2                        _CREN 00C4  
                      u3010 1E27                        u3011 1E26                        u3020 1F52  
                      u3021 1F51                        u3101 117E                        u3005 1E1B  
                      u3030 1F6E                        u3110 11A9                        u3102 117F  
                      u3031 1F6D                        u3111 11A8                        u3103 1184  
                      u3040 1F88                        u3104 1185                        u3120 0808  
                      u4000 1D92                        u3041 1F87                        u3105 118A  
                      u3121 0807                        u4001 1D91                        u3106 118B  
                      u3050 111F                        u3210 1FEF                        u3130 1F95  
                      u4010 171F                        u3115 11A5                        u3051 111E  
                      u3211 1FEE                        u3131 1F94                        u3300 0911  
                      u3060 113B                        u2500 0A7B                        u3220 1FF4  
                      u3140 1FAC                        u4100 17CD                        u4020 173D  
                      u3301 0910                        u3045 1F84                        u3061 113A  
                      u2501 0A7A                        u3221 1FF3                        u3205 1FE1  
                      u4101 17CC                        u4021 173C                        u3310 094B  
                      u3230 08A6                        u3070 1147                        u2510 0A98  
                      u3150 1FC0                        u4110 17E4                        u4030 1744  
                      u2430 1075                        u3311 094A                        u3231 08A5  
                      u3071 1146                        u2511 0A97                        u3151 1FBF  
                      u4031 1743                        u4015 171A                        u2431 1074  
                      u3400 09AB                        u3240 08AC                        u2600 0B1B  
                      u2520 0AA1                        u3160 1FC7                        u4120 17EF  
                      u4040 1754                        u2440 107B                        u4200 167A  
                      u3401 09AA                        u3241 08AB                        u3081 1156  
                      u2601 0B1A                        u2521 0AA0                        u3161 1FC6  
                      u3145 1FA7                        u4121 17EE                        u4025 1739  
                      u2441 107A                        u4201 1679                        u3250 08B1  
                      u3090 116F                        u3082 1157                        u2610 0B2A  
                      u2530 0AA7                        u4050 1772                        u4130 1DE2  
                      u2450 109A                        u4210 16CF                        u3251 08B0  
                      u3091 116E                        u3083 115C                        u2611 0B29  
                      u2531 0AA6                        u4115 17DF                        u4051 1771  
                      u4131 1DE1                        u2451 1099                        u4211 16CC  
                      u4140 1D41                        u3500 0A40                        u3420 09BF  
                      u3340 0961                        u3260 08CF                        u3084 115D  
                      u2540 0AAC                        u3180 1FD7                        u4060 1781  
                      u2460 10CC                        u4300 027F                        u4220 16D6  
                      u4141 1D40                        u3501 0A3F                        u3421 09BE  
                      u3341 0960                        u3325 094D                        u3261 08CE  
                      u3085 1162                        u2541 0AAB                        u3181 1FD6  
                      u4045 174F                        u2461 10CB                        u4301 027E  
                      u4221 16D5                        u4150 1D47                        u3510 0A55  
                      u3430 09C4                        u3270 08D5                        u3086 1163  
                      u2710 0BA3                        u2630 0B3E                        u2550 0AC5  
                      u3190 1FDE                        u4070 178C                        u2470 10ED  
                      u4310 02B9                        u4230 00F0                        u4151 1D46  
                      u3511 0A54                        u3431 09C3                        u3415 09AE  
                      u3335 0956                        u3271 08D4                        u2711 0BA2  
                      u2631 0B3D                        u2551 0AC4                        u3191 1FDD  
                      u3175 1FC9                        u4071 178B                        u4311 02B8  
                      u4303 027B                        u4231 00EF                        u3440 09D8  
                      u3360 097D                        u3280 08DA                        u3520 0CCC  
                      u2800 0C3F                        u2640 0B42                        u2560 0AC9  
                      u2480 0A70                        u4400 0558                        u4320 02C5  
                      u4160 1628                        u3505 0A3C                        u3441 09D7  
                      u3361 097C                        u3281 08D9                        u3601 0D68  
                      u3521 0CCB                        u2801 0C3E                        u2721 0BBC  
                      u2713 0B9F                        u2705 0B83                        u2641 0B41  
                      u2625 0B2F                        u2561 0AC8                        u2481 0A6F  
                      u4081 1795                        u4065 177C                        u2465 10C8  
                      u4401 0557                        u4321 02C4                        u4241 014F  
                      u4161 1627                        u3450 09DF                        u3370 0994  
                      u3290 08F5                        u3602 0D6F                        u3530 0CD2  
                      u2810 0C45                        u2730 0BD0                        u2722 0BBD  
                      u2650 0B47                        u2570 0B01                        u2490 0A76  
                      u4090 17C2                        u4082 179C                        u4410 05A5  
                      u4330 02DE                        u4250 017C                        u4242 0150  
                      u4170 1650                        u3451 09DE                        u3371 0993  
                      u3355 0964                        u3291 08F4                        u3611 0D84  
                      u3603 0D76                        u3531 0CD1                        u2811 0C44  
                      u2731 0BD1                        u2723 0BC2                        u2651 0B46  
                      u2571 0B00                        u2491 0A75                        u4083 17A3  
                      u4411 05A4                        u4331 02DD                        u4251 017B  
                      u4243 0155                        u4171 164F                        u3460 09E5  
                      u3380 099C                        u3612 0D8B                        u3540 0CD7  
                      u2900 0C9B                        u2820 0C4A                        u2740 0BED  
                      u2732 0BD6                        u2724 0BC3                        u2580 0B0A  
                      u4500 07B3                        u4420 0635                        u4340 02E2  
                      u4260 01B5                        u4244 0156                        u4180 1655  
                      u3461 09E4                        u3381 099B                        u3365 0979  
                      u3701 0EB3                        u3621 0DAE                        u3613 0D92  
                      u3541 0CD6                        u2901 0C9A                        u2821 0C49  
                      u2741 0BEC                        u2733 0BD7                        u2725 0BC8  
                      u2661 0B59                        u2581 0B08                        u4501 07B2  
                      u4421 0634                        u4341 02E1                        u4261 01B4  
                      u4253 0178                        u4245 015B                        u4181 1654  
                      u3470 09F7                        u3710 0EDB                        u3702 0EBA  
                      u3622 0DB5                        u3550 0CF4                        u2910 0CA8  
                      u2830 0C50                        u2750 0C12                        u2726 0BC9  
                      u2670 0B6B                        u2662 0B60                        u2590 0B0B  
                      u4430 0656                        u4350 02F2                        u4246 015C  
                      u4190 1673                        u4510 102B                        u3471 09F6  
                      u3703 0EC1                        u3631 0DCA                        u3623 0DBC  
                      u3551 0CF3                        u2911 0CA7                        u2831 0C4F  
                      u2751 0C11                        u2671 0B6A                        u2663 0B67  
                      u2575 0AFD                        u4095 17BD                        u4431 0655  
                      u4351 02F1                        u4271 01C6                        u4191 1672  
                      u4511 102A                        u4600 1351                        u3480 0A06  
                      u3800 0F5A                        u3632 0DD1                        u3560 0CFA  
                      u2920 0CAD                        u2840 0C57                        u2760 0C17  
                      u2680 0B6F                        u4440 065A                        u4360 043F  
                      u4280 01F3                        u4272 01C7                        u4520 106A  
                      u4601 1350                        u3801 0F59                        u3721 0EE7  
                      u3633 0DD8                        u3561 0CF9                        u2921 0CAC  
                      u2841 0C56                        u2761 0C16                        u2681 0B6E  
                      u4441 0659                        u4425 0631                        u4361 043E  
                      u4281 01F2                        u4273 01CC                        u4521 1069  
                      u4530 1D56                        u4610 13D4                        u3490 0A23  
                      u3810 0F6E                        u3730 0F03                        u3722 0EEE  
                      u3570 0CFF                        u2930 0CBC                        u2850 0C5D  
                      u2690 0B7E                        u4450 068D                        u4370 04B5  
                      u4274 01CD                        u4531 1D55                        u3491 0A22  
                      u3395 09A0                        u3811 0F6D                        u3723 0EF5  
                      u3715 0ED6                        u3651 0DFE                        u3571 0CFE  
                      u2931 0CBB                        u2851 0C5C                        u2691 0B7D  
                      u4451 068C                        u4371 04B4                        u4291 0252  
                      u4283 01EF                        u4275 01D2                        u4540 1DB0  
                      u4620 13EF                        u2940 1E3A                        u3820 0F75  
                      u3652 0E05                        u3580 0D16                        u2860 0C6F  
                      u2780 0C2F                        u3900 1F30                        u4460 076B  
                      u4380 04DB                        u4292 0253                        u4276 01D3  
                      u4541 1DAF                        u4621 13EE                        u3485 0A01  
                      u2941 1E39                        u3821 0F74                        u3741 0F0F  
                      u3661 0E29                        u3653 0E0C                        u3645 0DDA  
                      u3581 0D15                        u2861 0C6E                        u2781 0C2E  
                      u3901 1F2F                        u4461 076A                        u4381 04DA  
                      u4365 043B                        u4293 0258                        u4550 1DBC  
                      u3830 0F7B                        u3742 0F16                        u3662 0E30  
                      u3590 0D1B                        u4710 1224                        u4630 11B3  
                      u2870 0C80                        u2790 0C34                        u3910 0839  
                      u4470 077A                        u4390 04E1                        u4294 0259  
                      u4551 1DBB                        u4615 13CF                        u3495 0A1F  
                      u3831 0F7A                        u3743 0F1D                        u3735 0EFE  
                      u3663 0E37                        u3591 0D1A                        u4711 1223  
                      u4631 11B2                        u2791 0C33                        u2775 0C24  
                      u4471 0779                        u4391 04E0                        u4295 025E  
                      u2960 1E4E                        u3840 0F8D                        u4720 122A  
                      u4640 11B7                        u4800 1EF9                        u2880 0C8F  
                      u3920 0848                        u4480 07A7                        u4296 025F  
                      u4560 14F0                        u2961 1E4D                        u3841 0F8C  
                      u3681 0E5D                        u4721 1229                        u4705 1219  
                      u4641 11B6                        u2881 0C8E                        u3921 0847  
                      u3905 1F2C                        u4481 07A5                        u4465 0767  
                      u4561 14EF                        u3850 0F9C                        u3770 0F41  
                      u3682 0E64                        u4730 122E                        u4650 11D7  
                      u2890 0C96                        u3930 0856                        u2970 1EA6  
                      u4490 07A8                        u4570 150A                        u2955 1E41  
                      u3771 0F40                        u3755 0F1F                        u3691 0E88  
                      u3683 0E6B                        u3675 0E39                        u4731 122D  
                      u4651 11D6                        u2891 0C95                        u2875 0C7B  
                      u3915 0834                        u2971 1EA5                        u4475 0776  
                      u4571 1509                        u3860 0FB9                        u3692 0E8F  
                      u4740 1243                        u3940 0861                        u2980 1E0D  
                      u4580 154A                        _RCEN 048B                        u3861 0FB8  
                      u3765 0F36                        u3693 0E96                        u3941 0860  
                      u2981 1E0C                        u4581 1549                        u3870 0FD3  
                      u3790 0F55                        u4750 1253                        u4670 11F4  
                      u4814 1434                        u4590 1D63                        u4830 1D8D  
                      u3950 0871                        u3871 0FD2                        u3855 0F97  
                      u3791 0F54                        u4751 1252                        u4671 11F3  
                      u4815 1431                        u4591 1D62                        u4831 1D8C  
                      u3951 0870                        u3935 0851                        u3880 0FEF  
                      u4760 1257                        u4824 14A4                        u3960 087F  
                      u4840 002C                        u3881 0FEE                        u3865 0FB5  
                      u3785 0F44                        u4761 1256                        u4745 123E  
                      u4665 11E6                        u4825 14A1                        u4841 002B  
                      u4690 1214                        u3970 088B                        u3890 1F06  
                      u4770 1E77                        u3875 0FCF                        u4691 1213  
                      u3971 0889                        u3891 1F05                        u2995 1E14  
                      u4771 1E76                        u3980 088C                        u4685 1206  
                      u3965 087A                        u4790 1EF8                        u3990 1019  
                      u4791 1EF6                        u3991 1018                        u4785 12C8  
                      u4857 00C0                        _SPEN 00C7                        _RSEN 0489  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
          __end_of_I2C_NACK 1D2E                        _dbuf 0110                        _labs 1D8E  
                      _main 0003                        _prec 00EC                        pad@i 002D  
                      pad@p 002B                        btemp 007E               ___fpclassifyf 080B  
                      start 0000             ___fldiv@new_exp 004C                 main@voltage 01B0  
      __end_of_MCP3421_Init 132B     __end_of_UART_Write_Text 1D8E                       ??_pad 007D  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
             ___fltol@sign1 0078                       ?_labs 0070             __end_of___fladd 0CBE  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___fldiv 0A62             __end_of___flneg 080B             __end_of___flmul 1000  
           __end_of___flsub 1E07             __end_of___fltol 2000                vfpfcnvrt@fmt 00D2  
                     _SPBRG 0099                       _SSPIF 0063                       _TXREG 0019  
               ?_UART_Write 0070    MCP3421_GetDouble@voltage 0062                       _flags 00EE  
       read_prec_or_width@c 0078         read_prec_or_width@n 0079                       _fputc 106F  
                     _fputs 1E7C                       labs@a 0070                       pad@fp 0028  
                     _width 00EA                       _putch 1000                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 1ED2  
            ?___fpclassifyf 0070         MCP3421_Init@address 0073             __initialization 07E4  
              __end_of_labs 1DA3                __end_of_main 00CB       __end_of_MCP3421_Ready 1F00  
                 ??_I2C_ACK 0070                      ??_labs 0074                      ??_main 00E7  
__end_of_read_prec_or_width 106F           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
        ??_I2C_Master_Start 0070          ??_I2C_Master_Write 0070                      ?_fputc 0070  
                    ?_fputs 0020                      ?_putch 0070           ??_MCP3421_GetLong 0020  
                    _SSPADD 0093                      _TRISC3 043B                      _TRISC4 043C  
                    _TRISC6 043E                      _TRISC7 043F                      _SSPCON 0014  
                    _SSPBUF 0013            __end_of___xxtofl 1261                vfprintf@cfmt 006F  
                    ___flge 1109                      ___fleq 1F3E               _I2C_Read_Byte 1DA3  
                 ??___fladd 0020                      ___wmul 1E07                   ??___fldiv 0042  
                 ??___flneg 0074                   ??___flmul 0028            ?_UART_Write_Text 0071  
                 ??___flsub 007E                   ??___fltol 0074                      _efgtoa 15E6  
                    _floorf 16F1                      _memcpy 1DC2        read_prec_or_width@ap 0077  
                    pad@buf 002A       __end_of_UART_TX_Empty 1CFC                      _strcpy 1001  
                 ?_I2C_NACK 0070                      fputc@c 0070                      fputs@c 0025  
                    fputs@i 0026                      fputs@s 0020             ___fpclassifyf@e 0020  
           ___fpclassifyf@u 0022             ___fpclassifyf@x 0070                      putch@c 0070  
          __end_of_vfprintf 1E7C                   ??_sprintf 00E6                  ___flge@ff1 003A  
                ___flge@ff2 003E             ??___fpclassifyf 0074                ___xxtofl@arg 007A  
              ___xxtofl@exp 0079                ___xxtofl@val 0070                  ___fleq@ff1 0070  
                ___fleq@ff2 0074     __end_of__initialization 07FC                  ___flneg@f1 0070  
                ___fltol@f1 0070              ?_I2C_Read_Byte 0070              __pcstackCOMMON 0070  
             __end_of_fputc 1109               __end_of_fputs 1EA7               __end_of_putch 1001  
                ??_I2C_NACK 0070                _MCP3421_Init 1261                     ??_fputc 0074  
                   ??_fputs 0023                     ??_putch 0070                  __pbssBANK1 00EA  
                __pbssBANK2 0110                  __pbssBANK3 01BD           __end_of__Umul8_16 1E53  
                _efgtoa$748 00AA                  __pmaintext 0003                     ?___flge 003A  
                   ?___fleq 0070                     ?___wmul 0070                     ?_efgtoa 0068  
                   _I2C_ACK 1D16                     ?_floorf 0054                     ?_memcpy 0070  
                   _ACKSTAT 048E                     ?_strcpy 0070                   ?___xxtofl 0070  
              ??_UART_Write 0070                     _SSPCON2 0091                     _SSPSTAT 0094  
             ?_UART_TX_Init 0070                  __stringtab 1800             ??_I2C_Read_Byte 0070  
            main@millivolts 01B4                     ___fladd 0A62                     ___fldiv 0898  
                   ___flneg 0800                     ___flmul 0CBE                     ___flsub 1DE3  
                   ___fltol 1F8C          __end_of_UART_Write 1D68                   ?_vfprintf 00DC  
                   __ptext1 1EA7                     __ptext2 1E53                     __ptext3 14DF  
                   __ptext4 101A                     __ptext5 1E07                     __ptext6 15E6  
                   __ptext7 1001                     __ptext8 1F00                     __ptext9 1E7C  
           _MCP3421_GetLong 132B       read_prec_or_width@fmt 0076                  ??___xxtofl 0074  
                   efgtoa@c 006E                     efgtoa@d 00AF                     efgtoa@e 00B3  
                   efgtoa@f 006A                     efgtoa@g 00C8                     efgtoa@h 00BD  
                   efgtoa@i 00BB                     efgtoa@l 00C1                     efgtoa@m 00B1  
                   efgtoa@n 00C6                     efgtoa@p 00A6                     efgtoa@t 00A8  
                   efgtoa@u 00CC                     efgtoa@w 00B5                     main@adc 01B8  
            ??_UART_TX_Init 0070                     _sprintf 1EA7                     clrloop0 1CFD  
      end_of_initialization 07FC                     floorf@e 0062                     floorf@m 005E  
                   floorf@u 0064                     floorf@x 0054                     memcpy@d 0075  
                   memcpy@n 0072                     memcpy@s 0076                     fputc@fp 0072  
                   fputs@fp 0021          _read_prec_or_width 101A          MCP3421_GetLong@adc 0071  
         __end_of_vfpfcnvrt 15E6                  efgtoa@mode 00AD                  efgtoa@sign 00C5  
       ?_read_prec_or_width 0076                     psplit$0 120037            vfpfcnvrt@convarg 00D6  
                ??_vfprintf 007E                     strcpy@d 0072              UART_Write@data 0070  
               ___fladd@grs 007B               ___xxtofl@sign 0078        ??_read_prec_or_width 0078  
               ___fldiv@grs 004E                 ___fldiv@rem 0047                 ___flmul@grs 002E  
                main@buffer 019C              __end_of___flge 11AD              __end_of___fleq 1F8C  
   __end_of_MCP3421_GetLong 1405                 vfpfcnvrt@ap 00D3                 vfpfcnvrt@cp 00DB  
               vfpfcnvrt@fp 00D0              __end_of___wmul 1E2C              __end_of_efgtoa 07E4  
            __end_of_floorf 1800              __end_of_memcpy 1DE3                  floorf@F521 01BD  
            __end_of_strcpy 101A         start_initialization 07E4                 __end_of_pad 1F3E  
         pnum$text6_split_1 0037           ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070  
         ??_I2C_Master_Stop 0070       __end_of___fpclassifyf 0898                 vfprintf@fmt 00DE  
                  ??___flge 0042                    ??___fleq 0078                    ??___wmul 0074  
                  ??_efgtoa 00A0               _MCP3421_Ready 1ED2                   __Umul8_16 1E2C  
      __end_of_UART_TX_Init 1D7A                    ?_I2C_ACK 0070                    ??_floorf 0058  
                  ??_memcpy 0074                    ??_strcpy 0072                   ___fladd@a 0074  
                 ___fladd@b 0070                   ___fldiv@a 003A                   ___fldiv@b 003E  
                 ___flmul@a 0024                   ___flmul@b 0020                   ___flsub@a 003A  
                 ___flsub@b 003E                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0               __pcstackBANK3 0190            _I2C_Master_Start 1D04  
          _I2C_Master_Write 1D48              ?_MCP3421_Ready 0071                    ?___fladd 0070  
                  ?___fldiv 003A                    ?___flneg 0070                    ?___flmul 0020  
                  ?___flsub 003A                    ?___fltol 0070                  ?__Umul8_16 0070  
          ?_MCP3421_GetLong 0071        I2C_Master_Write@data 0070                   __pstrings 1800  
                  _I2C_NACK 1D22               _UART_TX_Empty 1CF6           _MCP3421_GetDouble 1405  
                  ?_sprintf 00E0          ?_MCP3421_GetDouble 0054           ??_UART_Write_Text 0072  
            ___wmul@product 0074                   clear_ram0 1CFC       MCP3421_GetLong@result 0076  
       ??_MCP3421_GetDouble 0058           MCP3421_GetLong@b2 007B           MCP3421_GetLong@b3 007A  
         MCP3421_GetLong@b4 0075       __end_of_I2C_Read_Byte 1DC2                   _vfpfcnvrt 14DF  
               __stringbase 1805              ?_UART_TX_Empty 0070           ___wmul@multiplier 0070  
 __end_of_MCP3421_GetDouble 14DF                  vfpfcnvrt@c 00DA             ??_MCP3421_Ready 0073  
                 memcpy@tmp 0074                  vfprintf@ap 00DF                  vfprintf@fp 00DC  
               ??__Umul8_16 0072                  ?_vfpfcnvrt 00D0        MCP3421_GetDouble@adc 0054  
      MCP3421_GetDouble@raw 005E          __end_of__stringtab 1806          ___fpclassifyf@F465 01C1  
                sprintf@fmt 00E1             _I2C_Master_Init 1D2E                    ___xxtofl 11AD  
           _I2C_Master_Wait 1D3B             _I2C_Master_Stop 1D0D               ?_MCP3421_Init 0071  
                  __ptext10 106F                    __ptext11 1000                    __ptext20 1109  
                  __ptext12 1DC2                    __ptext21 1F3E                    __ptext13 1D8E  
                  __ptext30 0CBE                    __ptext22 1D7A                    __ptext14 16F1  
                  __ptext31 1E2C                    __ptext23 1D58                    __ptext15 080B  
                  __ptext40 1D3B                    __ptext32 0898                    __ptext24 1CF6  
                  __ptext16 1F8C                    __ptext41 1D2E                    __ptext33 132B  
                  __ptext25 1D68                    __ptext17 1DE3                    __ptext34 1DA3  
                  __ptext26 1ED2                    __ptext18 0A62                    __ptext35 1D22  
                  __ptext27 1261                    __ptext19 0800                    __ptext36 1D48  
                  __ptext28 1405                    __ptext37 1D0D                    __ptext29 11AD  
                  __ptext38 1D04                    __ptext39 1D16                _UART_TX_Init 1D68  
                strcpy@dest 0070         UART_Write_Text@text 0071                   pnum$text6 0012  
                  efgtoa@fp 0068                    efgtoa@ne 00A4                    efgtoa@pp 00AC  
                  efgtoa@ou 00B7                    _vfprintf 1E53             ??_UART_TX_Empty 0070  
  __end_of_I2C_Master_Start 1D0D    __end_of_I2C_Master_Write 1D58                    memcpy@d1 0070  
                  memcpy@s1 0071              ??_MCP3421_Init 0020       MCP3421_Ready@confRead 0075  
          MCP3421_Ready@adc 0071                   sprintf@ap 0190                   strcpy@src 0071  
                 stringcode 1800                 efgtoa@nmode 00AE             MCP3421_Init@adc 0071  
   __end_of_I2C_Master_Init 1D3B     __end_of_I2C_Master_Wait 1D48             MCP3421_Init@pga 0076  
   __end_of_I2C_Master_Stop 1D16                 ??_vfpfcnvrt 00D4      __Umul8_16@multiplicand 0070  
           _UART_Write_Text 1D7A                    sprintf@f 0191                    sprintf@s 00E0  
                  stringdir 1800                    stringtab 1800                  _UART_Write 1D58  
            MCP3421_Init@sr 0075               ___fladd@signs 0078                ___fladd@aexp 0079  
              ___fladd@bexp 007A        __Umul8_16@multiplier 0078           __Umul8_16@product 0074  
