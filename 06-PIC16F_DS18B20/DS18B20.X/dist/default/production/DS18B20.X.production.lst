

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Nov 02 09:29:21 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2,group=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	psect	text6_split_1,local,class=CODE,space=0,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Generated 12/10/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F877 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0004                     fsr             equ	4
    88     0004                     fsr0            equ	4
    89     0000                     indf            equ	0
    90     0000                     indf0           equ	0
    91     0002                     pc              equ	2
    92     0002                     pcl             equ	2
    93     000A                     pclath          equ	10
    94     0003                     status          equ	3
    95     0000                     INDF            equ	0	;# 
    96     0001                     TMR0            equ	1	;# 
    97     0002                     PCL             equ	2	;# 
    98     0003                     STATUS          equ	3	;# 
    99     0004                     FSR             equ	4	;# 
   100     0005                     PORTA           equ	5	;# 
   101     0006                     PORTB           equ	6	;# 
   102     0007                     PORTC           equ	7	;# 
   103     0008                     PORTD           equ	8	;# 
   104     0009                     PORTE           equ	9	;# 
   105     000A                     PCLATH          equ	10	;# 
   106     000B                     INTCON          equ	11	;# 
   107     000C                     PIR1            equ	12	;# 
   108     000D                     PIR2            equ	13	;# 
   109     000E                     TMR1            equ	14	;# 
   110     000E                     TMR1L           equ	14	;# 
   111     000F                     TMR1H           equ	15	;# 
   112     0010                     T1CON           equ	16	;# 
   113     0011                     TMR2            equ	17	;# 
   114     0012                     T2CON           equ	18	;# 
   115     0013                     SSPBUF          equ	19	;# 
   116     0014                     SSPCON          equ	20	;# 
   117     0015                     CCPR1           equ	21	;# 
   118     0015                     CCPR1L          equ	21	;# 
   119     0016                     CCPR1H          equ	22	;# 
   120     0017                     CCP1CON         equ	23	;# 
   121     0018                     RCSTA           equ	24	;# 
   122     0019                     TXREG           equ	25	;# 
   123     001A                     RCREG           equ	26	;# 
   124     001B                     CCPR2           equ	27	;# 
   125     001B                     CCPR2L          equ	27	;# 
   126     001C                     CCPR2H          equ	28	;# 
   127     001D                     CCP2CON         equ	29	;# 
   128     001E                     ADRESH          equ	30	;# 
   129     001F                     ADCON0          equ	31	;# 
   130     0081                     OPTION_REG      equ	129	;# 
   131     0085                     TRISA           equ	133	;# 
   132     0086                     TRISB           equ	134	;# 
   133     0087                     TRISC           equ	135	;# 
   134     0088                     TRISD           equ	136	;# 
   135     0089                     TRISE           equ	137	;# 
   136     008C                     PIE1            equ	140	;# 
   137     008D                     PIE2            equ	141	;# 
   138     008E                     PCON            equ	142	;# 
   139     0091                     SSPCON2         equ	145	;# 
   140     0092                     PR2             equ	146	;# 
   141     0093                     SSPADD          equ	147	;# 
   142     0094                     SSPSTAT         equ	148	;# 
   143     0098                     TXSTA           equ	152	;# 
   144     0099                     SPBRG           equ	153	;# 
   145     009E                     ADRESL          equ	158	;# 
   146     009F                     ADCON1          equ	159	;# 
   147     010C                     EEDATA          equ	268	;# 
   148     010D                     EEADR           equ	269	;# 
   149     010E                     EEDATH          equ	270	;# 
   150     010F                     EEADRH          equ	271	;# 
   151     018C                     EECON1          equ	396	;# 
   152     018D                     EECON2          equ	397	;# 
   153     0000                     INDF            equ	0	;# 
   154     0001                     TMR0            equ	1	;# 
   155     0002                     PCL             equ	2	;# 
   156     0003                     STATUS          equ	3	;# 
   157     0004                     FSR             equ	4	;# 
   158     0005                     PORTA           equ	5	;# 
   159     0006                     PORTB           equ	6	;# 
   160     0007                     PORTC           equ	7	;# 
   161     0008                     PORTD           equ	8	;# 
   162     0009                     PORTE           equ	9	;# 
   163     000A                     PCLATH          equ	10	;# 
   164     000B                     INTCON          equ	11	;# 
   165     000C                     PIR1            equ	12	;# 
   166     000D                     PIR2            equ	13	;# 
   167     000E                     TMR1            equ	14	;# 
   168     000E                     TMR1L           equ	14	;# 
   169     000F                     TMR1H           equ	15	;# 
   170     0010                     T1CON           equ	16	;# 
   171     0011                     TMR2            equ	17	;# 
   172     0012                     T2CON           equ	18	;# 
   173     0013                     SSPBUF          equ	19	;# 
   174     0014                     SSPCON          equ	20	;# 
   175     0015                     CCPR1           equ	21	;# 
   176     0015                     CCPR1L          equ	21	;# 
   177     0016                     CCPR1H          equ	22	;# 
   178     0017                     CCP1CON         equ	23	;# 
   179     0018                     RCSTA           equ	24	;# 
   180     0019                     TXREG           equ	25	;# 
   181     001A                     RCREG           equ	26	;# 
   182     001B                     CCPR2           equ	27	;# 
   183     001B                     CCPR2L          equ	27	;# 
   184     001C                     CCPR2H          equ	28	;# 
   185     001D                     CCP2CON         equ	29	;# 
   186     001E                     ADRESH          equ	30	;# 
   187     001F                     ADCON0          equ	31	;# 
   188     0081                     OPTION_REG      equ	129	;# 
   189     0085                     TRISA           equ	133	;# 
   190     0086                     TRISB           equ	134	;# 
   191     0087                     TRISC           equ	135	;# 
   192     0088                     TRISD           equ	136	;# 
   193     0089                     TRISE           equ	137	;# 
   194     008C                     PIE1            equ	140	;# 
   195     008D                     PIE2            equ	141	;# 
   196     008E                     PCON            equ	142	;# 
   197     0091                     SSPCON2         equ	145	;# 
   198     0092                     PR2             equ	146	;# 
   199     0093                     SSPADD          equ	147	;# 
   200     0094                     SSPSTAT         equ	148	;# 
   201     0098                     TXSTA           equ	152	;# 
   202     0099                     SPBRG           equ	153	;# 
   203     009E                     ADRESL          equ	158	;# 
   204     009F                     ADCON1          equ	159	;# 
   205     010C                     EEDATA          equ	268	;# 
   206     010D                     EEADR           equ	269	;# 
   207     010E                     EEDATH          equ	270	;# 
   208     010F                     EEADRH          equ	271	;# 
   209     018C                     EECON1          equ	396	;# 
   210     018D                     EECON2          equ	397	;# 
   211     0008                     _PORTD          set	8
   212     0007                     _PORTCbits      set	7
   213     0006                     _PORTBbits      set	6
   214     0086                     _TRISBbits      set	134
   215     0088                     _TRISDbits      set	136
   216     0087                     _TRISCbits      set	135
   217                           
   218                           	psect	strings
   219     1000                     __pstrings:
   220     1000                     stringtab:
   221     1000                     __stringtab:
   222                           
   223                           ;	String table - string pointers are 1 byte each
   224     1000  1BFF               	btfsc	btemp+1,7
   225     1001  280A               	ljmp	stringcode
   226     1002  1383               	bcf	3,7
   227     1003  187F               	btfsc	btemp+1,0
   228     1004  1783               	bsf	3,7
   229     1005  0800               	movf	0,w
   230     1006  0A84               	incf	4,f
   231     1007  1903               	skipnz
   232     1008  0AFF               	incf	btemp+1,f
   233     1009  0008               	return
   234     100A                     stringcode:
   235     100A                     stringdir:
   236     100A  3010               	movlw	high stringdir
   237     100B  008A               	movwf	10
   238     100C  0804               	movf	4,w
   239     100D  0A84               	incf	4,f
   240     100E  0782               	addwf	2,f
   241     100F                     __stringbase:
   242     100F  3400               	retlw	0
   243     1010                     __end_of__stringtab:
   244     1010                     STR_2:
   245     1010  3453               	retlw	83	;'S'
   246     1011  3465               	retlw	101	;'e'
   247     1012  346E               	retlw	110	;'n'
   248     1013  3473               	retlw	115	;'s'
   249     1014  346F               	retlw	111	;'o'
   250     1015  3472               	retlw	114	;'r'
   251     1016  3420               	retlw	32	;' '
   252     1017  3445               	retlw	69	;'E'
   253     1018  3472               	retlw	114	;'r'
   254     1019  3472               	retlw	114	;'r'
   255     101A  346F               	retlw	111	;'o'
   256     101B  3472               	retlw	114	;'r'
   257     101C  3421               	retlw	33	;'!'
   258     101D  3400               	retlw	0
   259     101E                     STR_1:
   260     101E  3454               	retlw	84	;'T'
   261     101F  3465               	retlw	101	;'e'
   262     1020  346D               	retlw	109	;'m'
   263     1021  3470               	retlw	112	;'p'
   264     1022  343A               	retlw	58	;':'
   265     1023  3420               	retlw	32	;' '
   266     1024  3425               	retlw	37	;'%'
   267     1025  3432               	retlw	50	;'2'
   268     1026  342E               	retlw	46	;'.'
   269     1027  3431               	retlw	49	;'1'
   270     1028  3466               	retlw	102	;'f'
   271     1029  3420               	retlw	32	;' '
   272     102A  3443               	retlw	67	;'C'
   273     102B  3400               	retlw	0
   274     102C                     STR_3:
   275     102C  3469               	retlw	105	;'i'
   276     102D  346E               	retlw	110	;'n'
   277     102E  3466               	retlw	102	;'f'
   278     102F  3400               	retlw	0
   279     1030                     STR_6:
   280     1030  346E               	retlw	110	;'n'
   281     1031  3461               	retlw	97	;'a'
   282     1032  346E               	retlw	110	;'n'
   283     1033  3400               	retlw	0
   284     1030                     STR_7           equ	STR_6
   285     1030                     STR_8           equ	STR_6
   286     102C                     STR_4           equ	STR_3
   287     102C                     STR_5           equ	STR_3
   288                           
   289                           	psect	cinit
   290     07E3                     start_initialization:	
   291                           ; #config settings
   292                           
   293     07E3                     __initialization:
   294                           
   295                           ; Clear objects allocated to BANK0
   296     07E3  1283               	bcf	3,5	;RP0=0, select bank0
   297     07E4  1303               	bcf	3,6	;RP1=0, select bank0
   298     07E5  01EA               	clrf	__pbssBANK0& (0+127)
   299     07E6  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   300     07E7  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   301     07E8  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   302     07E9  01EE               	clrf	(__pbssBANK0+4)& (0+127)
   303                           
   304                           ; Clear objects allocated to BANK1
   305     07EA  1383               	bcf	3,7	;select IRP bank0
   306     07EB  30DA               	movlw	low __pbssBANK1
   307     07EC  0084               	movwf	4
   308     07ED  30E8               	movlw	low (__pbssBANK1+14)
   309     07EE  160A  158A  267A  120A  118A  	fcall	clear_ram0
   310                           
   311                           ; Clear objects allocated to BANK3
   312     07F3  1783               	bsf	3,7	;select IRP bank2
   313     07F4  3090               	movlw	low __pbssBANK3
   314     07F5  0084               	movwf	4
   315     07F6  30F0               	movlw	low (__pbssBANK3+96)
   316     07F7  160A  158A  267A  120A  118A  	fcall	clear_ram0
   317     07FC                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320     07FC                     __end_of__initialization:
   321     07FC  0183               	clrf	3
   322     07FD  160A  118A  2B79   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssBANK0
   325     006A                     __pbssBANK0:
   326     006A                     _prec:
   327     006A                     	ds	2
   328     006C                     _flags:
   329     006C                     	ds	1
   330     006D                     _raw_temp:
   331     006D                     	ds	2
   332                           
   333                           	psect	bssBANK1
   334     00DA                     __pbssBANK1:
   335     00DA                     floorf@F521:
   336     00DA                     	ds	4
   337     00DE                     ___fpclassifyf@F465:
   338     00DE                     	ds	4
   339     00E2                     _temperature:
   340     00E2                     	ds	4
   341     00E6                     _width:
   342     00E6                     	ds	2
   343                           
   344                           	psect	bssBANK3
   345     0190                     __pbssBANK3:
   346     0190                     _dbuf:
   347     0190                     	ds	80
   348     01E0                     _temp_str:
   349     01E0                     	ds	16
   350                           
   351                           	psect	clrtext
   352     1E7A                     clear_ram0:	
   353                           ;	Called with FSR containing the base address, and
   354                           ;	W with the last address+1
   355                           
   356     1E7A  0064               	clrwdt	;clear the watchdog before getting into this loop
   357     1E7B                     clrloop0:
   358     1E7B  0180               	clrf	0	;clear RAM location pointed to by FSR
   359     1E7C  0A84               	incf	4,f	;increment pointer
   360     1E7D  0604               	xorwf	4,w	;XOR with final address
   361     1E7E  1903               	btfsc	3,2	;have we reached the end yet?
   362     1E7F  3400               	retlw	0	;all done for this memory range, return
   363     1E80  0604               	xorwf	4,w	;XOR again to restore value
   364     1E81  2E7B               	goto	clrloop0	;do the next byte
   365                           
   366                           	psect	cstackBANK1
   367     00A0                     __pcstackBANK1:
   368     00A0                     efgtoa@ne:
   369                           
   370                           ; 2 bytes @ 0x0
   371     00A0                     	ds	2
   372     00A2                     efgtoa@p:
   373                           
   374                           ; 2 bytes @ 0x2
   375     00A2                     	ds	2
   376     00A4                     efgtoa@t:
   377                           
   378                           ; 2 bytes @ 0x4
   379     00A4                     	ds	2
   380     00A6                     _efgtoa$807:
   381                           
   382                           ; 2 bytes @ 0x6
   383     00A6                     	ds	2
   384     00A8                     efgtoa@pp:
   385                           
   386                           ; 1 bytes @ 0x8
   387     00A8                     	ds	1
   388     00A9                     efgtoa@mode:
   389                           
   390                           ; 1 bytes @ 0x9
   391     00A9                     	ds	1
   392     00AA                     efgtoa@nmode:
   393                           
   394                           ; 1 bytes @ 0xA
   395     00AA                     	ds	1
   396     00AB                     efgtoa@d:
   397                           
   398                           ; 2 bytes @ 0xB
   399     00AB                     	ds	2
   400     00AD                     efgtoa@m:
   401                           
   402                           ; 2 bytes @ 0xD
   403     00AD                     	ds	2
   404     00AF                     efgtoa@e:
   405                           
   406                           ; 2 bytes @ 0xF
   407     00AF                     	ds	2
   408     00B1                     efgtoa@w:
   409                           
   410                           ; 2 bytes @ 0x11
   411     00B1                     	ds	2
   412     00B3                     efgtoa@ou:
   413                           
   414                           ; 4 bytes @ 0x13
   415     00B3                     	ds	4
   416     00B7                     efgtoa@i:
   417                           
   418                           ; 2 bytes @ 0x17
   419     00B7                     	ds	2
   420     00B9                     efgtoa@h:
   421                           
   422                           ; 4 bytes @ 0x19
   423     00B9                     	ds	4
   424     00BD                     efgtoa@l:
   425                           
   426                           ; 4 bytes @ 0x1D
   427     00BD                     	ds	4
   428     00C1                     efgtoa@sign:
   429                           
   430                           ; 1 bytes @ 0x21
   431     00C1                     	ds	1
   432     00C2                     efgtoa@n:
   433                           
   434                           ; 2 bytes @ 0x22
   435     00C2                     	ds	2
   436     00C4                     efgtoa@g:
   437                           
   438                           ; 4 bytes @ 0x24
   439     00C4                     	ds	4
   440     00C8                     efgtoa@u:
   441                           
   442                           ; 4 bytes @ 0x28
   443     00C8                     	ds	4
   444     00CC                     ?_vfpfcnvrt:
   445     00CC                     vfpfcnvrt@fp:	
   446                           ; 1 bytes @ 0x2C
   447                           
   448                           
   449                           ; 2 bytes @ 0x2C
   450     00CC                     	ds	2
   451     00CE                     vfpfcnvrt@fmt:
   452                           
   453                           ; 1 bytes @ 0x2E
   454     00CE                     	ds	1
   455     00CF                     vfpfcnvrt@ap:
   456                           
   457                           ; 1 bytes @ 0x2F
   458     00CF                     	ds	1
   459     00D0                     ?_vfprintf:
   460     00D0                     vfprintf@fp:	
   461                           ; 2 bytes @ 0x30
   462                           
   463                           
   464                           ; 2 bytes @ 0x30
   465     00D0                     	ds	2
   466     00D2                     vfprintf@fmt:
   467                           
   468                           ; 1 bytes @ 0x32
   469     00D2                     	ds	1
   470     00D3                     vfprintf@ap:
   471                           
   472                           ; 1 bytes @ 0x33
   473     00D3                     	ds	1
   474     00D4                     ?_sprintf:
   475     00D4                     sprintf@s:	
   476                           ; 2 bytes @ 0x34
   477                           
   478                           
   479                           ; 1 bytes @ 0x34
   480     00D4                     	ds	1
   481     00D5                     sprintf@fmt:
   482                           
   483                           ; 1 bytes @ 0x35
   484     00D5                     	ds	5
   485                           
   486                           	psect	cstackCOMMON
   487     0070                     __pcstackCOMMON:
   488     0070                     ?_lcd_initialize:
   489     0070                     ?_lcd_command:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_strcpy:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_memcpy:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ?_putch:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_main:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ?_ds18b20_start:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_ds18b20_write_bit:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_ds18b20_write_byte:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_ds18b20_read_bit:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_ds18b20_read_byte:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_lcd_data:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?___fleq:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?__Umul8_16:	
   526                           ; 1 bit 
   527                           
   528     0070                     ?_fputc:	
   529                           ; 2 bytes @ 0x0
   530                           
   531     0070                     ?___fpclassifyf:	
   532                           ; 2 bytes @ 0x0
   533                           
   534     0070                     ?___wmul:	
   535                           ; 2 bytes @ 0x0
   536                           
   537     0070                     ?_labs:	
   538                           ; 2 bytes @ 0x0
   539                           
   540     0070                     ?___flneg:	
   541                           ; 4 bytes @ 0x0
   542                           
   543     0070                     ?___fltol:	
   544                           ; 4 bytes @ 0x0
   545                           
   546     0070                     ?___fladd:	
   547                           ; 4 bytes @ 0x0
   548                           
   549     0070                     ?___fldiv:	
   550                           ; 4 bytes @ 0x0
   551                           
   552     0070                     ?___xxtofl:	
   553                           ; 4 bytes @ 0x0
   554                           
   555     0070                     __Umul8_16@multiplicand:	
   556                           ; 4 bytes @ 0x0
   557                           
   558     0070                     memcpy@d1:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     putch@c:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     strcpy@dest:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ___wmul@multiplier:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     fputc@c:	
   571                           ; 2 bytes @ 0x0
   572                           
   573     0070                     ___fleq@ff1:	
   574                           ; 2 bytes @ 0x0
   575                           
   576     0070                     ___flneg@f1:	
   577                           ; 4 bytes @ 0x0
   578                           
   579     0070                     ___fltol@f1:	
   580                           ; 4 bytes @ 0x0
   581                           
   582     0070                     ___fladd@b:	
   583                           ; 4 bytes @ 0x0
   584                           
   585     0070                     ___fldiv@a:	
   586                           ; 4 bytes @ 0x0
   587                           
   588     0070                     ___xxtofl@val:	
   589                           ; 4 bytes @ 0x0
   590                           
   591     0070                     ___fpclassifyf@x:	
   592                           ; 4 bytes @ 0x0
   593                           
   594     0070                     labs@a:	
   595                           ; 4 bytes @ 0x0
   596                           
   597     0070                     ??_lcd_command:	
   598                           ; 4 bytes @ 0x0
   599                           
   600     0070                     ??_putch:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ??_ds18b20_start:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ??_ds18b20_write_bit:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ??_ds18b20_read_bit:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ??_lcd_data:	
   613                           ; 1 bytes @ 0x0
   614                           
   615                           
   616                           ; 1 bytes @ 0x0
   617     0070                     	ds	1
   618     0071                     ds18b20_write_bit@bit:
   619     0071                     ds18b20_read_bit@bit:	
   620                           ; 1 bytes @ 0x1
   621                           
   622     0071                     memcpy@s1:	
   623                           ; 1 bytes @ 0x1
   624                           
   625     0071                     strcpy@src:	
   626                           ; 1 bytes @ 0x1
   627                           
   628                           
   629                           ; 1 bytes @ 0x1
   630     0071                     	ds	1
   631     0072                     ds18b20_start@response:
   632     0072                     ds18b20_write_byte@byte:	
   633                           ; 1 bytes @ 0x2
   634                           
   635     0072                     ds18b20_read_byte@byte:	
   636                           ; 1 bytes @ 0x2
   637                           
   638     0072                     lcd_data@data:	
   639                           ; 1 bytes @ 0x2
   640                           
   641     0072                     lcd_command@cmd:	
   642                           ; 1 bytes @ 0x2
   643                           
   644     0072                     strcpy@d:	
   645                           ; 1 bytes @ 0x2
   646                           
   647     0072                     ___wmul@multiplicand:	
   648                           ; 1 bytes @ 0x2
   649                           
   650     0072                     memcpy@n:	
   651                           ; 2 bytes @ 0x2
   652                           
   653     0072                     fputc@fp:	
   654                           ; 2 bytes @ 0x2
   655                           
   656     0072                     ??__Umul8_16:	
   657                           ; 2 bytes @ 0x2
   658                           
   659     0072                     ??_strcpy:	
   660                           ; 1 bytes @ 0x2
   661                           
   662     0072                     ??_ds18b20_write_byte:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     0072                     ??_ds18b20_read_byte:	
   666                           ; 1 bytes @ 0x2
   667                           
   668                           
   669                           ; 1 bytes @ 0x2
   670     0072                     	ds	1
   671     0073                     ?_lcd_string:
   672     0073                     ds18b20_write_byte@i:	
   673                           ; 1 bytes @ 0x3
   674                           
   675     0073                     ds18b20_read_byte@i:	
   676                           ; 1 bytes @ 0x3
   677                           
   678     0073                     lcd_string@str:	
   679                           ; 1 bytes @ 0x3
   680                           
   681     0073                     ??_lcd_initialize:	
   682                           ; 2 bytes @ 0x3
   683                           
   684                           
   685                           ; 1 bytes @ 0x3
   686     0073                     	ds	1
   687     0074                     ?_ds18b20_read:
   688     0074                     ds18b20_read@raw_temp_value:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     memcpy@tmp:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     ___wmul@product:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     __Umul8_16@product:	
   698                           ; 2 bytes @ 0x4
   699                           
   700     0074                     ___fleq@ff2:	
   701                           ; 2 bytes @ 0x4
   702                           
   703     0074                     ___fladd@a:	
   704                           ; 4 bytes @ 0x4
   705                           
   706     0074                     ___fldiv@b:	
   707                           ; 4 bytes @ 0x4
   708                           
   709     0074                     ??_fputc:	
   710                           ; 4 bytes @ 0x4
   711                           
   712     0074                     ??___fpclassifyf:	
   713                           ; 1 bytes @ 0x4
   714                           
   715     0074                     ??_labs:	
   716                           ; 1 bytes @ 0x4
   717                           
   718     0074                     ??_memcpy:	
   719                           ; 1 bytes @ 0x4
   720                           
   721     0074                     ??___wmul:	
   722                           ; 1 bytes @ 0x4
   723                           
   724     0074                     ??___flneg:	
   725                           ; 1 bytes @ 0x4
   726                           
   727     0074                     ??___fltol:	
   728                           ; 1 bytes @ 0x4
   729                           
   730     0074                     ??___xxtofl:	
   731                           ; 1 bytes @ 0x4
   732                           
   733                           
   734                           ; 1 bytes @ 0x4
   735     0074                     	ds	1
   736     0075                     ds18b20_read@temp_l:
   737     0075                     lcd_string@len:	
   738                           ; 1 bytes @ 0x5
   739                           
   740     0075                     memcpy@d:	
   741                           ; 1 bytes @ 0x5
   742                           
   743     0075                     ??_ds18b20_read:	
   744                           ; 1 bytes @ 0x5
   745                           
   746                           
   747                           ; 1 bytes @ 0x5
   748     0075                     	ds	1
   749     0076                     ?_read_prec_or_width:
   750     0076                     ds18b20_read@temp_h:	
   751                           ; 2 bytes @ 0x6
   752                           
   753     0076                     lcd_string@i:	
   754                           ; 1 bytes @ 0x6
   755                           
   756     0076                     read_prec_or_width@fmt:	
   757                           ; 1 bytes @ 0x6
   758                           
   759     0076                     memcpy@s:	
   760                           ; 1 bytes @ 0x6
   761                           
   762     0076                     __Umul8_16@word_mpld:	
   763                           ; 1 bytes @ 0x6
   764                           
   765     0076                     ??_lcd_string:	
   766                           ; 2 bytes @ 0x6
   767                           
   768                           
   769                           ; 1 bytes @ 0x6
   770     0076                     	ds	1
   771     0077                     read_prec_or_width@ap:
   772                           
   773                           ; 1 bytes @ 0x7
   774     0077                     	ds	1
   775     0078                     ___fltol@sign1:
   776     0078                     ___fladd@signs:	
   777                           ; 1 bytes @ 0x8
   778                           
   779     0078                     __Umul8_16@multiplier:	
   780                           ; 1 bytes @ 0x8
   781                           
   782     0078                     ___xxtofl@sign:	
   783                           ; 1 bytes @ 0x8
   784                           
   785     0078                     read_prec_or_width@c:	
   786                           ; 1 bytes @ 0x8
   787                           
   788     0078                     ??___fleq:	
   789                           ; 1 bytes @ 0x8
   790                           
   791     0078                     ??___fldiv:	
   792                           ; 1 bytes @ 0x8
   793                           
   794     0078                     ??_read_prec_or_width:	
   795                           ; 1 bytes @ 0x8
   796                           
   797                           
   798                           ; 1 bytes @ 0x8
   799     0078                     	ds	1
   800     0079                     ___fltol@exp1:
   801     0079                     ___fladd@aexp:	
   802                           ; 1 bytes @ 0x9
   803                           
   804     0079                     ___xxtofl@exp:	
   805                           ; 1 bytes @ 0x9
   806                           
   807     0079                     read_prec_or_width@n:	
   808                           ; 1 bytes @ 0x9
   809                           
   810                           
   811                           ; 2 bytes @ 0x9
   812     0079                     	ds	1
   813     007A                     ___fladd@bexp:
   814     007A                     ___xxtofl@arg:	
   815                           ; 1 bytes @ 0xA
   816                           
   817                           
   818                           ; 4 bytes @ 0xA
   819     007A                     	ds	1
   820     007B                     ___fladd@grs:
   821                           
   822                           ; 1 bytes @ 0xB
   823     007B                     	ds	2
   824     007D                     ??_pad:
   825                           
   826                           ; 1 bytes @ 0xD
   827     007D                     	ds	1
   828     007E                     ??_vfprintf:
   829     007E                     ??___flsub:	
   830                           ; 1 bytes @ 0xE
   831                           
   832                           
   833                           	psect	cstackBANK0
   834     0020                     __pcstackBANK0:	
   835                           ; 1 bytes @ 0xE
   836                           
   837     0020                     ?_fputs:
   838     0020                     ?___flmul:	
   839                           ; 2 bytes @ 0x0
   840                           
   841     0020                     fputs@s:	
   842                           ; 4 bytes @ 0x0
   843                           
   844     0020                     ___fpclassifyf@e:	
   845                           ; 1 bytes @ 0x0
   846                           
   847     0020                     ___fldiv@rem:	
   848                           ; 2 bytes @ 0x0
   849                           
   850     0020                     ___flmul@b:	
   851                           ; 4 bytes @ 0x0
   852                           
   853     0020                     ??___fladd:	
   854                           ; 4 bytes @ 0x0
   855                           
   856                           
   857                           ; 1 bytes @ 0x0
   858     0020                     	ds	1
   859     0021                     fputs@fp:
   860                           
   861                           ; 2 bytes @ 0x1
   862     0021                     	ds	1
   863     0022                     ___fpclassifyf@u:
   864                           
   865                           ; 4 bytes @ 0x2
   866     0022                     	ds	1
   867     0023                     ??_fputs:
   868                           
   869                           ; 1 bytes @ 0x3
   870     0023                     	ds	1
   871     0024                     ___fldiv@sign:
   872     0024                     ___flmul@a:	
   873                           ; 1 bytes @ 0x4
   874                           
   875                           
   876                           ; 4 bytes @ 0x4
   877     0024                     	ds	1
   878     0025                     fputs@c:
   879     0025                     ___fldiv@new_exp:	
   880                           ; 1 bytes @ 0x5
   881                           
   882                           
   883                           ; 2 bytes @ 0x5
   884     0025                     	ds	1
   885     0026                     fputs@i:
   886                           
   887                           ; 2 bytes @ 0x6
   888     0026                     	ds	1
   889     0027                     ___fldiv@grs:
   890                           
   891                           ; 4 bytes @ 0x7
   892     0027                     	ds	1
   893     0028                     ?_pad:
   894     0028                     pad@fp:	
   895                           ; 1 bytes @ 0x8
   896                           
   897     0028                     ??___flmul:	
   898                           ; 2 bytes @ 0x8
   899                           
   900                           
   901                           ; 1 bytes @ 0x8
   902     0028                     	ds	2
   903     002A                     pad@buf:
   904                           
   905                           ; 1 bytes @ 0xA
   906     002A                     	ds	1
   907     002B                     ___fldiv@bexp:
   908     002B                     pad@p:	
   909                           ; 1 bytes @ 0xB
   910                           
   911                           
   912                           ; 2 bytes @ 0xB
   913     002B                     	ds	1
   914     002C                     ___fldiv@aexp:
   915                           
   916                           ; 1 bytes @ 0xC
   917     002C                     	ds	1
   918     002D                     ?_floorf:
   919     002D                     ___flmul@sign:	
   920                           ; 4 bytes @ 0xD
   921                           
   922     002D                     pad@i:	
   923                           ; 1 bytes @ 0xD
   924                           
   925     002D                     floorf@x:	
   926                           ; 2 bytes @ 0xD
   927                           
   928                           
   929                           ; 4 bytes @ 0xD
   930     002D                     	ds	1
   931     002E                     ___flmul@grs:
   932                           
   933                           ; 4 bytes @ 0xE
   934     002E                     	ds	3
   935     0031                     ??_floorf:
   936                           
   937                           ; 1 bytes @ 0x11
   938     0031                     	ds	1
   939     0032                     ___flmul@aexp:
   940                           
   941                           ; 1 bytes @ 0x12
   942     0032                     	ds	1
   943     0033                     ___flmul@bexp:
   944                           
   945                           ; 1 bytes @ 0x13
   946     0033                     	ds	1
   947     0034                     ___flmul@prod:
   948                           
   949                           ; 4 bytes @ 0x14
   950     0034                     	ds	3
   951     0037                     floorf@m:
   952                           
   953                           ; 4 bytes @ 0x17
   954     0037                     	ds	1
   955     0038                     ___flmul@temp:
   956                           
   957                           ; 2 bytes @ 0x18
   958     0038                     	ds	2
   959     003A                     ?___flge:
   960     003A                     ?___flsub:	
   961                           ; 1 bit 
   962                           
   963     003A                     ___flge@ff1:	
   964                           ; 4 bytes @ 0x1A
   965                           
   966     003A                     ___flsub@a:	
   967                           ; 4 bytes @ 0x1A
   968                           
   969                           
   970                           ; 4 bytes @ 0x1A
   971     003A                     	ds	1
   972     003B                     floorf@e:
   973                           
   974                           ; 2 bytes @ 0x1B
   975     003B                     	ds	2
   976     003D                     floorf@u:
   977                           
   978                           ; 4 bytes @ 0x1D
   979     003D                     	ds	1
   980     003E                     ___flge@ff2:
   981     003E                     ___flsub@b:	
   982                           ; 4 bytes @ 0x1E
   983                           
   984                           
   985                           ; 4 bytes @ 0x1E
   986     003E                     	ds	4
   987     0042                     ??___flge:
   988                           
   989                           ; 1 bytes @ 0x22
   990     0042                     	ds	4
   991     0046                     ?_efgtoa:
   992     0046                     efgtoa@fp:	
   993                           ; 1 bytes @ 0x26
   994                           
   995                           
   996                           ; 2 bytes @ 0x26
   997     0046                     	ds	2
   998     0048                     efgtoa@f:
   999                           
  1000                           ; 4 bytes @ 0x28
  1001     0048                     	ds	4
  1002     004C                     efgtoa@c:
  1003                           
  1004                           ; 1 bytes @ 0x2C
  1005     004C                     	ds	1
  1006     004D                     ??_efgtoa:
  1007                           
  1008                           ; 1 bytes @ 0x2D
  1009     004D                     	ds	4
  1010     0051                     ??_vfpfcnvrt:
  1011                           
  1012                           ; 1 bytes @ 0x31
  1013     0051                     	ds	2
  1014     0053                     vfpfcnvrt@convarg:
  1015                           
  1016                           ; 4 bytes @ 0x33
  1017     0053                     	ds	4
  1018     0057                     vfpfcnvrt@c:
  1019                           
  1020                           ; 1 bytes @ 0x37
  1021     0057                     	ds	1
  1022     0058                     vfpfcnvrt@cp:
  1023                           
  1024                           ; 1 bytes @ 0x38
  1025     0058                     	ds	1
  1026     0059                     vfprintf@cfmt:
  1027                           
  1028                           ; 1 bytes @ 0x39
  1029     0059                     	ds	1
  1030     005A                     ??_sprintf:
  1031                           
  1032                           ; 1 bytes @ 0x3A
  1033     005A                     	ds	1
  1034     005B                     sprintf@ap:
  1035                           
  1036                           ; 1 bytes @ 0x3B
  1037     005B                     	ds	1
  1038     005C                     sprintf@f:
  1039                           
  1040                           ; 11 bytes @ 0x3C
  1041     005C                     	ds	11
  1042     0067                     ??_main:
  1043                           
  1044                           ; 1 bytes @ 0x47
  1045     0067                     	ds	3
  1046                           
  1047                           	psect	maintext
  1048     1379                     __pmaintext:	
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 45 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : B00/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0
  1070 ;;      Temps:          0       3       0       0       0
  1071 ;;      Totals:         0       3       0       0       0
  1072 ;;Total ram usage:        3 bytes
  1073 ;; Hardware stack levels required when called: 8
  1074 ;; This function calls:
  1075 ;;		___flmul
  1076 ;;		___xxtofl
  1077 ;;		_ds18b20_read
  1078 ;;		_lcd_command
  1079 ;;		_lcd_initialize
  1080 ;;		_lcd_string
  1081 ;;		_sprintf
  1082 ;; This function is called by:
  1083 ;;		Startup code after reset
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087     1379                     _main:	
  1088                           ;psect for function _main
  1089                           
  1090     1379                     l3266:	
  1091                           ;incstack = 0
  1092                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1093                           
  1094                           
  1095                           ;main.c: 47:     TRISCbits.TRISC0 = 0;
  1096     1379  1683               	bsf	3,5	;RP0=1, select bank1
  1097     137A  1303               	bcf	3,6	;RP1=0, select bank1
  1098     137B  1007               	bcf	7,0	;volatile
  1099                           
  1100                           ;main.c: 48:     TRISCbits.TRISC1 = 0;
  1101     137C  1087               	bcf	7,1	;volatile
  1102                           
  1103                           ;main.c: 49:     TRISCbits.TRISC2 = 0;
  1104     137D  1107               	bcf	7,2	;volatile
  1105                           
  1106                           ;main.c: 51:     TRISDbits.TRISD4 = 0;
  1107     137E  1208               	bcf	8,4	;volatile
  1108                           
  1109                           ;main.c: 52:     TRISDbits.TRISD5 = 0;
  1110     137F  1288               	bcf	8,5	;volatile
  1111                           
  1112                           ;main.c: 53:     TRISDbits.TRISD6 = 0;
  1113     1380  1308               	bcf	8,6	;volatile
  1114                           
  1115                           ;main.c: 54:     TRISDbits.TRISD7 = 0;
  1116     1381  1388               	bcf	8,7	;volatile
  1117                           
  1118                           ;main.c: 57:     TRISBbits.TRISB1 = 1;
  1119     1382  1486               	bsf	6,1	;volatile
  1120     1383                     l3268:
  1121                           
  1122                           ;main.c: 59:     lcd_initialize();
  1123     1383  160A  158A  27AF  160A  118A  	fcall	_lcd_initialize
  1124     1388                     l3270:
  1125                           
  1126                           ;main.c: 62:         if(ds18b20_read(&raw_temp)) {
  1127     1388  306D               	movlw	(low (_raw_temp| 0))& (0+255)
  1128     1389  00F4               	movwf	ds18b20_read@raw_temp_value
  1129     138A  160A  118A  2176  160A  118A  	fcall	_ds18b20_read
  1130     138F  3A00               	xorlw	0
  1131     1390  1903               	skipnz
  1132     1391  2B93               	goto	u4861
  1133     1392  2B94               	goto	u4860
  1134     1393                     u4861:
  1135     1393  2BF7               	goto	l3280
  1136     1394                     u4860:
  1137     1394                     l3272:
  1138                           
  1139                           ;main.c: 64:             temperature = (float)raw_temp * 0.0625;
  1140     1394  303D               	movlw	61
  1141     1395  1283               	bcf	3,5	;RP0=0, select bank0
  1142     1396  1303               	bcf	3,6	;RP1=0, select bank0
  1143     1397  00A3               	movwf	___flmul@b+3
  1144     1398  3080               	movlw	128
  1145     1399  00A2               	movwf	___flmul@b+2
  1146     139A  3000               	movlw	0
  1147     139B  00A1               	movwf	___flmul@b+1
  1148     139C  3000               	movlw	0
  1149     139D  00A0               	movwf	___flmul@b
  1150     139E  086D               	movf	_raw_temp,w
  1151     139F  00F0               	movwf	___xxtofl@val
  1152     13A0  086E               	movf	_raw_temp+1,w
  1153     13A1  00F1               	movwf	___xxtofl@val+1
  1154     13A2  3000               	movlw	0
  1155     13A3  1BF1               	btfsc	___xxtofl@val+1,7
  1156     13A4  30FF               	movlw	255
  1157     13A5  00F2               	movwf	___xxtofl@val+2
  1158     13A6  00F3               	movwf	___xxtofl@val+3
  1159     13A7  3001               	movlw	1
  1160     13A8  120A  118A  201C  160A  118A  	fcall	___xxtofl
  1161     13AD  0873               	movf	?___xxtofl+3,w
  1162     13AE  1283               	bcf	3,5	;RP0=0, select bank0
  1163     13AF  1303               	bcf	3,6	;RP1=0, select bank0
  1164     13B0  00A7               	movwf	___flmul@a+3
  1165     13B1  0872               	movf	?___xxtofl+2,w
  1166     13B2  00A6               	movwf	___flmul@a+2
  1167     13B3  0871               	movf	?___xxtofl+1,w
  1168     13B4  00A5               	movwf	___flmul@a+1
  1169     13B5  0870               	movf	?___xxtofl,w
  1170     13B6  00A4               	movwf	___flmul@a
  1171     13B7  120A  158A  24BE  160A  118A  	fcall	___flmul
  1172     13BC  1283               	bcf	3,5	;RP0=0, select bank0
  1173     13BD  1303               	bcf	3,6	;RP1=0, select bank0
  1174     13BE  0823               	movf	?___flmul+3,w
  1175     13BF  1683               	bsf	3,5	;RP0=1, select bank1
  1176     13C0  1303               	bcf	3,6	;RP1=0, select bank1
  1177     13C1  00E5               	movwf	(_temperature+3)^(0+128)
  1178     13C2  1283               	bcf	3,5	;RP0=0, select bank0
  1179     13C3  1303               	bcf	3,6	;RP1=0, select bank0
  1180     13C4  0822               	movf	?___flmul+2,w
  1181     13C5  1683               	bsf	3,5	;RP0=1, select bank1
  1182     13C6  1303               	bcf	3,6	;RP1=0, select bank1
  1183     13C7  00E4               	movwf	(_temperature+2)^(0+128)
  1184     13C8  1283               	bcf	3,5	;RP0=0, select bank0
  1185     13C9  1303               	bcf	3,6	;RP1=0, select bank0
  1186     13CA  0821               	movf	?___flmul+1,w
  1187     13CB  1683               	bsf	3,5	;RP0=1, select bank1
  1188     13CC  1303               	bcf	3,6	;RP1=0, select bank1
  1189     13CD  00E3               	movwf	(_temperature+1)^(0+128)
  1190     13CE  1283               	bcf	3,5	;RP0=0, select bank0
  1191     13CF  1303               	bcf	3,6	;RP1=0, select bank0
  1192     13D0  0820               	movf	?___flmul,w
  1193     13D1  1683               	bsf	3,5	;RP0=1, select bank1
  1194     13D2  1303               	bcf	3,6	;RP1=0, select bank1
  1195     13D3  00E2               	movwf	_temperature^(0+128)
  1196     13D4                     l3274:
  1197                           
  1198                           ;main.c: 67:             sprintf(temp_str, "Temp: %2.1f C", temperature);
  1199     13D4  30E0               	movlw	(low (_temp_str| (0+256)))& (0+255)
  1200     13D5  00D4               	movwf	sprintf@s^(0+128)
  1201     13D6  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1202     13D7  00D5               	movwf	sprintf@fmt^(0+128)
  1203     13D8  0865               	movf	(_temperature+3)^(0+128),w
  1204     13D9  00D9               	movwf	((?_sprintf+3)^(0+128)+2)
  1205     13DA  0864               	movf	(_temperature+2)^(0+128),w
  1206     13DB  00D8               	movwf	((?_sprintf+2)^(0+128)+2)
  1207     13DC  0863               	movf	(_temperature+1)^(0+128),w
  1208     13DD  00D7               	movwf	((?_sprintf+1)^(0+128)+2)
  1209     13DE  0862               	movf	_temperature^(0+128),w
  1210     13DF  00D6               	movwf	(?_sprintf^(0+128)+2)
  1211     13E0  160A  118A  209D  160A  118A  	fcall	_sprintf
  1212     13E5                     l3276:
  1213                           
  1214                           ;main.c: 70:             lcd_command(0x80);
  1215     13E5  3080               	movlw	128
  1216     13E6  160A  118A  20CA  160A  118A  	fcall	_lcd_command
  1217     13EB                     l3278:
  1218                           
  1219                           ;main.c: 71:             lcd_string(temp_str, 16);
  1220     13EB  30E0               	movlw	(low (_temp_str| (0+256)))& (0+255)
  1221     13EC  00F3               	movwf	lcd_string@str
  1222     13ED  3001               	movlw	1
  1223     13EE  00F4               	movwf	lcd_string@str+1
  1224     13EF  3010               	movlw	16
  1225     13F0  00F5               	movwf	lcd_string@len
  1226     13F1  160A  158A  26E1  160A  118A  	fcall	_lcd_string
  1227                           
  1228                           ;main.c: 72:         } else {
  1229     13F6  2C08               	goto	l3284
  1230     13F7                     l3280:
  1231                           
  1232                           ;main.c: 73:             lcd_command(0x80);
  1233     13F7  3080               	movlw	128
  1234     13F8  160A  118A  20CA  160A  118A  	fcall	_lcd_command
  1235     13FD                     l3282:
  1236                           
  1237                           ;main.c: 74:             lcd_string("Sensor Error!", 12);
  1238     13FD  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1239     13FE  00F3               	movwf	lcd_string@str
  1240     13FF  3080               	movlw	128
  1241     1400  00F4               	movwf	lcd_string@str+1
  1242     1401  300C               	movlw	12
  1243     1402  00F5               	movwf	lcd_string@len
  1244     1403  160A  158A  26E1  160A  118A  	fcall	_lcd_string
  1245     1408                     l3284:
  1246                           
  1247                           ;main.c: 76:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1248     1408  301A               	movlw	26
  1249     1409  1283               	bcf	3,5	;RP0=0, select bank0
  1250     140A  1303               	bcf	3,6	;RP1=0, select bank0
  1251     140B  00E9               	movwf	??_main+2
  1252     140C  305E               	movlw	94
  1253     140D  00E8               	movwf	??_main+1
  1254     140E  306D               	movlw	109
  1255     140F  00E7               	movwf	??_main
  1256     1410                     u4877:
  1257     1410  0BE7               	decfsz	??_main,f
  1258     1411  2C10               	goto	u4877
  1259     1412  0BE8               	decfsz	??_main+1,f
  1260     1413  2C10               	goto	u4877
  1261     1414  0BE9               	decfsz	??_main+2,f
  1262     1415  2C10               	goto	u4877
  1263     1416  2C17               	nop2
  1264     1417  2B88               	goto	l3270
  1265     1418  120A  118A  2800   	ljmp	start
  1266     141B                     __end_of_main:
  1267                           
  1268                           	psect	text1
  1269     109D                     __ptext1:	
  1270 ;; *************** function _sprintf *****************
  1271 ;; Defined at:
  1272 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  s               1   52[BANK1 ] PTR unsigned char 
  1275 ;;		 -> temp_str(16), 
  1276 ;;  fmt             1   53[BANK1 ] PTR const unsigned char 
  1277 ;;		 -> STR_1(14), 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  f              11   60[BANK0 ] struct _IO_FILE
  1280 ;;  ret             2    0        int 
  1281 ;;  ap              1   59[BANK0 ] PTR void [1]
  1282 ;;		 -> ?_sprintf(2), 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2   52[BANK1 ] int 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       6       0       0
  1293 ;;      Locals:         0      12       0       0       0
  1294 ;;      Temps:          0       1       0       0       0
  1295 ;;      Totals:         0      13       6       0       0
  1296 ;;Total ram usage:       19 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 7
  1299 ;; This function calls:
  1300 ;;		_vfprintf
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306     109D                     _sprintf:	
  1307                           ;psect for function _sprintf
  1308                           
  1309     109D                     l3202:	
  1310                           ;incstack = 0
  1311                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1312                           
  1313     109D  30D6               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1314     109E  1283               	bcf	3,5	;RP0=0, select bank0
  1315     109F  1303               	bcf	3,6	;RP1=0, select bank0
  1316     10A0  00DB               	movwf	sprintf@ap
  1317     10A1                     l3204:
  1318     10A1  1683               	bsf	3,5	;RP0=1, select bank1
  1319     10A2  1303               	bcf	3,6	;RP1=0, select bank1
  1320     10A3  0854               	movf	sprintf@s^(0+128),w
  1321     10A4  1283               	bcf	3,5	;RP0=0, select bank0
  1322     10A5  1303               	bcf	3,6	;RP1=0, select bank0
  1323     10A6  00DC               	movwf	sprintf@f
  1324     10A7  3001               	movlw	1
  1325     10A8  00DD               	movwf	sprintf@f+1
  1326     10A9                     l3206:
  1327     10A9  01DE               	clrf	sprintf@f+2
  1328     10AA  01DF               	clrf	sprintf@f+3
  1329     10AB                     l3208:
  1330     10AB  01E5               	clrf	sprintf@f+9
  1331     10AC  01E6               	clrf	sprintf@f+10
  1332     10AD                     l3210:
  1333     10AD  305C               	movlw	low sprintf@f
  1334     10AE  1683               	bsf	3,5	;RP0=1, select bank1
  1335     10AF  1303               	bcf	3,6	;RP1=0, select bank1
  1336     10B0  00D0               	movwf	vfprintf@fp^(0+128)
  1337     10B1  3000               	movlw	high sprintf@f
  1338     10B2  00D1               	movwf	(vfprintf@fp^(0+128)+1)
  1339     10B3  0855               	movf	sprintf@fmt^(0+128),w
  1340     10B4  00D2               	movwf	vfprintf@fmt^(0+128)
  1341     10B5  305B               	movlw	(low (sprintf@ap| 0))& (0+255)
  1342     10B6  00D3               	movwf	vfprintf@ap^(0+128)
  1343     10B7  160A  158A  27D7  160A  118A  	fcall	_vfprintf
  1344     10BC                     l3212:
  1345     10BC  1283               	bcf	3,5	;RP0=0, select bank0
  1346     10BD  1303               	bcf	3,6	;RP1=0, select bank0
  1347     10BE  085E               	movf	sprintf@f+2,w
  1348     10BF  1683               	bsf	3,5	;RP0=1, select bank1
  1349     10C0  1303               	bcf	3,6	;RP1=0, select bank1
  1350     10C1  0754               	addwf	sprintf@s^(0+128),w
  1351     10C2  1283               	bcf	3,5	;RP0=0, select bank0
  1352     10C3  1303               	bcf	3,6	;RP1=0, select bank0
  1353     10C4  00DA               	movwf	??_sprintf
  1354     10C5  085A               	movf	??_sprintf,w
  1355     10C6  0084               	movwf	4
  1356     10C7  1783               	bsf	3,7	;select IRP bank2
  1357     10C8  0180               	clrf	0
  1358     10C9                     l633:
  1359     10C9  0008               	return
  1360     10CA                     __end_of_sprintf:
  1361                           
  1362                           	psect	text2
  1363     1FD7                     __ptext2:	
  1364 ;; *************** function _vfprintf *****************
  1365 ;; Defined at:
  1366 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  fp              2   48[BANK1 ] PTR struct _IO_FILE
  1369 ;;		 -> sprintf@f(11), 
  1370 ;;  fmt             1   50[BANK1 ] PTR const unsigned char 
  1371 ;;		 -> STR_1(14), 
  1372 ;;  ap              1   51[BANK1 ] PTR PTR void 
  1373 ;;		 -> sprintf@ap(1), 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  cfmt            1   57[BANK0 ] PTR unsigned char 
  1376 ;;		 -> STR_1(14), 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2   48[BANK1 ] int 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       4       0       0
  1387 ;;      Locals:         0       1       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         0       1       4       0       0
  1390 ;;Total ram usage:        5 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 6
  1393 ;; This function calls:
  1394 ;;		_vfpfcnvrt
  1395 ;; This function is called by:
  1396 ;;		_sprintf
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400     1FD7                     _vfprintf:	
  1401                           ;psect for function _vfprintf
  1402                           
  1403     1FD7                     l3164:	
  1404                           ;incstack = 0
  1405 ;; using string table level
  1406                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1407                           
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1410     1FD7  1683               	bsf	3,5	;RP0=1, select bank1
  1411     1FD8  1303               	bcf	3,6	;RP1=0, select bank1
  1412     1FD9  0852               	movf	vfprintf@fmt^(0+128),w
  1413     1FDA  1283               	bcf	3,5	;RP0=0, select bank0
  1414     1FDB  1303               	bcf	3,6	;RP1=0, select bank0
  1415     1FDC  00D9               	movwf	vfprintf@cfmt
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1418     1FDD  2FED               	goto	l3168
  1419     1FDE                     l3166:
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1422     1FDE  1683               	bsf	3,5	;RP0=1, select bank1
  1423     1FDF  1303               	bcf	3,6	;RP1=0, select bank1
  1424     1FE0  0850               	movf	vfprintf@fp^(0+128),w
  1425     1FE1  00CC               	movwf	vfpfcnvrt@fp^(0+128)
  1426     1FE2  0851               	movf	(vfprintf@fp+1)^(0+128),w
  1427     1FE3  00CD               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  1428     1FE4  3059               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1429     1FE5  00CE               	movwf	vfpfcnvrt@fmt^(0+128)
  1430     1FE6  0853               	movf	vfprintf@ap^(0+128),w
  1431     1FE7  00CF               	movwf	vfpfcnvrt@ap^(0+128)
  1432     1FE8  160A  118A  26D9  160A  158A  	fcall	_vfpfcnvrt
  1433     1FED                     l3168:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1436     1FED  1283               	bcf	3,5	;RP0=0, select bank0
  1437     1FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1438     1FEF  0859               	movf	vfprintf@cfmt,w
  1439     1FF0  0084               	movwf	4
  1440     1FF1  160A  118A  200A  160A  158A  	fcall	stringdir
  1441     1FF6  3A00               	xorlw	0
  1442     1FF7  1D03               	skipz
  1443     1FF8  2FFA               	goto	u4671
  1444     1FF9  2FFB               	goto	u4670
  1445     1FFA                     u4671:
  1446     1FFA  2FDE               	goto	l3166
  1447     1FFB                     u4670:
  1448     1FFB                     l3170:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1451     1FFB  1683               	bsf	3,5	;RP0=1, select bank1
  1452     1FFC  1303               	bcf	3,6	;RP1=0, select bank1
  1453     1FFD  01D0               	clrf	?_vfprintf^(0+128)
  1454     1FFE  01D1               	clrf	(?_vfprintf+1)^(0+128)
  1455     1FFF                     l754:
  1456     1FFF  0008               	return
  1457     2000                     __end_of_vfprintf:
  1458                           
  1459                           	psect	text3
  1460     16D9                     __ptext3:	
  1461 ;; *************** function _vfpfcnvrt *****************
  1462 ;; Defined at:
  1463 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  1466 ;;		 -> sprintf@f(11), 
  1467 ;;  fmt             1   46[BANK1 ] PTR PTR unsigned char 
  1468 ;;		 -> vfprintf@cfmt(1), 
  1469 ;;  ap              1   47[BANK1 ] PTR PTR void 
  1470 ;;		 -> sprintf@ap(1), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  convarg         4   51[BANK0 ] struct .
  1473 ;;  cp              1   56[BANK0 ] PTR unsigned char 
  1474 ;;		 -> STR_1(14), 
  1475 ;;  c               1   55[BANK0 ] unsigned char 
  1476 ;;  done            1    0        _Bool 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       4       0       0
  1487 ;;      Locals:         0       6       0       0       0
  1488 ;;      Temps:          0       2       0       0       0
  1489 ;;      Totals:         0       8       4       0       0
  1490 ;;Total ram usage:       12 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 5
  1493 ;; This function calls:
  1494 ;;		_efgtoa
  1495 ;;		_fputc
  1496 ;;		_read_prec_or_width
  1497 ;; This function is called by:
  1498 ;;		_vfprintf
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502     16D9                     _vfpfcnvrt:	
  1503                           ;psect for function _vfpfcnvrt
  1504                           
  1505     16D9                     l3018:	
  1506                           ;incstack = 0
  1507 ;; using string table level
  1508                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1509                           
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1512     16D9  1683               	bsf	3,5	;RP0=1, select bank1
  1513     16DA  1303               	bcf	3,6	;RP1=0, select bank1
  1514     16DB  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1515     16DC  0084               	movwf	4
  1516     16DD  1383               	bcf	3,7	;select IRP bank0
  1517     16DE  0800               	movf	0,w
  1518     16DF  0084               	movwf	4
  1519     16E0  160A  118A  200A  160A  118A  	fcall	stringdir
  1520     16E5  3A25               	xorlw	37
  1521     16E6  1D03               	skipz
  1522     16E7  2EE9               	goto	u4561
  1523     16E8  2EEA               	goto	u4560
  1524     16E9                     u4561:
  1525     16E9  2FE2               	goto	l3076
  1526     16EA                     u4560:
  1527     16EA                     l3020:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1530     16EA  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1531     16EB  0084               	movwf	4
  1532     16EC  3001               	movlw	1
  1533     16ED  0780               	addwf	0,f
  1534     16EE                     l3022:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1537     16EE  01E6               	clrf	_width^(0+128)
  1538     16EF  01E7               	clrf	(_width+1)^(0+128)
  1539     16F0  3000               	movlw	0
  1540     16F1  1283               	bcf	3,5	;RP0=0, select bank0
  1541     16F2  1303               	bcf	3,6	;RP1=0, select bank0
  1542     16F3  00EC               	movwf	_flags
  1543     16F4                     l3024:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1546     16F4  30FF               	movlw	255
  1547     16F5  00EA               	movwf	_prec
  1548     16F6  30FF               	movlw	255
  1549     16F7  00EB               	movwf	_prec+1
  1550     16F8                     l3026:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1553     16F8  1683               	bsf	3,5	;RP0=1, select bank1
  1554     16F9  1303               	bcf	3,6	;RP1=0, select bank1
  1555     16FA  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1556     16FB  00F6               	movwf	read_prec_or_width@fmt
  1557     16FC  084F               	movf	vfpfcnvrt@ap^(0+128),w
  1558     16FD  00F7               	movwf	read_prec_or_width@ap
  1559     16FE  160A  118A  2218  160A  118A  	fcall	_read_prec_or_width
  1560     1703  0877               	movf	?_read_prec_or_width+1,w
  1561     1704  1683               	bsf	3,5	;RP0=1, select bank1
  1562     1705  1303               	bcf	3,6	;RP1=0, select bank1
  1563     1706  00E7               	movwf	(_width+1)^(0+128)
  1564     1707  0876               	movf	?_read_prec_or_width,w
  1565     1708  00E6               	movwf	_width^(0+128)
  1566     1709                     l3028:
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1569     1709  1FE7               	btfss	(_width+1)^(0+128),7
  1570     170A  2F0C               	goto	u4571
  1571     170B  2F0D               	goto	u4570
  1572     170C                     u4571:
  1573     170C  2F17               	goto	l3034
  1574     170D                     u4570:
  1575     170D                     l3030:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1578     170D  1283               	bcf	3,5	;RP0=0, select bank0
  1579     170E  1303               	bcf	3,6	;RP1=0, select bank0
  1580     170F  146C               	bsf	_flags,0
  1581     1710                     l3032:
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1584     1710  1683               	bsf	3,5	;RP0=1, select bank1
  1585     1711  1303               	bcf	3,6	;RP1=0, select bank1
  1586     1712  09E6               	comf	_width^(0+128),f
  1587     1713  09E7               	comf	(_width+1)^(0+128),f
  1588     1714  0AE6               	incf	_width^(0+128),f
  1589     1715  1903               	skipnz
  1590     1716  0AE7               	incf	(_width+1)^(0+128),f
  1591     1717                     l3034:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1594     1717  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1595     1718  0084               	movwf	4
  1596     1719  1383               	bcf	3,7	;select IRP bank0
  1597     171A  0800               	movf	0,w
  1598     171B  0084               	movwf	4
  1599     171C  160A  118A  200A  160A  118A  	fcall	stringdir
  1600     1721  3A2E               	xorlw	46
  1601     1722  1D03               	skipz
  1602     1723  2F25               	goto	u4581
  1603     1724  2F26               	goto	u4580
  1604     1725                     u4581:
  1605     1725  2F39               	goto	l3040
  1606     1726                     u4580:
  1607     1726                     l3036:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1610     1726  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1611     1727  0084               	movwf	4
  1612     1728  3001               	movlw	1
  1613     1729  0780               	addwf	0,f
  1614     172A                     l3038:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1617     172A  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1618     172B  00F6               	movwf	read_prec_or_width@fmt
  1619     172C  084F               	movf	vfpfcnvrt@ap^(0+128),w
  1620     172D  00F7               	movwf	read_prec_or_width@ap
  1621     172E  160A  118A  2218  160A  118A  	fcall	_read_prec_or_width
  1622     1733  0877               	movf	?_read_prec_or_width+1,w
  1623     1734  1283               	bcf	3,5	;RP0=0, select bank0
  1624     1735  1303               	bcf	3,6	;RP1=0, select bank0
  1625     1736  00EB               	movwf	_prec+1
  1626     1737  0876               	movf	?_read_prec_or_width,w
  1627     1738  00EA               	movwf	_prec
  1628     1739                     l3040:
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1631     1739  1683               	bsf	3,5	;RP0=1, select bank1
  1632     173A  1303               	bcf	3,6	;RP1=0, select bank1
  1633     173B  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1634     173C  0084               	movwf	4
  1635     173D  1383               	bcf	3,7	;select IRP bank0
  1636     173E  0800               	movf	0,w
  1637     173F  1283               	bcf	3,5	;RP0=0, select bank0
  1638     1740  1303               	bcf	3,6	;RP1=0, select bank0
  1639     1741  00D8               	movwf	vfpfcnvrt@cp
  1640     1742                     l3042:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1643     1742  0858               	movf	vfpfcnvrt@cp,w
  1644     1743  0084               	movwf	4
  1645     1744  160A  118A  200A  160A  118A  	fcall	stringdir
  1646     1749  00D7               	movwf	vfpfcnvrt@c
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1649     174A  2F53               	goto	l3050
  1650     174B                     l3044:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1653     174B  3001               	movlw	1
  1654     174C  07D8               	addwf	vfpfcnvrt@cp,f
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
  1657     174D  2F5E               	goto	l3052
  1658     174E                     l736:	
  1659                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  1660                           
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1663     174E  306C               	movlw	108
  1664     174F  00D7               	movwf	vfpfcnvrt@c
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
  1667     1750  2F5E               	goto	l3052
  1668     1751                     l3046:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1671     1751  01D7               	clrf	vfpfcnvrt@c
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
  1674     1752  2F5E               	goto	l3052
  1675     1753                     l3050:
  1676     1753  0857               	movf	vfpfcnvrt@c,w
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 3, Range of values is 76 to 108
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte           10     6 (average)
  1683                           ; direct_byte          110    11 (fixed)
  1684                           ; jumptable            263     9 (fixed)
  1685                           ;	Chosen strategy is simple_byte
  1686     1754  3A4C               	xorlw	76	; case 76
  1687     1755  1903               	skipnz
  1688     1756  2F4B               	goto	l3044
  1689     1757  3A2A               	xorlw	42	; case 102
  1690     1758  1903               	skipnz
  1691     1759  2F4E               	goto	l736
  1692     175A  3A0A               	xorlw	10	; case 108
  1693     175B  1903               	skipnz
  1694     175C  2F4B               	goto	l3044
  1695     175D  2F51               	goto	l3046
  1696     175E                     l3052:
  1697     175E  0858               	movf	vfpfcnvrt@cp,w
  1698     175F  0084               	movwf	4
  1699     1760  160A  118A  200A  160A  118A  	fcall	stringdir
  1700     1765  3A66               	xorlw	102
  1701     1766  1D03               	skipz
  1702     1767  2F69               	goto	u4591
  1703     1768  2F6A               	goto	u4590
  1704     1769                     u4591:
  1705     1769  2FDA               	goto	l3072
  1706     176A                     u4590:
  1707     176A  2F9B               	goto	l3060
  1708     176B                     l3054:
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1711     176B  1683               	bsf	3,5	;RP0=1, select bank1
  1712     176C  1303               	bcf	3,6	;RP1=0, select bank1
  1713     176D  084F               	movf	vfpfcnvrt@ap^(0+128),w
  1714     176E  0084               	movwf	4
  1715     176F  0800               	movf	0,w
  1716     1770  00FF               	movwf	btemp+1
  1717     1771  3004               	movlw	4
  1718     1772  0780               	addwf	0,f
  1719     1773  087F               	movf	btemp+1,w
  1720     1774  0084               	movwf	4
  1721     1775  0800               	movf	0,w
  1722     1776  1283               	bcf	3,5	;RP0=0, select bank0
  1723     1777  1303               	bcf	3,6	;RP1=0, select bank0
  1724     1778  00D3               	movwf	vfpfcnvrt@convarg
  1725     1779  0A84               	incf	4,f
  1726     177A  0800               	movf	0,w
  1727     177B  00D4               	movwf	vfpfcnvrt@convarg+1
  1728     177C  0A84               	incf	4,f
  1729     177D  0800               	movf	0,w
  1730     177E  00D5               	movwf	vfpfcnvrt@convarg+2
  1731     177F  0A84               	incf	4,f
  1732     1780  0800               	movf	0,w
  1733     1781  00D6               	movwf	vfpfcnvrt@convarg+3
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
  1736     1782  2FA3               	goto	l3062
  1737     1783                     l3056:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1740     1783  1683               	bsf	3,5	;RP0=1, select bank1
  1741     1784  1303               	bcf	3,6	;RP1=0, select bank1
  1742     1785  084F               	movf	vfpfcnvrt@ap^(0+128),w
  1743     1786  0084               	movwf	4
  1744     1787  0800               	movf	0,w
  1745     1788  00FF               	movwf	btemp+1
  1746     1789  3004               	movlw	4
  1747     178A  0780               	addwf	0,f
  1748     178B  087F               	movf	btemp+1,w
  1749     178C  0084               	movwf	4
  1750     178D  0800               	movf	0,w
  1751     178E  1283               	bcf	3,5	;RP0=0, select bank0
  1752     178F  1303               	bcf	3,6	;RP1=0, select bank0
  1753     1790  00D3               	movwf	vfpfcnvrt@convarg
  1754     1791  0A84               	incf	4,f
  1755     1792  0800               	movf	0,w
  1756     1793  00D4               	movwf	vfpfcnvrt@convarg+1
  1757     1794  0A84               	incf	4,f
  1758     1795  0800               	movf	0,w
  1759     1796  00D5               	movwf	vfpfcnvrt@convarg+2
  1760     1797  0A84               	incf	4,f
  1761     1798  0800               	movf	0,w
  1762     1799  00D6               	movwf	vfpfcnvrt@convarg+3
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
  1765     179A  2FA3               	goto	l3062
  1766     179B                     l3060:
  1767     179B  0857               	movf	vfpfcnvrt@c,w
  1768                           
  1769                           ; Switch size 1, requested type "simple"
  1770                           ; Number of cases is 2, Range of values is 76 to 108
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte            7     4 (average)
  1774                           ; direct_byte          110    11 (fixed)
  1775                           ; jumptable            263     9 (fixed)
  1776                           ;	Chosen strategy is simple_byte
  1777     179C  3A4C               	xorlw	76	; case 76
  1778     179D  1903               	skipnz
  1779     179E  2F83               	goto	l3056
  1780     179F  3A20               	xorlw	32	; case 108
  1781     17A0  1903               	skipnz
  1782     17A1  2F6B               	goto	l3054
  1783     17A2  2FA3               	goto	l3062
  1784     17A3                     l3062:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  1787     17A3  1683               	bsf	3,5	;RP0=1, select bank1
  1788     17A4  1303               	bcf	3,6	;RP1=0, select bank1
  1789     17A5  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1790     17A6  0084               	movwf	4
  1791     17A7  1283               	bcf	3,5	;RP0=0, select bank0
  1792     17A8  1303               	bcf	3,6	;RP1=0, select bank0
  1793     17A9  0858               	movf	vfpfcnvrt@cp,w
  1794     17AA  3E01               	addlw	1
  1795     17AB  0080               	movwf	0
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  1798     17AC  2FCF               	goto	l3070
  1799     17AD                     l3064:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1802     17AD  1683               	bsf	3,5	;RP0=1, select bank1
  1803     17AE  1303               	bcf	3,6	;RP1=0, select bank1
  1804     17AF  084C               	movf	vfpfcnvrt@fp^(0+128),w
  1805     17B0  1283               	bcf	3,5	;RP0=0, select bank0
  1806     17B1  1303               	bcf	3,6	;RP1=0, select bank0
  1807     17B2  00C6               	movwf	efgtoa@fp
  1808     17B3  1683               	bsf	3,5	;RP0=1, select bank1
  1809     17B4  1303               	bcf	3,6	;RP1=0, select bank1
  1810     17B5  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  1811     17B6  1283               	bcf	3,5	;RP0=0, select bank0
  1812     17B7  1303               	bcf	3,6	;RP1=0, select bank0
  1813     17B8  00C7               	movwf	efgtoa@fp+1
  1814     17B9  0856               	movf	vfpfcnvrt@convarg+3,w
  1815     17BA  00CB               	movwf	efgtoa@f+3
  1816     17BB  0855               	movf	vfpfcnvrt@convarg+2,w
  1817     17BC  00CA               	movwf	efgtoa@f+2
  1818     17BD  0854               	movf	vfpfcnvrt@convarg+1,w
  1819     17BE  00C9               	movwf	efgtoa@f+1
  1820     17BF  0853               	movf	vfpfcnvrt@convarg,w
  1821     17C0  00C8               	movwf	efgtoa@f
  1822     17C1  0858               	movf	vfpfcnvrt@cp,w
  1823     17C2  0084               	movwf	4
  1824     17C3  160A  118A  200A  160A  118A  	fcall	stringdir
  1825     17C8  00CC               	movwf	efgtoa@c
  1826     17C9  160A  118A  24BF  160A  118A  	fcall	_efgtoa
  1827     17CE  2FFF               	goto	l747
  1828     17CF                     l3070:
  1829     17CF  0858               	movf	vfpfcnvrt@cp,w
  1830     17D0  0084               	movwf	4
  1831     17D1  160A  118A  200A  160A  118A  	fcall	stringdir
  1832                           
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 1, Range of values is 102 to 102
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            4     3 (average)
  1838                           ; direct_byte           14    11 (fixed)
  1839                           ; jumptable            263     9 (fixed)
  1840                           ;	Chosen strategy is simple_byte
  1841     17D6  3A66               	xorlw	102	; case 102
  1842     17D7  1903               	skipnz
  1843     17D8  2FAD               	goto	l3064
  1844     17D9  2FDA               	goto	l3072
  1845     17DA                     l3072:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1848     17DA  1683               	bsf	3,5	;RP0=1, select bank1
  1849     17DB  1303               	bcf	3,6	;RP1=0, select bank1
  1850     17DC  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1851     17DD  0084               	movwf	4
  1852     17DE  3001               	movlw	1
  1853     17DF  1383               	bcf	3,7	;select IRP bank0
  1854     17E0  0780               	addwf	0,f
  1855     17E1  2FFF               	goto	l747
  1856     17E2                     l3076:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1859     17E2  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  1860     17E3  0084               	movwf	4
  1861     17E4  0800               	movf	0,w
  1862     17E5  0084               	movwf	4
  1863     17E6  160A  118A  200A  160A  118A  	fcall	stringdir
  1864     17EB  1283               	bcf	3,5	;RP0=0, select bank0
  1865     17EC  1303               	bcf	3,6	;RP1=0, select bank0
  1866     17ED  00D1               	movwf	??_vfpfcnvrt
  1867     17EE  01D2               	clrf	??_vfpfcnvrt+1
  1868     17EF  0851               	movf	??_vfpfcnvrt,w
  1869     17F0  00F0               	movwf	fputc@c
  1870     17F1  0852               	movf	??_vfpfcnvrt+1,w
  1871     17F2  00F1               	movwf	fputc@c+1
  1872     17F3  1683               	bsf	3,5	;RP0=1, select bank1
  1873     17F4  1303               	bcf	3,6	;RP1=0, select bank1
  1874     17F5  084C               	movf	vfpfcnvrt@fp^(0+128),w
  1875     17F6  00F2               	movwf	fputc@fp
  1876     17F7  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  1877     17F8  00F3               	movwf	fputc@fp+1
  1878     17F9  160A  118A  22DF  160A  118A  	fcall	_fputc
  1879     17FE  2FDA               	goto	l3072
  1880     17FF                     l747:
  1881     17FF  0008               	return
  1882     1800                     __end_of_vfpfcnvrt:
  1883                           
  1884                           	psect	text4
  1885     1218                     __ptext4:	
  1886 ;; *************** function _read_prec_or_width *****************
  1887 ;; Defined at:
  1888 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  1891 ;;		 -> vfprintf@cfmt(1), 
  1892 ;;  ap              1    7[COMMON] PTR PTR void [1]
  1893 ;;		 -> sprintf@ap(1), 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  c               1    8[COMMON] unsigned char 
  1896 ;;  n               2    9[COMMON] int 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2    6[COMMON] int 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         2       0       0       0       0
  1907 ;;      Locals:         3       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0
  1909 ;;      Totals:         5       0       0       0       0
  1910 ;;Total ram usage:        5 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 1
  1913 ;; This function calls:
  1914 ;;		___wmul
  1915 ;; This function is called by:
  1916 ;;		_vfpfcnvrt
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920     1218                     _read_prec_or_width:	
  1921                           ;psect for function _read_prec_or_width
  1922                           
  1923     1218                     l2974:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1926                           
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1929     1218  01F9               	clrf	read_prec_or_width@n
  1930     1219  01FA               	clrf	read_prec_or_width@n+1
  1931     121A                     l2976:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1934     121A  0876               	movf	read_prec_or_width@fmt,w
  1935     121B  0084               	movwf	4
  1936     121C  1383               	bcf	3,7	;select IRP bank0
  1937     121D  0800               	movf	0,w
  1938     121E  0084               	movwf	4
  1939     121F  160A  118A  200A  160A  118A  	fcall	stringdir
  1940     1224  3A2A               	xorlw	42
  1941     1225  1D03               	skipz
  1942     1226  2A28               	goto	u4531
  1943     1227  2A29               	goto	u4530
  1944     1228                     u4531:
  1945     1228  2A55               	goto	l2986
  1946     1229                     u4530:
  1947     1229                     l2978:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1950     1229  0876               	movf	read_prec_or_width@fmt,w
  1951     122A  0084               	movwf	4
  1952     122B  3001               	movlw	1
  1953     122C  0780               	addwf	0,f
  1954     122D                     l2980:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1957     122D  0877               	movf	read_prec_or_width@ap,w
  1958     122E  0084               	movwf	4
  1959     122F  0800               	movf	0,w
  1960     1230  00FF               	movwf	btemp+1
  1961     1231  3002               	movlw	2
  1962     1232  0780               	addwf	0,f
  1963     1233  087F               	movf	btemp+1,w
  1964     1234  0084               	movwf	4
  1965     1235  0800               	movf	0,w
  1966     1236  00F9               	movwf	read_prec_or_width@n
  1967     1237  0A84               	incf	4,f
  1968     1238  0800               	movf	0,w
  1969     1239  00FA               	movwf	read_prec_or_width@n+1
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1972     123A  2A66               	goto	l2988
  1973     123B                     l2982:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1976     123B  087A               	movf	read_prec_or_width@n+1,w
  1977     123C  00F1               	movwf	___wmul@multiplier+1
  1978     123D  0879               	movf	read_prec_or_width@n,w
  1979     123E  00F0               	movwf	___wmul@multiplier
  1980     123F  300A               	movlw	10
  1981     1240  00F2               	movwf	___wmul@multiplicand
  1982     1241  3000               	movlw	0
  1983     1242  00F3               	movwf	___wmul@multiplicand+1
  1984     1243  160A  158A  2763  160A  118A  	fcall	___wmul
  1985     1248  0878               	movf	read_prec_or_width@c,w
  1986     1249  0770               	addwf	?___wmul,w
  1987     124A  00F9               	movwf	read_prec_or_width@n
  1988     124B  3000               	movlw	0
  1989     124C  1803               	skipnc
  1990     124D  3001               	movlw	1
  1991     124E  0771               	addwf	?___wmul+1,w
  1992     124F  00FA               	movwf	read_prec_or_width@n+1
  1993     1250                     l2984:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1996     1250  0876               	movf	read_prec_or_width@fmt,w
  1997     1251  0084               	movwf	4
  1998     1252  3001               	movlw	1
  1999     1253  1383               	bcf	3,7	;select IRP bank0
  2000     1254  0780               	addwf	0,f
  2001     1255                     l2986:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2004     1255  0876               	movf	read_prec_or_width@fmt,w
  2005     1256  0084               	movwf	4
  2006     1257  0800               	movf	0,w
  2007     1258  0084               	movwf	4
  2008     1259  160A  118A  200A  160A  118A  	fcall	stringdir
  2009     125E  3ED0               	addlw	208
  2010     125F  00F8               	movwf	read_prec_or_width@c
  2011     1260  300A               	movlw	10
  2012     1261  0278               	subwf	read_prec_or_width@c,w
  2013     1262  1C03               	skipc
  2014     1263  2A65               	goto	u4541
  2015     1264  2A66               	goto	u4540
  2016     1265                     u4541:
  2017     1265  2A3B               	goto	l2982
  2018     1266                     u4540:
  2019     1266                     l2988:
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2022     1266  087A               	movf	read_prec_or_width@n+1,w
  2023     1267  00F7               	movwf	?_read_prec_or_width+1
  2024     1268  0879               	movf	read_prec_or_width@n,w
  2025     1269  00F6               	movwf	?_read_prec_or_width
  2026     126A                     l726:
  2027     126A  0008               	return
  2028     126B                     __end_of_read_prec_or_width:
  2029                           
  2030                           	psect	text5
  2031     1F63                     __ptext5:	
  2032 ;; *************** function ___wmul *****************
  2033 ;; Defined at:
  2034 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  multiplier      2    0[COMMON] unsigned int 
  2037 ;;  multiplicand    2    2[COMMON] unsigned int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  product         2    4[COMMON] unsigned int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2    0[COMMON] unsigned int 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         4       0       0       0       0
  2050 ;;      Locals:         2       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0
  2052 ;;      Totals:         6       0       0       0       0
  2053 ;;Total ram usage:        6 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_read_prec_or_width
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062     1F63                     ___wmul:	
  2063                           ;psect for function ___wmul
  2064                           
  2065     1F63                     l2288:	
  2066                           ;incstack = 0
  2067                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2068                           
  2069     1F63  01F4               	clrf	___wmul@product
  2070     1F64  01F5               	clrf	___wmul@product+1
  2071     1F65                     l2290:
  2072     1F65  1C70               	btfss	___wmul@multiplier,0
  2073     1F66  2F68               	goto	u2991
  2074     1F67  2F69               	goto	u2990
  2075     1F68                     u2991:
  2076     1F68  2F6F               	goto	l170
  2077     1F69                     u2990:
  2078     1F69                     l2292:
  2079     1F69  0872               	movf	___wmul@multiplicand,w
  2080     1F6A  07F4               	addwf	___wmul@product,f
  2081     1F6B  1803               	skipnc
  2082     1F6C  0AF5               	incf	___wmul@product+1,f
  2083     1F6D  0873               	movf	___wmul@multiplicand+1,w
  2084     1F6E  07F5               	addwf	___wmul@product+1,f
  2085     1F6F                     l170:
  2086     1F6F  3001               	movlw	1
  2087     1F70                     u3005:
  2088     1F70  1003               	clrc
  2089     1F71  0DF2               	rlf	___wmul@multiplicand,f
  2090     1F72  0DF3               	rlf	___wmul@multiplicand+1,f
  2091     1F73  3EFF               	addlw	-1
  2092     1F74  1D03               	skipz
  2093     1F75  2F70               	goto	u3005
  2094     1F76                     l2294:
  2095     1F76  3001               	movlw	1
  2096     1F77                     u3015:
  2097     1F77  1003               	clrc
  2098     1F78  0CF1               	rrf	___wmul@multiplier+1,f
  2099     1F79  0CF0               	rrf	___wmul@multiplier,f
  2100     1F7A  3EFF               	addlw	-1
  2101     1F7B  1D03               	skipz
  2102     1F7C  2F77               	goto	u3015
  2103     1F7D                     l2296:
  2104     1F7D  0870               	movf	___wmul@multiplier,w
  2105     1F7E  0471               	iorwf	___wmul@multiplier+1,w
  2106     1F7F  1D03               	btfss	3,2
  2107     1F80  2F82               	goto	u3021
  2108     1F81  2F83               	goto	u3020
  2109     1F82                     u3021:
  2110     1F82  2F65               	goto	l2290
  2111     1F83                     u3020:
  2112     1F83                     l2298:
  2113     1F83  0875               	movf	___wmul@product+1,w
  2114     1F84  00F1               	movwf	?___wmul+1
  2115     1F85  0874               	movf	___wmul@product,w
  2116     1F86  00F0               	movwf	?___wmul
  2117     1F87                     l172:
  2118     1F87  0008               	return
  2119     1F88                     __end_of___wmul:
  2120                           
  2121                           	psect	text6
  2122     14BF                     __ptext6:	
  2123 ;; *************** function _efgtoa *****************
  2124 ;; Defined at:
  2125 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  fp              2   38[BANK0 ] PTR struct _IO_FILE
  2128 ;;		 -> sprintf@f(11), 
  2129 ;;  f               4   40[BANK0 ] PTR struct _IO_FILE
  2130 ;;  c               1   44[BANK0 ] unsigned char 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  u               4   40[BANK1 ] struct flui
  2133 ;;  g               4   36[BANK1 ] struct flui
  2134 ;;  l               4   29[BANK1 ] struct flui
  2135 ;;  h               4   25[BANK1 ] struct flui
  2136 ;;  ou              4   19[BANK1 ] struct flui
  2137 ;;  n               2   34[BANK1 ] int 
  2138 ;;  i               2   23[BANK1 ] int 
  2139 ;;  w               2   17[BANK1 ] int 
  2140 ;;  e               2   15[BANK1 ] int 
  2141 ;;  m               2   13[BANK1 ] int 
  2142 ;;  d               2   11[BANK1 ] int 
  2143 ;;  t               2    4[BANK1 ] int 
  2144 ;;  p               2    2[BANK1 ] int 
  2145 ;;  ne              2    0[BANK1 ] int 
  2146 ;;  sign            1   33[BANK1 ] unsigned char 
  2147 ;;  nmode           1   10[BANK1 ] unsigned char 
  2148 ;;  mode            1    9[BANK1 ] unsigned char 
  2149 ;;  pp              1    8[BANK1 ] unsigned char 
  2150 ;;  esign           1    0        unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       7       0       0       0
  2161 ;;      Locals:         0       0      44       0       0
  2162 ;;      Temps:          0       4       0       0       0
  2163 ;;      Totals:         0      11      44       0       0
  2164 ;;Total ram usage:       55 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 4
  2167 ;; This function calls:
  2168 ;;		___fladd
  2169 ;;		___fldiv
  2170 ;;		___fleq
  2171 ;;		___flge
  2172 ;;		___flmul
  2173 ;;		___flneg
  2174 ;;		___flsub
  2175 ;;		___fltol
  2176 ;;		___fpclassifyf
  2177 ;;		_floorf
  2178 ;;		_labs
  2179 ;;		_memcpy
  2180 ;;		_pad
  2181 ;;		_strcpy
  2182 ;; This function is called by:
  2183 ;;		_vfpfcnvrt
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187     14BF                     _efgtoa:	
  2188                           ;psect for function _efgtoa
  2189                           
  2190     14BF                     l2760:	
  2191                           ;incstack = 0
  2192                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2193                           
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2196     14BF  1683               	bsf	3,5	;RP0=1, select bank1
  2197     14C0  1303               	bcf	3,6	;RP1=0, select bank1
  2198     14C1  01C1               	clrf	efgtoa@sign^(0+128)
  2199     14C2                     l2762:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2202     14C2  1283               	bcf	3,5	;RP0=0, select bank0
  2203     14C3  1303               	bcf	3,6	;RP1=0, select bank0
  2204     14C4  084B               	movf	efgtoa@f+3,w
  2205     14C5  1683               	bsf	3,5	;RP0=1, select bank1
  2206     14C6  1303               	bcf	3,6	;RP1=0, select bank1
  2207     14C7  00C7               	movwf	(efgtoa@g+3)^(0+128)
  2208     14C8  1283               	bcf	3,5	;RP0=0, select bank0
  2209     14C9  1303               	bcf	3,6	;RP1=0, select bank0
  2210     14CA  084A               	movf	efgtoa@f+2,w
  2211     14CB  1683               	bsf	3,5	;RP0=1, select bank1
  2212     14CC  1303               	bcf	3,6	;RP1=0, select bank1
  2213     14CD  00C6               	movwf	(efgtoa@g+2)^(0+128)
  2214     14CE  1283               	bcf	3,5	;RP0=0, select bank0
  2215     14CF  1303               	bcf	3,6	;RP1=0, select bank0
  2216     14D0  0849               	movf	efgtoa@f+1,w
  2217     14D1  1683               	bsf	3,5	;RP0=1, select bank1
  2218     14D2  1303               	bcf	3,6	;RP1=0, select bank1
  2219     14D3  00C5               	movwf	(efgtoa@g+1)^(0+128)
  2220     14D4  1283               	bcf	3,5	;RP0=0, select bank0
  2221     14D5  1303               	bcf	3,6	;RP1=0, select bank0
  2222     14D6  0848               	movf	efgtoa@f,w
  2223     14D7  1683               	bsf	3,5	;RP0=1, select bank1
  2224     14D8  1303               	bcf	3,6	;RP1=0, select bank1
  2225     14D9  00C4               	movwf	efgtoa@g^(0+128)
  2226     14DA                     l2764:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2229     14DA  0847               	movf	(efgtoa@g+3)^(0+128),w
  2230     14DB  1283               	bcf	3,5	;RP0=0, select bank0
  2231     14DC  1303               	bcf	3,6	;RP1=0, select bank0
  2232     14DD  00BD               	movwf	___flge@ff1+3
  2233     14DE  1683               	bsf	3,5	;RP0=1, select bank1
  2234     14DF  1303               	bcf	3,6	;RP1=0, select bank1
  2235     14E0  0846               	movf	(efgtoa@g+2)^(0+128),w
  2236     14E1  1283               	bcf	3,5	;RP0=0, select bank0
  2237     14E2  1303               	bcf	3,6	;RP1=0, select bank0
  2238     14E3  00BC               	movwf	___flge@ff1+2
  2239     14E4  1683               	bsf	3,5	;RP0=1, select bank1
  2240     14E5  1303               	bcf	3,6	;RP1=0, select bank1
  2241     14E6  0845               	movf	(efgtoa@g+1)^(0+128),w
  2242     14E7  1283               	bcf	3,5	;RP0=0, select bank0
  2243     14E8  1303               	bcf	3,6	;RP1=0, select bank0
  2244     14E9  00BB               	movwf	___flge@ff1+1
  2245     14EA  1683               	bsf	3,5	;RP0=1, select bank1
  2246     14EB  1303               	bcf	3,6	;RP1=0, select bank1
  2247     14EC  0844               	movf	efgtoa@g^(0+128),w
  2248     14ED  1283               	bcf	3,5	;RP0=0, select bank0
  2249     14EE  1303               	bcf	3,6	;RP1=0, select bank0
  2250     14EF  00BA               	movwf	___flge@ff1
  2251     14F0  3000               	movlw	0
  2252     14F1  00C1               	movwf	___flge@ff2+3
  2253     14F2  3000               	movlw	0
  2254     14F3  00C0               	movwf	___flge@ff2+2
  2255     14F4  3000               	movlw	0
  2256     14F5  00BF               	movwf	___flge@ff2+1
  2257     14F6  3000               	movlw	0
  2258     14F7  00BE               	movwf	___flge@ff2
  2259     14F8  160A  118A  241B  160A  118A  	fcall	___flge
  2260     14FD  1803               	btfsc	3,0
  2261     14FE  2D00               	goto	u4181
  2262     14FF  2D01               	goto	u4180
  2263     1500                     u4181:
  2264     1500  2D1C               	goto	l2770
  2265     1501                     u4180:
  2266     1501                     l2766:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2269     1501  3001               	movlw	1
  2270     1502  1683               	bsf	3,5	;RP0=1, select bank1
  2271     1503  1303               	bcf	3,6	;RP1=0, select bank1
  2272     1504  00C1               	movwf	efgtoa@sign^(0+128)
  2273     1505                     l2768:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2276     1505  0847               	movf	(efgtoa@g+3)^(0+128),w
  2277     1506  00F3               	movwf	___flneg@f1+3
  2278     1507  0846               	movf	(efgtoa@g+2)^(0+128),w
  2279     1508  00F2               	movwf	___flneg@f1+2
  2280     1509  0845               	movf	(efgtoa@g+1)^(0+128),w
  2281     150A  00F1               	movwf	___flneg@f1+1
  2282     150B  0844               	movf	efgtoa@g^(0+128),w
  2283     150C  00F0               	movwf	___flneg@f1
  2284     150D  160A  118A  203A  160A  118A  	fcall	___flneg
  2285     1512  0873               	movf	?___flneg+3,w
  2286     1513  1683               	bsf	3,5	;RP0=1, select bank1
  2287     1514  1303               	bcf	3,6	;RP1=0, select bank1
  2288     1515  00C7               	movwf	(efgtoa@g+3)^(0+128)
  2289     1516  0872               	movf	?___flneg+2,w
  2290     1517  00C6               	movwf	(efgtoa@g+2)^(0+128)
  2291     1518  0871               	movf	?___flneg+1,w
  2292     1519  00C5               	movwf	(efgtoa@g+1)^(0+128)
  2293     151A  0870               	movf	?___flneg,w
  2294     151B  00C4               	movwf	efgtoa@g^(0+128)
  2295     151C                     l2770:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2298     151C  1683               	bsf	3,5	;RP0=1, select bank1
  2299     151D  1303               	bcf	3,6	;RP1=0, select bank1
  2300     151E  01C2               	clrf	efgtoa@n^(0+128)
  2301     151F  01C3               	clrf	(efgtoa@n+1)^(0+128)
  2302     1520                     l2772:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2305     1520  0867               	movf	(_width+1)^(0+128),w
  2306     1521  00B2               	movwf	(efgtoa@w+1)^(0+128)
  2307     1522  0866               	movf	_width^(0+128),w
  2308     1523  00B1               	movwf	efgtoa@w^(0+128)
  2309     1524                     l2774:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2312     1524  0841               	movf	efgtoa@sign^(0+128),w
  2313     1525  1903               	btfsc	3,2
  2314     1526  2D28               	goto	u4191
  2315     1527  2D29               	goto	u4190
  2316     1528                     u4191:
  2317     1528  2D39               	goto	l2782
  2318     1529                     u4190:
  2319     1529                     l2776:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2322     1529  0841               	movf	efgtoa@sign^(0+128),w
  2323     152A  1D03               	btfss	3,2
  2324     152B  2D2D               	goto	u4201
  2325     152C  2D2E               	goto	u4200
  2326     152D                     u4201:
  2327     152D  2D33               	goto	l2780
  2328     152E                     u4200:
  2329     152E                     l2778:
  2330     152E  302B               	movlw	43
  2331     152F  00A6               	movwf	_efgtoa$807^(0+128)
  2332     1530  3000               	movlw	0
  2333     1531  00A7               	movwf	(_efgtoa$807^(0+128)+1)
  2334     1532  2D37               	goto	l674
  2335     1533                     l2780:
  2336     1533  302D               	movlw	45
  2337     1534  00A6               	movwf	_efgtoa$807^(0+128)
  2338     1535  3000               	movlw	0
  2339     1536  00A7               	movwf	(_efgtoa$807^(0+128)+1)
  2340     1537                     l674:
  2341     1537  0826               	movf	_efgtoa$807^(0+128),w
  2342     1538  00C1               	movwf	efgtoa@sign^(0+128)
  2343     1539                     l2782:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2346     1539  0847               	movf	(efgtoa@g+3)^(0+128),w
  2347     153A  00F3               	movwf	___fpclassifyf@x+3
  2348     153B  0846               	movf	(efgtoa@g+2)^(0+128),w
  2349     153C  00F2               	movwf	___fpclassifyf@x+2
  2350     153D  0845               	movf	(efgtoa@g+1)^(0+128),w
  2351     153E  00F1               	movwf	___fpclassifyf@x+1
  2352     153F  0844               	movf	efgtoa@g^(0+128),w
  2353     1540  00F0               	movwf	___fpclassifyf@x
  2354     1541  120A  158A  2005  160A  118A  	fcall	___fpclassifyf
  2355     1546  0370               	decf	?___fpclassifyf,w
  2356     1547  0471               	iorwf	?___fpclassifyf+1,w
  2357     1548  1D03               	btfss	3,2
  2358     1549  2D4B               	goto	u4211
  2359     154A  2D4C               	goto	u4210
  2360     154B                     u4211:
  2361     154B  2D91               	goto	l2796
  2362     154C                     u4210:
  2363     154C                     l2784:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2366     154C  1683               	bsf	3,5	;RP0=1, select bank1
  2367     154D  1303               	bcf	3,6	;RP1=0, select bank1
  2368     154E  0841               	movf	efgtoa@sign^(0+128),w
  2369     154F  1903               	btfsc	3,2
  2370     1550  2D52               	goto	u4221
  2371     1551  2D53               	goto	u4220
  2372     1552                     u4221:
  2373     1552  2D63               	goto	l2788
  2374     1553                     u4220:
  2375     1553                     l2786:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2378     1553  0841               	movf	efgtoa@sign^(0+128),w
  2379     1554  1683               	bsf	3,5	;RP0=1, select bank3
  2380     1555  1703               	bsf	3,6	;RP1=1, select bank3
  2381     1556  0090               	movwf	_dbuf^(0+384)
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
  2384     1557  30FF               	movlw	255
  2385     1558  1683               	bsf	3,5	;RP0=1, select bank1
  2386     1559  1303               	bcf	3,6	;RP1=0, select bank1
  2387     155A  07B1               	addwf	efgtoa@w^(0+128),f
  2388     155B  1803               	skipnc
  2389     155C  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  2390     155D  30FF               	movlw	255
  2391     155E  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2394     155F  3001               	movlw	1
  2395     1560  00C2               	movwf	efgtoa@n^(0+128)
  2396     1561  3000               	movlw	0
  2397     1562  00C3               	movwf	(efgtoa@n^(0+128)+1)
  2398     1563                     l2788:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2401     1563  0842               	movf	efgtoa@n^(0+128),w
  2402     1564  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2403     1565  00F0               	movwf	strcpy@dest
  2404     1566  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2405     1567  00F1               	movwf	strcpy@src
  2406     1568  120A  118A  2003  160A  118A  	fcall	_strcpy
  2407     156D                     l2790:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2410     156D  30FD               	movlw	253
  2411     156E  1683               	bsf	3,5	;RP0=1, select bank1
  2412     156F  1303               	bcf	3,6	;RP1=0, select bank1
  2413     1570  07B1               	addwf	efgtoa@w^(0+128),f
  2414     1571  1803               	skipnc
  2415     1572  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  2416     1573  30FF               	movlw	255
  2417     1574  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  2418     1575                     l2792:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2421     1575  1283               	bcf	3,5	;RP0=0, select bank0
  2422     1576  1303               	bcf	3,6	;RP1=0, select bank0
  2423     1577  0846               	movf	efgtoa@fp,w
  2424     1578  00A8               	movwf	pad@fp
  2425     1579  0847               	movf	efgtoa@fp+1,w
  2426     157A  00A9               	movwf	pad@fp+1
  2427     157B  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
  2428     157C  00AA               	movwf	pad@buf
  2429     157D  1683               	bsf	3,5	;RP0=1, select bank1
  2430     157E  1303               	bcf	3,6	;RP1=0, select bank1
  2431     157F  0832               	movf	(efgtoa@w+1)^(0+128),w
  2432     1580  1283               	bcf	3,5	;RP0=0, select bank0
  2433     1581  1303               	bcf	3,6	;RP1=0, select bank0
  2434     1582  00AC               	movwf	pad@p+1
  2435     1583  1683               	bsf	3,5	;RP0=1, select bank1
  2436     1584  1303               	bcf	3,6	;RP1=0, select bank1
  2437     1585  0831               	movf	efgtoa@w^(0+128),w
  2438     1586  1283               	bcf	3,5	;RP0=0, select bank0
  2439     1587  1303               	bcf	3,6	;RP1=0, select bank0
  2440     1588  00AB               	movwf	pad@p
  2441     1589  160A  118A  21C5  160A  118A  	fcall	_pad
  2442     158E  120A  118A  2FE2   	goto	l677
  2443     1591                     l2796:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2446     1591  1683               	bsf	3,5	;RP0=1, select bank1
  2447     1592  1303               	bcf	3,6	;RP1=0, select bank1
  2448     1593  0847               	movf	(efgtoa@g+3)^(0+128),w
  2449     1594  00F3               	movwf	___fpclassifyf@x+3
  2450     1595  0846               	movf	(efgtoa@g+2)^(0+128),w
  2451     1596  00F2               	movwf	___fpclassifyf@x+2
  2452     1597  0845               	movf	(efgtoa@g+1)^(0+128),w
  2453     1598  00F1               	movwf	___fpclassifyf@x+1
  2454     1599  0844               	movf	efgtoa@g^(0+128),w
  2455     159A  00F0               	movwf	___fpclassifyf@x
  2456     159B  120A  158A  2005  160A  118A  	fcall	___fpclassifyf
  2457     15A0  0870               	movf	?___fpclassifyf,w
  2458     15A1  0471               	iorwf	?___fpclassifyf+1,w
  2459     15A2  1D03               	btfss	3,2
  2460     15A3  2DA5               	goto	u4231
  2461     15A4  2DA8               	goto	u4230
  2462     15A5                     u4231:
  2463     15A5  120A  118A  28D0   	goto	l2810
  2464     15A8                     u4230:
  2465     15A8                     l2798:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2468     15A8  1683               	bsf	3,5	;RP0=1, select bank1
  2469     15A9  1303               	bcf	3,6	;RP1=0, select bank1
  2470     15AA  0841               	movf	efgtoa@sign^(0+128),w
  2471     15AB  1903               	btfsc	3,2
  2472     15AC  2DAE               	goto	u4241
  2473     15AD  2DAF               	goto	u4240
  2474     15AE                     u4241:
  2475     15AE  2DBF               	goto	l2802
  2476     15AF                     u4240:
  2477     15AF                     l2800:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2480     15AF  0841               	movf	efgtoa@sign^(0+128),w
  2481     15B0  1683               	bsf	3,5	;RP0=1, select bank3
  2482     15B1  1703               	bsf	3,6	;RP1=1, select bank3
  2483     15B2  0090               	movwf	_dbuf^(0+384)
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
  2486     15B3  30FF               	movlw	255
  2487     15B4  1683               	bsf	3,5	;RP0=1, select bank1
  2488     15B5  1303               	bcf	3,6	;RP1=0, select bank1
  2489     15B6  07B1               	addwf	efgtoa@w^(0+128),f
  2490     15B7  1803               	skipnc
  2491     15B8  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  2492     15B9  30FF               	movlw	255
  2493     15BA  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2496     15BB  3001               	movlw	1
  2497     15BC  00C2               	movwf	efgtoa@n^(0+128)
  2498     15BD  3000               	movlw	0
  2499     15BE  00C3               	movwf	(efgtoa@n^(0+128)+1)
  2500     15BF                     l2802:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2503     15BF  0842               	movf	efgtoa@n^(0+128),w
  2504     15C0  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2505     15C1  00F0               	movwf	strcpy@dest
  2506     15C2  3021               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2507     15C3  00F1               	movwf	strcpy@src
  2508     15C4  120A  118A  2003  160A  118A  	fcall	_strcpy
  2509     15C9  2D6D               	goto	l2790
  2510                           
  2511                           	psect	text7
  2512     0003                     __ptext7:	
  2513 ;; *************** function _strcpy *****************
  2514 ;; Defined at:
  2515 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  dest            1    0[COMMON] PTR unsigned char 
  2518 ;;		 -> dbuf(80), 
  2519 ;;  src             1    1[COMMON] PTR const unsigned char 
  2520 ;;		 -> STR_6(4), STR_3(4), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  d               1    2[COMMON] PTR unsigned char 
  2523 ;;		 -> dbuf(80), 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    0[COMMON] PTR unsigned char 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         2       0       0       0       0
  2534 ;;      Locals:         1       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0
  2536 ;;      Totals:         3       0       0       0       0
  2537 ;;Total ram usage:        3 bytes
  2538 ;; Hardware stack levels used: 2
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_efgtoa
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546     0003                     _strcpy:	
  2547                           ;psect for function _strcpy
  2548                           
  2549     0003                     l2710:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2552                           
  2553     0003  0870               	movf	strcpy@dest,w
  2554     0004  00F2               	movwf	strcpy@d
  2555     0005                     l2712:
  2556     0005  3001               	movlw	1
  2557     0006  07F1               	addwf	strcpy@src,f
  2558     0007  30FF               	movlw	-1
  2559     0008  0771               	addwf	strcpy@src,w
  2560     0009  0084               	movwf	4
  2561     000A  160A  118A  200A  120A  118A  	fcall	stringdir
  2562     000F  00FF               	movwf	btemp+1
  2563     0010  0872               	movf	strcpy@d,w
  2564     0011  0AF2               	incf	strcpy@d,f
  2565     0012  0084               	movwf	4
  2566     0013  087F               	movf	btemp+1,w
  2567     0014  1783               	bsf	3,7	;select IRP bank2
  2568     0015  0080               	movwf	0
  2569     0016  0800               	movf	0,w
  2570     0017  1D03               	btfss	3,2
  2571     0018  281A               	goto	u4031
  2572     0019  281B               	goto	u4030
  2573     001A                     u4031:
  2574     001A  2805               	goto	l2712
  2575     001B                     u4030:
  2576     001B                     l820:
  2577     001B  0008               	return
  2578     001C                     __end_of_strcpy:
  2579                           
  2580                           	psect	text8
  2581     11C5                     __ptext8:	
  2582 ;; *************** function _pad *****************
  2583 ;; Defined at:
  2584 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  2587 ;;		 -> sprintf@f(11), 
  2588 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  2589 ;;		 -> dbuf(80), 
  2590 ;;  p               2   11[BANK0 ] int 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  i               2   13[BANK0 ] int 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       5       0       0       0
  2603 ;;      Locals:         0       2       0       0       0
  2604 ;;      Temps:          1       0       0       0       0
  2605 ;;      Totals:         1       7       0       0       0
  2606 ;;Total ram usage:        8 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 3
  2609 ;; This function calls:
  2610 ;;		_fputc
  2611 ;;		_fputs
  2612 ;; This function is called by:
  2613 ;;		_efgtoa
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617     11C5                     _pad:	
  2618                           ;psect for function _pad
  2619                           
  2620     11C5                     l2670:	
  2621                           ;incstack = 0
  2622                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2623                           
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2626     11C5  1283               	bcf	3,5	;RP0=0, select bank0
  2627     11C6  1303               	bcf	3,6	;RP1=0, select bank0
  2628     11C7  1C6C               	btfss	_flags,0
  2629     11C8  29CA               	goto	u3911
  2630     11C9  29CB               	goto	u3910
  2631     11CA                     u3911:
  2632     11CA  29D6               	goto	l2674
  2633     11CB                     u3910:
  2634     11CB                     l2672:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2637     11CB  082A               	movf	pad@buf,w
  2638     11CC  00A0               	movwf	fputs@s
  2639     11CD  0828               	movf	pad@fp,w
  2640     11CE  00A1               	movwf	fputs@fp
  2641     11CF  0829               	movf	pad@fp+1,w
  2642     11D0  00A2               	movwf	fputs@fp+1
  2643     11D1  160A  118A  2045  160A  118A  	fcall	_fputs
  2644     11D6                     l2674:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2647     11D6  1283               	bcf	3,5	;RP0=0, select bank0
  2648     11D7  1303               	bcf	3,6	;RP1=0, select bank0
  2649     11D8  1FAC               	btfss	pad@p+1,7
  2650     11D9  29DB               	goto	u3921
  2651     11DA  29DC               	goto	u3920
  2652     11DB                     u3921:
  2653     11DB  29DE               	goto	l661
  2654     11DC                     u3920:
  2655     11DC                     l2676:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2658     11DC  01AB               	clrf	pad@p
  2659     11DD  01AC               	clrf	pad@p+1
  2660     11DE                     l661:	
  2661                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  2662                           
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2665     11DE  01AD               	clrf	pad@i
  2666     11DF  01AE               	clrf	pad@i+1
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2669     11E0  29F8               	goto	l2682
  2670     11E1                     l2678:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2673     11E1  3020               	movlw	32
  2674     11E2  00F0               	movwf	fputc@c
  2675     11E3  3000               	movlw	0
  2676     11E4  00F1               	movwf	fputc@c+1
  2677     11E5  1283               	bcf	3,5	;RP0=0, select bank0
  2678     11E6  1303               	bcf	3,6	;RP1=0, select bank0
  2679     11E7  0828               	movf	pad@fp,w
  2680     11E8  00F2               	movwf	fputc@fp
  2681     11E9  0829               	movf	pad@fp+1,w
  2682     11EA  00F3               	movwf	fputc@fp+1
  2683     11EB  160A  118A  22DF  160A  118A  	fcall	_fputc
  2684     11F0                     l2680:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2687     11F0  3001               	movlw	1
  2688     11F1  1283               	bcf	3,5	;RP0=0, select bank0
  2689     11F2  1303               	bcf	3,6	;RP1=0, select bank0
  2690     11F3  07AD               	addwf	pad@i,f
  2691     11F4  1803               	skipnc
  2692     11F5  0AAE               	incf	pad@i+1,f
  2693     11F6  3000               	movlw	0
  2694     11F7  07AE               	addwf	pad@i+1,f
  2695     11F8                     l2682:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2698     11F8  082E               	movf	pad@i+1,w
  2699     11F9  3A80               	xorlw	128
  2700     11FA  00FD               	movwf	??_pad
  2701     11FB  082C               	movf	pad@p+1,w
  2702     11FC  3A80               	xorlw	128
  2703     11FD  027D               	subwf	??_pad,w
  2704     11FE  1D03               	skipz
  2705     11FF  2A02               	goto	u3935
  2706     1200  082B               	movf	pad@p,w
  2707     1201  022D               	subwf	pad@i,w
  2708     1202                     u3935:
  2709     1202  1C03               	skipc
  2710     1203  2A05               	goto	u3931
  2711     1204  2A06               	goto	u3930
  2712     1205                     u3931:
  2713     1205  29E1               	goto	l2678
  2714     1206                     u3930:
  2715     1206                     l664:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2718     1206  1283               	bcf	3,5	;RP0=0, select bank0
  2719     1207  1303               	bcf	3,6	;RP1=0, select bank0
  2720     1208  186C               	btfsc	_flags,0
  2721     1209  2A0B               	goto	u3941
  2722     120A  2A0C               	goto	u3940
  2723     120B                     u3941:
  2724     120B  2A17               	goto	l666
  2725     120C                     u3940:
  2726     120C                     l2684:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2729     120C  082A               	movf	pad@buf,w
  2730     120D  00A0               	movwf	fputs@s
  2731     120E  0828               	movf	pad@fp,w
  2732     120F  00A1               	movwf	fputs@fp
  2733     1210  0829               	movf	pad@fp+1,w
  2734     1211  00A2               	movwf	fputs@fp+1
  2735     1212  160A  118A  2045  160A  118A  	fcall	_fputs
  2736     1217                     l666:
  2737     1217  0008               	return
  2738     1218                     __end_of_pad:
  2739                           
  2740                           	psect	text9
  2741     1045                     __ptext9:	
  2742 ;; *************** function _fputs *****************
  2743 ;; Defined at:
  2744 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  2747 ;;		 -> dbuf(80), 
  2748 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  2749 ;;		 -> sprintf@f(11), 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  i               2    6[BANK0 ] int 
  2752 ;;  c               1    5[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2    0[BANK0 ] int 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       3       0       0       0
  2763 ;;      Locals:         0       3       0       0       0
  2764 ;;      Temps:          0       2       0       0       0
  2765 ;;      Totals:         0       8       0       0       0
  2766 ;;Total ram usage:        8 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 2
  2769 ;; This function calls:
  2770 ;;		_fputc
  2771 ;; This function is called by:
  2772 ;;		_pad
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776     1045                     _fputs:	
  2777                           ;psect for function _fputs
  2778                           
  2779     1045                     l2280:	
  2780                           ;incstack = 0
  2781                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2782                           
  2783     1045  1283               	bcf	3,5	;RP0=0, select bank0
  2784     1046  1303               	bcf	3,6	;RP1=0, select bank0
  2785     1047  01A6               	clrf	fputs@i
  2786     1048  01A7               	clrf	fputs@i+1
  2787     1049  2862               	goto	l2286
  2788     104A                     l2282:
  2789     104A  0825               	movf	fputs@c,w
  2790     104B  00A3               	movwf	??_fputs
  2791     104C  01A4               	clrf	??_fputs+1
  2792     104D  0823               	movf	??_fputs,w
  2793     104E  00F0               	movwf	fputc@c
  2794     104F  0824               	movf	??_fputs+1,w
  2795     1050  00F1               	movwf	fputc@c+1
  2796     1051  0821               	movf	fputs@fp,w
  2797     1052  00F2               	movwf	fputc@fp
  2798     1053  0822               	movf	fputs@fp+1,w
  2799     1054  00F3               	movwf	fputc@fp+1
  2800     1055  160A  118A  22DF  160A  118A  	fcall	_fputc
  2801     105A                     l2284:
  2802     105A  3001               	movlw	1
  2803     105B  1283               	bcf	3,5	;RP0=0, select bank0
  2804     105C  1303               	bcf	3,6	;RP1=0, select bank0
  2805     105D  07A6               	addwf	fputs@i,f
  2806     105E  1803               	skipnc
  2807     105F  0AA7               	incf	fputs@i+1,f
  2808     1060  3000               	movlw	0
  2809     1061  07A7               	addwf	fputs@i+1,f
  2810     1062                     l2286:
  2811     1062  0826               	movf	fputs@i,w
  2812     1063  0720               	addwf	fputs@s,w
  2813     1064  00A3               	movwf	??_fputs
  2814     1065  0823               	movf	??_fputs,w
  2815     1066  0084               	movwf	4
  2816     1067  1783               	bsf	3,7	;select IRP bank2
  2817     1068  0800               	movf	0,w
  2818     1069  00A5               	movwf	fputs@c
  2819     106A  0825               	movf	fputs@c,w
  2820     106B  1D03               	btfss	3,2
  2821     106C  286E               	goto	u2981
  2822     106D  286F               	goto	u2980
  2823     106E                     u2981:
  2824     106E  284A               	goto	l2282
  2825     106F                     u2980:
  2826     106F                     l811:
  2827     106F  0008               	return
  2828     1070                     __end_of_fputs:
  2829                           
  2830                           	psect	text10
  2831     12DF                     __ptext10:	
  2832 ;; *************** function _fputc *****************
  2833 ;; Defined at:
  2834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  c               2    0[COMMON] int 
  2837 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  2838 ;;		 -> sprintf@f(11), 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2    0[COMMON] int 
  2843 ;; Registers used:
  2844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2850 ;;      Params:         4       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0
  2852 ;;      Temps:          9       0       0       0       0
  2853 ;;      Totals:        13       0       0       0       0
  2854 ;;Total ram usage:       13 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 1
  2857 ;; This function calls:
  2858 ;;		_putch
  2859 ;; This function is called by:
  2860 ;;		_pad
  2861 ;;		_vfpfcnvrt
  2862 ;;		_fputs
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866     12DF                     _fputc:	
  2867                           ;psect for function _fputc
  2868                           
  2869     12DF                     l2054:	
  2870                           ;incstack = 0
  2871                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2872                           
  2873     12DF  0872               	movf	fputc@fp,w
  2874     12E0  0473               	iorwf	fputc@fp+1,w
  2875     12E1  1903               	btfsc	3,2
  2876     12E2  2AE4               	goto	u2441
  2877     12E3  2AE5               	goto	u2440
  2878     12E4                     u2441:
  2879     12E4  2AEB               	goto	l2058
  2880     12E5                     u2440:
  2881     12E5                     l2056:
  2882     12E5  0872               	movf	fputc@fp,w
  2883     12E6  0473               	iorwf	fputc@fp+1,w
  2884     12E7  1D03               	btfss	3,2
  2885     12E8  2AEA               	goto	u2451
  2886     12E9  2AEB               	goto	u2450
  2887     12EA                     u2451:
  2888     12EA  2AF2               	goto	l2060
  2889     12EB                     u2450:
  2890     12EB                     l2058:
  2891     12EB  0870               	movf	fputc@c,w
  2892     12EC  120A  158A  2004  160A  118A  	fcall	_putch
  2893     12F1  2B78               	goto	l803
  2894     12F2                     l2060:
  2895     12F2  0872               	movf	fputc@fp,w
  2896     12F3  3E09               	addlw	9
  2897     12F4  00F4               	movwf	??_fputc
  2898     12F5  0873               	movf	fputc@fp+1,w
  2899     12F6  1803               	skipnc
  2900     12F7  3E01               	addlw	1
  2901     12F8  3E00               	addlw	0
  2902     12F9  00F5               	movwf	??_fputc+1
  2903     12FA  0874               	movf	??_fputc,w
  2904     12FB  0084               	movwf	4
  2905     12FC  1783               	bsf	3,7
  2906     12FD  1C75               	btfss	??_fputc+1,0
  2907     12FE  1383               	bcf	3,7
  2908     12FF  0800               	movf	0,w
  2909     1300  00F6               	movwf	??_fputc+2
  2910     1301  0A84               	incf	4,f
  2911     1302  0800               	movf	0,w
  2912     1303  00F7               	movwf	??_fputc+3
  2913     1304  0876               	movf	??_fputc+2,w
  2914     1305  0477               	iorwf	??_fputc+3,w
  2915     1306  1903               	btfsc	3,2
  2916     1307  2B09               	goto	u2461
  2917     1308  2B0A               	goto	u2460
  2918     1309                     u2461:
  2919     1309  2B3C               	goto	l2064
  2920     130A                     u2460:
  2921     130A                     l2062:
  2922     130A  0872               	movf	fputc@fp,w
  2923     130B  3E09               	addlw	9
  2924     130C  00F4               	movwf	??_fputc
  2925     130D  0873               	movf	fputc@fp+1,w
  2926     130E  1803               	skipnc
  2927     130F  3E01               	addlw	1
  2928     1310  3E00               	addlw	0
  2929     1311  00F5               	movwf	??_fputc+1
  2930     1312  0874               	movf	??_fputc,w
  2931     1313  0084               	movwf	4
  2932     1314  1783               	bsf	3,7
  2933     1315  1C75               	btfss	??_fputc+1,0
  2934     1316  1383               	bcf	3,7
  2935     1317  0800               	movf	0,w
  2936     1318  00F6               	movwf	??_fputc+2
  2937     1319  0A84               	incf	4,f
  2938     131A  0800               	movf	0,w
  2939     131B  00F7               	movwf	??_fputc+3
  2940     131C  0872               	movf	fputc@fp,w
  2941     131D  3E02               	addlw	2
  2942     131E  00F8               	movwf	??_fputc+4
  2943     131F  0873               	movf	fputc@fp+1,w
  2944     1320  1803               	skipnc
  2945     1321  3E01               	addlw	1
  2946     1322  3E00               	addlw	0
  2947     1323  00F9               	movwf	??_fputc+5
  2948     1324  0878               	movf	??_fputc+4,w
  2949     1325  0084               	movwf	4
  2950     1326  1783               	bsf	3,7
  2951     1327  1C79               	btfss	??_fputc+5,0
  2952     1328  1383               	bcf	3,7
  2953     1329  0800               	movf	0,w
  2954     132A  00FA               	movwf	??_fputc+6
  2955     132B  0A84               	incf	4,f
  2956     132C  0800               	movf	0,w
  2957     132D  00FB               	movwf	??_fputc+7
  2958     132E  087B               	movf	??_fputc+7,w
  2959     132F  3A80               	xorlw	128
  2960     1330  00FC               	movwf	??_fputc+8
  2961     1331  0877               	movf	??_fputc+3,w
  2962     1332  3A80               	xorlw	128
  2963     1333  027C               	subwf	??_fputc+8,w
  2964     1334  1D03               	skipz
  2965     1335  2B38               	goto	u2475
  2966     1336  0876               	movf	??_fputc+2,w
  2967     1337  027A               	subwf	??_fputc+6,w
  2968     1338                     u2475:
  2969     1338  1803               	skipnc
  2970     1339  2B3B               	goto	u2471
  2971     133A  2B3C               	goto	u2470
  2972     133B                     u2471:
  2973     133B  2B78               	goto	l803
  2974     133C                     u2470:
  2975     133C                     l2064:
  2976     133C  0872               	movf	fputc@fp,w
  2977     133D  0084               	movwf	4
  2978     133E  1783               	bsf	3,7
  2979     133F  1C73               	btfss	fputc@fp+1,0
  2980     1340  1383               	bcf	3,7
  2981     1341  0800               	movf	0,w
  2982     1342  00F4               	movwf	??_fputc
  2983     1343  0A84               	incf	4,f
  2984     1344  0800               	movf	0,w
  2985     1345  00F5               	movwf	??_fputc+1
  2986     1346  0872               	movf	fputc@fp,w
  2987     1347  3E02               	addlw	2
  2988     1348  00F6               	movwf	??_fputc+2
  2989     1349  0873               	movf	fputc@fp+1,w
  2990     134A  1803               	skipnc
  2991     134B  3E01               	addlw	1
  2992     134C  3E00               	addlw	0
  2993     134D  00F7               	movwf	??_fputc+3
  2994     134E  0876               	movf	??_fputc+2,w
  2995     134F  0084               	movwf	4
  2996     1350  1783               	bsf	3,7
  2997     1351  1C77               	btfss	??_fputc+3,0
  2998     1352  1383               	bcf	3,7
  2999     1353  0800               	movf	0,w
  3000     1354  0774               	addwf	??_fputc,w
  3001     1355  00F9               	movwf	??_fputc+5
  3002     1356  0875               	movf	??_fputc+1,w
  3003     1357  00F8               	movwf	??_fputc+4
  3004     1358  1803               	skipnc
  3005     1359  0AF8               	incf	??_fputc+4,f
  3006     135A  1F80               	btfss	0,7
  3007     135B  2B5D               	goto	u2480
  3008     135C  03F8               	decf	??_fputc+4,f
  3009     135D                     u2480:
  3010     135D  0878               	movf	??_fputc+4,w
  3011     135E  00FA               	movwf	??_fputc+6
  3012     135F  0879               	movf	??_fputc+5,w
  3013     1360  0084               	movwf	4
  3014     1361  1783               	bsf	3,7
  3015     1362  1C7A               	btfss	??_fputc+6,0
  3016     1363  1383               	bcf	3,7
  3017     1364  0870               	movf	fputc@c,w
  3018     1365  0080               	movwf	0
  3019     1366  0872               	movf	fputc@fp,w
  3020     1367  3E02               	addlw	2
  3021     1368  00F4               	movwf	??_fputc
  3022     1369  0873               	movf	fputc@fp+1,w
  3023     136A  1803               	skipnc
  3024     136B  3E01               	addlw	1
  3025     136C  3E00               	addlw	0
  3026     136D  00F5               	movwf	??_fputc+1
  3027     136E  0874               	movf	??_fputc,w
  3028     136F  0084               	movwf	4
  3029     1370  1783               	bsf	3,7
  3030     1371  1C75               	btfss	??_fputc+1,0
  3031     1372  1383               	bcf	3,7
  3032     1373  3001               	movlw	1
  3033     1374  0780               	addwf	0,f
  3034     1375  0A84               	incf	4,f
  3035     1376  1803               	skipnc
  3036     1377  0A80               	incf	0,f
  3037     1378                     l803:
  3038     1378  0008               	return
  3039     1379                     __end_of_fputc:
  3040                           
  3041                           	psect	text11
  3042     0804                     __ptext11:	
  3043 ;; *************** function _putch *****************
  3044 ;; Defined at:
  3045 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  c               1    wreg     unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  c               1    0[COMMON] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0
  3062 ;;      Totals:         0       0       0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_fputc
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072     0804                     _putch:	
  3073                           ;psect for function _putch
  3074                           
  3075     0804                     l814:	
  3076                           ;incstack = 0
  3077                           ; Regs used in _putch: [wreg]
  3078                           
  3079     0804  0008               	return
  3080     0805                     __end_of_putch:
  3081                           
  3082                           	psect	text12
  3083     1F1E                     __ptext12:	
  3084 ;; *************** function _memcpy *****************
  3085 ;; Defined at:
  3086 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  d1              1    0[COMMON] PTR void 
  3089 ;;		 -> dbuf(80), 
  3090 ;;  s1              1    1[COMMON] PTR const void 
  3091 ;;		 -> dbuf(80), 
  3092 ;;  n               2    2[COMMON] unsigned int 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  s               1    6[COMMON] PTR const unsigned char 
  3095 ;;		 -> dbuf(80), 
  3096 ;;  d               1    5[COMMON] PTR unsigned char 
  3097 ;;		 -> dbuf(80), 
  3098 ;;  tmp             1    4[COMMON] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    0[COMMON] PTR void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         4       0       0       0       0
  3109 ;;      Locals:         3       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0
  3111 ;;      Totals:         7       0       0       0       0
  3112 ;;Total ram usage:        7 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_efgtoa
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121     1F1E                     _memcpy:	
  3122                           ;psect for function _memcpy
  3123                           
  3124     1F1E                     l2752:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  3127                           
  3128     1F1E  0871               	movf	memcpy@s1,w
  3129     1F1F  00F6               	movwf	memcpy@s
  3130     1F20  0870               	movf	memcpy@d1,w
  3131     1F21  00F5               	movwf	memcpy@d
  3132     1F22  2F30               	goto	l788
  3133     1F23                     l2754:
  3134     1F23  0876               	movf	memcpy@s,w
  3135     1F24  0084               	movwf	4
  3136     1F25  1783               	bsf	3,7	;select IRP bank2
  3137     1F26  0800               	movf	0,w
  3138     1F27  00F4               	movwf	memcpy@tmp
  3139     1F28                     l2756:
  3140     1F28  3001               	movlw	1
  3141     1F29  07F6               	addwf	memcpy@s,f
  3142     1F2A                     l2758:
  3143     1F2A  0875               	movf	memcpy@d,w
  3144     1F2B  0084               	movwf	4
  3145     1F2C  0874               	movf	memcpy@tmp,w
  3146     1F2D  0080               	movwf	0
  3147     1F2E  3001               	movlw	1
  3148     1F2F  07F5               	addwf	memcpy@d,f
  3149     1F30                     l788:
  3150     1F30  3001               	movlw	1
  3151     1F31  02F2               	subwf	memcpy@n,f
  3152     1F32  3000               	movlw	0
  3153     1F33  1C03               	skipc
  3154     1F34  03F3               	decf	memcpy@n+1,f
  3155     1F35  02F3               	subwf	memcpy@n+1,f
  3156     1F36  0A72               	incf	memcpy@n,w
  3157     1F37  1D03               	skipz
  3158     1F38  2F3D               	goto	u4171
  3159     1F39  0A73               	incf	memcpy@n+1,w
  3160     1F3A  1D03               	btfss	3,2
  3161     1F3B  2F3D               	goto	u4171
  3162     1F3C  2F3E               	goto	u4170
  3163     1F3D                     u4171:
  3164     1F3D  2F23               	goto	l2754
  3165     1F3E                     u4170:
  3166     1F3E                     l791:
  3167     1F3E  0008               	return
  3168     1F3F                     __end_of_memcpy:
  3169                           
  3170                           	psect	text13
  3171     1E96                     __ptext13:	
  3172 ;; *************** function _labs *****************
  3173 ;; Defined at:
  3174 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  a               4    0[COMMON] long 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  4    0[COMMON] long 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         4       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0
  3191 ;;      Totals:         4       0       0       0       0
  3192 ;;Total ram usage:        4 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_efgtoa
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201     1E96                     _labs:	
  3202                           ;psect for function _labs
  3203                           
  3204     1E96                     l2714:	
  3205                           ;incstack = 0
  3206                           ; Regs used in _labs: [wreg+status,2+status,0]
  3207                           
  3208     1E96  1BF3               	btfsc	labs@a+3,7
  3209     1E97  2E99               	goto	u4041
  3210     1E98  2E9A               	goto	u4040
  3211     1E99                     u4041:
  3212     1E99  2E9B               	goto	l2718
  3213     1E9A                     u4040:
  3214     1E9A                     l2716:
  3215     1E9A  2EAA               	goto	l785
  3216     1E9B                     l2718:
  3217     1E9B  0970               	comf	labs@a,w
  3218     1E9C  00F0               	movwf	?_labs
  3219     1E9D  0971               	comf	labs@a+1,w
  3220     1E9E  00F1               	movwf	?_labs+1
  3221     1E9F  0972               	comf	labs@a+2,w
  3222     1EA0  00F2               	movwf	?_labs+2
  3223     1EA1  0973               	comf	labs@a+3,w
  3224     1EA2  00F3               	movwf	?_labs+3
  3225     1EA3  0AF0               	incf	?_labs,f
  3226     1EA4  1903               	skipnz
  3227     1EA5  0AF1               	incf	?_labs+1,f
  3228     1EA6  1903               	skipnz
  3229     1EA7  0AF2               	incf	?_labs+2,f
  3230     1EA8  1903               	skipnz
  3231     1EA9  0AF3               	incf	?_labs+3,f
  3232     1EAA                     l785:
  3233     1EAA  0008               	return
  3234     1EAB                     __end_of_labs:
  3235                           
  3236                           	psect	text14
  3237     15CA                     __ptext14:	
  3238 ;; *************** function _floorf *****************
  3239 ;; Defined at:
  3240 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  x               4   13[BANK0 ] float 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  u               4   29[BANK0 ] struct .
  3245 ;;  m               4   23[BANK0 ] unsigned long 
  3246 ;;  e               2   27[BANK0 ] int 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  4   13[BANK0 ] float 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, btemp+1
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       4       0       0       0
  3257 ;;      Locals:         0      10       0       0       0
  3258 ;;      Temps:          0       6       0       0       0
  3259 ;;      Totals:         0      20       0       0       0
  3260 ;;Total ram usage:       20 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_efgtoa
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269     15CA                     _floorf:	
  3270                           ;psect for function _floorf
  3271                           
  3272     15CA                     l2722:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  3275                           
  3276     15CA  1683               	bsf	3,5	;RP0=1, select bank1
  3277     15CB  1303               	bcf	3,6	;RP1=0, select bank1
  3278     15CC  085D               	movf	(floorf@F521+3)^(0+128),w
  3279     15CD  1283               	bcf	3,5	;RP0=0, select bank0
  3280     15CE  1303               	bcf	3,6	;RP1=0, select bank0
  3281     15CF  00C0               	movwf	floorf@u+3
  3282     15D0  1683               	bsf	3,5	;RP0=1, select bank1
  3283     15D1  1303               	bcf	3,6	;RP1=0, select bank1
  3284     15D2  085C               	movf	(floorf@F521+2)^(0+128),w
  3285     15D3  1283               	bcf	3,5	;RP0=0, select bank0
  3286     15D4  1303               	bcf	3,6	;RP1=0, select bank0
  3287     15D5  00BF               	movwf	floorf@u+2
  3288     15D6  1683               	bsf	3,5	;RP0=1, select bank1
  3289     15D7  1303               	bcf	3,6	;RP1=0, select bank1
  3290     15D8  085B               	movf	(floorf@F521+1)^(0+128),w
  3291     15D9  1283               	bcf	3,5	;RP0=0, select bank0
  3292     15DA  1303               	bcf	3,6	;RP1=0, select bank0
  3293     15DB  00BE               	movwf	floorf@u+1
  3294     15DC  1683               	bsf	3,5	;RP0=1, select bank1
  3295     15DD  1303               	bcf	3,6	;RP1=0, select bank1
  3296     15DE  085A               	movf	floorf@F521^(0+128),w
  3297     15DF  1283               	bcf	3,5	;RP0=0, select bank0
  3298     15E0  1303               	bcf	3,6	;RP1=0, select bank0
  3299     15E1  00BD               	movwf	floorf@u
  3300     15E2  0830               	movf	floorf@x+3,w
  3301     15E3  00C0               	movwf	floorf@u+3
  3302     15E4  082F               	movf	floorf@x+2,w
  3303     15E5  00BF               	movwf	floorf@u+2
  3304     15E6  082E               	movf	floorf@x+1,w
  3305     15E7  00BE               	movwf	floorf@u+1
  3306     15E8  082D               	movf	floorf@x,w
  3307     15E9  00BD               	movwf	floorf@u
  3308     15EA                     l2724:
  3309     15EA  083D               	movf	floorf@u,w
  3310     15EB  00B1               	movwf	??_floorf
  3311     15EC  083E               	movf	floorf@u+1,w
  3312     15ED  00B2               	movwf	??_floorf+1
  3313     15EE  083F               	movf	floorf@u+2,w
  3314     15EF  00B3               	movwf	??_floorf+2
  3315     15F0  0840               	movf	floorf@u+3,w
  3316     15F1  00B4               	movwf	??_floorf+3
  3317     15F2  3017               	movlw	23
  3318     15F3                     u4055:
  3319     15F3  1003               	clrc
  3320     15F4  0CB4               	rrf	??_floorf+3,f
  3321     15F5  0CB3               	rrf	??_floorf+2,f
  3322     15F6  0CB2               	rrf	??_floorf+1,f
  3323     15F7  0CB1               	rrf	??_floorf,f
  3324     15F8                     u4050:
  3325     15F8  3EFF               	addlw	-1
  3326     15F9  1D03               	skipz
  3327     15FA  2DF3               	goto	u4055
  3328     15FB  30FF               	movlw	255
  3329     15FC  0531               	andwf	??_floorf,w
  3330     15FD  00B5               	movwf	??_floorf+4
  3331     15FE  3000               	movlw	0
  3332     15FF  0532               	andwf	??_floorf+1,w
  3333     1600  00B6               	movwf	??_floorf+5
  3334     1601  0835               	movf	??_floorf+4,w
  3335     1602  3E81               	addlw	129
  3336     1603  00BB               	movwf	floorf@e
  3337     1604  0836               	movf	??_floorf+5,w
  3338     1605  1803               	skipnc
  3339     1606  3E01               	addlw	1
  3340     1607  3EFF               	addlw	255
  3341     1608  00BC               	movwf	floorf@e+1
  3342     1609                     l2726:
  3343     1609  083C               	movf	floorf@e+1,w
  3344     160A  3A80               	xorlw	128
  3345     160B  00FF               	movwf	btemp+1
  3346     160C  3080               	movlw	128
  3347     160D  027F               	subwf	btemp+1,w
  3348     160E  1D03               	skipz
  3349     160F  2E12               	goto	u4065
  3350     1610  3017               	movlw	23
  3351     1611  023B               	subwf	floorf@e,w
  3352     1612                     u4065:
  3353     1612  1C03               	skipc
  3354     1613  2E15               	goto	u4061
  3355     1614  2E16               	goto	u4060
  3356     1615                     u4061:
  3357     1615  2E17               	goto	l770
  3358     1616                     u4060:
  3359     1616                     l2728:
  3360     1616  2ED8               	goto	l771
  3361     1617                     l770:
  3362     1617  1283               	bcf	3,5	;RP0=0, select bank0
  3363     1618  1303               	bcf	3,6	;RP1=0, select bank0
  3364     1619  1BBC               	btfsc	floorf@e+1,7
  3365     161A  2E1C               	goto	u4071
  3366     161B  2E1D               	goto	u4070
  3367     161C                     u4071:
  3368     161C  2E8D               	goto	l2742
  3369     161D                     u4070:
  3370     161D                     l2730:
  3371     161D  0A3B               	incf	floorf@e,w
  3372     161E  00FF               	movwf	btemp+1
  3373     161F  30FF               	movlw	255
  3374     1620  00B1               	movwf	??_floorf
  3375     1621  30FF               	movlw	255
  3376     1622  00B2               	movwf	??_floorf+1
  3377     1623  307F               	movlw	127
  3378     1624  00B3               	movwf	??_floorf+2
  3379     1625  3000               	movlw	0
  3380     1626  00B4               	movwf	??_floorf+3
  3381     1627  2E2D               	goto	u4080
  3382     1628                     u4085:
  3383     1628  0D34               	rlf	??_floorf+3,w
  3384     1629  0CB4               	rrf	??_floorf+3,f
  3385     162A  0CB3               	rrf	??_floorf+2,f
  3386     162B  0CB2               	rrf	??_floorf+1,f
  3387     162C  0CB1               	rrf	??_floorf,f
  3388     162D                     u4080:
  3389     162D  0BFF               	decfsz	btemp+1,f
  3390     162E  2E28               	goto	u4085
  3391     162F  0834               	movf	??_floorf+3,w
  3392     1630  00BA               	movwf	floorf@m+3
  3393     1631  0833               	movf	??_floorf+2,w
  3394     1632  00B9               	movwf	floorf@m+2
  3395     1633  0832               	movf	??_floorf+1,w
  3396     1634  00B8               	movwf	floorf@m+1
  3397     1635  0831               	movf	??_floorf,w
  3398     1636  00B7               	movwf	floorf@m
  3399     1637                     l2732:
  3400     1637  0837               	movf	floorf@m,w
  3401     1638  053D               	andwf	floorf@u,w
  3402     1639  00B1               	movwf	??_floorf
  3403     163A  0838               	movf	floorf@m+1,w
  3404     163B  053E               	andwf	floorf@u+1,w
  3405     163C  00B2               	movwf	??_floorf+1
  3406     163D  0839               	movf	floorf@m+2,w
  3407     163E  053F               	andwf	floorf@u+2,w
  3408     163F  00B3               	movwf	??_floorf+2
  3409     1640  083A               	movf	floorf@m+3,w
  3410     1641  0540               	andwf	floorf@u+3,w
  3411     1642  00B4               	movwf	??_floorf+3
  3412     1643  0834               	movf	??_floorf+3,w
  3413     1644  0433               	iorwf	??_floorf+2,w
  3414     1645  0432               	iorwf	??_floorf+1,w
  3415     1646  0431               	iorwf	??_floorf,w
  3416     1647  1D03               	skipz
  3417     1648  2E4A               	goto	u4091
  3418     1649  2E4B               	goto	u4090
  3419     164A                     u4091:
  3420     164A  2E4C               	goto	l2736
  3421     164B                     u4090:
  3422     164B  2E16               	goto	l2728
  3423     164C                     l2736:
  3424     164C  083D               	movf	floorf@u,w
  3425     164D  00B1               	movwf	??_floorf
  3426     164E  083E               	movf	floorf@u+1,w
  3427     164F  00B2               	movwf	??_floorf+1
  3428     1650  083F               	movf	floorf@u+2,w
  3429     1651  00B3               	movwf	??_floorf+2
  3430     1652  0840               	movf	floorf@u+3,w
  3431     1653  00B4               	movwf	??_floorf+3
  3432     1654  301F               	movlw	31
  3433     1655                     u4105:
  3434     1655  1003               	clrc
  3435     1656  0CB4               	rrf	??_floorf+3,f
  3436     1657  0CB3               	rrf	??_floorf+2,f
  3437     1658  0CB2               	rrf	??_floorf+1,f
  3438     1659  0CB1               	rrf	??_floorf,f
  3439     165A                     u4100:
  3440     165A  3EFF               	addlw	-1
  3441     165B  1D03               	skipz
  3442     165C  2E55               	goto	u4105
  3443     165D  0834               	movf	??_floorf+3,w
  3444     165E  0433               	iorwf	??_floorf+2,w
  3445     165F  0432               	iorwf	??_floorf+1,w
  3446     1660  0431               	iorwf	??_floorf,w
  3447     1661  1903               	skipnz
  3448     1662  2E64               	goto	u4111
  3449     1663  2E65               	goto	u4110
  3450     1664                     u4111:
  3451     1664  2E7C               	goto	l2740
  3452     1665                     u4110:
  3453     1665                     l2738:
  3454     1665  0837               	movf	floorf@m,w
  3455     1666  07BD               	addwf	floorf@u,f
  3456     1667  0838               	movf	floorf@m+1,w
  3457     1668  1103               	clrz
  3458     1669  1803               	skipnc
  3459     166A  3E01               	addlw	1
  3460     166B  1903               	skipnz
  3461     166C  2E6E               	goto	u4121
  3462     166D  07BE               	addwf	floorf@u+1,f
  3463     166E                     u4121:
  3464     166E  0839               	movf	floorf@m+2,w
  3465     166F  1103               	clrz
  3466     1670  1803               	skipnc
  3467     1671  3E01               	addlw	1
  3468     1672  1903               	skipnz
  3469     1673  2E75               	goto	u4122
  3470     1674  07BF               	addwf	floorf@u+2,f
  3471     1675                     u4122:
  3472     1675  083A               	movf	floorf@m+3,w
  3473     1676  1103               	clrz
  3474     1677  1803               	skipnc
  3475     1678  3E01               	addlw	1
  3476     1679  1903               	skipnz
  3477     167A  2E7C               	goto	u4123
  3478     167B  07C0               	addwf	floorf@u+3,f
  3479     167C                     u4123:
  3480     167C                     l2740:
  3481     167C  0937               	comf	floorf@m,w
  3482     167D  00B1               	movwf	??_floorf
  3483     167E  0938               	comf	floorf@m+1,w
  3484     167F  00B2               	movwf	??_floorf+1
  3485     1680  0939               	comf	floorf@m+2,w
  3486     1681  00B3               	movwf	??_floorf+2
  3487     1682  093A               	comf	floorf@m+3,w
  3488     1683  00B4               	movwf	??_floorf+3
  3489     1684  0831               	movf	??_floorf,w
  3490     1685  05BD               	andwf	floorf@u,f
  3491     1686  0832               	movf	??_floorf+1,w
  3492     1687  05BE               	andwf	floorf@u+1,f
  3493     1688  0833               	movf	??_floorf+2,w
  3494     1689  05BF               	andwf	floorf@u+2,f
  3495     168A  0834               	movf	??_floorf+3,w
  3496     168B  05C0               	andwf	floorf@u+3,f
  3497     168C  2ED0               	goto	l775
  3498     168D                     l2742:
  3499     168D  083D               	movf	floorf@u,w
  3500     168E  00B1               	movwf	??_floorf
  3501     168F  083E               	movf	floorf@u+1,w
  3502     1690  00B2               	movwf	??_floorf+1
  3503     1691  083F               	movf	floorf@u+2,w
  3504     1692  00B3               	movwf	??_floorf+2
  3505     1693  0840               	movf	floorf@u+3,w
  3506     1694  00B4               	movwf	??_floorf+3
  3507     1695  301F               	movlw	31
  3508     1696                     u4135:
  3509     1696  1003               	clrc
  3510     1697  0CB4               	rrf	??_floorf+3,f
  3511     1698  0CB3               	rrf	??_floorf+2,f
  3512     1699  0CB2               	rrf	??_floorf+1,f
  3513     169A  0CB1               	rrf	??_floorf,f
  3514     169B                     u4130:
  3515     169B  3EFF               	addlw	-1
  3516     169C  1D03               	skipz
  3517     169D  2E96               	goto	u4135
  3518     169E  0834               	movf	??_floorf+3,w
  3519     169F  0433               	iorwf	??_floorf+2,w
  3520     16A0  0432               	iorwf	??_floorf+1,w
  3521     16A1  0431               	iorwf	??_floorf,w
  3522     16A2  1D03               	skipz
  3523     16A3  2EA5               	goto	u4141
  3524     16A4  2EA6               	goto	u4140
  3525     16A5                     u4141:
  3526     16A5  2EAF               	goto	l2746
  3527     16A6                     u4140:
  3528     16A6                     l2744:
  3529     16A6  3000               	movlw	0
  3530     16A7  00C0               	movwf	floorf@u+3
  3531     16A8  3000               	movlw	0
  3532     16A9  00BF               	movwf	floorf@u+2
  3533     16AA  3000               	movlw	0
  3534     16AB  00BE               	movwf	floorf@u+1
  3535     16AC  3000               	movlw	0
  3536     16AD  00BD               	movwf	floorf@u
  3537     16AE  2ED0               	goto	l775
  3538     16AF                     l2746:
  3539     16AF  083D               	movf	floorf@u,w
  3540     16B0  00B1               	movwf	??_floorf
  3541     16B1  083E               	movf	floorf@u+1,w
  3542     16B2  00B2               	movwf	??_floorf+1
  3543     16B3  083F               	movf	floorf@u+2,w
  3544     16B4  00B3               	movwf	??_floorf+2
  3545     16B5  0840               	movf	floorf@u+3,w
  3546     16B6  00B4               	movwf	??_floorf+3
  3547     16B7  3001               	movlw	1
  3548     16B8                     u4155:
  3549     16B8  1003               	clrc
  3550     16B9  0DB1               	rlf	??_floorf,f
  3551     16BA  0DB2               	rlf	??_floorf+1,f
  3552     16BB  0DB3               	rlf	??_floorf+2,f
  3553     16BC  0DB4               	rlf	??_floorf+3,f
  3554     16BD                     u4150:
  3555     16BD  3EFF               	addlw	-1
  3556     16BE  1D03               	skipz
  3557     16BF  2EB8               	goto	u4155
  3558     16C0  0834               	movf	??_floorf+3,w
  3559     16C1  0433               	iorwf	??_floorf+2,w
  3560     16C2  0432               	iorwf	??_floorf+1,w
  3561     16C3  0431               	iorwf	??_floorf,w
  3562     16C4  1903               	skipnz
  3563     16C5  2EC7               	goto	u4161
  3564     16C6  2EC8               	goto	u4160
  3565     16C7                     u4161:
  3566     16C7  2ED0               	goto	l775
  3567     16C8                     u4160:
  3568     16C8                     l2748:
  3569     16C8  30BF               	movlw	191
  3570     16C9  00C0               	movwf	floorf@u+3
  3571     16CA  3080               	movlw	128
  3572     16CB  00BF               	movwf	floorf@u+2
  3573     16CC  3000               	movlw	0
  3574     16CD  00BE               	movwf	floorf@u+1
  3575     16CE  3000               	movlw	0
  3576     16CF  00BD               	movwf	floorf@u
  3577     16D0                     l775:
  3578     16D0  0840               	movf	floorf@u+3,w
  3579     16D1  00B0               	movwf	?_floorf+3
  3580     16D2  083F               	movf	floorf@u+2,w
  3581     16D3  00AF               	movwf	?_floorf+2
  3582     16D4  083E               	movf	floorf@u+1,w
  3583     16D5  00AE               	movwf	?_floorf+1
  3584     16D6  083D               	movf	floorf@u,w
  3585     16D7  00AD               	movwf	?_floorf
  3586     16D8                     l771:
  3587     16D8  0008               	return
  3588     16D9                     __end_of_floorf:
  3589                           
  3590                           	psect	text15
  3591     0805                     __ptext15:	
  3592 ;; *************** function ___fpclassifyf *****************
  3593 ;; Defined at:
  3594 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  x               4    0[COMMON] float 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  u               4    2[BANK0 ] struct .
  3599 ;;  e               2    0[BANK0 ] int 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  2    0[COMMON] int 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         4       0       0       0       0
  3610 ;;      Locals:         0       6       0       0       0
  3611 ;;      Temps:          6       0       0       0       0
  3612 ;;      Totals:        10       6       0       0       0
  3613 ;;Total ram usage:       16 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_efgtoa
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622     0805                     ___fpclassifyf:	
  3623                           ;psect for function ___fpclassifyf
  3624                           
  3625     0805                     l2686:	
  3626                           ;incstack = 0
  3627                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  3628                           
  3629     0805  1683               	bsf	3,5	;RP0=1, select bank1
  3630     0806  1303               	bcf	3,6	;RP1=0, select bank1
  3631     0807  0861               	movf	(___fpclassifyf@F465+3)^(0+128),w
  3632     0808  1283               	bcf	3,5	;RP0=0, select bank0
  3633     0809  1303               	bcf	3,6	;RP1=0, select bank0
  3634     080A  00A5               	movwf	___fpclassifyf@u+3
  3635     080B  1683               	bsf	3,5	;RP0=1, select bank1
  3636     080C  1303               	bcf	3,6	;RP1=0, select bank1
  3637     080D  0860               	movf	(___fpclassifyf@F465+2)^(0+128),w
  3638     080E  1283               	bcf	3,5	;RP0=0, select bank0
  3639     080F  1303               	bcf	3,6	;RP1=0, select bank0
  3640     0810  00A4               	movwf	___fpclassifyf@u+2
  3641     0811  1683               	bsf	3,5	;RP0=1, select bank1
  3642     0812  1303               	bcf	3,6	;RP1=0, select bank1
  3643     0813  085F               	movf	(___fpclassifyf@F465+1)^(0+128),w
  3644     0814  1283               	bcf	3,5	;RP0=0, select bank0
  3645     0815  1303               	bcf	3,6	;RP1=0, select bank0
  3646     0816  00A3               	movwf	___fpclassifyf@u+1
  3647     0817  1683               	bsf	3,5	;RP0=1, select bank1
  3648     0818  1303               	bcf	3,6	;RP1=0, select bank1
  3649     0819  085E               	movf	___fpclassifyf@F465^(0+128),w
  3650     081A  1283               	bcf	3,5	;RP0=0, select bank0
  3651     081B  1303               	bcf	3,6	;RP1=0, select bank0
  3652     081C  00A2               	movwf	___fpclassifyf@u
  3653     081D  0873               	movf	___fpclassifyf@x+3,w
  3654     081E  00A5               	movwf	___fpclassifyf@u+3
  3655     081F  0872               	movf	___fpclassifyf@x+2,w
  3656     0820  00A4               	movwf	___fpclassifyf@u+2
  3657     0821  0871               	movf	___fpclassifyf@x+1,w
  3658     0822  00A3               	movwf	___fpclassifyf@u+1
  3659     0823  0870               	movf	___fpclassifyf@x,w
  3660     0824  00A2               	movwf	___fpclassifyf@u
  3661     0825                     l2688:
  3662     0825  0822               	movf	___fpclassifyf@u,w
  3663     0826  00F4               	movwf	??___fpclassifyf
  3664     0827  0823               	movf	___fpclassifyf@u+1,w
  3665     0828  00F5               	movwf	??___fpclassifyf+1
  3666     0829  0824               	movf	___fpclassifyf@u+2,w
  3667     082A  00F6               	movwf	??___fpclassifyf+2
  3668     082B  0825               	movf	___fpclassifyf@u+3,w
  3669     082C  00F7               	movwf	??___fpclassifyf+3
  3670     082D  3017               	movlw	23
  3671     082E                     u3955:
  3672     082E  1003               	clrc
  3673     082F  0CF7               	rrf	??___fpclassifyf+3,f
  3674     0830  0CF6               	rrf	??___fpclassifyf+2,f
  3675     0831  0CF5               	rrf	??___fpclassifyf+1,f
  3676     0832  0CF4               	rrf	??___fpclassifyf,f
  3677     0833                     u3950:
  3678     0833  3EFF               	addlw	-1
  3679     0834  1D03               	skipz
  3680     0835  282E               	goto	u3955
  3681     0836  30FF               	movlw	255
  3682     0837  0574               	andwf	??___fpclassifyf,w
  3683     0838  00A0               	movwf	___fpclassifyf@e
  3684     0839  3000               	movlw	0
  3685     083A  0575               	andwf	??___fpclassifyf+1,w
  3686     083B  00A1               	movwf	___fpclassifyf@e+1
  3687     083C                     l2690:
  3688     083C  0820               	movf	___fpclassifyf@e,w
  3689     083D  0421               	iorwf	___fpclassifyf@e+1,w
  3690     083E  1D03               	btfss	3,2
  3691     083F  2841               	goto	u3961
  3692     0840  2842               	goto	u3960
  3693     0841                     u3961:
  3694     0841  2865               	goto	l2700
  3695     0842                     u3960:
  3696     0842                     l2692:
  3697     0842  0822               	movf	___fpclassifyf@u,w
  3698     0843  00F4               	movwf	??___fpclassifyf
  3699     0844  0823               	movf	___fpclassifyf@u+1,w
  3700     0845  00F5               	movwf	??___fpclassifyf+1
  3701     0846  0824               	movf	___fpclassifyf@u+2,w
  3702     0847  00F6               	movwf	??___fpclassifyf+2
  3703     0848  0825               	movf	___fpclassifyf@u+3,w
  3704     0849  00F7               	movwf	??___fpclassifyf+3
  3705     084A  3001               	movlw	1
  3706     084B                     u3975:
  3707     084B  1003               	clrc
  3708     084C  0DF4               	rlf	??___fpclassifyf,f
  3709     084D  0DF5               	rlf	??___fpclassifyf+1,f
  3710     084E  0DF6               	rlf	??___fpclassifyf+2,f
  3711     084F  0DF7               	rlf	??___fpclassifyf+3,f
  3712     0850                     u3970:
  3713     0850  3EFF               	addlw	-1
  3714     0851  1D03               	skipz
  3715     0852  284B               	goto	u3975
  3716     0853  0877               	movf	??___fpclassifyf+3,w
  3717     0854  0476               	iorwf	??___fpclassifyf+2,w
  3718     0855  0475               	iorwf	??___fpclassifyf+1,w
  3719     0856  0474               	iorwf	??___fpclassifyf,w
  3720     0857  1D03               	skipz
  3721     0858  285A               	goto	u3981
  3722     0859  285B               	goto	u3980
  3723     085A                     u3981:
  3724     085A  2860               	goto	l2696
  3725     085B                     u3980:
  3726     085B                     l2694:
  3727     085B  3002               	movlw	2
  3728     085C  00F0               	movwf	?___fpclassifyf
  3729     085D  3000               	movlw	0
  3730     085E  00F1               	movwf	?___fpclassifyf+1
  3731     085F  2891               	goto	l764
  3732     0860                     l2696:
  3733     0860  3003               	movlw	3
  3734     0861  00F0               	movwf	?___fpclassifyf
  3735     0862  3000               	movlw	0
  3736     0863  00F1               	movwf	?___fpclassifyf+1
  3737     0864  2891               	goto	l764
  3738     0865                     l2700:
  3739     0865  0A20               	incf	___fpclassifyf@e,w
  3740     0866  0421               	iorwf	___fpclassifyf@e+1,w
  3741     0867  1D03               	btfss	3,2
  3742     0868  286A               	goto	u3991
  3743     0869  286B               	goto	u3990
  3744     086A                     u3991:
  3745     086A  288D               	goto	l2706
  3746     086B                     u3990:
  3747     086B                     l2702:
  3748     086B  0822               	movf	___fpclassifyf@u,w
  3749     086C  00F4               	movwf	??___fpclassifyf
  3750     086D  0823               	movf	___fpclassifyf@u+1,w
  3751     086E  00F5               	movwf	??___fpclassifyf+1
  3752     086F  0824               	movf	___fpclassifyf@u+2,w
  3753     0870  00F6               	movwf	??___fpclassifyf+2
  3754     0871  0825               	movf	___fpclassifyf@u+3,w
  3755     0872  00F7               	movwf	??___fpclassifyf+3
  3756     0873  3009               	movlw	9
  3757     0874                     u4005:
  3758     0874  1003               	clrc
  3759     0875  0DF4               	rlf	??___fpclassifyf,f
  3760     0876  0DF5               	rlf	??___fpclassifyf+1,f
  3761     0877  0DF6               	rlf	??___fpclassifyf+2,f
  3762     0878  0DF7               	rlf	??___fpclassifyf+3,f
  3763     0879                     u4000:
  3764     0879  3EFF               	addlw	-1
  3765     087A  1D03               	skipz
  3766     087B  2874               	goto	u4005
  3767     087C  0877               	movf	??___fpclassifyf+3,w
  3768     087D  0476               	iorwf	??___fpclassifyf+2,w
  3769     087E  0475               	iorwf	??___fpclassifyf+1,w
  3770     087F  0474               	iorwf	??___fpclassifyf,w
  3771     0880  1903               	skipnz
  3772     0881  2883               	goto	u4011
  3773     0882  2885               	goto	u4010
  3774     0883                     u4011:
  3775     0883  3001               	movlw	1
  3776     0884  2886               	goto	u4020
  3777     0885                     u4010:
  3778     0885  3000               	movlw	0
  3779     0886                     u4020:
  3780     0886  00F8               	movwf	??___fpclassifyf+4
  3781     0887  01F9               	clrf	??___fpclassifyf+5
  3782     0888  0878               	movf	??___fpclassifyf+4,w
  3783     0889  00F0               	movwf	?___fpclassifyf
  3784     088A  0879               	movf	??___fpclassifyf+5,w
  3785     088B  00F1               	movwf	?___fpclassifyf+1
  3786     088C  2891               	goto	l764
  3787     088D                     l2706:
  3788     088D  3004               	movlw	4
  3789     088E  00F0               	movwf	?___fpclassifyf
  3790     088F  3000               	movlw	0
  3791     0890  00F1               	movwf	?___fpclassifyf+1
  3792     0891                     l764:
  3793     0891  0008               	return
  3794     0892                     __end_of___fpclassifyf:
  3795                           
  3796                           	psect	text16
  3797     126B                     __ptext16:	
  3798 ;; *************** function ___fltol *****************
  3799 ;; Defined at:
  3800 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  f1              4    0[COMMON] int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  exp1            1    9[COMMON] unsigned char 
  3805 ;;  sign1           1    8[COMMON] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  4    0[COMMON] long 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3815 ;;      Params:         4       0       0       0       0
  3816 ;;      Locals:         2       0       0       0       0
  3817 ;;      Temps:          4       0       0       0       0
  3818 ;;      Totals:        10       0       0       0       0
  3819 ;;Total ram usage:       10 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_efgtoa
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828     126B                     ___fltol:	
  3829                           ;psect for function ___fltol
  3830                           
  3831     126B                     l2342:	
  3832                           ;incstack = 0
  3833                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3834                           
  3835     126B  1003               	clrc
  3836     126C  0D72               	rlf	___fltol@f1+2,w
  3837     126D  0D73               	rlf	___fltol@f1+3,w
  3838     126E  00F9               	movwf	___fltol@exp1
  3839     126F  0879               	movf	___fltol@exp1,w
  3840     1270  1D03               	btfss	3,2
  3841     1271  2A73               	goto	u3141
  3842     1272  2A74               	goto	u3140
  3843     1273                     u3141:
  3844     1273  2A7D               	goto	l2348
  3845     1274                     u3140:
  3846     1274                     l2344:
  3847     1274  3000               	movlw	0
  3848     1275  00F3               	movwf	?___fltol+3
  3849     1276  3000               	movlw	0
  3850     1277  00F2               	movwf	?___fltol+2
  3851     1278  3000               	movlw	0
  3852     1279  00F1               	movwf	?___fltol+1
  3853     127A  3000               	movlw	0
  3854     127B  00F0               	movwf	?___fltol
  3855     127C  2ADE               	goto	l364
  3856     127D                     l2348:
  3857     127D  0870               	movf	___fltol@f1,w
  3858     127E  00F4               	movwf	??___fltol
  3859     127F  0871               	movf	___fltol@f1+1,w
  3860     1280  00F5               	movwf	??___fltol+1
  3861     1281  0872               	movf	___fltol@f1+2,w
  3862     1282  00F6               	movwf	??___fltol+2
  3863     1283  0873               	movf	___fltol@f1+3,w
  3864     1284  00F7               	movwf	??___fltol+3
  3865     1285  301F               	movlw	31
  3866     1286                     u3155:
  3867     1286  1003               	clrc
  3868     1287  0CF7               	rrf	??___fltol+3,f
  3869     1288  0CF6               	rrf	??___fltol+2,f
  3870     1289  0CF5               	rrf	??___fltol+1,f
  3871     128A  0CF4               	rrf	??___fltol,f
  3872     128B                     u3150:
  3873     128B  3EFF               	addlw	-1
  3874     128C  1D03               	skipz
  3875     128D  2A86               	goto	u3155
  3876     128E  0874               	movf	??___fltol,w
  3877     128F  00F8               	movwf	___fltol@sign1
  3878     1290                     l2350:
  3879     1290  17F2               	bsf	___fltol@f1+2,7
  3880     1291                     l2352:
  3881     1291  30FF               	movlw	255
  3882     1292  05F0               	andwf	___fltol@f1,f
  3883     1293  30FF               	movlw	255
  3884     1294  05F1               	andwf	___fltol@f1+1,f
  3885     1295  30FF               	movlw	255
  3886     1296  05F2               	andwf	___fltol@f1+2,f
  3887     1297  3000               	movlw	0
  3888     1298  05F3               	andwf	___fltol@f1+3,f
  3889     1299                     l2354:
  3890     1299  3096               	movlw	150
  3891     129A  02F9               	subwf	___fltol@exp1,f
  3892     129B                     l2356:
  3893     129B  1FF9               	btfss	___fltol@exp1,7
  3894     129C  2A9E               	goto	u3161
  3895     129D  2A9F               	goto	u3160
  3896     129E                     u3161:
  3897     129E  2AB7               	goto	l2366
  3898     129F                     u3160:
  3899     129F                     l2358:
  3900     129F  0879               	movf	___fltol@exp1,w
  3901     12A0  3A80               	xorlw	128
  3902     12A1  3E97               	addlw	151
  3903     12A2  1803               	skipnc
  3904     12A3  2AA5               	goto	u3171
  3905     12A4  2AA6               	goto	u3170
  3906     12A5                     u3171:
  3907     12A5  2AA7               	goto	l2364
  3908     12A6                     u3170:
  3909     12A6  2A74               	goto	l2344
  3910     12A7                     l2364:
  3911     12A7  3001               	movlw	1
  3912     12A8                     u3185:
  3913     12A8  1003               	clrc
  3914     12A9  0CF3               	rrf	___fltol@f1+3,f
  3915     12AA  0CF2               	rrf	___fltol@f1+2,f
  3916     12AB  0CF1               	rrf	___fltol@f1+1,f
  3917     12AC  0CF0               	rrf	___fltol@f1,f
  3918     12AD  3EFF               	addlw	-1
  3919     12AE  1D03               	skipz
  3920     12AF  2AA8               	goto	u3185
  3921     12B0  3001               	movlw	1
  3922     12B1  07F9               	addwf	___fltol@exp1,f
  3923     12B2  1D03               	btfss	3,2
  3924     12B3  2AB5               	goto	u3191
  3925     12B4  2AB6               	goto	u3190
  3926     12B5                     u3191:
  3927     12B5  2AA7               	goto	l2364
  3928     12B6                     u3190:
  3929     12B6  2ACE               	goto	l2374
  3930     12B7                     l2366:
  3931     12B7  3020               	movlw	32
  3932     12B8  0279               	subwf	___fltol@exp1,w
  3933     12B9  1C03               	skipc
  3934     12BA  2ABC               	goto	u3201
  3935     12BB  2ABD               	goto	u3200
  3936     12BC                     u3201:
  3937     12BC  2AC9               	goto	l371
  3938     12BD                     u3200:
  3939     12BD  2A74               	goto	l2344
  3940     12BE                     l2372:
  3941     12BE  3001               	movlw	1
  3942     12BF  00F4               	movwf	??___fltol
  3943     12C0                     u3215:
  3944     12C0  1003               	clrc
  3945     12C1  0DF0               	rlf	___fltol@f1,f
  3946     12C2  0DF1               	rlf	___fltol@f1+1,f
  3947     12C3  0DF2               	rlf	___fltol@f1+2,f
  3948     12C4  0DF3               	rlf	___fltol@f1+3,f
  3949     12C5  0BF4               	decfsz	??___fltol,f
  3950     12C6  2AC0               	goto	u3215
  3951     12C7  3001               	movlw	1
  3952     12C8  02F9               	subwf	___fltol@exp1,f
  3953     12C9                     l371:
  3954     12C9  0879               	movf	___fltol@exp1,w
  3955     12CA  1D03               	btfss	3,2
  3956     12CB  2ACD               	goto	u3221
  3957     12CC  2ACE               	goto	u3220
  3958     12CD                     u3221:
  3959     12CD  2ABE               	goto	l2372
  3960     12CE                     u3220:
  3961     12CE                     l2374:
  3962     12CE  0878               	movf	___fltol@sign1,w
  3963     12CF  1903               	btfsc	3,2
  3964     12D0  2AD2               	goto	u3231
  3965     12D1  2AD3               	goto	u3230
  3966     12D2                     u3231:
  3967     12D2  2ADE               	goto	l374
  3968     12D3                     u3230:
  3969     12D3                     l2376:
  3970     12D3  09F0               	comf	___fltol@f1,f
  3971     12D4  09F1               	comf	___fltol@f1+1,f
  3972     12D5  09F2               	comf	___fltol@f1+2,f
  3973     12D6  09F3               	comf	___fltol@f1+3,f
  3974     12D7  0AF0               	incf	___fltol@f1,f
  3975     12D8  1903               	skipnz
  3976     12D9  0AF1               	incf	___fltol@f1+1,f
  3977     12DA  1903               	skipnz
  3978     12DB  0AF2               	incf	___fltol@f1+2,f
  3979     12DC  1903               	skipnz
  3980     12DD  0AF3               	incf	___fltol@f1+3,f
  3981     12DE                     l374:
  3982     12DE                     l364:
  3983     12DE  0008               	return
  3984     12DF                     __end_of___fltol:
  3985                           
  3986                           	psect	text17
  3987     1F3F                     __ptext17:	
  3988 ;; *************** function ___flsub *****************
  3989 ;; Defined at:
  3990 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  a               4   26[BANK0 ] long 
  3993 ;;  b               4   30[BANK0 ] long 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  4   26[BANK0 ] long 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       8       0       0       0
  4006 ;;      Locals:         0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0
  4008 ;;      Totals:         0       8       0       0       0
  4009 ;;Total ram usage:        8 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 1
  4012 ;; This function calls:
  4013 ;;		___fladd
  4014 ;; This function is called by:
  4015 ;;		_efgtoa
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019     1F3F                     ___flsub:	
  4020                           ;psect for function ___flsub
  4021                           
  4022     1F3F                     l2378:	
  4023                           ;incstack = 0
  4024                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4025                           
  4026     1F3F  3080               	movlw	128
  4027     1F40  1283               	bcf	3,5	;RP0=0, select bank0
  4028     1F41  1303               	bcf	3,6	;RP1=0, select bank0
  4029     1F42  06BD               	xorwf	___flsub@a+3,f
  4030     1F43                     l2380:
  4031     1F43  0841               	movf	___flsub@b+3,w
  4032     1F44  00F3               	movwf	___fladd@b+3
  4033     1F45  0840               	movf	___flsub@b+2,w
  4034     1F46  00F2               	movwf	___fladd@b+2
  4035     1F47  083F               	movf	___flsub@b+1,w
  4036     1F48  00F1               	movwf	___fladd@b+1
  4037     1F49  083E               	movf	___flsub@b,w
  4038     1F4A  00F0               	movwf	___fladd@b
  4039     1F4B  083D               	movf	___flsub@a+3,w
  4040     1F4C  00F7               	movwf	___fladd@a+3
  4041     1F4D  083C               	movf	___flsub@a+2,w
  4042     1F4E  00F6               	movwf	___fladd@a+2
  4043     1F4F  083B               	movf	___flsub@a+1,w
  4044     1F50  00F5               	movwf	___fladd@a+1
  4045     1F51  083A               	movf	___flsub@a,w
  4046     1F52  00F4               	movwf	___fladd@a
  4047     1F53  120A  158A  2262  160A  158A  	fcall	___fladd
  4048     1F58  0873               	movf	?___fladd+3,w
  4049     1F59  1283               	bcf	3,5	;RP0=0, select bank0
  4050     1F5A  1303               	bcf	3,6	;RP1=0, select bank0
  4051     1F5B  00BD               	movwf	?___flsub+3
  4052     1F5C  0872               	movf	?___fladd+2,w
  4053     1F5D  00BC               	movwf	?___flsub+2
  4054     1F5E  0871               	movf	?___fladd+1,w
  4055     1F5F  00BB               	movwf	?___flsub+1
  4056     1F60  0870               	movf	?___fladd,w
  4057     1F61  00BA               	movwf	?___flsub
  4058     1F62                     l517:
  4059     1F62  0008               	return
  4060     1F63                     __end_of___flsub:
  4061                           
  4062                           	psect	text18
  4063     0A62                     __ptext18:	
  4064 ;; *************** function ___fladd *****************
  4065 ;; Defined at:
  4066 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  b               4    0[COMMON] long 
  4069 ;;  a               4    4[COMMON] long 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  grs             1   11[COMMON] unsigned char 
  4072 ;;  bexp            1   10[COMMON] unsigned char 
  4073 ;;  aexp            1    9[COMMON] unsigned char 
  4074 ;;  signs           1    8[COMMON] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  4    0[COMMON] unsigned char 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, btemp+1
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4084 ;;      Params:         8       0       0       0       0
  4085 ;;      Locals:         4       0       0       0       0
  4086 ;;      Temps:          0       8       0       0       0
  4087 ;;      Totals:        12       8       0       0       0
  4088 ;;Total ram usage:       20 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		___flsub
  4094 ;;		_efgtoa
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098     0A62                     ___fladd:	
  4099                           ;psect for function ___fladd
  4100                           
  4101     0A62                     l2068:	
  4102                           ;incstack = 0
  4103                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4104                           
  4105     0A62  0873               	movf	___fladd@b+3,w
  4106     0A63  00F8               	movwf	___fladd@signs
  4107     0A64                     l2070:
  4108     0A64  3080               	movlw	128
  4109     0A65  05F8               	andwf	___fladd@signs,f
  4110     0A66                     l2072:
  4111     0A66  0873               	movf	___fladd@b+3,w
  4112     0A67  1283               	bcf	3,5	;RP0=0, select bank0
  4113     0A68  1303               	bcf	3,6	;RP1=0, select bank0
  4114     0A69  00A0               	movwf	??___fladd
  4115     0A6A  0720               	addwf	??___fladd,w
  4116     0A6B  00FA               	movwf	___fladd@bexp
  4117     0A6C                     l2074:
  4118     0A6C  1FF2               	btfss	___fladd@b+2,7
  4119     0A6D  2A6F               	goto	u2491
  4120     0A6E  2A70               	goto	u2490
  4121     0A6F                     u2491:
  4122     0A6F  2A71               	goto	l2078
  4123     0A70                     u2490:
  4124     0A70                     l2076:
  4125     0A70  147A               	bsf	___fladd@bexp,0
  4126     0A71                     l2078:
  4127     0A71  087A               	movf	___fladd@bexp,w
  4128     0A72  1903               	btfsc	3,2
  4129     0A73  2A75               	goto	u2501
  4130     0A74  2A76               	goto	u2500
  4131     0A75                     u2501:
  4132     0A75  2A86               	goto	l2088
  4133     0A76                     u2500:
  4134     0A76                     l2080:
  4135     0A76  0A7A               	incf	___fladd@bexp,w
  4136     0A77  1D03               	btfss	3,2
  4137     0A78  2A7A               	goto	u2511
  4138     0A79  2A7B               	goto	u2510
  4139     0A7A                     u2511:
  4140     0A7A  2A83               	goto	l2084
  4141     0A7B                     u2510:
  4142     0A7B                     l2082:
  4143     0A7B  3000               	movlw	0
  4144     0A7C  00F3               	movwf	___fladd@b+3
  4145     0A7D  3000               	movlw	0
  4146     0A7E  00F2               	movwf	___fladd@b+2
  4147     0A7F  3000               	movlw	0
  4148     0A80  00F1               	movwf	___fladd@b+1
  4149     0A81  3000               	movlw	0
  4150     0A82  00F0               	movwf	___fladd@b
  4151     0A83                     l2084:
  4152     0A83  17F2               	bsf	___fladd@b+2,7
  4153     0A84                     l2086:
  4154     0A84  01F3               	clrf	___fladd@b+3
  4155     0A85  2A8E               	goto	l466
  4156     0A86                     l2088:
  4157     0A86  3000               	movlw	0
  4158     0A87  00F3               	movwf	___fladd@b+3
  4159     0A88  3000               	movlw	0
  4160     0A89  00F2               	movwf	___fladd@b+2
  4161     0A8A  3000               	movlw	0
  4162     0A8B  00F1               	movwf	___fladd@b+1
  4163     0A8C  3000               	movlw	0
  4164     0A8D  00F0               	movwf	___fladd@b
  4165     0A8E                     l466:
  4166     0A8E  0877               	movf	___fladd@a+3,w
  4167     0A8F  00F9               	movwf	___fladd@aexp
  4168     0A90                     l2090:
  4169     0A90  3080               	movlw	128
  4170     0A91  05F9               	andwf	___fladd@aexp,f
  4171     0A92                     l2092:
  4172     0A92  0879               	movf	___fladd@aexp,w
  4173     0A93  0678               	xorwf	___fladd@signs,w
  4174     0A94  1903               	skipnz
  4175     0A95  2A97               	goto	u2521
  4176     0A96  2A98               	goto	u2520
  4177     0A97                     u2521:
  4178     0A97  2A99               	goto	l2096
  4179     0A98                     u2520:
  4180     0A98                     l2094:
  4181     0A98  1778               	bsf	___fladd@signs,6
  4182     0A99                     l2096:
  4183     0A99  0877               	movf	___fladd@a+3,w
  4184     0A9A  00A0               	movwf	??___fladd
  4185     0A9B  0720               	addwf	??___fladd,w
  4186     0A9C  00F9               	movwf	___fladd@aexp
  4187     0A9D                     l2098:
  4188     0A9D  1FF6               	btfss	___fladd@a+2,7
  4189     0A9E  2AA0               	goto	u2531
  4190     0A9F  2AA1               	goto	u2530
  4191     0AA0                     u2531:
  4192     0AA0  2AA2               	goto	l2102
  4193     0AA1                     u2530:
  4194     0AA1                     l2100:
  4195     0AA1  1479               	bsf	___fladd@aexp,0
  4196     0AA2                     l2102:
  4197     0AA2  0879               	movf	___fladd@aexp,w
  4198     0AA3  1903               	btfsc	3,2
  4199     0AA4  2AA6               	goto	u2541
  4200     0AA5  2AA7               	goto	u2540
  4201     0AA6                     u2541:
  4202     0AA6  2AB7               	goto	l2112
  4203     0AA7                     u2540:
  4204     0AA7                     l2104:
  4205     0AA7  0A79               	incf	___fladd@aexp,w
  4206     0AA8  1D03               	btfss	3,2
  4207     0AA9  2AAB               	goto	u2551
  4208     0AAA  2AAC               	goto	u2550
  4209     0AAB                     u2551:
  4210     0AAB  2AB4               	goto	l2108
  4211     0AAC                     u2550:
  4212     0AAC                     l2106:
  4213     0AAC  3000               	movlw	0
  4214     0AAD  00F7               	movwf	___fladd@a+3
  4215     0AAE  3000               	movlw	0
  4216     0AAF  00F6               	movwf	___fladd@a+2
  4217     0AB0  3000               	movlw	0
  4218     0AB1  00F5               	movwf	___fladd@a+1
  4219     0AB2  3000               	movlw	0
  4220     0AB3  00F4               	movwf	___fladd@a
  4221     0AB4                     l2108:
  4222     0AB4  17F6               	bsf	___fladd@a+2,7
  4223     0AB5                     l2110:
  4224     0AB5  01F7               	clrf	___fladd@a+3
  4225     0AB6  2ABF               	goto	l471
  4226     0AB7                     l2112:
  4227     0AB7  3000               	movlw	0
  4228     0AB8  00F7               	movwf	___fladd@a+3
  4229     0AB9  3000               	movlw	0
  4230     0ABA  00F6               	movwf	___fladd@a+2
  4231     0ABB  3000               	movlw	0
  4232     0ABC  00F5               	movwf	___fladd@a+1
  4233     0ABD  3000               	movlw	0
  4234     0ABE  00F4               	movwf	___fladd@a
  4235     0ABF                     l471:
  4236     0ABF  087A               	movf	___fladd@bexp,w
  4237     0AC0  0279               	subwf	___fladd@aexp,w
  4238     0AC1  1803               	skipnc
  4239     0AC2  2AC4               	goto	u2561
  4240     0AC3  2AC5               	goto	u2560
  4241     0AC4                     u2561:
  4242     0AC4  2AE9               	goto	l2148
  4243     0AC5                     u2560:
  4244     0AC5                     l2114:
  4245     0AC5  1F78               	btfss	___fladd@signs,6
  4246     0AC6  2AC8               	goto	u2571
  4247     0AC7  2AC9               	goto	u2570
  4248     0AC8                     u2571:
  4249     0AC8  2ACB               	goto	l2118
  4250     0AC9                     u2570:
  4251     0AC9                     l2116:
  4252     0AC9  3080               	movlw	128
  4253     0ACA  06F8               	xorwf	___fladd@signs,f
  4254     0ACB                     l2118:
  4255     0ACB  087A               	movf	___fladd@bexp,w
  4256     0ACC  00FB               	movwf	___fladd@grs
  4257     0ACD                     l2120:
  4258     0ACD  0879               	movf	___fladd@aexp,w
  4259     0ACE  00FA               	movwf	___fladd@bexp
  4260     0ACF                     l2122:
  4261     0ACF  087B               	movf	___fladd@grs,w
  4262     0AD0  00F9               	movwf	___fladd@aexp
  4263     0AD1                     l2124:
  4264     0AD1  0870               	movf	___fladd@b,w
  4265     0AD2  00FB               	movwf	___fladd@grs
  4266     0AD3                     l2126:
  4267     0AD3  0874               	movf	___fladd@a,w
  4268     0AD4  00F0               	movwf	___fladd@b
  4269     0AD5                     l2128:
  4270     0AD5  087B               	movf	___fladd@grs,w
  4271     0AD6  00F4               	movwf	___fladd@a
  4272     0AD7                     l2130:
  4273     0AD7  0871               	movf	___fladd@b+1,w
  4274     0AD8  00FB               	movwf	___fladd@grs
  4275     0AD9                     l2132:
  4276     0AD9  0875               	movf	___fladd@a+1,w
  4277     0ADA  00F1               	movwf	___fladd@b+1
  4278     0ADB                     l2134:
  4279     0ADB  087B               	movf	___fladd@grs,w
  4280     0ADC  00F5               	movwf	___fladd@a+1
  4281     0ADD                     l2136:
  4282     0ADD  0872               	movf	___fladd@b+2,w
  4283     0ADE  00FB               	movwf	___fladd@grs
  4284     0ADF                     l2138:
  4285     0ADF  0876               	movf	___fladd@a+2,w
  4286     0AE0  00F2               	movwf	___fladd@b+2
  4287     0AE1                     l2140:
  4288     0AE1  087B               	movf	___fladd@grs,w
  4289     0AE2  00F6               	movwf	___fladd@a+2
  4290     0AE3                     l2142:
  4291     0AE3  0873               	movf	___fladd@b+3,w
  4292     0AE4  00FB               	movwf	___fladd@grs
  4293     0AE5                     l2144:
  4294     0AE5  0877               	movf	___fladd@a+3,w
  4295     0AE6  00F3               	movwf	___fladd@b+3
  4296     0AE7                     l2146:
  4297     0AE7  087B               	movf	___fladd@grs,w
  4298     0AE8  00F7               	movwf	___fladd@a+3
  4299     0AE9                     l2148:
  4300     0AE9  01FB               	clrf	___fladd@grs
  4301     0AEA                     l2150:
  4302     0AEA  0879               	movf	___fladd@aexp,w
  4303     0AEB  00A0               	movwf	??___fladd
  4304     0AEC  01A1               	clrf	??___fladd+1
  4305     0AED  0821               	movf	??___fladd+1,w
  4306     0AEE  00A3               	movwf	??___fladd+3
  4307     0AEF  087A               	movf	___fladd@bexp,w
  4308     0AF0  0220               	subwf	??___fladd,w
  4309     0AF1  00A2               	movwf	??___fladd+2
  4310     0AF2  1C03               	skipc
  4311     0AF3  03A3               	decf	??___fladd+3,f
  4312     0AF4  0823               	movf	??___fladd+3,w
  4313     0AF5  3A80               	xorlw	128
  4314     0AF6  00FF               	movwf	btemp+1
  4315     0AF7  3080               	movlw	128
  4316     0AF8  027F               	subwf	btemp+1,w
  4317     0AF9  1D03               	skipz
  4318     0AFA  2AFD               	goto	u2585
  4319     0AFB  301A               	movlw	26
  4320     0AFC  0222               	subwf	??___fladd+2,w
  4321     0AFD                     u2585:
  4322     0AFD  1C03               	skipc
  4323     0AFE  2B00               	goto	u2581
  4324     0AFF  2B01               	goto	u2580
  4325     0B00                     u2581:
  4326     0B00  2B38               	goto	l2166
  4327     0B01                     u2580:
  4328     0B01                     l2152:
  4329     0B01  0873               	movf	___fladd@b+3,w
  4330     0B02  0472               	iorwf	___fladd@b+2,w
  4331     0B03  0471               	iorwf	___fladd@b+1,w
  4332     0B04  0470               	iorwf	___fladd@b,w
  4333     0B05  1D03               	skipz
  4334     0B06  2B08               	goto	u2591
  4335     0B07  2B0A               	goto	u2590
  4336     0B08                     u2591:
  4337     0B08  3001               	movlw	1
  4338     0B09  2B0B               	goto	u2600
  4339     0B0A                     u2590:
  4340     0B0A  3000               	movlw	0
  4341     0B0B                     u2600:
  4342     0B0B  00FB               	movwf	___fladd@grs
  4343     0B0C  3000               	movlw	0
  4344     0B0D  00F3               	movwf	___fladd@b+3
  4345     0B0E  3000               	movlw	0
  4346     0B0F  00F2               	movwf	___fladd@b+2
  4347     0B10  3000               	movlw	0
  4348     0B11  00F1               	movwf	___fladd@b+1
  4349     0B12  3000               	movlw	0
  4350     0B13  00F0               	movwf	___fladd@b
  4351     0B14  0879               	movf	___fladd@aexp,w
  4352     0B15  00FA               	movwf	___fladd@bexp
  4353     0B16  2B3E               	goto	l475
  4354     0B17                     l477:
  4355     0B17  1C7B               	btfss	___fladd@grs,0
  4356     0B18  2B1A               	goto	u2611
  4357     0B19  2B1B               	goto	u2610
  4358     0B1A                     u2611:
  4359     0B1A  2B24               	goto	l2156
  4360     0B1B                     u2610:
  4361     0B1B                     l2154:
  4362     0B1B  087B               	movf	___fladd@grs,w
  4363     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  4364     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  4365     0B1E  00A0               	movwf	??___fladd
  4366     0B1F  1003               	clrc
  4367     0B20  0C20               	rrf	??___fladd,w
  4368     0B21  3801               	iorlw	1
  4369     0B22  00FB               	movwf	___fladd@grs
  4370     0B23  2B26               	goto	l2158
  4371     0B24                     l2156:
  4372     0B24  1003               	clrc
  4373     0B25  0CFB               	rrf	___fladd@grs,f
  4374     0B26                     l2158:
  4375     0B26  1C70               	btfss	___fladd@b,0
  4376     0B27  2B29               	goto	u2621
  4377     0B28  2B2A               	goto	u2620
  4378     0B29                     u2621:
  4379     0B29  2B2B               	goto	l2162
  4380     0B2A                     u2620:
  4381     0B2A                     l2160:
  4382     0B2A  17FB               	bsf	___fladd@grs,7
  4383     0B2B                     l2162:
  4384     0B2B  3001               	movlw	1
  4385     0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  4386     0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  4387     0B2E  00A0               	movwf	??___fladd
  4388     0B2F                     u2635:
  4389     0B2F  0D73               	rlf	___fladd@b+3,w
  4390     0B30  0CF3               	rrf	___fladd@b+3,f
  4391     0B31  0CF2               	rrf	___fladd@b+2,f
  4392     0B32  0CF1               	rrf	___fladd@b+1,f
  4393     0B33  0CF0               	rrf	___fladd@b,f
  4394     0B34  0BA0               	decfsz	??___fladd& (0+127),f
  4395     0B35  2B2F               	goto	u2635
  4396     0B36                     l2164:
  4397     0B36  3001               	movlw	1
  4398     0B37  07FA               	addwf	___fladd@bexp,f
  4399     0B38                     l2166:
  4400     0B38  0879               	movf	___fladd@aexp,w
  4401     0B39  027A               	subwf	___fladd@bexp,w
  4402     0B3A  1C03               	skipc
  4403     0B3B  2B3D               	goto	u2641
  4404     0B3C  2B3E               	goto	u2640
  4405     0B3D                     u2641:
  4406     0B3D  2B17               	goto	l477
  4407     0B3E                     u2640:
  4408     0B3E                     l475:
  4409     0B3E  1B78               	btfsc	___fladd@signs,6
  4410     0B3F  2B41               	goto	u2651
  4411     0B40  2B42               	goto	u2650
  4412     0B41                     u2651:
  4413     0B41  2B8D               	goto	l2192
  4414     0B42                     u2650:
  4415     0B42                     l2168:
  4416     0B42  087A               	movf	___fladd@bexp,w
  4417     0B43  1D03               	btfss	3,2
  4418     0B44  2B46               	goto	u2661
  4419     0B45  2B47               	goto	u2660
  4420     0B46                     u2661:
  4421     0B46  2B50               	goto	l2174
  4422     0B47                     u2660:
  4423     0B47                     l2170:
  4424     0B47  3000               	movlw	0
  4425     0B48  00F3               	movwf	?___fladd+3
  4426     0B49  3000               	movlw	0
  4427     0B4A  00F2               	movwf	?___fladd+2
  4428     0B4B  3000               	movlw	0
  4429     0B4C  00F1               	movwf	?___fladd+1
  4430     0B4D  3000               	movlw	0
  4431     0B4E  00F0               	movwf	?___fladd
  4432     0B4F  2CBD               	goto	l484
  4433     0B50                     l2174:
  4434     0B50  0874               	movf	___fladd@a,w
  4435     0B51  07F0               	addwf	___fladd@b,f
  4436     0B52  0875               	movf	___fladd@a+1,w
  4437     0B53  1103               	clrz
  4438     0B54  1803               	skipnc
  4439     0B55  3E01               	addlw	1
  4440     0B56  1903               	skipnz
  4441     0B57  2B59               	goto	u2671
  4442     0B58  07F1               	addwf	___fladd@b+1,f
  4443     0B59                     u2671:
  4444     0B59  0876               	movf	___fladd@a+2,w
  4445     0B5A  1103               	clrz
  4446     0B5B  1803               	skipnc
  4447     0B5C  3E01               	addlw	1
  4448     0B5D  1903               	skipnz
  4449     0B5E  2B60               	goto	u2672
  4450     0B5F  07F2               	addwf	___fladd@b+2,f
  4451     0B60                     u2672:
  4452     0B60  0877               	movf	___fladd@a+3,w
  4453     0B61  1103               	clrz
  4454     0B62  1803               	skipnc
  4455     0B63  3E01               	addlw	1
  4456     0B64  1903               	skipnz
  4457     0B65  2B67               	goto	u2673
  4458     0B66  07F3               	addwf	___fladd@b+3,f
  4459     0B67                     u2673:
  4460     0B67                     l2176:
  4461     0B67  1C73               	btfss	___fladd@b+3,0
  4462     0B68  2B6A               	goto	u2681
  4463     0B69  2B6B               	goto	u2680
  4464     0B6A                     u2681:
  4465     0B6A  2C45               	goto	l2228
  4466     0B6B                     u2680:
  4467     0B6B                     l2178:
  4468     0B6B  1C7B               	btfss	___fladd@grs,0
  4469     0B6C  2B6E               	goto	u2691
  4470     0B6D  2B6F               	goto	u2690
  4471     0B6E                     u2691:
  4472     0B6E  2B78               	goto	l2182
  4473     0B6F                     u2690:
  4474     0B6F                     l2180:
  4475     0B6F  087B               	movf	___fladd@grs,w
  4476     0B70  1283               	bcf	3,5	;RP0=0, select bank0
  4477     0B71  1303               	bcf	3,6	;RP1=0, select bank0
  4478     0B72  00A0               	movwf	??___fladd
  4479     0B73  1003               	clrc
  4480     0B74  0C20               	rrf	??___fladd,w
  4481     0B75  3801               	iorlw	1
  4482     0B76  00FB               	movwf	___fladd@grs
  4483     0B77  2B7A               	goto	l2184
  4484     0B78                     l2182:
  4485     0B78  1003               	clrc
  4486     0B79  0CFB               	rrf	___fladd@grs,f
  4487     0B7A                     l2184:
  4488     0B7A  1C70               	btfss	___fladd@b,0
  4489     0B7B  2B7D               	goto	u2701
  4490     0B7C  2B7E               	goto	u2700
  4491     0B7D                     u2701:
  4492     0B7D  2B7F               	goto	l2188
  4493     0B7E                     u2700:
  4494     0B7E                     l2186:
  4495     0B7E  17FB               	bsf	___fladd@grs,7
  4496     0B7F                     l2188:
  4497     0B7F  3001               	movlw	1
  4498     0B80  1283               	bcf	3,5	;RP0=0, select bank0
  4499     0B81  1303               	bcf	3,6	;RP1=0, select bank0
  4500     0B82  00A0               	movwf	??___fladd
  4501     0B83                     u2715:
  4502     0B83  0D73               	rlf	___fladd@b+3,w
  4503     0B84  0CF3               	rrf	___fladd@b+3,f
  4504     0B85  0CF2               	rrf	___fladd@b+2,f
  4505     0B86  0CF1               	rrf	___fladd@b+1,f
  4506     0B87  0CF0               	rrf	___fladd@b,f
  4507     0B88  0BA0               	decfsz	??___fladd& (0+127),f
  4508     0B89  2B83               	goto	u2715
  4509     0B8A                     l2190:
  4510     0B8A  3001               	movlw	1
  4511     0B8B  07FA               	addwf	___fladd@bexp,f
  4512     0B8C  2C45               	goto	l2228
  4513     0B8D                     l2192:
  4514     0B8D  0873               	movf	___fladd@b+3,w
  4515     0B8E  3A80               	xorlw	128
  4516     0B8F  00FF               	movwf	btemp+1
  4517     0B90  0877               	movf	___fladd@a+3,w
  4518     0B91  3A80               	xorlw	128
  4519     0B92  027F               	subwf	btemp+1,w
  4520     0B93  1D03               	skipz
  4521     0B94  2B9F               	goto	u2723
  4522     0B95  0876               	movf	___fladd@a+2,w
  4523     0B96  0272               	subwf	___fladd@b+2,w
  4524     0B97  1D03               	skipz
  4525     0B98  2B9F               	goto	u2723
  4526     0B99  0875               	movf	___fladd@a+1,w
  4527     0B9A  0271               	subwf	___fladd@b+1,w
  4528     0B9B  1D03               	skipz
  4529     0B9C  2B9F               	goto	u2723
  4530     0B9D  0874               	movf	___fladd@a,w
  4531     0B9E  0270               	subwf	___fladd@b,w
  4532     0B9F                     u2723:
  4533     0B9F  1803               	skipnc
  4534     0BA0  2BA2               	goto	u2721
  4535     0BA1  2BA3               	goto	u2720
  4536     0BA2                     u2721:
  4537     0BA2  2BFC               	goto	l2204
  4538     0BA3                     u2720:
  4539     0BA3                     l2194:
  4540     0BA3  30FF               	movlw	255
  4541     0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  4542     0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  4543     0BA6  00A0               	movwf	??___fladd
  4544     0BA7  30FF               	movlw	255
  4545     0BA8  00A1               	movwf	??___fladd+1
  4546     0BA9  30FF               	movlw	255
  4547     0BAA  00A2               	movwf	??___fladd+2
  4548     0BAB  30FF               	movlw	255
  4549     0BAC  00A3               	movwf	??___fladd+3
  4550     0BAD  0874               	movf	___fladd@a,w
  4551     0BAE  00A4               	movwf	??___fladd+4
  4552     0BAF  0875               	movf	___fladd@a+1,w
  4553     0BB0  00A5               	movwf	??___fladd+5
  4554     0BB1  0876               	movf	___fladd@a+2,w
  4555     0BB2  00A6               	movwf	??___fladd+6
  4556     0BB3  0877               	movf	___fladd@a+3,w
  4557     0BB4  00A7               	movwf	??___fladd+7
  4558     0BB5  0870               	movf	___fladd@b,w
  4559     0BB6  02A4               	subwf	??___fladd+4,f
  4560     0BB7  0871               	movf	___fladd@b+1,w
  4561     0BB8  1C03               	skipc
  4562     0BB9  0F71               	incfsz	___fladd@b+1,w
  4563     0BBA  2BBC               	goto	u2731
  4564     0BBB  2BBD               	goto	u2732
  4565     0BBC                     u2731:
  4566     0BBC  02A5               	subwf	??___fladd+5,f
  4567     0BBD                     u2732:
  4568     0BBD  0872               	movf	___fladd@b+2,w
  4569     0BBE  1C03               	skipc
  4570     0BBF  0F72               	incfsz	___fladd@b+2,w
  4571     0BC0  2BC2               	goto	u2733
  4572     0BC1  2BC3               	goto	u2734
  4573     0BC2                     u2733:
  4574     0BC2  02A6               	subwf	??___fladd+6,f
  4575     0BC3                     u2734:
  4576     0BC3  0873               	movf	___fladd@b+3,w
  4577     0BC4  1C03               	skipc
  4578     0BC5  0F73               	incfsz	___fladd@b+3,w
  4579     0BC6  2BC8               	goto	u2735
  4580     0BC7  2BC9               	goto	u2736
  4581     0BC8                     u2735:
  4582     0BC8  02A7               	subwf	??___fladd+7,f
  4583     0BC9                     u2736:
  4584     0BC9  0824               	movf	??___fladd+4,w
  4585     0BCA  07A0               	addwf	??___fladd,f
  4586     0BCB  0825               	movf	??___fladd+5,w
  4587     0BCC  1803               	skipnc
  4588     0BCD  0F25               	incfsz	??___fladd+5,w
  4589     0BCE  2BD0               	goto	u2740
  4590     0BCF  2BD1               	goto	u2741
  4591     0BD0                     u2740:
  4592     0BD0  07A1               	addwf	??___fladd+1,f
  4593     0BD1                     u2741:
  4594     0BD1  0826               	movf	??___fladd+6,w
  4595     0BD2  1803               	skipnc
  4596     0BD3  0F26               	incfsz	??___fladd+6,w
  4597     0BD4  2BD6               	goto	u2742
  4598     0BD5  2BD7               	goto	u2743
  4599     0BD6                     u2742:
  4600     0BD6  07A2               	addwf	??___fladd+2,f
  4601     0BD7                     u2743:
  4602     0BD7  0827               	movf	??___fladd+7,w
  4603     0BD8  1803               	skipnc
  4604     0BD9  0A27               	incf	??___fladd+7,w
  4605     0BDA  07A3               	addwf	??___fladd+3,f
  4606     0BDB  0823               	movf	??___fladd+3,w
  4607     0BDC  00F3               	movwf	___fladd@b+3
  4608     0BDD  0822               	movf	??___fladd+2,w
  4609     0BDE  00F2               	movwf	___fladd@b+2
  4610     0BDF  0821               	movf	??___fladd+1,w
  4611     0BE0  00F1               	movwf	___fladd@b+1
  4612     0BE1  0820               	movf	??___fladd,w
  4613     0BE2  00F0               	movwf	___fladd@b
  4614     0BE3                     l2196:
  4615     0BE3  3080               	movlw	128
  4616     0BE4  06F8               	xorwf	___fladd@signs,f
  4617     0BE5                     l2198:
  4618     0BE5  037B               	decf	___fladd@grs,w
  4619     0BE6  3AFF               	xorlw	255
  4620     0BE7  00FB               	movwf	___fladd@grs
  4621     0BE8                     l2200:
  4622     0BE8  087B               	movf	___fladd@grs,w
  4623     0BE9  1D03               	btfss	3,2
  4624     0BEA  2BEC               	goto	u2751
  4625     0BEB  2BED               	goto	u2750
  4626     0BEC                     u2751:
  4627     0BEC  2C0A               	goto	l492
  4628     0BED                     u2750:
  4629     0BED                     l2202:
  4630     0BED  3001               	movlw	1
  4631     0BEE  07F0               	addwf	___fladd@b,f
  4632     0BEF  3000               	movlw	0
  4633     0BF0  1803               	skipnc
  4634     0BF1  3001               	movlw	1
  4635     0BF2  07F1               	addwf	___fladd@b+1,f
  4636     0BF3  3000               	movlw	0
  4637     0BF4  1803               	skipnc
  4638     0BF5  3001               	movlw	1
  4639     0BF6  07F2               	addwf	___fladd@b+2,f
  4640     0BF7  3000               	movlw	0
  4641     0BF8  1803               	skipnc
  4642     0BF9  3001               	movlw	1
  4643     0BFA  07F3               	addwf	___fladd@b+3,f
  4644     0BFB  2C0A               	goto	l492
  4645     0BFC                     l2204:
  4646     0BFC  0874               	movf	___fladd@a,w
  4647     0BFD  02F0               	subwf	___fladd@b,f
  4648     0BFE  0875               	movf	___fladd@a+1,w
  4649     0BFF  1C03               	skipc
  4650     0C00  0F75               	incfsz	___fladd@a+1,w
  4651     0C01  02F1               	subwf	___fladd@b+1,f
  4652     0C02  0876               	movf	___fladd@a+2,w
  4653     0C03  1C03               	skipc
  4654     0C04  0F76               	incfsz	___fladd@a+2,w
  4655     0C05  02F2               	subwf	___fladd@b+2,f
  4656     0C06  0877               	movf	___fladd@a+3,w
  4657     0C07  1C03               	skipc
  4658     0C08  0F77               	incfsz	___fladd@a+3,w
  4659     0C09  02F3               	subwf	___fladd@b+3,f
  4660     0C0A                     l492:
  4661     0C0A  0873               	movf	___fladd@b+3,w
  4662     0C0B  0472               	iorwf	___fladd@b+2,w
  4663     0C0C  0471               	iorwf	___fladd@b+1,w
  4664     0C0D  0470               	iorwf	___fladd@b,w
  4665     0C0E  1D03               	skipz
  4666     0C0F  2C11               	goto	u2761
  4667     0C10  2C12               	goto	u2760
  4668     0C11                     u2761:
  4669     0C11  2C41               	goto	l2226
  4670     0C12                     u2760:
  4671     0C12                     l2206:
  4672     0C12  087B               	movf	___fladd@grs,w
  4673     0C13  1D03               	btfss	3,2
  4674     0C14  2C16               	goto	u2771
  4675     0C15  2C17               	goto	u2770
  4676     0C16                     u2771:
  4677     0C16  2C41               	goto	l2226
  4678     0C17                     u2770:
  4679     0C17                     l2208:
  4680     0C17  3000               	movlw	0
  4681     0C18  00F3               	movwf	?___fladd+3
  4682     0C19  3000               	movlw	0
  4683     0C1A  00F2               	movwf	?___fladd+2
  4684     0C1B  3000               	movlw	0
  4685     0C1C  00F1               	movwf	?___fladd+1
  4686     0C1D  3000               	movlw	0
  4687     0C1E  00F0               	movwf	?___fladd
  4688     0C1F  2CBD               	goto	l484
  4689     0C20                     l2212:
  4690     0C20  3001               	movlw	1
  4691     0C21  1283               	bcf	3,5	;RP0=0, select bank0
  4692     0C22  1303               	bcf	3,6	;RP1=0, select bank0
  4693     0C23  00A0               	movwf	??___fladd
  4694     0C24                     u2785:
  4695     0C24  1003               	clrc
  4696     0C25  0DF0               	rlf	___fladd@b,f
  4697     0C26  0DF1               	rlf	___fladd@b+1,f
  4698     0C27  0DF2               	rlf	___fladd@b+2,f
  4699     0C28  0DF3               	rlf	___fladd@b+3,f
  4700     0C29  0BA0               	decfsz	??___fladd,f
  4701     0C2A  2C24               	goto	u2785
  4702     0C2B                     l2214:
  4703     0C2B  1FFB               	btfss	___fladd@grs,7
  4704     0C2C  2C2E               	goto	u2791
  4705     0C2D  2C2F               	goto	u2790
  4706     0C2E                     u2791:
  4707     0C2E  2C30               	goto	l496
  4708     0C2F                     u2790:
  4709     0C2F                     l2216:
  4710     0C2F  1470               	bsf	___fladd@b,0
  4711     0C30                     l496:
  4712     0C30  1C7B               	btfss	___fladd@grs,0
  4713     0C31  2C33               	goto	u2801
  4714     0C32  2C34               	goto	u2800
  4715     0C33                     u2801:
  4716     0C33  2C38               	goto	l2220
  4717     0C34                     u2800:
  4718     0C34                     l2218:
  4719     0C34  1403               	setc
  4720     0C35  0D7B               	rlf	___fladd@grs,w
  4721     0C36  00FB               	movwf	___fladd@grs
  4722     0C37  2C3A               	goto	l2222
  4723     0C38                     l2220:
  4724     0C38  1003               	clrc
  4725     0C39  0DFB               	rlf	___fladd@grs,f
  4726     0C3A                     l2222:
  4727     0C3A  087A               	movf	___fladd@bexp,w
  4728     0C3B  1903               	btfsc	3,2
  4729     0C3C  2C3E               	goto	u2811
  4730     0C3D  2C3F               	goto	u2810
  4731     0C3E                     u2811:
  4732     0C3E  2C41               	goto	l2226
  4733     0C3F                     u2810:
  4734     0C3F                     l2224:
  4735     0C3F  3001               	movlw	1
  4736     0C40  02FA               	subwf	___fladd@bexp,f
  4737     0C41                     l2226:
  4738     0C41  1FF2               	btfss	___fladd@b+2,7
  4739     0C42  2C44               	goto	u2821
  4740     0C43  2C45               	goto	u2820
  4741     0C44                     u2821:
  4742     0C44  2C20               	goto	l2212
  4743     0C45                     u2820:
  4744     0C45                     l2228:
  4745     0C45  01F9               	clrf	___fladd@aexp
  4746     0C46                     l2230:
  4747     0C46  1FFB               	btfss	___fladd@grs,7
  4748     0C47  2C49               	goto	u2831
  4749     0C48  2C4A               	goto	u2830
  4750     0C49                     u2831:
  4751     0C49  2C58               	goto	l2238
  4752     0C4A                     u2830:
  4753     0C4A                     l2232:
  4754     0C4A  087B               	movf	___fladd@grs,w
  4755     0C4B  397F               	andlw	127
  4756     0C4C  1903               	btfsc	3,2
  4757     0C4D  2C4F               	goto	u2841
  4758     0C4E  2C50               	goto	u2840
  4759     0C4F                     u2841:
  4760     0C4F  2C53               	goto	l502
  4761     0C50                     u2840:
  4762     0C50                     l2234:
  4763     0C50  3001               	movlw	1
  4764     0C51  00F9               	movwf	___fladd@aexp
  4765     0C52  2C58               	goto	l2238
  4766     0C53                     l502:
  4767     0C53  1C70               	btfss	___fladd@b,0
  4768     0C54  2C56               	goto	u2851
  4769     0C55  2C57               	goto	u2850
  4770     0C56                     u2851:
  4771     0C56  2C58               	goto	l2238
  4772     0C57                     u2850:
  4773     0C57  2C50               	goto	l2234
  4774     0C58                     l2238:
  4775     0C58  0879               	movf	___fladd@aexp,w
  4776     0C59  1903               	btfsc	3,2
  4777     0C5A  2C5C               	goto	u2861
  4778     0C5B  2C5D               	goto	u2860
  4779     0C5C                     u2861:
  4780     0C5C  2C91               	goto	l505
  4781     0C5D                     u2860:
  4782     0C5D                     l2240:
  4783     0C5D  3001               	movlw	1
  4784     0C5E  07F0               	addwf	___fladd@b,f
  4785     0C5F  3000               	movlw	0
  4786     0C60  1803               	skipnc
  4787     0C61  3001               	movlw	1
  4788     0C62  07F1               	addwf	___fladd@b+1,f
  4789     0C63  3000               	movlw	0
  4790     0C64  1803               	skipnc
  4791     0C65  3001               	movlw	1
  4792     0C66  07F2               	addwf	___fladd@b+2,f
  4793     0C67  3000               	movlw	0
  4794     0C68  1803               	skipnc
  4795     0C69  3001               	movlw	1
  4796     0C6A  07F3               	addwf	___fladd@b+3,f
  4797     0C6B                     l2242:
  4798     0C6B  1C73               	btfss	___fladd@b+3,0
  4799     0C6C  2C6E               	goto	u2871
  4800     0C6D  2C6F               	goto	u2870
  4801     0C6E                     u2871:
  4802     0C6E  2C91               	goto	l505
  4803     0C6F                     u2870:
  4804     0C6F                     l2244:
  4805     0C6F  0870               	movf	___fladd@b,w
  4806     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  4807     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  4808     0C72  00A0               	movwf	??___fladd
  4809     0C73  0871               	movf	___fladd@b+1,w
  4810     0C74  00A1               	movwf	??___fladd+1
  4811     0C75  0872               	movf	___fladd@b+2,w
  4812     0C76  00A2               	movwf	??___fladd+2
  4813     0C77  0873               	movf	___fladd@b+3,w
  4814     0C78  00A3               	movwf	??___fladd+3
  4815     0C79  3001               	movlw	1
  4816     0C7A  00A4               	movwf	??___fladd+4
  4817     0C7B                     u2885:
  4818     0C7B  0D23               	rlf	??___fladd+3,w
  4819     0C7C  0CA3               	rrf	??___fladd+3,f
  4820     0C7D  0CA2               	rrf	??___fladd+2,f
  4821     0C7E  0CA1               	rrf	??___fladd+1,f
  4822     0C7F  0CA0               	rrf	??___fladd,f
  4823     0C80                     u2880:
  4824     0C80  0BA4               	decfsz	??___fladd+4,f
  4825     0C81  2C7B               	goto	u2885
  4826     0C82  0823               	movf	??___fladd+3,w
  4827     0C83  00F3               	movwf	___fladd@b+3
  4828     0C84  0822               	movf	??___fladd+2,w
  4829     0C85  00F2               	movwf	___fladd@b+2
  4830     0C86  0821               	movf	??___fladd+1,w
  4831     0C87  00F1               	movwf	___fladd@b+1
  4832     0C88  0820               	movf	??___fladd,w
  4833     0C89  00F0               	movwf	___fladd@b
  4834     0C8A  0A7A               	incf	___fladd@bexp,w
  4835     0C8B  1903               	btfsc	3,2
  4836     0C8C  2C8E               	goto	u2891
  4837     0C8D  2C8F               	goto	u2890
  4838     0C8E                     u2891:
  4839     0C8E  2C91               	goto	l505
  4840     0C8F                     u2890:
  4841     0C8F                     l2246:
  4842     0C8F  3001               	movlw	1
  4843     0C90  07FA               	addwf	___fladd@bexp,f
  4844     0C91                     l505:
  4845     0C91  0A7A               	incf	___fladd@bexp,w
  4846     0C92  1903               	btfsc	3,2
  4847     0C93  2C95               	goto	u2901
  4848     0C94  2C96               	goto	u2900
  4849     0C95                     u2901:
  4850     0C95  2C9B               	goto	l2250
  4851     0C96                     u2900:
  4852     0C96                     l2248:
  4853     0C96  087A               	movf	___fladd@bexp,w
  4854     0C97  1D03               	btfss	3,2
  4855     0C98  2C9A               	goto	u2911
  4856     0C99  2C9B               	goto	u2910
  4857     0C9A                     u2911:
  4858     0C9A  2CA9               	goto	l2256
  4859     0C9B                     u2910:
  4860     0C9B                     l2250:
  4861     0C9B  3000               	movlw	0
  4862     0C9C  00F3               	movwf	___fladd@b+3
  4863     0C9D  3000               	movlw	0
  4864     0C9E  00F2               	movwf	___fladd@b+2
  4865     0C9F  3000               	movlw	0
  4866     0CA0  00F1               	movwf	___fladd@b+1
  4867     0CA1  3000               	movlw	0
  4868     0CA2  00F0               	movwf	___fladd@b
  4869     0CA3                     l2252:
  4870     0CA3  087A               	movf	___fladd@bexp,w
  4871     0CA4  1D03               	btfss	3,2
  4872     0CA5  2CA7               	goto	u2921
  4873     0CA6  2CA8               	goto	u2920
  4874     0CA7                     u2921:
  4875     0CA7  2CA9               	goto	l2256
  4876     0CA8                     u2920:
  4877     0CA8                     l2254:
  4878     0CA8  01F8               	clrf	___fladd@signs
  4879     0CA9                     l2256:
  4880     0CA9  1C7A               	btfss	___fladd@bexp,0
  4881     0CAA  2CAC               	goto	u2931
  4882     0CAB  2CAD               	goto	u2930
  4883     0CAC                     u2931:
  4884     0CAC  2CAF               	goto	l2260
  4885     0CAD                     u2930:
  4886     0CAD                     l2258:
  4887     0CAD  17F2               	bsf	___fladd@b+2,7
  4888     0CAE  2CB1               	goto	l513
  4889     0CAF                     l2260:
  4890     0CAF  307F               	movlw	127
  4891     0CB0  05F2               	andwf	___fladd@b+2,f
  4892     0CB1                     l513:
  4893     0CB1  087A               	movf	___fladd@bexp,w
  4894     0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  4895     0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  4896     0CB4  00A0               	movwf	??___fladd
  4897     0CB5  1003               	clrc
  4898     0CB6  0C20               	rrf	??___fladd,w
  4899     0CB7  00F3               	movwf	___fladd@b+3
  4900     0CB8                     l2262:
  4901     0CB8  1FF8               	btfss	___fladd@signs,7
  4902     0CB9  2CBB               	goto	u2941
  4903     0CBA  2CBC               	goto	u2940
  4904     0CBB                     u2941:
  4905     0CBB  2CBD               	goto	l514
  4906     0CBC                     u2940:
  4907     0CBC                     l2264:
  4908     0CBC  17F3               	bsf	___fladd@b+3,7
  4909     0CBD                     l514:
  4910     0CBD                     l484:
  4911     0CBD  0008               	return
  4912     0CBE                     __end_of___fladd:
  4913                           
  4914                           	psect	text19
  4915     103A                     __ptext19:	
  4916 ;; *************** function ___flneg *****************
  4917 ;; Defined at:
  4918 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  f1              4    0[COMMON] unsigned char 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  4    0[COMMON] unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         4       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0
  4935 ;;      Totals:         4       0       0       0       0
  4936 ;;Total ram usage:        4 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_efgtoa
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945     103A                     ___flneg:	
  4946                           ;psect for function ___flneg
  4947                           
  4948     103A                     l2334:	
  4949                           ;incstack = 0
  4950                           ; Regs used in ___flneg: [wreg]
  4951                           
  4952     103A  0873               	movf	___flneg@f1+3,w
  4953     103B  0472               	iorwf	___flneg@f1+2,w
  4954     103C  0471               	iorwf	___flneg@f1+1,w
  4955     103D  0470               	iorwf	___flneg@f1,w
  4956     103E  1903               	skipnz
  4957     103F  2841               	goto	u3131
  4958     1040  2842               	goto	u3130
  4959     1041                     u3131:
  4960     1041  2844               	goto	l2338
  4961     1042                     u3130:
  4962     1042                     l2336:
  4963     1042  3080               	movlw	128
  4964     1043  06F3               	xorwf	___flneg@f1+3,f
  4965     1044                     l2338:
  4966     1044                     l360:
  4967     1044  0008               	return
  4968     1045                     __end_of___flneg:
  4969                           
  4970                           	psect	text20
  4971     0CBE                     __ptext20:	
  4972 ;; *************** function ___flmul *****************
  4973 ;; Defined at:
  4974 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  b               4    0[BANK0 ] unsigned char 
  4977 ;;  a               4    4[BANK0 ] unsigned char 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  prod            4   20[BANK0 ] struct .
  4980 ;;  grs             4   14[BANK0 ] unsigned long 
  4981 ;;  temp            2   24[BANK0 ] struct .
  4982 ;;  bexp            1   19[BANK0 ] unsigned char 
  4983 ;;  aexp            1   18[BANK0 ] unsigned char 
  4984 ;;  sign            1   13[BANK0 ] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  4    0[BANK0 ] unsigned char 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4994 ;;      Params:         0       8       0       0       0
  4995 ;;      Locals:         0      13       0       0       0
  4996 ;;      Temps:          0       5       0       0       0
  4997 ;;      Totals:         0      26       0       0       0
  4998 ;;Total ram usage:       26 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 1
  5001 ;; This function calls:
  5002 ;;		__Umul8_16
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;;		_efgtoa
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009     0CBE                     ___flmul:	
  5010                           ;psect for function ___flmul
  5011                           
  5012     0CBE                     l2528:	
  5013                           ;incstack = 0
  5014                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5015                           
  5016     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  5017     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  5018     0CC0  0823               	movf	___flmul@b+3,w
  5019     0CC1  00AD               	movwf	___flmul@sign
  5020     0CC2                     l2530:
  5021     0CC2  3080               	movlw	128
  5022     0CC3  05AD               	andwf	___flmul@sign,f
  5023     0CC4                     l2532:
  5024     0CC4  0823               	movf	___flmul@b+3,w
  5025     0CC5  00A8               	movwf	??___flmul
  5026     0CC6  0728               	addwf	??___flmul,w
  5027     0CC7  00B3               	movwf	___flmul@bexp
  5028     0CC8                     l2534:
  5029     0CC8  1FA2               	btfss	___flmul@b+2,7
  5030     0CC9  2CCB               	goto	u3541
  5031     0CCA  2CCC               	goto	u3540
  5032     0CCB                     u3541:
  5033     0CCB  2CCD               	goto	l2538
  5034     0CCC                     u3540:
  5035     0CCC                     l2536:
  5036     0CCC  1433               	bsf	___flmul@bexp,0
  5037     0CCD                     l2538:
  5038     0CCD  0833               	movf	___flmul@bexp,w
  5039     0CCE  1903               	btfsc	3,2
  5040     0CCF  2CD1               	goto	u3551
  5041     0CD0  2CD2               	goto	u3550
  5042     0CD1                     u3551:
  5043     0CD1  2CE1               	goto	l2546
  5044     0CD2                     u3550:
  5045     0CD2                     l2540:
  5046     0CD2  0A33               	incf	___flmul@bexp,w
  5047     0CD3  1D03               	btfss	3,2
  5048     0CD4  2CD6               	goto	u3561
  5049     0CD5  2CD7               	goto	u3560
  5050     0CD6                     u3561:
  5051     0CD6  2CDF               	goto	l2544
  5052     0CD7                     u3560:
  5053     0CD7                     l2542:
  5054     0CD7  3000               	movlw	0
  5055     0CD8  00A3               	movwf	___flmul@b+3
  5056     0CD9  3000               	movlw	0
  5057     0CDA  00A2               	movwf	___flmul@b+2
  5058     0CDB  3000               	movlw	0
  5059     0CDC  00A1               	movwf	___flmul@b+1
  5060     0CDD  3000               	movlw	0
  5061     0CDE  00A0               	movwf	___flmul@b
  5062     0CDF                     l2544:
  5063     0CDF  17A2               	bsf	___flmul@b+2,7
  5064     0CE0  2CE9               	goto	l2548
  5065     0CE1                     l2546:
  5066     0CE1  3000               	movlw	0
  5067     0CE2  00A3               	movwf	___flmul@b+3
  5068     0CE3  3000               	movlw	0
  5069     0CE4  00A2               	movwf	___flmul@b+2
  5070     0CE5  3000               	movlw	0
  5071     0CE6  00A1               	movwf	___flmul@b+1
  5072     0CE7  3000               	movlw	0
  5073     0CE8  00A0               	movwf	___flmul@b
  5074     0CE9                     l2548:
  5075     0CE9  0827               	movf	___flmul@a+3,w
  5076     0CEA  3980               	andlw	128
  5077     0CEB  06AD               	xorwf	___flmul@sign,f
  5078     0CEC                     l2550:
  5079     0CEC  0827               	movf	___flmul@a+3,w
  5080     0CED  00A8               	movwf	??___flmul
  5081     0CEE  0728               	addwf	??___flmul,w
  5082     0CEF  00B2               	movwf	___flmul@aexp
  5083     0CF0                     l2552:
  5084     0CF0  1FA6               	btfss	___flmul@a+2,7
  5085     0CF1  2CF3               	goto	u3571
  5086     0CF2  2CF4               	goto	u3570
  5087     0CF3                     u3571:
  5088     0CF3  2CF5               	goto	l2556
  5089     0CF4                     u3570:
  5090     0CF4                     l2554:
  5091     0CF4  1432               	bsf	___flmul@aexp,0
  5092     0CF5                     l2556:
  5093     0CF5  0832               	movf	___flmul@aexp,w
  5094     0CF6  1903               	btfsc	3,2
  5095     0CF7  2CF9               	goto	u3581
  5096     0CF8  2CFA               	goto	u3580
  5097     0CF9                     u3581:
  5098     0CF9  2D09               	goto	l2564
  5099     0CFA                     u3580:
  5100     0CFA                     l2558:
  5101     0CFA  0A32               	incf	___flmul@aexp,w
  5102     0CFB  1D03               	btfss	3,2
  5103     0CFC  2CFE               	goto	u3591
  5104     0CFD  2CFF               	goto	u3590
  5105     0CFE                     u3591:
  5106     0CFE  2D07               	goto	l2562
  5107     0CFF                     u3590:
  5108     0CFF                     l2560:
  5109     0CFF  3000               	movlw	0
  5110     0D00  00A7               	movwf	___flmul@a+3
  5111     0D01  3000               	movlw	0
  5112     0D02  00A6               	movwf	___flmul@a+2
  5113     0D03  3000               	movlw	0
  5114     0D04  00A5               	movwf	___flmul@a+1
  5115     0D05  3000               	movlw	0
  5116     0D06  00A4               	movwf	___flmul@a
  5117     0D07                     l2562:
  5118     0D07  17A6               	bsf	___flmul@a+2,7
  5119     0D08  2D11               	goto	l2566
  5120     0D09                     l2564:
  5121     0D09  3000               	movlw	0
  5122     0D0A  00A7               	movwf	___flmul@a+3
  5123     0D0B  3000               	movlw	0
  5124     0D0C  00A6               	movwf	___flmul@a+2
  5125     0D0D  3000               	movlw	0
  5126     0D0E  00A5               	movwf	___flmul@a+1
  5127     0D0F  3000               	movlw	0
  5128     0D10  00A4               	movwf	___flmul@a
  5129     0D11                     l2566:
  5130     0D11  0832               	movf	___flmul@aexp,w
  5131     0D12  1903               	btfsc	3,2
  5132     0D13  2D15               	goto	u3601
  5133     0D14  2D16               	goto	u3600
  5134     0D15                     u3601:
  5135     0D15  2D1B               	goto	l2570
  5136     0D16                     u3600:
  5137     0D16                     l2568:
  5138     0D16  0833               	movf	___flmul@bexp,w
  5139     0D17  1D03               	btfss	3,2
  5140     0D18  2D1A               	goto	u3611
  5141     0D19  2D1B               	goto	u3610
  5142     0D1A                     u3611:
  5143     0D1A  2D24               	goto	l2574
  5144     0D1B                     u3610:
  5145     0D1B                     l2570:
  5146     0D1B  3000               	movlw	0
  5147     0D1C  00A3               	movwf	?___flmul+3
  5148     0D1D  3000               	movlw	0
  5149     0D1E  00A2               	movwf	?___flmul+2
  5150     0D1F  3000               	movlw	0
  5151     0D20  00A1               	movwf	?___flmul+1
  5152     0D21  3000               	movlw	0
  5153     0D22  00A0               	movwf	?___flmul
  5154     0D23  2FFF               	goto	l567
  5155     0D24                     l2574:
  5156     0D24  0820               	movf	___flmul@b,w
  5157     0D25  00F0               	movwf	__Umul8_16@multiplicand
  5158     0D26  0826               	movf	___flmul@a+2,w
  5159     0D27  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5160     0D2C  0871               	movf	?__Umul8_16+1,w
  5161     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  5162     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  5163     0D2F  00B9               	movwf	___flmul@temp+1
  5164     0D30  0870               	movf	?__Umul8_16,w
  5165     0D31  00B8               	movwf	___flmul@temp
  5166     0D32                     l2576:
  5167     0D32  0838               	movf	___flmul@temp,w
  5168     0D33  00A8               	movwf	??___flmul
  5169     0D34  01A9               	clrf	??___flmul+1
  5170     0D35  01AA               	clrf	??___flmul+2
  5171     0D36  01AB               	clrf	??___flmul+3
  5172     0D37  082B               	movf	??___flmul+3,w
  5173     0D38  00B1               	movwf	___flmul@grs+3
  5174     0D39  082A               	movf	??___flmul+2,w
  5175     0D3A  00B0               	movwf	___flmul@grs+2
  5176     0D3B  0829               	movf	??___flmul+1,w
  5177     0D3C  00AF               	movwf	___flmul@grs+1
  5178     0D3D  0828               	movf	??___flmul,w
  5179     0D3E  00AE               	movwf	___flmul@grs
  5180     0D3F                     l2578:
  5181     0D3F  0839               	movf	___flmul@temp+1,w
  5182     0D40  00A8               	movwf	??___flmul
  5183     0D41  01A9               	clrf	??___flmul+1
  5184     0D42  01AA               	clrf	??___flmul+2
  5185     0D43  01AB               	clrf	??___flmul+3
  5186     0D44  082B               	movf	??___flmul+3,w
  5187     0D45  00B7               	movwf	___flmul@prod+3
  5188     0D46  082A               	movf	??___flmul+2,w
  5189     0D47  00B6               	movwf	___flmul@prod+2
  5190     0D48  0829               	movf	??___flmul+1,w
  5191     0D49  00B5               	movwf	___flmul@prod+1
  5192     0D4A  0828               	movf	??___flmul,w
  5193     0D4B  00B4               	movwf	___flmul@prod
  5194     0D4C  0821               	movf	___flmul@b+1,w
  5195     0D4D  00F0               	movwf	__Umul8_16@multiplicand
  5196     0D4E  0825               	movf	___flmul@a+1,w
  5197     0D4F  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5198     0D54  0871               	movf	?__Umul8_16+1,w
  5199     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  5200     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  5201     0D57  00B9               	movwf	___flmul@temp+1
  5202     0D58  0870               	movf	?__Umul8_16,w
  5203     0D59  00B8               	movwf	___flmul@temp
  5204     0D5A                     l2580:
  5205     0D5A  0838               	movf	___flmul@temp,w
  5206     0D5B  00A8               	movwf	??___flmul
  5207     0D5C  01A9               	clrf	??___flmul+1
  5208     0D5D  01AA               	clrf	??___flmul+2
  5209     0D5E  01AB               	clrf	??___flmul+3
  5210     0D5F  0828               	movf	??___flmul,w
  5211     0D60  07AE               	addwf	___flmul@grs,f
  5212     0D61  0829               	movf	??___flmul+1,w
  5213     0D62  1103               	clrz
  5214     0D63  1803               	skipnc
  5215     0D64  3E01               	addlw	1
  5216     0D65  1903               	skipnz
  5217     0D66  2D68               	goto	u3621
  5218     0D67  07AF               	addwf	___flmul@grs+1,f
  5219     0D68                     u3621:
  5220     0D68  082A               	movf	??___flmul+2,w
  5221     0D69  1103               	clrz
  5222     0D6A  1803               	skipnc
  5223     0D6B  3E01               	addlw	1
  5224     0D6C  1903               	skipnz
  5225     0D6D  2D6F               	goto	u3622
  5226     0D6E  07B0               	addwf	___flmul@grs+2,f
  5227     0D6F                     u3622:
  5228     0D6F  082B               	movf	??___flmul+3,w
  5229     0D70  1103               	clrz
  5230     0D71  1803               	skipnc
  5231     0D72  3E01               	addlw	1
  5232     0D73  1903               	skipnz
  5233     0D74  2D76               	goto	u3623
  5234     0D75  07B1               	addwf	___flmul@grs+3,f
  5235     0D76                     u3623:
  5236     0D76                     l2582:
  5237     0D76  0839               	movf	___flmul@temp+1,w
  5238     0D77  00A8               	movwf	??___flmul
  5239     0D78  01A9               	clrf	??___flmul+1
  5240     0D79  01AA               	clrf	??___flmul+2
  5241     0D7A  01AB               	clrf	??___flmul+3
  5242     0D7B  0828               	movf	??___flmul,w
  5243     0D7C  07B4               	addwf	___flmul@prod,f
  5244     0D7D  0829               	movf	??___flmul+1,w
  5245     0D7E  1103               	clrz
  5246     0D7F  1803               	skipnc
  5247     0D80  3E01               	addlw	1
  5248     0D81  1903               	skipnz
  5249     0D82  2D84               	goto	u3631
  5250     0D83  07B5               	addwf	___flmul@prod+1,f
  5251     0D84                     u3631:
  5252     0D84  082A               	movf	??___flmul+2,w
  5253     0D85  1103               	clrz
  5254     0D86  1803               	skipnc
  5255     0D87  3E01               	addlw	1
  5256     0D88  1903               	skipnz
  5257     0D89  2D8B               	goto	u3632
  5258     0D8A  07B6               	addwf	___flmul@prod+2,f
  5259     0D8B                     u3632:
  5260     0D8B  082B               	movf	??___flmul+3,w
  5261     0D8C  1103               	clrz
  5262     0D8D  1803               	skipnc
  5263     0D8E  3E01               	addlw	1
  5264     0D8F  1903               	skipnz
  5265     0D90  2D92               	goto	u3633
  5266     0D91  07B7               	addwf	___flmul@prod+3,f
  5267     0D92                     u3633:
  5268     0D92  0822               	movf	___flmul@b+2,w
  5269     0D93  00F0               	movwf	__Umul8_16@multiplicand
  5270     0D94  0824               	movf	___flmul@a,w
  5271     0D95  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5272     0D9A  0871               	movf	?__Umul8_16+1,w
  5273     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  5274     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  5275     0D9D  00B9               	movwf	___flmul@temp+1
  5276     0D9E  0870               	movf	?__Umul8_16,w
  5277     0D9F  00B8               	movwf	___flmul@temp
  5278     0DA0                     l2584:
  5279     0DA0  0838               	movf	___flmul@temp,w
  5280     0DA1  00A8               	movwf	??___flmul
  5281     0DA2  01A9               	clrf	??___flmul+1
  5282     0DA3  01AA               	clrf	??___flmul+2
  5283     0DA4  01AB               	clrf	??___flmul+3
  5284     0DA5  0828               	movf	??___flmul,w
  5285     0DA6  07AE               	addwf	___flmul@grs,f
  5286     0DA7  0829               	movf	??___flmul+1,w
  5287     0DA8  1103               	clrz
  5288     0DA9  1803               	skipnc
  5289     0DAA  3E01               	addlw	1
  5290     0DAB  1903               	skipnz
  5291     0DAC  2DAE               	goto	u3641
  5292     0DAD  07AF               	addwf	___flmul@grs+1,f
  5293     0DAE                     u3641:
  5294     0DAE  082A               	movf	??___flmul+2,w
  5295     0DAF  1103               	clrz
  5296     0DB0  1803               	skipnc
  5297     0DB1  3E01               	addlw	1
  5298     0DB2  1903               	skipnz
  5299     0DB3  2DB5               	goto	u3642
  5300     0DB4  07B0               	addwf	___flmul@grs+2,f
  5301     0DB5                     u3642:
  5302     0DB5  082B               	movf	??___flmul+3,w
  5303     0DB6  1103               	clrz
  5304     0DB7  1803               	skipnc
  5305     0DB8  3E01               	addlw	1
  5306     0DB9  1903               	skipnz
  5307     0DBA  2DBC               	goto	u3643
  5308     0DBB  07B1               	addwf	___flmul@grs+3,f
  5309     0DBC                     u3643:
  5310     0DBC                     l2586:
  5311     0DBC  0839               	movf	___flmul@temp+1,w
  5312     0DBD  00A8               	movwf	??___flmul
  5313     0DBE  01A9               	clrf	??___flmul+1
  5314     0DBF  01AA               	clrf	??___flmul+2
  5315     0DC0  01AB               	clrf	??___flmul+3
  5316     0DC1  0828               	movf	??___flmul,w
  5317     0DC2  07B4               	addwf	___flmul@prod,f
  5318     0DC3  0829               	movf	??___flmul+1,w
  5319     0DC4  1103               	clrz
  5320     0DC5  1803               	skipnc
  5321     0DC6  3E01               	addlw	1
  5322     0DC7  1903               	skipnz
  5323     0DC8  2DCA               	goto	u3651
  5324     0DC9  07B5               	addwf	___flmul@prod+1,f
  5325     0DCA                     u3651:
  5326     0DCA  082A               	movf	??___flmul+2,w
  5327     0DCB  1103               	clrz
  5328     0DCC  1803               	skipnc
  5329     0DCD  3E01               	addlw	1
  5330     0DCE  1903               	skipnz
  5331     0DCF  2DD1               	goto	u3652
  5332     0DD0  07B6               	addwf	___flmul@prod+2,f
  5333     0DD1                     u3652:
  5334     0DD1  082B               	movf	??___flmul+3,w
  5335     0DD2  1103               	clrz
  5336     0DD3  1803               	skipnc
  5337     0DD4  3E01               	addlw	1
  5338     0DD5  1903               	skipnz
  5339     0DD6  2DD8               	goto	u3653
  5340     0DD7  07B7               	addwf	___flmul@prod+3,f
  5341     0DD8                     u3653:
  5342     0DD8                     l2588:
  5343     0DD8  3008               	movlw	8
  5344     0DD9  00A8               	movwf	??___flmul
  5345     0DDA                     u3665:
  5346     0DDA  1003               	clrc
  5347     0DDB  0DAE               	rlf	___flmul@grs,f
  5348     0DDC  0DAF               	rlf	___flmul@grs+1,f
  5349     0DDD  0DB0               	rlf	___flmul@grs+2,f
  5350     0DDE  0DB1               	rlf	___flmul@grs+3,f
  5351     0DDF  0BA8               	decfsz	??___flmul,f
  5352     0DE0  2DDA               	goto	u3665
  5353     0DE1                     l2590:
  5354     0DE1  0821               	movf	___flmul@b+1,w
  5355     0DE2  00F0               	movwf	__Umul8_16@multiplicand
  5356     0DE3  0824               	movf	___flmul@a,w
  5357     0DE4  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5358     0DE9  0871               	movf	?__Umul8_16+1,w
  5359     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  5360     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  5361     0DEC  00B9               	movwf	___flmul@temp+1
  5362     0DED  0870               	movf	?__Umul8_16,w
  5363     0DEE  00B8               	movwf	___flmul@temp
  5364     0DEF                     l2592:
  5365     0DEF  0838               	movf	___flmul@temp,w
  5366     0DF0  00A8               	movwf	??___flmul
  5367     0DF1  0839               	movf	___flmul@temp+1,w
  5368     0DF2  00A9               	movwf	??___flmul+1
  5369     0DF3  01AA               	clrf	??___flmul+2
  5370     0DF4  01AB               	clrf	??___flmul+3
  5371     0DF5  0828               	movf	??___flmul,w
  5372     0DF6  07AE               	addwf	___flmul@grs,f
  5373     0DF7  0829               	movf	??___flmul+1,w
  5374     0DF8  1103               	clrz
  5375     0DF9  1803               	skipnc
  5376     0DFA  3E01               	addlw	1
  5377     0DFB  1903               	skipnz
  5378     0DFC  2DFE               	goto	u3671
  5379     0DFD  07AF               	addwf	___flmul@grs+1,f
  5380     0DFE                     u3671:
  5381     0DFE  082A               	movf	??___flmul+2,w
  5382     0DFF  1103               	clrz
  5383     0E00  1803               	skipnc
  5384     0E01  3E01               	addlw	1
  5385     0E02  1903               	skipnz
  5386     0E03  2E05               	goto	u3672
  5387     0E04  07B0               	addwf	___flmul@grs+2,f
  5388     0E05                     u3672:
  5389     0E05  082B               	movf	??___flmul+3,w
  5390     0E06  1103               	clrz
  5391     0E07  1803               	skipnc
  5392     0E08  3E01               	addlw	1
  5393     0E09  1903               	skipnz
  5394     0E0A  2E0C               	goto	u3673
  5395     0E0B  07B1               	addwf	___flmul@grs+3,f
  5396     0E0C                     u3673:
  5397     0E0C                     l2594:
  5398     0E0C  0820               	movf	___flmul@b,w
  5399     0E0D  00F0               	movwf	__Umul8_16@multiplicand
  5400     0E0E  0825               	movf	___flmul@a+1,w
  5401     0E0F  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5402     0E14  0871               	movf	?__Umul8_16+1,w
  5403     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  5404     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  5405     0E17  00B9               	movwf	___flmul@temp+1
  5406     0E18  0870               	movf	?__Umul8_16,w
  5407     0E19  00B8               	movwf	___flmul@temp
  5408     0E1A                     l2596:
  5409     0E1A  0838               	movf	___flmul@temp,w
  5410     0E1B  00A8               	movwf	??___flmul
  5411     0E1C  0839               	movf	___flmul@temp+1,w
  5412     0E1D  00A9               	movwf	??___flmul+1
  5413     0E1E  01AA               	clrf	??___flmul+2
  5414     0E1F  01AB               	clrf	??___flmul+3
  5415     0E20  0828               	movf	??___flmul,w
  5416     0E21  07AE               	addwf	___flmul@grs,f
  5417     0E22  0829               	movf	??___flmul+1,w
  5418     0E23  1103               	clrz
  5419     0E24  1803               	skipnc
  5420     0E25  3E01               	addlw	1
  5421     0E26  1903               	skipnz
  5422     0E27  2E29               	goto	u3681
  5423     0E28  07AF               	addwf	___flmul@grs+1,f
  5424     0E29                     u3681:
  5425     0E29  082A               	movf	??___flmul+2,w
  5426     0E2A  1103               	clrz
  5427     0E2B  1803               	skipnc
  5428     0E2C  3E01               	addlw	1
  5429     0E2D  1903               	skipnz
  5430     0E2E  2E30               	goto	u3682
  5431     0E2F  07B0               	addwf	___flmul@grs+2,f
  5432     0E30                     u3682:
  5433     0E30  082B               	movf	??___flmul+3,w
  5434     0E31  1103               	clrz
  5435     0E32  1803               	skipnc
  5436     0E33  3E01               	addlw	1
  5437     0E34  1903               	skipnz
  5438     0E35  2E37               	goto	u3683
  5439     0E36  07B1               	addwf	___flmul@grs+3,f
  5440     0E37                     u3683:
  5441     0E37                     l2598:
  5442     0E37  3008               	movlw	8
  5443     0E38  00A8               	movwf	??___flmul
  5444     0E39                     u3695:
  5445     0E39  1003               	clrc
  5446     0E3A  0DAE               	rlf	___flmul@grs,f
  5447     0E3B  0DAF               	rlf	___flmul@grs+1,f
  5448     0E3C  0DB0               	rlf	___flmul@grs+2,f
  5449     0E3D  0DB1               	rlf	___flmul@grs+3,f
  5450     0E3E  0BA8               	decfsz	??___flmul,f
  5451     0E3F  2E39               	goto	u3695
  5452     0E40  0820               	movf	___flmul@b,w
  5453     0E41  00F0               	movwf	__Umul8_16@multiplicand
  5454     0E42  0824               	movf	___flmul@a,w
  5455     0E43  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5456     0E48  0871               	movf	?__Umul8_16+1,w
  5457     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  5458     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  5459     0E4B  00B9               	movwf	___flmul@temp+1
  5460     0E4C  0870               	movf	?__Umul8_16,w
  5461     0E4D  00B8               	movwf	___flmul@temp
  5462     0E4E                     l2600:
  5463     0E4E  0838               	movf	___flmul@temp,w
  5464     0E4F  00A8               	movwf	??___flmul
  5465     0E50  0839               	movf	___flmul@temp+1,w
  5466     0E51  00A9               	movwf	??___flmul+1
  5467     0E52  01AA               	clrf	??___flmul+2
  5468     0E53  01AB               	clrf	??___flmul+3
  5469     0E54  0828               	movf	??___flmul,w
  5470     0E55  07AE               	addwf	___flmul@grs,f
  5471     0E56  0829               	movf	??___flmul+1,w
  5472     0E57  1103               	clrz
  5473     0E58  1803               	skipnc
  5474     0E59  3E01               	addlw	1
  5475     0E5A  1903               	skipnz
  5476     0E5B  2E5D               	goto	u3701
  5477     0E5C  07AF               	addwf	___flmul@grs+1,f
  5478     0E5D                     u3701:
  5479     0E5D  082A               	movf	??___flmul+2,w
  5480     0E5E  1103               	clrz
  5481     0E5F  1803               	skipnc
  5482     0E60  3E01               	addlw	1
  5483     0E61  1903               	skipnz
  5484     0E62  2E64               	goto	u3702
  5485     0E63  07B0               	addwf	___flmul@grs+2,f
  5486     0E64                     u3702:
  5487     0E64  082B               	movf	??___flmul+3,w
  5488     0E65  1103               	clrz
  5489     0E66  1803               	skipnc
  5490     0E67  3E01               	addlw	1
  5491     0E68  1903               	skipnz
  5492     0E69  2E6B               	goto	u3703
  5493     0E6A  07B1               	addwf	___flmul@grs+3,f
  5494     0E6B                     u3703:
  5495     0E6B                     l2602:
  5496     0E6B  0821               	movf	___flmul@b+1,w
  5497     0E6C  00F0               	movwf	__Umul8_16@multiplicand
  5498     0E6D  0826               	movf	___flmul@a+2,w
  5499     0E6E  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5500     0E73  0871               	movf	?__Umul8_16+1,w
  5501     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  5502     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  5503     0E76  00B9               	movwf	___flmul@temp+1
  5504     0E77  0870               	movf	?__Umul8_16,w
  5505     0E78  00B8               	movwf	___flmul@temp
  5506     0E79  0838               	movf	___flmul@temp,w
  5507     0E7A  00A8               	movwf	??___flmul
  5508     0E7B  0839               	movf	___flmul@temp+1,w
  5509     0E7C  00A9               	movwf	??___flmul+1
  5510     0E7D  01AA               	clrf	??___flmul+2
  5511     0E7E  01AB               	clrf	??___flmul+3
  5512     0E7F  0828               	movf	??___flmul,w
  5513     0E80  07B4               	addwf	___flmul@prod,f
  5514     0E81  0829               	movf	??___flmul+1,w
  5515     0E82  1103               	clrz
  5516     0E83  1803               	skipnc
  5517     0E84  3E01               	addlw	1
  5518     0E85  1903               	skipnz
  5519     0E86  2E88               	goto	u3711
  5520     0E87  07B5               	addwf	___flmul@prod+1,f
  5521     0E88                     u3711:
  5522     0E88  082A               	movf	??___flmul+2,w
  5523     0E89  1103               	clrz
  5524     0E8A  1803               	skipnc
  5525     0E8B  3E01               	addlw	1
  5526     0E8C  1903               	skipnz
  5527     0E8D  2E8F               	goto	u3712
  5528     0E8E  07B6               	addwf	___flmul@prod+2,f
  5529     0E8F                     u3712:
  5530     0E8F  082B               	movf	??___flmul+3,w
  5531     0E90  1103               	clrz
  5532     0E91  1803               	skipnc
  5533     0E92  3E01               	addlw	1
  5534     0E93  1903               	skipnz
  5535     0E94  2E96               	goto	u3713
  5536     0E95  07B7               	addwf	___flmul@prod+3,f
  5537     0E96                     u3713:
  5538     0E96                     l2604:
  5539     0E96  0822               	movf	___flmul@b+2,w
  5540     0E97  00F0               	movwf	__Umul8_16@multiplicand
  5541     0E98  0825               	movf	___flmul@a+1,w
  5542     0E99  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5543     0E9E  0871               	movf	?__Umul8_16+1,w
  5544     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  5545     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  5546     0EA1  00B9               	movwf	___flmul@temp+1
  5547     0EA2  0870               	movf	?__Umul8_16,w
  5548     0EA3  00B8               	movwf	___flmul@temp
  5549     0EA4                     l2606:
  5550     0EA4  0838               	movf	___flmul@temp,w
  5551     0EA5  00A8               	movwf	??___flmul
  5552     0EA6  0839               	movf	___flmul@temp+1,w
  5553     0EA7  00A9               	movwf	??___flmul+1
  5554     0EA8  01AA               	clrf	??___flmul+2
  5555     0EA9  01AB               	clrf	??___flmul+3
  5556     0EAA  0828               	movf	??___flmul,w
  5557     0EAB  07B4               	addwf	___flmul@prod,f
  5558     0EAC  0829               	movf	??___flmul+1,w
  5559     0EAD  1103               	clrz
  5560     0EAE  1803               	skipnc
  5561     0EAF  3E01               	addlw	1
  5562     0EB0  1903               	skipnz
  5563     0EB1  2EB3               	goto	u3721
  5564     0EB2  07B5               	addwf	___flmul@prod+1,f
  5565     0EB3                     u3721:
  5566     0EB3  082A               	movf	??___flmul+2,w
  5567     0EB4  1103               	clrz
  5568     0EB5  1803               	skipnc
  5569     0EB6  3E01               	addlw	1
  5570     0EB7  1903               	skipnz
  5571     0EB8  2EBA               	goto	u3722
  5572     0EB9  07B6               	addwf	___flmul@prod+2,f
  5573     0EBA                     u3722:
  5574     0EBA  082B               	movf	??___flmul+3,w
  5575     0EBB  1103               	clrz
  5576     0EBC  1803               	skipnc
  5577     0EBD  3E01               	addlw	1
  5578     0EBE  1903               	skipnz
  5579     0EBF  2EC1               	goto	u3723
  5580     0EC0  07B7               	addwf	___flmul@prod+3,f
  5581     0EC1                     u3723:
  5582     0EC1  0822               	movf	___flmul@b+2,w
  5583     0EC2  00F0               	movwf	__Umul8_16@multiplicand
  5584     0EC3  0826               	movf	___flmul@a+2,w
  5585     0EC4  160A  158A  2788  120A  158A  	fcall	__Umul8_16
  5586     0EC9  0871               	movf	?__Umul8_16+1,w
  5587     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  5588     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  5589     0ECC  00B9               	movwf	___flmul@temp+1
  5590     0ECD  0870               	movf	?__Umul8_16,w
  5591     0ECE  00B8               	movwf	___flmul@temp
  5592     0ECF                     l2608:
  5593     0ECF  0838               	movf	___flmul@temp,w
  5594     0ED0  00A8               	movwf	??___flmul
  5595     0ED1  0839               	movf	___flmul@temp+1,w
  5596     0ED2  00A9               	movwf	??___flmul+1
  5597     0ED3  01AA               	clrf	??___flmul+2
  5598     0ED4  01AB               	clrf	??___flmul+3
  5599     0ED5  3008               	movlw	8
  5600     0ED6                     u3735:
  5601     0ED6  1003               	clrc
  5602     0ED7  0DA8               	rlf	??___flmul,f
  5603     0ED8  0DA9               	rlf	??___flmul+1,f
  5604     0ED9  0DAA               	rlf	??___flmul+2,f
  5605     0EDA  0DAB               	rlf	??___flmul+3,f
  5606     0EDB                     u3730:
  5607     0EDB  3EFF               	addlw	-1
  5608     0EDC  1D03               	skipz
  5609     0EDD  2ED6               	goto	u3735
  5610     0EDE  0828               	movf	??___flmul,w
  5611     0EDF  07B4               	addwf	___flmul@prod,f
  5612     0EE0  0829               	movf	??___flmul+1,w
  5613     0EE1  1103               	clrz
  5614     0EE2  1803               	skipnc
  5615     0EE3  3E01               	addlw	1
  5616     0EE4  1903               	skipnz
  5617     0EE5  2EE7               	goto	u3741
  5618     0EE6  07B5               	addwf	___flmul@prod+1,f
  5619     0EE7                     u3741:
  5620     0EE7  082A               	movf	??___flmul+2,w
  5621     0EE8  1103               	clrz
  5622     0EE9  1803               	skipnc
  5623     0EEA  3E01               	addlw	1
  5624     0EEB  1903               	skipnz
  5625     0EEC  2EEE               	goto	u3742
  5626     0EED  07B6               	addwf	___flmul@prod+2,f
  5627     0EEE                     u3742:
  5628     0EEE  082B               	movf	??___flmul+3,w
  5629     0EEF  1103               	clrz
  5630     0EF0  1803               	skipnc
  5631     0EF1  3E01               	addlw	1
  5632     0EF2  1903               	skipnz
  5633     0EF3  2EF5               	goto	u3743
  5634     0EF4  07B7               	addwf	___flmul@prod+3,f
  5635     0EF5                     u3743:
  5636     0EF5                     l2610:
  5637     0EF5  082E               	movf	___flmul@grs,w
  5638     0EF6  00A8               	movwf	??___flmul
  5639     0EF7  082F               	movf	___flmul@grs+1,w
  5640     0EF8  00A9               	movwf	??___flmul+1
  5641     0EF9  0830               	movf	___flmul@grs+2,w
  5642     0EFA  00AA               	movwf	??___flmul+2
  5643     0EFB  0831               	movf	___flmul@grs+3,w
  5644     0EFC  00AB               	movwf	??___flmul+3
  5645     0EFD  3018               	movlw	24
  5646     0EFE                     u3755:
  5647     0EFE  1003               	clrc
  5648     0EFF  0CAB               	rrf	??___flmul+3,f
  5649     0F00  0CAA               	rrf	??___flmul+2,f
  5650     0F01  0CA9               	rrf	??___flmul+1,f
  5651     0F02  0CA8               	rrf	??___flmul,f
  5652     0F03                     u3750:
  5653     0F03  3EFF               	addlw	-1
  5654     0F04  1D03               	skipz
  5655     0F05  2EFE               	goto	u3755
  5656     0F06  0828               	movf	??___flmul,w
  5657     0F07  07B4               	addwf	___flmul@prod,f
  5658     0F08  0829               	movf	??___flmul+1,w
  5659     0F09  1103               	clrz
  5660     0F0A  1803               	skipnc
  5661     0F0B  3E01               	addlw	1
  5662     0F0C  1903               	skipnz
  5663     0F0D  2F0F               	goto	u3761
  5664     0F0E  07B5               	addwf	___flmul@prod+1,f
  5665     0F0F                     u3761:
  5666     0F0F  082A               	movf	??___flmul+2,w
  5667     0F10  1103               	clrz
  5668     0F11  1803               	skipnc
  5669     0F12  3E01               	addlw	1
  5670     0F13  1903               	skipnz
  5671     0F14  2F16               	goto	u3762
  5672     0F15  07B6               	addwf	___flmul@prod+2,f
  5673     0F16                     u3762:
  5674     0F16  082B               	movf	??___flmul+3,w
  5675     0F17  1103               	clrz
  5676     0F18  1803               	skipnc
  5677     0F19  3E01               	addlw	1
  5678     0F1A  1903               	skipnz
  5679     0F1B  2F1D               	goto	u3763
  5680     0F1C  07B7               	addwf	___flmul@prod+3,f
  5681     0F1D                     u3763:
  5682     0F1D                     l2612:
  5683     0F1D  3008               	movlw	8
  5684     0F1E  00A8               	movwf	??___flmul
  5685     0F1F                     u3775:
  5686     0F1F  1003               	clrc
  5687     0F20  0DAE               	rlf	___flmul@grs,f
  5688     0F21  0DAF               	rlf	___flmul@grs+1,f
  5689     0F22  0DB0               	rlf	___flmul@grs+2,f
  5690     0F23  0DB1               	rlf	___flmul@grs+3,f
  5691     0F24  0BA8               	decfsz	??___flmul,f
  5692     0F25  2F1F               	goto	u3775
  5693     0F26                     l2614:
  5694     0F26  0833               	movf	___flmul@bexp,w
  5695     0F27  0732               	addwf	___flmul@aexp,w
  5696     0F28  00A8               	movwf	??___flmul
  5697     0F29  01A9               	clrf	??___flmul+1
  5698     0F2A  0DA9               	rlf	??___flmul+1,f
  5699     0F2B  0828               	movf	??___flmul,w
  5700     0F2C  3E82               	addlw	130
  5701     0F2D  00B8               	movwf	___flmul@temp
  5702     0F2E  0829               	movf	??___flmul+1,w
  5703     0F2F  1803               	skipnc
  5704     0F30  3E01               	addlw	1
  5705     0F31  3EFF               	addlw	255
  5706     0F32  00B9               	movwf	___flmul@temp+1
  5707     0F33  2F51               	goto	l2626
  5708     0F34                     l2616:
  5709     0F34  3001               	movlw	1
  5710     0F35  00A8               	movwf	??___flmul
  5711     0F36                     u3785:
  5712     0F36  1003               	clrc
  5713     0F37  0DB4               	rlf	___flmul@prod,f
  5714     0F38  0DB5               	rlf	___flmul@prod+1,f
  5715     0F39  0DB6               	rlf	___flmul@prod+2,f
  5716     0F3A  0DB7               	rlf	___flmul@prod+3,f
  5717     0F3B  0BA8               	decfsz	??___flmul,f
  5718     0F3C  2F36               	goto	u3785
  5719     0F3D                     l2618:
  5720     0F3D  1FB1               	btfss	___flmul@grs+3,7
  5721     0F3E  2F40               	goto	u3791
  5722     0F3F  2F41               	goto	u3790
  5723     0F40                     u3791:
  5724     0F40  2F42               	goto	l2622
  5725     0F41                     u3790:
  5726     0F41                     l2620:
  5727     0F41  1434               	bsf	___flmul@prod,0
  5728     0F42                     l2622:
  5729     0F42  3001               	movlw	1
  5730     0F43  00A8               	movwf	??___flmul
  5731     0F44                     u3805:
  5732     0F44  1003               	clrc
  5733     0F45  0DAE               	rlf	___flmul@grs,f
  5734     0F46  0DAF               	rlf	___flmul@grs+1,f
  5735     0F47  0DB0               	rlf	___flmul@grs+2,f
  5736     0F48  0DB1               	rlf	___flmul@grs+3,f
  5737     0F49  0BA8               	decfsz	??___flmul,f
  5738     0F4A  2F44               	goto	u3805
  5739     0F4B                     l2624:
  5740     0F4B  30FF               	movlw	255
  5741     0F4C  07B8               	addwf	___flmul@temp,f
  5742     0F4D  1803               	skipnc
  5743     0F4E  0AB9               	incf	___flmul@temp+1,f
  5744     0F4F  30FF               	movlw	255
  5745     0F50  07B9               	addwf	___flmul@temp+1,f
  5746     0F51                     l2626:
  5747     0F51  1FB6               	btfss	___flmul@prod+2,7
  5748     0F52  2F54               	goto	u3811
  5749     0F53  2F55               	goto	u3810
  5750     0F54                     u3811:
  5751     0F54  2F34               	goto	l2616
  5752     0F55                     u3810:
  5753     0F55                     l2628:
  5754     0F55  01B2               	clrf	___flmul@aexp
  5755     0F56                     l2630:
  5756     0F56  1FB1               	btfss	___flmul@grs+3,7
  5757     0F57  2F59               	goto	u3821
  5758     0F58  2F5A               	goto	u3820
  5759     0F59                     u3821:
  5760     0F59  2F76               	goto	l2638
  5761     0F5A                     u3820:
  5762     0F5A                     l2632:
  5763     0F5A  30FF               	movlw	255
  5764     0F5B  052E               	andwf	___flmul@grs,w
  5765     0F5C  00A8               	movwf	??___flmul
  5766     0F5D  30FF               	movlw	255
  5767     0F5E  052F               	andwf	___flmul@grs+1,w
  5768     0F5F  00A9               	movwf	??___flmul+1
  5769     0F60  30FF               	movlw	255
  5770     0F61  0530               	andwf	___flmul@grs+2,w
  5771     0F62  00AA               	movwf	??___flmul+2
  5772     0F63  307F               	movlw	127
  5773     0F64  0531               	andwf	___flmul@grs+3,w
  5774     0F65  00AB               	movwf	??___flmul+3
  5775     0F66  082B               	movf	??___flmul+3,w
  5776     0F67  042A               	iorwf	??___flmul+2,w
  5777     0F68  0429               	iorwf	??___flmul+1,w
  5778     0F69  0428               	iorwf	??___flmul,w
  5779     0F6A  1903               	skipnz
  5780     0F6B  2F6D               	goto	u3831
  5781     0F6C  2F6E               	goto	u3830
  5782     0F6D                     u3831:
  5783     0F6D  2F71               	goto	l573
  5784     0F6E                     u3830:
  5785     0F6E                     l2634:
  5786     0F6E  3001               	movlw	1
  5787     0F6F  00B2               	movwf	___flmul@aexp
  5788     0F70  2F76               	goto	l2638
  5789     0F71                     l573:
  5790     0F71  1C34               	btfss	___flmul@prod,0
  5791     0F72  2F74               	goto	u3841
  5792     0F73  2F75               	goto	u3840
  5793     0F74                     u3841:
  5794     0F74  2F76               	goto	l2638
  5795     0F75                     u3840:
  5796     0F75  2F6E               	goto	l2634
  5797     0F76                     l2638:
  5798     0F76  0832               	movf	___flmul@aexp,w
  5799     0F77  1903               	btfsc	3,2
  5800     0F78  2F7A               	goto	u3851
  5801     0F79  2F7B               	goto	u3850
  5802     0F7A                     u3851:
  5803     0F7A  2FAC               	goto	l2648
  5804     0F7B                     u3850:
  5805     0F7B                     l2640:
  5806     0F7B  3001               	movlw	1
  5807     0F7C  07B4               	addwf	___flmul@prod,f
  5808     0F7D  3000               	movlw	0
  5809     0F7E  1803               	skipnc
  5810     0F7F  3001               	movlw	1
  5811     0F80  07B5               	addwf	___flmul@prod+1,f
  5812     0F81  3000               	movlw	0
  5813     0F82  1803               	skipnc
  5814     0F83  3001               	movlw	1
  5815     0F84  07B6               	addwf	___flmul@prod+2,f
  5816     0F85  3000               	movlw	0
  5817     0F86  1803               	skipnc
  5818     0F87  3001               	movlw	1
  5819     0F88  07B7               	addwf	___flmul@prod+3,f
  5820     0F89                     l2642:
  5821     0F89  1C37               	btfss	___flmul@prod+3,0
  5822     0F8A  2F8C               	goto	u3861
  5823     0F8B  2F8D               	goto	u3860
  5824     0F8C                     u3861:
  5825     0F8C  2FAC               	goto	l2648
  5826     0F8D                     u3860:
  5827     0F8D                     l2644:
  5828     0F8D  0834               	movf	___flmul@prod,w
  5829     0F8E  00A8               	movwf	??___flmul
  5830     0F8F  0835               	movf	___flmul@prod+1,w
  5831     0F90  00A9               	movwf	??___flmul+1
  5832     0F91  0836               	movf	___flmul@prod+2,w
  5833     0F92  00AA               	movwf	??___flmul+2
  5834     0F93  0837               	movf	___flmul@prod+3,w
  5835     0F94  00AB               	movwf	??___flmul+3
  5836     0F95  3001               	movlw	1
  5837     0F96  00AC               	movwf	??___flmul+4
  5838     0F97                     u3875:
  5839     0F97  0D2B               	rlf	??___flmul+3,w
  5840     0F98  0CAB               	rrf	??___flmul+3,f
  5841     0F99  0CAA               	rrf	??___flmul+2,f
  5842     0F9A  0CA9               	rrf	??___flmul+1,f
  5843     0F9B  0CA8               	rrf	??___flmul,f
  5844     0F9C                     u3870:
  5845     0F9C  0BAC               	decfsz	??___flmul+4,f
  5846     0F9D  2F97               	goto	u3875
  5847     0F9E  082B               	movf	??___flmul+3,w
  5848     0F9F  00B7               	movwf	___flmul@prod+3
  5849     0FA0  082A               	movf	??___flmul+2,w
  5850     0FA1  00B6               	movwf	___flmul@prod+2
  5851     0FA2  0829               	movf	??___flmul+1,w
  5852     0FA3  00B5               	movwf	___flmul@prod+1
  5853     0FA4  0828               	movf	??___flmul,w
  5854     0FA5  00B4               	movwf	___flmul@prod
  5855     0FA6                     l2646:
  5856     0FA6  3001               	movlw	1
  5857     0FA7  07B8               	addwf	___flmul@temp,f
  5858     0FA8  1803               	skipnc
  5859     0FA9  0AB9               	incf	___flmul@temp+1,f
  5860     0FAA  3000               	movlw	0
  5861     0FAB  07B9               	addwf	___flmul@temp+1,f
  5862     0FAC                     l2648:
  5863     0FAC  0839               	movf	___flmul@temp+1,w
  5864     0FAD  3A80               	xorlw	128
  5865     0FAE  00FF               	movwf	btemp+1
  5866     0FAF  3080               	movlw	128
  5867     0FB0  027F               	subwf	btemp+1,w
  5868     0FB1  1D03               	skipz
  5869     0FB2  2FB5               	goto	u3885
  5870     0FB3  30FF               	movlw	255
  5871     0FB4  0238               	subwf	___flmul@temp,w
  5872     0FB5                     u3885:
  5873     0FB5  1C03               	skipc
  5874     0FB6  2FB8               	goto	u3881
  5875     0FB7  2FB9               	goto	u3880
  5876     0FB8                     u3881:
  5877     0FB8  2FC4               	goto	l2652
  5878     0FB9                     u3880:
  5879     0FB9                     l2650:
  5880     0FB9  307F               	movlw	127
  5881     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  5882     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  5883     0FBC  00B7               	movwf	___flmul@prod+3
  5884     0FBD  3080               	movlw	128
  5885     0FBE  00B6               	movwf	___flmul@prod+2
  5886     0FBF  3000               	movlw	0
  5887     0FC0  00B5               	movwf	___flmul@prod+1
  5888     0FC1  3000               	movlw	0
  5889     0FC2  00B4               	movwf	___flmul@prod
  5890     0FC3  2FF5               	goto	l579
  5891     0FC4                     l2652:
  5892     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  5893     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  5894     0FC6  0839               	movf	___flmul@temp+1,w
  5895     0FC7  3A80               	xorlw	128
  5896     0FC8  00FF               	movwf	btemp+1
  5897     0FC9  3080               	movlw	128
  5898     0FCA  027F               	subwf	btemp+1,w
  5899     0FCB  1D03               	skipz
  5900     0FCC  2FCF               	goto	u3895
  5901     0FCD  3001               	movlw	1
  5902     0FCE  0238               	subwf	___flmul@temp,w
  5903     0FCF                     u3895:
  5904     0FCF  1803               	skipnc
  5905     0FD0  2FD2               	goto	u3891
  5906     0FD1  2FD3               	goto	u3890
  5907     0FD2                     u3891:
  5908     0FD2  2FDF               	goto	l2658
  5909     0FD3                     u3890:
  5910     0FD3                     l2654:
  5911     0FD3  3000               	movlw	0
  5912     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  5913     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  5914     0FD6  00B7               	movwf	___flmul@prod+3
  5915     0FD7  3000               	movlw	0
  5916     0FD8  00B6               	movwf	___flmul@prod+2
  5917     0FD9  3000               	movlw	0
  5918     0FDA  00B5               	movwf	___flmul@prod+1
  5919     0FDB  3000               	movlw	0
  5920     0FDC  00B4               	movwf	___flmul@prod
  5921     0FDD                     l2656:
  5922     0FDD  01AD               	clrf	___flmul@sign
  5923     0FDE  2FF5               	goto	l579
  5924     0FDF                     l2658:
  5925     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  5926     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  5927     0FE1  0838               	movf	___flmul@temp,w
  5928     0FE2  00B3               	movwf	___flmul@bexp
  5929     0FE3  30FF               	movlw	255
  5930     0FE4  05B4               	andwf	___flmul@prod,f
  5931     0FE5  30FF               	movlw	255
  5932     0FE6  05B5               	andwf	___flmul@prod+1,f
  5933     0FE7  307F               	movlw	127
  5934     0FE8  05B6               	andwf	___flmul@prod+2,f
  5935     0FE9  3000               	movlw	0
  5936     0FEA  05B7               	andwf	___flmul@prod+3,f
  5937     0FEB                     l2660:
  5938     0FEB  1C33               	btfss	___flmul@bexp,0
  5939     0FEC  2FEE               	goto	u3901
  5940     0FED  2FEF               	goto	u3900
  5941     0FEE                     u3901:
  5942     0FEE  2FF0               	goto	l2664
  5943     0FEF                     u3900:
  5944     0FEF                     l2662:
  5945     0FEF  17B6               	bsf	___flmul@prod+2,7
  5946     0FF0                     l2664:
  5947     0FF0  0833               	movf	___flmul@bexp,w
  5948     0FF1  00A8               	movwf	??___flmul
  5949     0FF2  1003               	clrc
  5950     0FF3  0C28               	rrf	??___flmul,w
  5951     0FF4  00B7               	movwf	___flmul@prod+3
  5952     0FF5                     l579:
  5953     0FF5  082D               	movf	___flmul@sign,w
  5954     0FF6  04B7               	iorwf	___flmul@prod+3,f
  5955     0FF7                     l2666:
  5956     0FF7  0837               	movf	___flmul@prod+3,w
  5957     0FF8  00A3               	movwf	?___flmul+3
  5958     0FF9  0836               	movf	___flmul@prod+2,w
  5959     0FFA  00A2               	movwf	?___flmul+2
  5960     0FFB  0835               	movf	___flmul@prod+1,w
  5961     0FFC  00A1               	movwf	?___flmul+1
  5962     0FFD  0834               	movf	___flmul@prod,w
  5963     0FFE  00A0               	movwf	?___flmul
  5964     0FFF                     l567:
  5965     0FFF  0008               	return
  5966     1000                     __end_of___flmul:
  5967                           
  5968                           	psect	text21
  5969     1F88                     __ptext21:	
  5970 ;; *************** function __Umul8_16 *****************
  5971 ;; Defined at:
  5972 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  multiplier      1    wreg     unsigned char 
  5975 ;;  multiplicand    1    0[COMMON] unsigned char 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  multiplier      1    8[COMMON] unsigned char 
  5978 ;;  word_mpld       2    6[COMMON] unsigned short 
  5979 ;;  product         2    4[COMMON] unsigned short 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  2    0[COMMON] unsigned int 
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, status,0
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5989 ;;      Params:         2       0       0       0       0
  5990 ;;      Locals:         5       0       0       0       0
  5991 ;;      Temps:          2       0       0       0       0
  5992 ;;      Totals:         9       0       0       0       0
  5993 ;;Total ram usage:        9 bytes
  5994 ;; Hardware stack levels used: 1
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		___flmul
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002     1F88                     __Umul8_16:	
  6003                           ;psect for function __Umul8_16
  6004                           
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6008                           ;__Umul8_16@multiplier stored from wreg
  6009     1F88  00F8               	movwf	__Umul8_16@multiplier
  6010     1F89                     l2266:
  6011     1F89  01F4               	clrf	__Umul8_16@product
  6012     1F8A  01F5               	clrf	__Umul8_16@product+1
  6013     1F8B                     l2268:
  6014     1F8B  0870               	movf	__Umul8_16@multiplicand,w
  6015     1F8C  00F2               	movwf	??__Umul8_16
  6016     1F8D  01F3               	clrf	??__Umul8_16+1
  6017     1F8E  0872               	movf	??__Umul8_16,w
  6018     1F8F  00F6               	movwf	__Umul8_16@word_mpld
  6019     1F90  0873               	movf	??__Umul8_16+1,w
  6020     1F91  00F7               	movwf	__Umul8_16@word_mpld+1
  6021     1F92                     l2270:
  6022     1F92  1C78               	btfss	__Umul8_16@multiplier,0
  6023     1F93  2F95               	goto	u2951
  6024     1F94  2F96               	goto	u2950
  6025     1F95                     u2951:
  6026     1F95  2F9C               	goto	l586
  6027     1F96                     u2950:
  6028     1F96                     l2272:
  6029     1F96  0876               	movf	__Umul8_16@word_mpld,w
  6030     1F97  07F4               	addwf	__Umul8_16@product,f
  6031     1F98  1803               	skipnc
  6032     1F99  0AF5               	incf	__Umul8_16@product+1,f
  6033     1F9A  0877               	movf	__Umul8_16@word_mpld+1,w
  6034     1F9B  07F5               	addwf	__Umul8_16@product+1,f
  6035     1F9C                     l586:
  6036     1F9C  3001               	movlw	1
  6037     1F9D                     u2965:
  6038     1F9D  1003               	clrc
  6039     1F9E  0DF6               	rlf	__Umul8_16@word_mpld,f
  6040     1F9F  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6041     1FA0  3EFF               	addlw	-1
  6042     1FA1  1D03               	skipz
  6043     1FA2  2F9D               	goto	u2965
  6044     1FA3  1003               	clrc
  6045     1FA4  0CF8               	rrf	__Umul8_16@multiplier,f
  6046     1FA5                     l2274:
  6047     1FA5  0878               	movf	__Umul8_16@multiplier,w
  6048     1FA6  1D03               	btfss	3,2
  6049     1FA7  2FA9               	goto	u2971
  6050     1FA8  2FAA               	goto	u2970
  6051     1FA9                     u2971:
  6052     1FA9  2F92               	goto	l2270
  6053     1FAA                     u2970:
  6054     1FAA                     l2276:
  6055     1FAA  0875               	movf	__Umul8_16@product+1,w
  6056     1FAB  00F1               	movwf	?__Umul8_16+1
  6057     1FAC  0874               	movf	__Umul8_16@product,w
  6058     1FAD  00F0               	movwf	?__Umul8_16
  6059     1FAE                     l588:
  6060     1FAE  0008               	return
  6061     1FAF                     __end_of__Umul8_16:
  6062                           
  6063                           	psect	text22
  6064     141B                     __ptext22:	
  6065 ;; *************** function ___flge *****************
  6066 ;; Defined at:
  6067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  ff1             4   26[BANK0 ] unsigned int 
  6070 ;;  ff2             4   30[BANK0 ] unsigned int 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;		None               void
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6082 ;;      Params:         0       8       0       0       0
  6083 ;;      Locals:         0       0       0       0       0
  6084 ;;      Temps:          0       4       0       0       0
  6085 ;;      Totals:         0      12       0       0       0
  6086 ;;Total ram usage:       12 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_efgtoa
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095     141B                     ___flge:	
  6096                           ;psect for function ___flge
  6097                           
  6098     141B                     l2314:	
  6099                           ;incstack = 0
  6100                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6101                           
  6102     141B  3000               	movlw	0
  6103     141C  1283               	bcf	3,5	;RP0=0, select bank0
  6104     141D  1303               	bcf	3,6	;RP1=0, select bank0
  6105     141E  053A               	andwf	___flge@ff1,w
  6106     141F  00C2               	movwf	??___flge
  6107     1420  3000               	movlw	0
  6108     1421  053B               	andwf	___flge@ff1+1,w
  6109     1422  00C3               	movwf	??___flge+1
  6110     1423  3080               	movlw	128
  6111     1424  053C               	andwf	___flge@ff1+2,w
  6112     1425  00C4               	movwf	??___flge+2
  6113     1426  307F               	movlw	127
  6114     1427  053D               	andwf	___flge@ff1+3,w
  6115     1428  00C5               	movwf	??___flge+3
  6116     1429  0845               	movf	??___flge+3,w
  6117     142A  0444               	iorwf	??___flge+2,w
  6118     142B  0443               	iorwf	??___flge+1,w
  6119     142C  0442               	iorwf	??___flge,w
  6120     142D  1D03               	skipz
  6121     142E  2C30               	goto	u3061
  6122     142F  2C31               	goto	u3060
  6123     1430                     u3061:
  6124     1430  2C39               	goto	l348
  6125     1431                     u3060:
  6126     1431                     l2316:
  6127     1431  3000               	movlw	0
  6128     1432  00BD               	movwf	___flge@ff1+3
  6129     1433  3000               	movlw	0
  6130     1434  00BC               	movwf	___flge@ff1+2
  6131     1435  3000               	movlw	0
  6132     1436  00BB               	movwf	___flge@ff1+1
  6133     1437  3000               	movlw	0
  6134     1438  00BA               	movwf	___flge@ff1
  6135     1439                     l348:
  6136     1439  3000               	movlw	0
  6137     143A  053E               	andwf	___flge@ff2,w
  6138     143B  00C2               	movwf	??___flge
  6139     143C  3000               	movlw	0
  6140     143D  053F               	andwf	___flge@ff2+1,w
  6141     143E  00C3               	movwf	??___flge+1
  6142     143F  3080               	movlw	128
  6143     1440  0540               	andwf	___flge@ff2+2,w
  6144     1441  00C4               	movwf	??___flge+2
  6145     1442  307F               	movlw	127
  6146     1443  0541               	andwf	___flge@ff2+3,w
  6147     1444  00C5               	movwf	??___flge+3
  6148     1445  0845               	movf	??___flge+3,w
  6149     1446  0444               	iorwf	??___flge+2,w
  6150     1447  0443               	iorwf	??___flge+1,w
  6151     1448  0442               	iorwf	??___flge,w
  6152     1449  1D03               	skipz
  6153     144A  2C4C               	goto	u3071
  6154     144B  2C4D               	goto	u3070
  6155     144C                     u3071:
  6156     144C  2C55               	goto	l2320
  6157     144D                     u3070:
  6158     144D                     l2318:
  6159     144D  3000               	movlw	0
  6160     144E  00C1               	movwf	___flge@ff2+3
  6161     144F  3000               	movlw	0
  6162     1450  00C0               	movwf	___flge@ff2+2
  6163     1451  3000               	movlw	0
  6164     1452  00BF               	movwf	___flge@ff2+1
  6165     1453  3000               	movlw	0
  6166     1454  00BE               	movwf	___flge@ff2
  6167     1455                     l2320:
  6168     1455  1FBD               	btfss	___flge@ff1+3,7
  6169     1456  2C58               	goto	u3081
  6170     1457  2C59               	goto	u3080
  6171     1458                     u3081:
  6172     1458  2C7D               	goto	l2324
  6173     1459                     u3080:
  6174     1459                     l2322:
  6175     1459  3000               	movlw	0
  6176     145A  00C2               	movwf	??___flge
  6177     145B  3000               	movlw	0
  6178     145C  00C3               	movwf	??___flge+1
  6179     145D  3000               	movlw	0
  6180     145E  00C4               	movwf	??___flge+2
  6181     145F  3080               	movlw	128
  6182     1460  00C5               	movwf	??___flge+3
  6183     1461  083A               	movf	___flge@ff1,w
  6184     1462  02C2               	subwf	??___flge,f
  6185     1463  083B               	movf	___flge@ff1+1,w
  6186     1464  1C03               	skipc
  6187     1465  0F3B               	incfsz	___flge@ff1+1,w
  6188     1466  2C68               	goto	u3091
  6189     1467  2C69               	goto	u3092
  6190     1468                     u3091:
  6191     1468  02C3               	subwf	??___flge+1,f
  6192     1469                     u3092:
  6193     1469  083C               	movf	___flge@ff1+2,w
  6194     146A  1C03               	skipc
  6195     146B  0F3C               	incfsz	___flge@ff1+2,w
  6196     146C  2C6E               	goto	u3093
  6197     146D  2C6F               	goto	u3094
  6198     146E                     u3093:
  6199     146E  02C4               	subwf	??___flge+2,f
  6200     146F                     u3094:
  6201     146F  083D               	movf	___flge@ff1+3,w
  6202     1470  1C03               	skipc
  6203     1471  0F3D               	incfsz	___flge@ff1+3,w
  6204     1472  2C74               	goto	u3095
  6205     1473  2C75               	goto	u3096
  6206     1474                     u3095:
  6207     1474  02C5               	subwf	??___flge+3,f
  6208     1475                     u3096:
  6209     1475  0845               	movf	??___flge+3,w
  6210     1476  00BD               	movwf	___flge@ff1+3
  6211     1477  0844               	movf	??___flge+2,w
  6212     1478  00BC               	movwf	___flge@ff1+2
  6213     1479  0843               	movf	??___flge+1,w
  6214     147A  00BB               	movwf	___flge@ff1+1
  6215     147B  0842               	movf	??___flge,w
  6216     147C  00BA               	movwf	___flge@ff1
  6217     147D                     l2324:
  6218     147D  1FC1               	btfss	___flge@ff2+3,7
  6219     147E  2C80               	goto	u3101
  6220     147F  2C81               	goto	u3100
  6221     1480                     u3101:
  6222     1480  2CA5               	goto	l351
  6223     1481                     u3100:
  6224     1481                     l2326:
  6225     1481  3000               	movlw	0
  6226     1482  00C2               	movwf	??___flge
  6227     1483  3000               	movlw	0
  6228     1484  00C3               	movwf	??___flge+1
  6229     1485  3000               	movlw	0
  6230     1486  00C4               	movwf	??___flge+2
  6231     1487  3080               	movlw	128
  6232     1488  00C5               	movwf	??___flge+3
  6233     1489  083E               	movf	___flge@ff2,w
  6234     148A  02C2               	subwf	??___flge,f
  6235     148B  083F               	movf	___flge@ff2+1,w
  6236     148C  1C03               	skipc
  6237     148D  0F3F               	incfsz	___flge@ff2+1,w
  6238     148E  2C90               	goto	u3111
  6239     148F  2C91               	goto	u3112
  6240     1490                     u3111:
  6241     1490  02C3               	subwf	??___flge+1,f
  6242     1491                     u3112:
  6243     1491  0840               	movf	___flge@ff2+2,w
  6244     1492  1C03               	skipc
  6245     1493  0F40               	incfsz	___flge@ff2+2,w
  6246     1494  2C96               	goto	u3113
  6247     1495  2C97               	goto	u3114
  6248     1496                     u3113:
  6249     1496  02C4               	subwf	??___flge+2,f
  6250     1497                     u3114:
  6251     1497  0841               	movf	___flge@ff2+3,w
  6252     1498  1C03               	skipc
  6253     1499  0F41               	incfsz	___flge@ff2+3,w
  6254     149A  2C9C               	goto	u3115
  6255     149B  2C9D               	goto	u3116
  6256     149C                     u3115:
  6257     149C  02C5               	subwf	??___flge+3,f
  6258     149D                     u3116:
  6259     149D  0845               	movf	??___flge+3,w
  6260     149E  00C1               	movwf	___flge@ff2+3
  6261     149F  0844               	movf	??___flge+2,w
  6262     14A0  00C0               	movwf	___flge@ff2+2
  6263     14A1  0843               	movf	??___flge+1,w
  6264     14A2  00BF               	movwf	___flge@ff2+1
  6265     14A3  0842               	movf	??___flge,w
  6266     14A4  00BE               	movwf	___flge@ff2
  6267     14A5                     l351:
  6268     14A5  3080               	movlw	128
  6269     14A6  06BD               	xorwf	___flge@ff1+3,f
  6270     14A7  3080               	movlw	128
  6271     14A8  06C1               	xorwf	___flge@ff2+3,f
  6272     14A9  0841               	movf	___flge@ff2+3,w
  6273     14AA  023D               	subwf	___flge@ff1+3,w
  6274     14AB  1D03               	skipz
  6275     14AC  2CB7               	goto	u3125
  6276     14AD  0840               	movf	___flge@ff2+2,w
  6277     14AE  023C               	subwf	___flge@ff1+2,w
  6278     14AF  1D03               	skipz
  6279     14B0  2CB7               	goto	u3125
  6280     14B1  083F               	movf	___flge@ff2+1,w
  6281     14B2  023B               	subwf	___flge@ff1+1,w
  6282     14B3  1D03               	skipz
  6283     14B4  2CB7               	goto	u3125
  6284     14B5  083E               	movf	___flge@ff2,w
  6285     14B6  023A               	subwf	___flge@ff1,w
  6286     14B7                     u3125:
  6287     14B7  1803               	skipnc
  6288     14B8  2CBA               	goto	u3121
  6289     14B9  2CBB               	goto	u3120
  6290     14BA                     u3121:
  6291     14BA  2CBD               	goto	l2330
  6292     14BB                     u3120:
  6293     14BB                     l2328:
  6294     14BB  1003               	clrc
  6295     14BC  2CBE               	goto	l356
  6296     14BD                     l2330:
  6297     14BD  1403               	setc
  6298     14BE                     l356:
  6299     14BE  0008               	return
  6300     14BF                     __end_of___flge:
  6301                           
  6302                           	psect	text23
  6303     1128                     __ptext23:	
  6304 ;; *************** function ___fleq *****************
  6305 ;; Defined at:
  6306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  ff1             4    0[COMMON] unsigned int 
  6309 ;;  ff2             4    4[COMMON] unsigned int 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;		None               void
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6321 ;;      Params:         8       0       0       0       0
  6322 ;;      Locals:         0       0       0       0       0
  6323 ;;      Temps:          4       0       0       0       0
  6324 ;;      Totals:        12       0       0       0       0
  6325 ;;Total ram usage:       12 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_efgtoa
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334     1128                     ___fleq:	
  6335                           ;psect for function ___fleq
  6336                           
  6337     1128                     l2302:	
  6338                           ;incstack = 0
  6339                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6340                           
  6341     1128  3000               	movlw	0
  6342     1129  0570               	andwf	___fleq@ff1,w
  6343     112A  00F8               	movwf	??___fleq
  6344     112B  3000               	movlw	0
  6345     112C  0571               	andwf	___fleq@ff1+1,w
  6346     112D  00F9               	movwf	??___fleq+1
  6347     112E  3080               	movlw	128
  6348     112F  0572               	andwf	___fleq@ff1+2,w
  6349     1130  00FA               	movwf	??___fleq+2
  6350     1131  307F               	movlw	127
  6351     1132  0573               	andwf	___fleq@ff1+3,w
  6352     1133  00FB               	movwf	??___fleq+3
  6353     1134  087B               	movf	??___fleq+3,w
  6354     1135  047A               	iorwf	??___fleq+2,w
  6355     1136  0479               	iorwf	??___fleq+1,w
  6356     1137  0478               	iorwf	??___fleq,w
  6357     1138  1D03               	skipz
  6358     1139  293B               	goto	u3031
  6359     113A  293C               	goto	u3030
  6360     113B                     u3031:
  6361     113B  2944               	goto	l339
  6362     113C                     u3030:
  6363     113C                     l2304:
  6364     113C  3000               	movlw	0
  6365     113D  00F3               	movwf	___fleq@ff1+3
  6366     113E  3000               	movlw	0
  6367     113F  00F2               	movwf	___fleq@ff1+2
  6368     1140  3000               	movlw	0
  6369     1141  00F1               	movwf	___fleq@ff1+1
  6370     1142  3000               	movlw	0
  6371     1143  00F0               	movwf	___fleq@ff1
  6372     1144                     l339:
  6373     1144  3000               	movlw	0
  6374     1145  0574               	andwf	___fleq@ff2,w
  6375     1146  00F8               	movwf	??___fleq
  6376     1147  3000               	movlw	0
  6377     1148  0575               	andwf	___fleq@ff2+1,w
  6378     1149  00F9               	movwf	??___fleq+1
  6379     114A  3080               	movlw	128
  6380     114B  0576               	andwf	___fleq@ff2+2,w
  6381     114C  00FA               	movwf	??___fleq+2
  6382     114D  307F               	movlw	127
  6383     114E  0577               	andwf	___fleq@ff2+3,w
  6384     114F  00FB               	movwf	??___fleq+3
  6385     1150  087B               	movf	??___fleq+3,w
  6386     1151  047A               	iorwf	??___fleq+2,w
  6387     1152  0479               	iorwf	??___fleq+1,w
  6388     1153  0478               	iorwf	??___fleq,w
  6389     1154  1D03               	skipz
  6390     1155  2957               	goto	u3041
  6391     1156  2958               	goto	u3040
  6392     1157                     u3041:
  6393     1157  2960               	goto	l340
  6394     1158                     u3040:
  6395     1158                     l2306:
  6396     1158  3000               	movlw	0
  6397     1159  00F7               	movwf	___fleq@ff2+3
  6398     115A  3000               	movlw	0
  6399     115B  00F6               	movwf	___fleq@ff2+2
  6400     115C  3000               	movlw	0
  6401     115D  00F5               	movwf	___fleq@ff2+1
  6402     115E  3000               	movlw	0
  6403     115F  00F4               	movwf	___fleq@ff2
  6404     1160                     l340:
  6405     1160  0877               	movf	___fleq@ff2+3,w
  6406     1161  0673               	xorwf	___fleq@ff1+3,w
  6407     1162  1D03               	skipz
  6408     1163  296E               	goto	u3055
  6409     1164  0876               	movf	___fleq@ff2+2,w
  6410     1165  0672               	xorwf	___fleq@ff1+2,w
  6411     1166  1D03               	skipz
  6412     1167  296E               	goto	u3055
  6413     1168  0875               	movf	___fleq@ff2+1,w
  6414     1169  0671               	xorwf	___fleq@ff1+1,w
  6415     116A  1D03               	skipz
  6416     116B  296E               	goto	u3055
  6417     116C  0874               	movf	___fleq@ff2,w
  6418     116D  0670               	xorwf	___fleq@ff1,w
  6419     116E                     u3055:
  6420     116E  1903               	skipnz
  6421     116F  2971               	goto	u3051
  6422     1170  2972               	goto	u3050
  6423     1171                     u3051:
  6424     1171  2974               	goto	l2310
  6425     1172                     u3050:
  6426     1172                     l2308:
  6427     1172  1003               	clrc
  6428     1173  2975               	goto	l345
  6429     1174                     l2310:
  6430     1174  1403               	setc
  6431     1175                     l345:
  6432     1175  0008               	return
  6433     1176                     __end_of___fleq:
  6434                           
  6435                           	psect	text24
  6436     0892                     __ptext24:	
  6437 ;; *************** function ___fldiv *****************
  6438 ;; Defined at:
  6439 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  a               4    0[COMMON] unsigned int 
  6442 ;;  b               4    4[COMMON] unsigned int 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  grs             4    7[BANK0 ] unsigned long 
  6445 ;;  rem             4    0[BANK0 ] unsigned long 
  6446 ;;  new_exp         2    5[BANK0 ] short 
  6447 ;;  aexp            1   12[BANK0 ] unsigned char 
  6448 ;;  bexp            1   11[BANK0 ] unsigned char 
  6449 ;;  sign            1    4[BANK0 ] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  4    0[COMMON] unsigned char 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0, btemp+1
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6459 ;;      Params:         8       0       0       0       0
  6460 ;;      Locals:         0      13       0       0       0
  6461 ;;      Temps:          5       0       0       0       0
  6462 ;;      Totals:        13      13       0       0       0
  6463 ;;Total ram usage:       26 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_efgtoa
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472     0892                     ___fldiv:	
  6473                           ;psect for function ___fldiv
  6474                           
  6475     0892                     l2384:	
  6476                           ;incstack = 0
  6477                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6478                           
  6479     0892  0877               	movf	___fldiv@b+3,w
  6480     0893  1283               	bcf	3,5	;RP0=0, select bank0
  6481     0894  1303               	bcf	3,6	;RP1=0, select bank0
  6482     0895  00A4               	movwf	___fldiv@sign
  6483     0896                     l2386:
  6484     0896  3080               	movlw	128
  6485     0897  05A4               	andwf	___fldiv@sign,f
  6486     0898                     l2388:
  6487     0898  0877               	movf	___fldiv@b+3,w
  6488     0899  00F8               	movwf	??___fldiv
  6489     089A  0778               	addwf	??___fldiv,w
  6490     089B  00AB               	movwf	___fldiv@bexp
  6491     089C                     l2390:
  6492     089C  1FF6               	btfss	___fldiv@b+2,7
  6493     089D  289F               	goto	u3241
  6494     089E  28A0               	goto	u3240
  6495     089F                     u3241:
  6496     089F  28A1               	goto	l2394
  6497     08A0                     u3240:
  6498     08A0                     l2392:
  6499     08A0  142B               	bsf	___fldiv@bexp,0
  6500     08A1                     l2394:
  6501     08A1  082B               	movf	___fldiv@bexp,w
  6502     08A2  1903               	btfsc	3,2
  6503     08A3  28A5               	goto	u3251
  6504     08A4  28A6               	goto	u3250
  6505     08A5                     u3251:
  6506     08A5  28B6               	goto	l2404
  6507     08A6                     u3250:
  6508     08A6                     l2396:
  6509     08A6  0A2B               	incf	___fldiv@bexp,w
  6510     08A7  1D03               	btfss	3,2
  6511     08A8  28AA               	goto	u3261
  6512     08A9  28AB               	goto	u3260
  6513     08AA                     u3261:
  6514     08AA  28B3               	goto	l2400
  6515     08AB                     u3260:
  6516     08AB                     l2398:
  6517     08AB  3000               	movlw	0
  6518     08AC  00F7               	movwf	___fldiv@b+3
  6519     08AD  3000               	movlw	0
  6520     08AE  00F6               	movwf	___fldiv@b+2
  6521     08AF  3000               	movlw	0
  6522     08B0  00F5               	movwf	___fldiv@b+1
  6523     08B1  3000               	movlw	0
  6524     08B2  00F4               	movwf	___fldiv@b
  6525     08B3                     l2400:
  6526     08B3  17F6               	bsf	___fldiv@b+2,7
  6527     08B4                     l2402:
  6528     08B4  01F7               	clrf	___fldiv@b+3
  6529     08B5  28BE               	goto	l2406
  6530     08B6                     l2404:
  6531     08B6  3000               	movlw	0
  6532     08B7  00F7               	movwf	___fldiv@b+3
  6533     08B8  3000               	movlw	0
  6534     08B9  00F6               	movwf	___fldiv@b+2
  6535     08BA  3000               	movlw	0
  6536     08BB  00F5               	movwf	___fldiv@b+1
  6537     08BC  3000               	movlw	0
  6538     08BD  00F4               	movwf	___fldiv@b
  6539     08BE                     l2406:
  6540     08BE  0873               	movf	___fldiv@a+3,w
  6541     08BF  3980               	andlw	128
  6542     08C0  06A4               	xorwf	___fldiv@sign,f
  6543     08C1                     l2408:
  6544     08C1  0873               	movf	___fldiv@a+3,w
  6545     08C2  00F8               	movwf	??___fldiv
  6546     08C3  0778               	addwf	??___fldiv,w
  6547     08C4  00AC               	movwf	___fldiv@aexp
  6548     08C5                     l2410:
  6549     08C5  1FF2               	btfss	___fldiv@a+2,7
  6550     08C6  28C8               	goto	u3271
  6551     08C7  28C9               	goto	u3270
  6552     08C8                     u3271:
  6553     08C8  28CA               	goto	l2414
  6554     08C9                     u3270:
  6555     08C9                     l2412:
  6556     08C9  142C               	bsf	___fldiv@aexp,0
  6557     08CA                     l2414:
  6558     08CA  082C               	movf	___fldiv@aexp,w
  6559     08CB  1903               	btfsc	3,2
  6560     08CC  28CE               	goto	u3281
  6561     08CD  28CF               	goto	u3280
  6562     08CE                     u3281:
  6563     08CE  28DF               	goto	l2424
  6564     08CF                     u3280:
  6565     08CF                     l2416:
  6566     08CF  0A2C               	incf	___fldiv@aexp,w
  6567     08D0  1D03               	btfss	3,2
  6568     08D1  28D3               	goto	u3291
  6569     08D2  28D4               	goto	u3290
  6570     08D3                     u3291:
  6571     08D3  28DC               	goto	l2420
  6572     08D4                     u3290:
  6573     08D4                     l2418:
  6574     08D4  3000               	movlw	0
  6575     08D5  00F3               	movwf	___fldiv@a+3
  6576     08D6  3000               	movlw	0
  6577     08D7  00F2               	movwf	___fldiv@a+2
  6578     08D8  3000               	movlw	0
  6579     08D9  00F1               	movwf	___fldiv@a+1
  6580     08DA  3000               	movlw	0
  6581     08DB  00F0               	movwf	___fldiv@a
  6582     08DC                     l2420:
  6583     08DC  17F2               	bsf	___fldiv@a+2,7
  6584     08DD                     l2422:
  6585     08DD  01F3               	clrf	___fldiv@a+3
  6586     08DE  28E7               	goto	l527
  6587     08DF                     l2424:
  6588     08DF  3000               	movlw	0
  6589     08E0  00F3               	movwf	___fldiv@a+3
  6590     08E1  3000               	movlw	0
  6591     08E2  00F2               	movwf	___fldiv@a+2
  6592     08E3  3000               	movlw	0
  6593     08E4  00F1               	movwf	___fldiv@a+1
  6594     08E5  3000               	movlw	0
  6595     08E6  00F0               	movwf	___fldiv@a
  6596     08E7                     l527:
  6597     08E7  0873               	movf	___fldiv@a+3,w
  6598     08E8  0472               	iorwf	___fldiv@a+2,w
  6599     08E9  0471               	iorwf	___fldiv@a+1,w
  6600     08EA  0470               	iorwf	___fldiv@a,w
  6601     08EB  1D03               	skipz
  6602     08EC  28EE               	goto	u3301
  6603     08ED  28EF               	goto	u3300
  6604     08EE                     u3301:
  6605     08EE  2906               	goto	l2434
  6606     08EF                     u3300:
  6607     08EF                     l2426:
  6608     08EF  3000               	movlw	0
  6609     08F0  00F7               	movwf	___fldiv@b+3
  6610     08F1  3000               	movlw	0
  6611     08F2  00F6               	movwf	___fldiv@b+2
  6612     08F3  3000               	movlw	0
  6613     08F4  00F5               	movwf	___fldiv@b+1
  6614     08F5  3000               	movlw	0
  6615     08F6  00F4               	movwf	___fldiv@b
  6616     08F7  3080               	movlw	128
  6617     08F8  04F6               	iorwf	___fldiv@b+2,f
  6618     08F9  307F               	movlw	127
  6619     08FA  04F7               	iorwf	___fldiv@b+3,f
  6620     08FB                     l2428:
  6621     08FB  0824               	movf	___fldiv@sign,w
  6622     08FC  04F7               	iorwf	___fldiv@b+3,f
  6623     08FD                     l2430:
  6624     08FD  0877               	movf	___fldiv@b+3,w
  6625     08FE  00F3               	movwf	?___fldiv+3
  6626     08FF  0876               	movf	___fldiv@b+2,w
  6627     0900  00F2               	movwf	?___fldiv+2
  6628     0901  0875               	movf	___fldiv@b+1,w
  6629     0902  00F1               	movwf	?___fldiv+1
  6630     0903  0874               	movf	___fldiv@b,w
  6631     0904  00F0               	movwf	?___fldiv
  6632     0905  2A61               	goto	l529
  6633     0906                     l2434:
  6634     0906  082B               	movf	___fldiv@bexp,w
  6635     0907  1D03               	btfss	3,2
  6636     0908  290A               	goto	u3311
  6637     0909  290B               	goto	u3310
  6638     090A                     u3311:
  6639     090A  2914               	goto	l2440
  6640     090B                     u3310:
  6641     090B                     l2436:
  6642     090B  3000               	movlw	0
  6643     090C  00F3               	movwf	?___fldiv+3
  6644     090D  3000               	movlw	0
  6645     090E  00F2               	movwf	?___fldiv+2
  6646     090F  3000               	movlw	0
  6647     0910  00F1               	movwf	?___fldiv+1
  6648     0911  3000               	movlw	0
  6649     0912  00F0               	movwf	?___fldiv
  6650     0913  2A61               	goto	l529
  6651     0914                     l2440:
  6652     0914  082B               	movf	___fldiv@bexp,w
  6653     0915  00F8               	movwf	??___fldiv
  6654     0916  01F9               	clrf	??___fldiv+1
  6655     0917  0879               	movf	??___fldiv+1,w
  6656     0918  00FB               	movwf	??___fldiv+3
  6657     0919  082C               	movf	___fldiv@aexp,w
  6658     091A  0278               	subwf	??___fldiv,w
  6659     091B  00FA               	movwf	??___fldiv+2
  6660     091C  1C03               	skipc
  6661     091D  03FB               	decf	??___fldiv+3,f
  6662     091E  087A               	movf	??___fldiv+2,w
  6663     091F  3E7F               	addlw	127
  6664     0920  00A5               	movwf	___fldiv@new_exp
  6665     0921  087B               	movf	??___fldiv+3,w
  6666     0922  1803               	skipnc
  6667     0923  3E01               	addlw	1
  6668     0924  3E00               	addlw	0
  6669     0925  00A6               	movwf	___fldiv@new_exp+1
  6670     0926                     l2442:
  6671     0926  0877               	movf	___fldiv@b+3,w
  6672     0927  00A3               	movwf	___fldiv@rem+3
  6673     0928  0876               	movf	___fldiv@b+2,w
  6674     0929  00A2               	movwf	___fldiv@rem+2
  6675     092A  0875               	movf	___fldiv@b+1,w
  6676     092B  00A1               	movwf	___fldiv@rem+1
  6677     092C  0874               	movf	___fldiv@b,w
  6678     092D  00A0               	movwf	___fldiv@rem
  6679     092E                     l2444:
  6680     092E  3000               	movlw	0
  6681     092F  00F7               	movwf	___fldiv@b+3
  6682     0930  3000               	movlw	0
  6683     0931  00F6               	movwf	___fldiv@b+2
  6684     0932  3000               	movlw	0
  6685     0933  00F5               	movwf	___fldiv@b+1
  6686     0934  3000               	movlw	0
  6687     0935  00F4               	movwf	___fldiv@b
  6688     0936                     l2446:
  6689     0936  3000               	movlw	0
  6690     0937  00AA               	movwf	___fldiv@grs+3
  6691     0938  3000               	movlw	0
  6692     0939  00A9               	movwf	___fldiv@grs+2
  6693     093A  3000               	movlw	0
  6694     093B  00A8               	movwf	___fldiv@grs+1
  6695     093C  3000               	movlw	0
  6696     093D  00A7               	movwf	___fldiv@grs
  6697     093E                     l2448:
  6698     093E  01AC               	clrf	___fldiv@aexp
  6699     093F  298E               	goto	l2468
  6700     0940                     l2450:
  6701     0940  082C               	movf	___fldiv@aexp,w
  6702     0941  1903               	btfsc	3,2
  6703     0942  2944               	goto	u3321
  6704     0943  2945               	goto	u3320
  6705     0944                     u3321:
  6706     0944  2965               	goto	l2460
  6707     0945                     u3320:
  6708     0945                     l2452:
  6709     0945  3001               	movlw	1
  6710     0946  00F8               	movwf	??___fldiv
  6711     0947                     u3335:
  6712     0947  1003               	clrc
  6713     0948  0DA0               	rlf	___fldiv@rem,f
  6714     0949  0DA1               	rlf	___fldiv@rem+1,f
  6715     094A  0DA2               	rlf	___fldiv@rem+2,f
  6716     094B  0DA3               	rlf	___fldiv@rem+3,f
  6717     094C  0BF8               	decfsz	??___fldiv,f
  6718     094D  2947               	goto	u3335
  6719     094E  3001               	movlw	1
  6720     094F  00F8               	movwf	??___fldiv
  6721     0950                     u3345:
  6722     0950  1003               	clrc
  6723     0951  0DF4               	rlf	___fldiv@b,f
  6724     0952  0DF5               	rlf	___fldiv@b+1,f
  6725     0953  0DF6               	rlf	___fldiv@b+2,f
  6726     0954  0DF7               	rlf	___fldiv@b+3,f
  6727     0955  0BF8               	decfsz	??___fldiv,f
  6728     0956  2950               	goto	u3345
  6729     0957                     l2454:
  6730     0957  1FAA               	btfss	___fldiv@grs+3,7
  6731     0958  295A               	goto	u3351
  6732     0959  295B               	goto	u3350
  6733     095A                     u3351:
  6734     095A  295C               	goto	l2458
  6735     095B                     u3350:
  6736     095B                     l2456:
  6737     095B  1474               	bsf	___fldiv@b,0
  6738     095C                     l2458:
  6739     095C  3001               	movlw	1
  6740     095D  00F8               	movwf	??___fldiv
  6741     095E                     u3365:
  6742     095E  1003               	clrc
  6743     095F  0DA7               	rlf	___fldiv@grs,f
  6744     0960  0DA8               	rlf	___fldiv@grs+1,f
  6745     0961  0DA9               	rlf	___fldiv@grs+2,f
  6746     0962  0DAA               	rlf	___fldiv@grs+3,f
  6747     0963  0BF8               	decfsz	??___fldiv,f
  6748     0964  295E               	goto	u3365
  6749     0965                     l2460:
  6750     0965  0873               	movf	___fldiv@a+3,w
  6751     0966  0223               	subwf	___fldiv@rem+3,w
  6752     0967  1D03               	skipz
  6753     0968  2973               	goto	u3375
  6754     0969  0872               	movf	___fldiv@a+2,w
  6755     096A  0222               	subwf	___fldiv@rem+2,w
  6756     096B  1D03               	skipz
  6757     096C  2973               	goto	u3375
  6758     096D  0871               	movf	___fldiv@a+1,w
  6759     096E  0221               	subwf	___fldiv@rem+1,w
  6760     096F  1D03               	skipz
  6761     0970  2973               	goto	u3375
  6762     0971  0870               	movf	___fldiv@a,w
  6763     0972  0220               	subwf	___fldiv@rem,w
  6764     0973                     u3375:
  6765     0973  1C03               	skipc
  6766     0974  2976               	goto	u3371
  6767     0975  2977               	goto	u3370
  6768     0976                     u3371:
  6769     0976  298C               	goto	l2466
  6770     0977                     u3370:
  6771     0977                     l2462:
  6772     0977  172A               	bsf	___fldiv@grs+3,6
  6773     0978                     l2464:
  6774     0978  0870               	movf	___fldiv@a,w
  6775     0979  02A0               	subwf	___fldiv@rem,f
  6776     097A  0871               	movf	___fldiv@a+1,w
  6777     097B  1C03               	skipc
  6778     097C  0F71               	incfsz	___fldiv@a+1,w
  6779     097D  297F               	goto	u3385
  6780     097E  2980               	goto	u3386
  6781     097F                     u3385:
  6782     097F  02A1               	subwf	___fldiv@rem+1,f
  6783     0980                     u3386:
  6784     0980  0872               	movf	___fldiv@a+2,w
  6785     0981  1C03               	skipc
  6786     0982  0F72               	incfsz	___fldiv@a+2,w
  6787     0983  2985               	goto	u3387
  6788     0984  2986               	goto	u3388
  6789     0985                     u3387:
  6790     0985  02A2               	subwf	___fldiv@rem+2,f
  6791     0986                     u3388:
  6792     0986  0873               	movf	___fldiv@a+3,w
  6793     0987  1C03               	skipc
  6794     0988  0F73               	incfsz	___fldiv@a+3,w
  6795     0989  298B               	goto	u3389
  6796     098A  298C               	goto	u3380
  6797     098B                     u3389:
  6798     098B  02A3               	subwf	___fldiv@rem+3,f
  6799     098C                     u3380:
  6800     098C                     l2466:
  6801     098C  3001               	movlw	1
  6802     098D  07AC               	addwf	___fldiv@aexp,f
  6803     098E                     l2468:
  6804     098E  301A               	movlw	26
  6805     098F  022C               	subwf	___fldiv@aexp,w
  6806     0990  1C03               	skipc
  6807     0991  2993               	goto	u3391
  6808     0992  2994               	goto	u3390
  6809     0993                     u3391:
  6810     0993  2940               	goto	l2450
  6811     0994                     u3390:
  6812     0994                     l2470:
  6813     0994  0823               	movf	___fldiv@rem+3,w
  6814     0995  0422               	iorwf	___fldiv@rem+2,w
  6815     0996  0421               	iorwf	___fldiv@rem+1,w
  6816     0997  0420               	iorwf	___fldiv@rem,w
  6817     0998  1903               	skipnz
  6818     0999  299B               	goto	u3401
  6819     099A  299C               	goto	u3400
  6820     099B                     u3401:
  6821     099B  29BB               	goto	l2484
  6822     099C                     u3400:
  6823     099C                     l2472:
  6824     099C  1427               	bsf	___fldiv@grs,0
  6825     099D  29BB               	goto	l2484
  6826     099E                     l2474:
  6827     099E  3001               	movlw	1
  6828     099F  00F8               	movwf	??___fldiv
  6829     09A0                     u3415:
  6830     09A0  1003               	clrc
  6831     09A1  0DF4               	rlf	___fldiv@b,f
  6832     09A2  0DF5               	rlf	___fldiv@b+1,f
  6833     09A3  0DF6               	rlf	___fldiv@b+2,f
  6834     09A4  0DF7               	rlf	___fldiv@b+3,f
  6835     09A5  0BF8               	decfsz	??___fldiv,f
  6836     09A6  29A0               	goto	u3415
  6837     09A7                     l2476:
  6838     09A7  1FAA               	btfss	___fldiv@grs+3,7
  6839     09A8  29AA               	goto	u3421
  6840     09A9  29AB               	goto	u3420
  6841     09AA                     u3421:
  6842     09AA  29AC               	goto	l2480
  6843     09AB                     u3420:
  6844     09AB                     l2478:
  6845     09AB  1474               	bsf	___fldiv@b,0
  6846     09AC                     l2480:
  6847     09AC  3001               	movlw	1
  6848     09AD  00F8               	movwf	??___fldiv
  6849     09AE                     u3435:
  6850     09AE  1003               	clrc
  6851     09AF  0DA7               	rlf	___fldiv@grs,f
  6852     09B0  0DA8               	rlf	___fldiv@grs+1,f
  6853     09B1  0DA9               	rlf	___fldiv@grs+2,f
  6854     09B2  0DAA               	rlf	___fldiv@grs+3,f
  6855     09B3  0BF8               	decfsz	??___fldiv,f
  6856     09B4  29AE               	goto	u3435
  6857     09B5                     l2482:
  6858     09B5  30FF               	movlw	255
  6859     09B6  07A5               	addwf	___fldiv@new_exp,f
  6860     09B7  1803               	skipnc
  6861     09B8  0AA6               	incf	___fldiv@new_exp+1,f
  6862     09B9  30FF               	movlw	255
  6863     09BA  07A6               	addwf	___fldiv@new_exp+1,f
  6864     09BB                     l2484:
  6865     09BB  1FF6               	btfss	___fldiv@b+2,7
  6866     09BC  29BE               	goto	u3441
  6867     09BD  29BF               	goto	u3440
  6868     09BE                     u3441:
  6869     09BE  299E               	goto	l2474
  6870     09BF                     u3440:
  6871     09BF                     l2486:
  6872     09BF  01AC               	clrf	___fldiv@aexp
  6873     09C0                     l2488:
  6874     09C0  1FAA               	btfss	___fldiv@grs+3,7
  6875     09C1  29C3               	goto	u3451
  6876     09C2  29C4               	goto	u3450
  6877     09C3                     u3451:
  6878     09C3  29E0               	goto	l2496
  6879     09C4                     u3450:
  6880     09C4                     l2490:
  6881     09C4  30FF               	movlw	255
  6882     09C5  0527               	andwf	___fldiv@grs,w
  6883     09C6  00F8               	movwf	??___fldiv
  6884     09C7  30FF               	movlw	255
  6885     09C8  0528               	andwf	___fldiv@grs+1,w
  6886     09C9  00F9               	movwf	??___fldiv+1
  6887     09CA  30FF               	movlw	255
  6888     09CB  0529               	andwf	___fldiv@grs+2,w
  6889     09CC  00FA               	movwf	??___fldiv+2
  6890     09CD  307F               	movlw	127
  6891     09CE  052A               	andwf	___fldiv@grs+3,w
  6892     09CF  00FB               	movwf	??___fldiv+3
  6893     09D0  087B               	movf	??___fldiv+3,w
  6894     09D1  047A               	iorwf	??___fldiv+2,w
  6895     09D2  0479               	iorwf	??___fldiv+1,w
  6896     09D3  0478               	iorwf	??___fldiv,w
  6897     09D4  1903               	skipnz
  6898     09D5  29D7               	goto	u3461
  6899     09D6  29D8               	goto	u3460
  6900     09D7                     u3461:
  6901     09D7  29DB               	goto	l543
  6902     09D8                     u3460:
  6903     09D8                     l2492:
  6904     09D8  3001               	movlw	1
  6905     09D9  00AC               	movwf	___fldiv@aexp
  6906     09DA  29E0               	goto	l2496
  6907     09DB                     l543:
  6908     09DB  1C74               	btfss	___fldiv@b,0
  6909     09DC  29DE               	goto	u3471
  6910     09DD  29DF               	goto	u3470
  6911     09DE                     u3471:
  6912     09DE  29E0               	goto	l2496
  6913     09DF                     u3470:
  6914     09DF  29D8               	goto	l2492
  6915     09E0                     l2496:
  6916     09E0  082C               	movf	___fldiv@aexp,w
  6917     09E1  1903               	btfsc	3,2
  6918     09E2  29E4               	goto	u3481
  6919     09E3  29E5               	goto	u3480
  6920     09E4                     u3481:
  6921     09E4  2A16               	goto	l2506
  6922     09E5                     u3480:
  6923     09E5                     l2498:
  6924     09E5  3001               	movlw	1
  6925     09E6  07F4               	addwf	___fldiv@b,f
  6926     09E7  3000               	movlw	0
  6927     09E8  1803               	skipnc
  6928     09E9  3001               	movlw	1
  6929     09EA  07F5               	addwf	___fldiv@b+1,f
  6930     09EB  3000               	movlw	0
  6931     09EC  1803               	skipnc
  6932     09ED  3001               	movlw	1
  6933     09EE  07F6               	addwf	___fldiv@b+2,f
  6934     09EF  3000               	movlw	0
  6935     09F0  1803               	skipnc
  6936     09F1  3001               	movlw	1
  6937     09F2  07F7               	addwf	___fldiv@b+3,f
  6938     09F3                     l2500:
  6939     09F3  1C77               	btfss	___fldiv@b+3,0
  6940     09F4  29F6               	goto	u3491
  6941     09F5  29F7               	goto	u3490
  6942     09F6                     u3491:
  6943     09F6  2A16               	goto	l2506
  6944     09F7                     u3490:
  6945     09F7                     l2502:
  6946     09F7  0874               	movf	___fldiv@b,w
  6947     09F8  00F8               	movwf	??___fldiv
  6948     09F9  0875               	movf	___fldiv@b+1,w
  6949     09FA  00F9               	movwf	??___fldiv+1
  6950     09FB  0876               	movf	___fldiv@b+2,w
  6951     09FC  00FA               	movwf	??___fldiv+2
  6952     09FD  0877               	movf	___fldiv@b+3,w
  6953     09FE  00FB               	movwf	??___fldiv+3
  6954     09FF  3001               	movlw	1
  6955     0A00  00FC               	movwf	??___fldiv+4
  6956     0A01                     u3505:
  6957     0A01  0D7B               	rlf	??___fldiv+3,w
  6958     0A02  0CFB               	rrf	??___fldiv+3,f
  6959     0A03  0CFA               	rrf	??___fldiv+2,f
  6960     0A04  0CF9               	rrf	??___fldiv+1,f
  6961     0A05  0CF8               	rrf	??___fldiv,f
  6962     0A06                     u3500:
  6963     0A06  0BFC               	decfsz	??___fldiv+4,f
  6964     0A07  2A01               	goto	u3505
  6965     0A08  087B               	movf	??___fldiv+3,w
  6966     0A09  00F7               	movwf	___fldiv@b+3
  6967     0A0A  087A               	movf	??___fldiv+2,w
  6968     0A0B  00F6               	movwf	___fldiv@b+2
  6969     0A0C  0879               	movf	??___fldiv+1,w
  6970     0A0D  00F5               	movwf	___fldiv@b+1
  6971     0A0E  0878               	movf	??___fldiv,w
  6972     0A0F  00F4               	movwf	___fldiv@b
  6973     0A10                     l2504:
  6974     0A10  3001               	movlw	1
  6975     0A11  07A5               	addwf	___fldiv@new_exp,f
  6976     0A12  1803               	skipnc
  6977     0A13  0AA6               	incf	___fldiv@new_exp+1,f
  6978     0A14  3000               	movlw	0
  6979     0A15  07A6               	addwf	___fldiv@new_exp+1,f
  6980     0A16                     l2506:
  6981     0A16  0826               	movf	___fldiv@new_exp+1,w
  6982     0A17  3A80               	xorlw	128
  6983     0A18  00FF               	movwf	btemp+1
  6984     0A19  3080               	movlw	128
  6985     0A1A  027F               	subwf	btemp+1,w
  6986     0A1B  1D03               	skipz
  6987     0A1C  2A1F               	goto	u3515
  6988     0A1D  30FF               	movlw	255
  6989     0A1E  0225               	subwf	___fldiv@new_exp,w
  6990     0A1F                     u3515:
  6991     0A1F  1C03               	skipc
  6992     0A20  2A22               	goto	u3511
  6993     0A21  2A23               	goto	u3510
  6994     0A22                     u3511:
  6995     0A22  2A31               	goto	l2510
  6996     0A23                     u3510:
  6997     0A23                     l2508:
  6998     0A23  30FF               	movlw	255
  6999     0A24  1283               	bcf	3,5	;RP0=0, select bank0
  7000     0A25  1303               	bcf	3,6	;RP1=0, select bank0
  7001     0A26  00A5               	movwf	___fldiv@new_exp
  7002     0A27  3000               	movlw	0
  7003     0A28  00A6               	movwf	___fldiv@new_exp+1
  7004     0A29  3000               	movlw	0
  7005     0A2A  00F7               	movwf	___fldiv@b+3
  7006     0A2B  3000               	movlw	0
  7007     0A2C  00F6               	movwf	___fldiv@b+2
  7008     0A2D  3000               	movlw	0
  7009     0A2E  00F5               	movwf	___fldiv@b+1
  7010     0A2F  3000               	movlw	0
  7011     0A30  00F4               	movwf	___fldiv@b
  7012     0A31                     l2510:
  7013     0A31  1283               	bcf	3,5	;RP0=0, select bank0
  7014     0A32  1303               	bcf	3,6	;RP1=0, select bank0
  7015     0A33  0826               	movf	___fldiv@new_exp+1,w
  7016     0A34  3A80               	xorlw	128
  7017     0A35  00FF               	movwf	btemp+1
  7018     0A36  3080               	movlw	128
  7019     0A37  027F               	subwf	btemp+1,w
  7020     0A38  1D03               	skipz
  7021     0A39  2A3C               	goto	u3525
  7022     0A3A  3001               	movlw	1
  7023     0A3B  0225               	subwf	___fldiv@new_exp,w
  7024     0A3C                     u3525:
  7025     0A3C  1803               	skipnc
  7026     0A3D  2A3F               	goto	u3521
  7027     0A3E  2A40               	goto	u3520
  7028     0A3F                     u3521:
  7029     0A3F  2A4D               	goto	l549
  7030     0A40                     u3520:
  7031     0A40                     l2512:
  7032     0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7033     0A41  1303               	bcf	3,6	;RP1=0, select bank0
  7034     0A42  01A5               	clrf	___fldiv@new_exp
  7035     0A43  01A6               	clrf	___fldiv@new_exp+1
  7036     0A44                     l2514:
  7037     0A44  3000               	movlw	0
  7038     0A45  00F7               	movwf	___fldiv@b+3
  7039     0A46  3000               	movlw	0
  7040     0A47  00F6               	movwf	___fldiv@b+2
  7041     0A48  3000               	movlw	0
  7042     0A49  00F5               	movwf	___fldiv@b+1
  7043     0A4A  3000               	movlw	0
  7044     0A4B  00F4               	movwf	___fldiv@b
  7045     0A4C                     l2516:
  7046     0A4C  01A4               	clrf	___fldiv@sign
  7047     0A4D                     l549:
  7048     0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  7049     0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  7050     0A4F  0825               	movf	___fldiv@new_exp,w
  7051     0A50  00AB               	movwf	___fldiv@bexp
  7052     0A51                     l2518:
  7053     0A51  1C2B               	btfss	___fldiv@bexp,0
  7054     0A52  2A54               	goto	u3531
  7055     0A53  2A55               	goto	u3530
  7056     0A54                     u3531:
  7057     0A54  2A57               	goto	l2522
  7058     0A55                     u3530:
  7059     0A55                     l2520:
  7060     0A55  17F6               	bsf	___fldiv@b+2,7
  7061     0A56  2A59               	goto	l551
  7062     0A57                     l2522:
  7063     0A57  307F               	movlw	127
  7064     0A58  05F6               	andwf	___fldiv@b+2,f
  7065     0A59                     l551:
  7066     0A59  082B               	movf	___fldiv@bexp,w
  7067     0A5A  00F8               	movwf	??___fldiv
  7068     0A5B  1003               	clrc
  7069     0A5C  0C78               	rrf	??___fldiv,w
  7070     0A5D  00F7               	movwf	___fldiv@b+3
  7071     0A5E  0824               	movf	___fldiv@sign,w
  7072     0A5F  04F7               	iorwf	___fldiv@b+3,f
  7073     0A60  28FD               	goto	l2430
  7074     0A61                     l529:
  7075     0A61  0008               	return
  7076     0A62                     __end_of___fldiv:
  7077                           
  7078                           	psect	text25
  7079     1EE1                     __ptext25:	
  7080 ;; *************** function _lcd_string *****************
  7081 ;; Defined at:
  7082 ;;		line 193 in file "main.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  str             2    3[COMMON] PTR const unsigned char 
  7085 ;;		 -> STR_2(14), temp_str(16), 
  7086 ;;  len             1    5[COMMON] unsigned char 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  i               1    6[COMMON] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7098 ;;      Params:         3       0       0       0       0
  7099 ;;      Locals:         1       0       0       0       0
  7100 ;;      Temps:          0       0       0       0       0
  7101 ;;      Totals:         4       0       0       0       0
  7102 ;;Total ram usage:        4 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; Hardware stack levels required when called: 1
  7105 ;; This function calls:
  7106 ;;		_lcd_data
  7107 ;; This function is called by:
  7108 ;;		_main
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112     1EE1                     _lcd_string:	
  7113                           ;psect for function _lcd_string
  7114                           
  7115     1EE1                     l3216:	
  7116                           ;incstack = 0
  7117                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7118                           
  7119                           
  7120                           ;main.c: 194:     for (unsigned char i = 0; i < len; ++i) {
  7121     1EE1  01F6               	clrf	lcd_string@i
  7122     1EE2  2EF8               	goto	l3222
  7123     1EE3                     l3218:
  7124                           
  7125                           ;main.c: 195:         lcd_data((unsigned char)str[i]);
  7126     1EE3  0876               	movf	lcd_string@i,w
  7127     1EE4  0773               	addwf	lcd_string@str,w
  7128     1EE5  0084               	movwf	4
  7129     1EE6  0874               	movf	lcd_string@str+1,w
  7130     1EE7  1803               	skipnc
  7131     1EE8  0A74               	incf	lcd_string@str+1,w
  7132     1EE9  1283               	bcf	3,5	;RP0=0, select bank0
  7133     1EEA  1303               	bcf	3,6	;RP1=0, select bank0
  7134     1EEB  00FF               	movwf	btemp+1
  7135     1EEC  160A  118A  2000  160A  158A  	fcall	stringtab
  7136     1EF1  160A  118A  20F9  160A  158A  	fcall	_lcd_data
  7137     1EF6                     l3220:
  7138                           
  7139                           ;main.c: 196:     }
  7140     1EF6  3001               	movlw	1
  7141     1EF7  07F6               	addwf	lcd_string@i,f
  7142     1EF8                     l3222:
  7143     1EF8  0875               	movf	lcd_string@len,w
  7144     1EF9  0276               	subwf	lcd_string@i,w
  7145     1EFA  1C03               	skipc
  7146     1EFB  2EFD               	goto	u4711
  7147     1EFC  2EFE               	goto	u4710
  7148     1EFD                     u4711:
  7149     1EFD  2EE3               	goto	l3218
  7150     1EFE                     u4710:
  7151     1EFE                     l81:
  7152     1EFE  0008               	return
  7153     1EFF                     __end_of_lcd_string:
  7154                           
  7155                           	psect	text26
  7156     10F9                     __ptext26:	
  7157 ;; *************** function _lcd_data *****************
  7158 ;; Defined at:
  7159 ;;		line 180 in file "main.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  data            1    wreg     unsigned char 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;  data            1    2[COMMON] unsigned char 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7173 ;;      Params:         0       0       0       0       0
  7174 ;;      Locals:         1       0       0       0       0
  7175 ;;      Temps:          2       0       0       0       0
  7176 ;;      Totals:         3       0       0       0       0
  7177 ;;Total ram usage:        3 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_lcd_string
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186     10F9                     _lcd_data:	
  7187                           ;psect for function _lcd_data
  7188                           
  7189                           
  7190                           ;incstack = 0
  7191                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  7192                           ;lcd_data@data stored from wreg
  7193     10F9  00F2               	movwf	lcd_data@data
  7194     10FA                     l3146:
  7195                           
  7196                           ;main.c: 181:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 0;
  7197     10FA  1283               	bcf	3,5	;RP0=0, select bank0
  7198     10FB  1303               	bcf	3,6	;RP1=0, select bank0
  7199     10FC  1407               	bsf	7,0	;volatile
  7200     10FD  1087               	bcf	7,1	;volatile
  7201     10FE                     l3148:
  7202                           
  7203                           ;main.c: 182:     PORTD = (data & 0xF0);
  7204     10FE  0872               	movf	lcd_data@data,w
  7205     10FF  39F0               	andlw	240
  7206     1100  0088               	movwf	8	;volatile
  7207     1101                     l3150:
  7208                           
  7209                           ;main.c: 183:     PORTCbits.RC2 = 1;
  7210     1101  1507               	bsf	7,2	;volatile
  7211     1102                     l3152:
  7212                           
  7213                           ;main.c: 184:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7214     1102  300D               	movlw	13
  7215     1103  00F1               	movwf	??_lcd_data+1
  7216     1104  30FB               	movlw	251
  7217     1105  00F0               	movwf	??_lcd_data
  7218     1106                     u4887:
  7219     1106  0BF0               	decfsz	??_lcd_data,f
  7220     1107  2906               	goto	u4887
  7221     1108  0BF1               	decfsz	??_lcd_data+1,f
  7222     1109  2906               	goto	u4887
  7223     110A  290B               	nop2
  7224     110B                     l3154:
  7225                           
  7226                           ;main.c: 185:     PORTCbits.RC2 = 0;
  7227     110B  1283               	bcf	3,5	;RP0=0, select bank0
  7228     110C  1303               	bcf	3,6	;RP1=0, select bank0
  7229     110D  1107               	bcf	7,2	;volatile
  7230     110E                     l3156:
  7231                           
  7232                           ;main.c: 187:     PORTD = ((data << 4) & 0xF0);
  7233     110E  0872               	movf	lcd_data@data,w
  7234     110F  00F0               	movwf	??_lcd_data
  7235     1110  3003               	movlw	3
  7236     1111                     u4665:
  7237     1111  1003               	clrc
  7238     1112  0DF0               	rlf	??_lcd_data,f
  7239     1113  3EFF               	addlw	-1
  7240     1114  1D03               	skipz
  7241     1115  2911               	goto	u4665
  7242     1116  1003               	clrc
  7243     1117  0D70               	rlf	??_lcd_data,w
  7244     1118  39F0               	andlw	240
  7245     1119  0088               	movwf	8	;volatile
  7246     111A                     l3158:
  7247                           
  7248                           ;main.c: 188:     PORTCbits.RC2 = 1;
  7249     111A  1507               	bsf	7,2	;volatile
  7250     111B                     l3160:
  7251                           
  7252                           ;main.c: 189:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7253     111B  300D               	movlw	13
  7254     111C  00F1               	movwf	??_lcd_data+1
  7255     111D  30FB               	movlw	251
  7256     111E  00F0               	movwf	??_lcd_data
  7257     111F                     u4897:
  7258     111F  0BF0               	decfsz	??_lcd_data,f
  7259     1120  291F               	goto	u4897
  7260     1121  0BF1               	decfsz	??_lcd_data+1,f
  7261     1122  291F               	goto	u4897
  7262     1123  2924               	nop2
  7263     1124                     l3162:
  7264                           
  7265                           ;main.c: 190:     PORTCbits.RC2 = 0;
  7266     1124  1283               	bcf	3,5	;RP0=0, select bank0
  7267     1125  1303               	bcf	3,6	;RP1=0, select bank0
  7268     1126  1107               	bcf	7,2	;volatile
  7269     1127                     l75:
  7270     1127  0008               	return
  7271     1128                     __end_of_lcd_data:
  7272                           
  7273                           	psect	text27
  7274     1FAF                     __ptext27:	
  7275 ;; *************** function _lcd_initialize *****************
  7276 ;; Defined at:
  7277 ;;		line 171 in file "main.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;		None
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0, pclath, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7291 ;;      Params:         0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0
  7293 ;;      Temps:          2       0       0       0       0
  7294 ;;      Totals:         2       0       0       0       0
  7295 ;;Total ram usage:        2 bytes
  7296 ;; Hardware stack levels used: 1
  7297 ;; Hardware stack levels required when called: 1
  7298 ;; This function calls:
  7299 ;;		_lcd_command
  7300 ;; This function is called by:
  7301 ;;		_main
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305     1FAF                     _lcd_initialize:	
  7306                           ;psect for function _lcd_initialize
  7307                           
  7308     1FAF                     l3174:	
  7309                           ;incstack = 0
  7310                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  7311                           
  7312                           
  7313                           ;main.c: 172:     lcd_command(0x02);
  7314     1FAF  3002               	movlw	2
  7315     1FB0  160A  118A  20CA  160A  158A  	fcall	_lcd_command
  7316                           
  7317                           ;main.c: 173:     lcd_command(0x28);
  7318     1FB5  3028               	movlw	40
  7319     1FB6  160A  118A  20CA  160A  158A  	fcall	_lcd_command
  7320                           
  7321                           ;main.c: 174:     lcd_command(0x06);
  7322     1FBB  3006               	movlw	6
  7323     1FBC  160A  118A  20CA  160A  158A  	fcall	_lcd_command
  7324                           
  7325                           ;main.c: 175:     lcd_command(0x0C);
  7326     1FC1  300C               	movlw	12
  7327     1FC2  160A  118A  20CA  160A  158A  	fcall	_lcd_command
  7328                           
  7329                           ;main.c: 176:     lcd_command(0x01);
  7330     1FC7  3001               	movlw	1
  7331     1FC8  160A  118A  20CA  160A  158A  	fcall	_lcd_command
  7332     1FCD                     l3176:
  7333                           
  7334                           ;main.c: 177:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7335     1FCD  300D               	movlw	13
  7336     1FCE  00F4               	movwf	??_lcd_initialize+1
  7337     1FCF  30FB               	movlw	251
  7338     1FD0  00F3               	movwf	??_lcd_initialize
  7339     1FD1                     u4907:
  7340     1FD1  0BF3               	decfsz	??_lcd_initialize,f
  7341     1FD2  2FD1               	goto	u4907
  7342     1FD3  0BF4               	decfsz	??_lcd_initialize+1,f
  7343     1FD4  2FD1               	goto	u4907
  7344     1FD5  2FD6               	nop2
  7345     1FD6                     l72:
  7346     1FD6  0008               	return
  7347     1FD7                     __end_of_lcd_initialize:
  7348                           
  7349                           	psect	text28
  7350     10CA                     __ptext28:	
  7351 ;; *************** function _lcd_command *****************
  7352 ;; Defined at:
  7353 ;;		line 199 in file "main.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  cmd             1    wreg     unsigned char 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  cmd             1    2[COMMON] unsigned char 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7367 ;;      Params:         0       0       0       0       0
  7368 ;;      Locals:         1       0       0       0       0
  7369 ;;      Temps:          2       0       0       0       0
  7370 ;;      Totals:         3       0       0       0       0
  7371 ;;Total ram usage:        3 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_main
  7377 ;;		_lcd_initialize
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381     10CA                     _lcd_command:	
  7382                           ;psect for function _lcd_command
  7383                           
  7384                           
  7385                           ;incstack = 0
  7386                           ; Regs used in _lcd_command: [wreg+status,2+status,0]
  7387                           ;lcd_command@cmd stored from wreg
  7388     10CA  00F2               	movwf	lcd_command@cmd
  7389     10CB                     l3082:
  7390                           
  7391                           ;main.c: 200:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0;
  7392     10CB  1283               	bcf	3,5	;RP0=0, select bank0
  7393     10CC  1303               	bcf	3,6	;RP1=0, select bank0
  7394     10CD  1007               	bcf	7,0	;volatile
  7395     10CE  1087               	bcf	7,1	;volatile
  7396     10CF                     l3084:
  7397                           
  7398                           ;main.c: 201:     PORTD = (cmd & 0xF0);
  7399     10CF  0872               	movf	lcd_command@cmd,w
  7400     10D0  39F0               	andlw	240
  7401     10D1  0088               	movwf	8	;volatile
  7402     10D2                     l3086:
  7403                           
  7404                           ;main.c: 202:     PORTCbits.RC2 = 1;
  7405     10D2  1507               	bsf	7,2	;volatile
  7406     10D3                     l3088:
  7407                           
  7408                           ;main.c: 203:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7409     10D3  300D               	movlw	13
  7410     10D4  00F1               	movwf	??_lcd_command+1
  7411     10D5  30FB               	movlw	251
  7412     10D6  00F0               	movwf	??_lcd_command
  7413     10D7                     u4917:
  7414     10D7  0BF0               	decfsz	??_lcd_command,f
  7415     10D8  28D7               	goto	u4917
  7416     10D9  0BF1               	decfsz	??_lcd_command+1,f
  7417     10DA  28D7               	goto	u4917
  7418     10DB  28DC               	nop2
  7419     10DC                     l3090:
  7420                           
  7421                           ;main.c: 204:     PORTCbits.RC2 = 0;
  7422     10DC  1283               	bcf	3,5	;RP0=0, select bank0
  7423     10DD  1303               	bcf	3,6	;RP1=0, select bank0
  7424     10DE  1107               	bcf	7,2	;volatile
  7425     10DF                     l3092:
  7426                           
  7427                           ;main.c: 206:     PORTD = ((cmd << 4) & 0xF0);
  7428     10DF  0872               	movf	lcd_command@cmd,w
  7429     10E0  00F0               	movwf	??_lcd_command
  7430     10E1  3003               	movlw	3
  7431     10E2                     u4605:
  7432     10E2  1003               	clrc
  7433     10E3  0DF0               	rlf	??_lcd_command,f
  7434     10E4  3EFF               	addlw	-1
  7435     10E5  1D03               	skipz
  7436     10E6  28E2               	goto	u4605
  7437     10E7  1003               	clrc
  7438     10E8  0D70               	rlf	??_lcd_command,w
  7439     10E9  39F0               	andlw	240
  7440     10EA  0088               	movwf	8	;volatile
  7441     10EB                     l3094:
  7442                           
  7443                           ;main.c: 207:     PORTCbits.RC2 = 1;
  7444     10EB  1507               	bsf	7,2	;volatile
  7445     10EC                     l3096:
  7446                           
  7447                           ;main.c: 208:     _delay((unsigned long)((2)*(20000000/4000.0)));
  7448     10EC  300D               	movlw	13
  7449     10ED  00F1               	movwf	??_lcd_command+1
  7450     10EE  30FB               	movlw	251
  7451     10EF  00F0               	movwf	??_lcd_command
  7452     10F0                     u4927:
  7453     10F0  0BF0               	decfsz	??_lcd_command,f
  7454     10F1  28F0               	goto	u4927
  7455     10F2  0BF1               	decfsz	??_lcd_command+1,f
  7456     10F3  28F0               	goto	u4927
  7457     10F4  28F5               	nop2
  7458     10F5                     l3098:
  7459                           
  7460                           ;main.c: 209:     PORTCbits.RC2 = 0;
  7461     10F5  1283               	bcf	3,5	;RP0=0, select bank0
  7462     10F6  1303               	bcf	3,6	;RP1=0, select bank0
  7463     10F7  1107               	bcf	7,2	;volatile
  7464     10F8                     l84:
  7465     10F8  0008               	return
  7466     10F9                     __end_of_lcd_command:
  7467                           
  7468                           	psect	text29
  7469     1176                     __ptext29:	
  7470 ;; *************** function _ds18b20_read *****************
  7471 ;; Defined at:
  7472 ;;		line 146 in file "main.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  raw_temp_val    1    4[COMMON] PTR int 
  7475 ;;		 -> raw_temp(2), 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;  temp_h          1    6[COMMON] unsigned char 
  7478 ;;  temp_l          1    5[COMMON] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      unsigned char 
  7481 ;; Registers used:
  7482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7488 ;;      Params:         1       0       0       0       0
  7489 ;;      Locals:         2       0       0       0       0
  7490 ;;      Temps:          0       0       0       0       0
  7491 ;;      Totals:         3       0       0       0       0
  7492 ;;Total ram usage:        3 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 2
  7495 ;; This function calls:
  7496 ;;		_ds18b20_read_byte
  7497 ;;		_ds18b20_start
  7498 ;;		_ds18b20_write_byte
  7499 ;; This function is called by:
  7500 ;;		_main
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504     1176                     _ds18b20_read:	
  7505                           ;psect for function _ds18b20_read
  7506                           
  7507     1176                     l3178:	
  7508                           ;incstack = 0
  7509                           ; Regs used in _ds18b20_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7510                           
  7511                           
  7512                           ;main.c: 147:     unsigned char temp_l, temp_h;;main.c: 149:     if(!ds18b20_start())
  7513     1176  160A  118A  2070  160A  118A  	fcall	_ds18b20_start
  7514     117B  3A00               	xorlw	0
  7515     117C  1D03               	skipz
  7516     117D  297F               	goto	u4681
  7517     117E  2980               	goto	u4680
  7518     117F                     u4681:
  7519     117F  2982               	goto	l3184
  7520     1180                     u4680:
  7521     1180                     l3180:
  7522                           
  7523                           ;main.c: 150:         return 0;
  7524     1180  3000               	movlw	0
  7525     1181  29C4               	goto	l65
  7526     1182                     l3184:
  7527                           
  7528                           ;main.c: 152:     ds18b20_write_byte(0xCC);
  7529     1182  30CC               	movlw	204
  7530     1183  160A  158A  2682  160A  118A  	fcall	_ds18b20_write_byte
  7531                           
  7532                           ;main.c: 153:     ds18b20_write_byte(0x44);
  7533     1188  3044               	movlw	68
  7534     1189  160A  158A  2682  160A  118A  	fcall	_ds18b20_write_byte
  7535     118E                     l3186:	
  7536                           ;main.c: 155:     while(!ds18b20_read_byte());
  7537                           
  7538     118E  160A  158A  26AB  160A  118A  	fcall	_ds18b20_read_byte
  7539     1193  3A00               	xorlw	0
  7540     1194  1903               	skipnz
  7541     1195  2997               	goto	u4691
  7542     1196  2998               	goto	u4690
  7543     1197                     u4691:
  7544     1197  298E               	goto	l3186
  7545     1198                     u4690:
  7546     1198                     l3188:
  7547                           
  7548                           ;main.c: 157:     if(!ds18b20_start())
  7549     1198  160A  118A  2070  160A  118A  	fcall	_ds18b20_start
  7550     119D  3A00               	xorlw	0
  7551     119E  1D03               	skipz
  7552     119F  29A1               	goto	u4701
  7553     11A0  29A2               	goto	u4700
  7554     11A1                     u4701:
  7555     11A1  29A3               	goto	l3194
  7556     11A2                     u4700:
  7557     11A2  2980               	goto	l3180
  7558     11A3                     l3194:
  7559                           
  7560                           ;main.c: 160:     ds18b20_write_byte(0xCC);
  7561     11A3  30CC               	movlw	204
  7562     11A4  160A  158A  2682  160A  118A  	fcall	_ds18b20_write_byte
  7563                           
  7564                           ;main.c: 161:     ds18b20_write_byte(0xBE);
  7565     11A9  30BE               	movlw	190
  7566     11AA  160A  158A  2682  160A  118A  	fcall	_ds18b20_write_byte
  7567                           
  7568                           ;main.c: 163:     temp_l = ds18b20_read_byte();
  7569     11AF  160A  158A  26AB  160A  118A  	fcall	_ds18b20_read_byte
  7570     11B4  00F5               	movwf	ds18b20_read@temp_l
  7571                           
  7572                           ;main.c: 164:     temp_h = ds18b20_read_byte();
  7573     11B5  160A  158A  26AB  160A  118A  	fcall	_ds18b20_read_byte
  7574     11BA  00F6               	movwf	ds18b20_read@temp_h
  7575     11BB                     l3196:
  7576                           
  7577                           ;main.c: 166:     *raw_temp_value = (temp_h << 8) | temp_l;
  7578     11BB  0874               	movf	ds18b20_read@raw_temp_value,w
  7579     11BC  0084               	movwf	4
  7580     11BD  0875               	movf	ds18b20_read@temp_l,w
  7581     11BE  1383               	bcf	3,7	;select IRP bank0
  7582     11BF  0080               	movwf	0
  7583     11C0  0A84               	incf	4,f
  7584     11C1  0876               	movf	ds18b20_read@temp_h,w
  7585     11C2  0080               	movwf	0
  7586     11C3                     l3198:
  7587                           
  7588                           ;main.c: 168:     return 1;
  7589     11C3  3001               	movlw	1
  7590     11C4                     l65:
  7591     11C4  0008               	return
  7592     11C5                     __end_of_ds18b20_read:
  7593                           
  7594                           	psect	text30
  7595     1E82                     __ptext30:	
  7596 ;; *************** function _ds18b20_write_byte *****************
  7597 ;; Defined at:
  7598 ;;		line 110 in file "main.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  byte            1    wreg     unsigned char 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  byte            1    2[COMMON] unsigned char 
  7603 ;;  i               1    3[COMMON] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0, pclath, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7613 ;;      Params:         0       0       0       0       0
  7614 ;;      Locals:         2       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0
  7616 ;;      Totals:         2       0       0       0       0
  7617 ;;Total ram usage:        2 bytes
  7618 ;; Hardware stack levels used: 1
  7619 ;; Hardware stack levels required when called: 1
  7620 ;; This function calls:
  7621 ;;		_ds18b20_write_bit
  7622 ;; This function is called by:
  7623 ;;		_ds18b20_read
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627     1E82                     _ds18b20_write_byte:	
  7628                           ;psect for function _ds18b20_write_byte
  7629                           
  7630                           
  7631                           ;incstack = 0
  7632                           ; Regs used in _ds18b20_write_byte: [wreg+status,2+status,0+pclath+cstack]
  7633                           ;ds18b20_write_byte@byte stored from wreg
  7634     1E82  00F2               	movwf	ds18b20_write_byte@byte
  7635     1E83                     l3112:
  7636                           
  7637                           ;main.c: 111:     unsigned char i;;main.c: 112:     for(i = 0; i < 8; i++) {
  7638     1E83  01F3               	clrf	ds18b20_write_byte@i
  7639     1E84                     l3118:
  7640                           
  7641                           ;main.c: 113:         ds18b20_write_bit(byte & 0x01);
  7642     1E84  0872               	movf	ds18b20_write_byte@byte,w
  7643     1E85  3901               	andlw	1
  7644     1E86  160A  158A  26FF  160A  158A  	fcall	_ds18b20_write_bit
  7645     1E8B                     l3120:
  7646                           
  7647                           ;main.c: 114:         byte >>= 1;
  7648     1E8B  1003               	clrc
  7649     1E8C  0CF2               	rrf	ds18b20_write_byte@byte,f
  7650     1E8D                     l3122:
  7651                           
  7652                           ;main.c: 115:     }
  7653     1E8D  3001               	movlw	1
  7654     1E8E  07F3               	addwf	ds18b20_write_byte@i,f
  7655     1E8F                     l3124:
  7656     1E8F  3008               	movlw	8
  7657     1E90  0273               	subwf	ds18b20_write_byte@i,w
  7658     1E91  1C03               	skipc
  7659     1E92  2E94               	goto	u4631
  7660     1E93  2E95               	goto	u4630
  7661     1E94                     u4631:
  7662     1E94  2E84               	goto	l3118
  7663     1E95                     u4630:
  7664     1E95                     l52:
  7665     1E95  0008               	return
  7666     1E96                     __end_of_ds18b20_write_byte:
  7667                           
  7668                           	psect	text31
  7669     1EFF                     __ptext31:	
  7670 ;; *************** function _ds18b20_write_bit *****************
  7671 ;; Defined at:
  7672 ;;		line 98 in file "main.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  bit             1    wreg     unsigned char 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  bit             1    1[COMMON] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7686 ;;      Params:         0       0       0       0       0
  7687 ;;      Locals:         1       0       0       0       0
  7688 ;;      Temps:          1       0       0       0       0
  7689 ;;      Totals:         2       0       0       0       0
  7690 ;;Total ram usage:        2 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_ds18b20_write_byte
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699     1EFF                     _ds18b20_write_bit:	
  7700                           ;psect for function _ds18b20_write_bit
  7701                           
  7702                           
  7703                           ;incstack = 0
  7704                           ; Regs used in _ds18b20_write_bit: [wreg+status,2+status,0]
  7705                           ;ds18b20_write_bit@bit stored from wreg
  7706     1EFF  00F1               	movwf	ds18b20_write_bit@bit
  7707     1F00                     l2992:
  7708                           
  7709                           ;main.c: 99:     TRISBbits.TRISB1 = 0;
  7710     1F00  1683               	bsf	3,5	;RP0=1, select bank1
  7711     1F01  1303               	bcf	3,6	;RP1=0, select bank1
  7712     1F02  1086               	bcf	6,1	;volatile
  7713                           
  7714                           ;main.c: 100:     PORTBbits.RB1 = 0;
  7715     1F03  1283               	bcf	3,5	;RP0=0, select bank0
  7716     1F04  1303               	bcf	3,6	;RP1=0, select bank0
  7717     1F05  1086               	bcf	6,1	;volatile
  7718     1F06                     l2994:
  7719                           
  7720                           ;main.c: 101:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  7721     1F06  3003               	movlw	3
  7722     1F07  00F0               	movwf	??_ds18b20_write_bit
  7723     1F08                     u4937:
  7724     1F08  0BF0               	decfsz	??_ds18b20_write_bit,f
  7725     1F09  2F08               	goto	u4937
  7726     1F0A                     l2996:
  7727                           
  7728                           ;main.c: 103:     if(bit) PORTBbits.RB1 = 1;
  7729     1F0A  0871               	movf	ds18b20_write_bit@bit,w
  7730     1F0B  1903               	btfsc	3,2
  7731     1F0C  2F0E               	goto	u4551
  7732     1F0D  2F0F               	goto	u4550
  7733     1F0E                     u4551:
  7734     1F0E  2F12               	goto	l3000
  7735     1F0F                     u4550:
  7736     1F0F                     l2998:
  7737     1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  7738     1F10  1303               	bcf	3,6	;RP1=0, select bank0
  7739     1F11  1486               	bsf	6,1	;volatile
  7740     1F12                     l3000:
  7741                           
  7742                           ;main.c: 104:     _delay((unsigned long)((80)*(20000000/4000000.0)));
  7743     1F12  3085               	movlw	133
  7744     1F13  00F0               	movwf	??_ds18b20_write_bit
  7745     1F14                     u4947:
  7746     1F14  0BF0               	decfsz	??_ds18b20_write_bit,f
  7747     1F15  2F14               	goto	u4947
  7748     1F16                     l3002:
  7749                           
  7750                           ;main.c: 106:     TRISBbits.TRISB1 = 1;
  7751     1F16  1683               	bsf	3,5	;RP0=1, select bank1
  7752     1F17  1303               	bcf	3,6	;RP1=0, select bank1
  7753     1F18  1486               	bsf	6,1	;volatile
  7754                           
  7755                           ;main.c: 107:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  7756     1F19  3003               	movlw	3
  7757     1F1A  00F0               	movwf	??_ds18b20_write_bit
  7758     1F1B                     u4957:
  7759     1F1B  0BF0               	decfsz	??_ds18b20_write_bit,f
  7760     1F1C  2F1B               	goto	u4957
  7761     1F1D                     l47:
  7762     1F1D  0008               	return
  7763     1F1E                     __end_of_ds18b20_write_bit:
  7764                           
  7765                           	psect	text32
  7766     1070                     __ptext32:	
  7767 ;; *************** function _ds18b20_start *****************
  7768 ;; Defined at:
  7769 ;;		line 82 in file "main.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  response        1    2[COMMON] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      unsigned char 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7783 ;;      Params:         0       0       0       0       0
  7784 ;;      Locals:         1       0       0       0       0
  7785 ;;      Temps:          2       0       0       0       0
  7786 ;;      Totals:         3       0       0       0       0
  7787 ;;Total ram usage:        3 bytes
  7788 ;; Hardware stack levels used: 1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_ds18b20_read
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796     1070                     _ds18b20_start:	
  7797                           ;psect for function _ds18b20_start
  7798                           
  7799     1070                     l3100:	
  7800                           ;incstack = 0
  7801                           ; Regs used in _ds18b20_start: [wreg+status,2+status,0]
  7802                           
  7803                           
  7804                           ;main.c: 83:     unsigned char response;;main.c: 85:     TRISBbits.TRISB1 = 0;
  7805     1070  1683               	bsf	3,5	;RP0=1, select bank1
  7806     1071  1303               	bcf	3,6	;RP1=0, select bank1
  7807     1072  1086               	bcf	6,1	;volatile
  7808                           
  7809                           ;main.c: 86:     PORTBbits.RB1 = 0;
  7810     1073  1283               	bcf	3,5	;RP0=0, select bank0
  7811     1074  1303               	bcf	3,6	;RP1=0, select bank0
  7812     1075  1086               	bcf	6,1	;volatile
  7813     1076                     l3102:
  7814                           
  7815                           ;main.c: 87:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  7816     1076  3004               	movlw	4
  7817     1077  00F1               	movwf	??_ds18b20_start+1
  7818     1078  303D               	movlw	61
  7819     1079  00F0               	movwf	??_ds18b20_start
  7820     107A                     u4967:
  7821     107A  0BF0               	decfsz	??_ds18b20_start,f
  7822     107B  287A               	goto	u4967
  7823     107C  0BF1               	decfsz	??_ds18b20_start+1,f
  7824     107D  287A               	goto	u4967
  7825     107E  287F               	nop2
  7826     107F                     l3104:
  7827                           
  7828                           ;main.c: 89:     TRISBbits.TRISB1 = 1;
  7829     107F  1683               	bsf	3,5	;RP0=1, select bank1
  7830     1080  1303               	bcf	3,6	;RP1=0, select bank1
  7831     1081  1486               	bsf	6,1	;volatile
  7832                           
  7833                           ;main.c: 90:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7834     1082  30A6               	movlw	166
  7835     1083  00F0               	movwf	??_ds18b20_start
  7836     1084                     u4977:
  7837     1084  0BF0               	decfsz	??_ds18b20_start,f
  7838     1085  2884               	goto	u4977
  7839     1086  0000               	nop
  7840     1087                     l3106:
  7841                           
  7842                           ;main.c: 92:     response = PORTBbits.RB1;
  7843     1087  1283               	bcf	3,5	;RP0=0, select bank0
  7844     1088  1303               	bcf	3,6	;RP1=0, select bank0
  7845     1089  0C06               	rrf	6,w	;volatile
  7846     108A  3901               	andlw	1
  7847     108B  00F2               	movwf	ds18b20_start@response
  7848     108C                     l3108:
  7849                           
  7850                           ;main.c: 93:     _delay((unsigned long)((400)*(20000000/4000000.0)));
  7851     108C  3003               	movlw	3
  7852     108D  00F1               	movwf	??_ds18b20_start+1
  7853     108E  3097               	movlw	151
  7854     108F  00F0               	movwf	??_ds18b20_start
  7855     1090                     u4987:
  7856     1090  0BF0               	decfsz	??_ds18b20_start,f
  7857     1091  2890               	goto	u4987
  7858     1092  0BF1               	decfsz	??_ds18b20_start+1,f
  7859     1093  2890               	goto	u4987
  7860     1094  2895               	nop2
  7861                           
  7862                           ;main.c: 95:     return !response;
  7863     1095  0872               	movf	ds18b20_start@response,w
  7864     1096  1903               	btfsc	3,2
  7865     1097  2899               	goto	u4611
  7866     1098  289B               	goto	u4610
  7867     1099                     u4611:
  7868     1099  3001               	movlw	1
  7869     109A  289C               	goto	u4620
  7870     109B                     u4610:
  7871     109B  3000               	movlw	0
  7872     109C                     u4620:
  7873     109C                     l43:
  7874     109C  0008               	return
  7875     109D                     __end_of_ds18b20_start:
  7876                           
  7877                           	psect	text33
  7878     1EAB                     __ptext33:	
  7879 ;; *************** function _ds18b20_read_byte *****************
  7880 ;; Defined at:
  7881 ;;		line 134 in file "main.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  i               1    3[COMMON] unsigned char 
  7886 ;;  byte            1    2[COMMON] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      unsigned char 
  7889 ;; Registers used:
  7890 ;;		wreg, status,2, status,0, pclath, cstack
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7896 ;;      Params:         0       0       0       0       0
  7897 ;;      Locals:         2       0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0
  7899 ;;      Totals:         2       0       0       0       0
  7900 ;;Total ram usage:        2 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 1
  7903 ;; This function calls:
  7904 ;;		_ds18b20_read_bit
  7905 ;; This function is called by:
  7906 ;;		_ds18b20_read
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910     1EAB                     _ds18b20_read_byte:	
  7911                           ;psect for function _ds18b20_read_byte
  7912                           
  7913     1EAB                     l3126:	
  7914                           ;incstack = 0
  7915                           ; Regs used in _ds18b20_read_byte: [wreg+status,2+status,0+pclath+cstack]
  7916                           
  7917                           
  7918                           ;main.c: 135:     unsigned char i, byte = 0;
  7919     1EAB  01F2               	clrf	ds18b20_read_byte@byte
  7920                           
  7921                           ;main.c: 137:     for(i = 0; i < 8; i++) {
  7922     1EAC  01F3               	clrf	ds18b20_read_byte@i
  7923     1EAD                     l3132:
  7924                           
  7925                           ;main.c: 138:         byte >>= 1;
  7926     1EAD  1003               	clrc
  7927     1EAE  0CF2               	rrf	ds18b20_read_byte@byte,f
  7928     1EAF                     l3134:
  7929                           
  7930                           ;main.c: 139:         if(ds18b20_read_bit())
  7931     1EAF  160A  158A  26C4  160A  158A  	fcall	_ds18b20_read_bit
  7932     1EB4  3A00               	xorlw	0
  7933     1EB5  1903               	skipnz
  7934     1EB6  2EB8               	goto	u4641
  7935     1EB7  2EB9               	goto	u4640
  7936     1EB8                     u4641:
  7937     1EB8  2EBA               	goto	l3138
  7938     1EB9                     u4640:
  7939     1EB9                     l3136:
  7940                           
  7941                           ;main.c: 140:             byte |= 0x80;
  7942     1EB9  17F2               	bsf	ds18b20_read_byte@byte,7
  7943     1EBA                     l3138:
  7944                           
  7945                           ;main.c: 141:     }
  7946     1EBA  3001               	movlw	1
  7947     1EBB  07F3               	addwf	ds18b20_read_byte@i,f
  7948     1EBC                     l3140:
  7949     1EBC  3008               	movlw	8
  7950     1EBD  0273               	subwf	ds18b20_read_byte@i,w
  7951     1EBE  1C03               	skipc
  7952     1EBF  2EC1               	goto	u4651
  7953     1EC0  2EC2               	goto	u4650
  7954     1EC1                     u4651:
  7955     1EC1  2EAD               	goto	l3132
  7956     1EC2                     u4650:
  7957     1EC2                     l3142:
  7958                           
  7959                           ;main.c: 143:     return byte;
  7960     1EC2  0872               	movf	ds18b20_read_byte@byte,w
  7961     1EC3                     l61:
  7962     1EC3  0008               	return
  7963     1EC4                     __end_of_ds18b20_read_byte:
  7964                           
  7965                           	psect	text34
  7966     1EC4                     __ptext34:	
  7967 ;; *************** function _ds18b20_read_bit *****************
  7968 ;; Defined at:
  7969 ;;		line 118 in file "main.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  bit             1    1[COMMON] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      unsigned char 
  7976 ;; Registers used:
  7977 ;;		wreg, status,2, status,0
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7983 ;;      Params:         0       0       0       0       0
  7984 ;;      Locals:         1       0       0       0       0
  7985 ;;      Temps:          1       0       0       0       0
  7986 ;;      Totals:         2       0       0       0       0
  7987 ;;Total ram usage:        2 bytes
  7988 ;; Hardware stack levels used: 1
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_ds18b20_read_byte
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996     1EC4                     _ds18b20_read_bit:	
  7997                           ;psect for function _ds18b20_read_bit
  7998                           
  7999     1EC4                     l3004:	
  8000                           ;incstack = 0
  8001                           ; Regs used in _ds18b20_read_bit: [wreg+status,2+status,0]
  8002                           
  8003                           
  8004                           ;main.c: 119:     unsigned char bit;;main.c: 121:     TRISBbits.TRISB1 = 0;
  8005     1EC4  1683               	bsf	3,5	;RP0=1, select bank1
  8006     1EC5  1303               	bcf	3,6	;RP1=0, select bank1
  8007     1EC6  1086               	bcf	6,1	;volatile
  8008                           
  8009                           ;main.c: 122:     PORTBbits.RB1 = 0;
  8010     1EC7  1283               	bcf	3,5	;RP0=0, select bank0
  8011     1EC8  1303               	bcf	3,6	;RP1=0, select bank0
  8012     1EC9  1086               	bcf	6,1	;volatile
  8013     1ECA                     l3006:
  8014                           
  8015                           ;main.c: 123:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  8016     1ECA  3003               	movlw	3
  8017     1ECB  00F0               	movwf	??_ds18b20_read_bit
  8018     1ECC                     u4997:
  8019     1ECC  0BF0               	decfsz	??_ds18b20_read_bit,f
  8020     1ECD  2ECC               	goto	u4997
  8021     1ECE                     l3008:
  8022                           
  8023                           ;main.c: 125:     TRISBbits.TRISB1 = 1;
  8024     1ECE  1683               	bsf	3,5	;RP0=1, select bank1
  8025     1ECF  1303               	bcf	3,6	;RP1=0, select bank1
  8026     1ED0  1486               	bsf	6,1	;volatile
  8027                           
  8028                           ;main.c: 126:     _delay((unsigned long)((5)*(20000000/4000000.0)));
  8029     1ED1  3008               	movlw	8
  8030     1ED2  00F0               	movwf	??_ds18b20_read_bit
  8031     1ED3                     u5007:
  8032     1ED3  0BF0               	decfsz	??_ds18b20_read_bit,f
  8033     1ED4  2ED3               	goto	u5007
  8034     1ED5                     l3010:
  8035                           
  8036                           ;main.c: 128:     bit = PORTBbits.RB1;
  8037     1ED5  1283               	bcf	3,5	;RP0=0, select bank0
  8038     1ED6  1303               	bcf	3,6	;RP1=0, select bank0
  8039     1ED7  0C06               	rrf	6,w	;volatile
  8040     1ED8  3901               	andlw	1
  8041     1ED9  00F1               	movwf	ds18b20_read_bit@bit
  8042     1EDA                     l3012:
  8043                           
  8044                           ;main.c: 129:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8045     1EDA  30A6               	movlw	166
  8046     1EDB  00F0               	movwf	??_ds18b20_read_bit
  8047     1EDC                     u5017:
  8048     1EDC  0BF0               	decfsz	??_ds18b20_read_bit,f
  8049     1EDD  2EDC               	goto	u5017
  8050     1EDE  0000               	nop
  8051     1EDF                     l3014:
  8052                           
  8053                           ;main.c: 131:     return bit;
  8054     1EDF  0871               	movf	ds18b20_read_bit@bit,w
  8055     1EE0                     l55:
  8056     1EE0  0008               	return
  8057     1EE1                     __end_of_ds18b20_read_bit:
  8058                           
  8059                           	psect	text35
  8060     001C                     __ptext35:	
  8061 ;; *************** function ___xxtofl *****************
  8062 ;; Defined at:
  8063 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  sign            1    wreg     unsigned char 
  8066 ;;  val             4    0[COMMON] long 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  sign            1    8[COMMON] unsigned char 
  8069 ;;  arg             4   10[COMMON] unsigned long 
  8070 ;;  exp             1    9[COMMON] unsigned char 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  4    0[COMMON] unsigned char 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8080 ;;      Params:         4       0       0       0       0
  8081 ;;      Locals:         6       0       0       0       0
  8082 ;;      Temps:          4       0       0       0       0
  8083 ;;      Totals:        14       0       0       0       0
  8084 ;;Total ram usage:       14 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		_main
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093     001C                     ___xxtofl:	
  8094                           ;psect for function ___xxtofl
  8095                           
  8096                           
  8097                           ;incstack = 0
  8098                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8099                           ;___xxtofl@sign stored from wreg
  8100     001C  00F8               	movwf	___xxtofl@sign
  8101     001D                     l3224:
  8102     001D  0878               	movf	___xxtofl@sign,w
  8103     001E  1903               	btfsc	3,2
  8104     001F  2821               	goto	u4721
  8105     0020  2822               	goto	u4720
  8106     0021                     u4721:
  8107     0021  2836               	goto	l3230
  8108     0022                     u4720:
  8109     0022                     l3226:
  8110     0022  1FF3               	btfss	___xxtofl@val+3,7
  8111     0023  2825               	goto	u4731
  8112     0024  2826               	goto	u4730
  8113     0025                     u4731:
  8114     0025  2836               	goto	l3230
  8115     0026                     u4730:
  8116     0026                     l3228:
  8117     0026  0970               	comf	___xxtofl@val,w
  8118     0027  00FA               	movwf	___xxtofl@arg
  8119     0028  0971               	comf	___xxtofl@val+1,w
  8120     0029  00FB               	movwf	___xxtofl@arg+1
  8121     002A  0972               	comf	___xxtofl@val+2,w
  8122     002B  00FC               	movwf	___xxtofl@arg+2
  8123     002C  0973               	comf	___xxtofl@val+3,w
  8124     002D  00FD               	movwf	___xxtofl@arg+3
  8125     002E  0AFA               	incf	___xxtofl@arg,f
  8126     002F  1903               	skipnz
  8127     0030  0AFB               	incf	___xxtofl@arg+1,f
  8128     0031  1903               	skipnz
  8129     0032  0AFC               	incf	___xxtofl@arg+2,f
  8130     0033  1903               	skipnz
  8131     0034  0AFD               	incf	___xxtofl@arg+3,f
  8132     0035  283E               	goto	l611
  8133     0036                     l3230:
  8134     0036  0873               	movf	___xxtofl@val+3,w
  8135     0037  00FD               	movwf	___xxtofl@arg+3
  8136     0038  0872               	movf	___xxtofl@val+2,w
  8137     0039  00FC               	movwf	___xxtofl@arg+2
  8138     003A  0871               	movf	___xxtofl@val+1,w
  8139     003B  00FB               	movwf	___xxtofl@arg+1
  8140     003C  0870               	movf	___xxtofl@val,w
  8141     003D  00FA               	movwf	___xxtofl@arg
  8142     003E                     l611:
  8143     003E  0873               	movf	___xxtofl@val+3,w
  8144     003F  0472               	iorwf	___xxtofl@val+2,w
  8145     0040  0471               	iorwf	___xxtofl@val+1,w
  8146     0041  0470               	iorwf	___xxtofl@val,w
  8147     0042  1D03               	skipz
  8148     0043  2845               	goto	u4741
  8149     0044  2846               	goto	u4740
  8150     0045                     u4741:
  8151     0045  284F               	goto	l612
  8152     0046                     u4740:
  8153     0046                     l3232:
  8154     0046  3000               	movlw	0
  8155     0047  00F3               	movwf	?___xxtofl+3
  8156     0048  3000               	movlw	0
  8157     0049  00F2               	movwf	?___xxtofl+2
  8158     004A  3000               	movlw	0
  8159     004B  00F1               	movwf	?___xxtofl+1
  8160     004C  3000               	movlw	0
  8161     004D  00F0               	movwf	?___xxtofl
  8162     004E  28CF               	goto	l613
  8163     004F                     l612:
  8164     004F  3096               	movlw	150
  8165     0050  00F9               	movwf	___xxtofl@exp
  8166     0051  285D               	goto	l3238
  8167     0052                     l3236:
  8168     0052  3001               	movlw	1
  8169     0053  07F9               	addwf	___xxtofl@exp,f
  8170     0054  3001               	movlw	1
  8171     0055                     u4755:
  8172     0055  1003               	clrc
  8173     0056  0CFD               	rrf	___xxtofl@arg+3,f
  8174     0057  0CFC               	rrf	___xxtofl@arg+2,f
  8175     0058  0CFB               	rrf	___xxtofl@arg+1,f
  8176     0059  0CFA               	rrf	___xxtofl@arg,f
  8177     005A  3EFF               	addlw	-1
  8178     005B  1D03               	skipz
  8179     005C  2855               	goto	u4755
  8180     005D                     l3238:
  8181     005D  30FE               	movlw	254
  8182     005E  057D               	andwf	___xxtofl@arg+3,w
  8183     005F  1D03               	btfss	3,2
  8184     0060  2862               	goto	u4761
  8185     0061  2863               	goto	u4760
  8186     0062                     u4761:
  8187     0062  2852               	goto	l3236
  8188     0063                     u4760:
  8189     0063  287D               	goto	l617
  8190     0064                     l3240:
  8191     0064  3001               	movlw	1
  8192     0065  07F9               	addwf	___xxtofl@exp,f
  8193     0066                     l3242:
  8194     0066  3001               	movlw	1
  8195     0067  07FA               	addwf	___xxtofl@arg,f
  8196     0068  3000               	movlw	0
  8197     0069  1803               	skipnc
  8198     006A  3001               	movlw	1
  8199     006B  07FB               	addwf	___xxtofl@arg+1,f
  8200     006C  3000               	movlw	0
  8201     006D  1803               	skipnc
  8202     006E  3001               	movlw	1
  8203     006F  07FC               	addwf	___xxtofl@arg+2,f
  8204     0070  3000               	movlw	0
  8205     0071  1803               	skipnc
  8206     0072  3001               	movlw	1
  8207     0073  07FD               	addwf	___xxtofl@arg+3,f
  8208     0074                     l3244:
  8209     0074  3001               	movlw	1
  8210     0075                     u4775:
  8211     0075  1003               	clrc
  8212     0076  0CFD               	rrf	___xxtofl@arg+3,f
  8213     0077  0CFC               	rrf	___xxtofl@arg+2,f
  8214     0078  0CFB               	rrf	___xxtofl@arg+1,f
  8215     0079  0CFA               	rrf	___xxtofl@arg,f
  8216     007A  3EFF               	addlw	-1
  8217     007B  1D03               	skipz
  8218     007C  2875               	goto	u4775
  8219     007D                     l617:
  8220     007D  30FF               	movlw	255
  8221     007E  057D               	andwf	___xxtofl@arg+3,w
  8222     007F  1D03               	btfss	3,2
  8223     0080  2882               	goto	u4781
  8224     0081  2883               	goto	u4780
  8225     0082                     u4781:
  8226     0082  2864               	goto	l3240
  8227     0083                     u4780:
  8228     0083  288F               	goto	l3248
  8229     0084                     l3246:
  8230     0084  3001               	movlw	1
  8231     0085  02F9               	subwf	___xxtofl@exp,f
  8232     0086  3001               	movlw	1
  8233     0087  00F4               	movwf	??___xxtofl
  8234     0088                     u4795:
  8235     0088  1003               	clrc
  8236     0089  0DFA               	rlf	___xxtofl@arg,f
  8237     008A  0DFB               	rlf	___xxtofl@arg+1,f
  8238     008B  0DFC               	rlf	___xxtofl@arg+2,f
  8239     008C  0DFD               	rlf	___xxtofl@arg+3,f
  8240     008D  0BF4               	decfsz	??___xxtofl,f
  8241     008E  2888               	goto	u4795
  8242     008F                     l3248:
  8243     008F  1BFC               	btfsc	___xxtofl@arg+2,7
  8244     0090  2892               	goto	u4801
  8245     0091  2893               	goto	u4800
  8246     0092                     u4801:
  8247     0092  2899               	goto	l624
  8248     0093                     u4800:
  8249     0093                     l3250:
  8250     0093  3002               	movlw	2
  8251     0094  0279               	subwf	___xxtofl@exp,w
  8252     0095  1803               	skipnc
  8253     0096  2898               	goto	u4811
  8254     0097  2899               	goto	u4810
  8255     0098                     u4811:
  8256     0098  2884               	goto	l3246
  8257     0099                     u4810:
  8258     0099                     l624:
  8259     0099  1879               	btfsc	___xxtofl@exp,0
  8260     009A  289C               	goto	u4821
  8261     009B  289D               	goto	u4820
  8262     009C                     u4821:
  8263     009C  28A5               	goto	l625
  8264     009D                     u4820:
  8265     009D                     l3252:
  8266     009D  30FF               	movlw	255
  8267     009E  05FA               	andwf	___xxtofl@arg,f
  8268     009F  30FF               	movlw	255
  8269     00A0  05FB               	andwf	___xxtofl@arg+1,f
  8270     00A1  307F               	movlw	127
  8271     00A2  05FC               	andwf	___xxtofl@arg+2,f
  8272     00A3  30FF               	movlw	255
  8273     00A4  05FD               	andwf	___xxtofl@arg+3,f
  8274     00A5                     l625:
  8275     00A5  1003               	clrc
  8276     00A6  0CF9               	rrf	___xxtofl@exp,f
  8277     00A7                     l3254:
  8278     00A7  0879               	movf	___xxtofl@exp,w
  8279     00A8  00F4               	movwf	??___xxtofl
  8280     00A9  01F5               	clrf	??___xxtofl+1
  8281     00AA  01F6               	clrf	??___xxtofl+2
  8282     00AB  01F7               	clrf	??___xxtofl+3
  8283     00AC  3018               	movlw	24
  8284     00AD                     u4835:
  8285     00AD  1003               	clrc
  8286     00AE  0DF4               	rlf	??___xxtofl,f
  8287     00AF  0DF5               	rlf	??___xxtofl+1,f
  8288     00B0  0DF6               	rlf	??___xxtofl+2,f
  8289     00B1  0DF7               	rlf	??___xxtofl+3,f
  8290     00B2                     u4830:
  8291     00B2  3EFF               	addlw	-1
  8292     00B3  1D03               	skipz
  8293     00B4  28AD               	goto	u4835
  8294     00B5  0874               	movf	??___xxtofl,w
  8295     00B6  04FA               	iorwf	___xxtofl@arg,f
  8296     00B7  0875               	movf	??___xxtofl+1,w
  8297     00B8  04FB               	iorwf	___xxtofl@arg+1,f
  8298     00B9  0876               	movf	??___xxtofl+2,w
  8299     00BA  04FC               	iorwf	___xxtofl@arg+2,f
  8300     00BB  0877               	movf	??___xxtofl+3,w
  8301     00BC  04FD               	iorwf	___xxtofl@arg+3,f
  8302     00BD                     l3256:
  8303     00BD  0878               	movf	___xxtofl@sign,w
  8304     00BE  1903               	btfsc	3,2
  8305     00BF  28C1               	goto	u4841
  8306     00C0  28C2               	goto	u4840
  8307     00C1                     u4841:
  8308     00C1  28C7               	goto	l3262
  8309     00C2                     u4840:
  8310     00C2                     l3258:
  8311     00C2  1FF3               	btfss	___xxtofl@val+3,7
  8312     00C3  28C5               	goto	u4851
  8313     00C4  28C6               	goto	u4850
  8314     00C5                     u4851:
  8315     00C5  28C7               	goto	l3262
  8316     00C6                     u4850:
  8317     00C6                     l3260:
  8318     00C6  17FD               	bsf	___xxtofl@arg+3,7
  8319     00C7                     l3262:
  8320     00C7  087D               	movf	___xxtofl@arg+3,w
  8321     00C8  00F3               	movwf	?___xxtofl+3
  8322     00C9  087C               	movf	___xxtofl@arg+2,w
  8323     00CA  00F2               	movwf	?___xxtofl+2
  8324     00CB  087B               	movf	___xxtofl@arg+1,w
  8325     00CC  00F1               	movwf	?___xxtofl+1
  8326     00CD  087A               	movf	___xxtofl@arg,w
  8327     00CE  00F0               	movwf	?___xxtofl
  8328     00CF                     l613:
  8329     00CF  0008               	return
  8330     00D0                     __end_of___xxtofl:
  8331     0002                     ___latbits      equ	2
  8332     007E                     btemp           set	126	;btemp
  8333     007E                     wtemp0          set	126
  8334                           
  8335                           	psect	config
  8336                           
  8337                           ;Config register CONFIG @ 0x2007
  8338                           ;	Oscillator Selection bits
  8339                           ;	FOSC = HS, HS oscillator
  8340                           ;	Watchdog Timer Enable bit
  8341                           ;	WDTE = OFF, WDT disabled
  8342                           ;	Power-up Timer Enable bit
  8343                           ;	PWRTE = OFF, PWRT disabled
  8344                           ;	FLASH Program Memory Code Protection bits
  8345                           ;	CP = OFF, Code protection off
  8346                           ;	Brown-out Reset Enable bit
  8347                           ;	BOREN = OFF, BOR disabled
  8348                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  8349                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  8350                           ;	Data EE Memory Code Protection
  8351                           ;	CPD = OFF, Code Protection off
  8352                           ;	FLASH Program Memory Write Enable
  8353                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  8354                           ;	In-Circuit Debugger Mode bit
  8355                           ;	DEBUG = 0x1, unprogrammed default
  8356     2007                     	org	8199
  8357     2007  3DBA               	dw	15802
  8358                           
  8359                           	psect	text6_split_1
  8360     00D0                     l2810:
  8361                           
  8362                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  8363     00D0  303F               	movlw	63
  8364     00D1  1683               	bsf	3,5	;RP0=1, select bank1
  8365     00D2  1303               	bcf	3,6	;RP1=0, select bank1
  8366     00D3  00CB               	movwf	(efgtoa@u+3)^(0+128)
  8367     00D4  3080               	movlw	128
  8368     00D5  00CA               	movwf	(efgtoa@u+2)^(0+128)
  8369     00D6  3000               	movlw	0
  8370     00D7  00C9               	movwf	(efgtoa@u+1)^(0+128)
  8371     00D8  3000               	movlw	0
  8372     00D9  00C8               	movwf	efgtoa@u^(0+128)
  8373     00DA                     l2812:
  8374                           
  8375                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  8376     00DA  01AF               	clrf	efgtoa@e^(0+128)
  8377     00DB  01B0               	clrf	(efgtoa@e+1)^(0+128)
  8378     00DC                     l2814:
  8379                           
  8380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  8381     00DC  0847               	movf	(efgtoa@g+3)^(0+128),w
  8382     00DD  00F3               	movwf	___fleq@ff1+3
  8383     00DE  0846               	movf	(efgtoa@g+2)^(0+128),w
  8384     00DF  00F2               	movwf	___fleq@ff1+2
  8385     00E0  0845               	movf	(efgtoa@g+1)^(0+128),w
  8386     00E1  00F1               	movwf	___fleq@ff1+1
  8387     00E2  0844               	movf	efgtoa@g^(0+128),w
  8388     00E3  00F0               	movwf	___fleq@ff1
  8389     00E4  3000               	movlw	0
  8390     00E5  00F7               	movwf	___fleq@ff2+3
  8391     00E6  3000               	movlw	0
  8392     00E7  00F6               	movwf	___fleq@ff2+2
  8393     00E8  3000               	movlw	0
  8394     00E9  00F5               	movwf	___fleq@ff2+1
  8395     00EA  3000               	movlw	0
  8396     00EB  00F4               	movwf	___fleq@ff2
  8397     00EC  160A  118A  2128  120A  118A  	fcall	___fleq
  8398     00F1  1803               	btfsc	3,0
  8399     00F2  28F4               	goto	u4251
  8400     00F3  28F5               	goto	u4250
  8401     00F4                     u4251:
  8402     00F4  2B06               	goto	l2840
  8403     00F5                     u4250:
  8404     00F5  2906               	goto	l2820
  8405     00F6                     l2818:
  8406                           
  8407                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  8408     00F6  1683               	bsf	3,5	;RP0=1, select bank1
  8409     00F7  1303               	bcf	3,6	;RP1=0, select bank1
  8410     00F8  0836               	movf	(efgtoa@ou+3)^(0+128),w
  8411     00F9  00CB               	movwf	(efgtoa@u+3)^(0+128)
  8412     00FA  0835               	movf	(efgtoa@ou+2)^(0+128),w
  8413     00FB  00CA               	movwf	(efgtoa@u+2)^(0+128)
  8414     00FC  0834               	movf	(efgtoa@ou+1)^(0+128),w
  8415     00FD  00C9               	movwf	(efgtoa@u+1)^(0+128)
  8416     00FE  0833               	movf	efgtoa@ou^(0+128),w
  8417     00FF  00C8               	movwf	efgtoa@u^(0+128)
  8418                           
  8419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
  8420     0100  3001               	movlw	1
  8421     0101  07AF               	addwf	efgtoa@e^(0+128),f
  8422     0102  1803               	skipnc
  8423     0103  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  8424     0104  3000               	movlw	0
  8425     0105  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  8426     0106                     l2820:
  8427                           
  8428                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  8429     0106  3041               	movlw	65
  8430     0107  1283               	bcf	3,5	;RP0=0, select bank0
  8431     0108  1303               	bcf	3,6	;RP1=0, select bank0
  8432     0109  00A3               	movwf	___flmul@b+3
  8433     010A  3020               	movlw	32
  8434     010B  00A2               	movwf	___flmul@b+2
  8435     010C  3000               	movlw	0
  8436     010D  00A1               	movwf	___flmul@b+1
  8437     010E  3000               	movlw	0
  8438     010F  00A0               	movwf	___flmul@b
  8439     0110  1683               	bsf	3,5	;RP0=1, select bank1
  8440     0111  1303               	bcf	3,6	;RP1=0, select bank1
  8441     0112  084B               	movf	(efgtoa@u+3)^(0+128),w
  8442     0113  1283               	bcf	3,5	;RP0=0, select bank0
  8443     0114  1303               	bcf	3,6	;RP1=0, select bank0
  8444     0115  00A7               	movwf	___flmul@a+3
  8445     0116  1683               	bsf	3,5	;RP0=1, select bank1
  8446     0117  1303               	bcf	3,6	;RP1=0, select bank1
  8447     0118  084A               	movf	(efgtoa@u+2)^(0+128),w
  8448     0119  1283               	bcf	3,5	;RP0=0, select bank0
  8449     011A  1303               	bcf	3,6	;RP1=0, select bank0
  8450     011B  00A6               	movwf	___flmul@a+2
  8451     011C  1683               	bsf	3,5	;RP0=1, select bank1
  8452     011D  1303               	bcf	3,6	;RP1=0, select bank1
  8453     011E  0849               	movf	(efgtoa@u+1)^(0+128),w
  8454     011F  1283               	bcf	3,5	;RP0=0, select bank0
  8455     0120  1303               	bcf	3,6	;RP1=0, select bank0
  8456     0121  00A5               	movwf	___flmul@a+1
  8457     0122  1683               	bsf	3,5	;RP0=1, select bank1
  8458     0123  1303               	bcf	3,6	;RP1=0, select bank1
  8459     0124  0848               	movf	efgtoa@u^(0+128),w
  8460     0125  1283               	bcf	3,5	;RP0=0, select bank0
  8461     0126  1303               	bcf	3,6	;RP1=0, select bank0
  8462     0127  00A4               	movwf	___flmul@a
  8463     0128  120A  158A  24BE  120A  118A  	fcall	___flmul
  8464     012D  1283               	bcf	3,5	;RP0=0, select bank0
  8465     012E  1303               	bcf	3,6	;RP1=0, select bank0
  8466     012F  0823               	movf	?___flmul+3,w
  8467     0130  1683               	bsf	3,5	;RP0=1, select bank1
  8468     0131  1303               	bcf	3,6	;RP1=0, select bank1
  8469     0132  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  8470     0133  1283               	bcf	3,5	;RP0=0, select bank0
  8471     0134  1303               	bcf	3,6	;RP1=0, select bank0
  8472     0135  0822               	movf	?___flmul+2,w
  8473     0136  1683               	bsf	3,5	;RP0=1, select bank1
  8474     0137  1303               	bcf	3,6	;RP1=0, select bank1
  8475     0138  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  8476     0139  1283               	bcf	3,5	;RP0=0, select bank0
  8477     013A  1303               	bcf	3,6	;RP1=0, select bank0
  8478     013B  0821               	movf	?___flmul+1,w
  8479     013C  1683               	bsf	3,5	;RP0=1, select bank1
  8480     013D  1303               	bcf	3,6	;RP1=0, select bank1
  8481     013E  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  8482     013F  1283               	bcf	3,5	;RP0=0, select bank0
  8483     0140  1303               	bcf	3,6	;RP1=0, select bank0
  8484     0141  0820               	movf	?___flmul,w
  8485     0142  1683               	bsf	3,5	;RP0=1, select bank1
  8486     0143  1303               	bcf	3,6	;RP1=0, select bank1
  8487     0144  00B3               	movwf	efgtoa@ou^(0+128)
  8488     0145                     l2822:
  8489     0145  0844               	movf	efgtoa@g^(0+128),w
  8490     0146  1283               	bcf	3,5	;RP0=0, select bank0
  8491     0147  1303               	bcf	3,6	;RP1=0, select bank0
  8492     0148  00CD               	movwf	??_efgtoa
  8493     0149  1683               	bsf	3,5	;RP0=1, select bank1
  8494     014A  1303               	bcf	3,6	;RP1=0, select bank1
  8495     014B  0845               	movf	(efgtoa@g+1)^(0+128),w
  8496     014C  1283               	bcf	3,5	;RP0=0, select bank0
  8497     014D  1303               	bcf	3,6	;RP1=0, select bank0
  8498     014E  00CE               	movwf	??_efgtoa+1
  8499     014F  1683               	bsf	3,5	;RP0=1, select bank1
  8500     0150  1303               	bcf	3,6	;RP1=0, select bank1
  8501     0151  0846               	movf	(efgtoa@g+2)^(0+128),w
  8502     0152  1283               	bcf	3,5	;RP0=0, select bank0
  8503     0153  1303               	bcf	3,6	;RP1=0, select bank0
  8504     0154  00CF               	movwf	??_efgtoa+2
  8505     0155  1683               	bsf	3,5	;RP0=1, select bank1
  8506     0156  1303               	bcf	3,6	;RP1=0, select bank1
  8507     0157  0847               	movf	(efgtoa@g+3)^(0+128),w
  8508     0158  1283               	bcf	3,5	;RP0=0, select bank0
  8509     0159  1303               	bcf	3,6	;RP1=0, select bank0
  8510     015A  00D0               	movwf	??_efgtoa+3
  8511     015B  1683               	bsf	3,5	;RP0=1, select bank1
  8512     015C  1303               	bcf	3,6	;RP1=0, select bank1
  8513     015D  0833               	movf	efgtoa@ou^(0+128),w
  8514     015E  1283               	bcf	3,5	;RP0=0, select bank0
  8515     015F  1303               	bcf	3,6	;RP1=0, select bank0
  8516     0160  02CD               	subwf	??_efgtoa,f
  8517     0161  1683               	bsf	3,5	;RP0=1, select bank1
  8518     0162  1303               	bcf	3,6	;RP1=0, select bank1
  8519     0163  0834               	movf	(efgtoa@ou+1)^(0+128),w
  8520     0164  1C03               	skipc
  8521     0165  0F34               	incfsz	(efgtoa@ou+1)^(0+128),w
  8522     0166  2968               	goto	u4261
  8523     0167  296B               	goto	u4262
  8524     0168                     u4261:
  8525     0168  1283               	bcf	3,5	;RP0=0, select bank0
  8526     0169  1303               	bcf	3,6	;RP1=0, select bank0
  8527     016A  02CE               	subwf	??_efgtoa+1,f
  8528     016B                     u4262:
  8529     016B  1683               	bsf	3,5	;RP0=1, select bank1
  8530     016C  1303               	bcf	3,6	;RP1=0, select bank1
  8531     016D  0835               	movf	(efgtoa@ou+2)^(0+128),w
  8532     016E  1C03               	skipc
  8533     016F  0F35               	incfsz	(efgtoa@ou+2)^(0+128),w
  8534     0170  2972               	goto	u4263
  8535     0171  2975               	goto	u4264
  8536     0172                     u4263:
  8537     0172  1283               	bcf	3,5	;RP0=0, select bank0
  8538     0173  1303               	bcf	3,6	;RP1=0, select bank0
  8539     0174  02CF               	subwf	??_efgtoa+2,f
  8540     0175                     u4264:
  8541     0175  1683               	bsf	3,5	;RP0=1, select bank1
  8542     0176  1303               	bcf	3,6	;RP1=0, select bank1
  8543     0177  0836               	movf	(efgtoa@ou+3)^(0+128),w
  8544     0178  1C03               	skipc
  8545     0179  0F36               	incfsz	(efgtoa@ou+3)^(0+128),w
  8546     017A  297C               	goto	u4265
  8547     017B  297F               	goto	u4266
  8548     017C                     u4265:
  8549     017C  1283               	bcf	3,5	;RP0=0, select bank0
  8550     017D  1303               	bcf	3,6	;RP1=0, select bank0
  8551     017E  02D0               	subwf	??_efgtoa+3,f
  8552     017F                     u4266:
  8553     017F  1683               	bsf	3,5	;RP0=1, select bank1
  8554     0180  1303               	bcf	3,6	;RP1=0, select bank1
  8555     0181  1283               	bcf	3,5	;RP0=0, select bank0
  8556     0182  1303               	bcf	3,6	;RP1=0, select bank0
  8557     0183  0850               	movf	??_efgtoa+3,w
  8558     0184  00F3               	movwf	labs@a+3
  8559     0185  084F               	movf	??_efgtoa+2,w
  8560     0186  00F2               	movwf	labs@a+2
  8561     0187  084E               	movf	??_efgtoa+1,w
  8562     0188  00F1               	movwf	labs@a+1
  8563     0189  084D               	movf	??_efgtoa,w
  8564     018A  00F0               	movwf	labs@a
  8565     018B  160A  158A  2696  120A  118A  	fcall	_labs
  8566     0190  1BF3               	btfsc	?_labs+3,7
  8567     0191  29A2               	goto	u4271
  8568     0192  0873               	movf	?_labs+3,w
  8569     0193  1D03               	btfss	3,2
  8570     0194  29A3               	goto	u4270
  8571     0195  0872               	movf	?_labs+2,w
  8572     0196  1D03               	btfss	3,2
  8573     0197  29A3               	goto	u4270
  8574     0198  0871               	movf	?_labs+1,w
  8575     0199  1D03               	btfss	3,2
  8576     019A  29A3               	goto	u4270
  8577     019B  3002               	movlw	2
  8578     019C  0270               	subwf	?_labs,w
  8579     019D  1D03               	skipz
  8580     019E  299F               	goto	u4273
  8581     019F                     u4273:
  8582     019F  1C03               	btfss	3,0
  8583     01A0  29A2               	goto	u4271
  8584     01A1  29A3               	goto	u4270
  8585     01A2                     u4271:
  8586     01A2  28F6               	goto	l2818
  8587     01A3                     u4270:
  8588     01A3                     l2824:
  8589     01A3  1683               	bsf	3,5	;RP0=1, select bank1
  8590     01A4  1303               	bcf	3,6	;RP1=0, select bank1
  8591     01A5  0836               	movf	(efgtoa@ou+3)^(0+128),w
  8592     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  8593     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  8594     01A8  00BD               	movwf	___flge@ff1+3
  8595     01A9  1683               	bsf	3,5	;RP0=1, select bank1
  8596     01AA  1303               	bcf	3,6	;RP1=0, select bank1
  8597     01AB  0835               	movf	(efgtoa@ou+2)^(0+128),w
  8598     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  8599     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  8600     01AE  00BC               	movwf	___flge@ff1+2
  8601     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  8602     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  8603     01B1  0834               	movf	(efgtoa@ou+1)^(0+128),w
  8604     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  8605     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  8606     01B4  00BB               	movwf	___flge@ff1+1
  8607     01B5  1683               	bsf	3,5	;RP0=1, select bank1
  8608     01B6  1303               	bcf	3,6	;RP1=0, select bank1
  8609     01B7  0833               	movf	efgtoa@ou^(0+128),w
  8610     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  8611     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  8612     01BA  00BA               	movwf	___flge@ff1
  8613     01BB  1683               	bsf	3,5	;RP0=1, select bank1
  8614     01BC  1303               	bcf	3,6	;RP1=0, select bank1
  8615     01BD  0847               	movf	(efgtoa@g+3)^(0+128),w
  8616     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  8617     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  8618     01C0  00C1               	movwf	___flge@ff2+3
  8619     01C1  1683               	bsf	3,5	;RP0=1, select bank1
  8620     01C2  1303               	bcf	3,6	;RP1=0, select bank1
  8621     01C3  0846               	movf	(efgtoa@g+2)^(0+128),w
  8622     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  8623     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  8624     01C6  00C0               	movwf	___flge@ff2+2
  8625     01C7  1683               	bsf	3,5	;RP0=1, select bank1
  8626     01C8  1303               	bcf	3,6	;RP1=0, select bank1
  8627     01C9  0845               	movf	(efgtoa@g+1)^(0+128),w
  8628     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  8629     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  8630     01CC  00BF               	movwf	___flge@ff2+1
  8631     01CD  1683               	bsf	3,5	;RP0=1, select bank1
  8632     01CE  1303               	bcf	3,6	;RP1=0, select bank1
  8633     01CF  0844               	movf	efgtoa@g^(0+128),w
  8634     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  8635     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  8636     01D2  00BE               	movwf	___flge@ff2
  8637     01D3  160A  118A  241B  120A  118A  	fcall	___flge
  8638     01D8  1C03               	btfss	3,0
  8639     01D9  29DB               	goto	u4281
  8640     01DA  29DC               	goto	u4280
  8641     01DB                     u4281:
  8642     01DB  28F6               	goto	l2818
  8643     01DC                     u4280:
  8644     01DC                     l2826:
  8645                           
  8646                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  8647     01DC  1683               	bsf	3,5	;RP0=1, select bank1
  8648     01DD  1303               	bcf	3,6	;RP1=0, select bank1
  8649     01DE  0844               	movf	efgtoa@g^(0+128),w
  8650     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  8651     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  8652     01E1  00CD               	movwf	??_efgtoa
  8653     01E2  1683               	bsf	3,5	;RP0=1, select bank1
  8654     01E3  1303               	bcf	3,6	;RP1=0, select bank1
  8655     01E4  0845               	movf	(efgtoa@g+1)^(0+128),w
  8656     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  8657     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  8658     01E7  00CE               	movwf	??_efgtoa+1
  8659     01E8  1683               	bsf	3,5	;RP0=1, select bank1
  8660     01E9  1303               	bcf	3,6	;RP1=0, select bank1
  8661     01EA  0846               	movf	(efgtoa@g+2)^(0+128),w
  8662     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  8663     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  8664     01ED  00CF               	movwf	??_efgtoa+2
  8665     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  8666     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  8667     01F0  0847               	movf	(efgtoa@g+3)^(0+128),w
  8668     01F1  1283               	bcf	3,5	;RP0=0, select bank0
  8669     01F2  1303               	bcf	3,6	;RP1=0, select bank0
  8670     01F3  00D0               	movwf	??_efgtoa+3
  8671     01F4  1683               	bsf	3,5	;RP0=1, select bank1
  8672     01F5  1303               	bcf	3,6	;RP1=0, select bank1
  8673     01F6  0848               	movf	efgtoa@u^(0+128),w
  8674     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  8675     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  8676     01F9  02CD               	subwf	??_efgtoa,f
  8677     01FA  1683               	bsf	3,5	;RP0=1, select bank1
  8678     01FB  1303               	bcf	3,6	;RP1=0, select bank1
  8679     01FC  0849               	movf	(efgtoa@u+1)^(0+128),w
  8680     01FD  1C03               	skipc
  8681     01FE  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
  8682     01FF  2A01               	goto	u4291
  8683     0200  2A04               	goto	u4292
  8684     0201                     u4291:
  8685     0201  1283               	bcf	3,5	;RP0=0, select bank0
  8686     0202  1303               	bcf	3,6	;RP1=0, select bank0
  8687     0203  02CE               	subwf	??_efgtoa+1,f
  8688     0204                     u4292:
  8689     0204  1683               	bsf	3,5	;RP0=1, select bank1
  8690     0205  1303               	bcf	3,6	;RP1=0, select bank1
  8691     0206  084A               	movf	(efgtoa@u+2)^(0+128),w
  8692     0207  1C03               	skipc
  8693     0208  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
  8694     0209  2A0B               	goto	u4293
  8695     020A  2A0E               	goto	u4294
  8696     020B                     u4293:
  8697     020B  1283               	bcf	3,5	;RP0=0, select bank0
  8698     020C  1303               	bcf	3,6	;RP1=0, select bank0
  8699     020D  02CF               	subwf	??_efgtoa+2,f
  8700     020E                     u4294:
  8701     020E  1683               	bsf	3,5	;RP0=1, select bank1
  8702     020F  1303               	bcf	3,6	;RP1=0, select bank1
  8703     0210  084B               	movf	(efgtoa@u+3)^(0+128),w
  8704     0211  1C03               	skipc
  8705     0212  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
  8706     0213  2A15               	goto	u4295
  8707     0214  2A18               	goto	u4296
  8708     0215                     u4295:
  8709     0215  1283               	bcf	3,5	;RP0=0, select bank0
  8710     0216  1303               	bcf	3,6	;RP1=0, select bank0
  8711     0217  02D0               	subwf	??_efgtoa+3,f
  8712     0218                     u4296:
  8713     0218  1683               	bsf	3,5	;RP0=1, select bank1
  8714     0219  1303               	bcf	3,6	;RP1=0, select bank1
  8715     021A  1283               	bcf	3,5	;RP0=0, select bank0
  8716     021B  1303               	bcf	3,6	;RP1=0, select bank0
  8717     021C  0850               	movf	??_efgtoa+3,w
  8718     021D  00F3               	movwf	labs@a+3
  8719     021E  084F               	movf	??_efgtoa+2,w
  8720     021F  00F2               	movwf	labs@a+2
  8721     0220  084E               	movf	??_efgtoa+1,w
  8722     0221  00F1               	movwf	labs@a+1
  8723     0222  084D               	movf	??_efgtoa,w
  8724     0223  00F0               	movwf	labs@a
  8725     0224  160A  158A  2696  120A  118A  	fcall	_labs
  8726     0229  1BF3               	btfsc	?_labs+3,7
  8727     022A  2A3C               	goto	u4300
  8728     022B  0873               	movf	?_labs+3,w
  8729     022C  1D03               	btfss	3,2
  8730     022D  2A3B               	goto	u4301
  8731     022E  0872               	movf	?_labs+2,w
  8732     022F  1D03               	btfss	3,2
  8733     0230  2A3B               	goto	u4301
  8734     0231  0871               	movf	?_labs+1,w
  8735     0232  1D03               	btfss	3,2
  8736     0233  2A3B               	goto	u4301
  8737     0234  3002               	movlw	2
  8738     0235  0270               	subwf	?_labs,w
  8739     0236  1D03               	skipz
  8740     0237  2A38               	goto	u4303
  8741     0238                     u4303:
  8742     0238  1803               	btfsc	3,0
  8743     0239  2A3B               	goto	u4301
  8744     023A  2A3C               	goto	u4300
  8745     023B                     u4301:
  8746     023B  2ACD               	goto	l2838
  8747     023C                     u4300:
  8748     023C                     l2828:
  8749                           
  8750                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8751     023C  1683               	bsf	3,5	;RP0=1, select bank1
  8752     023D  1303               	bcf	3,6	;RP1=0, select bank1
  8753     023E  084B               	movf	(efgtoa@u+3)^(0+128),w
  8754     023F  00C7               	movwf	(efgtoa@g+3)^(0+128)
  8755     0240  084A               	movf	(efgtoa@u+2)^(0+128),w
  8756     0241  00C6               	movwf	(efgtoa@g+2)^(0+128)
  8757     0242  0849               	movf	(efgtoa@u+1)^(0+128),w
  8758     0243  00C5               	movwf	(efgtoa@g+1)^(0+128)
  8759     0244  0848               	movf	efgtoa@u^(0+128),w
  8760     0245  00C4               	movwf	efgtoa@g^(0+128)
  8761                           
  8762                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
  8763     0246  2B06               	goto	l2840
  8764     0247                     l2830:
  8765                           
  8766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  8767     0247  3041               	movlw	65
  8768     0248  00F3               	movwf	___fldiv@a+3
  8769     0249  3020               	movlw	32
  8770     024A  00F2               	movwf	___fldiv@a+2
  8771     024B  3000               	movlw	0
  8772     024C  00F1               	movwf	___fldiv@a+1
  8773     024D  3000               	movlw	0
  8774     024E  00F0               	movwf	___fldiv@a
  8775     024F  1683               	bsf	3,5	;RP0=1, select bank1
  8776     0250  1303               	bcf	3,6	;RP1=0, select bank1
  8777     0251  084B               	movf	(efgtoa@u+3)^(0+128),w
  8778     0252  00F7               	movwf	___fldiv@b+3
  8779     0253  084A               	movf	(efgtoa@u+2)^(0+128),w
  8780     0254  00F6               	movwf	___fldiv@b+2
  8781     0255  0849               	movf	(efgtoa@u+1)^(0+128),w
  8782     0256  00F5               	movwf	___fldiv@b+1
  8783     0257  0848               	movf	efgtoa@u^(0+128),w
  8784     0258  00F4               	movwf	___fldiv@b
  8785     0259  120A  158A  2092  120A  118A  	fcall	___fldiv
  8786     025E  0873               	movf	?___fldiv+3,w
  8787     025F  1683               	bsf	3,5	;RP0=1, select bank1
  8788     0260  1303               	bcf	3,6	;RP1=0, select bank1
  8789     0261  00CB               	movwf	(efgtoa@u+3)^(0+128)
  8790     0262  0872               	movf	?___fldiv+2,w
  8791     0263  00CA               	movwf	(efgtoa@u+2)^(0+128)
  8792     0264  0871               	movf	?___fldiv+1,w
  8793     0265  00C9               	movwf	(efgtoa@u+1)^(0+128)
  8794     0266  0870               	movf	?___fldiv,w
  8795     0267  00C8               	movwf	efgtoa@u^(0+128)
  8796     0268                     l2832:
  8797                           
  8798                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
  8799     0268  30FF               	movlw	255
  8800     0269  07AF               	addwf	efgtoa@e^(0+128),f
  8801     026A  1803               	skipnc
  8802     026B  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  8803     026C  30FF               	movlw	255
  8804     026D  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  8805     026E                     l2834:
  8806                           
  8807                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  8808     026E  0844               	movf	efgtoa@g^(0+128),w
  8809     026F  1283               	bcf	3,5	;RP0=0, select bank0
  8810     0270  1303               	bcf	3,6	;RP1=0, select bank0
  8811     0271  00CD               	movwf	??_efgtoa
  8812     0272  1683               	bsf	3,5	;RP0=1, select bank1
  8813     0273  1303               	bcf	3,6	;RP1=0, select bank1
  8814     0274  0845               	movf	(efgtoa@g+1)^(0+128),w
  8815     0275  1283               	bcf	3,5	;RP0=0, select bank0
  8816     0276  1303               	bcf	3,6	;RP1=0, select bank0
  8817     0277  00CE               	movwf	??_efgtoa+1
  8818     0278  1683               	bsf	3,5	;RP0=1, select bank1
  8819     0279  1303               	bcf	3,6	;RP1=0, select bank1
  8820     027A  0846               	movf	(efgtoa@g+2)^(0+128),w
  8821     027B  1283               	bcf	3,5	;RP0=0, select bank0
  8822     027C  1303               	bcf	3,6	;RP1=0, select bank0
  8823     027D  00CF               	movwf	??_efgtoa+2
  8824     027E  1683               	bsf	3,5	;RP0=1, select bank1
  8825     027F  1303               	bcf	3,6	;RP1=0, select bank1
  8826     0280  0847               	movf	(efgtoa@g+3)^(0+128),w
  8827     0281  1283               	bcf	3,5	;RP0=0, select bank0
  8828     0282  1303               	bcf	3,6	;RP1=0, select bank0
  8829     0283  00D0               	movwf	??_efgtoa+3
  8830     0284  1683               	bsf	3,5	;RP0=1, select bank1
  8831     0285  1303               	bcf	3,6	;RP1=0, select bank1
  8832     0286  0848               	movf	efgtoa@u^(0+128),w
  8833     0287  1283               	bcf	3,5	;RP0=0, select bank0
  8834     0288  1303               	bcf	3,6	;RP1=0, select bank0
  8835     0289  02CD               	subwf	??_efgtoa,f
  8836     028A  1683               	bsf	3,5	;RP0=1, select bank1
  8837     028B  1303               	bcf	3,6	;RP1=0, select bank1
  8838     028C  0849               	movf	(efgtoa@u+1)^(0+128),w
  8839     028D  1C03               	skipc
  8840     028E  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
  8841     028F  2A91               	goto	u4311
  8842     0290  2A94               	goto	u4312
  8843     0291                     u4311:
  8844     0291  1283               	bcf	3,5	;RP0=0, select bank0
  8845     0292  1303               	bcf	3,6	;RP1=0, select bank0
  8846     0293  02CE               	subwf	??_efgtoa+1,f
  8847     0294                     u4312:
  8848     0294  1683               	bsf	3,5	;RP0=1, select bank1
  8849     0295  1303               	bcf	3,6	;RP1=0, select bank1
  8850     0296  084A               	movf	(efgtoa@u+2)^(0+128),w
  8851     0297  1C03               	skipc
  8852     0298  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
  8853     0299  2A9B               	goto	u4313
  8854     029A  2A9E               	goto	u4314
  8855     029B                     u4313:
  8856     029B  1283               	bcf	3,5	;RP0=0, select bank0
  8857     029C  1303               	bcf	3,6	;RP1=0, select bank0
  8858     029D  02CF               	subwf	??_efgtoa+2,f
  8859     029E                     u4314:
  8860     029E  1683               	bsf	3,5	;RP0=1, select bank1
  8861     029F  1303               	bcf	3,6	;RP1=0, select bank1
  8862     02A0  084B               	movf	(efgtoa@u+3)^(0+128),w
  8863     02A1  1C03               	skipc
  8864     02A2  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
  8865     02A3  2AA5               	goto	u4315
  8866     02A4  2AA8               	goto	u4316
  8867     02A5                     u4315:
  8868     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  8869     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  8870     02A7  02D0               	subwf	??_efgtoa+3,f
  8871     02A8                     u4316:
  8872     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  8873     02A9  1303               	bcf	3,6	;RP1=0, select bank1
  8874     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  8875     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  8876     02AC  0850               	movf	??_efgtoa+3,w
  8877     02AD  00F3               	movwf	labs@a+3
  8878     02AE  084F               	movf	??_efgtoa+2,w
  8879     02AF  00F2               	movwf	labs@a+2
  8880     02B0  084E               	movf	??_efgtoa+1,w
  8881     02B1  00F1               	movwf	labs@a+1
  8882     02B2  084D               	movf	??_efgtoa,w
  8883     02B3  00F0               	movwf	labs@a
  8884     02B4  160A  158A  2696  120A  118A  	fcall	_labs
  8885     02B9  1BF3               	btfsc	?_labs+3,7
  8886     02BA  2ACC               	goto	u4320
  8887     02BB  0873               	movf	?_labs+3,w
  8888     02BC  1D03               	btfss	3,2
  8889     02BD  2ACB               	goto	u4321
  8890     02BE  0872               	movf	?_labs+2,w
  8891     02BF  1D03               	btfss	3,2
  8892     02C0  2ACB               	goto	u4321
  8893     02C1  0871               	movf	?_labs+1,w
  8894     02C2  1D03               	btfss	3,2
  8895     02C3  2ACB               	goto	u4321
  8896     02C4  3002               	movlw	2
  8897     02C5  0270               	subwf	?_labs,w
  8898     02C6  1D03               	skipz
  8899     02C7  2AC8               	goto	u4323
  8900     02C8                     u4323:
  8901     02C8  1803               	btfsc	3,0
  8902     02C9  2ACB               	goto	u4321
  8903     02CA  2ACC               	goto	u4320
  8904     02CB                     u4321:
  8905     02CB  2ACD               	goto	l2838
  8906     02CC                     u4320:
  8907     02CC  2A3C               	goto	l2828
  8908     02CD                     l2838:
  8909                           
  8910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  8911     02CD  1683               	bsf	3,5	;RP0=1, select bank1
  8912     02CE  1303               	bcf	3,6	;RP1=0, select bank1
  8913     02CF  0847               	movf	(efgtoa@g+3)^(0+128),w
  8914     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  8915     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  8916     02D2  00BD               	movwf	___flge@ff1+3
  8917     02D3  1683               	bsf	3,5	;RP0=1, select bank1
  8918     02D4  1303               	bcf	3,6	;RP1=0, select bank1
  8919     02D5  0846               	movf	(efgtoa@g+2)^(0+128),w
  8920     02D6  1283               	bcf	3,5	;RP0=0, select bank0
  8921     02D7  1303               	bcf	3,6	;RP1=0, select bank0
  8922     02D8  00BC               	movwf	___flge@ff1+2
  8923     02D9  1683               	bsf	3,5	;RP0=1, select bank1
  8924     02DA  1303               	bcf	3,6	;RP1=0, select bank1
  8925     02DB  0845               	movf	(efgtoa@g+1)^(0+128),w
  8926     02DC  1283               	bcf	3,5	;RP0=0, select bank0
  8927     02DD  1303               	bcf	3,6	;RP1=0, select bank0
  8928     02DE  00BB               	movwf	___flge@ff1+1
  8929     02DF  1683               	bsf	3,5	;RP0=1, select bank1
  8930     02E0  1303               	bcf	3,6	;RP1=0, select bank1
  8931     02E1  0844               	movf	efgtoa@g^(0+128),w
  8932     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  8933     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  8934     02E4  00BA               	movwf	___flge@ff1
  8935     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  8936     02E6  1303               	bcf	3,6	;RP1=0, select bank1
  8937     02E7  084B               	movf	(efgtoa@u+3)^(0+128),w
  8938     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  8939     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  8940     02EA  00C1               	movwf	___flge@ff2+3
  8941     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  8942     02EC  1303               	bcf	3,6	;RP1=0, select bank1
  8943     02ED  084A               	movf	(efgtoa@u+2)^(0+128),w
  8944     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  8945     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  8946     02F0  00C0               	movwf	___flge@ff2+2
  8947     02F1  1683               	bsf	3,5	;RP0=1, select bank1
  8948     02F2  1303               	bcf	3,6	;RP1=0, select bank1
  8949     02F3  0849               	movf	(efgtoa@u+1)^(0+128),w
  8950     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  8951     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  8952     02F6  00BF               	movwf	___flge@ff2+1
  8953     02F7  1683               	bsf	3,5	;RP0=1, select bank1
  8954     02F8  1303               	bcf	3,6	;RP1=0, select bank1
  8955     02F9  0848               	movf	efgtoa@u^(0+128),w
  8956     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  8957     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  8958     02FC  00BE               	movwf	___flge@ff2
  8959     02FD  160A  118A  241B  120A  118A  	fcall	___flge
  8960     0302  1C03               	btfss	3,0
  8961     0303  2B05               	goto	u4331
  8962     0304  2B06               	goto	u4330
  8963     0305                     u4331:
  8964     0305  2A47               	goto	l2830
  8965     0306                     u4330:
  8966     0306                     l2840:
  8967                           
  8968                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8969     0306  1283               	bcf	3,5	;RP0=0, select bank0
  8970     0307  1303               	bcf	3,6	;RP1=0, select bank0
  8971     0308  084C               	movf	efgtoa@c,w
  8972     0309  1683               	bsf	3,5	;RP0=1, select bank1
  8973     030A  1303               	bcf	3,6	;RP1=0, select bank1
  8974     030B  00A9               	movwf	efgtoa@mode^(0+128)
  8975                           
  8976                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  8977     030C  0829               	movf	efgtoa@mode^(0+128),w
  8978     030D  00AA               	movwf	efgtoa@nmode^(0+128)
  8979     030E                     l2842:
  8980                           
  8981                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  8982     030E  1283               	bcf	3,5	;RP0=0, select bank0
  8983     030F  1303               	bcf	3,6	;RP1=0, select bank0
  8984     0310  1BEB               	btfsc	_prec+1,7
  8985     0311  2B13               	goto	u4341
  8986     0312  2B14               	goto	u4340
  8987     0313                     u4341:
  8988     0313  2B1F               	goto	l2846
  8989     0314                     u4340:
  8990     0314                     l2844:
  8991     0314  086B               	movf	_prec+1,w
  8992     0315  1683               	bsf	3,5	;RP0=1, select bank1
  8993     0316  1303               	bcf	3,6	;RP1=0, select bank1
  8994     0317  00A3               	movwf	(efgtoa@p+1)^(0+128)
  8995     0318  1283               	bcf	3,5	;RP0=0, select bank0
  8996     0319  1303               	bcf	3,6	;RP1=0, select bank0
  8997     031A  086A               	movf	_prec,w
  8998     031B  1683               	bsf	3,5	;RP0=1, select bank1
  8999     031C  1303               	bcf	3,6	;RP1=0, select bank1
  9000     031D  00A2               	movwf	efgtoa@p^(0+128)
  9001     031E  2B25               	goto	l693
  9002     031F                     l2846:
  9003     031F  3006               	movlw	6
  9004     0320  1683               	bsf	3,5	;RP0=1, select bank1
  9005     0321  1303               	bcf	3,6	;RP1=0, select bank1
  9006     0322  00A2               	movwf	efgtoa@p^(0+128)
  9007     0323  3000               	movlw	0
  9008     0324  00A3               	movwf	(efgtoa@p^(0+128)+1)
  9009     0325                     l693:
  9010                           
  9011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
  9012     0325  0823               	movf	(efgtoa@p+1)^(0+128),w
  9013     0326  00AE               	movwf	(efgtoa@m+1)^(0+128)
  9014     0327  0822               	movf	efgtoa@p^(0+128),w
  9015     0328  00AD               	movwf	efgtoa@m^(0+128)
  9016                           
  9017                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
  9018     0329  3001               	movlw	1
  9019     032A  07AD               	addwf	efgtoa@m^(0+128),f
  9020     032B  1803               	skipnc
  9021     032C  0AAE               	incf	(efgtoa@m+1)^(0+128),f
  9022     032D  3000               	movlw	0
  9023     032E  07AE               	addwf	(efgtoa@m+1)^(0+128),f
  9024     032F                     l2848:
  9025                           
  9026                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  9027     032F  3066               	movlw	102
  9028     0330  062A               	xorwf	efgtoa@nmode^(0+128),w
  9029     0331  1D03               	btfss	3,2
  9030     0332  2B34               	goto	u4351
  9031     0333  2B35               	goto	u4350
  9032     0334                     u4351:
  9033     0334  2B4F               	goto	l2860
  9034     0335                     u4350:
  9035     0335                     l2850:
  9036                           
  9037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  9038     0335  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
  9039     0336  2B38               	goto	u4361
  9040     0337  2B39               	goto	u4360
  9041     0338                     u4361:
  9042     0338  2B43               	goto	l2856
  9043     0339                     u4360:
  9044     0339                     l2852:
  9045                           
  9046                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  9047     0339  303F               	movlw	63
  9048     033A  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9049     033B  3080               	movlw	128
  9050     033C  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9051     033D  3000               	movlw	0
  9052     033E  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9053     033F  3000               	movlw	0
  9054     0340  00C8               	movwf	efgtoa@u^(0+128)
  9055     0341                     l2854:
  9056                           
  9057                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  9058     0341  01AF               	clrf	efgtoa@e^(0+128)
  9059     0342  01B0               	clrf	(efgtoa@e+1)^(0+128)
  9060     0343                     l2856:
  9061                           
  9062                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  9063     0343  3067               	movlw	103
  9064     0344  0629               	xorwf	efgtoa@mode^(0+128),w
  9065     0345  1903               	btfsc	3,2
  9066     0346  2B48               	goto	u4371
  9067     0347  2B49               	goto	u4370
  9068     0348                     u4371:
  9069     0348  2B4F               	goto	l2860
  9070     0349                     u4370:
  9071     0349                     l2858:
  9072                           
  9073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  9074     0349  082F               	movf	efgtoa@e^(0+128),w
  9075     034A  07AD               	addwf	efgtoa@m^(0+128),f
  9076     034B  1803               	skipnc
  9077     034C  0AAE               	incf	(efgtoa@m+1)^(0+128),f
  9078     034D  0830               	movf	(efgtoa@e+1)^(0+128),w
  9079     034E  07AE               	addwf	(efgtoa@m+1)^(0+128),f
  9080     034F                     l2860:
  9081                           
  9082                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  9083     034F  01B7               	clrf	efgtoa@i^(0+128)
  9084     0350  01B8               	clrf	(efgtoa@i+1)^(0+128)
  9085     0351                     l2862:
  9086                           
  9087                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  9088     0351  0847               	movf	(efgtoa@g+3)^(0+128),w
  9089     0352  00BC               	movwf	(efgtoa@h+3)^(0+128)
  9090     0353  0846               	movf	(efgtoa@g+2)^(0+128),w
  9091     0354  00BB               	movwf	(efgtoa@h+2)^(0+128)
  9092     0355  0845               	movf	(efgtoa@g+1)^(0+128),w
  9093     0356  00BA               	movwf	(efgtoa@h+1)^(0+128)
  9094     0357  0844               	movf	efgtoa@g^(0+128),w
  9095     0358  00B9               	movwf	efgtoa@h^(0+128)
  9096     0359                     l2864:
  9097                           
  9098                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  9099     0359  084B               	movf	(efgtoa@u+3)^(0+128),w
  9100     035A  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  9101     035B  084A               	movf	(efgtoa@u+2)^(0+128),w
  9102     035C  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  9103     035D  0849               	movf	(efgtoa@u+1)^(0+128),w
  9104     035E  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  9105     035F  0848               	movf	efgtoa@u^(0+128),w
  9106     0360  00B3               	movwf	efgtoa@ou^(0+128)
  9107                           
  9108                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  9109     0361  2C4A               	goto	l2876
  9110     0362                     l2866:
  9111                           
  9112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  9113     0362  1683               	bsf	3,5	;RP0=1, select bank1
  9114     0363  1303               	bcf	3,6	;RP1=0, select bank1
  9115     0364  084B               	movf	(efgtoa@u+3)^(0+128),w
  9116     0365  00F3               	movwf	___fldiv@a+3
  9117     0366  084A               	movf	(efgtoa@u+2)^(0+128),w
  9118     0367  00F2               	movwf	___fldiv@a+2
  9119     0368  0849               	movf	(efgtoa@u+1)^(0+128),w
  9120     0369  00F1               	movwf	___fldiv@a+1
  9121     036A  0848               	movf	efgtoa@u^(0+128),w
  9122     036B  00F0               	movwf	___fldiv@a
  9123     036C  083C               	movf	(efgtoa@h+3)^(0+128),w
  9124     036D  00F7               	movwf	___fldiv@b+3
  9125     036E  083B               	movf	(efgtoa@h+2)^(0+128),w
  9126     036F  00F6               	movwf	___fldiv@b+2
  9127     0370  083A               	movf	(efgtoa@h+1)^(0+128),w
  9128     0371  00F5               	movwf	___fldiv@b+1
  9129     0372  0839               	movf	efgtoa@h^(0+128),w
  9130     0373  00F4               	movwf	___fldiv@b
  9131     0374  120A  158A  2092  120A  118A  	fcall	___fldiv
  9132     0379  0873               	movf	?___fldiv+3,w
  9133     037A  1283               	bcf	3,5	;RP0=0, select bank0
  9134     037B  1303               	bcf	3,6	;RP1=0, select bank0
  9135     037C  00B0               	movwf	floorf@x+3
  9136     037D  0872               	movf	?___fldiv+2,w
  9137     037E  00AF               	movwf	floorf@x+2
  9138     037F  0871               	movf	?___fldiv+1,w
  9139     0380  00AE               	movwf	floorf@x+1
  9140     0381  0870               	movf	?___fldiv,w
  9141     0382  00AD               	movwf	floorf@x
  9142     0383  160A  118A  25CA  120A  118A  	fcall	_floorf
  9143     0388  1283               	bcf	3,5	;RP0=0, select bank0
  9144     0389  1303               	bcf	3,6	;RP1=0, select bank0
  9145     038A  0830               	movf	?_floorf+3,w
  9146     038B  1683               	bsf	3,5	;RP0=1, select bank1
  9147     038C  1303               	bcf	3,6	;RP1=0, select bank1
  9148     038D  00C0               	movwf	(efgtoa@l+3)^(0+128)
  9149     038E  1283               	bcf	3,5	;RP0=0, select bank0
  9150     038F  1303               	bcf	3,6	;RP1=0, select bank0
  9151     0390  082F               	movf	?_floorf+2,w
  9152     0391  1683               	bsf	3,5	;RP0=1, select bank1
  9153     0392  1303               	bcf	3,6	;RP1=0, select bank1
  9154     0393  00BF               	movwf	(efgtoa@l+2)^(0+128)
  9155     0394  1283               	bcf	3,5	;RP0=0, select bank0
  9156     0395  1303               	bcf	3,6	;RP1=0, select bank0
  9157     0396  082E               	movf	?_floorf+1,w
  9158     0397  1683               	bsf	3,5	;RP0=1, select bank1
  9159     0398  1303               	bcf	3,6	;RP1=0, select bank1
  9160     0399  00BE               	movwf	(efgtoa@l+1)^(0+128)
  9161     039A  1283               	bcf	3,5	;RP0=0, select bank0
  9162     039B  1303               	bcf	3,6	;RP1=0, select bank0
  9163     039C  082D               	movf	?_floorf,w
  9164     039D  1683               	bsf	3,5	;RP0=1, select bank1
  9165     039E  1303               	bcf	3,6	;RP1=0, select bank1
  9166     039F  00BD               	movwf	efgtoa@l^(0+128)
  9167     03A0                     l2868:
  9168                           
  9169                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  9170     03A0  0840               	movf	(efgtoa@l+3)^(0+128),w
  9171     03A1  00F3               	movwf	___fltol@f1+3
  9172     03A2  083F               	movf	(efgtoa@l+2)^(0+128),w
  9173     03A3  00F2               	movwf	___fltol@f1+2
  9174     03A4  083E               	movf	(efgtoa@l+1)^(0+128),w
  9175     03A5  00F1               	movwf	___fltol@f1+1
  9176     03A6  083D               	movf	efgtoa@l^(0+128),w
  9177     03A7  00F0               	movwf	___fltol@f1
  9178     03A8  160A  118A  226B  120A  118A  	fcall	___fltol
  9179     03AD  0871               	movf	?___fltol+1,w
  9180     03AE  1683               	bsf	3,5	;RP0=1, select bank1
  9181     03AF  1303               	bcf	3,6	;RP1=0, select bank1
  9182     03B0  00AC               	movwf	(efgtoa@d+1)^(0+128)
  9183     03B1  0870               	movf	?___fltol,w
  9184     03B2  00AB               	movwf	efgtoa@d^(0+128)
  9185     03B3                     l2870:
  9186                           
  9187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  9188     03B3  084B               	movf	(efgtoa@u+3)^(0+128),w
  9189     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  9190     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  9191     03B6  00A7               	movwf	___flmul@a+3
  9192     03B7  1683               	bsf	3,5	;RP0=1, select bank1
  9193     03B8  1303               	bcf	3,6	;RP1=0, select bank1
  9194     03B9  084A               	movf	(efgtoa@u+2)^(0+128),w
  9195     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  9196     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  9197     03BC  00A6               	movwf	___flmul@a+2
  9198     03BD  1683               	bsf	3,5	;RP0=1, select bank1
  9199     03BE  1303               	bcf	3,6	;RP1=0, select bank1
  9200     03BF  0849               	movf	(efgtoa@u+1)^(0+128),w
  9201     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  9202     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  9203     03C2  00A5               	movwf	___flmul@a+1
  9204     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  9205     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  9206     03C5  0848               	movf	efgtoa@u^(0+128),w
  9207     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  9208     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  9209     03C8  00A4               	movwf	___flmul@a
  9210     03C9  1683               	bsf	3,5	;RP0=1, select bank1
  9211     03CA  1303               	bcf	3,6	;RP1=0, select bank1
  9212     03CB  0840               	movf	(efgtoa@l+3)^(0+128),w
  9213     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  9214     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  9215     03CE  00A3               	movwf	___flmul@b+3
  9216     03CF  1683               	bsf	3,5	;RP0=1, select bank1
  9217     03D0  1303               	bcf	3,6	;RP1=0, select bank1
  9218     03D1  083F               	movf	(efgtoa@l+2)^(0+128),w
  9219     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  9220     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  9221     03D4  00A2               	movwf	___flmul@b+2
  9222     03D5  1683               	bsf	3,5	;RP0=1, select bank1
  9223     03D6  1303               	bcf	3,6	;RP1=0, select bank1
  9224     03D7  083E               	movf	(efgtoa@l+1)^(0+128),w
  9225     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  9226     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  9227     03DA  00A1               	movwf	___flmul@b+1
  9228     03DB  1683               	bsf	3,5	;RP0=1, select bank1
  9229     03DC  1303               	bcf	3,6	;RP1=0, select bank1
  9230     03DD  083D               	movf	efgtoa@l^(0+128),w
  9231     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  9232     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  9233     03E0  00A0               	movwf	___flmul@b
  9234     03E1  120A  158A  24BE  120A  118A  	fcall	___flmul
  9235     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  9236     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  9237     03E8  0823               	movf	?___flmul+3,w
  9238     03E9  00BD               	movwf	___flsub@a+3
  9239     03EA  0822               	movf	?___flmul+2,w
  9240     03EB  00BC               	movwf	___flsub@a+2
  9241     03EC  0821               	movf	?___flmul+1,w
  9242     03ED  00BB               	movwf	___flsub@a+1
  9243     03EE  0820               	movf	?___flmul,w
  9244     03EF  00BA               	movwf	___flsub@a
  9245     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  9246     03F1  1303               	bcf	3,6	;RP1=0, select bank1
  9247     03F2  083C               	movf	(efgtoa@h+3)^(0+128),w
  9248     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  9249     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  9250     03F5  00C1               	movwf	___flsub@b+3
  9251     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  9252     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  9253     03F8  083B               	movf	(efgtoa@h+2)^(0+128),w
  9254     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  9255     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  9256     03FB  00C0               	movwf	___flsub@b+2
  9257     03FC  1683               	bsf	3,5	;RP0=1, select bank1
  9258     03FD  1303               	bcf	3,6	;RP1=0, select bank1
  9259     03FE  083A               	movf	(efgtoa@h+1)^(0+128),w
  9260     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  9261     0400  1303               	bcf	3,6	;RP1=0, select bank0
  9262     0401  00BF               	movwf	___flsub@b+1
  9263     0402  1683               	bsf	3,5	;RP0=1, select bank1
  9264     0403  1303               	bcf	3,6	;RP1=0, select bank1
  9265     0404  0839               	movf	efgtoa@h^(0+128),w
  9266     0405  1283               	bcf	3,5	;RP0=0, select bank0
  9267     0406  1303               	bcf	3,6	;RP1=0, select bank0
  9268     0407  00BE               	movwf	___flsub@b
  9269     0408  160A  158A  273F  120A  118A  	fcall	___flsub
  9270     040D  1283               	bcf	3,5	;RP0=0, select bank0
  9271     040E  1303               	bcf	3,6	;RP1=0, select bank0
  9272     040F  083D               	movf	?___flsub+3,w
  9273     0410  1683               	bsf	3,5	;RP0=1, select bank1
  9274     0411  1303               	bcf	3,6	;RP1=0, select bank1
  9275     0412  00BC               	movwf	(efgtoa@h+3)^(0+128)
  9276     0413  1283               	bcf	3,5	;RP0=0, select bank0
  9277     0414  1303               	bcf	3,6	;RP1=0, select bank0
  9278     0415  083C               	movf	?___flsub+2,w
  9279     0416  1683               	bsf	3,5	;RP0=1, select bank1
  9280     0417  1303               	bcf	3,6	;RP1=0, select bank1
  9281     0418  00BB               	movwf	(efgtoa@h+2)^(0+128)
  9282     0419  1283               	bcf	3,5	;RP0=0, select bank0
  9283     041A  1303               	bcf	3,6	;RP1=0, select bank0
  9284     041B  083B               	movf	?___flsub+1,w
  9285     041C  1683               	bsf	3,5	;RP0=1, select bank1
  9286     041D  1303               	bcf	3,6	;RP1=0, select bank1
  9287     041E  00BA               	movwf	(efgtoa@h+1)^(0+128)
  9288     041F  1283               	bcf	3,5	;RP0=0, select bank0
  9289     0420  1303               	bcf	3,6	;RP1=0, select bank0
  9290     0421  083A               	movf	?___flsub,w
  9291     0422  1683               	bsf	3,5	;RP0=1, select bank1
  9292     0423  1303               	bcf	3,6	;RP1=0, select bank1
  9293     0424  00B9               	movwf	efgtoa@h^(0+128)
  9294     0425                     l2872:
  9295                           
  9296                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  9297     0425  3041               	movlw	65
  9298     0426  00F3               	movwf	___fldiv@a+3
  9299     0427  3020               	movlw	32
  9300     0428  00F2               	movwf	___fldiv@a+2
  9301     0429  3000               	movlw	0
  9302     042A  00F1               	movwf	___fldiv@a+1
  9303     042B  3000               	movlw	0
  9304     042C  00F0               	movwf	___fldiv@a
  9305     042D  084B               	movf	(efgtoa@u+3)^(0+128),w
  9306     042E  00F7               	movwf	___fldiv@b+3
  9307     042F  084A               	movf	(efgtoa@u+2)^(0+128),w
  9308     0430  00F6               	movwf	___fldiv@b+2
  9309     0431  0849               	movf	(efgtoa@u+1)^(0+128),w
  9310     0432  00F5               	movwf	___fldiv@b+1
  9311     0433  0848               	movf	efgtoa@u^(0+128),w
  9312     0434  00F4               	movwf	___fldiv@b
  9313     0435  120A  158A  2092  120A  118A  	fcall	___fldiv
  9314     043A  0873               	movf	?___fldiv+3,w
  9315     043B  1683               	bsf	3,5	;RP0=1, select bank1
  9316     043C  1303               	bcf	3,6	;RP1=0, select bank1
  9317     043D  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9318     043E  0872               	movf	?___fldiv+2,w
  9319     043F  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9320     0440  0871               	movf	?___fldiv+1,w
  9321     0441  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9322     0442  0870               	movf	?___fldiv,w
  9323     0443  00C8               	movwf	efgtoa@u^(0+128)
  9324     0444                     l2874:
  9325                           
  9326                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
  9327     0444  3001               	movlw	1
  9328     0445  07B7               	addwf	efgtoa@i^(0+128),f
  9329     0446  1803               	skipnc
  9330     0447  0AB8               	incf	(efgtoa@i+1)^(0+128),f
  9331     0448  3000               	movlw	0
  9332     0449  07B8               	addwf	(efgtoa@i+1)^(0+128),f
  9333     044A                     l2876:
  9334                           
  9335                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  9336     044A  0838               	movf	(efgtoa@i+1)^(0+128),w
  9337     044B  3A80               	xorlw	128
  9338     044C  1283               	bcf	3,5	;RP0=0, select bank0
  9339     044D  1303               	bcf	3,6	;RP1=0, select bank0
  9340     044E  00CD               	movwf	??_efgtoa
  9341     044F  1683               	bsf	3,5	;RP0=1, select bank1
  9342     0450  1303               	bcf	3,6	;RP1=0, select bank1
  9343     0451  082E               	movf	(efgtoa@m+1)^(0+128),w
  9344     0452  3A80               	xorlw	128
  9345     0453  1283               	bcf	3,5	;RP0=0, select bank0
  9346     0454  1303               	bcf	3,6	;RP1=0, select bank0
  9347     0455  024D               	subwf	??_efgtoa,w
  9348     0456  1D03               	skipz
  9349     0457  2C5C               	goto	u4385
  9350     0458  1683               	bsf	3,5	;RP0=1, select bank1
  9351     0459  1303               	bcf	3,6	;RP1=0, select bank1
  9352     045A  082D               	movf	efgtoa@m^(0+128),w
  9353     045B  0237               	subwf	efgtoa@i^(0+128),w
  9354     045C                     u4385:
  9355     045C  1C03               	skipc
  9356     045D  2C5F               	goto	u4381
  9357     045E  2C60               	goto	u4380
  9358     045F                     u4381:
  9359     045F  2B62               	goto	l2866
  9360     0460                     u4380:
  9361     0460                     l2878:
  9362                           
  9363                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  9364     0460  3040               	movlw	64
  9365     0461  1283               	bcf	3,5	;RP0=0, select bank0
  9366     0462  1303               	bcf	3,6	;RP1=0, select bank0
  9367     0463  00A3               	movwf	___flmul@b+3
  9368     0464  30A0               	movlw	160
  9369     0465  00A2               	movwf	___flmul@b+2
  9370     0466  3000               	movlw	0
  9371     0467  00A1               	movwf	___flmul@b+1
  9372     0468  3000               	movlw	0
  9373     0469  00A0               	movwf	___flmul@b
  9374     046A  1683               	bsf	3,5	;RP0=1, select bank1
  9375     046B  1303               	bcf	3,6	;RP1=0, select bank1
  9376     046C  084B               	movf	(efgtoa@u+3)^(0+128),w
  9377     046D  1283               	bcf	3,5	;RP0=0, select bank0
  9378     046E  1303               	bcf	3,6	;RP1=0, select bank0
  9379     046F  00A7               	movwf	___flmul@a+3
  9380     0470  1683               	bsf	3,5	;RP0=1, select bank1
  9381     0471  1303               	bcf	3,6	;RP1=0, select bank1
  9382     0472  084A               	movf	(efgtoa@u+2)^(0+128),w
  9383     0473  1283               	bcf	3,5	;RP0=0, select bank0
  9384     0474  1303               	bcf	3,6	;RP1=0, select bank0
  9385     0475  00A6               	movwf	___flmul@a+2
  9386     0476  1683               	bsf	3,5	;RP0=1, select bank1
  9387     0477  1303               	bcf	3,6	;RP1=0, select bank1
  9388     0478  0849               	movf	(efgtoa@u+1)^(0+128),w
  9389     0479  1283               	bcf	3,5	;RP0=0, select bank0
  9390     047A  1303               	bcf	3,6	;RP1=0, select bank0
  9391     047B  00A5               	movwf	___flmul@a+1
  9392     047C  1683               	bsf	3,5	;RP0=1, select bank1
  9393     047D  1303               	bcf	3,6	;RP1=0, select bank1
  9394     047E  0848               	movf	efgtoa@u^(0+128),w
  9395     047F  1283               	bcf	3,5	;RP0=0, select bank0
  9396     0480  1303               	bcf	3,6	;RP1=0, select bank0
  9397     0481  00A4               	movwf	___flmul@a
  9398     0482  120A  158A  24BE  120A  118A  	fcall	___flmul
  9399     0487  1283               	bcf	3,5	;RP0=0, select bank0
  9400     0488  1303               	bcf	3,6	;RP1=0, select bank0
  9401     0489  0823               	movf	?___flmul+3,w
  9402     048A  1683               	bsf	3,5	;RP0=1, select bank1
  9403     048B  1303               	bcf	3,6	;RP1=0, select bank1
  9404     048C  00C0               	movwf	(efgtoa@l+3)^(0+128)
  9405     048D  1283               	bcf	3,5	;RP0=0, select bank0
  9406     048E  1303               	bcf	3,6	;RP1=0, select bank0
  9407     048F  0822               	movf	?___flmul+2,w
  9408     0490  1683               	bsf	3,5	;RP0=1, select bank1
  9409     0491  1303               	bcf	3,6	;RP1=0, select bank1
  9410     0492  00BF               	movwf	(efgtoa@l+2)^(0+128)
  9411     0493  1283               	bcf	3,5	;RP0=0, select bank0
  9412     0494  1303               	bcf	3,6	;RP1=0, select bank0
  9413     0495  0821               	movf	?___flmul+1,w
  9414     0496  1683               	bsf	3,5	;RP0=1, select bank1
  9415     0497  1303               	bcf	3,6	;RP1=0, select bank1
  9416     0498  00BE               	movwf	(efgtoa@l+1)^(0+128)
  9417     0499  1283               	bcf	3,5	;RP0=0, select bank0
  9418     049A  1303               	bcf	3,6	;RP1=0, select bank0
  9419     049B  0820               	movf	?___flmul,w
  9420     049C  1683               	bsf	3,5	;RP0=1, select bank1
  9421     049D  1303               	bcf	3,6	;RP1=0, select bank1
  9422     049E  00BD               	movwf	efgtoa@l^(0+128)
  9423     049F                     l2880:
  9424                           
  9425                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  9426     049F  083C               	movf	(efgtoa@h+3)^(0+128),w
  9427     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  9428     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  9429     04A2  00BD               	movwf	___flge@ff1+3
  9430     04A3  1683               	bsf	3,5	;RP0=1, select bank1
  9431     04A4  1303               	bcf	3,6	;RP1=0, select bank1
  9432     04A5  083B               	movf	(efgtoa@h+2)^(0+128),w
  9433     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  9434     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  9435     04A8  00BC               	movwf	___flge@ff1+2
  9436     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  9437     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  9438     04AB  083A               	movf	(efgtoa@h+1)^(0+128),w
  9439     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  9440     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  9441     04AE  00BB               	movwf	___flge@ff1+1
  9442     04AF  1683               	bsf	3,5	;RP0=1, select bank1
  9443     04B0  1303               	bcf	3,6	;RP1=0, select bank1
  9444     04B1  0839               	movf	efgtoa@h^(0+128),w
  9445     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  9446     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  9447     04B4  00BA               	movwf	___flge@ff1
  9448     04B5  1683               	bsf	3,5	;RP0=1, select bank1
  9449     04B6  1303               	bcf	3,6	;RP1=0, select bank1
  9450     04B7  0840               	movf	(efgtoa@l+3)^(0+128),w
  9451     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  9452     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  9453     04BA  00C1               	movwf	___flge@ff2+3
  9454     04BB  1683               	bsf	3,5	;RP0=1, select bank1
  9455     04BC  1303               	bcf	3,6	;RP1=0, select bank1
  9456     04BD  083F               	movf	(efgtoa@l+2)^(0+128),w
  9457     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  9458     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  9459     04C0  00C0               	movwf	___flge@ff2+2
  9460     04C1  1683               	bsf	3,5	;RP0=1, select bank1
  9461     04C2  1303               	bcf	3,6	;RP1=0, select bank1
  9462     04C3  083E               	movf	(efgtoa@l+1)^(0+128),w
  9463     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  9464     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  9465     04C6  00BF               	movwf	___flge@ff2+1
  9466     04C7  1683               	bsf	3,5	;RP0=1, select bank1
  9467     04C8  1303               	bcf	3,6	;RP1=0, select bank1
  9468     04C9  083D               	movf	efgtoa@l^(0+128),w
  9469     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  9470     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  9471     04CC  00BE               	movwf	___flge@ff2
  9472     04CD  160A  118A  241B  120A  118A  	fcall	___flge
  9473     04D2  1803               	btfsc	3,0
  9474     04D3  2CD5               	goto	u4391
  9475     04D4  2CD6               	goto	u4390
  9476     04D5                     u4391:
  9477     04D5  2CE1               	goto	l2884
  9478     04D6                     u4390:
  9479     04D6                     l2882:
  9480                           
  9481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  9482     04D6  3000               	movlw	0
  9483     04D7  1683               	bsf	3,5	;RP0=1, select bank1
  9484     04D8  1303               	bcf	3,6	;RP1=0, select bank1
  9485     04D9  00C0               	movwf	(efgtoa@l+3)^(0+128)
  9486     04DA  3000               	movlw	0
  9487     04DB  00BF               	movwf	(efgtoa@l+2)^(0+128)
  9488     04DC  3000               	movlw	0
  9489     04DD  00BE               	movwf	(efgtoa@l+1)^(0+128)
  9490     04DE  3000               	movlw	0
  9491     04DF  00BD               	movwf	efgtoa@l^(0+128)
  9492                           
  9493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
  9494     04E0  2D0A               	goto	l2890
  9495     04E1                     l2884:
  9496                           
  9497                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  9498     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  9499     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  9500     04E3  083C               	movf	(efgtoa@h+3)^(0+128),w
  9501     04E4  00F3               	movwf	___fleq@ff1+3
  9502     04E5  083B               	movf	(efgtoa@h+2)^(0+128),w
  9503     04E6  00F2               	movwf	___fleq@ff1+2
  9504     04E7  083A               	movf	(efgtoa@h+1)^(0+128),w
  9505     04E8  00F1               	movwf	___fleq@ff1+1
  9506     04E9  0839               	movf	efgtoa@h^(0+128),w
  9507     04EA  00F0               	movwf	___fleq@ff1
  9508     04EB  0840               	movf	(efgtoa@l+3)^(0+128),w
  9509     04EC  00F7               	movwf	___fleq@ff2+3
  9510     04ED  083F               	movf	(efgtoa@l+2)^(0+128),w
  9511     04EE  00F6               	movwf	___fleq@ff2+2
  9512     04EF  083E               	movf	(efgtoa@l+1)^(0+128),w
  9513     04F0  00F5               	movwf	___fleq@ff2+1
  9514     04F1  083D               	movf	efgtoa@l^(0+128),w
  9515     04F2  00F4               	movwf	___fleq@ff2
  9516     04F3  160A  118A  2128  120A  118A  	fcall	___fleq
  9517     04F8  1C03               	btfss	3,0
  9518     04F9  2CFB               	goto	u4401
  9519     04FA  2CFC               	goto	u4400
  9520     04FB                     u4401:
  9521     04FB  2D0A               	goto	l2890
  9522     04FC                     u4400:
  9523     04FC                     l2886:
  9524     04FC  1683               	bsf	3,5	;RP0=1, select bank1
  9525     04FD  1303               	bcf	3,6	;RP1=0, select bank1
  9526     04FE  182B               	btfsc	efgtoa@d^(0+128),0
  9527     04FF  2D01               	goto	u4411
  9528     0500  2D02               	goto	u4410
  9529     0501                     u4411:
  9530     0501  2D0A               	goto	l2890
  9531     0502                     u4410:
  9532     0502                     l2888:
  9533                           
  9534                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  9535     0502  3000               	movlw	0
  9536     0503  00C0               	movwf	(efgtoa@l+3)^(0+128)
  9537     0504  3000               	movlw	0
  9538     0505  00BF               	movwf	(efgtoa@l+2)^(0+128)
  9539     0506  3000               	movlw	0
  9540     0507  00BE               	movwf	(efgtoa@l+1)^(0+128)
  9541     0508  3000               	movlw	0
  9542     0509  00BD               	movwf	efgtoa@l^(0+128)
  9543     050A                     l2890:
  9544                           
  9545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  9546     050A  1683               	bsf	3,5	;RP0=1, select bank1
  9547     050B  1303               	bcf	3,6	;RP1=0, select bank1
  9548     050C  0840               	movf	(efgtoa@l+3)^(0+128),w
  9549     050D  00F3               	movwf	___fladd@b+3
  9550     050E  083F               	movf	(efgtoa@l+2)^(0+128),w
  9551     050F  00F2               	movwf	___fladd@b+2
  9552     0510  083E               	movf	(efgtoa@l+1)^(0+128),w
  9553     0511  00F1               	movwf	___fladd@b+1
  9554     0512  083D               	movf	efgtoa@l^(0+128),w
  9555     0513  00F0               	movwf	___fladd@b
  9556     0514  0847               	movf	(efgtoa@g+3)^(0+128),w
  9557     0515  00F7               	movwf	___fladd@a+3
  9558     0516  0846               	movf	(efgtoa@g+2)^(0+128),w
  9559     0517  00F6               	movwf	___fladd@a+2
  9560     0518  0845               	movf	(efgtoa@g+1)^(0+128),w
  9561     0519  00F5               	movwf	___fladd@a+1
  9562     051A  0844               	movf	efgtoa@g^(0+128),w
  9563     051B  00F4               	movwf	___fladd@a
  9564     051C  120A  158A  2262  120A  118A  	fcall	___fladd
  9565     0521  0873               	movf	?___fladd+3,w
  9566     0522  1683               	bsf	3,5	;RP0=1, select bank1
  9567     0523  1303               	bcf	3,6	;RP1=0, select bank1
  9568     0524  00BC               	movwf	(efgtoa@h+3)^(0+128)
  9569     0525  0872               	movf	?___fladd+2,w
  9570     0526  00BB               	movwf	(efgtoa@h+2)^(0+128)
  9571     0527  0871               	movf	?___fladd+1,w
  9572     0528  00BA               	movwf	(efgtoa@h+1)^(0+128)
  9573     0529  0870               	movf	?___fladd,w
  9574     052A  00B9               	movwf	efgtoa@h^(0+128)
  9575     052B                     l2892:
  9576                           
  9577                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  9578     052B  083C               	movf	(efgtoa@h+3)^(0+128),w
  9579     052C  1283               	bcf	3,5	;RP0=0, select bank0
  9580     052D  1303               	bcf	3,6	;RP1=0, select bank0
  9581     052E  00BD               	movwf	___flge@ff1+3
  9582     052F  1683               	bsf	3,5	;RP0=1, select bank1
  9583     0530  1303               	bcf	3,6	;RP1=0, select bank1
  9584     0531  083B               	movf	(efgtoa@h+2)^(0+128),w
  9585     0532  1283               	bcf	3,5	;RP0=0, select bank0
  9586     0533  1303               	bcf	3,6	;RP1=0, select bank0
  9587     0534  00BC               	movwf	___flge@ff1+2
  9588     0535  1683               	bsf	3,5	;RP0=1, select bank1
  9589     0536  1303               	bcf	3,6	;RP1=0, select bank1
  9590     0537  083A               	movf	(efgtoa@h+1)^(0+128),w
  9591     0538  1283               	bcf	3,5	;RP0=0, select bank0
  9592     0539  1303               	bcf	3,6	;RP1=0, select bank0
  9593     053A  00BB               	movwf	___flge@ff1+1
  9594     053B  1683               	bsf	3,5	;RP0=1, select bank1
  9595     053C  1303               	bcf	3,6	;RP1=0, select bank1
  9596     053D  0839               	movf	efgtoa@h^(0+128),w
  9597     053E  1283               	bcf	3,5	;RP0=0, select bank0
  9598     053F  1303               	bcf	3,6	;RP1=0, select bank0
  9599     0540  00BA               	movwf	___flge@ff1
  9600     0541  3041               	movlw	65
  9601     0542  00A3               	movwf	___flmul@b+3
  9602     0543  3020               	movlw	32
  9603     0544  00A2               	movwf	___flmul@b+2
  9604     0545  3000               	movlw	0
  9605     0546  00A1               	movwf	___flmul@b+1
  9606     0547  3000               	movlw	0
  9607     0548  00A0               	movwf	___flmul@b
  9608     0549  1683               	bsf	3,5	;RP0=1, select bank1
  9609     054A  1303               	bcf	3,6	;RP1=0, select bank1
  9610     054B  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9611     054C  1283               	bcf	3,5	;RP0=0, select bank0
  9612     054D  1303               	bcf	3,6	;RP1=0, select bank0
  9613     054E  00A7               	movwf	___flmul@a+3
  9614     054F  1683               	bsf	3,5	;RP0=1, select bank1
  9615     0550  1303               	bcf	3,6	;RP1=0, select bank1
  9616     0551  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9617     0552  1283               	bcf	3,5	;RP0=0, select bank0
  9618     0553  1303               	bcf	3,6	;RP1=0, select bank0
  9619     0554  00A6               	movwf	___flmul@a+2
  9620     0555  1683               	bsf	3,5	;RP0=1, select bank1
  9621     0556  1303               	bcf	3,6	;RP1=0, select bank1
  9622     0557  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9623     0558  1283               	bcf	3,5	;RP0=0, select bank0
  9624     0559  1303               	bcf	3,6	;RP1=0, select bank0
  9625     055A  00A5               	movwf	___flmul@a+1
  9626     055B  1683               	bsf	3,5	;RP0=1, select bank1
  9627     055C  1303               	bcf	3,6	;RP1=0, select bank1
  9628     055D  0833               	movf	efgtoa@ou^(0+128),w
  9629     055E  1283               	bcf	3,5	;RP0=0, select bank0
  9630     055F  1303               	bcf	3,6	;RP1=0, select bank0
  9631     0560  00A4               	movwf	___flmul@a
  9632     0561  120A  158A  24BE  120A  118A  	fcall	___flmul
  9633     0566  1283               	bcf	3,5	;RP0=0, select bank0
  9634     0567  1303               	bcf	3,6	;RP1=0, select bank0
  9635     0568  0823               	movf	?___flmul+3,w
  9636     0569  00C1               	movwf	___flge@ff2+3
  9637     056A  0822               	movf	?___flmul+2,w
  9638     056B  00C0               	movwf	___flge@ff2+2
  9639     056C  0821               	movf	?___flmul+1,w
  9640     056D  00BF               	movwf	___flge@ff2+1
  9641     056E  0820               	movf	?___flmul,w
  9642     056F  00BE               	movwf	___flge@ff2
  9643     0570  160A  118A  241B  120A  118A  	fcall	___flge
  9644     0575  1C03               	btfss	3,0
  9645     0576  2D78               	goto	u4421
  9646     0577  2D79               	goto	u4420
  9647     0578                     u4421:
  9648     0578  2DCC               	goto	l703
  9649     0579                     u4420:
  9650     0579                     l2894:
  9651                           
  9652                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
  9653     0579  3001               	movlw	1
  9654     057A  1683               	bsf	3,5	;RP0=1, select bank1
  9655     057B  1303               	bcf	3,6	;RP1=0, select bank1
  9656     057C  07AF               	addwf	efgtoa@e^(0+128),f
  9657     057D  1803               	skipnc
  9658     057E  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  9659     057F  3000               	movlw	0
  9660     0580  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  9661     0581                     l2896:
  9662                           
  9663                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  9664     0581  3041               	movlw	65
  9665     0582  1283               	bcf	3,5	;RP0=0, select bank0
  9666     0583  1303               	bcf	3,6	;RP1=0, select bank0
  9667     0584  00A3               	movwf	___flmul@b+3
  9668     0585  3020               	movlw	32
  9669     0586  00A2               	movwf	___flmul@b+2
  9670     0587  3000               	movlw	0
  9671     0588  00A1               	movwf	___flmul@b+1
  9672     0589  3000               	movlw	0
  9673     058A  00A0               	movwf	___flmul@b
  9674     058B  1683               	bsf	3,5	;RP0=1, select bank1
  9675     058C  1303               	bcf	3,6	;RP1=0, select bank1
  9676     058D  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9677     058E  1283               	bcf	3,5	;RP0=0, select bank0
  9678     058F  1303               	bcf	3,6	;RP1=0, select bank0
  9679     0590  00A7               	movwf	___flmul@a+3
  9680     0591  1683               	bsf	3,5	;RP0=1, select bank1
  9681     0592  1303               	bcf	3,6	;RP1=0, select bank1
  9682     0593  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9683     0594  1283               	bcf	3,5	;RP0=0, select bank0
  9684     0595  1303               	bcf	3,6	;RP1=0, select bank0
  9685     0596  00A6               	movwf	___flmul@a+2
  9686     0597  1683               	bsf	3,5	;RP0=1, select bank1
  9687     0598  1303               	bcf	3,6	;RP1=0, select bank1
  9688     0599  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9689     059A  1283               	bcf	3,5	;RP0=0, select bank0
  9690     059B  1303               	bcf	3,6	;RP1=0, select bank0
  9691     059C  00A5               	movwf	___flmul@a+1
  9692     059D  1683               	bsf	3,5	;RP0=1, select bank1
  9693     059E  1303               	bcf	3,6	;RP1=0, select bank1
  9694     059F  0833               	movf	efgtoa@ou^(0+128),w
  9695     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  9696     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  9697     05A2  00A4               	movwf	___flmul@a
  9698     05A3  120A  158A  24BE  120A  118A  	fcall	___flmul
  9699     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  9700     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  9701     05AA  0823               	movf	?___flmul+3,w
  9702     05AB  1683               	bsf	3,5	;RP0=1, select bank1
  9703     05AC  1303               	bcf	3,6	;RP1=0, select bank1
  9704     05AD  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  9705     05AE  1283               	bcf	3,5	;RP0=0, select bank0
  9706     05AF  1303               	bcf	3,6	;RP1=0, select bank0
  9707     05B0  0822               	movf	?___flmul+2,w
  9708     05B1  1683               	bsf	3,5	;RP0=1, select bank1
  9709     05B2  1303               	bcf	3,6	;RP1=0, select bank1
  9710     05B3  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  9711     05B4  1283               	bcf	3,5	;RP0=0, select bank0
  9712     05B5  1303               	bcf	3,6	;RP1=0, select bank0
  9713     05B6  0821               	movf	?___flmul+1,w
  9714     05B7  1683               	bsf	3,5	;RP0=1, select bank1
  9715     05B8  1303               	bcf	3,6	;RP1=0, select bank1
  9716     05B9  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  9717     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  9718     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  9719     05BC  0820               	movf	?___flmul,w
  9720     05BD  1683               	bsf	3,5	;RP0=1, select bank1
  9721     05BE  1303               	bcf	3,6	;RP1=0, select bank1
  9722     05BF  00B3               	movwf	efgtoa@ou^(0+128)
  9723     05C0                     l2898:
  9724                           
  9725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  9726     05C0  3066               	movlw	102
  9727     05C1  062A               	xorwf	efgtoa@nmode^(0+128),w
  9728     05C2  1D03               	btfss	3,2
  9729     05C3  2DC5               	goto	u4431
  9730     05C4  2DC6               	goto	u4430
  9731     05C5                     u4431:
  9732     05C5  2DCC               	goto	l703
  9733     05C6                     u4430:
  9734     05C6                     l2900:
  9735                           
  9736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
  9737     05C6  3001               	movlw	1
  9738     05C7  07AD               	addwf	efgtoa@m^(0+128),f
  9739     05C8  1803               	skipnc
  9740     05C9  0AAE               	incf	(efgtoa@m+1)^(0+128),f
  9741     05CA  3000               	movlw	0
  9742     05CB  07AE               	addwf	(efgtoa@m+1)^(0+128),f
  9743     05CC                     l703:	
  9744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 767:  }
  9745                           
  9746                           
  9747                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  9748     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  9749     05CD  1303               	bcf	3,6	;RP1=0, select bank1
  9750     05CE  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9751     05CF  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9752     05D0  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9753     05D1  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9754     05D2  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9755     05D3  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9756     05D4  0833               	movf	efgtoa@ou^(0+128),w
  9757     05D5  00C8               	movwf	efgtoa@u^(0+128)
  9758                           
  9759                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  9760     05D6  0830               	movf	(efgtoa@e+1)^(0+128),w
  9761     05D7  00A1               	movwf	(efgtoa@ne+1)^(0+128)
  9762     05D8  082F               	movf	efgtoa@e^(0+128),w
  9763     05D9  00A0               	movwf	efgtoa@ne^(0+128)
  9764     05DA                     l2902:
  9765                           
  9766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  9767     05DA  01A8               	clrf	efgtoa@pp^(0+128)
  9768     05DB                     l2904:
  9769                           
  9770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  9771     05DB  01A4               	clrf	efgtoa@t^(0+128)
  9772     05DC  01A5               	clrf	(efgtoa@t+1)^(0+128)
  9773     05DD                     l2906:
  9774                           
  9775                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  9776     05DD  01B7               	clrf	efgtoa@i^(0+128)
  9777     05DE  01B8               	clrf	(efgtoa@i+1)^(0+128)
  9778                           
  9779                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9780     05DF  2F40               	goto	l2950
  9781     05E0                     l2908:
  9782                           
  9783                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  9784     05E0  1683               	bsf	3,5	;RP0=1, select bank1
  9785     05E1  1303               	bcf	3,6	;RP1=0, select bank1
  9786     05E2  084B               	movf	(efgtoa@u+3)^(0+128),w
  9787     05E3  00F3               	movwf	___fldiv@a+3
  9788     05E4  084A               	movf	(efgtoa@u+2)^(0+128),w
  9789     05E5  00F2               	movwf	___fldiv@a+2
  9790     05E6  0849               	movf	(efgtoa@u+1)^(0+128),w
  9791     05E7  00F1               	movwf	___fldiv@a+1
  9792     05E8  0848               	movf	efgtoa@u^(0+128),w
  9793     05E9  00F0               	movwf	___fldiv@a
  9794     05EA  083C               	movf	(efgtoa@h+3)^(0+128),w
  9795     05EB  00F7               	movwf	___fldiv@b+3
  9796     05EC  083B               	movf	(efgtoa@h+2)^(0+128),w
  9797     05ED  00F6               	movwf	___fldiv@b+2
  9798     05EE  083A               	movf	(efgtoa@h+1)^(0+128),w
  9799     05EF  00F5               	movwf	___fldiv@b+1
  9800     05F0  0839               	movf	efgtoa@h^(0+128),w
  9801     05F1  00F4               	movwf	___fldiv@b
  9802     05F2  120A  158A  2092  120A  118A  	fcall	___fldiv
  9803     05F7  0873               	movf	?___fldiv+3,w
  9804     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  9805     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  9806     05FA  00B0               	movwf	floorf@x+3
  9807     05FB  0872               	movf	?___fldiv+2,w
  9808     05FC  00AF               	movwf	floorf@x+2
  9809     05FD  0871               	movf	?___fldiv+1,w
  9810     05FE  00AE               	movwf	floorf@x+1
  9811     05FF  0870               	movf	?___fldiv,w
  9812     0600  00AD               	movwf	floorf@x
  9813     0601  160A  118A  25CA  120A  118A  	fcall	_floorf
  9814     0606  1283               	bcf	3,5	;RP0=0, select bank0
  9815     0607  1303               	bcf	3,6	;RP1=0, select bank0
  9816     0608  0830               	movf	?_floorf+3,w
  9817     0609  1683               	bsf	3,5	;RP0=1, select bank1
  9818     060A  1303               	bcf	3,6	;RP1=0, select bank1
  9819     060B  00C0               	movwf	(efgtoa@l+3)^(0+128)
  9820     060C  1283               	bcf	3,5	;RP0=0, select bank0
  9821     060D  1303               	bcf	3,6	;RP1=0, select bank0
  9822     060E  082F               	movf	?_floorf+2,w
  9823     060F  1683               	bsf	3,5	;RP0=1, select bank1
  9824     0610  1303               	bcf	3,6	;RP1=0, select bank1
  9825     0611  00BF               	movwf	(efgtoa@l+2)^(0+128)
  9826     0612  1283               	bcf	3,5	;RP0=0, select bank0
  9827     0613  1303               	bcf	3,6	;RP1=0, select bank0
  9828     0614  082E               	movf	?_floorf+1,w
  9829     0615  1683               	bsf	3,5	;RP0=1, select bank1
  9830     0616  1303               	bcf	3,6	;RP1=0, select bank1
  9831     0617  00BE               	movwf	(efgtoa@l+1)^(0+128)
  9832     0618  1283               	bcf	3,5	;RP0=0, select bank0
  9833     0619  1303               	bcf	3,6	;RP1=0, select bank0
  9834     061A  082D               	movf	?_floorf,w
  9835     061B  1683               	bsf	3,5	;RP0=1, select bank1
  9836     061C  1303               	bcf	3,6	;RP1=0, select bank1
  9837     061D  00BD               	movwf	efgtoa@l^(0+128)
  9838                           
  9839                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  9840     061E  0840               	movf	(efgtoa@l+3)^(0+128),w
  9841     061F  00F3               	movwf	___fltol@f1+3
  9842     0620  083F               	movf	(efgtoa@l+2)^(0+128),w
  9843     0621  00F2               	movwf	___fltol@f1+2
  9844     0622  083E               	movf	(efgtoa@l+1)^(0+128),w
  9845     0623  00F1               	movwf	___fltol@f1+1
  9846     0624  083D               	movf	efgtoa@l^(0+128),w
  9847     0625  00F0               	movwf	___fltol@f1
  9848     0626  160A  118A  226B  120A  118A  	fcall	___fltol
  9849     062B  0871               	movf	?___fltol+1,w
  9850     062C  3A80               	xorlw	128
  9851     062D  00FF               	movwf	btemp+1
  9852     062E  3080               	movlw	128
  9853     062F  027F               	subwf	btemp+1,w
  9854     0630  1D03               	skipz
  9855     0631  2E34               	goto	u4445
  9856     0632  300A               	movlw	10
  9857     0633  0270               	subwf	?___fltol,w
  9858     0634                     u4445:
  9859     0634  1803               	skipnc
  9860     0635  2E37               	goto	u4441
  9861     0636  2E38               	goto	u4440
  9862     0637                     u4441:
  9863     0637  2E4E               	goto	l2912
  9864     0638                     u4440:
  9865     0638                     l2910:
  9866     0638  1683               	bsf	3,5	;RP0=1, select bank1
  9867     0639  1303               	bcf	3,6	;RP1=0, select bank1
  9868     063A  0840               	movf	(efgtoa@l+3)^(0+128),w
  9869     063B  00F3               	movwf	___fltol@f1+3
  9870     063C  083F               	movf	(efgtoa@l+2)^(0+128),w
  9871     063D  00F2               	movwf	___fltol@f1+2
  9872     063E  083E               	movf	(efgtoa@l+1)^(0+128),w
  9873     063F  00F1               	movwf	___fltol@f1+1
  9874     0640  083D               	movf	efgtoa@l^(0+128),w
  9875     0641  00F0               	movwf	___fltol@f1
  9876     0642  160A  118A  226B  120A  118A  	fcall	___fltol
  9877     0647  0871               	movf	?___fltol+1,w
  9878     0648  1683               	bsf	3,5	;RP0=1, select bank1
  9879     0649  1303               	bcf	3,6	;RP1=0, select bank1
  9880     064A  00AC               	movwf	(efgtoa@d+1)^(0+128)
  9881     064B  0870               	movf	?___fltol,w
  9882     064C  00AB               	movwf	efgtoa@d^(0+128)
  9883     064D  2E54               	goto	l2914
  9884     064E                     l2912:
  9885     064E  3009               	movlw	9
  9886     064F  1683               	bsf	3,5	;RP0=1, select bank1
  9887     0650  1303               	bcf	3,6	;RP1=0, select bank1
  9888     0651  00AB               	movwf	efgtoa@d^(0+128)
  9889     0652  3000               	movlw	0
  9890     0653  00AC               	movwf	(efgtoa@d^(0+128)+1)
  9891     0654                     l2914:
  9892                           
  9893                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  9894     0654  0828               	movf	efgtoa@pp^(0+128),w
  9895     0655  1D03               	btfss	3,2
  9896     0656  2E58               	goto	u4451
  9897     0657  2E59               	goto	u4450
  9898     0658                     u4451:
  9899     0658  2E8A               	goto	l2934
  9900     0659                     u4450:
  9901     0659                     l2916:
  9902     0659  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
  9903     065A  2E5C               	goto	u4461
  9904     065B  2E5D               	goto	u4460
  9905     065C                     u4461:
  9906     065C  2E8A               	goto	l2934
  9907     065D                     u4460:
  9908     065D                     l2918:
  9909                           
  9910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  9911     065D  0842               	movf	efgtoa@n^(0+128),w
  9912     065E  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9913     065F  0084               	movwf	4
  9914     0660  302E               	movlw	46
  9915     0661  1783               	bsf	3,7	;select IRP bank3
  9916     0662  0080               	movwf	0
  9917     0663                     l2920:
  9918     0663  3001               	movlw	1
  9919     0664  07C2               	addwf	efgtoa@n^(0+128),f
  9920     0665  1803               	skipnc
  9921     0666  0AC3               	incf	(efgtoa@n+1)^(0+128),f
  9922     0667  3000               	movlw	0
  9923     0668  07C3               	addwf	(efgtoa@n+1)^(0+128),f
  9924     0669                     l2922:
  9925                           
  9926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  9927     0669  30FF               	movlw	255
  9928     066A  07B1               	addwf	efgtoa@w^(0+128),f
  9929     066B  1803               	skipnc
  9930     066C  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  9931     066D  30FF               	movlw	255
  9932     066E  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  9933     066F                     l2924:
  9934                           
  9935                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  9936     066F  3001               	movlw	1
  9937     0670  00A8               	movwf	efgtoa@pp^(0+128)
  9938     0671  2E8A               	goto	l2934
  9939     0672                     l2926:
  9940                           
  9941                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  9942     0672  0842               	movf	efgtoa@n^(0+128),w
  9943     0673  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9944     0674  0084               	movwf	4
  9945     0675  3030               	movlw	48
  9946     0676  1783               	bsf	3,7	;select IRP bank3
  9947     0677  0080               	movwf	0
  9948     0678                     l2928:
  9949     0678  3001               	movlw	1
  9950     0679  07C2               	addwf	efgtoa@n^(0+128),f
  9951     067A  1803               	skipnc
  9952     067B  0AC3               	incf	(efgtoa@n+1)^(0+128),f
  9953     067C  3000               	movlw	0
  9954     067D  07C3               	addwf	(efgtoa@n+1)^(0+128),f
  9955     067E                     l2930:
  9956                           
  9957                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  9958     067E  30FF               	movlw	255
  9959     067F  07B1               	addwf	efgtoa@w^(0+128),f
  9960     0680  1803               	skipnc
  9961     0681  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  9962     0682  30FF               	movlw	255
  9963     0683  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  9964     0684                     l2932:
  9965                           
  9966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  9967     0684  30FF               	movlw	255
  9968     0685  07A4               	addwf	efgtoa@t^(0+128),f
  9969     0686  1803               	skipnc
  9970     0687  0AA5               	incf	(efgtoa@t+1)^(0+128),f
  9971     0688  30FF               	movlw	255
  9972     0689  07A5               	addwf	(efgtoa@t+1)^(0+128),f
  9973     068A                     l2934:
  9974                           
  9975                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  9976     068A  0824               	movf	efgtoa@t^(0+128),w
  9977     068B  0425               	iorwf	(efgtoa@t+1)^(0+128),w
  9978     068C  1D03               	btfss	3,2
  9979     068D  2E8F               	goto	u4471
  9980     068E  2E90               	goto	u4470
  9981     068F                     u4471:
  9982     068F  2E72               	goto	l2926
  9983     0690                     u4470:
  9984     0690                     l2936:
  9985                           
  9986                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  9987     0690  0842               	movf	efgtoa@n^(0+128),w
  9988     0691  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9989     0692  0084               	movwf	4
  9990     0693  082B               	movf	efgtoa@d^(0+128),w
  9991     0694  3E30               	addlw	48
  9992     0695  1783               	bsf	3,7	;select IRP bank3
  9993     0696  0080               	movwf	0
  9994     0697                     l2938:
  9995     0697  3001               	movlw	1
  9996     0698  07C2               	addwf	efgtoa@n^(0+128),f
  9997     0699  1803               	skipnc
  9998     069A  0AC3               	incf	(efgtoa@n+1)^(0+128),f
  9999     069B  3000               	movlw	0
 10000     069C  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 10001     069D                     l2940:
 10002                           
 10003                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 10004     069D  30FF               	movlw	255
 10005     069E  07B1               	addwf	efgtoa@w^(0+128),f
 10006     069F  1803               	skipnc
 10007     06A0  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 10008     06A1  30FF               	movlw	255
 10009     06A2  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 10010     06A3                     l2942:
 10011                           
 10012                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 10013     06A3  084B               	movf	(efgtoa@u+3)^(0+128),w
 10014     06A4  1283               	bcf	3,5	;RP0=0, select bank0
 10015     06A5  1303               	bcf	3,6	;RP1=0, select bank0
 10016     06A6  00A7               	movwf	___flmul@a+3
 10017     06A7  1683               	bsf	3,5	;RP0=1, select bank1
 10018     06A8  1303               	bcf	3,6	;RP1=0, select bank1
 10019     06A9  084A               	movf	(efgtoa@u+2)^(0+128),w
 10020     06AA  1283               	bcf	3,5	;RP0=0, select bank0
 10021     06AB  1303               	bcf	3,6	;RP1=0, select bank0
 10022     06AC  00A6               	movwf	___flmul@a+2
 10023     06AD  1683               	bsf	3,5	;RP0=1, select bank1
 10024     06AE  1303               	bcf	3,6	;RP1=0, select bank1
 10025     06AF  0849               	movf	(efgtoa@u+1)^(0+128),w
 10026     06B0  1283               	bcf	3,5	;RP0=0, select bank0
 10027     06B1  1303               	bcf	3,6	;RP1=0, select bank0
 10028     06B2  00A5               	movwf	___flmul@a+1
 10029     06B3  1683               	bsf	3,5	;RP0=1, select bank1
 10030     06B4  1303               	bcf	3,6	;RP1=0, select bank1
 10031     06B5  0848               	movf	efgtoa@u^(0+128),w
 10032     06B6  1283               	bcf	3,5	;RP0=0, select bank0
 10033     06B7  1303               	bcf	3,6	;RP1=0, select bank0
 10034     06B8  00A4               	movwf	___flmul@a
 10035     06B9  1683               	bsf	3,5	;RP0=1, select bank1
 10036     06BA  1303               	bcf	3,6	;RP1=0, select bank1
 10037     06BB  0840               	movf	(efgtoa@l+3)^(0+128),w
 10038     06BC  1283               	bcf	3,5	;RP0=0, select bank0
 10039     06BD  1303               	bcf	3,6	;RP1=0, select bank0
 10040     06BE  00A3               	movwf	___flmul@b+3
 10041     06BF  1683               	bsf	3,5	;RP0=1, select bank1
 10042     06C0  1303               	bcf	3,6	;RP1=0, select bank1
 10043     06C1  083F               	movf	(efgtoa@l+2)^(0+128),w
 10044     06C2  1283               	bcf	3,5	;RP0=0, select bank0
 10045     06C3  1303               	bcf	3,6	;RP1=0, select bank0
 10046     06C4  00A2               	movwf	___flmul@b+2
 10047     06C5  1683               	bsf	3,5	;RP0=1, select bank1
 10048     06C6  1303               	bcf	3,6	;RP1=0, select bank1
 10049     06C7  083E               	movf	(efgtoa@l+1)^(0+128),w
 10050     06C8  1283               	bcf	3,5	;RP0=0, select bank0
 10051     06C9  1303               	bcf	3,6	;RP1=0, select bank0
 10052     06CA  00A1               	movwf	___flmul@b+1
 10053     06CB  1683               	bsf	3,5	;RP0=1, select bank1
 10054     06CC  1303               	bcf	3,6	;RP1=0, select bank1
 10055     06CD  083D               	movf	efgtoa@l^(0+128),w
 10056     06CE  1283               	bcf	3,5	;RP0=0, select bank0
 10057     06CF  1303               	bcf	3,6	;RP1=0, select bank0
 10058     06D0  00A0               	movwf	___flmul@b
 10059     06D1  120A  158A  24BE  120A  118A  	fcall	___flmul
 10060     06D6  1283               	bcf	3,5	;RP0=0, select bank0
 10061     06D7  1303               	bcf	3,6	;RP1=0, select bank0
 10062     06D8  0823               	movf	?___flmul+3,w
 10063     06D9  00BD               	movwf	___flsub@a+3
 10064     06DA  0822               	movf	?___flmul+2,w
 10065     06DB  00BC               	movwf	___flsub@a+2
 10066     06DC  0821               	movf	?___flmul+1,w
 10067     06DD  00BB               	movwf	___flsub@a+1
 10068     06DE  0820               	movf	?___flmul,w
 10069     06DF  00BA               	movwf	___flsub@a
 10070     06E0  1683               	bsf	3,5	;RP0=1, select bank1
 10071     06E1  1303               	bcf	3,6	;RP1=0, select bank1
 10072     06E2  083C               	movf	(efgtoa@h+3)^(0+128),w
 10073     06E3  1283               	bcf	3,5	;RP0=0, select bank0
 10074     06E4  1303               	bcf	3,6	;RP1=0, select bank0
 10075     06E5  00C1               	movwf	___flsub@b+3
 10076     06E6  1683               	bsf	3,5	;RP0=1, select bank1
 10077     06E7  1303               	bcf	3,6	;RP1=0, select bank1
 10078     06E8  083B               	movf	(efgtoa@h+2)^(0+128),w
 10079     06E9  1283               	bcf	3,5	;RP0=0, select bank0
 10080     06EA  1303               	bcf	3,6	;RP1=0, select bank0
 10081     06EB  00C0               	movwf	___flsub@b+2
 10082     06EC  1683               	bsf	3,5	;RP0=1, select bank1
 10083     06ED  1303               	bcf	3,6	;RP1=0, select bank1
 10084     06EE  083A               	movf	(efgtoa@h+1)^(0+128),w
 10085     06EF  1283               	bcf	3,5	;RP0=0, select bank0
 10086     06F0  1303               	bcf	3,6	;RP1=0, select bank0
 10087     06F1  00BF               	movwf	___flsub@b+1
 10088     06F2  1683               	bsf	3,5	;RP0=1, select bank1
 10089     06F3  1303               	bcf	3,6	;RP1=0, select bank1
 10090     06F4  0839               	movf	efgtoa@h^(0+128),w
 10091     06F5  1283               	bcf	3,5	;RP0=0, select bank0
 10092     06F6  1303               	bcf	3,6	;RP1=0, select bank0
 10093     06F7  00BE               	movwf	___flsub@b
 10094     06F8  160A  158A  273F  120A  118A  	fcall	___flsub
 10095     06FD  1283               	bcf	3,5	;RP0=0, select bank0
 10096     06FE  1303               	bcf	3,6	;RP1=0, select bank0
 10097     06FF  083D               	movf	?___flsub+3,w
 10098     0700  1683               	bsf	3,5	;RP0=1, select bank1
 10099     0701  1303               	bcf	3,6	;RP1=0, select bank1
 10100     0702  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10101     0703  1283               	bcf	3,5	;RP0=0, select bank0
 10102     0704  1303               	bcf	3,6	;RP1=0, select bank0
 10103     0705  083C               	movf	?___flsub+2,w
 10104     0706  1683               	bsf	3,5	;RP0=1, select bank1
 10105     0707  1303               	bcf	3,6	;RP1=0, select bank1
 10106     0708  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10107     0709  1283               	bcf	3,5	;RP0=0, select bank0
 10108     070A  1303               	bcf	3,6	;RP1=0, select bank0
 10109     070B  083B               	movf	?___flsub+1,w
 10110     070C  1683               	bsf	3,5	;RP0=1, select bank1
 10111     070D  1303               	bcf	3,6	;RP1=0, select bank1
 10112     070E  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10113     070F  1283               	bcf	3,5	;RP0=0, select bank0
 10114     0710  1303               	bcf	3,6	;RP1=0, select bank0
 10115     0711  083A               	movf	?___flsub,w
 10116     0712  1683               	bsf	3,5	;RP0=1, select bank1
 10117     0713  1303               	bcf	3,6	;RP1=0, select bank1
 10118     0714  00B9               	movwf	efgtoa@h^(0+128)
 10119     0715                     l2944:
 10120                           
 10121                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 10122     0715  3041               	movlw	65
 10123     0716  00F3               	movwf	___fldiv@a+3
 10124     0717  3020               	movlw	32
 10125     0718  00F2               	movwf	___fldiv@a+2
 10126     0719  3000               	movlw	0
 10127     071A  00F1               	movwf	___fldiv@a+1
 10128     071B  3000               	movlw	0
 10129     071C  00F0               	movwf	___fldiv@a
 10130     071D  084B               	movf	(efgtoa@u+3)^(0+128),w
 10131     071E  00F7               	movwf	___fldiv@b+3
 10132     071F  084A               	movf	(efgtoa@u+2)^(0+128),w
 10133     0720  00F6               	movwf	___fldiv@b+2
 10134     0721  0849               	movf	(efgtoa@u+1)^(0+128),w
 10135     0722  00F5               	movwf	___fldiv@b+1
 10136     0723  0848               	movf	efgtoa@u^(0+128),w
 10137     0724  00F4               	movwf	___fldiv@b
 10138     0725  120A  158A  2092  120A  118A  	fcall	___fldiv
 10139     072A  0873               	movf	?___fldiv+3,w
 10140     072B  1683               	bsf	3,5	;RP0=1, select bank1
 10141     072C  1303               	bcf	3,6	;RP1=0, select bank1
 10142     072D  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10143     072E  0872               	movf	?___fldiv+2,w
 10144     072F  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10145     0730  0871               	movf	?___fldiv+1,w
 10146     0731  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10147     0732  0870               	movf	?___fldiv,w
 10148     0733  00C8               	movwf	efgtoa@u^(0+128)
 10149     0734                     l2946:
 10150                           
 10151                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 10152     0734  30FF               	movlw	255
 10153     0735  07A0               	addwf	efgtoa@ne^(0+128),f
 10154     0736  1803               	skipnc
 10155     0737  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
 10156     0738  30FF               	movlw	255
 10157     0739  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
 10158     073A                     l2948:
 10159                           
 10160                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10161     073A  3001               	movlw	1
 10162     073B  07B7               	addwf	efgtoa@i^(0+128),f
 10163     073C  1803               	skipnc
 10164     073D  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 10165     073E  3000               	movlw	0
 10166     073F  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 10167     0740                     l2950:
 10168                           
 10169                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 10170     0740  0838               	movf	(efgtoa@i+1)^(0+128),w
 10171     0741  3A80               	xorlw	128
 10172     0742  1283               	bcf	3,5	;RP0=0, select bank0
 10173     0743  1303               	bcf	3,6	;RP1=0, select bank0
 10174     0744  00CD               	movwf	??_efgtoa
 10175     0745  1683               	bsf	3,5	;RP0=1, select bank1
 10176     0746  1303               	bcf	3,6	;RP1=0, select bank1
 10177     0747  082E               	movf	(efgtoa@m+1)^(0+128),w
 10178     0748  3A80               	xorlw	128
 10179     0749  1283               	bcf	3,5	;RP0=0, select bank0
 10180     074A  1303               	bcf	3,6	;RP1=0, select bank0
 10181     074B  024D               	subwf	??_efgtoa,w
 10182     074C  1D03               	skipz
 10183     074D  2F52               	goto	u4485
 10184     074E  1683               	bsf	3,5	;RP0=1, select bank1
 10185     074F  1303               	bcf	3,6	;RP1=0, select bank1
 10186     0750  082D               	movf	efgtoa@m^(0+128),w
 10187     0751  0237               	subwf	efgtoa@i^(0+128),w
 10188     0752                     u4485:
 10189     0752  1803               	skipnc
 10190     0753  2F55               	goto	u4481
 10191     0754  2F56               	goto	u4480
 10192     0755                     u4481:
 10193     0755  2F65               	goto	l2954
 10194     0756                     u4480:
 10195     0756                     l2952:
 10196     0756  1683               	bsf	3,5	;RP0=1, select bank1
 10197     0757  1303               	bcf	3,6	;RP1=0, select bank1
 10198     0758  0843               	movf	(efgtoa@n+1)^(0+128),w
 10199     0759  3A80               	xorlw	128
 10200     075A  00FF               	movwf	btemp+1
 10201     075B  3080               	movlw	128
 10202     075C  027F               	subwf	btemp+1,w
 10203     075D  1D03               	skipz
 10204     075E  2F61               	goto	u4495
 10205     075F  304B               	movlw	75
 10206     0760  0242               	subwf	efgtoa@n^(0+128),w
 10207     0761                     u4495:
 10208     0761  1C03               	skipc
 10209     0762  2F64               	goto	u4491
 10210     0763  2F65               	goto	u4490
 10211     0764                     u4491:
 10212     0764  2DE0               	goto	l2908
 10213     0765                     u4490:
 10214     0765                     l2954:
 10215                           
 10216                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 10217     0765  304F               	movlw	79
 10218     0766  1683               	bsf	3,5	;RP0=1, select bank1
 10219     0767  1303               	bcf	3,6	;RP1=0, select bank1
 10220     0768  00B7               	movwf	efgtoa@i^(0+128)
 10221     0769  3000               	movlw	0
 10222     076A  00B8               	movwf	(efgtoa@i^(0+128)+1)
 10223     076B                     l2956:
 10224                           
 10225                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 10226     076B  0837               	movf	efgtoa@i^(0+128),w
 10227     076C  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10228     076D  0084               	movwf	4
 10229     076E  1783               	bsf	3,7	;select IRP bank3
 10230     076F  0180               	clrf	0
 10231     0770                     l2958:
 10232                           
 10233                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 10234     0770  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
 10235     0771  1283               	bcf	3,5	;RP0=0, select bank0
 10236     0772  1303               	bcf	3,6	;RP1=0, select bank0
 10237     0773  00CD               	movwf	??_efgtoa
 10238     0774  1683               	bsf	3,5	;RP0=1, select bank1
 10239     0775  1303               	bcf	3,6	;RP1=0, select bank1
 10240     0776  0842               	movf	efgtoa@n^(0+128),w
 10241     0777  1283               	bcf	3,5	;RP0=0, select bank0
 10242     0778  1303               	bcf	3,6	;RP1=0, select bank0
 10243     0779  02CD               	subwf	??_efgtoa,f
 10244     077A  1683               	bsf	3,5	;RP0=1, select bank1
 10245     077B  1303               	bcf	3,6	;RP1=0, select bank1
 10246     077C  0837               	movf	efgtoa@i^(0+128),w
 10247     077D  1283               	bcf	3,5	;RP0=0, select bank0
 10248     077E  1303               	bcf	3,6	;RP1=0, select bank0
 10249     077F  074D               	addwf	??_efgtoa,w
 10250     0780  00F0               	movwf	memcpy@d1
 10251     0781  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
 10252     0782  00F1               	movwf	memcpy@s1
 10253     0783  1683               	bsf	3,5	;RP0=1, select bank1
 10254     0784  1303               	bcf	3,6	;RP1=0, select bank1
 10255     0785  0843               	movf	(efgtoa@n+1)^(0+128),w
 10256     0786  00F3               	movwf	memcpy@n+1
 10257     0787  0842               	movf	efgtoa@n^(0+128),w
 10258     0788  00F2               	movwf	memcpy@n
 10259     0789  160A  158A  271E  120A  118A  	fcall	_memcpy
 10260     078E                     l2960:
 10261                           
 10262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10263     078E  1683               	bsf	3,5	;RP0=1, select bank1
 10264     078F  1303               	bcf	3,6	;RP1=0, select bank1
 10265     0790  0842               	movf	efgtoa@n^(0+128),w
 10266     0791  0237               	subwf	efgtoa@i^(0+128),w
 10267     0792  00C2               	movwf	efgtoa@n^(0+128)
 10268     0793  0843               	movf	(efgtoa@n+1)^(0+128),w
 10269     0794  1C03               	skipc
 10270     0795  0A43               	incf	(efgtoa@n+1)^(0+128),w
 10271     0796  0238               	subwf	(efgtoa@i+1)^(0+128),w
 10272     0797  00C3               	movwf	(efgtoa@n+1)^(0+128)
 10273     0798                     l2962:
 10274                           
 10275                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 10276     0798  0841               	movf	efgtoa@sign^(0+128),w
 10277     0799  1D03               	btfss	3,2
 10278     079A  2F9C               	goto	u4501
 10279     079B  2F9E               	goto	u4500
 10280     079C                     u4501:
 10281     079C  3001               	movlw	1
 10282     079D  2F9F               	goto	u4510
 10283     079E                     u4500:
 10284     079E  3000               	movlw	0
 10285     079F                     u4510:
 10286     079F  1283               	bcf	3,5	;RP0=0, select bank0
 10287     07A0  1303               	bcf	3,6	;RP1=0, select bank0
 10288     07A1  00CD               	movwf	??_efgtoa
 10289     07A2  01CE               	clrf	??_efgtoa+1
 10290     07A3  084D               	movf	??_efgtoa,w
 10291     07A4  1683               	bsf	3,5	;RP0=1, select bank1
 10292     07A5  1303               	bcf	3,6	;RP1=0, select bank1
 10293     07A6  00B7               	movwf	efgtoa@i^(0+128)
 10294     07A7  1283               	bcf	3,5	;RP0=0, select bank0
 10295     07A8  1303               	bcf	3,6	;RP1=0, select bank0
 10296     07A9  084E               	movf	??_efgtoa+1,w
 10297     07AA  1683               	bsf	3,5	;RP0=1, select bank1
 10298     07AB  1303               	bcf	3,6	;RP1=0, select bank1
 10299     07AC  00B8               	movwf	(efgtoa@i+1)^(0+128)
 10300     07AD                     l2964:
 10301                           
 10302                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10303     07AD  0841               	movf	efgtoa@sign^(0+128),w
 10304     07AE  1903               	btfsc	3,2
 10305     07AF  2FB1               	goto	u4521
 10306     07B0  2FB2               	goto	u4520
 10307     07B1                     u4521:
 10308     07B1  2FBE               	goto	l2968
 10309     07B2                     u4520:
 10310     07B2                     l2966:
 10311                           
 10312                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 10313     07B2  30FF               	movlw	255
 10314     07B3  07C2               	addwf	efgtoa@n^(0+128),f
 10315     07B4  1803               	skipnc
 10316     07B5  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 10317     07B6  30FF               	movlw	255
 10318     07B7  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 10319     07B8  0842               	movf	efgtoa@n^(0+128),w
 10320     07B9  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10321     07BA  0084               	movwf	4
 10322     07BB  0841               	movf	efgtoa@sign^(0+128),w
 10323     07BC  1783               	bsf	3,7	;select IRP bank3
 10324     07BD  0080               	movwf	0
 10325     07BE                     l2968:
 10326                           
 10327                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10328     07BE  0837               	movf	efgtoa@i^(0+128),w
 10329     07BF  02B1               	subwf	efgtoa@w^(0+128),f
 10330     07C0  0838               	movf	(efgtoa@i+1)^(0+128),w
 10331     07C1  1C03               	skipc
 10332     07C2  03B2               	decf	(efgtoa@w+1)^(0+128),f
 10333     07C3  02B2               	subwf	(efgtoa@w+1)^(0+128),f
 10334     07C4                     l2970:
 10335                           
 10336                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 10337     07C4  1283               	bcf	3,5	;RP0=0, select bank0
 10338     07C5  1303               	bcf	3,6	;RP1=0, select bank0
 10339     07C6  0846               	movf	efgtoa@fp,w
 10340     07C7  00A8               	movwf	pad@fp
 10341     07C8  0847               	movf	efgtoa@fp+1,w
 10342     07C9  00A9               	movwf	pad@fp+1
 10343     07CA  1683               	bsf	3,5	;RP0=1, select bank1
 10344     07CB  1303               	bcf	3,6	;RP1=0, select bank1
 10345     07CC  0842               	movf	efgtoa@n^(0+128),w
 10346     07CD  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10347     07CE  1283               	bcf	3,5	;RP0=0, select bank0
 10348     07CF  1303               	bcf	3,6	;RP1=0, select bank0
 10349     07D0  00AA               	movwf	pad@buf
 10350     07D1  1683               	bsf	3,5	;RP0=1, select bank1
 10351     07D2  1303               	bcf	3,6	;RP1=0, select bank1
 10352     07D3  0832               	movf	(efgtoa@w+1)^(0+128),w
 10353     07D4  1283               	bcf	3,5	;RP0=0, select bank0
 10354     07D5  1303               	bcf	3,6	;RP1=0, select bank0
 10355     07D6  00AC               	movwf	pad@p+1
 10356     07D7  1683               	bsf	3,5	;RP0=1, select bank1
 10357     07D8  1303               	bcf	3,6	;RP1=0, select bank1
 10358     07D9  0831               	movf	efgtoa@w^(0+128),w
 10359     07DA  1283               	bcf	3,5	;RP0=0, select bank0
 10360     07DB  1303               	bcf	3,6	;RP1=0, select bank0
 10361     07DC  00AB               	movwf	pad@p
 10362     07DD  160A  118A  21C5  120A  118A  	fcall	_pad
 10363     07E2                     l677:
 10364     07E2  0008               	return
 10365     07E3                     __end_of_efgtoa:

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     58      72
    BANK3            96      0      96
    BANK2            96      0       0

Pointer List with Targets:

    ds18b20_read@raw_temp_value	PTR int  size(1) Largest target is 2
		 -> raw_temp(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> temp_str(BANK3[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> temp_str(BANK3[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    lcd_string@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[14]), temp_str(BANK3[16]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S682$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> temp_str(BANK3[16]), 

    S682$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> temp_str(BANK3[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _floorf->___fldiv
    ___flmul->___xxtofl
    _lcd_string->_lcd_data
    _lcd_initialize->_lcd_command
    _ds18b20_read->_ds18b20_read_byte
    _ds18b20_read->_ds18b20_write_byte
    _ds18b20_write_byte->_ds18b20_write_bit
    _ds18b20_read_byte->_ds18b20_read_bit

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15024
                                             71 BANK0      3     3      0
                            ___flmul
                           ___xxtofl
                       _ds18b20_read
                        _lcd_command
                     _lcd_initialize
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   12507
                                             58 BANK0     13    13      0
                                             52 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4   12302
                                             57 BANK0      1     1      0
                                             48 BANK1      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4   12168
                                             49 BANK0      8     8      0
                                             44 BANK1      4     0      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     278
                                              6 COMMON     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   11098
                                             38 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     1      2      77
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     753
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     333
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4      69
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     137
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2039
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1990
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    1620
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     192
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1132
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     1      3     152
                                              3 COMMON     4     1      3
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0      58
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_read                                         3     2      1     292
                                              4 COMMON     3     2      1
                  _ds18b20_read_byte
                      _ds18b20_start
                 _ds18b20_write_byte
 ---------------------------------------------------------------------------------
 (2) _ds18b20_write_byte                                   2     2      0     106
                                              2 COMMON     2     2      0
                  _ds18b20_write_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_write_bit                                    2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_start                                        3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_read_byte                                    2     2      0      94
                                              2 COMMON     2     2      0
                   _ds18b20_read_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_read_bit                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _ds18b20_read
     _ds18b20_read_byte
       _ds18b20_read_bit
     _ds18b20_start
     _ds18b20_write_byte
       _ds18b20_write_bit
   _lcd_command
   _lcd_initialize
     _lcd_command
   _lcd_string
     _lcd_data
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     74      79     98.8%
BANK1               80     58      72     90.0%
BANK3               96      0      96    100.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     261      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Nov 02 09:29:21 2024

              ___fldiv@aexp 002C                ___fldiv@bexp 002B                           pc 0002  
              lcd_data@data 0072                ___fldiv@sign 0024                          l43 109C  
                        l52 1E95                          l61 1EC3                          l55 1EE0  
                        l47 1F1D                          l72 1FD6                          l65 11C4  
                        l81 1EFE                          l75 1127                          l84 10F8  
                        fsr 0004         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
                       l170 1F6F                         l340 1160                         l172 1F87  
                       l502 0C53                         l351 14A5                         l360 1044  
                       l345 1175                         l513 0CB1                         l505 0C91  
                       l514 0CBD                         l611 003E                         l339 1144  
                       l371 12C9                         l612 004F                         l356 14BE  
                       l348 1439                         l364 12DE                         l613 00CF  
                       l517 1F62                         l374 12DE                         l551 0A59  
                       l543 09DB                         l527 08E7                         l471 0ABF  
                       l703 05CC                         l624 0099                         l625 00A5  
                       l617 007D                         l529 0A61                         l633 10C9  
                       l466 0A8E                         l475 0B3E                         l803 1378  
                       l811 106F                         l492 0C0A                         l484 0CBD  
                       l820 001B                         l549 0A4D                         l573 0F71  
                       l477 0B17                         l661 11DE                         l814 0804  
                       l726 126A                         l567 0FFF                         l496 0C30  
                       l664 1206                         l736 174E                         l586 1F9C  
                       l770 1617                         l666 1217                         l674 1537  
                       l754 1FFF                         l579 0FF5                         l771 16D8  
                       l747 17FF                         l588 1FAE                         l764 0891  
                       l693 0325                         l677 07E2                         l775 16D0  
                       l791 1F3E                         l785 1EAA                         l788 1F30  
                       _pad 11C5                         fsr0 0004                         indf 0000  
              ___flmul@aexp 0032                ___flmul@bexp 0033                ___flmul@sign 002D  
              ___flmul@temp 0038                ___flmul@prod 0034                ___fltol@exp1 0079  
                      l2100 0AA1                        l2110 0AB5                        l2102 0AA2  
                      l3000 1F12                        l2200 0BE8                        l2120 0ACD  
                      l2104 0AA7                        l2112 0AB7                        l3010 1ED5  
                      l3002 1F16                        l2202 0BED                        l2130 0AD7  
                      l2122 0ACF                        l2114 0AC5                        l2106 0AAC  
                      l3012 1EDA                        l3004 1EC4                        l3100 1070  
                      l2220 0C38                        l2212 0C20                        l2204 0BFC  
                      l2140 0AE1                        l2132 0AD9                        l2124 0AD1  
                      l2116 0AC9                        l2108 0AB4                        l2060 12F2  
                      l3020 16EA                        l3014 1EDF                        l3006 1ECA  
                      l3102 1076                        l2310 1174                        l2302 1128  
                      l2230 0C46                        l2222 0C3A                        l2214 0C2B  
                      l2206 0C12                        l2150 0AEA                        l2142 0AE3  
                      l2134 0ADB                        l2126 0AD3                        l2118 0ACB  
                      l2070 0A64                        l2062 130A                        l2054 12DF  
                      l3030 170D                        l3022 16EE                        l3008 1ECE  
                      l3104 107F                        l3120 1E8B                        l3112 1E83  
                      l2400 08B3                        l2304 113C                        l2320 1455  
                      l2240 0C5D                        l2232 0C4A                        l2224 0C3F  
                      l2216 0C2F                        l2208 0C17                        l2160 0B2A  
                      l2152 0B01                        l2144 0AE5                        l2136 0ADD  
                      l2128 0AD5                        l2080 0A76                        l2072 0A66  
                      l2064 133C                        l2056 12E5                        l3040 1739  
                      l3032 1710                        l3024 16F4                        l3106 1087  
                      l3122 1E8D                        l2410 08C5                        l2402 08B4  
                      l2306 1158                        l2330 14BD                        l2322 1459  
                      l2314 141B                        l2250 0C9B                        l2242 0C6B  
                      l2234 0C50                        l2218 0C34                        l2226 0C41  
                      l2170 0B47                        l2162 0B2B                        l2154 0B1B  
                      l2146 0AE7                        l2138 0ADF                        l2090 0A90  
                      l2082 0A7B                        l2074 0A6C                        l2058 12EB  
                      l3050 1753                        l3042 1742                        l3034 1717  
                      l3026 16F8                        l3018 16D9                        l3210 10AD  
                      l3202 109D                        l3140 1EBC                        l3132 1EAD  
                      l3108 108C                        l3124 1E8F                        l3220 1EF6  
                      l2500 09F3                        l2420 08DC                        l2412 08C9  
                      l2404 08B6                        l2308 1172                        l2324 147D  
                      l2316 1431                        l2260 0CAF                        l2252 0CA3  
                      l2244 0C6F                        l2180 0B6F                        l2228 0C45  
                      l2164 0B36                        l2156 0B24                        l2148 0AE9  
                      l2092 0A92                        l2084 0A83                        l2076 0A70  
                      l2068 0A62                        l3060 179B                        l3052 175E  
                      l3044 174B                        l3036 1726                        l3028 1709  
                      l3212 10BC                        l3204 10A1                        l3230 0036  
                      l3142 1EC2                        l3134 1EAF                        l3126 1EAB  
                      l3118 1E84                        l3150 1101                        l3222 1EF8  
                      l2510 0A31                        l2502 09F7                        l2430 08FD  
                      l2422 08DD                        l2414 08CA                        l2406 08BE  
                      l2326 1481                        l2318 144D                        l2270 1F92  
                      l2334 103A                        l2262 0CB8                        l2254 0CA8  
                      l2246 0C8F                        l2238 0C58                        l2190 0B8A  
                      l2182 0B78                        l2174 0B50                        l2158 0B26  
                      l2166 0B38                        l2094 0A98                        l2086 0A84  
                      l2078 0A71                        l2350 1290                        l2342 126B  
                      l3070 17CF                        l3062 17A3                        l3054 176B  
                      l3046 1751                        l3038 172A                        l3206 10A9  
                      l3240 0064                        l3232 0046                        l3224 001D  
                      l3136 1EB9                        l3160 111B                        l3152 1102  
                      l3216 1EE1                        l2520 0A55                        l2512 0A40  
                      l2504 0A10                        l2440 0914                        l2416 08CF  
                      l2424 08DF                        l2408 08C1                        l2328 14BB  
                      l2272 1F96                        l2600 0E4E                        l2336 1042  
                      l2264 0CBC                        l2256 0CA9                        l2248 0C96  
                      l2184 0B7A                        l2176 0B67                        l2168 0B42  
                      l2192 0B8D                        l2096 0A99                        l2088 0A86  
                      l2352 1291                        l2344 1274                        l2280 1045  
                      l3064 17AD                        l3056 1783                        l3072 17DA  
                      l3208 10AB                        l3250 0093                        l3242 0066  
                      l3226 0022                        l3138 1EBA                        l3090 10DC  
                      l3082 10CB                        l3162 1124                        l3154 110B  
                      l3146 10FA                        l3218 1EE3                        l2522 0A57  
                      l2514 0A44                        l2506 0A16                        l2450 0940  
                      l2442 0926                        l2426 08EF                        l2434 0906  
                      l2418 08D4                        l2274 1FA5                        l2266 1F89  
                      l2610 0EF5                        l2602 0E6B                        l2530 0CC2  
                      l2338 1044                        l2258 0CAD                        l2194 0BA3  
                      l2186 0B7E                        l2178 0B6B                        l2098 0A9D  
                      l2354 1299                        l2282 104A                        l2290 1F65  
                      l3170 1FFB                        l3260 00C6                        l3252 009D  
                      l3244 0074                        l3236 0052                        l3228 0026  
                      l3180 1180                        l3092 10DF                        l3084 10CF  
                      l3156 110E                        l3148 10FE                        l2516 0A4C  
                      l2508 0A23                        l2452 0945                        l2460 0965  
                      l2444 092E                        l2436 090B                        l2428 08FB  
                      l2276 1FAA                        l2268 1F8B                        l2620 0F41  
                      l2612 0F1D                        l2604 0E96                        l2540 0CD2  
                      l2532 0CC4                        l2196 0BE3                        l2188 0B7F  
                      l2380 1F43                        l2372 12BE                        l2364 12A7  
                      l2356 129B                        l2348 127D                        l2700 0865  
                      l2284 105A                        l2292 1F69                        l3076 17E2  
                      l3164 1FD7                        l3262 00C7                        l3254 00A7  
                      l3246 0084                        l3238 005D                        l3094 10EB  
                      l3086 10D2                        l3174 1FAF                        l3158 111A  
                      l2518 0A51                        l2470 0994                        l2462 0977  
                      l2454 0957                        l2446 0936                        l2390 089C  
                      l2630 0F56                        l2622 0F42                        l2614 0F26  
                      l2606 0EA4                        l2550 0CEC                        l2542 0CD7  
                      l2534 0CC8                        l2198 0BE5                        l2374 12CE  
                      l2358 129F                        l2366 12B7                        l2702 086B  
                      l2286 1062                        l2710 0003                        l2294 1F76  
                      l3166 1FDE                        l3270 1388                        l3256 00BD  
                      l3248 008F                        l3184 1182                        l3096 10EC  
                      l3088 10D3                        l3176 1FCD                        l2480 09AC  
                      l2472 099C                        l2464 0978                        l2456 095B  
                      l2448 093E                        l2392 08A0                        l2384 0892  
                      l2640 0F7B                        l2632 0F5A                        l2624 0F4B  
                      l2616 0F34                        l2608 0ECF                        l2560 0CFF  
                      l2552 0CF0                        l2544 0CDF                        l2536 0CCC  
                      l2528 0CBE                        l2376 12D3                        l2712 0005  
                      l2800 15AF                        l2296 1F7D                        l2288 1F63  
                      l3168 1FED                        l3272 1394                        l3280 13F7  
                      l3258 00C2                        l3194 11A3                        l3186 118E  
                      l3178 1176                        l3098 10F5                        l2490 09C4  
                      l2482 09B5                        l2474 099E                        l2466 098C  
                      l2458 095C                        l2394 08A1                        l2386 0896  
                      l2650 0FB9                        l2642 0F89                        l2634 0F6E  
                      l2618 0F3D                        l2626 0F51                        l2570 0D1B  
                      l2562 0D07                        l2554 0CF4                        l2546 0CE1  
                      l2538 0CCD                        l2378 1F3F                        l2706 088D  
                      l2730 161D                        l2722 15CA                        l2714 1E96  
                      l2802 15BF                        l2810 00D0                        l2298 1F83  
                      l3282 13FD                        l3274 13D4                        l3266 1379  
                      l3196 11BB                        l3188 1198                        l2492 09D8  
                      l2476 09A7                        l2484 09BB                        l2468 098E  
                      l2396 08A6                        l2388 0898                        l2660 0FEB  
                      l2652 0FC4                        l2644 0F8D                        l2628 0F55  
                      l2580 0D5A                        l2564 0D09                        l2556 0CF5  
                      l2548 0CE9                        l2740 167C                        l2732 1637  
                      l2724 15EA                        l2716 1E9A                        l2900 05C6  
                      l2820 0106                        l2812 00DA                        l3284 1408  
                      l3276 13E5                        l3268 1383                        l3198 11C3  
                      l2486 09BF                        l2478 09AB                        l2398 08AB  
                      l2662 0FEF                        l2654 0FD3                        l2646 0FA6  
                      l2638 0F76                        l2590 0DE1                        l2582 0D76  
                      l2574 0D24                        l2566 0D11                        l2558 0CFA  
                      l2742 168D                        l2726 1609                        l2718 1E9B  
                      l2670 11C5                        l2910 0638                        l2902 05DA  
                      l2830 0247                        l2822 0145                        l2814 00DC  
                      l3278 13EB                        l2496 09E0                        l2488 09C0  
                      l2664 0FF0                        l2656 0FDD                        l2648 0FAC  
                      l2592 0DEF                        l2584 0DA0                        l2576 0D32  
                      l2568 0D16                        l2744 16A6                        l2736 164C  
                      l2728 1616                        l2752 1F1E                        l2680 11F0  
                      l2672 11CB                        l2920 0663                        l2912 064E  
                      l2904 05DB                        l2832 0268                        l2824 01A3  
                      l2840 0306                        l2760 14BF                        l2498 09E5  
                      l2666 0FF7                        l2658 0FDF                        l2594 0E0C  
                      l2586 0DBC                        l2578 0D3F                        l2690 083C  
                      l2746 16AF                        l2738 1665                        l2754 1F23  
                      l2682 11F8                        l2674 11D6                        l2930 067E  
                      l2922 0669                        l2914 0654                        l2906 05DD  
                      l2850 0335                        l2842 030E                        l2834 026E  
                      l2826 01DC                        l2818 00F6                        l2770 151C  
                      l2762 14C2       __end_of_ds18b20_start 109D                        l2596 0E1A  
                      l2588 0DD8                        l2692 0842                        l2748 16C8  
                      l2756 1F28                        l2684 120C                        l2676 11DC  
                      l2940 069D                        l2932 0684                        l2924 066F  
                      l2916 0659                        l2908 05E0                        l2852 0339  
                      l2860 034F                        l2844 0314                        l2828 023C  
                      l2780 1533                        l2772 1520                        l2764 14DA  
                      l2598 0E37                        l2694 085B                        l2686 0805  
                      l2758 1F2A                        l2678 11E1                        l2942 06A3  
                      l2926 0672                        l2918 065D                        l2934 068A  
                      l2950 0740                        l2870 03B3                        l2862 0351  
                      l2854 0341                        l2846 031F                        l2838 02CD  
                      l2790 156D                        l2782 1539                        l2774 1524  
                      l2766 1501                        ?_pad 0028                        l2696 0860  
                      l2688 0825                        l2960 078E                        l2952 0756  
                      l2944 0715                        l2936 0690                        l2928 0678  
                      l2880 049F                        l2872 0425                        l2864 0359  
                      l2856 0343                        l2848 032F                        l2792 1575  
                      l2784 154C                        l2776 1529                        l2768 1505  
                      l2970 07C4                        l2962 0798                        l2954 0765  
                      l2946 0734                        l2938 0697                        l2890 050A  
                      l2882 04D6                        l2874 0444                        l2866 0362  
                      l2858 0349                        l2786 1553                        l2778 152E  
                      l2964 07AD                        l2956 076B                        l2948 073A  
                      l2892 052B                        l2884 04E1                        l2868 03A0  
                      l2876 044A                        l2788 1563                        l2796 1591  
                      l2980 122D                        l2966 07B2                        l2958 0770  
                      l2894 0579                        l2886 04FC                        l2878 0460  
                      l2798 15A8                        l2982 123B                        l2974 1218  
                      l2992 1F00                        l2968 07BE                        l2896 0581  
                      l2888 0502                        l2984 1250                        l2976 121A  
                      l2994 1F06                        l2898 05C0                        l2978 1229  
                      l2986 1255                        l2996 1F0A                        l2988 1266  
                      l2998 1F0F                        STR_1 101E                        STR_2 1010  
                      STR_3 102C                        STR_6 1030                        u3100 1481  
                      u3020 1F83                        u3101 1480                        u3021 1F82  
                      u3005 1F70                        u3030 113C                        u3031 113B  
                      u3111 1490                        u3015 1F77                        u3040 1158  
                      u3120 14BB                        u3112 1491                        u3200 12BD  
                      u4000 0879                        u3041 1157                        u3121 14BA  
                      u3113 1496                        u3201 12BC                        u3050 1172  
                      u3114 1497                        u3130 1042                        u4010 0885  
                      u3051 1171                        u3115 149C                        u3131 1041  
                      u4011 0883                        u3300 08EF                        u3116 149D  
                      u3060 1431                        u2500 0A76                        u3220 12CE  
                      u3140 1274                        u4020 0886                        u4100 165A  
                      u3301 08EE                        u3125 14B7                        u3061 1430  
                      u2501 0A75                        u3221 12CD                        u3141 1273  
                      u4005 0874                        u3310 090B                        u3070 144D  
                      u2510 0A7B                        u3230 12D3                        u3150 128B  
                      u4110 1665                        u4030 001B                        u3311 090A  
                      u3055 116E                        u3071 144C                        u2511 0A7A  
                      u3231 12D2                        u3215 12C0                        u4111 1664  
                      u4031 001A                        u3400 099C                        u3320 0945  
                      u3240 08A0                        u3080 1459                        u2600 0B0B  
                      u2520 0A98                        u3160 129F                        u4040 1E9A  
                      u2440 12E5                        u4200 152E                        u3401 099B  
                      u3321 0944                        u3241 089F                        u3081 1458  
                      u2521 0A97                        u3161 129E                        u4121 166E  
                      u4105 1655                        u4041 1E99                        u2441 12E4  
                      u4201 152D                        u3250 08A6                        u2610 0B1B  
                      u2530 0AA1                        u3170 12A6                        u4130 169B  
                      u4122 1675                        u4050 15F8                        u2450 12EB  
                      u4210 154C                        u3251 08A5                        u3091 1468  
                      u2611 0B1A                        u2531 0AA0                        u3171 12A5  
                      u3155 1286                        u4123 167C                        u2451 12EA  
                      u4211 154B                        u3500 0A06                        u3420 09AB  
                      u3260 08AB                        u3092 1469                        u2700 0B7E  
                      u2620 0B2A                        u2540 0AA7                        u4140 16A6  
                      u4060 1616                        u2460 130A                        u4300 023C  
                      u4220 1553                        u3421 09AA                        u3261 08AA  
                      u3093 146E                        u2701 0B7D                        u2621 0B29  
                      u2541 0AA6                        u4141 16A5                        u4061 1615  
                      u2461 1309                        u4301 023B                        u4221 1552  
                      u3510 0A23                        u3350 095B                        u3270 08C9  
                      u3094 146F                        u2550 0AAC                        u3190 12B6  
                      u4150 16BD                        u4070 161D                        u2470 133C  
                      u4230 15A8                        u5007 1ED3                        u3511 0A22  
                      u3415 09A0                        u3351 095A                        u3335 0947  
                      u3271 08C8                        u3095 1474                        u2551 0AAB  
                      u3191 12B5                        u4135 1696                        u4071 161C  
                      u4055 15F3                        u2471 133B                        u4311 0291  
                      u4303 0238                        u4231 15A5                        u3520 0A40  
                      u3440 09BF                        u3280 08CF                        u3096 1475  
                      u3600 0D16                        u2800 0C34                        u2720 0BA3  
                      u2640 0B3E                        u2560 0AC5                        u4160 16C8  
                      u4080 162D                        u2480 135D                        u4400 04FC  
                      u4320 02CC                        u4312 0294                        u4240 15AF  
                      u5017 1EDC                        u3521 0A3F                        u3505 0A01  
                      u3441 09BE                        u3345 0950                        u3281 08CE  
                      u3601 0D15                        u2801 0C33                        u2721 0BA2  
                      u2641 0B3D                        u2561 0AC4                        u3185 12A8  
                      u4161 16C7                        u4065 1612                        u4401 04FB  
                      u4321 02CB                        u4313 029B                        u4241 15AE  
                      u3530 0A55                        u3450 09C4                        u3370 0977  
                      u3290 08D4                        u3610 0D1B                        u2810 0C3F  
                      u2650 0B42                        u2570 0AC9                        u2490 0A70  
                      u4090 164B                        u4170 1F3E                        u4410 0502  
                      u4330 0306                        u4314 029E                        u4250 00F5  
                      u3531 0A54                        u3515 0A1F                        u3451 09C3  
                      u3435 09AE                        u3371 0976                        u3291 08D3  
                      u3611 0D1A                        u2811 0C3E                        u2731 0BBC  
                      u2723 0B9F                        u2715 0B83                        u2651 0B41  
                      u2635 0B2F                        u2571 0AC8                        u2491 0A6F  
                      u4155 16B8                        u4091 164A                        u4171 1F3D  
                      u2475 1338                        u4411 0501                        u4331 0305  
                      u4323 02C8                        u4315 02A5                        u4251 00F4  
                      u3460 09D8                        u3380 098C                        u3540 0CCC  
                      u2900 0C96                        u2820 0C45                        u2740 0BD0  
                      u2732 0BBD                        u2660 0B47                        u2580 0B01  
                      u4500 079E                        u4420 0579                        u4340 0314  
                      u4316 02A8                        u4180 1501                        u3525 0A3C  
                      u3461 09D7                        u3365 095E                        u3701 0E5D  
                      u3621 0D68                        u3541 0CCB                        u2901 0C95  
                      u2821 0C44                        u2741 0BD1                        u2733 0BC2  
                      u2661 0B46                        u2581 0B00                        u4085 1628  
                      u4501 079C                        u4421 0578                        u4341 0313  
                      u4261 0168                        u4181 1500                        u3470 09DF  
                      u3390 0994                        u3702 0E64                        u3622 0D6F  
                      u3550 0CD2                        u2910 0C9B                        u2830 0C4A  
                      u2750 0BED                        u2742 0BD6                        u2734 0BC3  
                      u2590 0B0A                        u4510 079F                        u4430 05C6  
                      u4350 0335                        u4270 01A3                        u4262 016B  
                      u4190 1529                        u3471 09DE                        u3391 0993  
                      u3375 0973                        u3711 0E88                        u3703 0E6B  
                      u3631 0D84                        u3623 0D76                        u3551 0CD1  
                      u2911 0C9A                        u2831 0C49                        u2751 0BEC  
                      u2743 0BD7                        u2735 0BC8                        u2671 0B59  
                      u2591 0B08                        u4431 05C5                        u4351 0334  
                      u4271 01A2                        u4263 0172                        u4191 1528  
                      u3480 09E5                        u3712 0E8F                        u3632 0D8B  
                      u3560 0CD7                        u2920 0CA8                        u2840 0C50  
                      u2760 0C12                        u2736 0BC9                        u2680 0B6B  
                      u2672 0B60                        u4520 07B2                        u4440 0638  
                      u4360 0339                        u4280 01DC                        u4264 0175  
                      u3481 09E4                        u3385 097F                        u3721 0EB3  
                      u3713 0E96                        u3641 0DAE                        u3633 0D92  
                      u3561 0CD6                        u2921 0CA7                        u2841 0C4F  
                      u2761 0C11                        u2681 0B6A                        u2673 0B67  
                      u2585 0AFD                        u4521 07B1                        u4441 0637  
                      u4361 0338                        u4281 01DB                        u4273 019F  
                      u4265 017C                        u4610 109B                        u3490 09F7  
                      u3386 0980                        u3810 0F55                        u3730 0EDB  
                      u3722 0EBA                        u3642 0DB5                        u3570 0CF4  
                      u2930 0CAD                        u2850 0C57                        u2770 0C17  
                      u2690 0B6F                        u4450 0659                        u4370 0349  
                      u4266 017F                        u4530 1229                        u4611 1099  
                      u3491 09F6                        u3387 0985                        u3811 0F54  
                      u3723 0EC1                        u3651 0DCA                        u3643 0DBC  
                      u3571 0CF3                        u2931 0CAC                        u2851 0C56  
                      u2771 0C16                        u2691 0B6E                        u4451 0658  
                      u4371 0348                        u4291 0201                        u4531 1228  
                      u4620 109C                        u4700 11A2                        u3388 0986  
                      u3900 0FEF                        u3820 0F5A                        u3652 0DD1  
                      u3580 0CFA                        u2940 0CBC                        u2860 0C5D  
                      u4460 065D                        u4380 0460                        u4292 0204  
                      u4540 1266                        u4701 11A1                        u4605 10E2  
                      u3389 098B                        u3901 0FEE                        u3821 0F59  
                      u3805 0F44                        u3741 0EE7                        u3653 0DD8  
                      u3581 0CF9                        u2941 0CBB                        u2861 0C5C  
                      u4461 065C                        u4445 0634                        u4381 045F  
                      u4293 020B                        u4541 1265                        u4550 1F0F  
                      u4630 1E95                        u4710 1EFE                        u2950 1F96  
                      u3830 0F6E                        u3750 0F03                        u3742 0EEE  
                      u3590 0CFF                        u2870 0C6F                        u2790 0C2F  
                      u3910 11CB                        u4470 0690                        u4390 04D6  
                      u4294 020E                        u4551 1F0E                        u4631 1E94  
                      u4711 1EFD                        u2951 1F95                        u3831 0F6D  
                      u3743 0EF5                        u3735 0ED6                        u3671 0DFE  
                      u3591 0CFE                        u2871 0C6E                        u2791 0C2E  
                      u3911 11CA                        u4471 068F                        u4391 04D5  
                      u4295 0215                        u4800 0093                        u4720 0022  
                      u4640 1EB9                        u3840 0F75                        u3672 0E05  
                      u2880 0C80                        u3920 11DC                        u4480 0756  
                      u4296 0218                        u4560 16EA                        u4801 0092  
                      u4721 0021                        u4641 1EB8                        u3841 0F74  
                      u3761 0F0F                        u3681 0E29                        u3673 0E0C  
                      u3665 0DDA                        u2785 0C24                        u3921 11DB  
                      u4481 0755                        u4385 045C                        u4561 16E9  
                      u4810 0099                        u4730 0026                        u4650 1EC2  
                      u2970 1FAA                        u3850 0F7B                        u3762 0F16  
                      u3682 0E30                        u2890 0C8F                        u3930 1206  
                      u4490 0765                        u4570 170D                        u4811 0098  
                      u4731 0025                        u4651 1EC1                        u2971 1FA9  
                      u3851 0F7A                        u3763 0F1D                        u3755 0EFE  
                      u3683 0E37                        u2891 0C8E                        u3931 1205  
                      u4491 0764                        u4571 170C                        u4820 009D  
                      u4740 0046                        u3860 0F8D                        u2980 106F  
                      u3940 120C                        u4580 1726                        u4821 009C  
                      u4741 0045                        u2965 1F9D                        u3861 0F8C  
                      u2885 0C7B                        u2981 106E                        u3941 120B  
                      u4485 0752                        u4581 1725                        u4830 00B2  
                      u3870 0F9C                        u3790 0F41                        u3950 0833  
                      u2990 1F69                        u4590 176A                        u4670 1FFB  
                      u3791 0F40                        u3775 0F1F                        u3695 0E39  
                      u3935 1202                        u4495 0761                        u2991 1F68  
                      u4591 1769                        u4671 1FFA                        u4840 00C2  
                      u4760 0063                        u4680 1180                        u3880 0FB9  
                      u3960 0842                        u4841 00C1                        u4761 0062  
                      u4681 117F                        u4665 1111                        u3881 0FB8  
                      u3785 0F36                        u3961 0841                        u4850 00C6  
                      u4690 1198                        u3890 0FD3                        u3970 0850  
                      u4851 00C5                        u4835 00AD                        u4755 0055  
                      u4691 1197                        u4907 1FD1                        u3891 0FD2  
                      u3875 0F97                        u3955 082E                        u4780 0083  
                      u3980 085B                        u4860 1394                        u4781 0082  
                      u4917 10D7                        u3885 0FB5                        u3981 085A  
                      u4861 1393                        u3990 086B                        u4775 0075  
                      u4927 10F0                        u3895 0FCF                        u3991 086A  
                      u3975 084B                        u4937 1F08                        u4795 0088  
                      u4947 1F14                        u4957 1F1B                        u4877 1410  
                      u4967 107A                        u4887 1106                        u4977 1084  
                      u4897 111F                        u4987 1090                        u4997 1ECC  
                      _dbuf 0190                        _labs 1E96                        _main 1379  
                      _prec 006A                        pad@i 002D                        pad@p 002B  
                      btemp 007E               ___fpclassifyf 0805                        start 0000  
               lcd_string@i 0076             ___fldiv@new_exp 0025                       ??_pad 007D  
             ___fltol@sign1 0078                       ?_labs 0070             __end_of___fladd 0CBE  
                     ?_main 0070            _ds18b20_read_bit 1EC4             __end_of___fldiv 0A62  
           __end_of___flneg 1045             __end_of___flmul 1000             __end_of___flsub 1F63  
           __end_of___fltol 12DF                vfpfcnvrt@fmt 00CE                       _PORTD 0008  
                     _flags 006C         read_prec_or_width@c 0078         read_prec_or_width@n 0079  
                     _fputc 12DF                       _fputs 1045                       labs@a 0070  
                     pad@fp 0028                       _width 00E6                       _putch 0804  
     ds18b20_start@response 0072                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 10CA              ?___fpclassifyf 0070  
           __initialization 07E3                __end_of_labs 1EAB                __end_of_main 141B  
                    ??_labs 0074                      ??_main 0067              lcd_command@cmd 0072  
__end_of_read_prec_or_width 126B  ds18b20_read@raw_temp_value 0074                      ?_fputc 0070  
                    ?_fputs 0020           _ds18b20_read_byte 1EAB                      ?_putch 0070  
        ?_ds18b20_read_byte 0070  __end_of_ds18b20_write_byte 1E96            __end_of___xxtofl 00D0  
       ??_ds18b20_read_byte 0072            __end_of_lcd_data 1128         ds18b20_write_byte@i 0073  
              vfprintf@cfmt 0059                      ___flge 141B                      ___fleq 1128  
                 ??___fladd 0020                      ___wmul 1F63                   ??___fldiv 0078  
                 ??___flneg 0074                   ??___flmul 0028                   ??___flsub 007E  
                 ??___fltol 0074                      _efgtoa 14BF                      _floorf 15CA  
                    _memcpy 1F1E        read_prec_or_width@ap 0077                      pad@buf 002A  
                    _strcpy 0003                      fputc@c 0070                      fputs@c 0025  
                    fputs@i 0026                      fputs@s 0020             ___fpclassifyf@e 0020  
           ___fpclassifyf@u 0022             ___fpclassifyf@x 0070   __end_of_ds18b20_read_byte 1EC4  
                    putch@c 0070            __end_of_vfprintf 2000           _ds18b20_write_bit 1EFF  
          ??_lcd_initialize 0073                   ??_sprintf 005A                  ___flge@ff1 003A  
                ___flge@ff2 003E             ??___fpclassifyf 0074               lcd_string@len 0075  
        ?_ds18b20_write_bit 0070                ___xxtofl@arg 007A               lcd_string@str 0073  
              ___xxtofl@exp 0079                ___xxtofl@val 0070                  ___fleq@ff1 0070  
                ___fleq@ff2 0074     __end_of__initialization 07FC                  ___flneg@f1 0070  
                ___fltol@f1 0070         ??_ds18b20_write_bit 0070              __pcstackCOMMON 0070  
             __end_of_fputc 1379               __end_of_fputs 1070               __end_of_putch 0805  
             ?_ds18b20_read 0074   __end_of_ds18b20_write_bit 1F1E                     ??_fputc 0074  
                   ??_fputs 0023                     ??_putch 0070          ds18b20_read@temp_h 0076  
        ds18b20_read@temp_l 0075                  __pbssBANK0 006A                  __pbssBANK1 00DA  
                __pbssBANK3 0190    __end_of_ds18b20_read_bit 1EE1           __end_of__Umul8_16 1FAF  
                _efgtoa$807 00A6                  __pmaintext 1379                     ?___flge 003A  
                   ?___fleq 0070          ds18b20_read_byte@i 0073                     ?___wmul 0070  
                   ?_efgtoa 0046                     ?_floorf 002D                     ?_memcpy 0070  
            ??_ds18b20_read 0075                     ?_strcpy 0070                   ?___xxtofl 0070  
                 ?_lcd_data 0070                  _lcd_string 1EE1                  __stringtab 1000  
      ds18b20_write_bit@bit 0071                     ___fladd 0A62                     ___fldiv 0892  
                   ___flneg 103A                     ___flmul 0CBE                     ___flsub 1F3F  
                   ___fltol 126B                   ?_vfprintf 00D0                     __ptext1 109D  
                   __ptext2 1FD7                     __ptext3 16D9                     __ptext4 1218  
                   __ptext5 1F63                     __ptext6 14BF                     __ptext7 0003  
                   __ptext8 11C5                     __ptext9 1045       read_prec_or_width@fmt 0076  
                ??___xxtofl 0074                     efgtoa@c 004C                     efgtoa@d 00AB  
                   efgtoa@e 00AF                     efgtoa@f 0048                     efgtoa@g 00C4  
                   efgtoa@h 00B9                     efgtoa@i 00B7                     efgtoa@l 00BD  
                   efgtoa@m 00AD                     efgtoa@n 00C2                     efgtoa@p 00A2  
                   efgtoa@t 00A4                     efgtoa@u 00C8                     efgtoa@w 00B1  
                ??_lcd_data 0070                     _sprintf 109D                     clrloop0 1E7B  
      end_of_initialization 07FC                     floorf@e 003B                     floorf@m 0037  
                   floorf@u 003D                     floorf@x 002D                     memcpy@d 0075  
                   memcpy@n 0072                     memcpy@s 0076                     fputc@fp 0072  
                   fputs@fp 0021          _read_prec_or_width 1218           __end_of_vfpfcnvrt 1800  
                efgtoa@mode 00A9                  efgtoa@sign 00C1         ?_read_prec_or_width 0076  
                   psplit$0 110030            vfpfcnvrt@convarg 0053                  ??_vfprintf 007E  
        _ds18b20_write_byte 1E82                     strcpy@d 0072                   _PORTBbits 0006  
                 _PORTCbits 0007                 ___fladd@grs 007B         ?_ds18b20_write_byte 0070  
             ___xxtofl@sign 0078                   _TRISBbits 0086                   _TRISCbits 0087  
                 _TRISDbits 0088        ??_read_prec_or_width 0078                 ___fldiv@grs 0027  
               ___fldiv@rem 0020                 ?_lcd_string 0073               _ds18b20_start 1070  
               ___flmul@grs 002E        __end_of_ds18b20_read 11C5               ??_lcd_command 0070  
      ??_ds18b20_write_byte 0072              __end_of___flge 14BF              __end_of___fleq 1176  
               vfpfcnvrt@ap 00CF                 vfpfcnvrt@cp 0058                 vfpfcnvrt@fp 00CC  
            __end_of___wmul 1F88              __end_of_efgtoa 07E3              __end_of_floorf 16D9  
            __end_of_memcpy 1F3F                  floorf@F521 00DA              __end_of_strcpy 001C  
       start_initialization 07E3                 __end_of_pad 1218           pnum$text6_split_1 0030  
            ?_ds18b20_start 0070       __end_of___fpclassifyf 0892           ?_ds18b20_read_bit 0070  
        ??_ds18b20_read_bit 0070                 vfprintf@fmt 00D2                    ??___flge 0042  
                  ??___fleq 0078                    ??___wmul 0074         __end_of_lcd_command 10F9  
                  ??_efgtoa 004D                   __Umul8_16 1F88                    ??_floorf 0031  
    ds18b20_write_byte@byte 0072                    ??_memcpy 0074                    ??_strcpy 0072  
                 ___fladd@a 0074                   ___fladd@b 0070                   ___fldiv@a 0070  
                 ___fldiv@b 0074                   ___flmul@a 0024                   ___flmul@b 0020  
                 ___flsub@a 003A                   ___flsub@b 003E                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0         ds18b20_read_bit@bit 0071  
                  ?___fladd 0070                    ?___fldiv 0070                    ?___flneg 0070  
                  ?___flmul 0020                    ?___flsub 003A                    ?___fltol 0070  
                ?__Umul8_16 0070                   __pstrings 1000       ds18b20_read_byte@byte 0072  
           ??_ds18b20_start 0070                    ?_sprintf 00D4              ___wmul@product 0074  
                 clear_ram0 1E7A                 _lcd_command 10CA                   _vfpfcnvrt 16D9  
               __stringbase 100F           ___wmul@multiplier 0070                _ds18b20_read 1176  
              ??_lcd_string 0076                  vfpfcnvrt@c 0057                   memcpy@tmp 0074  
                vfprintf@ap 00D3                  vfprintf@fp 00D0                 ??__Umul8_16 0072  
                ?_vfpfcnvrt 00CC          __end_of_lcd_string 1EFF          __end_of__stringtab 1010  
        ___fpclassifyf@F465 00DE                  sprintf@fmt 00D5                    ___xxtofl 001C  
                  __ptext10 12DF                    __ptext11 0804                    __ptext20 0CBE  
                  __ptext12 1F1E                    __ptext21 1F88                    __ptext13 1E96  
                  __ptext30 1E82                    __ptext22 141B                    __ptext14 15CA  
                  __ptext31 1EFF                    __ptext23 1128                    __ptext15 0805  
                  __ptext32 1070                    __ptext24 0892                    __ptext16 126B  
                  __ptext33 1EAB                    __ptext25 1EE1                    __ptext17 1F3F  
                  __ptext34 1EC4                    __ptext26 10F9                    __ptext18 0A62  
                  __ptext35 001C                    __ptext27 1FAF                    __ptext19 103A  
                  __ptext28 10CA                    __ptext29 1176                    _lcd_data 10F9  
                strcpy@dest 0070                   pnum$text6 0011              _lcd_initialize 1FAF  
                  _raw_temp 006D                    efgtoa@fp 0046                    efgtoa@ne 00A0  
                  efgtoa@pp 00A8                    efgtoa@ou 00B3                    _temp_str 01E0  
                  _vfprintf 1FD7                    memcpy@d1 0070                    memcpy@s1 0071  
                 sprintf@ap 005B      __end_of_lcd_initialize 1FD7                   strcpy@src 0071  
                 stringcode 100A                 efgtoa@nmode 00AA                 ??_vfpfcnvrt 0051  
    __Umul8_16@multiplicand 0070                 _temperature 00E2                    sprintf@f 005C  
                  sprintf@s 00D4                    stringdir 100A                    stringtab 1000  
             ___fladd@signs 0078                ___fladd@aexp 0079                ___fladd@bexp 007A  
           ?_lcd_initialize 0070        __Umul8_16@multiplier 0078                ?_lcd_command 0070  
         __Umul8_16@product 0074  
